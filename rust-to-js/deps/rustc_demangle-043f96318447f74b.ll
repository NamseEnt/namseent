; ModuleID = 'rustc_demangle.53c9c653b021c8d4-cgu.0'
source_filename = "rustc_demangle.53c9c653b021c8d4-cgu.0"
target datalayout = "e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-i128:128-n32:64-S128-ni:1:10:20"
target triple = "wasm32-unknown-wasi"

%"core::fmt::rt::Argument<'_>" = type { %"core::fmt::rt::ArgumentType<'_>" }
%"core::fmt::rt::ArgumentType<'_>" = type { ptr, [1 x i32] }

@alloc_dda1ee2b88b89b9cdac753eef7988035 = private unnamed_addr constant [1 x i8] c"0", align 1
@alloc_e1a44fd4e56181d0f80818eb5f85bb20 = private unnamed_addr constant [98 x i8] c"/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs\00", align 1
@alloc_33f06a9a51b5ca8155ec88ba5be05022 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\1E\01\00\001\00\00\00" }>, align 4
@alloc_48d31bbce195870ee4460192f8c27051 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00.\01\00\00\0E\00\00\00" }>, align 4
@alloc_a500d906b91607583596fa15e63c2ada = private unnamed_addr constant [40 x i8] c"internal error: entered unreachable code", align 1
@alloc_3621542c9e792f17a20752c922c91a76 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\001\01\00\00\16\00\00\00" }>, align 4
@alloc_339f6a175a86ddba20e036d1aaa79169 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00O\01\00\006\00\00\00" }>, align 4
@alloc_8175f7050d60b4604cdaf608ca851ec0 = private unnamed_addr constant [57 x i8] c"internal error: entered unreachable code: str::from_utf8(", align 1
@alloc_12470cffb0ed9f3cc12c6066ef64d57b = private unnamed_addr constant [4 x i8] c") = ", align 1
@alloc_f8a03abf8d32f75765565a72f02697fa = private unnamed_addr constant [34 x i8] c" was expected to have 1 char, but ", align 1
@alloc_26f74f43e03f5fbcfb46fac5c4c3a05d = private unnamed_addr constant [17 x i8] c" chars were found", align 1
@alloc_06cb04a3852cca2b7a216720382378c6 = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_8175f7050d60b4604cdaf608ca851ec0, [4 x i8] c"9\00\00\00", ptr @alloc_12470cffb0ed9f3cc12c6066ef64d57b, [4 x i8] c"\04\00\00\00", ptr @alloc_f8a03abf8d32f75765565a72f02697fa, [4 x i8] c"\22\00\00\00", ptr @alloc_26f74f43e03f5fbcfb46fac5c4c3a05d, [4 x i8] c"\11\00\00\00" }>, align 4
@alloc_5d80124afa8f916c3e64fc732302ba08 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\\\01\00\00\1A\00\00\00" }>, align 4
@alloc_a81e3c985b3a55d877d356a36dd22f29 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00U\01\00\00\19\00\00\00" }>, align 4
@alloc_867ee60e156c4fbed5389d3cac0d4d4a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00Q\01\00\00\15\00\00\00" }>, align 4
@alloc_26ab949b99873c312f958841e148f53e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00Q\01\00\00\1F\00\00\00" }>, align 4
@alloc_fe20ea9ecf86bccd62586200ff15fb98 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00N\01\00\00 \00\00\00" }>, align 4
@alloc_e94ebee2b00512ee42f26e9e16682f0c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\004\01\00\00G\00\00\00" }>, align 4
@alloc_4434b18f23383142a0b9b203a7211835 = private unnamed_addr constant [16 x i8] c"{invalid syntax}", align 1
@alloc_e8ccb4b2ed7221d8ad4a7e8fa563f60a = private unnamed_addr constant [25 x i8] c"{recursion limit reached}", align 1
@alloc_ce923a89401aec228a1b144297717761 = private unnamed_addr constant [4 x i8] c"bool", align 1
@alloc_9b5c8091e3b549959da5ff7ce59718f9 = private unnamed_addr constant [4 x i8] c"char", align 1
@alloc_d348ccd5829a0fec2de1c22281fe17d9 = private unnamed_addr constant [3 x i8] c"str", align 1
@alloc_ae6dc619079e3c3b08144a35532ecff7 = private unnamed_addr constant [2 x i8] c"()", align 1
@alloc_468bbdcdbefe19b6476616d87880f70c = private unnamed_addr constant [2 x i8] c"i8", align 1
@alloc_b65da51539f621df7a047bc43773eb81 = private unnamed_addr constant [3 x i8] c"i16", align 1
@alloc_f5bb2e494f5d1658dbc347d7b24d2ac3 = private unnamed_addr constant [3 x i8] c"i32", align 1
@alloc_b7a8a06bcc169bbf687e36ae2ac3129c = private unnamed_addr constant [3 x i8] c"i64", align 1
@alloc_fc155f0a6f9ce04075e55a71ca237d6b = private unnamed_addr constant [4 x i8] c"i128", align 1
@alloc_72df7fce5c308ce6e1f7311558c9728e = private unnamed_addr constant [5 x i8] c"isize", align 1
@alloc_df66aaff7dc04933728ad5e7db359d0f = private unnamed_addr constant [2 x i8] c"u8", align 1
@alloc_0d3fdde1e4251889fe20be0554d3a4df = private unnamed_addr constant [3 x i8] c"u16", align 1
@alloc_40dca76ea60e772225aeb9a5dae9c756 = private unnamed_addr constant [3 x i8] c"u32", align 1
@alloc_4c3daea643e86fcf49e0a8dcf3e4c20b = private unnamed_addr constant [3 x i8] c"u64", align 1
@alloc_c6dac74b65b8f5d0fd6a204546100ec0 = private unnamed_addr constant [4 x i8] c"u128", align 1
@alloc_087073340adf6d09480d7739d2e7638d = private unnamed_addr constant [5 x i8] c"usize", align 1
@alloc_c8dbd11c0d0afd7250de135d09c6bf30 = private unnamed_addr constant [3 x i8] c"f32", align 1
@alloc_2717017e1ae813f478f43d8b0722e846 = private unnamed_addr constant [3 x i8] c"f64", align 1
@alloc_ebacd5270fb181ba2143a73d4427458e = private unnamed_addr constant [1 x i8] c"!", align 1
@alloc_27cca3636828088e60ce450d2eca2060 = private unnamed_addr constant [1 x i8] c"_", align 1
@alloc_b012c69bf4bf22b6b4fb1b13d9d751d9 = private unnamed_addr constant [3 x i8] c"...", align 1
@alloc_6322ccc408af4ac79e90cb8d74303ba0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BB\00\00\00\11\00\00\00" }>, align 4
@alloc_3618f06255dc02978c99f9b77813748a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C0\00\00\003\00\00\00" }>, align 4
@alloc_f7e304603a5b45fd190679c5f62fd21c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C0\00\00\00.\00\00\00" }>, align 4
@alloc_337db9e38332a243c2f56a6193fde42d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BF\00\00\00.\00\00\00" }>, align 4
@alloc_bf1b127a9d12818aa2b04b608afe4296 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C8\00\00\00#\00\00\00" }>, align 4
@alloc_2c5f80f2c60155a91b4af0a83cb8053f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C8\00\00\00\15\00\00\00" }>, align 4
@alloc_9777d687f605a3a26b574c4d0329344b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CC\00\00\00\0D\00\00\00" }>, align 4
@alloc_5d131e0050cfdea92f191a63f1b6e301 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CE\00\00\00\1F\00\00\00" }>, align 4
@alloc_4ddbfd349f05e1516f6a58969fb86d3a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CF\00\00\00\0D\00\00\00" }>, align 4
@alloc_f637778704f6d8f3e42d430f56c38644 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DA\00\00\00\0D\00\00\00" }>, align 4
@alloc_c36b0af4b79055b503074fa8e392b0ef = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E2\00\00\00\0D\00\00\00" }>, align 4
@alloc_693b19308973744f927c14f3061cfe67 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E5\00\00\00\16\00\00\00" }>, align 4
@alloc_40dc033443fc667842134c1f45357a5a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E5\00\00\00\0D\00\00\00" }>, align 4
@alloc_c46e33855f00ae950fc3797767d00827 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E7\00\00\00\1B\00\00\00" }>, align 4
@alloc_86fd1cc4ccbd24dcbfe25f43a853008b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\EB\00\00\00\18\00\00\00" }>, align 4
@alloc_23fed37919406ce6b3decd8a9221f18a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\EB\00\00\007\00\00\00" }>, align 4
@alloc_e7cafee6721939488e81f20b82bc433e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\EB\00\00\00\14\00\00\00" }>, align 4
@alloc_eb44edfe316974b7abd316b0cd5ffcf7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E9\00\00\00\11\00\00\00" }>, align 4
@alloc_b91e8c1fb5a692d12ad6bf1e91ed892b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D9\00\00\00\0D\00\00\00" }>, align 4
@alloc_63a7a85d3232f7b82109ef5ccff4e459 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D3\00\00\00\11\00\00\00" }>, align 4
@alloc_70c648ca2ef78690f996ca2d54f78c39 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CE\00\00\00\11\00\00\00" }>, align 4
@alloc_ee419f9a5f4f8a2469758387ee649914 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CD\00\00\00\11\00\00\00" }>, align 4
@alloc_d23fabfa229f1fc8cc1f1218164b390a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C4\00\00\00\19\00\00\00" }>, align 4
@alloc_6af5488b1c67071cb96cc04cddc21fe9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C4\00\00\00+\00\00\00" }>, align 4
@alloc_21014dd1e604ba8a3a4c2d9dcac40d71 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A6\00\00\00\0D\00\00\00" }>, align 4
@alloc_b5adcd042d2afa0230f675658fc46150 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A5\00\00\00\0D\00\00\00" }>, align 4
@alloc_f5667c362506183aafee0cd87fb24c67 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\8F\00\00\00\18\00\00\00" }>, align 4
@alloc_617b75551dad21771d7690771534d65e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\82\00\00\00\0D\00\00\00" }>, align 4
@alloc_0e5072f75ceadb82304f37d0ce9f554f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\8A\00\00\00\0D\00\00\00" }>, align 4
@alloc_18c557fe36ac602196947eba993896fb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\85\00\00\00\1E\00\00\00" }>, align 4
@alloc_9a4fdbd367268fb5d98523b643479f80 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\85\00\00\00\1A\00\00\00" }>, align 4
@alloc_4b5eb2077f3f97bf4b90eeb34bfb2303 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\85\00\00\00\11\00\00\00" }>, align 4
@alloc_079223882705de60e13dbb1d6149e04b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\86\00\00\00\11\00\00\00" }>, align 4
@alloc_45981c0055076356d326a02866a926d3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00~\00\00\00\0D\00\00\00" }>, align 4
@alloc_29741e1d233c6c76ac9a937b90eb1750 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E0\01\00\00\11\00\00\00" }>, align 4
@alloc_4c02ac99d8bafd62fdbfc18a2494ae5f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DF\01\00\00\11\00\00\00" }>, align 4
@alloc_39c82a53c004941d9675a3c2922afaec = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DE\01\00\00\15\00\00\00" }>, align 4
@alloc_7179cef08afcbefada22d454c2a2f022 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\96\01\00\00\09\00\00\00" }>, align 4
@alloc_8979c736d523acd6f75e66ecf6073edd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BF\01\00\00'\00\00\00" }>, align 4
@alloc_a8310d0718108e4fd92bbaa75895a7c3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BF\01\00\00\1F\00\00\00" }>, align 4
@alloc_dc80604dbce74c4319d6886c8c8f996d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B8\01\00\00\13\00\00\00" }>, align 4
@alloc_25668ad8c104e9e7249694057538e48e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E9\01\00\00\09\00\00\00" }>, align 4
@alloc_3c4309668649a5c3b4be87374bb99124 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A8\01\00\00\0D\00\00\00" }>, align 4
@alloc_e8dcca4bbbf5382b1a153fff3ba2d8b7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B1\01\00\00\09\00\00\00" }>, align 4
@alloc_f57160c815d296d6726a570f3bb590a7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B0\01\00\00\11\00\00\00" }>, align 4
@alloc_b67380bedda037387a226b345135a42c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\11\02\00\00\17\00\00\00" }>, align 4
@alloc_5e259e0fc55d934750ee24d947e4bcc3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\10\02\00\00\17\00\00\00" }>, align 4
@alloc_5d3e43de02ec01485265958ac66de46e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\1E\02\00\00\1E\00\00\00" }>, align 4
@alloc_175a088d119ab02df6667ba439d90252 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00#\02\00\00\22\00\00\00" }>, align 4
@alloc_f2e61f5145997223714a4864f16641de = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00$\02\00\00&\00\00\00" }>, align 4
@alloc_b2950cfc22f1747437ffec4d94e0e53f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00$\02\00\00%\00\00\00" }>, align 4
@alloc_31334d7cdeaa52179ee6c9c79552f6e2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\19\02\00\00\15\00\00\00" }>, align 4
@alloc_e575bdd5c6bec11f6490c1d4bd94e4eb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\0D\02\00\00\17\00\00\00" }>, align 4
@alloc_bf2df0f15f80b9f712506d45e1395456 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FD\01\00\00\17\00\00\00" }>, align 4
@alloc_447337713f7ab41fb0e7b9219a8323e2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\07\02\00\00\09\00\00\00" }>, align 4
@alloc_987e8324c0ba73fbd49d914321104f99 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FE\01\00\00\11\00\00\00" }>, align 4
@alloc_75a9845cab15a1b5d70884eeb1a2ba2d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C5\01\00\00&\00\00\00" }>, align 4
@alloc_82f375a89e7d4c925c1f4f75eb65939c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C8\01\00\00\09\00\00\00" }>, align 4
@alloc_466f394e66e03cb7583a5f8755e00678 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D0\01\00\000\00\00\00" }>, align 4
@alloc_ff2d37d27acf56b58ac4a5ca9eac51f2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D0\01\00\00&\00\00\00" }>, align 4
@alloc_dc7adc2ce9e6a8eb0c71da5792843253 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CF\01\00\00+\00\00\00" }>, align 4
@alloc_719f39c803faad5001a700972734d43f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CF\01\00\00&\00\00\00" }>, align 4
@alloc_dbf4cce6e77b4b881ded0401366821e9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CE\01\00\00&\00\00\00" }>, align 4
@alloc_601e27ca32fc72451031a36d355260fd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D3\01\00\00\09\00\00\00" }>, align 4
@alloc_a5d3904b1947f085e45069c1e0def9a1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F1\01\00\00\0F\00\00\00" }>, align 4
@alloc_23d18eb1b3a1f2ba6178bdbae8a314cf = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\9F\01\00\00\09\00\00\00" }>, align 4
@alloc_036636151bab3754536335311c8d3ab8 = private unnamed_addr constant [1 x i8] c"[", align 1
@alloc_7a6887ef0f93938f57a4bb958cf80311 = private unnamed_addr constant [1 x i8] c"]", align 1
@alloc_a16490029b67e6729a2a1cc36e2b76c4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00)\03\00\00\19\00\00\00" }>, align 4
@alloc_fe7b78d61798fde452b85f735f9d7635 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00(\03\00\00\19\00\00\00" }>, align 4
@alloc_031dd2058c27f0acde00c8b80c505ece = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00'\03\00\00\19\00\00\00" }>, align 4
@alloc_1db9605d63c6142bb7b2612616cda18a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00$\03\00\00\11\00\00\00" }>, align 4
@alloc_9887ca5a2e45b99a734e01ef54da3544 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\22\03\00\00\1C\00\00\00" }>, align 4
@alloc_83ea95cd0f4d551c88f8147f19082056 = private unnamed_addr constant [1 x i8] c"?", align 1
@alloc_e06a81addf40d0f2584e5776179ece9c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00!\03\00\00\1B\00\00\00" }>, align 4
@alloc_0078f96ecbe246c9d8cda3cf01c437ac = private unnamed_addr constant [2 x i8] c"::", align 1
@alloc_f714ed889728099d4bdfdf2e790c9d1e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00T\03\00\00\1D\00\00\00" }>, align 4
@alloc_c8d7bfc75677b03b624aca8be1466fba = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00S\03\00\00\1D\00\00\00" }>, align 4
@alloc_94ff3b0cb4f395ddb7f0d8054d812ce5 = private unnamed_addr constant [3 x i8] c"::{", align 1
@alloc_65c7084c473eeb2498964f743450e692 = private unnamed_addr constant [7 x i8] c"closure", align 1
@alloc_abe5c9d97f5988bd862d1e81f8f64d4e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00C\03\00\00$\00\00\00" }>, align 4
@alloc_a30cb47ff4c8eb494e3bec5122dc5416 = private unnamed_addr constant [4 x i8] c"shim", align 1
@alloc_4e48fe025ae186e1a68c38e07d7b8b0c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00D\03\00\00$\00\00\00" }>, align 4
@alloc_3b8c95b91c663a5a9387bddd44e7b465 = private unnamed_addr constant [1 x i8] c":", align 1
@alloc_5c392cbf2df3e4080805b50f30d5c8d4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00I\03\00\00\1D\00\00\00" }>, align 4
@alloc_3e444ed9de0bd8fdfa622ab270e2e35e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00H\03\00\00\1D\00\00\00" }>, align 4
@alloc_915544995c76d19b0d8d87d991dcd459 = private unnamed_addr constant [1 x i8] c"#", align 1
@alloc_fcd552ca5ffc948e1053f652f94fed71 = private unnamed_addr constant [1 x i8] c"}", align 1
@alloc_2381c8d966b76b86773408054d39563c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00M\03\00\00\19\00\00\00" }>, align 4
@alloc_adeec868404974c0462ebccabdf981ed = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00L\03\00\00\19\00\00\00" }>, align 4
@alloc_56e2142e355c8c9a309ee595bd82b6b7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00K\03\00\00\19\00\00\00" }>, align 4
@alloc_86a53b4f5e385769220da1002cb374c7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00E\03\00\00\22\00\00\00" }>, align 4
@alloc_224693d2df21bc8a3a0572d9d9e11b7b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00A\03\00\00\19\00\00\00" }>, align 4
@alloc_14ae02ad5e2360304425731af5c5e513 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00<\03\00\00\1C\00\00\00" }>, align 4
@alloc_2c539a3ca252e014d6234cffd08c788d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00;\03\00\00\1B\00\00\00" }>, align 4
@alloc_8ecf3588954f93f3a51db42d232b5f74 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\008\03\00\00\15\00\00\00" }>, align 4
@alloc_fea2dda640c0b8eae10837836c131476 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\000\03\00\00\11\00\00\00" }>, align 4
@alloc_b3b0d884b11c8d05862dde7f357f68c7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00.\03\00\00\1A\00\00\00" }>, align 4
@alloc_069739ecb4f78035aca324a6dc5131a2 = private unnamed_addr constant [1 x i8] c"<", align 1
@alloc_a2519ea1fadc68f0634aad6a281b12ca = private unnamed_addr constant [4 x i8] c" as ", align 1
@alloc_b0f75d2f000046282f87eeb3267426fe = private unnamed_addr constant [1 x i8] c">", align 1
@alloc_54fe10194026bfa38c668c297cb7dac8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00f\03\00\00\11\00\00\00" }>, align 4
@alloc_0fbb26bb7219cf69c8b51dd22d98c63c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00d\03\00\00\15\00\00\00" }>, align 4
@alloc_519a833684c9935a887b22fe577fe5cb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00c\03\00\00\15\00\00\00" }>, align 4
@alloc_ef714b91865773a83baae0d30770d30e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00a\03\00\00\11\00\00\00" }>, align 4
@alloc_71343812d7fcaca5b6812055933b025d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00`\03\00\00\11\00\00\00" }>, align 4
@alloc_cda98d975a02c3bf4cc8d7458ec3842d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\\\03\00\00\15\00\00\00" }>, align 4
@alloc_94b00be069aafad82a2c6df764237b82 = private unnamed_addr constant [2 x i8] c", ", align 1
@alloc_20b13634fac2b7e274a8ccb77f19b643 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00o\03\00\00\11\00\00\00" }>, align 4
@alloc_8410381529f786a540a24d6efc507447 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00n\03\00\00\11\00\00\00" }>, align 4
@alloc_05aca42c8dd8b91e904adf7fb9c4e706 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00m\03\00\00\11\00\00\00" }>, align 4
@alloc_53eb17fa0f1a7b138157b7845ce97153 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00k\03\00\00\15\00\00\00" }>, align 4
@alloc_ddcb8617e85d27b16df29a12a0784c92 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00i\03\00\00\11\00\00\00" }>, align 4
@alloc_8636bb08d583d94c4e1ba1612fb5c8dc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00r\03\00\00\11\00\00\00" }>, align 4
@alloc_c890f05c54c4d0dde16e63d2e15de4a4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00t\03\00\00\12\00\00\00" }>, align 4
@alloc_71adac003a90212660cc1e42776f84ff = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\1E\03\00\00\13\00\00\00" }>, align 4
@alloc_7065277c489a2716c458bdc11eb3cae9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\1C\03\00\00\09\00\00\00" }>, align 4
@alloc_90406cad91539dd86ffc765a92ace5f1 = private unnamed_addr constant [1 x i8] c"&", align 1
@alloc_0242e8ee118de705af76c627590b82cc = private unnamed_addr constant [1 x i8] c" ", align 1
@alloc_4543a0c9d8502324cad8b2ffa53f8557 = private unnamed_addr constant [4 x i8] c"mut ", align 1
@alloc_4336d2da2ff187b97a7d0d6bee830d25 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\9C\03\00\00\11\00\00\00" }>, align 4
@alloc_22b4592a16bee36a5db37d3e31e16080 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\9A\03\00\00\15\00\00\00" }>, align 4
@alloc_70c137d977440624ace6e11f24f8617d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\96\03\00\00\19\00\00\00" }>, align 4
@alloc_d0797cc105afc10a107cf5ae93ae596d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\95\03\00\00\19\00\00\00" }>, align 4
@alloc_45f1abad4da9d5f3f1e76ebd2b4ddaed = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\93\03\00\00\1E\00\00\00" }>, align 4
@alloc_e7cd09c1ce875bea82e464b9898b1e0f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\91\03\00\00\11\00\00\00" }>, align 4
@alloc_09f68c7ae2e79d4408ae53b7c9133001 = private unnamed_addr constant [1 x i8] c"*", align 1
@alloc_0afa2bdf9a2fea4f2e3cb5846009f9d9 = private unnamed_addr constant [6 x i8] c"const ", align 1
@alloc_bd4c8d17e49824a3ac78616fa70560e0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A4\03\00\00\15\00\00\00" }>, align 4
@alloc_c4daa44c23d57978b99038632c9ccbc0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A6\03\00\00\11\00\00\00" }>, align 4
@alloc_4a74b97ab84933bbdc9a2acd5cd27965 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A2\03\00\00\15\00\00\00" }>, align 4
@alloc_5c33c218596c8edf2cdd49e1aab389da = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A0\03\00\00\11\00\00\00" }>, align 4
@alloc_5de0042c26ac0fa48900f046c47bd77b = private unnamed_addr constant [2 x i8] c"; ", align 1
@alloc_85594c4da6259664ce9b4b6f156e572c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AE\03\00\00\15\00\00\00" }>, align 4
@alloc_a87c510a6400e1b5e5587c963b849354 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AD\03\00\00\15\00\00\00" }>, align 4
@alloc_9affada7652f5db271f6afb3d5ca5785 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B0\03\00\00\11\00\00\00" }>, align 4
@alloc_9ac81c02bf32f110e736d715cf8339a0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AB\03\00\00\11\00\00\00" }>, align 4
@alloc_f0221c65c8558493a3dd812e8e7980d1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AA\03\00\00\11\00\00\00" }>, align 4
@alloc_1ff25e6ad58d770003043bae3c4113bf = private unnamed_addr constant [1 x i8] c"(", align 1
@alloc_41a776d8d06dc2b9b0480e88fa257ffe = private unnamed_addr constant [1 x i8] c",", align 1
@alloc_0b023ef5c66b686bfdbf1660724c4612 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B6\03\00\00\15\00\00\00" }>, align 4
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant [1 x i8] c")", align 1
@alloc_d239924077cb84cbb1741425d3439ae4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B8\03\00\00\11\00\00\00" }>, align 4
@alloc_db015d4450b93e850d1e9750fdff1c2e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B4\03\00\00\1D\00\00\00" }>, align 4
@alloc_3648faee4f7273d3de54cba23a62d90b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B3\03\00\00\11\00\00\00" }>, align 4
@alloc_bb87aed718dd3166b7b85417c0acd458 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BA\03\00\00\15\00\00\00" }>, align 4
@alloc_a829167bede50220b67c7236e0c8e10a = private unnamed_addr constant [4 x i8] c"dyn ", align 1
@alloc_af9ae64d7cd643006f4ba33848c5623e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F2\03\00\00\15\00\00\00" }>, align 4
@alloc_7dfda8f4ef3bc65bd5aae61db4a0d2cf = private unnamed_addr constant [3 x i8] c" + ", align 1
@alloc_b38d7e1becd01bafc23519d9ae72b947 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F7\03\00\00\15\00\00\00" }>, align 4
@alloc_b410616e6c5ac2400c0994d3b350d88f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F6\03\00\00\15\00\00\00" }>, align 4
@alloc_28c68034091b198546c29eaab34fbcfa = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F4\03\00\00\1A\00\00\00" }>, align 4
@alloc_0f9d095b4bccc49cf70096120f65276d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\EC\03\00\00\11\00\00\00" }>, align 4
@alloc_563758920a9374918d64fcdb380348f9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\EB\03\00\00\11\00\00\00" }>, align 4
@alloc_fb47d9db3cc27c60ad0fc6d6e3f19f8c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FB\03\00\00\11\00\00\00" }>, align 4
@alloc_c78a450e571c59bd9864ddd59ec6978c = private unnamed_addr constant [4 x i8] c" is ", align 1
@alloc_f7481220c4027f2628f2755cdf8f1339 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\00\04\00\00\11\00\00\00" }>, align 4
@alloc_a2e6b4ca3e3b5209a800f50364b9eb5a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FF\03\00\00\11\00\00\00" }>, align 4
@alloc_5a7c889e380b0a488de60ea6b7099409 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FE\03\00\00\11\00\00\00" }>, align 4
@alloc_3c0d3bee421bab906c628431f2a67524 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\05\04\00\00\11\00\00\00" }>, align 4
@alloc_5d9c185165fcedca57ee9fa3c7b48763 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\8D\03\00\00\09\00\00\00" }>, align 4
@alloc_67a674df87cf332b15212e05190fbe7a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\87\03\00\00\13\00\00\00" }>, align 4
@alloc_a1c2895327a128585bd907162fcbcc7e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\ED\03\00\00\15\00\00\00" }>, align 4
@alloc_67b777d3a13f5a5965b613492a73b2ea = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C2\03\00\00\1D\00\00\00" }>, align 4
@alloc_cf99c3d99b7655c4c23a8f9ba882d830 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C0\03\00\00#\00\00\00" }>, align 4
@alloc_e57470275a219d8492d489e56910499e = private unnamed_addr constant [1 x i8] c"C", align 1
@alloc_b05c003eda9f73f01c171c5c1d105cae = private unnamed_addr constant [7 x i8] c"unsafe ", align 1
@alloc_849429a70944c612a9b3676f71c6e442 = private unnamed_addr constant [8 x i8] c"extern \22", align 1
@alloc_c67d7a50dd54899f8318469e49218d2f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D4\03\00\00-\00\00\00" }>, align 4
@alloc_4ebc30902302927a921d5b6c9d1f67ec = private unnamed_addr constant [2 x i8] c"\22 ", align 1
@alloc_59829d2cc401e8aaf896cd78466d4e67 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DA\03\00\00\15\00\00\00" }>, align 4
@alloc_3bb2650aa074fcfb8c10a9c40791bfbc = private unnamed_addr constant [1 x i8] c"-", align 1
@alloc_39bb140c51a70ef05131b062b4845092 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D7\03\00\00\19\00\00\00" }>, align 4
@alloc_97fd67ff296716430f5b5e3cbee64f2d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D6\03\00\00\19\00\00\00" }>, align 4
@alloc_5e3a257f2cdb6faab7e5e64268d70a16 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D4\03\00\00\15\00\00\00" }>, align 4
@alloc_ba8273ca857ebde0e49b7fbe08f32872 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CF\03\00\00\15\00\00\00" }>, align 4
@alloc_f62cbc6e5cb5848b26a3a14b15d3c668 = private unnamed_addr constant [3 x i8] c"fn(", align 1
@alloc_d92ab822b978e55c052ee90d2c85e635 = private unnamed_addr constant [4 x i8] c" -> ", align 1
@alloc_9dace3975078b77196c565c6fef3c86c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E5\03\00\00\15\00\00\00" }>, align 4
@alloc_70e2452bd85fb2ffd66a72a8feadbf90 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E4\03\00\00\15\00\00\00" }>, align 4
@alloc_c57a8a6e7fd94b78a3c10207957cdd38 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DF\03\00\00\11\00\00\00" }>, align 4
@alloc_801d685749f53d28e7fd67930b405195 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DE\03\00\00\11\00\00\00" }>, align 4
@alloc_1fa7fff189641ee37b2720478c4728c4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DD\03\00\00\11\00\00\00" }>, align 4
@alloc_300a6b88e2b00c52981cbea07c4a55c5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CB\03\00\00\15\00\00\00" }>, align 4
@alloc_027d8d1b2fc35861e9bea46ae4a8b4f5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\04\04\00\006\00\00\00" }>, align 4
@alloc_58f012df8fa22577035f778fe9bf2f12 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00t\04\00\00\15\00\00\00" }>, align 4
@alloc_9ed6d728ce144f6967df25dd3c28a5f7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00w\04\00\008\00\00\00" }>, align 4
@alloc_692e33c434fc686c887a82cca89b5200 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00}\04\00\00\11\00\00\00" }>, align 4
@alloc_35e274eb2f4b538fe25e81004ffef15e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00z\04\00\00\15\00\00\00" }>, align 4
@alloc_6f4357e3a3c9006d5d6d935934a9de54 = private unnamed_addr constant [5 x i8] c"false", align 1
@alloc_abba61d2e6b97d0cf22b9ed30ecbec87 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\80\04\00\00\1C\00\00\00" }>, align 4
@alloc_c9ee9951a160df092319190fa06505e4 = private unnamed_addr constant [4 x i8] c"true", align 1
@alloc_d57767391fa56b914512dd3f1cf4b5f4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\81\04\00\00\1C\00\00\00" }>, align 4
@alloc_38f185384a790a67ba514b4d50bac362 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\82\04\00\00\16\00\00\00" }>, align 4
@alloc_66418e448bae042db4c4e2f934871d2c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\7F\04\00\00\1B\00\00\00" }>, align 4
@alloc_321a71decb31d99babce4bc074bcd8b2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\8B\04\00\00\1D\00\00\00" }>, align 4
@alloc_c12f37eacd5884254b3ec5c954a8867c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\8A\04\00\00 \00\00\00" }>, align 4
@alloc_b951d0b7c1735c08fa7b9e731766fe79 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\85\04\00\00\22\00\00\00" }>, align 4
@alloc_03dcaee0c2238237c8727a9dbb1eae53 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\95\04\00\00\11\00\00\00" }>, align 4
@alloc_e399f891b7d00a9ab293576963defc3b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\93\04\00\00\11\00\00\00" }>, align 4
@alloc_f08660be9a9bed030b118b7cf537178e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\92\04\00\00\11\00\00\00" }>, align 4
@alloc_3a0a9673827b9a32501f30b465752845 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\9C\04\00\00\15\00\00\00" }>, align 4
@alloc_cb30856e1a1824c72a1ad63ee268a554 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A3\04\00\00\15\00\00\00" }>, align 4
@alloc_80f4cf6f275fd67b39033d61fc4abb13 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A1\04\00\00\19\00\00\00" }>, align 4
@alloc_b3e50377ca04fe93e9f6a0ef731400de = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\9F\04\00\00\15\00\00\00" }>, align 4
@alloc_a5751ae476814f377f835d368c2c8869 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\9E\04\00\00\15\00\00\00" }>, align 4
@alloc_fb7387a7d4faad44f920ce2c322a02af = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AA\04\00\00\11\00\00\00" }>, align 4
@alloc_3473781297785ca3b5ac81035d46faa0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A9\04\00\00\11\00\00\00" }>, align 4
@alloc_846cb5e65fea24d4cb98261127649875 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A8\04\00\00\11\00\00\00" }>, align 4
@alloc_843ecd5511435909c94edccee3c9ea44 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A7\04\00\00\11\00\00\00" }>, align 4
@alloc_3bdd94f17c65b5e846d83fbc27b4ee62 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B1\04\00\00\15\00\00\00" }>, align 4
@alloc_510db121a7ecf02e245c1f4b8dbf12df = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B3\04\00\00\11\00\00\00" }>, align 4
@alloc_de8b6be32b09b13a847b977788cb0ac4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AF\04\00\00\1D\00\00\00" }>, align 4
@alloc_9574321608dec1d2baa0a324f7990d7f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AE\04\00\00\11\00\00\00" }>, align 4
@alloc_5deffcd89ec898b58ca9dd4f223d9a1b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\AD\04\00\00\11\00\00\00" }>, align 4
@alloc_007fdc34da6b4aae7af16f288f4f45b7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BD\04\00\00\19\00\00\00" }>, align 4
@alloc_0ff0760917077e36874136d5c371bed7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BC\04\00\00\19\00\00\00" }>, align 4
@alloc_4b8dc7744292b691f926096cb37562c5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BB\04\00\00\19\00\00\00" }>, align 4
@alloc_fe2ddbdc622a788f5416063d1e8d8ad4 = private unnamed_addr constant [3 x i8] c" { ", align 1
@alloc_047fb90e55f5a12b86403e3ea891a5bd = private unnamed_addr constant [2 x i8] c" }", align 1
@alloc_d797c75081b3c58113d160978311cb3f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CB\04\00\00\19\00\00\00" }>, align 4
@alloc_1775578fc260bc127962520638c9b1f9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C1\04\00\00\19\00\00\00" }>, align 4
@alloc_f741e87fd704eb7570d8910145005335 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C0\04\00\00\19\00\00\00" }>, align 4
@alloc_7979bdb26d94ae43a7f0f4d78d8e14cc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\CD\04\00\00\1A\00\00\00" }>, align 4
@alloc_7a1916db7c03a19cceea5d06d625d4ad = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B8\04\00\00\17\00\00\00" }>, align 4
@alloc_0d16bd17918a9004692a81948b9cbf0b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B7\04\00\00\11\00\00\00" }>, align 4
@alloc_4dab6447145314021a06bd4e0a400ebf = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B6\04\00\00\11\00\00\00" }>, align 4
@alloc_0ec5681a6a9ce6ba2c2f5dce67130432 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D7\04\00\00\0D\00\00\00" }>, align 4
@alloc_526724f0590e135d7b17c351490e0c99 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D1\04\00\00\11\00\00\00" }>, align 4
@alloc_92c75c2c02af0561f277556518a66b1f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D3\04\00\00\12\00\00\00" }>, align 4
@alloc_0ade96101761e8524b8e26e137f99cc5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00`\04\00\00\09\00\00\00" }>, align 4
@alloc_77eff6b2ecdee870a316ac258f909de7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00^\04\00\00\13\00\00\00" }>, align 4
@alloc_387c6006141796f3ecab55b2882927cf = private unnamed_addr constant [1 x i8] c"{", align 1
@alloc_556e4180596b5b612bb6ed6c0cbb55e1 = private unnamed_addr constant [2 x i8] c": ", align 1
@alloc_56fc114a3a40b08be8d55b10cf05d30f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C6\04\00\00!\00\00\00" }>, align 4
@alloc_c6920c06024504a44d1b100a9e640fe0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C5\04\00\00!\00\00\00" }>, align 4
@alloc_f8179501488ea02e708eb39ad62a08c7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C4\04\00\00,\00\00\00" }>, align 4
@alloc_830366ea3b9c57b1e780dcd5e8334405 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C3\04\00\00!\00\00\00" }>, align 4
@alloc_a787644ab8dfa36077f51af2bd9f67db = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\92\02\00\00\1E\00\00\00" }>, align 4
@alloc_77048164a9e65997537db53b0701b75a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\16\03\00\00\0D\00\00\00" }>, align 4
@alloc_9b9da7b9861b1ad88f1b99fa22add4c9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\15\03\00\00\0D\00\00\00" }>, align 4
@alloc_69a1fab1ce19125085e0aeefcee52f67 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\13\03\00\00\11\00\00\00" }>, align 4
@alloc_5e276d8957e9f5cd7fcf274cd8db2055 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\009\04\00\00\0D\00\00\00" }>, align 4
@alloc_10d31d15f2c9c283a7d7183844cd950a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00,\04\00\00\11\00\00\00" }>, align 4
@alloc_998113dda678cc10281d5123c32c9b27 = private unnamed_addr constant [3 x i8] c" = ", align 1
@alloc_93a658e291735a21cc7773ea397fc07c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\005\04\00\00\0D\00\00\00" }>, align 4
@alloc_d9a0d3542e2fdfad37aef176d28fea0e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\004\04\00\00\0D\00\00\00" }>, align 4
@alloc_aee9f4107113db8c9f005d1108899919 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\003\04\00\00\0D\00\00\00" }>, align 4
@alloc_41a4b27061e6a0abded1d64057583ff8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\002\04\00\00\18\00\00\00" }>, align 4
@alloc_135e198f40c6d0ab32818ba7b00342cc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00/\04\00\00\11\00\00\00" }>, align 4
@alloc_7cefe9a6e57997c272470c5dba1ebe44 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00(\04\00\00\18\00\00\00" }>, align 4
@alloc_83d8d36e705c58ed11bda7b90dabc655 = private unnamed_addr constant [2 x i8] c"0x", align 1
@alloc_e0f27199601837fa947672fe663d782a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E7\04\00\00\11\00\00\00" }>, align 4
@alloc_dd091a1efcc6ffcd13d70eba7f30b430 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E6\04\00\00\11\00\00\00" }>, align 4
@alloc_e8bb6a85a2336345285f029bee8c4d87 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\ED\04\00\00-\00\00\00" }>, align 4
@alloc_05274a89086c2f868cc8e52db65b1bd8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\EE\04\00\00\11\00\00\00" }>, align 4
@alloc_71054a8da1fe1babd7b72d9d9461da0d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E2\04\00\00\18\00\00\00" }>, align 4
@alloc_f8df48d5c7207c9c706ab6a6aa980fad = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DF\04\00\00\13\00\00\00" }>, align 4
@alloc_d182f94df0ba7d0ac1f27eb82f7f65a4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00}\03\00\00\16\00\00\00" }>, align 4
@alloc_ead4d96489f9fd178dc690c294e1bf9b = private unnamed_addr constant [61 x i8] c"`fmt::Error`s should be impossible without a `fmt::Formatter`", align 1
@alloc_3855a533c97ad96a76dda89c2990f037 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\87\02\00\00\11\00\00\00" }>, align 4
@alloc_19225259b1f6ae9f650a0b2b9126fd68 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F8\04\00\00\15\00\00\00" }>, align 4
@alloc_f6bdd9b8b27bdd76c53cce2153da650a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F6\04\00\00\0F\00\00\00" }>, align 4
@alloc_8b81d5a4eae5f23ca3c590a4cd01f630 = private unnamed_addr constant [1 x i8] c"'", align 1
@alloc_cea3a5cff8c51aa351847d5b8f89866b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\E3\02\00\00\15\00\00\00" }>, align 4
@alloc_63acfc96622f9f177b3b59977aab9bd8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DF\02\00\00\15\00\00\00" }>, align 4
@alloc_86f3d20449ea630c41a97b597223faf5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\DB\02\00\00\1D\00\00\00" }>, align 4
@alloc_03d93ef07fc5a4a67ea227d750e92409 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\D3\02\00\00\09\00\00\00" }>, align 4
@alloc_d13195e84ec9718716723d8fa6e4e6c0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C5\02\00\00\0D\00\00\00" }>, align 4
@alloc_4b80768d4b767388f04e0699a70d3b58 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\C2\02\00\00\15\00\00\00" }>, align 4
@alloc_a717a592fcf8ab137c836bd317489f92 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\BD\02\00\00\15\00\00\00" }>, align 4
@alloc_b7f8239ac0ee9ea18ce6bb3b2c8cc23f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\B8\02\00\00\0D\00\00\00" }>, align 4
@alloc_d4d20f40d3875c32731f785725cc3ca2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\22\04\00\00\0D\00\00\00" }>, align 4
@alloc_6b31c84da84d5b9ef8856eee0c371b2d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\1F\04\00\00\0D\00\00\00" }>, align 4
@alloc_53010fd4052d9625b4787f4b90e49f6a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\1E\04\00\00\0D\00\00\00" }>, align 4
@alloc_5cc8d615d0d430c19940729ae5453f98 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\1D\04\00\00\0D\00\00\00" }>, align 4
@alloc_c664c756225ae3d8f5347bcf6795d969 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\17\04\00\00\0D\00\00\00" }>, align 4
@alloc_7512957e5d06f03091064f9c5279a4ac = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\18\04\00\00\18\00\00\00" }>, align 4
@alloc_32c81a225f4c778cd7b459aa85f3f404 = private unnamed_addr constant <{ [2 x i8], [6 x i8] }> <{ [2 x i8] c"\00\01", [6 x i8] undef }>, align 4
@alloc_6b0297d86dedee56dc675ddc1c167c55 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\A8\02\00\00\0D\00\00\00" }>, align 4
@alloc_5f65a5d2b17800803b9d5ec1af97e3ca = private unnamed_addr constant [4 x i8] c"for<", align 1
@alloc_497bf069984d9b51728086bf7474a8fe = private unnamed_addr constant [2 x i8] c"> ", align 1
@alloc_ab7d4a10450dd9ba7763905add1e6f09 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\04\03\00\00\09\00\00\00" }>, align 4
@alloc_9cdd1cc3dda8aa93c7dd217081de8134 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FE\02\00\00\0D\00\00\00" }>, align 4
@alloc_712e938276eb7b48a1507ff28da7bde9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FB\02\00\00\11\00\00\00" }>, align 4
@alloc_ad537110394614bd422e49669e65f03c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FC\02\00\00\11\00\00\00" }>, align 4
@alloc_a70ce0616d863679e312694c1453caee = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F9\02\00\00\15\00\00\00" }>, align 4
@alloc_b5d7db497ee4d9db0f3cecd866f73538 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F6\02\00\00\0D\00\00\00" }>, align 4
@alloc_66c284d3ccc1ae2f2d939ab55a7f8621 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\EE\02\00\00\1F\00\00\00" }>, align 4
@alloc_fad8087ce9ba23e86b71d97267724fb0 = private unnamed_addr constant [3 x i8] c"..=", align 1
@alloc_6e3e9258c72a340a2921ab14d6de6be5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00F\04\00\00\11\00\00\00" }>, align 4
@alloc_afec21daaa5e6363a762ced4d04cce21 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00E\04\00\00\11\00\00\00" }>, align 4
@alloc_c1e9ff2befa62d5d9eb82c8882621c91 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00D\04\00\00\11\00\00\00" }>, align 4
@alloc_a73d0e35045fd787c81346701178a687 = private unnamed_addr constant [3 x i8] c" | ", align 1
@alloc_53b217ca7f7ca7da6d733c84e98e7d35 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00R\04\00\00\15\00\00\00" }>, align 4
@alloc_ec53e480c0113964aed9ade00db5f71d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00Q\04\00\00\15\00\00\00" }>, align 4
@alloc_6bc5650fe177edef0613f1404f58772a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00O\04\00\00\19\00\00\00" }>, align 4
@alloc_d321c890de1bff07a70d2f546d27a66c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00J\04\00\00\11\00\00\00" }>, align 4
@alloc_e2bd95442f5eda3378a92a4f3a2d49a9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00I\04\00\00\11\00\00\00" }>, align 4
@alloc_efb33f7f1846bae0320d1e2e46b80887 = private unnamed_addr constant [5 x i8] c"!null", align 1
@alloc_2181aad97e76b7370f096452405145eb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00V\04\00\00\15\00\00\00" }>, align 4
@alloc_aa4e71feec07e7e105ccae0bbffc2734 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00W\04\00\00\12\00\00\00" }>, align 4
@alloc_347050566101c44882104c723f0d7eb7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00@\04\00\00\13\00\00\00" }>, align 4
@alloc_f9fb86e927c411227d6ce9b567ff107b = private unnamed_addr constant [2 x i8] c"_R", align 1
@alloc_a9bdd0561b8b141bc8188b4c981126c6 = private unnamed_addr constant [3 x i8] c"__R", align 1
@alloc_f6381ea9595286d112d8d14532639436 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\002\00\00\00\13\00\00\00" }>, align 4
@alloc_4766f40ce33c5960a7536169803d72a3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00/\00\00\00\13\00\00\00" }>, align 4
@alloc_fb40345895c39c54357a205e03a9ab5d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00+\00\00\00\13\00\00\00" }>, align 4
@alloc_eb364b0938a59e626face21148e313c0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\008\00\00\00\0B\00\00\00" }>, align 4
@alloc_d006cb3af6845129162b80da09a90807 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00W\00\00\00\12\00\00\00" }>, align 4
@alloc_43f41aae90a4da56ef1e71166ea52897 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00Z\00\00\00(\00\00\00" }>, align 4
@alloc_a510887131eeda456440555b131a6334 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00S\00\00\00\0E\00\00\00" }>, align 4
@alloc_2b9ecd7fb79c392a9530f3ffcead8477 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00K\00\00\00\0E\00\00\00" }>, align 4
@alloc_7dd5948dd852e37d3ea5363c4d34c279 = private unnamed_addr constant [102 x i8] c"/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/legacy.rs\00", align 1
@alloc_2eafdd1cb095d3316a8c4a324a182911 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00f\00\00\00\1C\00\00\00" }>, align 4
@alloc_6ef5ff4b1ea9b9d93c9327f097636b5b = private unnamed_addr constant [3 x i8] c"_ZN", align 1
@alloc_1b14c4cc7c72e5fc015408685aea44cc = private unnamed_addr constant [2 x i8] c"ZN", align 1
@alloc_f784cc82b63fe0a0f43a5a75f8fc403b = private unnamed_addr constant [4 x i8] c"__ZN", align 1
@alloc_a6583d77a94085ed5caad02c689ad26b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00=\00\00\00\0B\00\00\00" }>, align 4
@alloc_87aa5e1af30fb402141ea76baa76707c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00:\00\00\00\0B\00\00\00" }>, align 4
@alloc_977439345b059aced4e07c05eeb3cb36 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\006\00\00\00\0B\00\00\00" }>, align 4
@alloc_253d37b3faebd138ee039e94376d0b24 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00U\00\00\00\11\00\00\00" }>, align 4
@alloc_ca1745c237cdf9b83a58d852671fb98f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00Q\00\00\00\13\00\00\00" }>, align 4
@alloc_54a311666ada05edbfbd08a055b9dd81 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00^\00\00\00\09\00\00\00" }>, align 4
@alloc_3a67bb1890528be13a5469d9208956b0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00[\00\00\00\11\00\00\00" }>, align 4
@alloc_c0292548c3d0bdc18ad3d08f8743f6f4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00I\00\00\00\11\00\00\00" }>, align 4
@alloc_38cc8a1f551c002dbab45fc807dc614b = private unnamed_addr constant [6 x i8] c".llvm.", align 1
@alloc_48683b1c49c4bf30dbb0f6f205e86e4d = private unnamed_addr constant [99 x i8] c"/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs\00", align 1
@alloc_9acee487d5c6838b9c5bbe5d2d0b41a9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_48683b1c49c4bf30dbb0f6f205e86e4d, [12 x i8] c"b\00\00\00b\00\00\00\1C\00\00\00" }>, align 4
@alloc_52c81fb79df78a7027127477ec085d7a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_48683b1c49c4bf30dbb0f6f205e86e4d, [12 x i8] c"b\00\00\00b\00\00\00\1B\00\00\00" }>, align 4
@alloc_7aa333270d32626655c32c7e8a5db1d5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_48683b1c49c4bf30dbb0f6f205e86e4d, [12 x i8] c"b\00\00\00i\00\00\00\13\00\00\00" }>, align 4
@alloc_1b475434df58ad391d4772f03c186856 = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/range.rs\00", align 1
@alloc_dbfdd7441bdbbdad76ecc7188cefc7cb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1b475434df58ad391d4772f03c186856, [12 x i8] c"p\00\00\00\B1\01\00\00\01\00\00\00" }>, align 4
@vtable.0 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8051f11f402ca3fdE" }>, align 4, !dbg !0
@alloc_d70fe56c8b72f00119cb15c86956890a = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs\00", align 1
@alloc_78901e2fa52542ed5492c770c9e14bef = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d70fe56c8b72f00119cb15c86956890a, [12 x i8] c"m\00\00\00k\05\00\00$\00\00\00" }>, align 4
@alloc_24f471c037342a73d49e22aaced163ba = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d70fe56c8b72f00119cb15c86956890a, [12 x i8] c"m\00\00\00\83\06\00\00\01\00\00\00" }>, align 4
@alloc_fc445f6abf67cf4b683577fd3aaed336 = private unnamed_addr constant [184 x i8] c"unsafe precondition(s) violated: u64::unchecked_add cannot overflow\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_0f188fc877a2c1f29997e5d82c127b62 = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs\00", align 1
@alloc_e6fafa18fc9206e3da53fc079828daf0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_0f188fc877a2c1f29997e5d82c127b62, [12 x i8] c"o\00\00\00\CA\01\00\00\1D\00\00\00" }>, align 4
@alloc_e1665f13457e328da51e018dc7e730dd = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs\00", align 1
@alloc_18bafa59a51fd0a7bd278489b6d6eb68 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1665f13457e328da51e018dc7e730dd, [12 x i8] c"r\00\00\00\A6\00\00\00\05\00\00\00" }>, align 4
@alloc_4fb4eca1f8b9d0ded0407faa6b2654bb = private unnamed_addr constant [214 x i8] c"unsafe precondition(s) violated: ptr::add requires that the address calculation does not overflow\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_c723322a8d49c8bdd2cee0e5a9943cf3 = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/mod.rs\00", align 1
@alloc_985a71e2adce914a65f22ac7b011ae59 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c723322a8d49c8bdd2cee0e5a9943cf3, [12 x i8] c"m\00\00\00~\01\00\00\0D\00\00\00" }>, align 4
@alloc_d5ca9e6f24e87e709792144c0ce3464e = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/count.rs\00", align 1
@alloc_7f7f9dfded63257f5213a5c2bf899139 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d5ca9e6f24e87e709792144c0ce3464e, [12 x i8] c"o\00\00\00\1C\00\00\009\00\00\00" }>, align 4
@alloc_91f2a00ff2cd9cdc4bb205a66832e2bb = private unnamed_addr constant [219 x i8] c"unsafe precondition(s) violated: str::get_unchecked requires that the range is within the string slice\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_eae0db210e86600eeeff657589b4e443 = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs\00", align 1
@alloc_fcadf1bb23ad06e7cef4154b866e90d2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_eae0db210e86600eeeff657589b4e443, [12 x i8] c"p\00\00\00\B0\00\00\00\22\00\00\00" }>, align 4
@alloc_774956d95330a9a14527dd1cbe07eaba = private unnamed_addr constant [114 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/pattern.rs\00", align 1
@alloc_a0f1e4c5c96dda375fa3e11d96215082 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\AC\05\00\00\09\00\00\00" }>, align 4
@alloc_049ec31d5d458ff8793c1c9238628b5c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\BB\05\00\00\1B\00\00\00" }>, align 4
@alloc_c2c6f372f1b0ede55803bb0cf4d4723d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\C0\05\00\000\00\00\00" }>, align 4
@alloc_5e3d8b960a4dc41e7827fe2e971b946b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\CE\05\00\00\11\00\00\00" }>, align 4
@alloc_1d512c4983281010f355d01bbfd379b4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\F2\05\00\00\0D\00\00\00" }>, align 4
@alloc_5d904c6c374752fd5fe313d6c3b8cae6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\F7\05\00\00+\00\00\00" }>, align 4
@alloc_3f1759ef14ff9b98f4549fb3b8f29168 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\E5\05\00\00\14\00\00\00" }>, align 4
@alloc_c22e292fe12a348bd48e18ef70629fff = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\E5\05\00\00*\00\00\00" }>, align 4
@alloc_dd59d512fbc3282ec90b17661c246b10 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\E5\05\00\00!\00\00\00" }>, align 4
@alloc_bdd7f0c11b98e0f4250ef7fb13cd4cda = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\E6\05\00\00\15\00\00\00" }>, align 4
@alloc_a25c359f8b0ba481f03558c2cc376352 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\E8\05\00\00'\00\00\00" }>, align 4
@alloc_b5c97c4cf9ca11e48fe7cc203c7941f0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\D9\05\00\00\14\00\00\00" }>, align 4
@alloc_14499683523e9f7956a158939786e324 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\D9\05\00\00*\00\00\00" }>, align 4
@alloc_df3cc7e050890dab9a01bd8b4c48f873 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\D9\05\00\00!\00\00\00" }>, align 4
@alloc_d45350cae856ebdeb5971d4e80e92b14 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\DA\05\00\00&\00\00\00" }>, align 4
@alloc_6ffa2a68bf05aefb1506584c938a7ed8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\DA\05\00\00\15\00\00\00" }>, align 4
@alloc_919392b9a98f8676d96affad06687578 = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/methods.rs\00", align 1
@alloc_bc1173620796b796ebf04091cc898ca7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00a\07\00\00\0E\00\00\00" }>, align 4
@alloc_7b13bce84bc30a18494a4a1a8c05d561 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00T\07\00\00\09\00\00\00" }>, align 4
@anon.ee86b092133f727ec3e6ebb76d315021.0 = private unnamed_addr constant [3 x i8] c"\01\01\01", align 1
@alloc_78b6a49e36fe808e0ef950c2feb9fafc = private unnamed_addr constant [71 x i8] c"to_digit: invalid radix -- radix must be in the range 2 to 36 inclusive", align 1
@alloc_1922db85d76b51c46861d80e1af04722 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_78b6a49e36fe808e0ef950c2feb9fafc, [4 x i8] c"G\00\00\00" }>, align 4
@alloc_565c938b62997b5f0007ec4e3635adb3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\93\01\00\00\09\00\00\00" }>, align 4
@alloc_36a00076424f910f809172461effb54c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\A1\01\00\00\0D\00\00\00" }>, align 4
@alloc_459fdfec0fda0f1274d075bba2f2aeb4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\87\07\00\00\12\00\00\00" }>, align 4
@alloc_4061f960675410a87b3264c715c9c2fe = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\8D\07\00\00\12\00\00\00" }>, align 4
@alloc_b74b59d83e83dbd98e30d4f14ff3afee = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\8E\07\00\00\12\00\00\00" }>, align 4
@alloc_14c21c405a4a19bce7c56d4822ea1d1c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\93\07\00\00\0E\00\00\00" }>, align 4
@alloc_5c062dc56f3b8808e40e41b53dd7d023 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\94\07\00\00\0E\00\00\00" }>, align 4
@alloc_acad745997fce1d6a376b7fe430f74c8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\95\07\00\00\0E\00\00\00" }>, align 4
@alloc_75fb06c2453febd814e73f5f2e72ae38 = private unnamed_addr constant [199 x i8] c"unsafe precondition(s) violated: hint::unreachable_unchecked must never be reached\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@alloc_8821998f047ca62cad40e6bc4e4d87c4 = private unnamed_addr constant [1 x i8] c"\01", align 1
@alloc_0f95007d9fc7aa6bc2f8c8450f7a4078 = private unnamed_addr constant [123 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs\00", align 1
@alloc_73b5535d862a0c29a817dc558636954a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_0f95007d9fc7aa6bc2f8c8450f7a4078, [12 x i8] c"z\00\00\006\0C\00\00\19\00\00\00" }>, align 4
@alloc_1f450499e9677e99816888f298256685 = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs\00", align 1
@alloc_0a2d50b8e0e351fda4016f64eb154376 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00:\0A\00\00+\00\00\00" }>, align 4
@alloc_a6e8913658d98d0dbd0444b57ddfd811 = private unnamed_addr constant [27 x i8] c"chunk size must be non-zero", align 1
@alloc_52400e043e1e9b1bf2be730ef0b31a1f = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_a6e8913658d98d0dbd0444b57ddfd811, [4 x i8] c"\1B\00\00\00" }>, align 4
@alloc_57a8a8c930578b2e3ee501533f28ad28 = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs\00", align 1
@alloc_bb23dba18f73b6eacb8962cd115e8b65 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00f\00\00\00N\00\00\00" }>, align 4
@alloc_86ac038395504669b32d90cafd802417 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00K\07\00\00\13\00\00\00" }>, align 4
@alloc_32ea7ecd5472aadad13b1af66bc6f4d7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00L\07\00\00\17\00\00\00" }>, align 4
@alloc_3ea62aae7b47b364d4b2ad2a9b4b6a6f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00N\07\00\00)\00\00\00" }>, align 4
@alloc_4755015357418eca3e08e93910d6ad3f = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/memchr.rs\00", align 1
@alloc_dc2830e6168cd7059bdfdd23c204604a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_4755015357418eca3e08e93910d6ad3f, [12 x i8] c"r\00\00\00(\00\00\00\0C\00\00\00" }>, align 4
@alloc_446d6b56150b55fa180f023c26fcb951 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_4755015357418eca3e08e93910d6ad3f, [12 x i8] c"r\00\00\00,\00\00\00\09\00\00\00" }>, align 4
@alloc_16136c0fde075309b69bc41ca34aef15 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_4755015357418eca3e08e93910d6ad3f, [12 x i8] c"r\00\00\00\1B\00\00\00\15\00\00\00" }>, align 4
@alloc_5f55955de67e57c79064b537689facea = private unnamed_addr constant [43 x i8] c"called `Option::unwrap()` on a `None` value", align 1
@alloc_cc62d01b473c50ab02f85ec9c3bd7bf2 = private unnamed_addr constant [109 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs\00", align 1
@alloc_b3137e60f77825c6fb095fd13357a058 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_cc62d01b473c50ab02f85ec9c3bd7bf2, [12 x i8] c"l\00\00\00\17\07\00\00 \00\00\00" }>, align 4
@alloc_476509aa7047bd805d630c6546685797 = private unnamed_addr constant [14 x i8] c"explicit panic", align 1
@alloc_00ae4b301f7fab8ac9617c03fcbd7274 = private unnamed_addr constant [43 x i8] c"called `Result::unwrap()` on an `Err` value", align 1
@alloc_62bb002bf8ca4b98cdd2b6cd0b17aa10 = private unnamed_addr constant [31 x i8] c"assertion failed: !c.is_ascii()", align 1
@alloc_21669a72642ad5e16342b4099d0460aa = private unnamed_addr constant [123 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/unicode/unicode_data.rs\00", align 1
@alloc_86b983d6d39cb7735b01eb539ca09c4d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_21669a72642ad5e16342b4099d0460aa, [12 x i8] c"z\00\00\00\BF\01\00\00\09\00\00\00" }>, align 4
@alloc_5bd1ef6667dbdbecff436d9509a4d052 = private unnamed_addr constant [25 x i8] c"attempt to divide by zero", align 1
@alloc_2ca80fe829e7dcbb4661228c202cce92 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_5bd1ef6667dbdbecff436d9509a4d052, [4 x i8] c"\19\00\00\00" }>, align 4
@alloc_e534af126d4f0c0d6698aaa5e548da66 = private unnamed_addr constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero", align 1
@alloc_4a5d1f504800cbe61e09126ad8023985 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_e534af126d4f0c0d6698aaa5e548da66, [4 x i8] c"9\00\00\00" }>, align 4
@alloc_7eec19d3416e3575f65ca3f5643d5a84 = private unnamed_addr constant [28 x i8] c"attempt to add with overflow", align 1
@alloc_491fd71eacc9ac6df50464189817658a = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_7eec19d3416e3575f65ca3f5643d5a84, [4 x i8] c"\1C\00\00\00" }>, align 4
@alloc_1482d7dc779f3e37c63e31d28eda18b3 = private unnamed_addr constant [33 x i8] c"attempt to multiply with overflow", align 1
@alloc_3a541098c7af55f2d1b57c8374ee944e = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_1482d7dc779f3e37c63e31d28eda18b3, [4 x i8] c"!\00\00\00" }>, align 4
@alloc_9f8e76db6a71f2507809208910629059 = private unnamed_addr constant [35 x i8] c"attempt to shift left with overflow", align 1
@alloc_26eab6319fe0d02af8105663e6a2ea8b = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_9f8e76db6a71f2507809208910629059, [4 x i8] c"#\00\00\00" }>, align 4
@alloc_53b7c2e50e2cec3eca67f872cc62c959 = private unnamed_addr constant [36 x i8] c"attempt to shift right with overflow", align 1
@alloc_0f75c28593fb3281511a86ba9b3adf6f = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_53b7c2e50e2cec3eca67f872cc62c959, [4 x i8] c"$\00\00\00" }>, align 4
@alloc_4668a6a56031a745778990d4b3d270b1 = private unnamed_addr constant [33 x i8] c"attempt to subtract with overflow", align 1
@alloc_7daa13c2a11e2a3dbea9e2a29716d6f6 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_4668a6a56031a745778990d4b3d270b1, [4 x i8] c"!\00\00\00" }>, align 4
@alloc_611ea47e56fe111765d49cc77e8ab451 = private unnamed_addr constant [32 x i8] c"char len should be less than 255", align 1
@alloc_17214026076f72c4c7a8147b1ebab094 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00;\02\00\00\0E\00\00\00" }>, align 4
@alloc_6f5f220822aff22df4b7160b0c716d02 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_48683b1c49c4bf30dbb0f6f205e86e4d, [12 x i8] c"b\00\00\00<\01\00\00\15\00\00\00" }>, align 4
@alloc_4b9523bd3933225a2ba132a1dcbebd94 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr inttoptr (i32 1 to ptr), [4 x i8] zeroinitializer }>, align 4
@alloc_16e75092f5486e1166f3ee4e2e074cd2 = private unnamed_addr constant <{ [2 x i8], [6 x i8], [2 x i8], [6 x i8], [8 x i8] }> <{ [2 x i8] c"\02\00", [6 x i8] undef, [2 x i8] c"\02\00", [6 x i8] undef, [8 x i8] c"\00\00\00\00 \00\80\E0" }>, align 4
@alloc_27ffacb4abde6c4c830c0e3ca0ed6df1 = private unnamed_addr constant [20 x i8] c"{size limit reached}", align 1
@alloc_f1952bfb31e00707305f4e64a422b95c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_48683b1c49c4bf30dbb0f6f205e86e4d, [12 x i8] c"b\00\00\00N\01\00\00:\00\00\00" }>, align 4
@alloc_d69701ad1f1a3d5f782a154cef3d422d = private unnamed_addr constant [55 x i8] c"`fmt::Error` from `SizeLimitedFmtAdapter` was discarded", align 1
@alloc_f98e220ab508ba3b63016e55f3577ab1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_48683b1c49c4bf30dbb0f6f205e86e4d, [12 x i8] c"b\00\00\00S\01\00\00\1E\00\00\00" }>, align 4
@alloc_83ad38895c11908d68bf2f563ca774ff = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_48683b1c49c4bf30dbb0f6f205e86e4d, [12 x i8] c"b\00\00\00Q\01\00\00\19\00\00\00" }>, align 4
@alloc_677f668e3a9503abedaddd46af61aee7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F8\00\00\00\0A\00\00\00" }>, align 4
@alloc_88ce7b92c6aafc569d4a4777274d809e = private unnamed_addr constant [9 x i8] c"punycode{", align 1
@alloc_ccea59e639831cff4c0dbfcb555f239a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\00\01\00\00\15\00\00\00" }>, align 4
@alloc_26bf217fdaad2408bdf1d219b6a30245 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FF\00\00\00\15\00\00\00" }>, align 4
@alloc_293e1ae52fc2307e97f6de12faaf2236 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\02\01\00\00\11\00\00\00" }>, align 4
@alloc_37d9e268e28339e37fe0111861dca409 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\FA\00\00\00\11\00\00\00" }>, align 4
@alloc_f388cad9ad2c46079edbe88ef20a157f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e1a44fd4e56181d0f80818eb5f85bb20, [12 x i8] c"a\00\00\00\F4\00\00\00\11\00\00\00" }>, align 4
@alloc_2c67e7787ff147837ab1e4920c513016 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00o\00\00\00'\00\00\00" }>, align 4
@alloc_f94f14b23a1fc2ef6892d561ec2a0ccb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00r\00\00\00$\00\00\00" }>, align 4
@alloc_3a6e44e4d11de5ff03f4892394d6d3f2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00r\00\00\00!\00\00\00" }>, align 4
@alloc_d75c2f4d6928e83478942dc919625b6d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00r\00\00\00H\00\00\00" }>, align 4
@alloc_400f6dfbe7df26add2272910550c5a55 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00s\00\00\00\1A\00\00\00" }>, align 4
@alloc_5ac800b90c06f80bcb4dd34e37cb7c04 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00t\00\00\00\19\00\00\00" }>, align 4
@alloc_16016884d996c020b518e7911de2113c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00w\00\00\00!\00\00\00" }>, align 4
@alloc_8544a4f2d44fd3e383615fa06a5b8f0c = private unnamed_addr constant [2 x i8] c"_$", align 1
@alloc_d7399961d0adc85370d864c3570549cc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00~\00\00\00\1D\00\00\00" }>, align 4
@alloc_1b243fe54ba5b640071102c8b5265832 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\B4\00\00\00&\00\00\00" }>, align 4
@alloc_fa3f58532c65c48d7b9e8b89c47a840a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\B5\00\00\00!\00\00\00" }>, align 4
@alloc_6686f5215d8a8bce53ac0bb42642faca = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\B4\00\00\00\15\00\00\00" }>, align 4
@alloc_bf16bea2cef4cb22c98046d34047ad09 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\8A\00\00\00I\00\00\00" }>, align 4
@alloc_059f6a666acedab2d13eb6d85cb3ffd4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\8B\00\00\00\1F\00\00\00" }>, align 4
@alloc_285baa8a279c4e81a1b5bb370cf127a6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\8B\00\00\000\00\00\00" }>, align 4
@alloc_8ceffa69b888ba953dba1717e0ee2efc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\8B\00\00\00/\00\00\00" }>, align 4
@alloc_b07400b063106d66d727ea8b42360c07 = private unnamed_addr constant [2 x i8] c"SP", align 1
@alloc_a05a8addff0dd0f9a55cfac42d3445f0 = private unnamed_addr constant [2 x i8] c"BP", align 1
@alloc_98ee5ebaa85bed64049c424f3f670f0b = private unnamed_addr constant [2 x i8] c"RF", align 1
@alloc_2f246504aa99eaedeef1625727126dc9 = private unnamed_addr constant [2 x i8] c"LT", align 1
@alloc_472233e3a97d7cbe3d756975aa813314 = private unnamed_addr constant [2 x i8] c"GT", align 1
@alloc_188de2f57e9076ce6ca98e40244fa8e2 = private unnamed_addr constant [2 x i8] c"LP", align 1
@alloc_b6548055efc46bed391599c8fe0adb46 = private unnamed_addr constant [2 x i8] c"RP", align 1
@alloc_bf49c2ac31e4ccf04b1b63e6969a8809 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\9D\00\00\005\00\00\00" }>, align 4
@alloc_fde1b21fcdbc805531325d0507f3fe57 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\A8\00\00\00)\00\00\00" }>, align 4
@alloc_efb6e0532e6eba689eb318f4f2a27eb4 = private unnamed_addr constant [1 x i8] c"@", align 1
@alloc_3cd5175c6bf9e74ed5ed918e7615245e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\B1\00\00\00\15\00\00\00" }>, align 4
@alloc_e500fde2e006978d04c15282e7e3f7b7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\BA\00\00\00\0D\00\00\00" }>, align 4
@alloc_b9d3a0eb7ad892bf3a8146366d322fcd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\82\00\00\00,\00\00\00" }>, align 4
@alloc_4b23fb7731410d41b230c7559822ca74 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\84\00\00\00%\00\00\00" }>, align 4
@alloc_ecaad7bfe86d5ca91e75d4aff4d035e0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\83\00\00\00\19\00\00\00" }>, align 4
@alloc_0f52f98e9fa44caf6668aeb0b1c94ca5 = private unnamed_addr constant [1 x i8] c".", align 1
@alloc_346348a1988a187d6ee81609da1ff80a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\87\00\00\00%\00\00\00" }>, align 4
@alloc_f4743a68badfdd527cdd39aa99892d2e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00\86\00\00\00\19\00\00\00" }>, align 4
@alloc_51c8ce62660825ac2fdd1bfd75e52598 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00{\00\00\00\11\00\00\00" }>, align 4
@alloc_cf4340fa65f82461473ec4e4fcd65082 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7dd5948dd852e37d3ea5363c4d34c279, [12 x i8] c"e\00\00\00p\00\00\00\1D\00\00\00" }>, align 4
@vtable.1 = private constant <{ [12 x i8], ptr, ptr, ptr }> <{ [12 x i8] c"\00\00\00\00\0C\00\00\00\04\00\00\00", ptr @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h15d60bbff95f40b2E", ptr @_ZN4core3fmt5Write10write_char17h662c5676ef1cb115E, ptr @_ZN4core3fmt5Write9write_fmt17h61407c8efb4119f8E }>, align 4, !dbg !15
@alloc_c5bd19d24cd02a5fc6ca5f7699177812 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00i\04\00\00$\00\00\00" }>, align 4
@alloc_cf7d4dd73d1fc3da4dbfc4e115a0b183 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00p\04\00\00\19\00\00\00" }>, align 4
@alloc_60e890c0bc135a4c99ea73851717ee03 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\87\04\00\00\1D\00\00\00" }>, align 4
@alloc_69d81e4ea8d7bf152741d828bff053cb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\B7\01\00\00G\00\00\00" }>, align 4
@alloc_4ae71ff8f7ebb931e6d576230c5bd8dc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\B7\01\00\009\00\00\00" }>, align 4
@alloc_4e411d4f3d19f521b484797a6129e1f9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\CA\01\00\00 \00\00\00" }>, align 4
@alloc_10fdff352e96f10029a1c934347131ee = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\CA\01\00\00\11\00\00\00" }>, align 4
@alloc_a5e5388120af2d07701d6f3583b8d243 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\CC\01\00\00&\00\00\00" }>, align 4
@alloc_d16a303c11d14d09a9daae8ee946957c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\CE\01\00\007\00\00\00" }>, align 4
@alloc_97acc32034a64f481c6cbd1374cbe63b = private unnamed_addr constant [111 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/iter.rs\00", align 1
@alloc_134ead117cdd9054461fa95e16eba5da = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_97acc32034a64f481c6cbd1374cbe63b, [12 x i8] c"n\00\00\00\C0\00\00\00&\00\00\00" }>, align 4
@alloc_383483fe6d8fc70f0bd38bbd0780906e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_97acc32034a64f481c6cbd1374cbe63b, [12 x i8] c"n\00\00\00\C0\00\00\00\11\00\00\00" }>, align 4
@alloc_b1caa4ed37351f4cf850c25fcadd17e4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\B9\02\00\00\1C\00\00\00" }>, align 4
@alloc_5c23c5d7fe8a0bb232923465bc7b28cd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\BD\02\00\00.\00\00\00" }>, align 4
@alloc_857f9ef46cba96783c42d4beae65b6a9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_774956d95330a9a14527dd1cbe07eaba, [12 x i8] c"q\00\00\00\BB\02\00\00-\00\00\00" }>, align 4
@alloc_ca17cd43af3110a9099714c81e49f946 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00{\07\00\00%\00\00\00" }>, align 4

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7ed85dc997dbfcb8E"(ptr align 4 %self) unnamed_addr #0 !dbg !235 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !325, !DIExpression(), !328)
; call <core::iter::sources::from_fn::FromFn<F> as core::iter::traits::iterator::Iterator>::next
  %_2 = call i32 @"_ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h466025eecc58b398E"(ptr align 4 %self) #13, !dbg !329
  %_4 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !330
; call core::option::Option<T>::map
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hf1f6c34191675129E"(i32 %_2, ptr align 1 %_4) #13, !dbg !331
  ret i32 %_0, !dbg !332
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h830f1e4139d36221E"(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !333 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !354, !DIExpression(), !357)
; call <core::slice::iter::ChunksExact<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call { ptr, i32 } @"_ZN98_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haca5222bd32edfbcE"(ptr align 4 %self) #13, !dbg !358
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !358
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !358
  %_4 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !359
; call core::option::Option<T>::map
  call void @"_ZN4core6option15Option$LT$T$GT$3map17hfe66546d634bb094E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %_2.0, i32 %_2.1, ptr align 1 %_4) #13, !dbg !360
  ret void, !dbg !361
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfebd28b335ac4229E"(ptr align 4 %self) unnamed_addr #0 !dbg !362 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !378, !DIExpression(), !381)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h830f1e4139d36221E"(ptr sret([8 x i8]) align 4 %_2, ptr align 4 %self) #13, !dbg !382
  %_4 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !383
; call core::option::Option<T>::map
  %0 = call { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h6817531c2f27cd6fE"(ptr align 4 %_2, ptr align 1 %_4) #13, !dbg !384
  %_0.0 = extractvalue { i1, i8 } %0, 0, !dbg !384
  %_0.1 = extractvalue { i1, i8 } %0, 1, !dbg !384
  %1 = insertvalue { i1, i8 } poison, i1 %_0.0, 0, !dbg !385
  %2 = insertvalue { i1, i8 } %1, i8 %_0.1, 1, !dbg !385
  ret { i1, i8 } %2, !dbg !385
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define dso_local { i1, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e108c95f602196cE"(ptr align 4 %self) unnamed_addr #1 !dbg !386 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !414, !DIExpression(), !416)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %self) #13, !dbg !417
; call core::option::Option<&T>::copied
  %0 = call { i1, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h09d9dcc23ede58a2E"(ptr align 1 %_2) #13, !dbg !418
  %_0.0 = extractvalue { i1, i8 } %0, 0, !dbg !418
  %_0.1 = extractvalue { i1, i8 } %0, 1, !dbg !418
  %1 = insertvalue { i1, i8 } poison, i1 %_0.0, 0, !dbg !419
  %2 = insertvalue { i1, i8 } %1, i8 %_0.1, 1, !dbg !419
  ret { i1, i8 } %2, !dbg !419
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17he689a934971b3877E"(ptr align 4 %self) unnamed_addr #1 !dbg !420 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !453, !DIExpression(), !459)
    #dbg_declare(ptr %init.dbg.spill, !454, !DIExpression(), !460)
    #dbg_declare(ptr %f.dbg.spill, !455, !DIExpression(), !461)
; call core::iter::adapters::copied::copy_try_fold
  call void @_ZN4core4iter8adapters6copied13copy_try_fold17hc6d3acede75ec086E() #13, !dbg !462
; call core::iter::traits::iterator::Iterator::try_fold
  %_0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6352b8cd1fa40f98E(ptr align 4 %self) #13, !dbg !463
  ret i1 %_0, !dbg !464
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hea885580af465df8E"(ptr align 4 %self) unnamed_addr #1 !dbg !465 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !474, !DIExpression(), !479)
    #dbg_declare(ptr %init.dbg.spill, !475, !DIExpression(), !480)
    #dbg_declare(ptr %f.dbg.spill, !476, !DIExpression(), !481)
; call core::iter::adapters::copied::copy_try_fold
  call void @_ZN4core4iter8adapters6copied13copy_try_fold17hb0727807dd6ef137E() #13, !dbg !482
; call core::iter::traits::iterator::Iterator::try_fold
  %_0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hfac8b8c112ec49a3E(ptr align 4 %self) #13, !dbg !483
  ret i1 %_0, !dbg !484
}

; <core::iter::sources::from_fn::FromFn<F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h466025eecc58b398E"(ptr align 4 %self) unnamed_addr #0 !dbg !485 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !505, !DIExpression(), !507)
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  %_0 = call i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h8e3be2663a30ac95E"(ptr align 4 %self) #13, !dbg !508
  ret i32 %_0, !dbg !509
}

; <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h83484fc40dfb0c0fE"(ptr align 4 %self) unnamed_addr #0 !dbg !510 {
start:
  %v.dbg.spill = alloca [2 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !542, !DIExpression(), !545)
  %_3 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !546
; call core::option::Option<T>::take
  %0 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$4take17h852553d9f7787cd7E"(ptr align 1 %_3) #13, !dbg !547
  %1 = extractvalue { i8, i8 } %0, 0, !dbg !547
  %2 = extractvalue { i8, i8 } %0, 1, !dbg !547
  store i8 %1, ptr %_2, align 1, !dbg !547
  %3 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !547
  store i8 %2, ptr %3, align 1, !dbg !547
  %4 = load i8, ptr %_2, align 1, !dbg !546
  %5 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !546
  %6 = load i8, ptr %5, align 1, !dbg !546
  %7 = icmp eq i8 %4, 2, !dbg !546
  %_4 = select i1 %7, i32 0, i32 1, !dbg !546
  %8 = trunc nuw i32 %_4 to i1, !dbg !548
  br i1 %8, label %bb4, label %bb3, !dbg !548

bb4:                                              ; preds = %start
  %9 = load i8, ptr %_2, align 1, !dbg !549
  %v.0 = trunc nuw i8 %9 to i1, !dbg !549
  %10 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !549
  %v.1 = load i8, ptr %10, align 1, !dbg !549
  %11 = zext i1 %v.0 to i8, !dbg !549
  store i8 %11, ptr %v.dbg.spill, align 1, !dbg !549
  %12 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 1, !dbg !549
  store i8 %v.1, ptr %12, align 1, !dbg !549
    #dbg_declare(ptr %v.dbg.spill, !543, !DIExpression(), !550)
  %13 = zext i1 %v.0 to i8, !dbg !551
  store i8 %13, ptr %_0, align 1, !dbg !551
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !551
  store i8 %v.1, ptr %14, align 1, !dbg !551
  br label %bb5, !dbg !552

bb3:                                              ; preds = %start
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %15 = call { i1, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h62f550c9487e9adaE"(ptr align 4 %self) #13, !dbg !553
  %16 = extractvalue { i1, i8 } %15, 0, !dbg !553
  %17 = extractvalue { i1, i8 } %15, 1, !dbg !553
  %18 = zext i1 %16 to i8, !dbg !553
  store i8 %18, ptr %_0, align 1, !dbg !553
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !553
  store i8 %17, ptr %19, align 1, !dbg !553
  br label %bb5, !dbg !553

bb5:                                              ; preds = %bb4, %bb3
  %20 = load i8, ptr %_0, align 1, !dbg !554
  %21 = trunc nuw i8 %20 to i1, !dbg !554
  %22 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !554
  %23 = load i8, ptr %22, align 1, !dbg !554
  %24 = insertvalue { i1, i8 } poison, i1 %21, 0, !dbg !554
  %25 = insertvalue { i1, i8 } %24, i8 %23, 1, !dbg !554
  ret { i1, i8 } %25, !dbg !554

bb2:                                              ; No predecessors!
  unreachable, !dbg !546
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::exact_size::ExactSizeIterator>::len
; Function Attrs: nounwind
define dso_local i32 @"_ZN115_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb7ba9df55e1e2126E"(ptr align 4 %self) unnamed_addr #1 !dbg !555 {
start:
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !561, !DIExpression(), !562)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !563, !DIExpression(), !575)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !577
  %_5.i = load ptr, ptr %0, align 4, !dbg !577
  store ptr %_5.i, ptr %end.dbg.spill.i, align 4, !dbg !578
    #dbg_declare(ptr %end.dbg.spill.i, !573, !DIExpression(), !579)
  %_6.i = load ptr, ptr %self, align 4, !dbg !580
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i, ptr %_6.i) #13, !dbg !581
  store i32 %1, ptr %_0.i, align 4, !dbg !581
  %2 = load i32, ptr %_0.i, align 4, !dbg !582
  ret i32 %2, !dbg !583
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::double_ended::DoubleEndedIterator>::try_rfold
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN119_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9try_rfold17h6b37307d68fd4dc3E"(ptr align 4 %self, i32 %init) unnamed_addr #1 !dbg !584 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !613, !DIExpression(), !619)
  store i32 %init, ptr %init.dbg.spill, align 4
    #dbg_declare(ptr %init.dbg.spill, !614, !DIExpression(), !620)
    #dbg_declare(ptr %f.dbg.spill, !615, !DIExpression(), !621)
; call core::iter::adapters::copied::copy_try_fold
  call void @_ZN4core4iter8adapters6copied13copy_try_fold17h7b7b3ea9fb2174f4E() #13, !dbg !622
; call core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
  %0 = call { i32, i32 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17he31cd2a88487d966E(ptr align 4 %self, i32 %init) #13, !dbg !623
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !623
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !623
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !624
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !624
  ret { i32, i32 } %2, !dbg !624
}

; rustc_demangle::try_demangle
; Function Attrs: nounwind
define dso_local void @_ZN14rustc_demangle12try_demangle17ha4e77b578672c97dE(ptr sret([32 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !625 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  %sym = alloca [32 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !691, !DIExpression(), !694)
    #dbg_declare(ptr %sym, !692, !DIExpression(), !695)
; call rustc_demangle::demangle
  call void @_ZN14rustc_demangle8demangle17hddccca6ff9567998E(ptr sret([32 x i8]) align 4 %sym, ptr align 1 %s.0, i32 %s.1) #13, !dbg !696
; call core::option::Option<T>::is_some
  %_3 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h225c9ea2b583ce0fE"(ptr align 4 %sym) #13, !dbg !697
  br i1 %_3, label %bb3, label %bb4, !dbg !698

bb4:                                              ; preds = %start
  store i32 2, ptr %_0, align 4, !dbg !699
  br label %bb5, !dbg !700

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %sym, i32 32, i1 false), !dbg !701
  br label %bb5, !dbg !700

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !702
}

; rustc_demangle::is_symbol_like
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle14is_symbol_like17h5659f9504ee70352E(ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !703 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !708, !DIExpression(), !709)
; call core::str::<impl str>::chars
  %1 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %s.0, i32 %s.1) #13, !dbg !710
  %2 = extractvalue { ptr, ptr } %1, 0, !dbg !710
  %3 = extractvalue { ptr, ptr } %1, 1, !dbg !710
  store ptr %2, ptr %_3, align 4, !dbg !710
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !710
  store ptr %3, ptr %4, align 4, !dbg !710
; call core::iter::traits::iterator::Iterator::all
  %_0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h717127c3919a9b93E(ptr align 4 %_3) #13, !dbg !711
  ret i1 %_0, !dbg !712
}

; rustc_demangle::is_symbol_like::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle14is_symbol_like28_$u7b$$u7b$closure$u7d$$u7d$17h4969f401d43ad9b4E"(ptr align 1 %_1, i32 %c) unnamed_addr #0 !dbg !713 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !721, !DIExpression(), !722)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !720, !DIExpression(), !723)
; call rustc_demangle::is_ascii_alphanumeric
  %_3 = call zeroext i1 @_ZN14rustc_demangle21is_ascii_alphanumeric17h63e3240c294e32f6E(i32 %c) #13, !dbg !724
  br i1 %_3, label %bb2, label %bb3, !dbg !724

bb3:                                              ; preds = %start
; call rustc_demangle::is_ascii_punctuation
  %0 = call zeroext i1 @_ZN14rustc_demangle20is_ascii_punctuation17hc111bb0144696b4aE(i32 %c) #13, !dbg !725
  %1 = zext i1 %0 to i8, !dbg !725
  store i8 %1, ptr %_0, align 1, !dbg !725
  br label %bb4, !dbg !725

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !724
  br label %bb4, !dbg !724

bb4:                                              ; preds = %bb2, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !726
  %3 = trunc nuw i8 %2 to i1, !dbg !726
  ret i1 %3, !dbg !726
}

; rustc_demangle::is_ascii_punctuation
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle20is_ascii_punctuation17hc111bb0144696b4aE(i32 %c) unnamed_addr #1 !dbg !727 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !731, !DIExpression(), !732)
  %_8 = icmp ule i32 33, %c, !dbg !733
  br i1 %_8, label %bb8, label %bb2, !dbg !733

bb2:                                              ; preds = %bb8, %start
  %_6 = icmp ule i32 58, %c, !dbg !734
  br i1 %_6, label %bb7, label %bb3, !dbg !734

bb8:                                              ; preds = %start
  %_9 = icmp ule i32 %c, 47, !dbg !733
  br i1 %_9, label %bb9, label %bb2, !dbg !733

bb9:                                              ; preds = %bb6, %bb7, %bb8
  store i8 1, ptr %_0, align 1, !dbg !735
  br label %bb10, !dbg !735

bb3:                                              ; preds = %bb7, %bb2
  %_4 = icmp ule i32 91, %c, !dbg !736
  br i1 %_4, label %bb6, label %bb4, !dbg !736

bb7:                                              ; preds = %bb2
  %_7 = icmp ule i32 %c, 64, !dbg !734
  br i1 %_7, label %bb9, label %bb3, !dbg !734

bb4:                                              ; preds = %bb6, %bb3
  %_2 = icmp ule i32 123, %c, !dbg !737
  br i1 %_2, label %bb5, label %bb1, !dbg !737

bb6:                                              ; preds = %bb3
  %_5 = icmp ule i32 %c, 96, !dbg !736
  br i1 %_5, label %bb9, label %bb4, !dbg !736

bb1:                                              ; preds = %bb4
  store i8 0, ptr %_0, align 1, !dbg !738
  br label %bb10, !dbg !738

bb5:                                              ; preds = %bb4
  %_3 = icmp ule i32 %c, 126, !dbg !737
  %0 = icmp ne i1 %_3, false, !dbg !737
  %1 = zext i1 %0 to i8, !dbg !737
  store i8 %1, ptr %_0, align 1, !dbg !737
  br label %bb10, !dbg !737

bb10:                                             ; preds = %bb9, %bb5, %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !739
  %3 = trunc nuw i8 %2 to i1, !dbg !739
  ret i1 %3, !dbg !739
}

; rustc_demangle::is_ascii_alphanumeric
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle21is_ascii_alphanumeric17h63e3240c294e32f6E(i32 %c) unnamed_addr #1 !dbg !740 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !742, !DIExpression(), !743)
  %_6 = icmp ule i32 65, %c, !dbg !744
  br i1 %_6, label %bb6, label %bb2, !dbg !744

bb2:                                              ; preds = %bb6, %start
  %_4 = icmp ule i32 97, %c, !dbg !745
  br i1 %_4, label %bb5, label %bb3, !dbg !745

bb6:                                              ; preds = %start
  %_7 = icmp ule i32 %c, 90, !dbg !744
  br i1 %_7, label %bb7, label %bb2, !dbg !744

bb7:                                              ; preds = %bb5, %bb6
  store i8 1, ptr %_0, align 1, !dbg !746
  br label %bb8, !dbg !746

bb3:                                              ; preds = %bb5, %bb2
  %_2 = icmp ule i32 48, %c, !dbg !747
  br i1 %_2, label %bb4, label %bb1, !dbg !747

bb5:                                              ; preds = %bb2
  %_5 = icmp ule i32 %c, 122, !dbg !745
  br i1 %_5, label %bb7, label %bb3, !dbg !745

bb1:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1, !dbg !748
  br label %bb8, !dbg !748

bb4:                                              ; preds = %bb3
  %_3 = icmp ule i32 %c, 57, !dbg !747
  %0 = icmp ne i1 %_3, false, !dbg !747
  %1 = zext i1 %0 to i8, !dbg !747
  store i8 %1, ptr %_0, align 1, !dbg !747
  br label %bb8, !dbg !747

bb8:                                              ; preds = %bb7, %bb4, %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !749
  %3 = trunc nuw i8 %2 to i1, !dbg !749
  ret i1 %3, !dbg !749
}

; rustc_demangle::v0::HexNibbles::try_parse_uint
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h1ef6a10dcba92f07E(ptr sret([16 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !750 {
start:
  %val.dbg.spill.i = alloca [4 x i8], align 4
  %self.i = alloca [8 x i8], align 4
  %nibble.dbg.spill = alloca [4 x i8], align 4
  %nibbles.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %v = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !774, !DIExpression(), !786)
    #dbg_declare(ptr %v, !777, !DIExpression(), !787)
    #dbg_declare(ptr %iter, !779, !DIExpression(), !788)
  %_21.0 = load ptr, ptr %self, align 4, !dbg !789
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !789
  %_21.1 = load i32, ptr %0, align 4, !dbg !789
; call core::str::<impl str>::trim_start_matches
  %1 = call { ptr, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$18trim_start_matches17h5fedf5b6593d03b4E"(ptr align 1 %_21.0, i32 %_21.1, ptr align 1 @alloc_dda1ee2b88b89b9cdac753eef7988035, i32 1) #13, !dbg !790
  %nibbles.0 = extractvalue { ptr, i32 } %1, 0, !dbg !790
  %nibbles.1 = extractvalue { ptr, i32 } %1, 1, !dbg !790
  store ptr %nibbles.0, ptr %nibbles.dbg.spill, align 4, !dbg !790
  %2 = getelementptr inbounds i8, ptr %nibbles.dbg.spill, i32 4, !dbg !790
  store i32 %nibbles.1, ptr %2, align 4, !dbg !790
    #dbg_declare(ptr %nibbles.dbg.spill, !775, !DIExpression(), !791)
; call core::str::<impl str>::len
  %_4 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %nibbles.0, i32 %nibbles.1) #13, !dbg !792
  %_3 = icmp ugt i32 %_4, 16, !dbg !793
  br i1 %_3, label %bb3, label %bb4, !dbg !793

bb4:                                              ; preds = %start
  store i64 0, ptr %v, align 8, !dbg !794
; call core::str::<impl str>::chars
  %3 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %nibbles.0, i32 %nibbles.1) #13, !dbg !795
  %_7.0 = extractvalue { ptr, ptr } %3, 0, !dbg !795
  %_7.1 = extractvalue { ptr, ptr } %3, 1, !dbg !795
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %4 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf08d3cb0f782247dE"(ptr %_7.0, ptr %_7.1) #13, !dbg !796
  %_6.0 = extractvalue { ptr, ptr } %4, 0, !dbg !796
  %_6.1 = extractvalue { ptr, ptr } %4, 1, !dbg !796
  store ptr %_6.0, ptr %iter, align 4, !dbg !796
  %5 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !796
  store ptr %_6.1, ptr %5, align 4, !dbg !796
  br label %bb7, !dbg !797

bb3:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !798
  br label %bb15, !dbg !799

bb7:                                              ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17he2879523de7c6a7eE.exit", %bb4
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %6 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %iter) #13, !dbg !788
  store i32 %6, ptr %_9, align 4, !dbg !788
  %7 = load i32, ptr %_9, align 4, !dbg !788
  %8 = icmp eq i32 %7, 1114112, !dbg !788
  %_11 = select i1 %8, i32 0, i32 1, !dbg !788
  %9 = trunc nuw i32 %_11 to i1, !dbg !788
  br i1 %9, label %bb10, label %bb11, !dbg !788

bb10:                                             ; preds = %bb7
  %nibble = load i32, ptr %_9, align 4, !dbg !800
  store i32 %nibble, ptr %nibble.dbg.spill, align 4, !dbg !800
    #dbg_declare(ptr %nibble.dbg.spill, !784, !DIExpression(), !801)
  %_14 = load i64, ptr %v, align 8, !dbg !802
  %_13 = shl i64 %_14, 4, !dbg !803
; call core::char::methods::<impl char>::to_digit
  %10 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %nibble, i32 16) #13, !dbg !804
  %_19.0 = extractvalue { i32, i32 } %10, 0, !dbg !804
  %_19.1 = extractvalue { i32, i32 } %10, 1, !dbg !804
  store i32 %_19.0, ptr %self.i, align 4
  %11 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_19.1, ptr %11, align 4
    #dbg_declare(ptr %self.i, !805, !DIExpression(), !846)
  %_2.i = load i32, ptr %self.i, align 4, !dbg !848
  %12 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !848
  %13 = load i32, ptr %12, align 4, !dbg !848
  %14 = trunc nuw i32 %_2.i to i1, !dbg !849
  br i1 %14, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17he2879523de7c6a7eE.exit", label %bb2.i, !dbg !849

bb2.i:                                            ; preds = %bb10
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h87f3d65d3174ccbeE(ptr align 4 @alloc_33f06a9a51b5ca8155ec88ba5be05022) #14, !dbg !850
  unreachable, !dbg !850

"_ZN4core6option15Option$LT$T$GT$6unwrap17he2879523de7c6a7eE.exit": ; preds = %bb10
  %15 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !851
  %val.i = load i32, ptr %15, align 4, !dbg !851
  store i32 %val.i, ptr %val.dbg.spill.i, align 4, !dbg !851
    #dbg_declare(ptr %val.dbg.spill.i, !844, !DIExpression(), !852)
  %_17 = zext i32 %val.i to i64, !dbg !853
  %16 = or i64 %_13, %_17, !dbg !854
  store i64 %16, ptr %v, align 8, !dbg !854
  br label %bb7, !dbg !797

bb11:                                             ; preds = %bb7
  %_20 = load i64, ptr %v, align 8, !dbg !855
  %17 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !856
  store i64 %_20, ptr %17, align 8, !dbg !856
  store i64 1, ptr %_0, align 8, !dbg !856
  br label %bb15, !dbg !799

bb15:                                             ; preds = %bb3, %bb11
  ret void, !dbg !799

bb9:                                              ; No predecessors!
  unreachable, !dbg !788
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars17h19864841f71ddfdfE(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !857 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_15 = alloca [20 x i8], align 4
  %_13 = alloca [20 x i8], align 4
  %_10 = alloca [20 x i8], align 4
  %chars = alloca [20 x i8], align 4
  %_7 = alloca [20 x i8], align 4
  %_6 = alloca [20 x i8], align 4
  %bytes = alloca [20 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !875, !DIExpression(), !880)
    #dbg_declare(ptr %bytes, !876, !DIExpression(), !881)
    #dbg_declare(ptr %chars, !878, !DIExpression(), !882)
  %_16.0 = load ptr, ptr %self, align 4, !dbg !883
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !883
  %_16.1 = load i32, ptr %0, align 4, !dbg !883
; call core::str::<impl str>::len
  %_3 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %_16.0, i32 %_16.1) #13, !dbg !884
  %_2 = urem i32 %_3, 2, !dbg !883
  %1 = icmp eq i32 %_2, 0, !dbg !883
  br i1 %1, label %bb4, label %bb3, !dbg !883

bb4:                                              ; preds = %start
  %_17.0 = load ptr, ptr %self, align 4, !dbg !885
  %2 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !885
  %_17.1 = load i32, ptr %2, align 4, !dbg !885
  store ptr %_17.0, ptr %self.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_17.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !893)
  %4 = insertvalue { ptr, i32 } poison, ptr %_17.0, 0, !dbg !895
  %5 = insertvalue { ptr, i32 } %4, i32 %_17.1, 1, !dbg !895
  %_8.0 = extractvalue { ptr, i32 } %5, 0, !dbg !896
  %_8.1 = extractvalue { ptr, i32 } %5, 1, !dbg !896
; call core::slice::<impl [T]>::chunks_exact
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12chunks_exact17haf7548331f493393E"(ptr sret([20 x i8]) align 4 %_7, ptr align 1 %_8.0, i32 %_8.1, i32 2, ptr align 4 @alloc_48d31bbce195870ee4460192f8c27051) #13, !dbg !897
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h59a589504a54795aE(ptr sret([20 x i8]) align 4 %_6, ptr align 4 %_7) #13, !dbg !898
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17hb630c309db724195E(ptr sret([20 x i8]) align 4 %bytes, ptr align 4 %_6) #13, !dbg !899
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_10, ptr align 4 %bytes, i32 20, i1 false), !dbg !900
; call core::iter::sources::from_fn::from_fn
  call void @_ZN4core4iter7sources7from_fn7from_fn17h39c1256d2667268aE(ptr sret([20 x i8]) align 4 %chars, ptr align 4 %_10) #13, !dbg !901
; call <core::iter::sources::from_fn::FromFn<F> as core::clone::Clone>::clone
  call void @"_ZN84_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h316aad9d6a4fa6c9E"(ptr sret([20 x i8]) align 4 %_13, ptr align 4 %chars) #13, !dbg !902
; call core::iter::traits::iterator::Iterator::any
  %_11 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h1076ee9e92f1b00dE(ptr align 4 %_13) #13, !dbg !903
  br i1 %_11, label %bb12, label %bb13, !dbg !904

bb3:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !905
  br label %bb15, !dbg !906

bb13:                                             ; preds = %bb4
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17hdfcd3cc677effb67E(ptr sret([20 x i8]) align 4 %_15, ptr align 4 %chars) #13, !dbg !907
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_15, i32 20, i1 false), !dbg !908
  br label %bb15, !dbg !909

bb12:                                             ; preds = %bb4
  store ptr null, ptr %_0, align 4, !dbg !910
  br label %bb15, !dbg !909

bb15:                                             ; preds = %bb3, %bb12, %bb13
  ret void, !dbg !906
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h0a07fb9b653d1643E"(ptr align 1 %_1, ptr align 4 %_2) unnamed_addr #0 !dbg !911 {
start:
  %lo.dbg.spill = alloca [1 x i8], align 1
  %hi.dbg.spill = alloca [1 x i8], align 1
  %half.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [0 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !923, !DIExpression(), !925)
    #dbg_declare(ptr %_2, !924, !DIExpression(), !926)
    #dbg_declare(ptr %half.dbg.spill, !919, !DIExpression(), !927)
  %0 = getelementptr inbounds nuw ptr, ptr %_2, i32 0, !dbg !928
  %_15 = load ptr, ptr %0, align 4, !dbg !928
  %hi = load i8, ptr %_15, align 1, !dbg !928
  store i8 %hi, ptr %hi.dbg.spill, align 1, !dbg !928
    #dbg_declare(ptr %hi.dbg.spill, !916, !DIExpression(), !929)
  %1 = getelementptr inbounds nuw ptr, ptr %_2, i32 1, !dbg !930
  %_16 = load ptr, ptr %1, align 4, !dbg !930
  %lo = load i8, ptr %_16, align 1, !dbg !930
  store i8 %lo, ptr %lo.dbg.spill, align 1, !dbg !930
    #dbg_declare(ptr %lo.dbg.spill, !918, !DIExpression(), !931)
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
  %_7 = call i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h7fc3446f4b9afaa9E"(ptr align 1 %_5, i8 %hi) #13, !dbg !932
  %_6 = shl i8 %_7, 4, !dbg !933
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
  %_12 = call i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h7fc3446f4b9afaa9E"(ptr align 1 %_5, i8 %lo) #13, !dbg !934
  %_0 = or i8 %_6, %_12, !dbg !933
  ret i8 %_0, !dbg !935
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h8e3be2663a30ac95E"(ptr align 4 %_1) unnamed_addr #0 !dbg !936 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !941, !DIExpression(DW_OP_deref), !942)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i1, i8 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfebd28b335ac4229E"(ptr align 4 %_1) #13, !dbg !943
  %_2.0 = extractvalue { i1, i8 } %0, 0, !dbg !943
  %_2.1 = extractvalue { i1, i8 } %0, 1, !dbg !943
; call core::option::Option<T>::map
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hf03f6be6515e1e43E"(i1 zeroext %_2.0, i8 %_2.1, ptr align 4 %_1) #13, !dbg !944
  ret i32 %_0, !dbg !945
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17ha29bdf3d74e4c4aaE"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %_1, ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !946 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !955, !DIExpression(), !956)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !951, !DIExpression(), !957)
  %1 = icmp eq i32 %slice.1, 2, !dbg !958
  br i1 %1, label %bb2, label %bb1, !dbg !958

bb2:                                              ; preds = %start
  %a = getelementptr inbounds nuw i8, ptr %slice.0, i32 0, !dbg !959
  store ptr %a, ptr %a.dbg.spill, align 4, !dbg !959
    #dbg_declare(ptr %a.dbg.spill, !952, !DIExpression(), !960)
  %b = getelementptr inbounds nuw i8, ptr %slice.0, i32 1, !dbg !961
  store ptr %b, ptr %b.dbg.spill, align 4, !dbg !961
    #dbg_declare(ptr %b.dbg.spill, !954, !DIExpression(), !962)
  %2 = getelementptr inbounds nuw ptr, ptr %_0, i32 0, !dbg !963
  store ptr %a, ptr %2, align 4, !dbg !963
  %3 = getelementptr inbounds nuw ptr, ptr %_0, i32 1, !dbg !963
  store ptr %b, ptr %3, align 4, !dbg !963
  ret void, !dbg !964

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hb75f2f96287725c0E(ptr align 1 @alloc_a500d906b91607583596fa15e63c2ada, i32 40, ptr align 4 @alloc_3621542c9e792f17a20752c922c91a76) #14, !dbg !965
  unreachable, !dbg !965
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17hc40b4541ade2d1feE"(ptr align 1 %_1, i32 %0) unnamed_addr #0 !dbg !966 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  %r = alloca [4 x i8], align 4
  store i32 %0, ptr %r, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !973, !DIExpression(), !974)
    #dbg_declare(ptr %r, !972, !DIExpression(), !975)
; call core::result::Result<T,E>::is_err
  %_0 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h08009cbfc403c79aE"(ptr align 4 %r) #13, !dbg !976
  ret i1 %_0, !dbg !977
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h68868a0497e66bacE"(ptr align 4 %_1, i8 %first_byte) unnamed_addr #0 !dbg !978 {
start:
  %val.dbg.spill4 = alloca [1 x i8], align 1
  %i.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  %utf8_len.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %first_byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_55 = alloca [8 x i8], align 4
  %_54 = alloca [8 x i8], align 4
  %_53 = alloca [8 x i8], align 4
  %args1 = alloca [24 x i8], align 4
  %_50 = alloca [4 x i8], align 4
  %args = alloca [12 x i8], align 4
  %_45 = alloca [24 x i8], align 4
  %_36 = alloca [8 x i8], align 4
  %chars = alloca [8 x i8], align 4
  %_31 = alloca [12 x i8], align 4
  %_29 = alloca [8 x i8], align 4
  %s = alloca [8 x i8], align 4
  %_20 = alloca [2 x i8], align 1
  %_16 = alloca [8 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %_11 = alloca [4 x i8], align 1
  %utf8 = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !986, !DIExpression(DW_OP_deref), !1107)
  store i8 %first_byte, ptr %first_byte.dbg.spill, align 1
    #dbg_declare(ptr %first_byte.dbg.spill, !985, !DIExpression(), !1108)
    #dbg_declare(ptr %utf8, !1011, !DIExpression(), !1109)
    #dbg_declare(ptr %iter, !1017, !DIExpression(), !1110)
    #dbg_declare(ptr %s, !1032, !DIExpression(), !1111)
    #dbg_declare(ptr %chars, !1038, !DIExpression(), !1112)
    #dbg_declare(ptr %args, !1042, !DIExpression(), !1113)
    #dbg_declare(ptr %args1, !1054, !DIExpression(), !1114)
    #dbg_declare(ptr %residual.dbg.spill, !989, !DIExpression(), !1115)
    #dbg_declare(ptr %residual.dbg.spill2, !1028, !DIExpression(), !1116)
    #dbg_declare(ptr %residual.dbg.spill3, !1034, !DIExpression(), !1117)
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::utf8_len_from_first_byte
  call void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$24utf8_len_from_first_byte17h8f85f680a3237dd5E"(ptr sret([8 x i8]) align 4 %_5, i8 %first_byte) #13, !dbg !1118
; call core::result::Result<T,E>::map_err
  %0 = call { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha7b751e6c61210daE"(ptr align 4 %_5) #13, !dbg !1119
  %_4.0 = extractvalue { i32, i32 } %0, 0, !dbg !1119
  %_4.1 = extractvalue { i32, i32 } %0, 1, !dbg !1119
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %_4.0, i32 %_4.1) #13, !dbg !1118
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !1118
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !1118
  store i32 %2, ptr %_3, align 4, !dbg !1118
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !1118
  store i32 %3, ptr %4, align 4, !dbg !1118
  %_6 = load i32, ptr %_3, align 4, !dbg !1118
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !1118
  %6 = load i32, ptr %5, align 4, !dbg !1118
  %7 = trunc nuw i32 %_6 to i1, !dbg !1118
  br i1 %7, label %bb6, label %bb5, !dbg !1118

bb6:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hba1210a8c40db0c3E"(ptr align 4 @alloc_fe20ea9ecf86bccd62586200ff15fb98) #13, !dbg !1120
  store i32 %8, ptr %_0, align 4, !dbg !1120
  br label %bb36, !dbg !1120

bb5:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !1118
  %utf8_len = load i32, ptr %9, align 4, !dbg !1118
  store i32 %utf8_len, ptr %utf8_len.dbg.spill, align 4, !dbg !1118
    #dbg_declare(ptr %utf8_len.dbg.spill, !987, !DIExpression(), !1121)
    #dbg_declare(ptr %utf8_len.dbg.spill, !1009, !DIExpression(), !1122)
  %10 = getelementptr inbounds nuw i8, ptr %_11, i32 0, !dbg !1123
  store i8 %first_byte, ptr %10, align 1, !dbg !1123
  %11 = getelementptr inbounds nuw i8, ptr %_11, i32 1, !dbg !1123
  store i8 0, ptr %11, align 1, !dbg !1123
  %12 = getelementptr inbounds nuw i8, ptr %_11, i32 2, !dbg !1123
  store i8 0, ptr %12, align 1, !dbg !1123
  %13 = getelementptr inbounds nuw i8, ptr %_11, i32 3, !dbg !1123
  store i8 0, ptr %13, align 1, !dbg !1123
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %14 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17he9745d40019a4ad1E"(ptr align 1 %_11, i32 %utf8_len, ptr align 4 @alloc_339f6a175a86ddba20e036d1aaa79169) #13, !dbg !1124
  %_9.0 = extractvalue { ptr, i32 } %14, 0, !dbg !1124
  %_9.1 = extractvalue { ptr, i32 } %14, 1, !dbg !1124
  store ptr %_9.0, ptr %utf8, align 4, !dbg !1125
  %15 = getelementptr inbounds i8, ptr %utf8, i32 4, !dbg !1125
  store i32 %_9.1, ptr %15, align 4, !dbg !1125
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %16 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 1, i32 %utf8_len) #13, !dbg !1126
  %_13.0 = extractvalue { i32, i32 } %16, 0, !dbg !1126
  %_13.1 = extractvalue { i32, i32 } %16, 1, !dbg !1126
  store i32 %_13.0, ptr %iter, align 4, !dbg !1126
  %17 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !1126
  store i32 %_13.1, ptr %17, align 4, !dbg !1126
  br label %bb9, !dbg !1127

bb9:                                              ; preds = %bb18, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %18 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter) #13, !dbg !1110
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !1110
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !1110
  store i32 %19, ptr %_16, align 4, !dbg !1110
  %21 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !1110
  store i32 %20, ptr %21, align 4, !dbg !1110
  %_18 = load i32, ptr %_16, align 4, !dbg !1110
  %22 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !1110
  %23 = load i32, ptr %22, align 4, !dbg !1110
  %24 = trunc nuw i32 %_18 to i1, !dbg !1110
  br i1 %24, label %bb11, label %bb12, !dbg !1110

bb11:                                             ; preds = %bb9
  %25 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !1128
  %i = load i32, ptr %25, align 4, !dbg !1128
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !1128
    #dbg_declare(ptr %i.dbg.spill, !1026, !DIExpression(), !1129)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %26 = call { i1, i8 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfebd28b335ac4229E"(ptr align 4 %_1) #13, !dbg !1130
  %_22.0 = extractvalue { i1, i8 } %26, 0, !dbg !1130
  %_22.1 = extractvalue { i1, i8 } %26, 1, !dbg !1130
; call core::option::Option<T>::ok_or
  %27 = call { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h677952e0acfa512aE"(i1 zeroext %_22.0, i8 %_22.1) #13, !dbg !1131
  %_21.0 = extractvalue { i1, i8 } %27, 0, !dbg !1131
  %_21.1 = extractvalue { i1, i8 } %27, 1, !dbg !1131
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %28 = call { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha925cae9aa8519f6E"(i1 zeroext %_21.0, i8 %_21.1) #13, !dbg !1132
  %29 = extractvalue { i1, i8 } %28, 0, !dbg !1132
  %30 = extractvalue { i1, i8 } %28, 1, !dbg !1132
  %31 = zext i1 %29 to i8, !dbg !1132
  store i8 %31, ptr %_20, align 1, !dbg !1132
  %32 = getelementptr inbounds i8, ptr %_20, i32 1, !dbg !1132
  store i8 %30, ptr %32, align 1, !dbg !1132
  %33 = load i8, ptr %_20, align 1, !dbg !1132
  %34 = trunc nuw i8 %33 to i1, !dbg !1132
  %35 = getelementptr inbounds i8, ptr %_20, i32 1, !dbg !1132
  %36 = load i8, ptr %35, align 1, !dbg !1132
  %_23 = zext i1 %34 to i32, !dbg !1132
  %37 = trunc nuw i32 %_23 to i1, !dbg !1132
  br i1 %37, label %bb17, label %bb16, !dbg !1132

bb12:                                             ; preds = %bb9
  %_32.0 = load ptr, ptr %utf8, align 4, !dbg !1133
  %38 = getelementptr inbounds i8, ptr %utf8, i32 4, !dbg !1133
  %_32.1 = load i32, ptr %38, align 4, !dbg !1133
; call core::str::converts::from_utf8
  call void @_ZN4core3str8converts9from_utf817hbba37fe7cad0f284E(ptr sret([12 x i8]) align 4 %_31, ptr align 1 %_32.0, i32 %_32.1) #13, !dbg !1134
; call core::result::Result<T,E>::map_err
  %39 = call { ptr, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hef79f9295a042496E"(ptr align 4 %_31) #13, !dbg !1135
  %_30.0 = extractvalue { ptr, i32 } %39, 0, !dbg !1135
  %_30.1 = extractvalue { ptr, i32 } %39, 1, !dbg !1135
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %40 = call { ptr, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcc4ddfcdc731c1bbE"(ptr align 1 %_30.0, i32 %_30.1) #13, !dbg !1134
  %41 = extractvalue { ptr, i32 } %40, 0, !dbg !1134
  %42 = extractvalue { ptr, i32 } %40, 1, !dbg !1134
  store ptr %41, ptr %_29, align 4, !dbg !1134
  %43 = getelementptr inbounds i8, ptr %_29, i32 4, !dbg !1134
  store i32 %42, ptr %43, align 4, !dbg !1134
  %44 = load ptr, ptr %_29, align 4, !dbg !1134
  %45 = getelementptr inbounds i8, ptr %_29, i32 4, !dbg !1134
  %46 = load i32, ptr %45, align 4, !dbg !1134
  %47 = ptrtoint ptr %44 to i32, !dbg !1134
  %48 = icmp eq i32 %47, 0, !dbg !1134
  %_33 = select i1 %48, i32 1, i32 0, !dbg !1134
  %49 = trunc nuw i32 %_33 to i1, !dbg !1134
  br i1 %49, label %bb23, label %bb22, !dbg !1134

bb23:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %50 = call i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hba1210a8c40db0c3E"(ptr align 4 @alloc_a81e3c985b3a55d877d356a36dd22f29) #13, !dbg !1136
  store i32 %50, ptr %_0, align 4, !dbg !1136
  br label %bb36, !dbg !1136

bb22:                                             ; preds = %bb12
  %val.0 = load ptr, ptr %_29, align 4, !dbg !1134
  %51 = getelementptr inbounds i8, ptr %_29, i32 4, !dbg !1134
  %val.1 = load i32, ptr %51, align 4, !dbg !1134
  store ptr %val.0, ptr %val.dbg.spill, align 4, !dbg !1134
  %52 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4, !dbg !1134
  store i32 %val.1, ptr %52, align 4, !dbg !1134
    #dbg_declare(ptr %val.dbg.spill, !1036, !DIExpression(), !1137)
  store ptr %val.0, ptr %s, align 4, !dbg !1137
  %53 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !1137
  store i32 %val.1, ptr %53, align 4, !dbg !1137
  %54 = load ptr, ptr %s, align 4, !dbg !1138
  %55 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !1138
  %56 = load i32, ptr %55, align 4, !dbg !1138
; call core::str::<impl str>::chars
  %57 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %54, i32 %56) #13, !dbg !1139
  %58 = extractvalue { ptr, ptr } %57, 0, !dbg !1139
  %59 = extractvalue { ptr, ptr } %57, 1, !dbg !1139
  store ptr %58, ptr %chars, align 4, !dbg !1139
  %60 = getelementptr inbounds i8, ptr %chars, i32 4, !dbg !1139
  store ptr %59, ptr %60, align 4, !dbg !1139
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_37 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %chars) #13, !dbg !1140
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_39 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %chars) #13, !dbg !1141
  store i32 %_37, ptr %_36, align 4, !dbg !1142
  %61 = getelementptr inbounds i8, ptr %_36, i32 4, !dbg !1142
  store i32 %_39, ptr %61, align 4, !dbg !1142
  %62 = load i32, ptr %_36, align 4, !dbg !1142
  %63 = icmp eq i32 %62, 1114112, !dbg !1142
  %_42 = select i1 %63, i32 0, i32 1, !dbg !1142
  %64 = trunc nuw i32 %_42 to i1, !dbg !1143
  br i1 %64, label %bb28, label %bb27, !dbg !1143

bb28:                                             ; preds = %bb22
  %65 = getelementptr inbounds i8, ptr %_36, i32 4, !dbg !1142
  %66 = load i32, ptr %65, align 4, !dbg !1142
  %67 = icmp eq i32 %66, 1114112, !dbg !1142
  %_41 = select i1 %67, i32 0, i32 1, !dbg !1142
  %68 = trunc nuw i32 %_41 to i1, !dbg !1143
  br i1 %68, label %bb27, label %bb29, !dbg !1143

bb27:                                             ; preds = %bb28, %bb22
  %69 = load ptr, ptr %s, align 4, !dbg !1144
  %70 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !1144
  %71 = load i32, ptr %70, align 4, !dbg !1144
; call core::str::<impl str>::chars
  %72 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %69, i32 %71) #13, !dbg !1145
  %_51.0 = extractvalue { ptr, ptr } %72, 0, !dbg !1145
  %_51.1 = extractvalue { ptr, ptr } %72, 1, !dbg !1145
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count
  %73 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h065e5dce4b5782bfE"(ptr %_51.0, ptr %_51.1) #13, !dbg !1146
  store i32 %73, ptr %_50, align 4, !dbg !1146
  store ptr %utf8, ptr %args, align 4, !dbg !1147
  %74 = getelementptr inbounds i8, ptr %args, i32 4, !dbg !1147
  store ptr %s, ptr %74, align 4, !dbg !1147
  %75 = getelementptr inbounds i8, ptr %args, i32 8, !dbg !1147
  store ptr %_50, ptr %75, align 4, !dbg !1147
  %_59 = load ptr, ptr %args, align 4, !dbg !1113
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17h6d2f5f061bbf7995E(ptr sret([8 x i8]) align 4 %_53, ptr align 4 %_59) #13, !dbg !1113
  %76 = getelementptr inbounds i8, ptr %args, i32 4, !dbg !1113
  %_60 = load ptr, ptr %76, align 4, !dbg !1113
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17h21a8bd79f2bc8b2dE(ptr sret([8 x i8]) align 4 %_54, ptr align 4 %_60) #13, !dbg !1113
  %77 = getelementptr inbounds i8, ptr %args, i32 8, !dbg !1113
  %_61 = load ptr, ptr %77, align 4, !dbg !1113
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_55, ptr align 4 %_61) #13, !dbg !1113
  %78 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args1, i32 0, !dbg !1113
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %78, ptr align 4 %_53, i32 8, i1 false), !dbg !1113
  %79 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args1, i32 1, !dbg !1113
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %79, ptr align 4 %_54, i32 8, i1 false), !dbg !1113
  %80 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args1, i32 2, !dbg !1113
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %80, ptr align 4 %_55, i32 8, i1 false), !dbg !1113
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h74121451eb134369E"(ptr sret([24 x i8]) align 4 %_45, ptr align 4 @alloc_06cb04a3852cca2b7a216720382378c6, ptr align 4 %args1) #13, !dbg !1114
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_45, ptr align 4 @alloc_5d80124afa8f916c3e64fc732302ba08) #14, !dbg !1147
  unreachable, !dbg !1147

bb29:                                             ; preds = %bb28
  %c = load i32, ptr %_36, align 4, !dbg !1148
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !1148
    #dbg_declare(ptr %c.dbg.spill, !1040, !DIExpression(), !1149)
  store i32 %c, ptr %_0, align 4, !dbg !1150
  br label %bb36, !dbg !1151

bb36:                                             ; preds = %bb6, %bb17, %bb23, %bb29
  %81 = load i32, ptr %_0, align 4, !dbg !1151
  ret i32 %81, !dbg !1151

bb17:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %82 = call i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hba1210a8c40db0c3E"(ptr align 4 @alloc_26ab949b99873c312f958841e148f53e) #13, !dbg !1152
  store i32 %82, ptr %_0, align 4, !dbg !1152
  br label %bb36, !dbg !1152

bb16:                                             ; preds = %bb11
  %83 = getelementptr inbounds i8, ptr %_20, i32 1, !dbg !1132
  %val = load i8, ptr %83, align 1, !dbg !1132
  store i8 %val, ptr %val.dbg.spill4, align 1, !dbg !1132
    #dbg_declare(ptr %val.dbg.spill4, !1030, !DIExpression(), !1153)
  %_25.0 = load ptr, ptr %utf8, align 4, !dbg !1154
  %84 = getelementptr inbounds i8, ptr %utf8, i32 4, !dbg !1154
  %_25.1 = load i32, ptr %84, align 4, !dbg !1154
  %_27 = icmp ult i32 %i, %_25.1, !dbg !1154
  br i1 %_27, label %bb18, label %panic, !dbg !1154

bb18:                                             ; preds = %bb16
  %85 = load ptr, ptr %utf8, align 4, !dbg !1154
  %86 = getelementptr inbounds i8, ptr %utf8, i32 4, !dbg !1154
  %87 = load i32, ptr %86, align 4, !dbg !1154
  %88 = getelementptr inbounds nuw i8, ptr %85, i32 %i, !dbg !1154
  store i8 %val, ptr %88, align 1, !dbg !1154
  br label %bb9, !dbg !1127

panic:                                            ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %i, i32 %_25.1, ptr align 4 @alloc_867ee60e156c4fbed5389d3cac0d4d4a) #14, !dbg !1154
  unreachable, !dbg !1154

bb4:                                              ; No predecessors!
  unreachable, !dbg !1155
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h7fc3446f4b9afaa9E"(ptr align 1 %_1, i8 %nibble) unnamed_addr #0 !dbg !1157 {
start:
  %val.dbg.spill.i = alloca [4 x i8], align 4
  %self.i = alloca [8 x i8], align 4
  %nibble.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1163, !DIExpression(), !1164)
  store i8 %nibble, ptr %nibble.dbg.spill, align 1
    #dbg_declare(ptr %nibble.dbg.spill, !1162, !DIExpression(), !1165)
  %_5 = zext i8 %nibble to i32, !dbg !1166
; call core::char::methods::<impl char>::to_digit
  %0 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_5, i32 16) #13, !dbg !1167
  %_4.0 = extractvalue { i32, i32 } %0, 0, !dbg !1167
  %_4.1 = extractvalue { i32, i32 } %0, 1, !dbg !1167
  store i32 %_4.0, ptr %self.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_4.1, ptr %1, align 4
    #dbg_declare(ptr %self.i, !805, !DIExpression(), !1168)
  %_2.i = load i32, ptr %self.i, align 4, !dbg !1170
  %2 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !1170
  %3 = load i32, ptr %2, align 4, !dbg !1170
  %4 = trunc nuw i32 %_2.i to i1, !dbg !1171
  br i1 %4, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17he2879523de7c6a7eE.exit", label %bb2.i, !dbg !1171

bb2.i:                                            ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h87f3d65d3174ccbeE(ptr align 4 @alloc_e94ebee2b00512ee42f26e9e16682f0c) #14, !dbg !1172
  unreachable, !dbg !1172

"_ZN4core6option15Option$LT$T$GT$6unwrap17he2879523de7c6a7eE.exit": ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !1173
  %val.i = load i32, ptr %5, align 4, !dbg !1173
  store i32 %val.i, ptr %val.dbg.spill.i, align 4, !dbg !1173
    #dbg_declare(ptr %val.dbg.spill.i, !844, !DIExpression(), !1174)
  %_0 = trunc i32 %val.i to i8, !dbg !1166
  ret i8 %_0, !dbg !1175
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::utf8_len_from_first_byte
; Function Attrs: nounwind
define dso_local void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$24utf8_len_from_first_byte17h8f85f680a3237dd5E"(ptr sret([8 x i8]) align 4 %_0, i8 %byte) unnamed_addr #1 !dbg !1176 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !1195, !DIExpression(), !1196)
  %_12 = icmp ule i8 0, %byte, !dbg !1197
  br i1 %_12, label %bb18, label %bb2, !dbg !1197

bb2:                                              ; preds = %bb18, %start
  %_10 = icmp ule i8 -128, %byte, !dbg !1198
  br i1 %_10, label %bb17, label %bb4, !dbg !1198

bb18:                                             ; preds = %start
  %_13 = icmp ule i8 %byte, 127, !dbg !1197
  br i1 %_13, label %bb1, label %bb2, !dbg !1197

bb1:                                              ; preds = %bb18
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1199
  store i32 1, ptr %0, align 4, !dbg !1199
  store i8 0, ptr %_0, align 4, !dbg !1199
  br label %bb19, !dbg !1199

bb4:                                              ; preds = %bb17, %bb2
  %_8 = icmp ule i8 -64, %byte, !dbg !1200
  br i1 %_8, label %bb16, label %bb6, !dbg !1200

bb17:                                             ; preds = %bb2
  %_11 = icmp ule i8 %byte, -65, !dbg !1198
  br i1 %_11, label %bb3, label %bb4, !dbg !1198

bb3:                                              ; preds = %bb17
  %1 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !1201
  store i8 0, ptr %1, align 1, !dbg !1201
  store i8 1, ptr %_0, align 4, !dbg !1201
  br label %bb19, !dbg !1202

bb6:                                              ; preds = %bb16, %bb4
  %_6 = icmp ule i8 -32, %byte, !dbg !1203
  br i1 %_6, label %bb15, label %bb8, !dbg !1203

bb16:                                             ; preds = %bb4
  %_9 = icmp ule i8 %byte, -33, !dbg !1200
  br i1 %_9, label %bb5, label %bb6, !dbg !1200

bb5:                                              ; preds = %bb16
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1204
  store i32 2, ptr %2, align 4, !dbg !1204
  store i8 0, ptr %_0, align 4, !dbg !1204
  br label %bb19, !dbg !1204

bb8:                                              ; preds = %bb15, %bb6
  %_4 = icmp ule i8 -16, %byte, !dbg !1205
  br i1 %_4, label %bb14, label %bb11, !dbg !1205

bb15:                                             ; preds = %bb6
  %_7 = icmp ule i8 %byte, -17, !dbg !1203
  br i1 %_7, label %bb7, label %bb8, !dbg !1203

bb7:                                              ; preds = %bb15
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1206
  store i32 3, ptr %3, align 4, !dbg !1206
  store i8 0, ptr %_0, align 4, !dbg !1206
  br label %bb19, !dbg !1206

bb11:                                             ; preds = %bb14, %bb8
  %_2 = icmp ule i8 -8, %byte, !dbg !1207
  br i1 %_2, label %bb13, label %bb9, !dbg !1207

bb14:                                             ; preds = %bb8
  %_5 = icmp ule i8 %byte, -9, !dbg !1205
  br i1 %_5, label %bb10, label %bb11, !dbg !1205

bb10:                                             ; preds = %bb14
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1208
  store i32 4, ptr %4, align 4, !dbg !1208
  store i8 0, ptr %_0, align 4, !dbg !1208
  br label %bb19, !dbg !1208

bb9:                                              ; preds = %bb13, %bb11
  unreachable, !dbg !1209

bb13:                                             ; preds = %bb11
  %_3 = icmp ule i8 %byte, -1, !dbg !1207
  br i1 %_3, label %bb12, label %bb9, !dbg !1207

bb12:                                             ; preds = %bb13
  %5 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !1210
  store i8 1, ptr %5, align 1, !dbg !1210
  store i8 1, ptr %_0, align 4, !dbg !1210
  br label %bb19, !dbg !1211

bb19:                                             ; preds = %bb1, %bb3, %bb5, %bb7, %bb10, %bb12
  ret void, !dbg !1212
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2238ed468dd3edbfE"(ptr align 4 %_2) unnamed_addr #0 !dbg !1213 {
start:
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !1223, !DIExpression(), !1225)
    #dbg_declare(ptr %_2, !1224, !DIExpression(), !1226)
  ret void, !dbg !1227
}

; rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h7fa4d04787a81524E"(i1 zeroext %_2) unnamed_addr #0 !dbg !1228 {
start:
  %_2.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !1233, !DIExpression(), !1235)
  %0 = zext i1 %_2 to i8
  store i8 %0, ptr %_2.dbg.spill, align 1
    #dbg_declare(ptr %_2.dbg.spill, !1234, !DIExpression(), !1236)
  ret void, !dbg !1237
}

; rustc_demangle::v0::ParseError::message
; Function Attrs: nounwind
define internal { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %self) unnamed_addr #1 !dbg !1238 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1244, !DIExpression(), !1245)
  %0 = load i8, ptr %self, align 1, !dbg !1246
  %1 = trunc nuw i8 %0 to i1, !dbg !1246
  %_2 = zext i1 %1 to i32, !dbg !1246
  %2 = trunc nuw i32 %_2 to i1, !dbg !1247
  br i1 %2, label %bb2, label %bb3, !dbg !1247

bb2:                                              ; preds = %start
  store ptr @alloc_e8ccb4b2ed7221d8ad4a7e8fa563f60a, ptr %_0, align 4, !dbg !1248
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1248
  store i32 25, ptr %3, align 4, !dbg !1248
  br label %bb4, !dbg !1249

bb3:                                              ; preds = %start
  store ptr @alloc_4434b18f23383142a0b9b203a7211835, ptr %_0, align 4, !dbg !1250
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1250
  store i32 16, ptr %4, align 4, !dbg !1250
  br label %bb4, !dbg !1251

bb4:                                              ; preds = %bb2, %bb3
  %5 = load ptr, ptr %_0, align 4, !dbg !1252
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1252
  %7 = load i32, ptr %6, align 4, !dbg !1252
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0, !dbg !1252
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1, !dbg !1252
  ret { ptr, i32 } %9, !dbg !1252

bb1:                                              ; No predecessors!
  unreachable, !dbg !1246
}

; rustc_demangle::v0::basic_type
; Function Attrs: nounwind
define internal { ptr, i32 } @_ZN14rustc_demangle2v010basic_type17h156aa3e3723135c9E(i8 %tag) unnamed_addr #1 !dbg !1253 {
start:
  %tag.dbg.spill = alloca [1 x i8], align 1
  %_2 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i8 %tag, ptr %tag.dbg.spill, align 1
    #dbg_declare(ptr %tag.dbg.spill, !1268, !DIExpression(), !1269)
  switch i8 %tag, label %bb1 [
    i8 98, label %bb22
    i8 99, label %bb21
    i8 101, label %bb20
    i8 117, label %bb19
    i8 97, label %bb18
    i8 115, label %bb17
    i8 108, label %bb16
    i8 120, label %bb15
    i8 110, label %bb14
    i8 105, label %bb13
    i8 104, label %bb12
    i8 116, label %bb11
    i8 109, label %bb10
    i8 121, label %bb9
    i8 111, label %bb8
    i8 106, label %bb7
    i8 102, label %bb6
    i8 100, label %bb5
    i8 122, label %bb4
    i8 112, label %bb3
    i8 118, label %bb2
  ], !dbg !1270

bb1:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !1271
  br label %bb24, !dbg !1272

bb22:                                             ; preds = %start
  store ptr @alloc_ce923a89401aec228a1b144297717761, ptr %_2, align 4, !dbg !1273
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1273
  store i32 4, ptr %0, align 4, !dbg !1273
  br label %bb23, !dbg !1274

bb21:                                             ; preds = %start
  store ptr @alloc_9b5c8091e3b549959da5ff7ce59718f9, ptr %_2, align 4, !dbg !1275
  %1 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1275
  store i32 4, ptr %1, align 4, !dbg !1275
  br label %bb23, !dbg !1276

bb20:                                             ; preds = %start
  store ptr @alloc_d348ccd5829a0fec2de1c22281fe17d9, ptr %_2, align 4, !dbg !1277
  %2 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1277
  store i32 3, ptr %2, align 4, !dbg !1277
  br label %bb23, !dbg !1278

bb19:                                             ; preds = %start
  store ptr @alloc_ae6dc619079e3c3b08144a35532ecff7, ptr %_2, align 4, !dbg !1279
  %3 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1279
  store i32 2, ptr %3, align 4, !dbg !1279
  br label %bb23, !dbg !1280

bb18:                                             ; preds = %start
  store ptr @alloc_468bbdcdbefe19b6476616d87880f70c, ptr %_2, align 4, !dbg !1281
  %4 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1281
  store i32 2, ptr %4, align 4, !dbg !1281
  br label %bb23, !dbg !1282

bb17:                                             ; preds = %start
  store ptr @alloc_b65da51539f621df7a047bc43773eb81, ptr %_2, align 4, !dbg !1283
  %5 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1283
  store i32 3, ptr %5, align 4, !dbg !1283
  br label %bb23, !dbg !1284

bb16:                                             ; preds = %start
  store ptr @alloc_f5bb2e494f5d1658dbc347d7b24d2ac3, ptr %_2, align 4, !dbg !1285
  %6 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1285
  store i32 3, ptr %6, align 4, !dbg !1285
  br label %bb23, !dbg !1286

bb15:                                             ; preds = %start
  store ptr @alloc_b7a8a06bcc169bbf687e36ae2ac3129c, ptr %_2, align 4, !dbg !1287
  %7 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1287
  store i32 3, ptr %7, align 4, !dbg !1287
  br label %bb23, !dbg !1288

bb14:                                             ; preds = %start
  store ptr @alloc_fc155f0a6f9ce04075e55a71ca237d6b, ptr %_2, align 4, !dbg !1289
  %8 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1289
  store i32 4, ptr %8, align 4, !dbg !1289
  br label %bb23, !dbg !1290

bb13:                                             ; preds = %start
  store ptr @alloc_72df7fce5c308ce6e1f7311558c9728e, ptr %_2, align 4, !dbg !1291
  %9 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1291
  store i32 5, ptr %9, align 4, !dbg !1291
  br label %bb23, !dbg !1292

bb12:                                             ; preds = %start
  store ptr @alloc_df66aaff7dc04933728ad5e7db359d0f, ptr %_2, align 4, !dbg !1293
  %10 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1293
  store i32 2, ptr %10, align 4, !dbg !1293
  br label %bb23, !dbg !1294

bb11:                                             ; preds = %start
  store ptr @alloc_0d3fdde1e4251889fe20be0554d3a4df, ptr %_2, align 4, !dbg !1295
  %11 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1295
  store i32 3, ptr %11, align 4, !dbg !1295
  br label %bb23, !dbg !1296

bb10:                                             ; preds = %start
  store ptr @alloc_40dca76ea60e772225aeb9a5dae9c756, ptr %_2, align 4, !dbg !1297
  %12 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1297
  store i32 3, ptr %12, align 4, !dbg !1297
  br label %bb23, !dbg !1298

bb9:                                              ; preds = %start
  store ptr @alloc_4c3daea643e86fcf49e0a8dcf3e4c20b, ptr %_2, align 4, !dbg !1299
  %13 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1299
  store i32 3, ptr %13, align 4, !dbg !1299
  br label %bb23, !dbg !1300

bb8:                                              ; preds = %start
  store ptr @alloc_c6dac74b65b8f5d0fd6a204546100ec0, ptr %_2, align 4, !dbg !1301
  %14 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1301
  store i32 4, ptr %14, align 4, !dbg !1301
  br label %bb23, !dbg !1302

bb7:                                              ; preds = %start
  store ptr @alloc_087073340adf6d09480d7739d2e7638d, ptr %_2, align 4, !dbg !1303
  %15 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1303
  store i32 5, ptr %15, align 4, !dbg !1303
  br label %bb23, !dbg !1304

bb6:                                              ; preds = %start
  store ptr @alloc_c8dbd11c0d0afd7250de135d09c6bf30, ptr %_2, align 4, !dbg !1305
  %16 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1305
  store i32 3, ptr %16, align 4, !dbg !1305
  br label %bb23, !dbg !1306

bb5:                                              ; preds = %start
  store ptr @alloc_2717017e1ae813f478f43d8b0722e846, ptr %_2, align 4, !dbg !1307
  %17 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1307
  store i32 3, ptr %17, align 4, !dbg !1307
  br label %bb23, !dbg !1308

bb4:                                              ; preds = %start
  store ptr @alloc_ebacd5270fb181ba2143a73d4427458e, ptr %_2, align 4, !dbg !1309
  %18 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1309
  store i32 1, ptr %18, align 4, !dbg !1309
  br label %bb23, !dbg !1310

bb3:                                              ; preds = %start
  store ptr @alloc_27cca3636828088e60ce450d2eca2060, ptr %_2, align 4, !dbg !1311
  %19 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1311
  store i32 1, ptr %19, align 4, !dbg !1311
  br label %bb23, !dbg !1312

bb2:                                              ; preds = %start
  store ptr @alloc_b012c69bf4bf22b6b4fb1b13d9d751d9, ptr %_2, align 4, !dbg !1313
  %20 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1313
  store i32 3, ptr %20, align 4, !dbg !1313
  br label %bb23, !dbg !1314

bb23:                                             ; preds = %bb2, %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb14, %bb15, %bb16, %bb17, %bb18, %bb19, %bb20, %bb21, %bb22
  %21 = load ptr, ptr %_2, align 4, !dbg !1315
  %22 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !1315
  %23 = load i32, ptr %22, align 4, !dbg !1315
  store ptr %21, ptr %_0, align 4, !dbg !1315
  %24 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1315
  store i32 %23, ptr %24, align 4, !dbg !1315
  br label %bb24, !dbg !1272

bb24:                                             ; preds = %bb1, %bb23
  %25 = load ptr, ptr %_0, align 4, !dbg !1272
  %26 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1272
  %27 = load i32, ptr %26, align 4, !dbg !1272
  %28 = insertvalue { ptr, i32 } poison, ptr %25, 0, !dbg !1272
  %29 = insertvalue { ptr, i32 } %28, i32 %27, 1, !dbg !1272
  ret { ptr, i32 } %29, !dbg !1272
}

; rustc_demangle::v0::Ident::punycode_decode
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v05Ident15punycode_decode17h54cfdbd5b2bb8d4aE(ptr align 4 %self, ptr align 4 %0, ptr align 4 %1) unnamed_addr #1 !dbg !1316 {
start:
  %2 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %c.dbg.spill42 = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %n_u32.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill29 = alloca [4 x i8], align 4
  %val.dbg.spill26 = alloca [4 x i8], align 4
  %val.dbg.spill23 = alloca [4 x i8], align 4
  %val.dbg.spill20 = alloca [4 x i8], align 4
  %val.dbg.spill18 = alloca [4 x i8], align 4
  %d.dbg.spill17 = alloca [4 x i8], align 4
  %d.dbg.spill14 = alloca [1 x i8], align 1
  %d.dbg.spill = alloca [1 x i8], align 1
  %t.dbg.spill = alloca [4 x i8], align 4
  %t_max.dbg.spill = alloca [4 x i8], align 4
  %t_min.dbg.spill = alloca [4 x i8], align 4
  %base.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill9 = alloca [0 x i8], align 1
  %residual.dbg.spill8 = alloca [0 x i8], align 1
  %residual.dbg.spill7 = alloca [0 x i8], align 1
  %residual.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %residual.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %skew.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %k1 = alloca [4 x i8], align 4
  %_116 = alloca [4 x i8], align 4
  %_102 = alloca [4 x i8], align 4
  %_85 = alloca [8 x i8], align 4
  %_78 = alloca [8 x i8], align 4
  %_69 = alloca [8 x i8], align 4
  %_60 = alloca [8 x i8], align 4
  %_56 = alloca [8 x i8], align 4
  %_41 = alloca [2 x i8], align 1
  %d = alloca [1 x i8], align 1
  %k = alloca [4 x i8], align 4
  %w = alloca [4 x i8], align 4
  %delta = alloca [4 x i8], align 4
  %n = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %bias = alloca [4 x i8], align 4
  %damp = alloca [4 x i8], align 4
  %_13 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %len = alloca [4 x i8], align 4
  %_7 = alloca [4 x i8], align 4
  %punycode_bytes = alloca [12 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %insert = alloca [8 x i8], align 4
  store ptr %0, ptr %insert, align 4
  %3 = getelementptr inbounds i8, ptr %insert, i32 4
  store ptr %1, ptr %3, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1353, !DIExpression(), !1433)
    #dbg_declare(ptr %insert, !1354, !DIExpression(), !1434)
    #dbg_declare(ptr %punycode_bytes, !1355, !DIExpression(), !1435)
    #dbg_declare(ptr %len, !1357, !DIExpression(), !1436)
    #dbg_declare(ptr %iter, !1359, !DIExpression(), !1437)
    #dbg_declare(ptr %damp, !1375, !DIExpression(), !1438)
    #dbg_declare(ptr %bias, !1377, !DIExpression(), !1439)
    #dbg_declare(ptr %i, !1379, !DIExpression(), !1440)
    #dbg_declare(ptr %n, !1381, !DIExpression(), !1441)
    #dbg_declare(ptr %delta, !1383, !DIExpression(), !1442)
    #dbg_declare(ptr %w, !1385, !DIExpression(), !1443)
    #dbg_declare(ptr %k, !1387, !DIExpression(), !1444)
    #dbg_declare(ptr %d, !1391, !DIExpression(), !1445)
    #dbg_declare(ptr %k1, !1431, !DIExpression(), !1446)
    #dbg_declare(ptr %residual.dbg.spill, !1363, !DIExpression(), !1447)
    #dbg_declare(ptr %val.dbg.spill, !1365, !DIExpression(), !1448)
  store i32 38, ptr %skew.dbg.spill, align 4, !dbg !1449
    #dbg_declare(ptr %skew.dbg.spill, !1373, !DIExpression(), !1449)
    #dbg_declare(ptr %residual.dbg.spill2, !1399, !DIExpression(), !1450)
    #dbg_declare(ptr %residual.dbg.spill3, !1403, !DIExpression(), !1451)
    #dbg_declare(ptr %residual.dbg.spill4, !1407, !DIExpression(), !1452)
    #dbg_declare(ptr %residual.dbg.spill5, !1411, !DIExpression(), !1453)
    #dbg_declare(ptr %residual.dbg.spill6, !1415, !DIExpression(), !1454)
    #dbg_declare(ptr %residual.dbg.spill7, !1423, !DIExpression(), !1455)
    #dbg_declare(ptr %residual.dbg.spill8, !1427, !DIExpression(), !1456)
    #dbg_declare(ptr %val.dbg.spill9, !1429, !DIExpression(), !1457)
  %4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1458
  %_153.0 = load ptr, ptr %4, align 4, !dbg !1458
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !1458
  %_153.1 = load i32, ptr %5, align 4, !dbg !1458
; call core::str::<impl str>::bytes
  %6 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hee061ce74cf188a3E"(ptr align 1 %_153.0, i32 %_153.1) #13, !dbg !1459
  %_4.0 = extractvalue { ptr, ptr } %6, 0, !dbg !1459
  %_4.1 = extractvalue { ptr, ptr } %6, 1, !dbg !1459
; call core::iter::traits::iterator::Iterator::peekable
  call void @_ZN4core4iter6traits8iterator8Iterator8peekable17he15bde6a450c3e1cE(ptr sret([12 x i8]) align 4 %punycode_bytes, ptr %_4.0, ptr %_4.1) #13, !dbg !1460
; call core::iter::adapters::peekable::Peekable<I>::peek
  %7 = call align 1 ptr @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h8d4927ab9897c6afE"(ptr align 4 %punycode_bytes) #13, !dbg !1461
  store ptr %7, ptr %_7, align 4, !dbg !1461
; call core::option::Option<T>::is_none
  %_5 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd4d1e8335c19c611E"(ptr align 4 %_7) #13, !dbg !1462
  br i1 %_5, label %bb5, label %bb6, !dbg !1463

bb6:                                              ; preds = %start
  store i32 0, ptr %len, align 4, !dbg !1464
  %_154.0 = load ptr, ptr %self, align 4, !dbg !1465
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !1465
  %_154.1 = load i32, ptr %8, align 4, !dbg !1465
; call core::str::<impl str>::chars
  %9 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %_154.0, i32 %_154.1) #13, !dbg !1466
  %_11.0 = extractvalue { ptr, ptr } %9, 0, !dbg !1466
  %_11.1 = extractvalue { ptr, ptr } %9, 1, !dbg !1466
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %10 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf08d3cb0f782247dE"(ptr %_11.0, ptr %_11.1) #13, !dbg !1465
  %_10.0 = extractvalue { ptr, ptr } %10, 0, !dbg !1465
  %_10.1 = extractvalue { ptr, ptr } %10, 1, !dbg !1465
  store ptr %_10.0, ptr %iter, align 4, !dbg !1465
  %11 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !1465
  store ptr %_10.1, ptr %11, align 4, !dbg !1465
  br label %bb9, !dbg !1467

bb5:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !1468
  br label %bb102, !dbg !1469

bb9:                                              ; preds = %bb18, %bb6
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %12 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %iter) #13, !dbg !1437
  store i32 %12, ptr %_13, align 4, !dbg !1437
  %13 = load i32, ptr %_13, align 4, !dbg !1437
  %14 = icmp eq i32 %13, 1114112, !dbg !1437
  %_15 = select i1 %14, i32 0, i32 1, !dbg !1437
  %15 = trunc nuw i32 %_15 to i1, !dbg !1437
  br i1 %15, label %bb12, label %bb13, !dbg !1437

bb12:                                             ; preds = %bb9
  %c41 = load i32, ptr %_13, align 4, !dbg !1471
  store i32 %c41, ptr %c.dbg.spill42, align 4, !dbg !1471
    #dbg_declare(ptr %c.dbg.spill42, !1361, !DIExpression(), !1472)
  %_21 = load i32, ptr %len, align 4, !dbg !1473
; call rustc_demangle::v0::Ident::try_small_punycode_decode::{{closure}}
  %_18 = call zeroext i1 @"_ZN14rustc_demangle2v05Ident25try_small_punycode_decode28_$u7b$$u7b$closure$u7d$$u7d$17ha0cb616fadb1ad53E"(ptr align 4 %insert, i32 %_21, i32 %c41) #13, !dbg !1474
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_17 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2dc0dbf01439ce47E"(i1 zeroext %_18) #13, !dbg !1474
  %_22 = zext i1 %_17 to i32, !dbg !1474
  %16 = trunc nuw i32 %_22 to i1, !dbg !1474
  br i1 %16, label %bb17, label %bb16, !dbg !1474

bb13:                                             ; preds = %bb9
  store i32 36, ptr %base.dbg.spill, align 4, !dbg !1475
    #dbg_declare(ptr %base.dbg.spill, !1367, !DIExpression(), !1476)
  store i32 1, ptr %t_min.dbg.spill, align 4, !dbg !1477
    #dbg_declare(ptr %t_min.dbg.spill, !1369, !DIExpression(), !1478)
  store i32 26, ptr %t_max.dbg.spill, align 4, !dbg !1479
    #dbg_declare(ptr %t_max.dbg.spill, !1371, !DIExpression(), !1480)
  store i32 700, ptr %damp, align 4, !dbg !1481
  store i32 72, ptr %bias, align 4, !dbg !1482
  store i32 0, ptr %i, align 4, !dbg !1483
  store i32 128, ptr %n, align 4, !dbg !1484
  br label %bb19, !dbg !1485

bb19:                                             ; preds = %bb101, %bb13
  store i32 0, ptr %delta, align 4, !dbg !1486
  store i32 1, ptr %w, align 4, !dbg !1487
  store i32 0, ptr %k, align 4, !dbg !1488
  br label %bb20, !dbg !1489

bb20:                                             ; preds = %bb53, %bb19
  %17 = load i32, ptr %k, align 4, !dbg !1490
  %_34.0 = add i32 %17, 36, !dbg !1490
  %_34.1 = icmp ult i32 %_34.0, %17, !dbg !1490
  br i1 %_34.1, label %panic, label %bb21, !dbg !1490

bb21:                                             ; preds = %bb20
  store i32 %_34.0, ptr %k, align 4, !dbg !1490
  %_38 = load i32, ptr %k, align 4, !dbg !1491
  %_39 = load i32, ptr %bias, align 4, !dbg !1492
  store i32 %_38, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1493, !DIExpression(), !1501)
  store i32 %_39, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !1500, !DIExpression(), !1503)
  %18 = call i32 @llvm.usub.sat.i32(i32 %_38, i32 %_39), !dbg !1504
  store i32 %18, ptr %2, align 4, !dbg !1504
  %_0.i = load i32, ptr %2, align 4, !dbg !1504
; call core::cmp::max
  %_36 = call i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32 %_0.i, i32 1) #13, !dbg !1505
; call core::cmp::min
  %t = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %_36, i32 26) #13, !dbg !1506
  store i32 %t, ptr %t.dbg.spill, align 4, !dbg !1506
    #dbg_declare(ptr %t.dbg.spill, !1389, !DIExpression(), !1507)
; call <core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next
  %19 = call { i1, i8 } @"_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h83484fc40dfb0c0fE"(ptr align 4 %punycode_bytes) #13, !dbg !1508
  %20 = extractvalue { i1, i8 } %19, 0, !dbg !1508
  %21 = extractvalue { i1, i8 } %19, 1, !dbg !1508
  %22 = zext i1 %20 to i8, !dbg !1508
  store i8 %22, ptr %_41, align 1, !dbg !1508
  %23 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1508
  store i8 %21, ptr %23, align 1, !dbg !1508
  %24 = load i8, ptr %_41, align 1, !dbg !1509
  %25 = trunc nuw i8 %24 to i1, !dbg !1509
  %26 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1509
  %27 = load i8, ptr %26, align 1, !dbg !1509
  %_47 = zext i1 %25 to i32, !dbg !1509
  %28 = trunc nuw i32 %_47 to i1, !dbg !1510
  br i1 %28, label %bb27, label %bb26, !dbg !1510

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_6322ccc408af4ac79e90cb8d74303ba0) #14, !dbg !1490
  unreachable, !dbg !1490

bb27:                                             ; preds = %bb21
  %29 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1511
  %30 = load i8, ptr %29, align 1, !dbg !1511
  %_45 = icmp ule i8 97, %30, !dbg !1511
  br i1 %_45, label %bb32, label %bb29, !dbg !1511

bb26:                                             ; preds = %bb31, %bb29, %bb21
  store i8 1, ptr %_0, align 1, !dbg !1512
  br label %bb102, !dbg !1513

bb29:                                             ; preds = %bb32, %bb27
  %31 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1515
  %32 = load i8, ptr %31, align 1, !dbg !1515
  %_43 = icmp ule i8 48, %32, !dbg !1515
  br i1 %_43, label %bb31, label %bb26, !dbg !1515

bb32:                                             ; preds = %bb27
  %33 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1511
  %34 = load i8, ptr %33, align 1, !dbg !1511
  %_46 = icmp ule i8 %34, 122, !dbg !1511
  br i1 %_46, label %bb28, label %bb29, !dbg !1511

bb28:                                             ; preds = %bb32
  %35 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1516
  %d13 = load i8, ptr %35, align 1, !dbg !1516
  store i8 %d13, ptr %d.dbg.spill14, align 1, !dbg !1516
    #dbg_declare(ptr %d.dbg.spill14, !1393, !DIExpression(), !1517)
  %_49.0 = sub i8 %d13, 97, !dbg !1518
  %_49.1 = icmp ult i8 %d13, 97, !dbg !1518
  br i1 %_49.1, label %panic15, label %bb33, !dbg !1518

bb31:                                             ; preds = %bb29
  %36 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1515
  %37 = load i8, ptr %36, align 1, !dbg !1515
  %_44 = icmp ule i8 %37, 57, !dbg !1515
  br i1 %_44, label %bb30, label %bb26, !dbg !1515

bb30:                                             ; preds = %bb31
  %38 = getelementptr inbounds i8, ptr %_41, i32 1, !dbg !1519
  %d10 = load i8, ptr %38, align 1, !dbg !1519
  store i8 %d10, ptr %d.dbg.spill, align 1, !dbg !1519
    #dbg_declare(ptr %d.dbg.spill, !1395, !DIExpression(), !1520)
  %_52.0 = sub i8 %d10, 48, !dbg !1521
  %_52.1 = icmp ult i8 %d10, 48, !dbg !1521
  br i1 %_52.1, label %panic11, label %bb34, !dbg !1521

bb34:                                             ; preds = %bb30
  %_53.0 = add i8 26, %_52.0, !dbg !1522
  %_53.1 = icmp ult i8 %_53.0, 26, !dbg !1522
  br i1 %_53.1, label %panic12, label %bb35, !dbg !1522

panic11:                                          ; preds = %bb30
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_3618f06255dc02978c99f9b77813748a) #14, !dbg !1521
  unreachable, !dbg !1521

bb35:                                             ; preds = %bb34
  store i8 %_53.0, ptr %d, align 1, !dbg !1522
  br label %bb36, !dbg !1523

panic12:                                          ; preds = %bb34
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_f7e304603a5b45fd190679c5f62fd21c) #14, !dbg !1522
  unreachable, !dbg !1522

bb36:                                             ; preds = %bb33, %bb35
  %_55 = load i8, ptr %d, align 1, !dbg !1524
  %d16 = zext i8 %_55 to i32, !dbg !1524
  store i32 %d16, ptr %d.dbg.spill17, align 4, !dbg !1524
    #dbg_declare(ptr %d.dbg.spill17, !1397, !DIExpression(), !1525)
  %_59 = load i32, ptr %delta, align 4, !dbg !1526
  %_63 = load i32, ptr %w, align 4, !dbg !1527
; call core::num::<impl usize>::checked_mul
  %39 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %d16, i32 %_63) #13, !dbg !1528
  %_62.0 = extractvalue { i32, i32 } %39, 0, !dbg !1528
  %_62.1 = extractvalue { i32, i32 } %39, 1, !dbg !1528
; call core::option::Option<T>::ok_or
  %40 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E"(i32 %_62.0, i32 %_62.1) #13, !dbg !1529
  %_61.0 = extractvalue { i32, i32 } %40, 0, !dbg !1529
  %_61.1 = extractvalue { i32, i32 } %40, 1, !dbg !1529
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %41 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %_61.0, i32 %_61.1) #13, !dbg !1530
  %42 = extractvalue { i32, i32 } %41, 0, !dbg !1530
  %43 = extractvalue { i32, i32 } %41, 1, !dbg !1530
  store i32 %42, ptr %_60, align 4, !dbg !1530
  %44 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !1530
  store i32 %43, ptr %44, align 4, !dbg !1530
  %_64 = load i32, ptr %_60, align 4, !dbg !1530
  %45 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !1530
  %46 = load i32, ptr %45, align 4, !dbg !1530
  %47 = trunc nuw i32 %_64 to i1, !dbg !1530
  br i1 %47, label %bb41, label %bb40, !dbg !1530

bb33:                                             ; preds = %bb28
  store i8 %_49.0, ptr %d, align 1, !dbg !1518
  br label %bb36, !dbg !1531

panic15:                                          ; preds = %bb28
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_337db9e38332a243c2f56a6193fde42d) #14, !dbg !1518
  unreachable, !dbg !1518

bb41:                                             ; preds = %bb36
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %48 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_6af5488b1c67071cb96cc04cddc21fe9) #13, !dbg !1532
  %49 = zext i1 %48 to i8, !dbg !1532
  store i8 %49, ptr %_0, align 1, !dbg !1532
  br label %bb102, !dbg !1532

bb40:                                             ; preds = %bb36
  %50 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !1530
  %val = load i32, ptr %50, align 4, !dbg !1530
  store i32 %val, ptr %val.dbg.spill18, align 4, !dbg !1530
    #dbg_declare(ptr %val.dbg.spill18, !1401, !DIExpression(), !1533)
; call core::num::<impl usize>::checked_add
  %51 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %_59, i32 %val) #13, !dbg !1534
  %_58.0 = extractvalue { i32, i32 } %51, 0, !dbg !1534
  %_58.1 = extractvalue { i32, i32 } %51, 1, !dbg !1534
; call core::option::Option<T>::ok_or
  %52 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E"(i32 %_58.0, i32 %_58.1) #13, !dbg !1535
  %_57.0 = extractvalue { i32, i32 } %52, 0, !dbg !1535
  %_57.1 = extractvalue { i32, i32 } %52, 1, !dbg !1535
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %53 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %_57.0, i32 %_57.1) #13, !dbg !1526
  %54 = extractvalue { i32, i32 } %53, 0, !dbg !1526
  %55 = extractvalue { i32, i32 } %53, 1, !dbg !1526
  store i32 %54, ptr %_56, align 4, !dbg !1526
  %56 = getelementptr inbounds i8, ptr %_56, i32 4, !dbg !1526
  store i32 %55, ptr %56, align 4, !dbg !1526
  %_66 = load i32, ptr %_56, align 4, !dbg !1526
  %57 = getelementptr inbounds i8, ptr %_56, i32 4, !dbg !1526
  %58 = load i32, ptr %57, align 4, !dbg !1526
  %59 = trunc nuw i32 %_66 to i1, !dbg !1526
  br i1 %59, label %bb46, label %bb45, !dbg !1526

bb46:                                             ; preds = %bb40
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %60 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_d23fabfa229f1fc8cc1f1218164b390a) #13, !dbg !1536
  %61 = zext i1 %60 to i8, !dbg !1536
  store i8 %61, ptr %_0, align 1, !dbg !1536
  br label %bb102, !dbg !1536

bb45:                                             ; preds = %bb40
  %62 = getelementptr inbounds i8, ptr %_56, i32 4, !dbg !1526
  %val19 = load i32, ptr %62, align 4, !dbg !1526
  store i32 %val19, ptr %val.dbg.spill20, align 4, !dbg !1526
    #dbg_declare(ptr %val.dbg.spill20, !1405, !DIExpression(), !1537)
  store i32 %val19, ptr %delta, align 4, !dbg !1538
  %_68 = icmp ult i32 %d16, %t, !dbg !1539
  br i1 %_68, label %bb47, label %bb48, !dbg !1539

bb48:                                             ; preds = %bb45
  %_72 = load i32, ptr %w, align 4, !dbg !1540
  %_74.0 = sub i32 36, %t, !dbg !1541
  %_74.1 = icmp ult i32 36, %t, !dbg !1541
  br i1 %_74.1, label %panic21, label %bb49, !dbg !1541

bb47:                                             ; preds = %bb45
  %63 = load i32, ptr %len, align 4, !dbg !1542
  %_77.0 = add i32 %63, 1, !dbg !1542
  %_77.1 = icmp ult i32 %_77.0, %63, !dbg !1542
  br i1 %_77.1, label %panic24, label %bb55, !dbg !1542

bb49:                                             ; preds = %bb48
; call core::num::<impl usize>::checked_mul
  %64 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %_72, i32 %_74.0) #13, !dbg !1543
  %_71.0 = extractvalue { i32, i32 } %64, 0, !dbg !1543
  %_71.1 = extractvalue { i32, i32 } %64, 1, !dbg !1543
; call core::option::Option<T>::ok_or
  %65 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E"(i32 %_71.0, i32 %_71.1) #13, !dbg !1544
  %_70.0 = extractvalue { i32, i32 } %65, 0, !dbg !1544
  %_70.1 = extractvalue { i32, i32 } %65, 1, !dbg !1544
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %66 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %_70.0, i32 %_70.1) #13, !dbg !1540
  %67 = extractvalue { i32, i32 } %66, 0, !dbg !1540
  %68 = extractvalue { i32, i32 } %66, 1, !dbg !1540
  store i32 %67, ptr %_69, align 4, !dbg !1540
  %69 = getelementptr inbounds i8, ptr %_69, i32 4, !dbg !1540
  store i32 %68, ptr %69, align 4, !dbg !1540
  %_75 = load i32, ptr %_69, align 4, !dbg !1540
  %70 = getelementptr inbounds i8, ptr %_69, i32 4, !dbg !1540
  %71 = load i32, ptr %70, align 4, !dbg !1540
  %72 = trunc nuw i32 %_75 to i1, !dbg !1540
  br i1 %72, label %bb54, label %bb53, !dbg !1540

panic21:                                          ; preds = %bb48
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_bf1b127a9d12818aa2b04b608afe4296) #14, !dbg !1541
  unreachable, !dbg !1541

bb54:                                             ; preds = %bb49
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %73 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_2c5f80f2c60155a91b4af0a83cb8053f) #13, !dbg !1545
  %74 = zext i1 %73 to i8, !dbg !1545
  store i8 %74, ptr %_0, align 1, !dbg !1545
  br label %bb102, !dbg !1545

bb53:                                             ; preds = %bb49
  %75 = getelementptr inbounds i8, ptr %_69, i32 4, !dbg !1540
  %val22 = load i32, ptr %75, align 4, !dbg !1540
  store i32 %val22, ptr %val.dbg.spill23, align 4, !dbg !1540
    #dbg_declare(ptr %val.dbg.spill23, !1409, !DIExpression(), !1546)
  store i32 %val22, ptr %w, align 4, !dbg !1547
  br label %bb20, !dbg !1489

bb102:                                            ; preds = %bb5, %bb17, %bb26, %bb41, %bb46, %bb60, %bb66, %bb73, %bb78, %bb82, %bb74, %bb54
  %76 = load i8, ptr %_0, align 1, !dbg !1548
  %77 = trunc nuw i8 %76 to i1, !dbg !1548
  ret i1 %77, !dbg !1548

bb55:                                             ; preds = %bb47
  store i32 %_77.0, ptr %len, align 4, !dbg !1542
  %_81 = load i32, ptr %i, align 4, !dbg !1549
  %_82 = load i32, ptr %delta, align 4, !dbg !1550
; call core::num::<impl usize>::checked_add
  %78 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %_81, i32 %_82) #13, !dbg !1551
  %_80.0 = extractvalue { i32, i32 } %78, 0, !dbg !1551
  %_80.1 = extractvalue { i32, i32 } %78, 1, !dbg !1551
; call core::option::Option<T>::ok_or
  %79 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E"(i32 %_80.0, i32 %_80.1) #13, !dbg !1552
  %_79.0 = extractvalue { i32, i32 } %79, 0, !dbg !1552
  %_79.1 = extractvalue { i32, i32 } %79, 1, !dbg !1552
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %80 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %_79.0, i32 %_79.1) #13, !dbg !1549
  %81 = extractvalue { i32, i32 } %80, 0, !dbg !1549
  %82 = extractvalue { i32, i32 } %80, 1, !dbg !1549
  store i32 %81, ptr %_78, align 4, !dbg !1549
  %83 = getelementptr inbounds i8, ptr %_78, i32 4, !dbg !1549
  store i32 %82, ptr %83, align 4, !dbg !1549
  %_83 = load i32, ptr %_78, align 4, !dbg !1549
  %84 = getelementptr inbounds i8, ptr %_78, i32 4, !dbg !1549
  %85 = load i32, ptr %84, align 4, !dbg !1549
  %86 = trunc nuw i32 %_83 to i1, !dbg !1549
  br i1 %86, label %bb60, label %bb59, !dbg !1549

panic24:                                          ; preds = %bb47
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_9777d687f605a3a26b574c4d0329344b) #14, !dbg !1542
  unreachable, !dbg !1542

bb60:                                             ; preds = %bb55
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %87 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_ee419f9a5f4f8a2469758387ee649914) #13, !dbg !1553
  %88 = zext i1 %87 to i8, !dbg !1553
  store i8 %88, ptr %_0, align 1, !dbg !1553
  br label %bb102, !dbg !1553

bb59:                                             ; preds = %bb55
  %89 = getelementptr inbounds i8, ptr %_78, i32 4, !dbg !1549
  %val25 = load i32, ptr %89, align 4, !dbg !1549
  store i32 %val25, ptr %val.dbg.spill26, align 4, !dbg !1549
    #dbg_declare(ptr %val.dbg.spill26, !1413, !DIExpression(), !1554)
  store i32 %val25, ptr %i, align 4, !dbg !1555
  %_88 = load i32, ptr %n, align 4, !dbg !1556
  %_90 = load i32, ptr %i, align 4, !dbg !1557
  %_91 = load i32, ptr %len, align 4, !dbg !1558
  %_92 = icmp eq i32 %_91, 0, !dbg !1557
  br i1 %_92, label %panic27, label %bb61, !dbg !1557

bb61:                                             ; preds = %bb59
  %_89 = udiv i32 %_90, %_91, !dbg !1557
; call core::num::<impl usize>::checked_add
  %90 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %_88, i32 %_89) #13, !dbg !1559
  %_87.0 = extractvalue { i32, i32 } %90, 0, !dbg !1559
  %_87.1 = extractvalue { i32, i32 } %90, 1, !dbg !1559
; call core::option::Option<T>::ok_or
  %91 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E"(i32 %_87.0, i32 %_87.1) #13, !dbg !1560
  %_86.0 = extractvalue { i32, i32 } %91, 0, !dbg !1560
  %_86.1 = extractvalue { i32, i32 } %91, 1, !dbg !1560
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %92 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %_86.0, i32 %_86.1) #13, !dbg !1556
  %93 = extractvalue { i32, i32 } %92, 0, !dbg !1556
  %94 = extractvalue { i32, i32 } %92, 1, !dbg !1556
  store i32 %93, ptr %_85, align 4, !dbg !1556
  %95 = getelementptr inbounds i8, ptr %_85, i32 4, !dbg !1556
  store i32 %94, ptr %95, align 4, !dbg !1556
  %_93 = load i32, ptr %_85, align 4, !dbg !1556
  %96 = getelementptr inbounds i8, ptr %_85, i32 4, !dbg !1556
  %97 = load i32, ptr %96, align 4, !dbg !1556
  %98 = trunc nuw i32 %_93 to i1, !dbg !1556
  br i1 %98, label %bb66, label %bb65, !dbg !1556

panic27:                                          ; preds = %bb59
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h88371ca7b8e6cda6E(ptr align 4 @alloc_5d131e0050cfdea92f191a63f1b6e301) #14, !dbg !1557
  unreachable, !dbg !1557

bb66:                                             ; preds = %bb61
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %99 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_70c648ca2ef78690f996ca2d54f78c39) #13, !dbg !1561
  %100 = zext i1 %99 to i8, !dbg !1561
  store i8 %100, ptr %_0, align 1, !dbg !1561
  br label %bb102, !dbg !1561

bb65:                                             ; preds = %bb61
  %101 = getelementptr inbounds i8, ptr %_85, i32 4, !dbg !1556
  %val28 = load i32, ptr %101, align 4, !dbg !1556
  store i32 %val28, ptr %val.dbg.spill29, align 4, !dbg !1556
    #dbg_declare(ptr %val.dbg.spill29, !1417, !DIExpression(), !1562)
  store i32 %val28, ptr %n, align 4, !dbg !1563
  %_95 = load i32, ptr %len, align 4, !dbg !1564
  %_96 = icmp eq i32 %_95, 0, !dbg !1565
  br i1 %_96, label %panic30, label %bb67, !dbg !1565

bb67:                                             ; preds = %bb65
  %102 = load i32, ptr %i, align 4, !dbg !1565
  %103 = urem i32 %102, %_95, !dbg !1565
  store i32 %103, ptr %i, align 4, !dbg !1565
  %_98 = load i32, ptr %n, align 4, !dbg !1566
  store i32 %_98, ptr %n_u32.dbg.spill, align 4, !dbg !1566
    #dbg_declare(ptr %n_u32.dbg.spill, !1419, !DIExpression(), !1567)
  %_101 = load i32, ptr %n, align 4, !dbg !1568
  %_99 = icmp eq i32 %_98, %_101, !dbg !1569
  br i1 %_99, label %bb68, label %bb74, !dbg !1569

panic30:                                          ; preds = %bb65
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h32431b015c39caa9E(ptr align 4 @alloc_4ddbfd349f05e1516f6a58969fb86d3a) #14, !dbg !1565
  unreachable, !dbg !1565

bb74:                                             ; preds = %bb67
  store i8 1, ptr %_0, align 1, !dbg !1570
  br label %bb102, !dbg !1571

bb68:                                             ; preds = %bb67
; call core::char::from_u32
  %_104 = call i32 @_ZN4core4char8from_u3217h3ca732bdf05cd746E(i32 %_98) #13, !dbg !1572
; call core::option::Option<T>::ok_or
  %_103 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he54f112823e43c6bE"(i32 %_104) #13, !dbg !1573
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %104 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd57a36708ee5cf11E"(i32 %_103) #13, !dbg !1572
  store i32 %104, ptr %_102, align 4, !dbg !1572
  %105 = load i32, ptr %_102, align 4, !dbg !1572
  %106 = icmp eq i32 %105, 1114112, !dbg !1572
  %_105 = select i1 %106, i32 1, i32 0, !dbg !1572
  %107 = trunc nuw i32 %_105 to i1, !dbg !1572
  br i1 %107, label %bb73, label %bb72, !dbg !1572

bb73:                                             ; preds = %bb68
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %108 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_63a7a85d3232f7b82109ef5ccff4e459) #13, !dbg !1574
  %109 = zext i1 %108 to i8, !dbg !1574
  store i8 %109, ptr %_0, align 1, !dbg !1574
  br label %bb102, !dbg !1574

bb72:                                             ; preds = %bb68
  %c = load i32, ptr %_102, align 4, !dbg !1572
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !1572
    #dbg_declare(ptr %c.dbg.spill, !1421, !DIExpression(), !1575)
    #dbg_declare(ptr %c.dbg.spill, !1425, !DIExpression(), !1576)
  %_111 = load i32, ptr %i, align 4, !dbg !1577
; call rustc_demangle::v0::Ident::try_small_punycode_decode::{{closure}}
  %_108 = call zeroext i1 @"_ZN14rustc_demangle2v05Ident25try_small_punycode_decode28_$u7b$$u7b$closure$u7d$$u7d$17ha0cb616fadb1ad53E"(ptr align 4 %insert, i32 %_111, i32 %c) #13, !dbg !1578
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_107 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2dc0dbf01439ce47E"(i1 zeroext %_108) #13, !dbg !1578
  %_112 = zext i1 %_107 to i32, !dbg !1578
  %110 = trunc nuw i32 %_112 to i1, !dbg !1578
  br i1 %110, label %bb78, label %bb77, !dbg !1578

bb78:                                             ; preds = %bb72
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %111 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_b91e8c1fb5a692d12ad6bf1e91ed892b) #13, !dbg !1579
  %112 = zext i1 %111 to i8, !dbg !1579
  store i8 %112, ptr %_0, align 1, !dbg !1579
  br label %bb102, !dbg !1579

bb77:                                             ; preds = %bb72
  %113 = load i32, ptr %i, align 4, !dbg !1580
  %_113.0 = add i32 %113, 1, !dbg !1580
  %_113.1 = icmp ult i32 %_113.0, %113, !dbg !1580
  br i1 %_113.1, label %panic31, label %bb79, !dbg !1580

bb79:                                             ; preds = %bb77
  store i32 %_113.0, ptr %i, align 4, !dbg !1580
; call core::iter::adapters::peekable::Peekable<I>::peek
  %114 = call align 1 ptr @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h8d4927ab9897c6afE"(ptr align 4 %punycode_bytes) #13, !dbg !1581
  store ptr %114, ptr %_116, align 4, !dbg !1581
; call core::option::Option<T>::is_none
  %_114 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd4d1e8335c19c611E"(ptr align 4 %_116) #13, !dbg !1582
  br i1 %_114, label %bb82, label %bb83, !dbg !1583

panic31:                                          ; preds = %bb77
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_f637778704f6d8f3e42d430f56c38644) #14, !dbg !1580
  unreachable, !dbg !1580

bb83:                                             ; preds = %bb79
  %_118 = load i32, ptr %damp, align 4, !dbg !1584
  %_119 = icmp eq i32 %_118, 0, !dbg !1585
  br i1 %_119, label %panic32, label %bb84, !dbg !1585

bb82:                                             ; preds = %bb79
  store i8 0, ptr %_0, align 1, !dbg !1586
  br label %bb102, !dbg !1587

bb84:                                             ; preds = %bb83
  %115 = load i32, ptr %delta, align 4, !dbg !1585
  %116 = udiv i32 %115, %_118, !dbg !1585
  store i32 %116, ptr %delta, align 4, !dbg !1585
  store i32 2, ptr %damp, align 4, !dbg !1589
  %_121 = load i32, ptr %delta, align 4, !dbg !1590
  %_122 = load i32, ptr %len, align 4, !dbg !1591
  %_123 = icmp eq i32 %_122, 0, !dbg !1590
  br i1 %_123, label %panic33, label %bb85, !dbg !1590

panic32:                                          ; preds = %bb83
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h88371ca7b8e6cda6E(ptr align 4 @alloc_c36b0af4b79055b503074fa8e392b0ef) #14, !dbg !1585
  unreachable, !dbg !1585

bb85:                                             ; preds = %bb84
  %_120 = udiv i32 %_121, %_122, !dbg !1590
  %117 = load i32, ptr %delta, align 4, !dbg !1592
  %_124.0 = add i32 %117, %_120, !dbg !1592
  %_124.1 = icmp ult i32 %_124.0, %117, !dbg !1592
  br i1 %_124.1, label %panic34, label %bb86, !dbg !1592

panic33:                                          ; preds = %bb84
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h88371ca7b8e6cda6E(ptr align 4 @alloc_693b19308973744f927c14f3061cfe67) #14, !dbg !1590
  unreachable, !dbg !1590

bb86:                                             ; preds = %bb85
  store i32 %_124.0, ptr %delta, align 4, !dbg !1592
  store i32 0, ptr %k1, align 4, !dbg !1593
  br label %bb87, !dbg !1594

panic34:                                          ; preds = %bb85
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_40dc033443fc667842134c1f45357a5a) #14, !dbg !1592
  unreachable, !dbg !1592

bb87:                                             ; preds = %bb94, %bb86
  %_127 = load i32, ptr %delta, align 4, !dbg !1595
  %118 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 35, i32 26), !dbg !1596
  %_132.0 = extractvalue { i32, i1 } %118, 0, !dbg !1596
  %_132.1 = extractvalue { i32, i1 } %118, 1, !dbg !1596
  br i1 %_132.1, label %panic35, label %bb89, !dbg !1596

bb89:                                             ; preds = %bb87
  %_128 = udiv i32 %_132.0, 2, !dbg !1596
  %_126 = icmp ugt i32 %_127, %_128, !dbg !1595
  br i1 %_126, label %bb91, label %bb95, !dbg !1595

panic35:                                          ; preds = %bb87
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_c46e33855f00ae950fc3797767d00827) #14, !dbg !1596
  unreachable, !dbg !1596

bb95:                                             ; preds = %bb89
  %_138 = load i32, ptr %k1, align 4, !dbg !1597
  %_145 = load i32, ptr %delta, align 4, !dbg !1598
  %119 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 36, i32 %_145), !dbg !1599
  %_146.0 = extractvalue { i32, i1 } %119, 0, !dbg !1599
  %_146.1 = extractvalue { i32, i1 } %119, 1, !dbg !1599
  br i1 %_146.1, label %panic36, label %bb98, !dbg !1599

bb91:                                             ; preds = %bb89
  %120 = load i32, ptr %delta, align 4, !dbg !1600
  %121 = udiv i32 %120, 35, !dbg !1600
  store i32 %121, ptr %delta, align 4, !dbg !1600
  %122 = load i32, ptr %k1, align 4, !dbg !1601
  %_137.0 = add i32 %122, 36, !dbg !1601
  %_137.1 = icmp ult i32 %_137.0, %122, !dbg !1601
  br i1 %_137.1, label %panic40, label %bb94, !dbg !1601

bb98:                                             ; preds = %bb95
  %_148 = load i32, ptr %delta, align 4, !dbg !1602
  %_150.0 = add i32 %_148, 38, !dbg !1603
  %_150.1 = icmp ult i32 %_150.0, %_148, !dbg !1603
  br i1 %_150.1, label %panic37, label %bb99, !dbg !1603

panic36:                                          ; preds = %bb95
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_86fd1cc4ccbd24dcbfe25f43a853008b) #14, !dbg !1599
  unreachable, !dbg !1599

bb99:                                             ; preds = %bb98
  %_151 = icmp eq i32 %_150.0, 0, !dbg !1599
  br i1 %_151, label %panic38, label %bb100, !dbg !1599

panic37:                                          ; preds = %bb98
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_23fed37919406ce6b3decd8a9221f18a) #14, !dbg !1603
  unreachable, !dbg !1603

bb100:                                            ; preds = %bb99
  %_139 = udiv i32 %_146.0, %_150.0, !dbg !1599
  %_152.0 = add i32 %_138, %_139, !dbg !1597
  %_152.1 = icmp ult i32 %_152.0, %_138, !dbg !1597
  br i1 %_152.1, label %panic39, label %bb101, !dbg !1597

panic38:                                          ; preds = %bb99
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h88371ca7b8e6cda6E(ptr align 4 @alloc_86fd1cc4ccbd24dcbfe25f43a853008b) #14, !dbg !1599
  unreachable, !dbg !1599

bb101:                                            ; preds = %bb100
  store i32 %_152.0, ptr %bias, align 4, !dbg !1604
  br label %bb19, !dbg !1485

panic39:                                          ; preds = %bb100
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_e7cafee6721939488e81f20b82bc433e) #14, !dbg !1597
  unreachable, !dbg !1597

bb94:                                             ; preds = %bb91
  store i32 %_137.0, ptr %k1, align 4, !dbg !1601
  br label %bb87, !dbg !1594

panic40:                                          ; preds = %bb91
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_eb44edfe316974b7abd316b0cd5ffcf7) #14, !dbg !1601
  unreachable, !dbg !1601

bb17:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %123 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_b5adcd042d2afa0230f675658fc46150) #13, !dbg !1605
  %124 = zext i1 %123 to i8, !dbg !1605
  store i8 %124, ptr %_0, align 1, !dbg !1605
  br label %bb102, !dbg !1605

bb16:                                             ; preds = %bb12
  %125 = load i32, ptr %len, align 4, !dbg !1606
  %_23.0 = add i32 %125, 1, !dbg !1606
  %_23.1 = icmp ult i32 %_23.0, %125, !dbg !1606
  br i1 %_23.1, label %panic43, label %bb18, !dbg !1606

bb18:                                             ; preds = %bb16
  store i32 %_23.0, ptr %len, align 4, !dbg !1606
  br label %bb9, !dbg !1467

panic43:                                          ; preds = %bb16
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_21014dd1e604ba8a3a4c2d9dcac40d71) #14, !dbg !1606
  unreachable, !dbg !1606

bb11:                                             ; No predecessors!
  unreachable, !dbg !1607
}

; rustc_demangle::v0::Ident::try_small_punycode_decode
; Function Attrs: nounwind
define internal i8 @_ZN14rustc_demangle2v05Ident25try_small_punycode_decode17hbf78d80208464757E(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !1609 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_18 = alloca [1 x i8], align 1
  %r = alloca [1 x i8], align 1
  %out_len = alloca [4 x i8], align 4
  %out = alloca [512 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1636, !DIExpression(), !1644)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !1637, !DIExpression(), !1645)
    #dbg_declare(ptr %out, !1638, !DIExpression(), !1646)
    #dbg_declare(ptr %out_len, !1640, !DIExpression(), !1647)
    #dbg_declare(ptr %r, !1642, !DIExpression(), !1648)
  store i8 0, ptr %_18, align 1, !dbg !1649
  store i8 1, ptr %_18, align 1, !dbg !1649
  call void @llvm.memset.p0.i32(ptr align 4 %out, i8 0, i32 512, i1 false), !dbg !1650
  store i32 0, ptr %out_len, align 4, !dbg !1651
; call rustc_demangle::v0::Ident::punycode_decode
  %0 = call zeroext i1 @_ZN14rustc_demangle2v05Ident15punycode_decode17h54cfdbd5b2bb8d4aE(ptr align 4 %self, ptr align 4 %out, ptr align 4 %out_len) #13, !dbg !1652
  %1 = zext i1 %0 to i8, !dbg !1652
  store i8 %1, ptr %r, align 1, !dbg !1652
; call core::result::Result<T,E>::is_ok
  %_9 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1d584052583a1287E"(ptr align 1 %r) #13, !dbg !1653
  br i1 %_9, label %bb3, label %bb6, !dbg !1654

bb6:                                              ; preds = %start
  store i8 2, ptr %_0, align 1, !dbg !1655
  br label %bb7, !dbg !1656

bb3:                                              ; preds = %start
  store i8 0, ptr %_18, align 1, !dbg !1657
  %_17 = load i32, ptr %out_len, align 4, !dbg !1658
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %2 = call { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h9225e7b05f792766E"(ptr align 4 %out, i32 %_17, ptr align 4 @alloc_f5667c362506183aafee0cd87fb24c67) #13, !dbg !1659
  %_14.0 = extractvalue { ptr, i32 } %2, 0, !dbg !1659
  %_14.1 = extractvalue { ptr, i32 } %2, 1, !dbg !1659
; call <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
  %_11 = call zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hf073745dc36faa3aE"(ptr align 4 %f, ptr align 4 %_14.0, i32 %_14.1) #13, !dbg !1657
  %3 = zext i1 %_11 to i8, !dbg !1660
  store i8 %3, ptr %_0, align 1, !dbg !1660
  br label %bb7, !dbg !1656

bb7:                                              ; preds = %bb3, %bb6
  %4 = load i8, ptr %_18, align 1, !dbg !1661
  %5 = trunc nuw i8 %4 to i1, !dbg !1661
  br i1 %5, label %bb9, label %bb8, !dbg !1661

bb8:                                              ; preds = %bb9, %bb7
  %6 = load i8, ptr %_0, align 1, !dbg !1662
  ret i8 %6, !dbg !1662

bb9:                                              ; preds = %bb7
  br label %bb8, !dbg !1661
}

; rustc_demangle::v0::Ident::try_small_punycode_decode::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v05Ident25try_small_punycode_decode28_$u7b$$u7b$closure$u7d$$u7d$17ha0cb616fadb1ad53E"(ptr align 4 %_1, i32 %i, i32 %c) unnamed_addr #0 !dbg !1663 {
start:
  %val.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [0 x i8], align 1
  %c.dbg.spill = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %j = alloca [4 x i8], align 4
  %_4 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1670, !DIExpression(DW_OP_deref, DW_OP_deref), !1679)
    #dbg_declare(ptr %_1.dbg.spill, !1671, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4, DW_OP_deref), !1680)
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !1668, !DIExpression(), !1681)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !1669, !DIExpression(), !1682)
    #dbg_declare(ptr %j, !1677, !DIExpression(), !1683)
    #dbg_declare(ptr %residual.dbg.spill, !1672, !DIExpression(), !1684)
  %_25 = load ptr, ptr %_1, align 4, !dbg !1685
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1686
  %_26 = load ptr, ptr %0, align 4, !dbg !1686
  %_9 = load i32, ptr %_26, align 4, !dbg !1686
; call core::slice::<impl [T]>::get
  %_6 = call align 4 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h0c2238a972157f13E"(ptr align 4 %_25, i32 128, i32 %_9) #13, !dbg !1687
; call core::option::Option<T>::ok_or
  %_5 = call align 4 ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hd5416943ed0b5e8cE"(ptr align 4 %_6) #13, !dbg !1688
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call align 4 ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h59995904f982420dE"(ptr align 4 %_5) #13, !dbg !1685
  store ptr %1, ptr %_4, align 4, !dbg !1685
  %2 = load ptr, ptr %_4, align 4, !dbg !1685
  %3 = ptrtoint ptr %2 to i32, !dbg !1685
  %4 = icmp eq i32 %3, 0, !dbg !1685
  %_10 = select i1 %4, i32 1, i32 0, !dbg !1685
  %5 = trunc nuw i32 %_10 to i1, !dbg !1685
  br i1 %5, label %bb6, label %bb5, !dbg !1685

bb6:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 @alloc_45981c0055076356d326a02866a926d3) #13, !dbg !1689
  %7 = zext i1 %6 to i8, !dbg !1689
  store i8 %7, ptr %_0, align 1, !dbg !1689
  br label %bb16, !dbg !1689

bb5:                                              ; preds = %start
  %val = load ptr, ptr %_4, align 4, !dbg !1685
  store ptr %val, ptr %val.dbg.spill, align 4, !dbg !1685
    #dbg_declare(ptr %val.dbg.spill, !1674, !DIExpression(), !1690)
  %8 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1691
  %_27 = load ptr, ptr %8, align 4, !dbg !1691
  %9 = load i32, ptr %_27, align 4, !dbg !1691
  store i32 %9, ptr %j, align 4, !dbg !1691
  %10 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1692
  %_28 = load ptr, ptr %10, align 4, !dbg !1692
  %11 = load i32, ptr %_28, align 4, !dbg !1692
  %_13.0 = add i32 %11, 1, !dbg !1692
  %_13.1 = icmp ult i32 %_13.0, %11, !dbg !1692
  %12 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1692
  %_29 = load ptr, ptr %12, align 4, !dbg !1692
  br i1 %_13.1, label %panic, label %bb7, !dbg !1692

bb7:                                              ; preds = %bb5
  %13 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1692
  %_30 = load ptr, ptr %13, align 4, !dbg !1692
  store i32 %_13.0, ptr %_30, align 4, !dbg !1692
  br label %bb8, !dbg !1693

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_617b75551dad21771d7690771534d65e) #14, !dbg !1692
  unreachable, !dbg !1692

bb8:                                              ; preds = %bb13, %bb7
  %_15 = load i32, ptr %j, align 4, !dbg !1694
  %_14 = icmp ugt i32 %_15, %i, !dbg !1694
  br i1 %_14, label %bb9, label %bb14, !dbg !1694

bb14:                                             ; preds = %bb8
  %_24 = icmp ult i32 %i, 128, !dbg !1695
  br i1 %_24, label %bb15, label %panic1, !dbg !1695

bb9:                                              ; preds = %bb8
  %_18 = load i32, ptr %j, align 4, !dbg !1696
  %_19.0 = sub i32 %_18, 1, !dbg !1696
  %_19.1 = icmp ult i32 %_18, 1, !dbg !1696
  br i1 %_19.1, label %panic2, label %bb10, !dbg !1696

bb15:                                             ; preds = %bb14
  %_33 = load ptr, ptr %_1, align 4, !dbg !1695
  %14 = getelementptr inbounds nuw i32, ptr %_33, i32 %i, !dbg !1695
  store i32 %c, ptr %14, align 4, !dbg !1695
  store i8 0, ptr %_0, align 1, !dbg !1697
  br label %bb16, !dbg !1698

panic1:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %i, i32 128, ptr align 4 @alloc_0e5072f75ceadb82304f37d0ce9f554f) #14, !dbg !1695
  unreachable, !dbg !1695

bb16:                                             ; preds = %bb6, %bb15
  %15 = load i8, ptr %_0, align 1, !dbg !1698
  %16 = trunc nuw i8 %15 to i1, !dbg !1698
  ret i1 %16, !dbg !1698

bb10:                                             ; preds = %bb9
  %_20 = icmp ult i32 %_19.0, 128, !dbg !1699
  br i1 %_20, label %bb11, label %panic3, !dbg !1699

panic2:                                           ; preds = %bb9
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_18c557fe36ac602196947eba993896fb) #14, !dbg !1696
  unreachable, !dbg !1696

bb11:                                             ; preds = %bb10
  %_31 = load ptr, ptr %_1, align 4, !dbg !1699
  %17 = getelementptr inbounds nuw i32, ptr %_31, i32 %_19.0, !dbg !1699
  %_16 = load i32, ptr %17, align 4, !dbg !1699
  %_21 = load i32, ptr %j, align 4, !dbg !1700
  %_22 = icmp ult i32 %_21, 128, !dbg !1701
  br i1 %_22, label %bb12, label %panic4, !dbg !1701

panic3:                                           ; preds = %bb10
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %_19.0, i32 128, ptr align 4 @alloc_9a4fdbd367268fb5d98523b643479f80) #14, !dbg !1699
  unreachable, !dbg !1699

bb12:                                             ; preds = %bb11
  %_32 = load ptr, ptr %_1, align 4, !dbg !1701
  %18 = getelementptr inbounds nuw i32, ptr %_32, i32 %_21, !dbg !1701
  store i32 %_16, ptr %18, align 4, !dbg !1701
  %19 = load i32, ptr %j, align 4, !dbg !1702
  %_23.0 = sub i32 %19, 1, !dbg !1702
  %_23.1 = icmp ult i32 %19, 1, !dbg !1702
  br i1 %_23.1, label %panic5, label %bb13, !dbg !1702

panic4:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %_21, i32 128, ptr align 4 @alloc_4b5eb2077f3f97bf4b90eeb34bfb2303) #14, !dbg !1701
  unreachable, !dbg !1701

bb13:                                             ; preds = %bb12
  store i32 %_23.0, ptr %j, align 4, !dbg !1702
  br label %bb8, !dbg !1693

panic5:                                           ; preds = %bb12
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_079223882705de60e13dbb1d6149e04b) #14, !dbg !1702
  unreachable, !dbg !1702

bb4:                                              ; No predecessors!
  unreachable, !dbg !1685
}

; rustc_demangle::v0::Parser::integer_62
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE(ptr sret([16 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !1703 {
start:
  %0 = alloca [16 x i8], align 8
  %residual.dbg.spill8 = alloca [1 x i8], align 1
  %residual.dbg.spill6 = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill4 = alloca [8 x i8], align 8
  %1 = alloca [16 x i8], align 8
  %val.dbg.spill2 = alloca [8 x i8], align 8
  %2 = alloca [16 x i8], align 8
  %d.dbg.spill = alloca [8 x i8], align 8
  %val.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_20 = alloca [16 x i8], align 8
  %_19 = alloca [16 x i8], align 8
  %_12 = alloca [16 x i8], align 8
  %_11 = alloca [16 x i8], align 8
  %_6 = alloca [2 x i8], align 1
  %x = alloca [8 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1729, !DIExpression(), !1759)
    #dbg_declare(ptr %x, !1730, !DIExpression(), !1760)
; call rustc_demangle::v0::Parser::eat
  %_2 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E(ptr align 4 %self, i8 95) #13, !dbg !1761
  br i1 %_2, label %bb2, label %bb3, !dbg !1762

bb3:                                              ; preds = %start
  store i64 0, ptr %x, align 8, !dbg !1763
  br label %bb4, !dbg !1764

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !1765
  store i64 0, ptr %3, align 8, !dbg !1765
  store i8 0, ptr %_0, align 8, !dbg !1765
  br label %bb24, !dbg !1766

bb4:                                              ; preds = %bb21, %bb3
; call rustc_demangle::v0::Parser::eat
  %_4 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E(ptr align 4 %self, i8 95) #13, !dbg !1768
  br i1 %_4, label %bb6, label %bb7, !dbg !1769

bb7:                                              ; preds = %bb4
; call rustc_demangle::v0::Parser::digit_62
  %4 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser8digit_6217hab58233d9a93a2f5E(ptr align 4 %self) #13, !dbg !1770
  %_7.0 = extractvalue { i1, i8 } %4, 0, !dbg !1770
  %_7.1 = extractvalue { i1, i8 } %4, 1, !dbg !1770
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %5 = call { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb265c32027c10ef6E"(i1 zeroext %_7.0, i8 %_7.1) #13, !dbg !1771
  %6 = extractvalue { i1, i8 } %5, 0, !dbg !1771
  %7 = extractvalue { i1, i8 } %5, 1, !dbg !1771
  %8 = zext i1 %6 to i8, !dbg !1771
  store i8 %8, ptr %_6, align 1, !dbg !1771
  %9 = getelementptr inbounds i8, ptr %_6, i32 1, !dbg !1771
  store i8 %7, ptr %9, align 1, !dbg !1771
  %10 = load i8, ptr %_6, align 1, !dbg !1771
  %11 = trunc nuw i8 %10 to i1, !dbg !1771
  %12 = getelementptr inbounds i8, ptr %_6, i32 1, !dbg !1771
  %13 = load i8, ptr %12, align 1, !dbg !1771
  %_8 = zext i1 %11 to i32, !dbg !1771
  %14 = trunc nuw i32 %_8 to i1, !dbg !1771
  br i1 %14, label %bb12, label %bb11, !dbg !1771

bb6:                                              ; preds = %bb4
  %_28 = load i64, ptr %x, align 8, !dbg !1772
; call core::num::<impl u64>::checked_add
  call void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17hb44e6f61114d879fE"(ptr sret([16 x i8]) align 8 %0, i64 %_28, i64 1) #13, !dbg !1773
  %_27.0 = load i64, ptr %0, align 8, !dbg !1773
  %15 = getelementptr inbounds i8, ptr %0, i32 8, !dbg !1773
  %_27.1 = load i64, ptr %15, align 8, !dbg !1773
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17hade4cfba7b663987E"(ptr sret([16 x i8]) align 8 %_0, i64 %_27.0, i64 %_27.1, i1 zeroext false) #13, !dbg !1774
  br label %bb24, !dbg !1774

bb12:                                             ; preds = %bb7
  %16 = getelementptr inbounds i8, ptr %_6, i32 1, !dbg !1775
  %17 = load i8, ptr %16, align 1, !dbg !1775
  %residual7 = trunc nuw i8 %17 to i1, !dbg !1775
  %18 = zext i1 %residual7 to i8, !dbg !1775
  store i8 %18, ptr %residual.dbg.spill8, align 1, !dbg !1775
    #dbg_declare(ptr %residual.dbg.spill8, !1734, !DIExpression(), !1776)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h51cbba3b483e7d23E"(ptr sret([16 x i8]) align 8 %_0, i1 zeroext %residual7, ptr align 4 @alloc_39c82a53c004941d9675a3c2922afaec) #13, !dbg !1777
  br label %bb24, !dbg !1777

bb11:                                             ; preds = %bb7
  %19 = getelementptr inbounds i8, ptr %_6, i32 1, !dbg !1771
  %val = load i8, ptr %19, align 1, !dbg !1771
  store i8 %val, ptr %val.dbg.spill, align 1, !dbg !1771
    #dbg_declare(ptr %val.dbg.spill, !1749, !DIExpression(), !1778)
  %d = zext i8 %val to i64, !dbg !1771
  store i64 %d, ptr %d.dbg.spill, align 8, !dbg !1771
    #dbg_declare(ptr %d.dbg.spill, !1732, !DIExpression(), !1779)
  %_14 = load i64, ptr %x, align 8, !dbg !1780
; call core::num::<impl u64>::checked_mul
  call void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h9f8a1b16d6975a17E"(ptr sret([16 x i8]) align 8 %2, i64 %_14, i64 62) #13, !dbg !1781
  %_13.0 = load i64, ptr %2, align 8, !dbg !1781
  %20 = getelementptr inbounds i8, ptr %2, i32 8, !dbg !1781
  %_13.1 = load i64, ptr %20, align 8, !dbg !1781
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17hade4cfba7b663987E"(ptr sret([16 x i8]) align 8 %_12, i64 %_13.0, i64 %_13.1, i1 zeroext false) #13, !dbg !1782
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9c3d6ae00637452fE"(ptr sret([16 x i8]) align 8 %_11, ptr align 8 %_12) #13, !dbg !1780
  %21 = load i8, ptr %_11, align 8, !dbg !1780
  %22 = trunc nuw i8 %21 to i1, !dbg !1780
  %_16 = zext i1 %22 to i32, !dbg !1780
  %23 = trunc nuw i32 %_16 to i1, !dbg !1780
  br i1 %23, label %bb17, label %bb16, !dbg !1780

bb17:                                             ; preds = %bb11
  %24 = getelementptr inbounds i8, ptr %_11, i32 1, !dbg !1783
  %25 = load i8, ptr %24, align 1, !dbg !1783
  %residual5 = trunc nuw i8 %25 to i1, !dbg !1783
  %26 = zext i1 %residual5 to i8, !dbg !1783
  store i8 %26, ptr %residual.dbg.spill6, align 1, !dbg !1783
    #dbg_declare(ptr %residual.dbg.spill6, !1751, !DIExpression(), !1784)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h51cbba3b483e7d23E"(ptr sret([16 x i8]) align 8 %_0, i1 zeroext %residual5, ptr align 4 @alloc_4c02ac99d8bafd62fdbfc18a2494ae5f) #13, !dbg !1785
  br label %bb24, !dbg !1785

bb16:                                             ; preds = %bb11
  %27 = getelementptr inbounds i8, ptr %_11, i32 8, !dbg !1780
  %val1 = load i64, ptr %27, align 8, !dbg !1780
  store i64 %val1, ptr %val.dbg.spill2, align 8, !dbg !1780
    #dbg_declare(ptr %val.dbg.spill2, !1753, !DIExpression(), !1786)
  store i64 %val1, ptr %x, align 8, !dbg !1787
  %_22 = load i64, ptr %x, align 8, !dbg !1788
; call core::num::<impl u64>::checked_add
  call void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17hb44e6f61114d879fE"(ptr sret([16 x i8]) align 8 %1, i64 %_22, i64 %d) #13, !dbg !1789
  %_21.0 = load i64, ptr %1, align 8, !dbg !1789
  %28 = getelementptr inbounds i8, ptr %1, i32 8, !dbg !1789
  %_21.1 = load i64, ptr %28, align 8, !dbg !1789
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17hade4cfba7b663987E"(ptr sret([16 x i8]) align 8 %_20, i64 %_21.0, i64 %_21.1, i1 zeroext false) #13, !dbg !1790
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9c3d6ae00637452fE"(ptr sret([16 x i8]) align 8 %_19, ptr align 8 %_20) #13, !dbg !1788
  %29 = load i8, ptr %_19, align 8, !dbg !1788
  %30 = trunc nuw i8 %29 to i1, !dbg !1788
  %_24 = zext i1 %30 to i32, !dbg !1788
  %31 = trunc nuw i32 %_24 to i1, !dbg !1788
  br i1 %31, label %bb22, label %bb21, !dbg !1788

bb22:                                             ; preds = %bb16
  %32 = getelementptr inbounds i8, ptr %_19, i32 1, !dbg !1791
  %33 = load i8, ptr %32, align 1, !dbg !1791
  %residual = trunc nuw i8 %33 to i1, !dbg !1791
  %34 = zext i1 %residual to i8, !dbg !1791
  store i8 %34, ptr %residual.dbg.spill, align 1, !dbg !1791
    #dbg_declare(ptr %residual.dbg.spill, !1755, !DIExpression(), !1792)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h51cbba3b483e7d23E"(ptr sret([16 x i8]) align 8 %_0, i1 zeroext %residual, ptr align 4 @alloc_29741e1d233c6c76ac9a937b90eb1750) #13, !dbg !1793
  br label %bb24, !dbg !1793

bb21:                                             ; preds = %bb16
  %35 = getelementptr inbounds i8, ptr %_19, i32 8, !dbg !1788
  %val3 = load i64, ptr %35, align 8, !dbg !1788
  store i64 %val3, ptr %val.dbg.spill4, align 8, !dbg !1788
    #dbg_declare(ptr %val.dbg.spill4, !1757, !DIExpression(), !1794)
  store i64 %val3, ptr %x, align 8, !dbg !1795
  br label %bb4, !dbg !1764

bb24:                                             ; preds = %bb2, %bb6, %bb12, %bb17, %bb22
  ret void, !dbg !1796

bb10:                                             ; No predecessors!
  unreachable, !dbg !1766
}

; rustc_demangle::v0::Parser::push_depth
; Function Attrs: nounwind
define internal i8 @_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE(ptr align 4 %self) unnamed_addr #1 !dbg !1797 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1816, !DIExpression(), !1817)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !1818
  %1 = load i32, ptr %0, align 4, !dbg !1818
  %_2.0 = add i32 %1, 1, !dbg !1818
  %_2.1 = icmp ult i32 %_2.0, %1, !dbg !1818
  br i1 %_2.1, label %panic, label %bb1, !dbg !1818

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !1818
  store i32 %_2.0, ptr %2, align 4, !dbg !1818
  %3 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !1819
  %_4 = load i32, ptr %3, align 4, !dbg !1819
  %_3 = icmp ugt i32 %_4, 500, !dbg !1819
  br i1 %_3, label %bb2, label %bb3, !dbg !1819

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_7179cef08afcbefada22d454c2a2f022) #14, !dbg !1818
  unreachable, !dbg !1818

bb3:                                              ; preds = %bb1
  store i8 2, ptr %_0, align 1, !dbg !1820
  br label %bb4, !dbg !1821

bb2:                                              ; preds = %bb1
  store i8 1, ptr %_0, align 1, !dbg !1822
  br label %bb4, !dbg !1821

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i8, ptr %_0, align 1, !dbg !1823
  ret i8 %4, !dbg !1823
}

; rustc_demangle::v0::Parser::hex_nibbles
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser11hex_nibbles17h2dcdab77a1a24703E(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !1824 {
start:
  %residual.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill = alloca [1 x i8], align 1
  %start.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1844, !DIExpression(), !1851)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1852
  %start1 = load i32, ptr %0, align 4, !dbg !1852
  store i32 %start1, ptr %start.dbg.spill, align 4, !dbg !1852
    #dbg_declare(ptr %start.dbg.spill, !1845, !DIExpression(), !1853)
  br label %bb1, !dbg !1854

bb1:                                              ; preds = %bb10, %bb11, %start
; call rustc_demangle::v0::Parser::next
  %1 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) #13, !dbg !1855
  %_4.0 = extractvalue { i1, i8 } %1, 0, !dbg !1855
  %_4.1 = extractvalue { i1, i8 } %1, 1, !dbg !1855
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb265c32027c10ef6E"(i1 zeroext %_4.0, i8 %_4.1) #13, !dbg !1856
  %3 = extractvalue { i1, i8 } %2, 0, !dbg !1856
  %4 = extractvalue { i1, i8 } %2, 1, !dbg !1856
  %5 = zext i1 %3 to i8, !dbg !1856
  store i8 %5, ptr %_3, align 1, !dbg !1856
  %6 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !1856
  store i8 %4, ptr %6, align 1, !dbg !1856
  %7 = load i8, ptr %_3, align 1, !dbg !1856
  %8 = trunc nuw i8 %7 to i1, !dbg !1856
  %9 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !1856
  %10 = load i8, ptr %9, align 1, !dbg !1856
  %_5 = zext i1 %8 to i32, !dbg !1856
  %11 = trunc nuw i32 %_5 to i1, !dbg !1856
  br i1 %11, label %bb6, label %bb5, !dbg !1856

bb6:                                              ; preds = %bb1
  %12 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !1857
  %13 = load i8, ptr %12, align 1, !dbg !1857
  %residual = trunc nuw i8 %13 to i1, !dbg !1857
  %14 = zext i1 %residual to i8, !dbg !1857
  store i8 %14, ptr %residual.dbg.spill, align 1, !dbg !1857
    #dbg_declare(ptr %residual.dbg.spill, !1847, !DIExpression(), !1858)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h53fae95007a39ef6E"(ptr sret([8 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 @alloc_dc80604dbce74c4319d6886c8c8f996d) #13, !dbg !1859
  br label %bb15, !dbg !1859

bb5:                                              ; preds = %bb1
  %15 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !1856
  %val = load i8, ptr %15, align 1, !dbg !1856
  store i8 %val, ptr %val.dbg.spill, align 1, !dbg !1856
    #dbg_declare(ptr %val.dbg.spill, !1849, !DIExpression(), !1860)
  %_10 = icmp ule i8 48, %val, !dbg !1861
  br i1 %_10, label %bb11, label %bb8, !dbg !1861

bb8:                                              ; preds = %bb11, %bb5
  %_8 = icmp ule i8 97, %val, !dbg !1862
  br i1 %_8, label %bb10, label %bb9, !dbg !1862

bb11:                                             ; preds = %bb5
  %_11 = icmp ule i8 %val, 57, !dbg !1861
  br i1 %_11, label %bb1, label %bb8, !dbg !1861

bb9:                                              ; preds = %bb10, %bb8
  %16 = icmp eq i8 %val, 95, !dbg !1863
  br i1 %16, label %bb12, label %bb7, !dbg !1863

bb10:                                             ; preds = %bb8
  %_9 = icmp ule i8 %val, 102, !dbg !1862
  br i1 %_9, label %bb1, label %bb9, !dbg !1862

bb12:                                             ; preds = %bb9
  %_19.0 = load ptr, ptr %self, align 4, !dbg !1864
  %17 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !1864
  %_19.1 = load i32, ptr %17, align 4, !dbg !1864
  %18 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1865
  %_17 = load i32, ptr %18, align 4, !dbg !1865
  %_18.0 = sub i32 %_17, 1, !dbg !1865
  %_18.1 = icmp ult i32 %_17, 1, !dbg !1865
  br i1 %_18.1, label %panic, label %bb13, !dbg !1865

bb7:                                              ; preds = %bb9
  %19 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1866
  store i8 0, ptr %19, align 4, !dbg !1866
  store ptr null, ptr %_0, align 4, !dbg !1866
  br label %bb15, !dbg !1867

bb13:                                             ; preds = %bb12
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %20 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h5f4fd688f129b44dE"(ptr align 1 %_19.0, i32 %_19.1, i32 %start1, i32 %_18.0, ptr align 4 @alloc_a8310d0718108e4fd92bbaa75895a7c3) #13, !dbg !1868
  %_14.0 = extractvalue { ptr, i32 } %20, 0, !dbg !1868
  %_14.1 = extractvalue { ptr, i32 } %20, 1, !dbg !1868
  store ptr %_14.0, ptr %_0, align 4, !dbg !1869
  %21 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1869
  store i32 %_14.1, ptr %21, align 4, !dbg !1869
  br label %bb15, !dbg !1870

panic:                                            ; preds = %bb12
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_8979c736d523acd6f75e66ecf6073edd) #14, !dbg !1865
  unreachable, !dbg !1865

bb15:                                             ; preds = %bb6, %bb7, %bb13
  ret void, !dbg !1870

bb4:                                              ; No predecessors!
  unreachable, !dbg !1856
}

; rustc_demangle::v0::Parser::disambiguator
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser13disambiguator17hb8f2bd207c519d1dE(ptr sret([16 x i8]) align 8 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !1871 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1874, !DIExpression(), !1875)
; call rustc_demangle::v0::Parser::opt_integer_62
  call void @_ZN14rustc_demangle2v06Parser14opt_integer_6217hc782639caf15959dE(ptr sret([16 x i8]) align 8 %_0, ptr align 4 %self, i8 115) #13, !dbg !1876
  ret void, !dbg !1877
}

; rustc_demangle::v0::Parser::opt_integer_62
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser14opt_integer_6217hc782639caf15959dE(ptr sret([16 x i8]) align 8 %_0, ptr align 4 %self, i8 %tag) unnamed_addr #1 !dbg !1878 {
start:
  %residual.dbg.spill = alloca [1 x i8], align 1
  %0 = alloca [16 x i8], align 8
  %val.dbg.spill = alloca [8 x i8], align 8
  %tag.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1883, !DIExpression(), !1889)
  store i8 %tag, ptr %tag.dbg.spill, align 1
    #dbg_declare(ptr %tag.dbg.spill, !1884, !DIExpression(), !1890)
; call rustc_demangle::v0::Parser::eat
  %_3 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E(ptr align 4 %self, i8 %tag) #13, !dbg !1891
  br i1 %_3, label %bb2, label %bb3, !dbg !1892

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !1893
  store i64 0, ptr %1, align 8, !dbg !1893
  store i8 0, ptr %_0, align 8, !dbg !1893
  br label %bb10, !dbg !1894

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Parser::integer_62
  call void @_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE(ptr sret([16 x i8]) align 8 %_6, ptr align 4 %self) #13, !dbg !1896
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9c3d6ae00637452fE"(ptr sret([16 x i8]) align 8 %_5, ptr align 8 %_6) #13, !dbg !1897
  %2 = load i8, ptr %_5, align 8, !dbg !1897
  %3 = trunc nuw i8 %2 to i1, !dbg !1897
  %_7 = zext i1 %3 to i32, !dbg !1897
  %4 = trunc nuw i32 %_7 to i1, !dbg !1897
  br i1 %4, label %bb8, label %bb7, !dbg !1897

bb10:                                             ; preds = %bb8, %bb7, %bb3
  ret void, !dbg !1898

bb8:                                              ; preds = %bb2
  %5 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !1899
  %6 = load i8, ptr %5, align 1, !dbg !1899
  %residual = trunc nuw i8 %6 to i1, !dbg !1899
  %7 = zext i1 %residual to i8, !dbg !1899
  store i8 %7, ptr %residual.dbg.spill, align 1, !dbg !1899
    #dbg_declare(ptr %residual.dbg.spill, !1885, !DIExpression(), !1900)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h51cbba3b483e7d23E"(ptr sret([16 x i8]) align 8 %_0, i1 zeroext %residual, ptr align 4 @alloc_25668ad8c104e9e7249694057538e48e) #13, !dbg !1901
  br label %bb10, !dbg !1901

bb7:                                              ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !1897
  %val = load i64, ptr %8, align 8, !dbg !1897
  store i64 %val, ptr %val.dbg.spill, align 8, !dbg !1897
    #dbg_declare(ptr %val.dbg.spill, !1887, !DIExpression(), !1902)
; call core::num::<impl u64>::checked_add
  call void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17hb44e6f61114d879fE"(ptr sret([16 x i8]) align 8 %0, i64 %val, i64 1) #13, !dbg !1903
  %_4.0 = load i64, ptr %0, align 8, !dbg !1903
  %9 = getelementptr inbounds i8, ptr %0, i32 8, !dbg !1903
  %_4.1 = load i64, ptr %9, align 8, !dbg !1903
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17hade4cfba7b663987E"(ptr sret([16 x i8]) align 8 %_0, i64 %_4.0, i64 %_4.1, i1 zeroext false) #13, !dbg !1904
  br label %bb10, !dbg !1904

bb6:                                              ; No predecessors!
  unreachable, !dbg !1897
}

; rustc_demangle::v0::Parser::eat
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E(ptr align 4 %self, i8 %b) unnamed_addr #1 !dbg !1905 {
start:
  %b.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [2 x i8], align 1
  %_5 = alloca [2 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1910, !DIExpression(), !1912)
  store i8 %b, ptr %b.dbg.spill, align 1
    #dbg_declare(ptr %b.dbg.spill, !1911, !DIExpression(), !1913)
; call rustc_demangle::v0::Parser::peek
  %0 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4peek17h3a50a27221fc9b1eE(ptr align 4 %self) #13, !dbg !1914
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !1914
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !1914
  %3 = zext i1 %1 to i8, !dbg !1914
  store i8 %3, ptr %_5, align 1, !dbg !1914
  %4 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !1914
  store i8 %2, ptr %4, align 1, !dbg !1914
  %5 = getelementptr inbounds i8, ptr %_8, i32 1, !dbg !1915
  store i8 %b, ptr %5, align 1, !dbg !1915
  store i8 1, ptr %_8, align 1, !dbg !1915
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17he857b0b19bc801f1E"(ptr align 1 %_5, ptr align 1 %_8) #13, !dbg !1916
  br i1 %_3, label %bb3, label %bb5, !dbg !1916

bb5:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !1917
  br label %bb6, !dbg !1918

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1919
  %7 = load i32, ptr %6, align 4, !dbg !1919
  %_9.0 = add i32 %7, 1, !dbg !1919
  %_9.1 = icmp ult i32 %_9.0, %7, !dbg !1919
  br i1 %_9.1, label %panic, label %bb4, !dbg !1919

bb6:                                              ; preds = %bb4, %bb5
  %8 = load i8, ptr %_0, align 1, !dbg !1920
  %9 = trunc nuw i8 %8 to i1, !dbg !1920
  ret i1 %9, !dbg !1920

bb4:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1919
  store i32 %_9.0, ptr %10, align 4, !dbg !1919
  store i8 1, ptr %_0, align 1, !dbg !1921
  br label %bb6, !dbg !1918

panic:                                            ; preds = %bb3
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_3c4309668649a5c3b4be87374bb99124) #14, !dbg !1919
  unreachable, !dbg !1919
}

; rustc_demangle::v0::Parser::next
; Function Attrs: nounwind
define internal { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) unnamed_addr #1 !dbg !1922 {
start:
  %residual.dbg.spill = alloca [1 x i8], align 1
  %b.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1941, !DIExpression(), !1948)
; call rustc_demangle::v0::Parser::peek
  %0 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4peek17h3a50a27221fc9b1eE(ptr align 4 %self) #13, !dbg !1949
  %_4.0 = extractvalue { i1, i8 } %0, 0, !dbg !1949
  %_4.1 = extractvalue { i1, i8 } %0, 1, !dbg !1949
; call core::option::Option<T>::ok_or
  %1 = call { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hef4aba97e8eb0582E"(i1 zeroext %_4.0, i8 %_4.1, i1 zeroext false) #13, !dbg !1950
  %_3.0 = extractvalue { i1, i8 } %1, 0, !dbg !1950
  %_3.1 = extractvalue { i1, i8 } %1, 1, !dbg !1950
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb265c32027c10ef6E"(i1 zeroext %_3.0, i8 %_3.1) #13, !dbg !1951
  %3 = extractvalue { i1, i8 } %2, 0, !dbg !1951
  %4 = extractvalue { i1, i8 } %2, 1, !dbg !1951
  %5 = zext i1 %3 to i8, !dbg !1951
  store i8 %5, ptr %_2, align 1, !dbg !1951
  %6 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !1951
  store i8 %4, ptr %6, align 1, !dbg !1951
  %7 = load i8, ptr %_2, align 1, !dbg !1951
  %8 = trunc nuw i8 %7 to i1, !dbg !1951
  %9 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !1951
  %10 = load i8, ptr %9, align 1, !dbg !1951
  %_7 = zext i1 %8 to i32, !dbg !1951
  %11 = trunc nuw i32 %_7 to i1, !dbg !1951
  br i1 %11, label %bb6, label %bb5, !dbg !1951

bb6:                                              ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !1952
  %13 = load i8, ptr %12, align 1, !dbg !1952
  %residual = trunc nuw i8 %13 to i1, !dbg !1952
  %14 = zext i1 %residual to i8, !dbg !1952
  store i8 %14, ptr %residual.dbg.spill, align 1, !dbg !1952
    #dbg_declare(ptr %residual.dbg.spill, !1944, !DIExpression(), !1953)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %15 = call { i1, i8 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h84d107d40cde513aE"(i1 zeroext %residual, ptr align 4 @alloc_f57160c815d296d6726a570f3bb590a7) #13, !dbg !1954
  %16 = extractvalue { i1, i8 } %15, 0, !dbg !1954
  %17 = extractvalue { i1, i8 } %15, 1, !dbg !1954
  %18 = zext i1 %16 to i8, !dbg !1954
  store i8 %18, ptr %_0, align 1, !dbg !1954
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !1954
  store i8 %17, ptr %19, align 1, !dbg !1954
  br label %bb8, !dbg !1954

bb5:                                              ; preds = %start
  %20 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !1951
  %b = load i8, ptr %20, align 1, !dbg !1951
  store i8 %b, ptr %b.dbg.spill, align 1, !dbg !1951
    #dbg_declare(ptr %b.dbg.spill, !1942, !DIExpression(), !1955)
    #dbg_declare(ptr %b.dbg.spill, !1946, !DIExpression(), !1956)
  %21 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1957
  %22 = load i32, ptr %21, align 4, !dbg !1957
  %_10.0 = add i32 %22, 1, !dbg !1957
  %_10.1 = icmp ult i32 %_10.0, %22, !dbg !1957
  br i1 %_10.1, label %panic, label %bb7, !dbg !1957

bb7:                                              ; preds = %bb5
  %23 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1957
  store i32 %_10.0, ptr %23, align 4, !dbg !1957
  %24 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !1958
  store i8 %b, ptr %24, align 1, !dbg !1958
  store i8 0, ptr %_0, align 1, !dbg !1958
  br label %bb8, !dbg !1959

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_e8dcca4bbbf5382b1a153fff3ba2d8b7) #14, !dbg !1957
  unreachable, !dbg !1957

bb8:                                              ; preds = %bb6, %bb7
  %25 = load i8, ptr %_0, align 1, !dbg !1959
  %26 = trunc nuw i8 %25 to i1, !dbg !1959
  %27 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !1959
  %28 = load i8, ptr %27, align 1, !dbg !1959
  %29 = insertvalue { i1, i8 } poison, i1 %26, 0, !dbg !1959
  %30 = insertvalue { i1, i8 } %29, i8 %28, 1, !dbg !1959
  ret { i1, i8 } %30, !dbg !1959

bb4:                                              ; No predecessors!
  unreachable, !dbg !1951
}

; rustc_demangle::v0::Parser::peek
; Function Attrs: nounwind
define internal { i1, i8 } @_ZN14rustc_demangle2v06Parser4peek17h3a50a27221fc9b1eE(ptr align 4 %self) unnamed_addr #1 !dbg !1960 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1966, !DIExpression(), !1967)
  %_5.0 = load ptr, ptr %self, align 4, !dbg !1968
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !1968
  %_5.1 = load i32, ptr %0, align 4, !dbg !1968
  store ptr %_5.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_5.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !1969)
  %2 = insertvalue { ptr, i32 } poison, ptr %_5.0, 0, !dbg !1971
  %3 = insertvalue { ptr, i32 } %2, i32 %_5.1, 1, !dbg !1971
  %_3.0 = extractvalue { ptr, i32 } %3, 0, !dbg !1972
  %_3.1 = extractvalue { ptr, i32 } %3, 1, !dbg !1972
  %4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1973
  %_4 = load i32, ptr %4, align 4, !dbg !1973
; call core::slice::<impl [T]>::get
  %_2 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcd563978280d65deE"(ptr align 1 %_3.0, i32 %_3.1, i32 %_4) #13, !dbg !1974
; call core::option::Option<&T>::cloned
  %5 = call { i1, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17h749117ec4a4e929fE"(ptr align 1 %_2) #13, !dbg !1975
  %_0.0 = extractvalue { i1, i8 } %5, 0, !dbg !1975
  %_0.1 = extractvalue { i1, i8 } %5, 1, !dbg !1975
  %6 = insertvalue { i1, i8 } poison, i1 %_0.0, 0, !dbg !1976
  %7 = insertvalue { i1, i8 } %6, i8 %_0.1, 1, !dbg !1976
  ret { i1, i8 } %7, !dbg !1976
}

; rustc_demangle::v0::Parser::ident
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !1977 {
start:
  %residual.dbg.spill13 = alloca [1 x i8], align 1
  %residual.dbg.spill11 = alloca [1 x i8], align 1
  %i.dbg.spill = alloca [4 x i8], align 4
  %ident.dbg.spill = alloca [8 x i8], align 4
  %val.dbg.spill9 = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill6 = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill4 = alloca [4 x i8], align 4
  %val.dbg.spill2 = alloca [4 x i8], align 4
  %d.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill = alloca [1 x i8], align 1
  %is_punycode.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_64 = alloca [16 x i8], align 4
  %_63 = alloca [16 x i8], align 4
  %_51 = alloca [8 x i8], align 4
  %_49 = alloca [8 x i8], align 4
  %ident = alloca [16 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_32 = alloca [8 x i8], align 4
  %_22 = alloca [8 x i8], align 4
  %_21 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %_10 = alloca [2 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %len = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1997, !DIExpression(), !2028)
    #dbg_declare(ptr %len, !2000, !DIExpression(), !2029)
    #dbg_declare(ptr %ident, !2024, !DIExpression(), !2030)
; call rustc_demangle::v0::Parser::eat
  %is_punycode = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E(ptr align 4 %self, i8 117) #13, !dbg !2031
  %0 = zext i1 %is_punycode to i8, !dbg !2031
  store i8 %0, ptr %is_punycode.dbg.spill, align 1, !dbg !2031
    #dbg_declare(ptr %is_punycode.dbg.spill, !1998, !DIExpression(), !2032)
; call rustc_demangle::v0::Parser::digit_10
  %1 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser8digit_1017h4b0363688e4a0269E(ptr align 4 %self) #13, !dbg !2033
  %_5.0 = extractvalue { i1, i8 } %1, 0, !dbg !2033
  %_5.1 = extractvalue { i1, i8 } %1, 1, !dbg !2033
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %2 = call { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb265c32027c10ef6E"(i1 zeroext %_5.0, i8 %_5.1) #13, !dbg !2034
  %3 = extractvalue { i1, i8 } %2, 0, !dbg !2034
  %4 = extractvalue { i1, i8 } %2, 1, !dbg !2034
  %5 = zext i1 %3 to i8, !dbg !2034
  store i8 %5, ptr %_4, align 1, !dbg !2034
  %6 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !2034
  store i8 %4, ptr %6, align 1, !dbg !2034
  %7 = load i8, ptr %_4, align 1, !dbg !2034
  %8 = trunc nuw i8 %7 to i1, !dbg !2034
  %9 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !2034
  %10 = load i8, ptr %9, align 1, !dbg !2034
  %_6 = zext i1 %8 to i32, !dbg !2034
  %11 = trunc nuw i32 %_6 to i1, !dbg !2034
  br i1 %11, label %bb6, label %bb5, !dbg !2034

bb6:                                              ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !2035
  %13 = load i8, ptr %12, align 1, !dbg !2035
  %residual12 = trunc nuw i8 %13 to i1, !dbg !2035
  %14 = zext i1 %residual12 to i8, !dbg !2035
  store i8 %14, ptr %residual.dbg.spill13, align 1, !dbg !2035
    #dbg_declare(ptr %residual.dbg.spill13, !2002, !DIExpression(), !2036)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc3d3462676cac45eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual12, ptr align 4 @alloc_e575bdd5c6bec11f6490c1d4bd94e4eb) #13, !dbg !2037
  br label %bb44, !dbg !2037

bb5:                                              ; preds = %start
  %15 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !2034
  %val = load i8, ptr %15, align 1, !dbg !2034
  store i8 %val, ptr %val.dbg.spill, align 1, !dbg !2034
    #dbg_declare(ptr %val.dbg.spill, !2004, !DIExpression(), !2038)
  %16 = zext i8 %val to i32, !dbg !2034
  store i32 %16, ptr %len, align 4, !dbg !2034
  %_9 = load i32, ptr %len, align 4, !dbg !2039
  %17 = icmp eq i32 %_9, 0, !dbg !2039
  br i1 %17, label %bb20, label %bb7, !dbg !2039

bb20:                                             ; preds = %bb7, %bb5
; call rustc_demangle::v0::Parser::eat
  %_30 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E(ptr align 4 %self, i8 95) #13, !dbg !2040
  %18 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2041
  %start7 = load i32, ptr %18, align 4, !dbg !2041
  store i32 %start7, ptr %start.dbg.spill, align 4, !dbg !2041
    #dbg_declare(ptr %start.dbg.spill, !2016, !DIExpression(), !2042)
  %19 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2043
  %_35 = load i32, ptr %19, align 4, !dbg !2043
  %_36 = load i32, ptr %len, align 4, !dbg !2044
; call core::num::<impl usize>::checked_add
  %20 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %_35, i32 %_36) #13, !dbg !2045
  %_34.0 = extractvalue { i32, i32 } %20, 0, !dbg !2045
  %_34.1 = extractvalue { i32, i32 } %20, 1, !dbg !2045
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h00599f24bf071ae6E"(ptr sret([8 x i8]) align 4 %_33, i32 %_34.0, i32 %_34.1, i1 zeroext false) #13, !dbg !2046
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h966c9f231d7bc266E"(ptr sret([8 x i8]) align 4 %_32, ptr align 4 %_33) #13, !dbg !2043
  %21 = load i8, ptr %_32, align 4, !dbg !2043
  %22 = trunc nuw i8 %21 to i1, !dbg !2043
  %_38 = zext i1 %22 to i32, !dbg !2043
  %23 = trunc nuw i32 %_38 to i1, !dbg !2043
  br i1 %23, label %bb26, label %bb25, !dbg !2043

bb7:                                              ; preds = %bb18, %bb5
; call rustc_demangle::v0::Parser::digit_10
  %24 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser8digit_1017h4b0363688e4a0269E(ptr align 4 %self) #13, !dbg !2047
  %25 = extractvalue { i1, i8 } %24, 0, !dbg !2047
  %26 = extractvalue { i1, i8 } %24, 1, !dbg !2047
  %27 = zext i1 %25 to i8, !dbg !2047
  store i8 %27, ptr %_10, align 1, !dbg !2047
  %28 = getelementptr inbounds i8, ptr %_10, i32 1, !dbg !2047
  store i8 %26, ptr %28, align 1, !dbg !2047
  %29 = load i8, ptr %_10, align 1, !dbg !2048
  %30 = trunc nuw i8 %29 to i1, !dbg !2048
  %31 = getelementptr inbounds i8, ptr %_10, i32 1, !dbg !2048
  %32 = load i8, ptr %31, align 1, !dbg !2048
  %_11 = zext i1 %30 to i32, !dbg !2048
  %33 = trunc nuw i32 %_11 to i1, !dbg !2049
  br i1 %33, label %bb20, label %bb9, !dbg !2049

bb9:                                              ; preds = %bb7
  %34 = getelementptr inbounds i8, ptr %_10, i32 1, !dbg !2050
  %d = load i8, ptr %34, align 1, !dbg !2050
  store i8 %d, ptr %d.dbg.spill, align 1, !dbg !2050
    #dbg_declare(ptr %d.dbg.spill, !2006, !DIExpression(), !2050)
  %_16 = load i32, ptr %len, align 4, !dbg !2051
; call core::num::<impl usize>::checked_mul
  %35 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %_16, i32 10) #13, !dbg !2052
  %_15.0 = extractvalue { i32, i32 } %35, 0, !dbg !2052
  %_15.1 = extractvalue { i32, i32 } %35, 1, !dbg !2052
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h00599f24bf071ae6E"(ptr sret([8 x i8]) align 4 %_14, i32 %_15.0, i32 %_15.1, i1 zeroext false) #13, !dbg !2053
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h966c9f231d7bc266E"(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %_14) #13, !dbg !2051
  %36 = load i8, ptr %_13, align 4, !dbg !2051
  %37 = trunc nuw i8 %36 to i1, !dbg !2051
  %_18 = zext i1 %37 to i32, !dbg !2051
  %38 = trunc nuw i32 %_18 to i1, !dbg !2051
  br i1 %38, label %bb14, label %bb13, !dbg !2051

bb14:                                             ; preds = %bb9
  %39 = getelementptr inbounds i8, ptr %_13, i32 1, !dbg !2054
  %40 = load i8, ptr %39, align 1, !dbg !2054
  %residual5 = trunc nuw i8 %40 to i1, !dbg !2054
  %41 = zext i1 %residual5 to i8, !dbg !2054
  store i8 %41, ptr %residual.dbg.spill6, align 1, !dbg !2054
    #dbg_declare(ptr %residual.dbg.spill6, !2008, !DIExpression(), !2055)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc3d3462676cac45eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual5, ptr align 4 @alloc_5e259e0fc55d934750ee24d947e4bcc3) #13, !dbg !2056
  br label %bb44, !dbg !2056

bb13:                                             ; preds = %bb9
  %42 = getelementptr inbounds i8, ptr %_13, i32 4, !dbg !2051
  %val1 = load i32, ptr %42, align 4, !dbg !2051
  store i32 %val1, ptr %val.dbg.spill2, align 4, !dbg !2051
    #dbg_declare(ptr %val.dbg.spill2, !2010, !DIExpression(), !2057)
  store i32 %val1, ptr %len, align 4, !dbg !2058
  %_24 = load i32, ptr %len, align 4, !dbg !2059
  %_25 = zext i8 %d to i32, !dbg !2060
; call core::num::<impl usize>::checked_add
  %43 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %_24, i32 %_25) #13, !dbg !2061
  %_23.0 = extractvalue { i32, i32 } %43, 0, !dbg !2061
  %_23.1 = extractvalue { i32, i32 } %43, 1, !dbg !2061
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h00599f24bf071ae6E"(ptr sret([8 x i8]) align 4 %_22, i32 %_23.0, i32 %_23.1, i1 zeroext false) #13, !dbg !2062
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h966c9f231d7bc266E"(ptr sret([8 x i8]) align 4 %_21, ptr align 4 %_22) #13, !dbg !2059
  %44 = load i8, ptr %_21, align 4, !dbg !2059
  %45 = trunc nuw i8 %44 to i1, !dbg !2059
  %_27 = zext i1 %45 to i32, !dbg !2059
  %46 = trunc nuw i32 %_27 to i1, !dbg !2059
  br i1 %46, label %bb19, label %bb18, !dbg !2059

bb19:                                             ; preds = %bb13
  %47 = getelementptr inbounds i8, ptr %_21, i32 1, !dbg !2063
  %48 = load i8, ptr %47, align 1, !dbg !2063
  %residual = trunc nuw i8 %48 to i1, !dbg !2063
  %49 = zext i1 %residual to i8, !dbg !2063
  store i8 %49, ptr %residual.dbg.spill, align 1, !dbg !2063
    #dbg_declare(ptr %residual.dbg.spill, !2012, !DIExpression(), !2064)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc3d3462676cac45eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 @alloc_b67380bedda037387a226b345135a42c) #13, !dbg !2065
  br label %bb44, !dbg !2065

bb18:                                             ; preds = %bb13
  %50 = getelementptr inbounds i8, ptr %_21, i32 4, !dbg !2059
  %val3 = load i32, ptr %50, align 4, !dbg !2059
  store i32 %val3, ptr %val.dbg.spill4, align 4, !dbg !2059
    #dbg_declare(ptr %val.dbg.spill4, !2014, !DIExpression(), !2066)
  store i32 %val3, ptr %len, align 4, !dbg !2067
  br label %bb7, !dbg !2068

bb44:                                             ; preds = %bb6, %bb26, %bb28, %bb41, %bb42, %bb43, %bb14, %bb19
  ret void, !dbg !2069

bb26:                                             ; preds = %bb20
  %51 = getelementptr inbounds i8, ptr %_32, i32 1, !dbg !2070
  %52 = load i8, ptr %51, align 1, !dbg !2070
  %residual10 = trunc nuw i8 %52 to i1, !dbg !2070
  %53 = zext i1 %residual10 to i8, !dbg !2070
  store i8 %53, ptr %residual.dbg.spill11, align 1, !dbg !2070
    #dbg_declare(ptr %residual.dbg.spill11, !2018, !DIExpression(), !2071)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc3d3462676cac45eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual10, ptr align 4 @alloc_31334d7cdeaa52179ee6c9c79552f6e2) #13, !dbg !2072
  br label %bb44, !dbg !2072

bb25:                                             ; preds = %bb20
  %54 = getelementptr inbounds i8, ptr %_32, i32 4, !dbg !2043
  %val8 = load i32, ptr %54, align 4, !dbg !2043
  store i32 %val8, ptr %val.dbg.spill9, align 4, !dbg !2043
    #dbg_declare(ptr %val.dbg.spill9, !2020, !DIExpression(), !2073)
  %55 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2074
  store i32 %val8, ptr %55, align 4, !dbg !2074
  %56 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2075
  %_42 = load i32, ptr %56, align 4, !dbg !2075
  %_66.0 = load ptr, ptr %self, align 4, !dbg !2076
  %57 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2076
  %_66.1 = load i32, ptr %57, align 4, !dbg !2076
; call core::str::<impl str>::len
  %_43 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %_66.0, i32 %_66.1) #13, !dbg !2077
  %_41 = icmp ugt i32 %_42, %_43, !dbg !2075
  br i1 %_41, label %bb28, label %bb29, !dbg !2075

bb29:                                             ; preds = %bb25
  %_67.0 = load ptr, ptr %self, align 4, !dbg !2078
  %58 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2078
  %_67.1 = load i32, ptr %58, align 4, !dbg !2078
  %59 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2079
  %_47 = load i32, ptr %59, align 4, !dbg !2079
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %60 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h5f4fd688f129b44dE"(ptr align 1 %_67.0, i32 %_67.1, i32 %start7, i32 %_47, ptr align 4 @alloc_5d3e43de02ec01485265958ac66de46e) #13, !dbg !2080
  %ident.0 = extractvalue { ptr, i32 } %60, 0, !dbg !2080
  %ident.1 = extractvalue { ptr, i32 } %60, 1, !dbg !2080
  store ptr %ident.0, ptr %ident.dbg.spill, align 4, !dbg !2080
  %61 = getelementptr inbounds i8, ptr %ident.dbg.spill, i32 4, !dbg !2080
  store i32 %ident.1, ptr %61, align 4, !dbg !2080
    #dbg_declare(ptr %ident.dbg.spill, !2022, !DIExpression(), !2081)
  br i1 %is_punycode, label %bb31, label %bb43, !dbg !2082

bb28:                                             ; preds = %bb25
  %62 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2083
  store i8 0, ptr %62, align 4, !dbg !2083
  store ptr null, ptr %_0, align 4, !dbg !2083
  br label %bb44, !dbg !2084

bb43:                                             ; preds = %bb29
  store ptr %ident.0, ptr %_64, align 4, !dbg !2086
  %63 = getelementptr inbounds i8, ptr %_64, i32 4, !dbg !2086
  store i32 %ident.1, ptr %63, align 4, !dbg !2086
  %64 = getelementptr inbounds i8, ptr %_64, i32 8, !dbg !2086
  store ptr inttoptr (i32 1 to ptr), ptr %64, align 4, !dbg !2086
  %65 = getelementptr inbounds i8, ptr %64, i32 4, !dbg !2086
  store i32 0, ptr %65, align 4, !dbg !2086
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_64, i32 16, i1 false), !dbg !2087
  br label %bb44, !dbg !2088

bb31:                                             ; preds = %bb29
; call core::str::<impl str>::bytes
  %66 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hee061ce74cf188a3E"(ptr align 1 %ident.0, i32 %ident.1) #13, !dbg !2089
  %67 = extractvalue { ptr, ptr } %66, 0, !dbg !2089
  %68 = extractvalue { ptr, ptr } %66, 1, !dbg !2089
  store ptr %67, ptr %_51, align 4, !dbg !2089
  %69 = getelementptr inbounds i8, ptr %_51, i32 4, !dbg !2089
  store ptr %68, ptr %69, align 4, !dbg !2089
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::rposition
  %70 = call { i32, i32 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9rposition17hc3e37590b7f78529E"(ptr align 4 %_51) #13, !dbg !2090
  %71 = extractvalue { i32, i32 } %70, 0, !dbg !2090
  %72 = extractvalue { i32, i32 } %70, 1, !dbg !2090
  store i32 %71, ptr %_49, align 4, !dbg !2090
  %73 = getelementptr inbounds i8, ptr %_49, i32 4, !dbg !2090
  store i32 %72, ptr %73, align 4, !dbg !2090
  %_52 = load i32, ptr %_49, align 4, !dbg !2091
  %74 = getelementptr inbounds i8, ptr %_49, i32 4, !dbg !2091
  %75 = load i32, ptr %74, align 4, !dbg !2091
  %76 = trunc nuw i32 %_52 to i1, !dbg !2092
  br i1 %76, label %bb35, label %bb34, !dbg !2092

bb35:                                             ; preds = %bb31
  %77 = getelementptr inbounds i8, ptr %_49, i32 4, !dbg !2093
  %i = load i32, ptr %77, align 4, !dbg !2093
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !2093
    #dbg_declare(ptr %i.dbg.spill, !2026, !DIExpression(), !2094)
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %78 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1 %ident.0, i32 %ident.1, i32 %i, ptr align 4 @alloc_175a088d119ab02df6667ba439d90252) #13, !dbg !2095
  %_54.0 = extractvalue { ptr, i32 } %78, 0, !dbg !2095
  %_54.1 = extractvalue { ptr, i32 } %78, 1, !dbg !2095
  %_59.0 = add i32 %i, 1, !dbg !2096
  %_59.1 = icmp ult i32 %_59.0, %i, !dbg !2096
  br i1 %_59.1, label %panic, label %bb37, !dbg !2096

bb34:                                             ; preds = %bb31
  store ptr inttoptr (i32 1 to ptr), ptr %ident, align 4, !dbg !2097
  %79 = getelementptr inbounds i8, ptr %ident, i32 4, !dbg !2097
  store i32 0, ptr %79, align 4, !dbg !2097
  %80 = getelementptr inbounds i8, ptr %ident, i32 8, !dbg !2097
  store ptr %ident.0, ptr %80, align 4, !dbg !2097
  %81 = getelementptr inbounds i8, ptr %80, i32 4, !dbg !2097
  store i32 %ident.1, ptr %81, align 4, !dbg !2097
  br label %bb39, !dbg !2098

bb39:                                             ; preds = %bb37, %bb34
  %82 = getelementptr inbounds i8, ptr %ident, i32 8, !dbg !2099
  %_68.0 = load ptr, ptr %82, align 4, !dbg !2099
  %83 = getelementptr inbounds i8, ptr %82, i32 4, !dbg !2099
  %_68.1 = load i32, ptr %83, align 4, !dbg !2099
; call core::str::<impl str>::is_empty
  %_61 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_68.0, i32 %_68.1) #13, !dbg !2100
  br i1 %_61, label %bb41, label %bb42, !dbg !2099

bb37:                                             ; preds = %bb35
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %84 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %ident.0, i32 %ident.1, i32 %_59.0, ptr align 4 @alloc_b2950cfc22f1747437ffec4d94e0e53f) #13, !dbg !2101
  %_56.0 = extractvalue { ptr, i32 } %84, 0, !dbg !2101
  %_56.1 = extractvalue { ptr, i32 } %84, 1, !dbg !2101
  store ptr %_54.0, ptr %ident, align 4, !dbg !2102
  %85 = getelementptr inbounds i8, ptr %ident, i32 4, !dbg !2102
  store i32 %_54.1, ptr %85, align 4, !dbg !2102
  %86 = getelementptr inbounds i8, ptr %ident, i32 8, !dbg !2102
  store ptr %_56.0, ptr %86, align 4, !dbg !2102
  %87 = getelementptr inbounds i8, ptr %86, i32 4, !dbg !2102
  store i32 %_56.1, ptr %87, align 4, !dbg !2102
  br label %bb39, !dbg !2103

panic:                                            ; preds = %bb35
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_f2e61f5145997223714a4864f16641de) #14, !dbg !2096
  unreachable, !dbg !2096

bb42:                                             ; preds = %bb39
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_63, ptr align 4 %ident, i32 16, i1 false), !dbg !2104
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_63, i32 16, i1 false), !dbg !2105
  br label %bb44, !dbg !2088

bb41:                                             ; preds = %bb39
  %88 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2106
  store i8 0, ptr %88, align 4, !dbg !2106
  store ptr null, ptr %_0, align 4, !dbg !2106
  br label %bb44, !dbg !2084

bb4:                                              ; No predecessors!
  unreachable, !dbg !2107
}

; rustc_demangle::v0::Parser::ident::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v06Parser5ident28_$u7b$$u7b$closure$u7d$$u7d$17h8359baebc66a01c7E"(ptr align 1 %_1, i8 %b) unnamed_addr #0 !dbg !2109 {
start:
  %b.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2115, !DIExpression(), !2116)
  store i8 %b, ptr %b.dbg.spill, align 1
    #dbg_declare(ptr %b.dbg.spill, !2114, !DIExpression(), !2117)
  %_0 = icmp eq i8 %b, 95, !dbg !2118
  ret i1 %_0, !dbg !2119
}

; rustc_demangle::v0::Parser::backref
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser7backref17h9112f87c50388295E(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !2120 {
start:
  %residual.dbg.spill2 = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %i.dbg.spill = alloca [8 x i8], align 8
  %s_start.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_21 = alloca [16 x i8], align 4
  %_16 = alloca [1 x i8], align 1
  %new_parser = alloca [16 x i8], align 4
  %_6 = alloca [16 x i8], align 8
  %_5 = alloca [16 x i8], align 8
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2140, !DIExpression(), !2155)
    #dbg_declare(ptr %new_parser, !2149, !DIExpression(), !2156)
    #dbg_declare(ptr %val.dbg.spill, !2153, !DIExpression(), !2157)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2158
  %_3 = load i32, ptr %0, align 4, !dbg !2158
  %_4.0 = sub i32 %_3, 1, !dbg !2158
  %_4.1 = icmp ult i32 %_3, 1, !dbg !2158
  br i1 %_4.1, label %panic, label %bb1, !dbg !2158

bb1:                                              ; preds = %start
  store i32 %_4.0, ptr %s_start.dbg.spill, align 4, !dbg !2158
    #dbg_declare(ptr %s_start.dbg.spill, !2141, !DIExpression(), !2159)
; call rustc_demangle::v0::Parser::integer_62
  call void @_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE(ptr sret([16 x i8]) align 8 %_6, ptr align 4 %self) #13, !dbg !2160
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9c3d6ae00637452fE"(ptr sret([16 x i8]) align 8 %_5, ptr align 8 %_6) #13, !dbg !2161
  %1 = load i8, ptr %_5, align 8, !dbg !2161
  %2 = trunc nuw i8 %1 to i1, !dbg !2161
  %_7 = zext i1 %2 to i32, !dbg !2161
  %3 = trunc nuw i32 %_7 to i1, !dbg !2161
  br i1 %3, label %bb6, label %bb5, !dbg !2161

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_bf2df0f15f80b9f712506d45e1395456) #14, !dbg !2158
  unreachable, !dbg !2158

bb6:                                              ; preds = %bb1
  %4 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !2162
  %5 = load i8, ptr %4, align 1, !dbg !2162
  %residual1 = trunc nuw i8 %5 to i1, !dbg !2162
  %6 = zext i1 %residual1 to i8, !dbg !2162
  store i8 %6, ptr %residual.dbg.spill2, align 1, !dbg !2162
    #dbg_declare(ptr %residual.dbg.spill2, !2145, !DIExpression(), !2163)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7dcb1b3996f19a6eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual1, ptr align 4 @alloc_987e8324c0ba73fbd49d914321104f99) #13, !dbg !2164
  br label %bb13, !dbg !2164

bb5:                                              ; preds = %bb1
  %7 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !2161
  %i = load i64, ptr %7, align 8, !dbg !2161
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !2161
    #dbg_declare(ptr %i.dbg.spill, !2143, !DIExpression(), !2165)
    #dbg_declare(ptr %i.dbg.spill, !2147, !DIExpression(), !2166)
  %_11 = zext i32 %_4.0 to i64, !dbg !2167
  %_10 = icmp uge i64 %i, %_11, !dbg !2168
  br i1 %_10, label %bb7, label %bb8, !dbg !2168

bb8:                                              ; preds = %bb5
  %_22.0 = load ptr, ptr %self, align 4, !dbg !2169
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2169
  %_22.1 = load i32, ptr %8, align 4, !dbg !2169
  %_14 = trunc i64 %i to i32, !dbg !2170
  %9 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !2171
  %_15 = load i32, ptr %9, align 4, !dbg !2171
  store ptr %_22.0, ptr %new_parser, align 4, !dbg !2172
  %10 = getelementptr inbounds i8, ptr %new_parser, i32 4, !dbg !2172
  store i32 %_22.1, ptr %10, align 4, !dbg !2172
  %11 = getelementptr inbounds i8, ptr %new_parser, i32 8, !dbg !2172
  store i32 %_14, ptr %11, align 4, !dbg !2172
  %12 = getelementptr inbounds i8, ptr %new_parser, i32 12, !dbg !2172
  store i32 %_15, ptr %12, align 4, !dbg !2172
; call rustc_demangle::v0::Parser::push_depth
  %_17 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE(ptr align 4 %new_parser) #13, !dbg !2173
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %13 = call i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c277fdd97e17c06E"(i8 %_17) #13, !dbg !2174
  store i8 %13, ptr %_16, align 1, !dbg !2174
  %14 = load i8, ptr %_16, align 1, !dbg !2174
  %15 = icmp eq i8 %14, 2, !dbg !2174
  %_19 = select i1 %15, i32 0, i32 1, !dbg !2174
  %16 = trunc nuw i32 %_19 to i1, !dbg !2174
  br i1 %16, label %bb12, label %bb11, !dbg !2174

bb7:                                              ; preds = %bb5
  %17 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2175
  store i8 0, ptr %17, align 4, !dbg !2175
  store ptr null, ptr %_0, align 4, !dbg !2175
  br label %bb13, !dbg !2176

bb12:                                             ; preds = %bb8
  %18 = load i8, ptr %_16, align 1, !dbg !2178
  %residual = trunc nuw i8 %18 to i1, !dbg !2178
  %19 = zext i1 %residual to i8, !dbg !2178
  store i8 %19, ptr %residual.dbg.spill, align 1, !dbg !2178
    #dbg_declare(ptr %residual.dbg.spill, !2151, !DIExpression(), !2179)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7dcb1b3996f19a6eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 @alloc_447337713f7ab41fb0e7b9219a8323e2) #13, !dbg !2180
  br label %bb13, !dbg !2180

bb11:                                             ; preds = %bb8
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_21, ptr align 4 %new_parser, i32 16, i1 false), !dbg !2181
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_21, i32 16, i1 false), !dbg !2182
  br label %bb13, !dbg !2183

bb13:                                             ; preds = %bb6, %bb7, %bb12, %bb11
  ret void, !dbg !2183

bb4:                                              ; No predecessors!
  unreachable, !dbg !2184
}

; rustc_demangle::v0::Parser::digit_10
; Function Attrs: nounwind
define internal { i1, i8 } @_ZN14rustc_demangle2v06Parser8digit_1017h4b0363688e4a0269E(ptr align 4 %self) unnamed_addr #1 !dbg !2186 {
start:
  %d.dbg.spill1 = alloca [1 x i8], align 1
  %d.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2189, !DIExpression(), !2194)
; call rustc_demangle::v0::Parser::peek
  %0 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4peek17h3a50a27221fc9b1eE(ptr align 4 %self) #13, !dbg !2195
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !2195
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !2195
  %3 = zext i1 %1 to i8, !dbg !2195
  store i8 %3, ptr %_3, align 1, !dbg !2195
  %4 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2195
  store i8 %2, ptr %4, align 1, !dbg !2195
  %5 = load i8, ptr %_3, align 1, !dbg !2196
  %6 = trunc nuw i8 %5 to i1, !dbg !2196
  %7 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2196
  %8 = load i8, ptr %7, align 1, !dbg !2196
  %_7 = zext i1 %6 to i32, !dbg !2196
  %9 = trunc nuw i32 %_7 to i1, !dbg !2197
  br i1 %9, label %bb3, label %bb2, !dbg !2197

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2198
  %11 = load i8, ptr %10, align 1, !dbg !2198
  %_5 = icmp ule i8 48, %11, !dbg !2198
  br i1 %_5, label %bb5, label %bb2, !dbg !2198

bb2:                                              ; preds = %bb5, %bb3, %start
  %12 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2199
  store i8 0, ptr %12, align 1, !dbg !2199
  store i8 1, ptr %_0, align 1, !dbg !2199
  br label %bb8, !dbg !2200

bb5:                                              ; preds = %bb3
  %13 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2198
  %14 = load i8, ptr %13, align 1, !dbg !2198
  %_6 = icmp ule i8 %14, 57, !dbg !2198
  br i1 %_6, label %bb4, label %bb2, !dbg !2198

bb4:                                              ; preds = %bb5
  %15 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2201
  %d = load i8, ptr %15, align 1, !dbg !2201
  store i8 %d, ptr %d.dbg.spill, align 1, !dbg !2201
    #dbg_declare(ptr %d.dbg.spill, !2192, !DIExpression(), !2202)
  %_9.0 = sub i8 %d, 48, !dbg !2203
  %_9.1 = icmp ult i8 %d, 48, !dbg !2203
  br i1 %_9.1, label %panic, label %bb6, !dbg !2203

bb6:                                              ; preds = %bb4
  store i8 %_9.0, ptr %d.dbg.spill1, align 1, !dbg !2203
    #dbg_declare(ptr %d.dbg.spill1, !2190, !DIExpression(), !2204)
  %16 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2205
  %17 = load i32, ptr %16, align 4, !dbg !2205
  %_11.0 = add i32 %17, 1, !dbg !2205
  %_11.1 = icmp ult i32 %_11.0, %17, !dbg !2205
  br i1 %_11.1, label %panic2, label %bb7, !dbg !2205

panic:                                            ; preds = %bb4
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_75a9845cab15a1b5d70884eeb1a2ba2d) #14, !dbg !2203
  unreachable, !dbg !2203

bb7:                                              ; preds = %bb6
  %18 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2205
  store i32 %_11.0, ptr %18, align 4, !dbg !2205
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2206
  store i8 %_9.0, ptr %19, align 1, !dbg !2206
  store i8 0, ptr %_0, align 1, !dbg !2206
  br label %bb8, !dbg !2200

panic2:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_82f375a89e7d4c925c1f4f75eb65939c) #14, !dbg !2205
  unreachable, !dbg !2205

bb8:                                              ; preds = %bb2, %bb7
  %20 = load i8, ptr %_0, align 1, !dbg !2200
  %21 = trunc nuw i8 %20 to i1, !dbg !2200
  %22 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2200
  %23 = load i8, ptr %22, align 1, !dbg !2200
  %24 = insertvalue { i1, i8 } poison, i1 %21, 0, !dbg !2200
  %25 = insertvalue { i1, i8 } %24, i8 %23, 1, !dbg !2200
  ret { i1, i8 } %25, !dbg !2200

bb9:                                              ; No predecessors!
  unreachable, !dbg !2207
}

; rustc_demangle::v0::Parser::digit_62
; Function Attrs: nounwind
define internal { i1, i8 } @_ZN14rustc_demangle2v06Parser8digit_6217hab58233d9a93a2f5E(ptr align 4 %self) unnamed_addr #1 !dbg !2208 {
start:
  %d.dbg.spill8 = alloca [1 x i8], align 1
  %d.dbg.spill4 = alloca [1 x i8], align 1
  %d.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [2 x i8], align 1
  %d = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2211, !DIExpression(), !2220)
    #dbg_declare(ptr %d, !2212, !DIExpression(), !2221)
; call rustc_demangle::v0::Parser::peek
  %0 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4peek17h3a50a27221fc9b1eE(ptr align 4 %self) #13, !dbg !2222
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !2222
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !2222
  %3 = zext i1 %1 to i8, !dbg !2222
  store i8 %3, ptr %_3, align 1, !dbg !2222
  %4 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2222
  store i8 %2, ptr %4, align 1, !dbg !2222
  %5 = load i8, ptr %_3, align 1, !dbg !2223
  %6 = trunc nuw i8 %5 to i1, !dbg !2223
  %7 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2223
  %8 = load i8, ptr %7, align 1, !dbg !2223
  %_11 = zext i1 %6 to i32, !dbg !2223
  %9 = trunc nuw i32 %_11 to i1, !dbg !2224
  br i1 %9, label %bb3, label %bb2, !dbg !2224

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2225
  %11 = load i8, ptr %10, align 1, !dbg !2225
  %_9 = icmp ule i8 48, %11, !dbg !2225
  br i1 %_9, label %bb11, label %bb5, !dbg !2225

bb2:                                              ; preds = %bb9, %bb7, %start
  %12 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2226
  store i8 0, ptr %12, align 1, !dbg !2226
  store i8 1, ptr %_0, align 1, !dbg !2226
  br label %bb20, !dbg !2227

bb5:                                              ; preds = %bb11, %bb3
  %13 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2228
  %14 = load i8, ptr %13, align 1, !dbg !2228
  %_7 = icmp ule i8 97, %14, !dbg !2228
  br i1 %_7, label %bb10, label %bb7, !dbg !2228

bb11:                                             ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2225
  %16 = load i8, ptr %15, align 1, !dbg !2225
  %_10 = icmp ule i8 %16, 57, !dbg !2225
  br i1 %_10, label %bb4, label %bb5, !dbg !2225

bb4:                                              ; preds = %bb11
  %17 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2229
  %d7 = load i8, ptr %17, align 1, !dbg !2229
  store i8 %d7, ptr %d.dbg.spill8, align 1, !dbg !2229
    #dbg_declare(ptr %d.dbg.spill8, !2214, !DIExpression(), !2230)
  %_13.0 = sub i8 %d7, 48, !dbg !2231
  %_13.1 = icmp ult i8 %d7, 48, !dbg !2231
  br i1 %_13.1, label %panic9, label %bb12, !dbg !2231

bb7:                                              ; preds = %bb10, %bb5
  %18 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2232
  %19 = load i8, ptr %18, align 1, !dbg !2232
  %_5 = icmp ule i8 65, %19, !dbg !2232
  br i1 %_5, label %bb9, label %bb2, !dbg !2232

bb10:                                             ; preds = %bb5
  %20 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2228
  %21 = load i8, ptr %20, align 1, !dbg !2228
  %_8 = icmp ule i8 %21, 122, !dbg !2228
  br i1 %_8, label %bb6, label %bb7, !dbg !2228

bb6:                                              ; preds = %bb10
  %22 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2233
  %d3 = load i8, ptr %22, align 1, !dbg !2233
  store i8 %d3, ptr %d.dbg.spill4, align 1, !dbg !2233
    #dbg_declare(ptr %d.dbg.spill4, !2216, !DIExpression(), !2234)
  %_16.0 = sub i8 %d3, 97, !dbg !2235
  %_16.1 = icmp ult i8 %d3, 97, !dbg !2235
  br i1 %_16.1, label %panic5, label %bb13, !dbg !2235

bb9:                                              ; preds = %bb7
  %23 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2232
  %24 = load i8, ptr %23, align 1, !dbg !2232
  %_6 = icmp ule i8 %24, 90, !dbg !2232
  br i1 %_6, label %bb8, label %bb2, !dbg !2232

bb8:                                              ; preds = %bb9
  %25 = getelementptr inbounds i8, ptr %_3, i32 1, !dbg !2236
  %d1 = load i8, ptr %25, align 1, !dbg !2236
  store i8 %d1, ptr %d.dbg.spill, align 1, !dbg !2236
    #dbg_declare(ptr %d.dbg.spill, !2218, !DIExpression(), !2237)
  %_22.0 = sub i8 %d1, 65, !dbg !2238
  %_22.1 = icmp ult i8 %d1, 65, !dbg !2238
  br i1 %_22.1, label %panic, label %bb16, !dbg !2238

bb16:                                             ; preds = %bb8
  %_23.0 = add i8 36, %_22.0, !dbg !2239
  %_23.1 = icmp ult i8 %_23.0, 36, !dbg !2239
  br i1 %_23.1, label %panic2, label %bb17, !dbg !2239

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_466f394e66e03cb7583a5f8755e00678) #14, !dbg !2238
  unreachable, !dbg !2238

bb17:                                             ; preds = %bb16
  store i8 %_23.0, ptr %d, align 1, !dbg !2239
  br label %bb18, !dbg !2240

panic2:                                           ; preds = %bb16
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_ff2d37d27acf56b58ac4a5ca9eac51f2) #14, !dbg !2239
  unreachable, !dbg !2239

bb18:                                             ; preds = %bb12, %bb14, %bb17
  %26 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2241
  %27 = load i32, ptr %26, align 4, !dbg !2241
  %_25.0 = add i32 %27, 1, !dbg !2241
  %_25.1 = icmp ult i32 %_25.0, %27, !dbg !2241
  br i1 %_25.1, label %panic10, label %bb19, !dbg !2241

bb13:                                             ; preds = %bb6
  %_17.0 = add i8 10, %_16.0, !dbg !2242
  %_17.1 = icmp ult i8 %_17.0, 10, !dbg !2242
  br i1 %_17.1, label %panic6, label %bb14, !dbg !2242

panic5:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_dc7adc2ce9e6a8eb0c71da5792843253) #14, !dbg !2235
  unreachable, !dbg !2235

bb14:                                             ; preds = %bb13
  store i8 %_17.0, ptr %d, align 1, !dbg !2242
  br label %bb18, !dbg !2243

panic6:                                           ; preds = %bb13
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_719f39c803faad5001a700972734d43f) #14, !dbg !2242
  unreachable, !dbg !2242

bb12:                                             ; preds = %bb4
  store i8 %_13.0, ptr %d, align 1, !dbg !2231
  br label %bb18, !dbg !2244

panic9:                                           ; preds = %bb4
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_dbf4cce6e77b4b881ded0401366821e9) #14, !dbg !2231
  unreachable, !dbg !2231

bb19:                                             ; preds = %bb18
  %28 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2241
  store i32 %_25.0, ptr %28, align 4, !dbg !2241
  %_26 = load i8, ptr %d, align 1, !dbg !2245
  %29 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2246
  store i8 %_26, ptr %29, align 1, !dbg !2246
  store i8 0, ptr %_0, align 1, !dbg !2246
  br label %bb20, !dbg !2227

panic10:                                          ; preds = %bb18
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_601e27ca32fc72451031a36d355260fd) #14, !dbg !2241
  unreachable, !dbg !2241

bb20:                                             ; preds = %bb2, %bb19
  %30 = load i8, ptr %_0, align 1, !dbg !2227
  %31 = trunc nuw i8 %30 to i1, !dbg !2227
  %32 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2227
  %33 = load i8, ptr %32, align 1, !dbg !2227
  %34 = insertvalue { i1, i8 } poison, i1 %31, 0, !dbg !2227
  %35 = insertvalue { i1, i8 } %34, i8 %33, 1, !dbg !2227
  ret { i1, i8 } %35, !dbg !2227

bb21:                                             ; No predecessors!
  unreachable, !dbg !2247
}

; rustc_demangle::v0::Parser::namespace
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser9namespace17ha9e17375c4f7a2edE(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !2248 {
start:
  %residual.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2268, !DIExpression(), !2275)
; call rustc_demangle::v0::Parser::next
  %0 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) #13, !dbg !2276
  %_3.0 = extractvalue { i1, i8 } %0, 0, !dbg !2276
  %_3.1 = extractvalue { i1, i8 } %0, 1, !dbg !2276
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb265c32027c10ef6E"(i1 zeroext %_3.0, i8 %_3.1) #13, !dbg !2277
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !2277
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !2277
  %4 = zext i1 %2 to i8, !dbg !2277
  store i8 %4, ptr %_2, align 1, !dbg !2277
  %5 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !2277
  store i8 %3, ptr %5, align 1, !dbg !2277
  %6 = load i8, ptr %_2, align 1, !dbg !2277
  %7 = trunc nuw i8 %6 to i1, !dbg !2277
  %8 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !2277
  %9 = load i8, ptr %8, align 1, !dbg !2277
  %_4 = zext i1 %7 to i32, !dbg !2277
  %10 = trunc nuw i32 %_4 to i1, !dbg !2277
  br i1 %10, label %bb5, label %bb4, !dbg !2277

bb5:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !2278
  %12 = load i8, ptr %11, align 1, !dbg !2278
  %residual = trunc nuw i8 %12 to i1, !dbg !2278
  %13 = zext i1 %residual to i8, !dbg !2278
  store i8 %13, ptr %residual.dbg.spill, align 1, !dbg !2278
    #dbg_declare(ptr %residual.dbg.spill, !2269, !DIExpression(), !2279)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3fa62735205e149dE"(ptr sret([8 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 @alloc_a5d3904b1947f085e45069c1e0def9a1) #13, !dbg !2280
  br label %bb12, !dbg !2280

bb4:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_2, i32 1, !dbg !2277
  %val = load i8, ptr %14, align 1, !dbg !2277
  store i8 %val, ptr %val.dbg.spill, align 1, !dbg !2277
    #dbg_declare(ptr %val.dbg.spill, !2271, !DIExpression(), !2281)
    #dbg_declare(ptr %val.dbg.spill, !2273, !DIExpression(), !2282)
  %_9 = icmp ule i8 65, %val, !dbg !2283
  br i1 %_9, label %bb11, label %bb8, !dbg !2283

bb8:                                              ; preds = %bb11, %bb4
  %_7 = icmp ule i8 97, %val, !dbg !2284
  br i1 %_7, label %bb10, label %bb6, !dbg !2284

bb11:                                             ; preds = %bb4
  %_10 = icmp ule i8 %val, 90, !dbg !2283
  br i1 %_10, label %bb7, label %bb8, !dbg !2283

bb7:                                              ; preds = %bb11
  %_12 = zext i8 %val to i32, !dbg !2285
  %15 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2286
  store i32 %_12, ptr %15, align 4, !dbg !2286
  store i8 0, ptr %_0, align 4, !dbg !2286
  br label %bb12, !dbg !2287

bb6:                                              ; preds = %bb10, %bb8
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2288
  store i8 0, ptr %16, align 1, !dbg !2288
  store i8 1, ptr %_0, align 4, !dbg !2288
  br label %bb12, !dbg !2289

bb10:                                             ; preds = %bb8
  %_8 = icmp ule i8 %val, 122, !dbg !2284
  br i1 %_8, label %bb9, label %bb6, !dbg !2284

bb9:                                              ; preds = %bb10
  %17 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2290
  store i32 1114112, ptr %17, align 4, !dbg !2290
  store i8 0, ptr %_0, align 4, !dbg !2290
  br label %bb12, !dbg !2291

bb12:                                             ; preds = %bb5, %bb7, %bb9, %bb6
  ret void, !dbg !2292

bb3:                                              ; No predecessors!
  unreachable, !dbg !2277
}

; rustc_demangle::v0::Parser::pop_depth
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v06Parser9pop_depth17h8a2b94e2ef028f8dE(ptr align 4 %self) unnamed_addr #1 !dbg !2293 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2298, !DIExpression(), !2299)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !2300
  %1 = load i32, ptr %0, align 4, !dbg !2300
  %_2.0 = sub i32 %1, 1, !dbg !2300
  %_2.1 = icmp ult i32 %1, 1, !dbg !2300
  br i1 %_2.1, label %panic, label %bb1, !dbg !2300

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !2300
  store i32 %_2.0, ptr %2, align 4, !dbg !2300
  ret void, !dbg !2301

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_23d18eb1b3a1f2ba6178bdbae8a314cf) #14, !dbg !2300
  unreachable, !dbg !2300
}

; rustc_demangle::v0::Printer::print_path
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext %0) unnamed_addr #1 !dbg !2302 {
start:
  %val.dbg.spill93 = alloca [4 x i8], align 4
  %x.dbg.spill92 = alloca [8 x i8], align 8
  %parser.dbg.spill90 = alloca [4 x i8], align 4
  %ns.dbg.spill = alloca [4 x i8], align 4
  %parser.dbg.spill88 = alloca [4 x i8], align 4
  %dis.dbg.spill = alloca [8 x i8], align 8
  %parser.dbg.spill86 = alloca [4 x i8], align 4
  %parser.dbg.spill85 = alloca [4 x i8], align 4
  %out.dbg.spill = alloca [4 x i8], align 4
  %parser.dbg.spill84 = alloca [4 x i8], align 4
  %x.dbg.spill83 = alloca [8 x i8], align 8
  %parser.dbg.spill82 = alloca [4 x i8], align 4
  %tag.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill81 = alloca [4 x i8], align 4
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill80 = alloca [0 x i8], align 1
  %residual.dbg.spill79 = alloca [0 x i8], align 1
  %val.dbg.spill78 = alloca [0 x i8], align 1
  %residual.dbg.spill77 = alloca [0 x i8], align 1
  %val.dbg.spill76 = alloca [0 x i8], align 1
  %residual.dbg.spill75 = alloca [0 x i8], align 1
  %residual.dbg.spill74 = alloca [0 x i8], align 1
  %val.dbg.spill73 = alloca [0 x i8], align 1
  %residual.dbg.spill72 = alloca [0 x i8], align 1
  %val.dbg.spill71 = alloca [0 x i8], align 1
  %residual.dbg.spill70 = alloca [0 x i8], align 1
  %val.dbg.spill69 = alloca [0 x i8], align 1
  %residual.dbg.spill68 = alloca [0 x i8], align 1
  %val.dbg.spill67 = alloca [0 x i8], align 1
  %residual.dbg.spill66 = alloca [0 x i8], align 1
  %val.dbg.spill65 = alloca [0 x i8], align 1
  %residual.dbg.spill64 = alloca [0 x i8], align 1
  %val.dbg.spill63 = alloca [0 x i8], align 1
  %residual.dbg.spill62 = alloca [0 x i8], align 1
  %val.dbg.spill61 = alloca [0 x i8], align 1
  %residual.dbg.spill60 = alloca [0 x i8], align 1
  %val.dbg.spill59 = alloca [0 x i8], align 1
  %residual.dbg.spill58 = alloca [0 x i8], align 1
  %val.dbg.spill57 = alloca [0 x i8], align 1
  %residual.dbg.spill56 = alloca [0 x i8], align 1
  %val.dbg.spill55 = alloca [0 x i8], align 1
  %residual.dbg.spill54 = alloca [0 x i8], align 1
  %val.dbg.spill53 = alloca [0 x i8], align 1
  %residual.dbg.spill52 = alloca [0 x i8], align 1
  %val.dbg.spill51 = alloca [0 x i8], align 1
  %residual.dbg.spill50 = alloca [0 x i8], align 1
  %val.dbg.spill49 = alloca [0 x i8], align 1
  %residual.dbg.spill48 = alloca [0 x i8], align 1
  %val.dbg.spill47 = alloca [0 x i8], align 1
  %residual.dbg.spill46 = alloca [0 x i8], align 1
  %val.dbg.spill45 = alloca [0 x i8], align 1
  %residual.dbg.spill44 = alloca [0 x i8], align 1
  %val.dbg.spill43 = alloca [0 x i8], align 1
  %residual.dbg.spill42 = alloca [0 x i8], align 1
  %val.dbg.spill41 = alloca [0 x i8], align 1
  %residual.dbg.spill40 = alloca [0 x i8], align 1
  %val.dbg.spill39 = alloca [0 x i8], align 1
  %residual.dbg.spill38 = alloca [0 x i8], align 1
  %val.dbg.spill37 = alloca [0 x i8], align 1
  %residual.dbg.spill36 = alloca [0 x i8], align 1
  %val.dbg.spill35 = alloca [0 x i8], align 1
  %residual.dbg.spill34 = alloca [0 x i8], align 1
  %val.dbg.spill33 = alloca [0 x i8], align 1
  %residual.dbg.spill32 = alloca [0 x i8], align 1
  %val.dbg.spill31 = alloca [0 x i8], align 1
  %residual.dbg.spill30 = alloca [0 x i8], align 1
  %val.dbg.spill29 = alloca [0 x i8], align 1
  %residual.dbg.spill28 = alloca [0 x i8], align 1
  %val.dbg.spill27 = alloca [0 x i8], align 1
  %residual.dbg.spill26 = alloca [0 x i8], align 1
  %val.dbg.spill25 = alloca [0 x i8], align 1
  %residual.dbg.spill24 = alloca [0 x i8], align 1
  %val.dbg.spill23 = alloca [0 x i8], align 1
  %residual.dbg.spill22 = alloca [0 x i8], align 1
  %val.dbg.spill21 = alloca [0 x i8], align 1
  %residual.dbg.spill20 = alloca [0 x i8], align 1
  %val.dbg.spill19 = alloca [0 x i8], align 1
  %residual.dbg.spill18 = alloca [0 x i8], align 1
  %val.dbg.spill17 = alloca [0 x i8], align 1
  %residual.dbg.spill16 = alloca [0 x i8], align 1
  %val.dbg.spill15 = alloca [0 x i8], align 1
  %residual.dbg.spill14 = alloca [0 x i8], align 1
  %val.dbg.spill13 = alloca [0 x i8], align 1
  %residual.dbg.spill12 = alloca [0 x i8], align 1
  %val.dbg.spill11 = alloca [0 x i8], align 1
  %residual.dbg.spill10 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %x.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_210 = alloca [16 x i8], align 4
  %err9 = alloca [1 x i8], align 1
  %_191 = alloca [8 x i8], align 4
  %_165 = alloca [16 x i8], align 4
  %err8 = alloca [1 x i8], align 1
  %_156 = alloca [16 x i8], align 8
  %_114 = alloca [16 x i8], align 4
  %err7 = alloca [1 x i8], align 1
  %name6 = alloca [16 x i8], align 4
  %_105 = alloca [16 x i8], align 4
  %_102 = alloca [16 x i8], align 4
  %err5 = alloca [1 x i8], align 1
  %_93 = alloca [16 x i8], align 8
  %_82 = alloca [16 x i8], align 4
  %err4 = alloca [1 x i8], align 1
  %ns = alloca [4 x i8], align 4
  %_73 = alloca [8 x i8], align 4
  %_50 = alloca [16 x i8], align 4
  %err3 = alloca [1 x i8], align 1
  %name = alloca [16 x i8], align 4
  %_41 = alloca [16 x i8], align 4
  %_38 = alloca [16 x i8], align 4
  %err2 = alloca [1 x i8], align 1
  %_29 = alloca [16 x i8], align 8
  %dis = alloca [8 x i8], align 8
  %_25 = alloca [16 x i8], align 4
  %err1 = alloca [1 x i8], align 1
  %_16 = alloca [2 x i8], align 1
  %_13 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_5 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %in_value = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %in_value, align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2326, !DIExpression(), !2555)
    #dbg_declare(ptr %in_value, !2327, !DIExpression(), !2556)
    #dbg_declare(ptr %err, !2332, !DIExpression(), !2557)
    #dbg_declare(ptr %err1, !2357, !DIExpression(), !2558)
    #dbg_declare(ptr %dis, !2363, !DIExpression(), !2559)
    #dbg_declare(ptr %err2, !2369, !DIExpression(), !2560)
    #dbg_declare(ptr %name, !2375, !DIExpression(), !2561)
    #dbg_declare(ptr %name, !2379, !DIExpression(), !2562)
    #dbg_declare(ptr %err3, !2381, !DIExpression(), !2563)
    #dbg_declare(ptr %ns, !2405, !DIExpression(), !2564)
    #dbg_declare(ptr %ns, !2409, !DIExpression(), !2565)
    #dbg_declare(ptr %err4, !2411, !DIExpression(), !2566)
    #dbg_declare(ptr %err5, !2431, !DIExpression(), !2567)
    #dbg_declare(ptr %name6, !2437, !DIExpression(), !2568)
    #dbg_declare(ptr %name6, !2441, !DIExpression(), !2569)
    #dbg_declare(ptr %err7, !2443, !DIExpression(), !2570)
    #dbg_declare(ptr %err8, !2499, !DIExpression(), !2571)
    #dbg_declare(ptr %err9, !2549, !DIExpression(), !2572)
    #dbg_declare(ptr %x.dbg.spill, !2330, !DIExpression(), !2573)
    #dbg_declare(ptr %residual.dbg.spill, !2334, !DIExpression(), !2574)
    #dbg_declare(ptr %val.dbg.spill, !2349, !DIExpression(), !2575)
    #dbg_declare(ptr %residual.dbg.spill10, !2359, !DIExpression(), !2576)
    #dbg_declare(ptr %val.dbg.spill11, !2361, !DIExpression(), !2577)
    #dbg_declare(ptr %residual.dbg.spill12, !2371, !DIExpression(), !2578)
    #dbg_declare(ptr %val.dbg.spill13, !2373, !DIExpression(), !2579)
    #dbg_declare(ptr %residual.dbg.spill14, !2383, !DIExpression(), !2580)
    #dbg_declare(ptr %val.dbg.spill15, !2385, !DIExpression(), !2581)
    #dbg_declare(ptr %residual.dbg.spill16, !2387, !DIExpression(), !2582)
    #dbg_declare(ptr %val.dbg.spill17, !2389, !DIExpression(), !2583)
    #dbg_declare(ptr %residual.dbg.spill18, !2393, !DIExpression(), !2584)
    #dbg_declare(ptr %val.dbg.spill19, !2395, !DIExpression(), !2585)
    #dbg_declare(ptr %residual.dbg.spill20, !2397, !DIExpression(), !2586)
    #dbg_declare(ptr %val.dbg.spill21, !2399, !DIExpression(), !2587)
    #dbg_declare(ptr %residual.dbg.spill22, !2401, !DIExpression(), !2588)
    #dbg_declare(ptr %val.dbg.spill23, !2403, !DIExpression(), !2589)
    #dbg_declare(ptr %residual.dbg.spill24, !2413, !DIExpression(), !2590)
    #dbg_declare(ptr %val.dbg.spill25, !2415, !DIExpression(), !2591)
    #dbg_declare(ptr %residual.dbg.spill26, !2417, !DIExpression(), !2592)
    #dbg_declare(ptr %val.dbg.spill27, !2419, !DIExpression(), !2593)
    #dbg_declare(ptr %residual.dbg.spill28, !2421, !DIExpression(), !2594)
    #dbg_declare(ptr %val.dbg.spill29, !2423, !DIExpression(), !2595)
    #dbg_declare(ptr %residual.dbg.spill30, !2433, !DIExpression(), !2596)
    #dbg_declare(ptr %val.dbg.spill31, !2435, !DIExpression(), !2597)
    #dbg_declare(ptr %residual.dbg.spill32, !2445, !DIExpression(), !2598)
    #dbg_declare(ptr %val.dbg.spill33, !2447, !DIExpression(), !2599)
    #dbg_declare(ptr %residual.dbg.spill34, !2451, !DIExpression(), !2600)
    #dbg_declare(ptr %val.dbg.spill35, !2453, !DIExpression(), !2601)
    #dbg_declare(ptr %residual.dbg.spill36, !2455, !DIExpression(), !2602)
    #dbg_declare(ptr %val.dbg.spill37, !2457, !DIExpression(), !2603)
    #dbg_declare(ptr %residual.dbg.spill38, !2459, !DIExpression(), !2604)
    #dbg_declare(ptr %val.dbg.spill39, !2461, !DIExpression(), !2605)
    #dbg_declare(ptr %residual.dbg.spill40, !2463, !DIExpression(), !2606)
    #dbg_declare(ptr %val.dbg.spill41, !2465, !DIExpression(), !2607)
    #dbg_declare(ptr %residual.dbg.spill42, !2467, !DIExpression(), !2608)
    #dbg_declare(ptr %val.dbg.spill43, !2469, !DIExpression(), !2609)
    #dbg_declare(ptr %residual.dbg.spill44, !2471, !DIExpression(), !2610)
    #dbg_declare(ptr %val.dbg.spill45, !2473, !DIExpression(), !2611)
    #dbg_declare(ptr %residual.dbg.spill46, !2475, !DIExpression(), !2612)
    #dbg_declare(ptr %val.dbg.spill47, !2477, !DIExpression(), !2613)
    #dbg_declare(ptr %residual.dbg.spill48, !2479, !DIExpression(), !2614)
    #dbg_declare(ptr %val.dbg.spill49, !2481, !DIExpression(), !2615)
    #dbg_declare(ptr %residual.dbg.spill50, !2483, !DIExpression(), !2616)
    #dbg_declare(ptr %val.dbg.spill51, !2485, !DIExpression(), !2617)
    #dbg_declare(ptr %residual.dbg.spill52, !2487, !DIExpression(), !2618)
    #dbg_declare(ptr %val.dbg.spill53, !2489, !DIExpression(), !2619)
    #dbg_declare(ptr %residual.dbg.spill54, !2491, !DIExpression(), !2620)
    #dbg_declare(ptr %val.dbg.spill55, !2493, !DIExpression(), !2621)
    #dbg_declare(ptr %residual.dbg.spill56, !2501, !DIExpression(), !2622)
    #dbg_declare(ptr %val.dbg.spill57, !2503, !DIExpression(), !2623)
    #dbg_declare(ptr %residual.dbg.spill58, !2505, !DIExpression(), !2624)
    #dbg_declare(ptr %val.dbg.spill59, !2507, !DIExpression(), !2625)
    #dbg_declare(ptr %residual.dbg.spill60, !2509, !DIExpression(), !2626)
    #dbg_declare(ptr %val.dbg.spill61, !2511, !DIExpression(), !2627)
    #dbg_declare(ptr %residual.dbg.spill62, !2513, !DIExpression(), !2628)
    #dbg_declare(ptr %val.dbg.spill63, !2515, !DIExpression(), !2629)
    #dbg_declare(ptr %residual.dbg.spill64, !2517, !DIExpression(), !2630)
    #dbg_declare(ptr %val.dbg.spill65, !2519, !DIExpression(), !2631)
    #dbg_declare(ptr %residual.dbg.spill66, !2521, !DIExpression(), !2632)
    #dbg_declare(ptr %val.dbg.spill67, !2523, !DIExpression(), !2633)
    #dbg_declare(ptr %residual.dbg.spill68, !2525, !DIExpression(), !2634)
    #dbg_declare(ptr %val.dbg.spill69, !2527, !DIExpression(), !2635)
    #dbg_declare(ptr %residual.dbg.spill70, !2529, !DIExpression(), !2636)
    #dbg_declare(ptr %val.dbg.spill71, !2531, !DIExpression(), !2637)
    #dbg_declare(ptr %residual.dbg.spill72, !2533, !DIExpression(), !2638)
    #dbg_declare(ptr %val.dbg.spill73, !2535, !DIExpression(), !2639)
    #dbg_declare(ptr %residual.dbg.spill74, !2537, !DIExpression(), !2640)
    #dbg_declare(ptr %residual.dbg.spill75, !2541, !DIExpression(), !2641)
    #dbg_declare(ptr %val.dbg.spill76, !2543, !DIExpression(), !2642)
    #dbg_declare(ptr %residual.dbg.spill77, !2545, !DIExpression(), !2643)
    #dbg_declare(ptr %val.dbg.spill78, !2547, !DIExpression(), !2644)
    #dbg_declare(ptr %residual.dbg.spill79, !2551, !DIExpression(), !2645)
    #dbg_declare(ptr %val.dbg.spill80, !2553, !DIExpression(), !2646)
  %2 = load ptr, ptr %self, align 4, !dbg !2647
  %3 = ptrtoint ptr %2 to i32, !dbg !2647
  %4 = icmp eq i32 %3, 0, !dbg !2647
  %_3 = select i1 %4, i32 1, i32 0, !dbg !2647
  %5 = trunc nuw i32 %_3 to i1, !dbg !2648
  br i1 %5, label %bb2, label %bb3, !dbg !2648

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2649
  %7 = zext i1 %6 to i8, !dbg !2649
  store i8 %7, ptr %_0, align 1, !dbg !2649
  br label %bb222, !dbg !2649

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !2650
    #dbg_declare(ptr %parser.dbg.spill, !2328, !DIExpression(), !2651)
; call rustc_demangle::v0::Parser::push_depth
  %8 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE(ptr align 4 %self) #13, !dbg !2652
  store i8 %8, ptr %_5, align 1, !dbg !2652
  %9 = load i8, ptr %_5, align 1, !dbg !2653
  %10 = icmp eq i8 %9, 2, !dbg !2653
  %_6 = select i1 %10, i32 0, i32 1, !dbg !2653
  %11 = trunc nuw i32 %_6 to i1, !dbg !2654
  br i1 %11, label %bb5, label %bb6, !dbg !2654

bb5:                                              ; preds = %bb3
  %12 = load i8, ptr %_5, align 1, !dbg !2655
  %13 = trunc nuw i8 %12 to i1, !dbg !2655
  %14 = zext i1 %13 to i8, !dbg !2655
  store i8 %14, ptr %err, align 1, !dbg !2655
; call rustc_demangle::v0::ParseError::message
  %15 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !2656
  %_10.0 = extractvalue { ptr, i32 } %15, 0, !dbg !2656
  %_10.1 = extractvalue { ptr, i32 } %15, 1, !dbg !2656
; call rustc_demangle::v0::Printer::print
  %_9 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_10.0, i32 %_10.1) #13, !dbg !2657
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_8 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_9) #13, !dbg !2658
  %_12 = zext i1 %_8 to i32, !dbg !2658
  %16 = trunc nuw i32 %_12 to i1, !dbg !2658
  br i1 %16, label %bb11, label %bb10, !dbg !2658

bb6:                                              ; preds = %bb3
  %17 = load ptr, ptr %self, align 4, !dbg !2647
  %18 = ptrtoint ptr %17 to i32, !dbg !2647
  %19 = icmp eq i32 %18, 0, !dbg !2647
  %_14 = select i1 %19, i32 1, i32 0, !dbg !2647
  %20 = trunc nuw i32 %_14 to i1, !dbg !2648
  br i1 %20, label %bb12, label %bb13, !dbg !2648

bb12:                                             ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2649
  %22 = zext i1 %21 to i8, !dbg !2649
  store i8 %22, ptr %_0, align 1, !dbg !2649
  br label %bb222, !dbg !2649

bb13:                                             ; preds = %bb6
  store ptr %self, ptr %parser.dbg.spill81, align 4, !dbg !2650
    #dbg_declare(ptr %parser.dbg.spill81, !2353, !DIExpression(), !2659)
; call rustc_demangle::v0::Parser::next
  %23 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) #13, !dbg !2660
  %24 = extractvalue { i1, i8 } %23, 0, !dbg !2660
  %25 = extractvalue { i1, i8 } %23, 1, !dbg !2660
  %26 = zext i1 %24 to i8, !dbg !2660
  store i8 %26, ptr %_16, align 1, !dbg !2660
  %27 = getelementptr inbounds i8, ptr %_16, i32 1, !dbg !2660
  store i8 %25, ptr %27, align 1, !dbg !2660
  %28 = load i8, ptr %_16, align 1, !dbg !2661
  %29 = trunc nuw i8 %28 to i1, !dbg !2661
  %30 = getelementptr inbounds i8, ptr %_16, i32 1, !dbg !2661
  %31 = load i8, ptr %30, align 1, !dbg !2661
  %_17 = zext i1 %29 to i32, !dbg !2661
  %32 = trunc nuw i32 %_17 to i1, !dbg !2662
  br i1 %32, label %bb15, label %bb16, !dbg !2662

bb15:                                             ; preds = %bb13
  %33 = getelementptr inbounds i8, ptr %_16, i32 1, !dbg !2663
  %34 = load i8, ptr %33, align 1, !dbg !2663
  %35 = trunc nuw i8 %34 to i1, !dbg !2663
  %36 = zext i1 %35 to i8, !dbg !2663
  store i8 %36, ptr %err1, align 1, !dbg !2663
; call rustc_demangle::v0::ParseError::message
  %37 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err1) #13, !dbg !2664
  %_22.0 = extractvalue { ptr, i32 } %37, 0, !dbg !2664
  %_22.1 = extractvalue { ptr, i32 } %37, 1, !dbg !2664
; call rustc_demangle::v0::Printer::print
  %_21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_22.0, i32 %_22.1) #13, !dbg !2665
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_21) #13, !dbg !2666
  %_24 = zext i1 %_20 to i32, !dbg !2666
  %38 = trunc nuw i32 %_24 to i1, !dbg !2666
  br i1 %38, label %bb21, label %bb20, !dbg !2666

bb16:                                             ; preds = %bb13
  %39 = getelementptr inbounds i8, ptr %_16, i32 1, !dbg !2667
  %tag = load i8, ptr %39, align 1, !dbg !2667
  store i8 %tag, ptr %tag.dbg.spill, align 1, !dbg !2667
    #dbg_declare(ptr %tag.dbg.spill, !2351, !DIExpression(), !2668)
    #dbg_declare(ptr %tag.dbg.spill, !2355, !DIExpression(), !2669)
  switch i8 %tag, label %bb22 [
    i8 67, label %bb27
    i8 78, label %bb26
    i8 77, label %bb25
    i8 88, label %bb25
    i8 89, label %bb25
    i8 73, label %bb24
    i8 66, label %bb23
  ], !dbg !2670

bb22:                                             ; preds = %bb16
  store i8 0, ptr %err9, align 1, !dbg !2671
; call rustc_demangle::v0::ParseError::message
  %40 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err9) #13, !dbg !2672
  %_207.0 = extractvalue { ptr, i32 } %40, 0, !dbg !2672
  %_207.1 = extractvalue { ptr, i32 } %40, 1, !dbg !2672
; call rustc_demangle::v0::Printer::print
  %_206 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_207.0, i32 %_207.1) #13, !dbg !2673
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_205 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_206) #13, !dbg !2674
  %_209 = zext i1 %_205 to i32, !dbg !2674
  %41 = trunc nuw i32 %_209 to i1, !dbg !2674
  br i1 %41, label %bb219, label %bb218, !dbg !2674

bb27:                                             ; preds = %bb16
  %42 = load ptr, ptr %self, align 4, !dbg !2675
  %43 = ptrtoint ptr %42 to i32, !dbg !2675
  %44 = icmp eq i32 %43, 0, !dbg !2675
  %_27 = select i1 %44, i32 1, i32 0, !dbg !2675
  %45 = trunc nuw i32 %_27 to i1, !dbg !2676
  br i1 %45, label %bb28, label %bb29, !dbg !2676

bb26:                                             ; preds = %bb16
  %46 = load ptr, ptr %self, align 4, !dbg !2675
  %47 = ptrtoint ptr %46 to i32, !dbg !2675
  %48 = icmp eq i32 %47, 0, !dbg !2675
  %_71 = select i1 %48, i32 1, i32 0, !dbg !2675
  %49 = trunc nuw i32 %_71 to i1, !dbg !2676
  br i1 %49, label %bb67, label %bb68, !dbg !2676

bb25:                                             ; preds = %bb16, %bb16, %bb16
  %50 = icmp eq i8 %tag, 89, !dbg !2677
  br i1 %50, label %bb171, label %bb160, !dbg !2677

bb24:                                             ; preds = %bb16
  %51 = load i8, ptr %in_value, align 1, !dbg !2678
  %52 = trunc nuw i8 %51 to i1, !dbg !2678
; call rustc_demangle::v0::Printer::print_path
  %_183 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext %52) #13, !dbg !2679
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_182 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_183) #13, !dbg !2678
  %_184 = zext i1 %_182 to i32, !dbg !2678
  %53 = trunc nuw i32 %_184 to i1, !dbg !2678
  br i1 %53, label %bb195, label %bb194, !dbg !2678

bb23:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print_backref
  %_200 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h4d96d73f26008496E(ptr align 4 %self, ptr align 1 %in_value) #13, !dbg !2680
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_199 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_200) #13, !dbg !2681
  %_203 = zext i1 %_199 to i32, !dbg !2681
  %54 = trunc nuw i32 %_203 to i1, !dbg !2681
  br i1 %54, label %bb214, label %bb220, !dbg !2681

bb28:                                             ; preds = %bb27
; call rustc_demangle::v0::Printer::print
  %55 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2682
  %56 = zext i1 %55 to i8, !dbg !2682
  store i8 %56, ptr %_0, align 1, !dbg !2682
  br label %bb222, !dbg !2682

bb29:                                             ; preds = %bb27
  store ptr %self, ptr %parser.dbg.spill82, align 4, !dbg !2683
    #dbg_declare(ptr %parser.dbg.spill82, !2365, !DIExpression(), !2684)
; call rustc_demangle::v0::Parser::disambiguator
  call void @_ZN14rustc_demangle2v06Parser13disambiguator17hb8f2bd207c519d1dE(ptr sret([16 x i8]) align 8 %_29, ptr align 4 %self) #13, !dbg !2685
  %57 = load i8, ptr %_29, align 8, !dbg !2686
  %58 = trunc nuw i8 %57 to i1, !dbg !2686
  %_30 = zext i1 %58 to i32, !dbg !2686
  %59 = trunc nuw i32 %_30 to i1, !dbg !2687
  br i1 %59, label %bb31, label %bb32, !dbg !2687

bb31:                                             ; preds = %bb29
  %60 = getelementptr inbounds i8, ptr %_29, i32 1, !dbg !2688
  %61 = load i8, ptr %60, align 1, !dbg !2688
  %62 = trunc nuw i8 %61 to i1, !dbg !2688
  %63 = zext i1 %62 to i8, !dbg !2688
  store i8 %63, ptr %err2, align 1, !dbg !2688
; call rustc_demangle::v0::ParseError::message
  %64 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err2) #13, !dbg !2689
  %_35.0 = extractvalue { ptr, i32 } %64, 0, !dbg !2689
  %_35.1 = extractvalue { ptr, i32 } %64, 1, !dbg !2689
; call rustc_demangle::v0::Printer::print
  %_34 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_35.0, i32 %_35.1) #13, !dbg !2690
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_33 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_34) #13, !dbg !2691
  %_37 = zext i1 %_33 to i32, !dbg !2691
  %65 = trunc nuw i32 %_37 to i1, !dbg !2691
  br i1 %65, label %bb37, label %bb36, !dbg !2691

bb32:                                             ; preds = %bb29
  %66 = getelementptr inbounds i8, ptr %_29, i32 8, !dbg !2692
  %x = load i64, ptr %66, align 8, !dbg !2692
  store i64 %x, ptr %x.dbg.spill83, align 8, !dbg !2692
    #dbg_declare(ptr %x.dbg.spill83, !2367, !DIExpression(), !2693)
  store i64 %x, ptr %dis, align 8, !dbg !2694
  %67 = load ptr, ptr %self, align 4, !dbg !2695
  %68 = ptrtoint ptr %67 to i32, !dbg !2695
  %69 = icmp eq i32 %68, 0, !dbg !2695
  %_39 = select i1 %69, i32 1, i32 0, !dbg !2695
  %70 = trunc nuw i32 %_39 to i1, !dbg !2696
  br i1 %70, label %bb38, label %bb39, !dbg !2696

bb38:                                             ; preds = %bb32
; call rustc_demangle::v0::Printer::print
  %71 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2697
  %72 = zext i1 %71 to i8, !dbg !2697
  store i8 %72, ptr %_0, align 1, !dbg !2697
  br label %bb222, !dbg !2697

bb39:                                             ; preds = %bb32
  store ptr %self, ptr %parser.dbg.spill84, align 4, !dbg !2698
    #dbg_declare(ptr %parser.dbg.spill84, !2377, !DIExpression(), !2699)
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E(ptr sret([16 x i8]) align 4 %_41, ptr align 4 %self) #13, !dbg !2700
  %73 = load ptr, ptr %_41, align 4, !dbg !2701
  %74 = ptrtoint ptr %73 to i32, !dbg !2701
  %75 = icmp eq i32 %74, 0, !dbg !2701
  %_42 = select i1 %75, i32 1, i32 0, !dbg !2701
  %76 = trunc nuw i32 %_42 to i1, !dbg !2702
  br i1 %76, label %bb41, label %bb42, !dbg !2702

bb41:                                             ; preds = %bb39
  %77 = getelementptr inbounds i8, ptr %_41, i32 4, !dbg !2703
  %78 = load i8, ptr %77, align 4, !dbg !2703
  %79 = trunc nuw i8 %78 to i1, !dbg !2703
  %80 = zext i1 %79 to i8, !dbg !2703
  store i8 %80, ptr %err3, align 1, !dbg !2703
; call rustc_demangle::v0::ParseError::message
  %81 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err3) #13, !dbg !2704
  %_47.0 = extractvalue { ptr, i32 } %81, 0, !dbg !2704
  %_47.1 = extractvalue { ptr, i32 } %81, 1, !dbg !2704
; call rustc_demangle::v0::Printer::print
  %_46 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_47.0, i32 %_47.1) #13, !dbg !2705
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_45 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_46) #13, !dbg !2706
  %_49 = zext i1 %_45 to i32, !dbg !2706
  %82 = trunc nuw i32 %_49 to i1, !dbg !2706
  br i1 %82, label %bb47, label %bb46, !dbg !2706

bb42:                                             ; preds = %bb39
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %name, ptr align 4 %_41, i32 16, i1 false), !dbg !2707
; call rustc_demangle::v0::Printer::print
  %_52 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE(ptr align 4 %self, ptr align 4 %name) #13, !dbg !2708
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_51 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_52) #13, !dbg !2709
  %_53 = zext i1 %_51 to i32, !dbg !2709
  %83 = trunc nuw i32 %_53 to i1, !dbg !2709
  br i1 %83, label %bb51, label %bb50, !dbg !2709

bb51:                                             ; preds = %bb42
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %84 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_1db9605d63c6142bb7b2612616cda18a) #13, !dbg !2710
  %85 = zext i1 %84 to i8, !dbg !2710
  store i8 %85, ptr %_0, align 1, !dbg !2710
  br label %bb222, !dbg !2710

bb50:                                             ; preds = %bb42
  %_54 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !2711
  %86 = load ptr, ptr %_54, align 4, !dbg !2711
  %87 = ptrtoint ptr %86 to i32, !dbg !2711
  %88 = icmp eq i32 %87, 0, !dbg !2711
  %_55 = select i1 %88, i32 0, i32 1, !dbg !2711
  %89 = trunc nuw i32 %_55 to i1, !dbg !2712
  br i1 %89, label %bb52, label %bb220, !dbg !2712

bb52:                                             ; preds = %bb50
  store ptr %_54, ptr %out.dbg.spill, align 4, !dbg !2713
    #dbg_declare(ptr %out.dbg.spill, !2391, !DIExpression(), !2713)
  %_212 = load ptr, ptr %_54, align 4, !dbg !2714
; call core::fmt::Formatter::alternate
  %_57 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h47450e30007958d8E(ptr align 4 %_212) #13, !dbg !2715
  br i1 %_57, label %bb220, label %bb54, !dbg !2714

bb220:                                            ; preds = %bb23, %bb207, %bb188, %bb144, %bb155, %bb150, %bb62, %bb54, %bb52, %bb50
; call rustc_demangle::v0::Printer::pop_depth
  call void @_ZN14rustc_demangle2v07Printer9pop_depth17ha25b3c4e0a438db8E(ptr align 4 %self) #13, !dbg !2716
  store i8 0, ptr %_0, align 1, !dbg !2717
  br label %bb222, !dbg !2718

bb54:                                             ; preds = %bb52
  %90 = load i64, ptr %dis, align 8, !dbg !2719
  %91 = icmp eq i64 %90, 0, !dbg !2719
  br i1 %91, label %bb220, label %bb55, !dbg !2719

bb55:                                             ; preds = %bb54
  %_213 = load ptr, ptr %_54, align 4, !dbg !2720
; call core::fmt::Formatter::write_str
  %_60 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_213, ptr align 1 @alloc_036636151bab3754536335311c8d3ab8, i32 1) #13, !dbg !2721
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_59 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_60) #13, !dbg !2720
  %_62 = zext i1 %_59 to i32, !dbg !2720
  %92 = trunc nuw i32 %_62 to i1, !dbg !2720
  br i1 %92, label %bb59, label %bb58, !dbg !2720

bb59:                                             ; preds = %bb55
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %93 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_031dd2058c27f0acde00c8b80c505ece) #13, !dbg !2722
  %94 = zext i1 %93 to i8, !dbg !2722
  store i8 %94, ptr %_0, align 1, !dbg !2722
  br label %bb222, !dbg !2722

bb58:                                             ; preds = %bb55
  %_214 = load ptr, ptr %_54, align 4, !dbg !2723
; call core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
  %_64 = call zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h99459a52d221e4d5E"(ptr align 8 %dis, ptr align 4 %_214) #13, !dbg !2724
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_63 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_64) #13, !dbg !2724
  %_66 = zext i1 %_63 to i32, !dbg !2724
  %95 = trunc nuw i32 %_66 to i1, !dbg !2724
  br i1 %95, label %bb63, label %bb62, !dbg !2724

bb63:                                             ; preds = %bb58
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %96 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_fe7b78d61798fde452b85f735f9d7635) #13, !dbg !2725
  %97 = zext i1 %96 to i8, !dbg !2725
  store i8 %97, ptr %_0, align 1, !dbg !2725
  br label %bb222, !dbg !2725

bb62:                                             ; preds = %bb58
  %_215 = load ptr, ptr %_54, align 4, !dbg !2726
; call core::fmt::Formatter::write_str
  %_68 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_215, ptr align 1 @alloc_7a6887ef0f93938f57a4bb958cf80311, i32 1) #13, !dbg !2727
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_67 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_68) #13, !dbg !2726
  %_70 = zext i1 %_67 to i32, !dbg !2726
  %98 = trunc nuw i32 %_70 to i1, !dbg !2726
  br i1 %98, label %bb66, label %bb220, !dbg !2726

bb66:                                             ; preds = %bb62
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %99 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a16490029b67e6729a2a1cc36e2b76c4) #13, !dbg !2728
  %100 = zext i1 %99 to i8, !dbg !2728
  store i8 %100, ptr %_0, align 1, !dbg !2728
  br label %bb222, !dbg !2728

bb222:                                            ; preds = %bb2, %bb11, %bb10, %bb12, %bb21, %bb20, %bb219, %bb218, %bb214, %bb220, %bb195, %bb199, %bb204, %bb208, %bb211, %bb161, %bb170, %bb169, %bb175, %bb179, %bb184, %bb187, %bb191, %bb67, %bb76, %bb75, %bb80, %bb85, %bb87, %bb96, %bb95, %bb97, %bb106, %bb105, %bb112, %bb124, %bb141, %bb145, %bb148, %bb133, %bb136, %bb121, %bb118, %bb156, %bb159, %bb28, %bb37, %bb36, %bb38, %bb47, %bb46, %bb51, %bb59, %bb63, %bb66
  %101 = load i8, ptr %_0, align 1, !dbg !2718
  %102 = trunc nuw i8 %101 to i1, !dbg !2718
  ret i1 %102, !dbg !2718

bb47:                                             ; preds = %bb41
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %103 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9887ca5a2e45b99a734e01ef54da3544) #13, !dbg !2729
  %104 = zext i1 %103 to i8, !dbg !2729
  store i8 %104, ptr %_0, align 1, !dbg !2729
  br label %bb222, !dbg !2729

bb46:                                             ; preds = %bb41
  %105 = load i8, ptr %err3, align 1, !dbg !2730
  %106 = trunc nuw i8 %105 to i1, !dbg !2730
  %107 = getelementptr inbounds i8, ptr %_50, i32 4, !dbg !2730
  %108 = zext i1 %106 to i8, !dbg !2730
  store i8 %108, ptr %107, align 4, !dbg !2730
  store ptr null, ptr %_50, align 4, !dbg !2730
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_50, i32 16, i1 false), !dbg !2731
  store i8 0, ptr %_0, align 1, !dbg !2732
  br label %bb222, !dbg !2733

bb37:                                             ; preds = %bb31
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %109 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_e06a81addf40d0f2584e5776179ece9c) #13, !dbg !2734
  %110 = zext i1 %109 to i8, !dbg !2734
  store i8 %110, ptr %_0, align 1, !dbg !2734
  br label %bb222, !dbg !2734

bb36:                                             ; preds = %bb31
  %111 = load i8, ptr %err2, align 1, !dbg !2735
  %112 = trunc nuw i8 %111 to i1, !dbg !2735
  %113 = getelementptr inbounds i8, ptr %_38, i32 4, !dbg !2735
  %114 = zext i1 %112 to i8, !dbg !2735
  store i8 %114, ptr %113, align 4, !dbg !2735
  store ptr null, ptr %_38, align 4, !dbg !2735
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_38, i32 16, i1 false), !dbg !2736
  store i8 0, ptr %_0, align 1, !dbg !2737
  br label %bb222, !dbg !2738

bb67:                                             ; preds = %bb26
; call rustc_demangle::v0::Printer::print
  %115 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2682
  %116 = zext i1 %115 to i8, !dbg !2682
  store i8 %116, ptr %_0, align 1, !dbg !2682
  br label %bb222, !dbg !2682

bb68:                                             ; preds = %bb26
  store ptr %self, ptr %parser.dbg.spill85, align 4, !dbg !2683
    #dbg_declare(ptr %parser.dbg.spill85, !2407, !DIExpression(), !2739)
; call rustc_demangle::v0::Parser::namespace
  call void @_ZN14rustc_demangle2v06Parser9namespace17ha9e17375c4f7a2edE(ptr sret([8 x i8]) align 4 %_73, ptr align 4 %self) #13, !dbg !2740
  %117 = load i8, ptr %_73, align 4, !dbg !2741
  %118 = trunc nuw i8 %117 to i1, !dbg !2741
  %_74 = zext i1 %118 to i32, !dbg !2741
  %119 = trunc nuw i32 %_74 to i1, !dbg !2742
  br i1 %119, label %bb70, label %bb71, !dbg !2742

bb70:                                             ; preds = %bb68
  %120 = getelementptr inbounds i8, ptr %_73, i32 1, !dbg !2743
  %121 = load i8, ptr %120, align 1, !dbg !2743
  %122 = trunc nuw i8 %121 to i1, !dbg !2743
  %123 = zext i1 %122 to i8, !dbg !2743
  store i8 %123, ptr %err4, align 1, !dbg !2743
; call rustc_demangle::v0::ParseError::message
  %124 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err4) #13, !dbg !2744
  %_79.0 = extractvalue { ptr, i32 } %124, 0, !dbg !2744
  %_79.1 = extractvalue { ptr, i32 } %124, 1, !dbg !2744
; call rustc_demangle::v0::Printer::print
  %_78 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_79.0, i32 %_79.1) #13, !dbg !2745
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_77 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_78) #13, !dbg !2746
  %_81 = zext i1 %_77 to i32, !dbg !2746
  %125 = trunc nuw i32 %_81 to i1, !dbg !2746
  br i1 %125, label %bb76, label %bb75, !dbg !2746

bb71:                                             ; preds = %bb68
  %126 = getelementptr inbounds i8, ptr %_73, i32 4, !dbg !2747
  %127 = load i32, ptr %126, align 4, !dbg !2747
  store i32 %127, ptr %ns, align 4, !dbg !2747
  %128 = load i8, ptr %in_value, align 1, !dbg !2748
  %129 = trunc nuw i8 %128 to i1, !dbg !2748
; call rustc_demangle::v0::Printer::print_path
  %_84 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext %129) #13, !dbg !2749
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_83 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_84) #13, !dbg !2748
  %_85 = zext i1 %_83 to i32, !dbg !2748
  %130 = trunc nuw i32 %_85 to i1, !dbg !2748
  br i1 %130, label %bb80, label %bb79, !dbg !2748

bb80:                                             ; preds = %bb71
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %131 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_fea2dda640c0b8eae10837836c131476) #13, !dbg !2750
  %132 = zext i1 %131 to i8, !dbg !2750
  store i8 %132, ptr %_0, align 1, !dbg !2750
  br label %bb222, !dbg !2750

bb79:                                             ; preds = %bb71
; call core::result::Result<T,E>::is_err
  %_86 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h9015cb0eb6f1c0cbE"(ptr align 4 %self) #13, !dbg !2751
  br i1 %_86, label %bb82, label %bb86, !dbg !2752

bb86:                                             ; preds = %bb82, %bb79
  %133 = load ptr, ptr %self, align 4, !dbg !2753
  %134 = ptrtoint ptr %133 to i32, !dbg !2753
  %135 = icmp eq i32 %134, 0, !dbg !2753
  %_91 = select i1 %135, i32 1, i32 0, !dbg !2753
  %136 = trunc nuw i32 %_91 to i1, !dbg !2754
  br i1 %136, label %bb87, label %bb88, !dbg !2754

bb82:                                             ; preds = %bb79
; call rustc_demangle::v0::Printer::print
  %_89 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_0078f96ecbe246c9d8cda3cf01c437ac, i32 2) #13, !dbg !2755
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_88 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_89) #13, !dbg !2756
  %_90 = zext i1 %_88 to i32, !dbg !2756
  %137 = trunc nuw i32 %_90 to i1, !dbg !2756
  br i1 %137, label %bb85, label %bb86, !dbg !2756

bb85:                                             ; preds = %bb82
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %138 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_8ecf3588954f93f3a51db42d232b5f74) #13, !dbg !2757
  %139 = zext i1 %138 to i8, !dbg !2757
  store i8 %139, ptr %_0, align 1, !dbg !2757
  br label %bb222, !dbg !2757

bb87:                                             ; preds = %bb86
; call rustc_demangle::v0::Printer::print
  %140 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2758
  %141 = zext i1 %140 to i8, !dbg !2758
  store i8 %141, ptr %_0, align 1, !dbg !2758
  br label %bb222, !dbg !2758

bb88:                                             ; preds = %bb86
  store ptr %self, ptr %parser.dbg.spill86, align 4, !dbg !2759
    #dbg_declare(ptr %parser.dbg.spill86, !2427, !DIExpression(), !2760)
; call rustc_demangle::v0::Parser::disambiguator
  call void @_ZN14rustc_demangle2v06Parser13disambiguator17hb8f2bd207c519d1dE(ptr sret([16 x i8]) align 8 %_93, ptr align 4 %self) #13, !dbg !2761
  %142 = load i8, ptr %_93, align 8, !dbg !2762
  %143 = trunc nuw i8 %142 to i1, !dbg !2762
  %_94 = zext i1 %143 to i32, !dbg !2762
  %144 = trunc nuw i32 %_94 to i1, !dbg !2763
  br i1 %144, label %bb90, label %bb91, !dbg !2763

bb90:                                             ; preds = %bb88
  %145 = getelementptr inbounds i8, ptr %_93, i32 1, !dbg !2764
  %146 = load i8, ptr %145, align 1, !dbg !2764
  %147 = trunc nuw i8 %146 to i1, !dbg !2764
  %148 = zext i1 %147 to i8, !dbg !2764
  store i8 %148, ptr %err5, align 1, !dbg !2764
; call rustc_demangle::v0::ParseError::message
  %149 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err5) #13, !dbg !2765
  %_99.0 = extractvalue { ptr, i32 } %149, 0, !dbg !2765
  %_99.1 = extractvalue { ptr, i32 } %149, 1, !dbg !2765
; call rustc_demangle::v0::Printer::print
  %_98 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_99.0, i32 %_99.1) #13, !dbg !2766
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_97 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_98) #13, !dbg !2767
  %_101 = zext i1 %_97 to i32, !dbg !2767
  %150 = trunc nuw i32 %_101 to i1, !dbg !2767
  br i1 %150, label %bb96, label %bb95, !dbg !2767

bb91:                                             ; preds = %bb88
  %151 = getelementptr inbounds i8, ptr %_93, i32 8, !dbg !2768
  %dis87 = load i64, ptr %151, align 8, !dbg !2768
  store i64 %dis87, ptr %dis.dbg.spill, align 8, !dbg !2768
    #dbg_declare(ptr %dis.dbg.spill, !2425, !DIExpression(), !2769)
    #dbg_declare(ptr %dis.dbg.spill, !2429, !DIExpression(), !2770)
  %152 = load ptr, ptr %self, align 4, !dbg !2771
  %153 = ptrtoint ptr %152 to i32, !dbg !2771
  %154 = icmp eq i32 %153, 0, !dbg !2771
  %_103 = select i1 %154, i32 1, i32 0, !dbg !2771
  %155 = trunc nuw i32 %_103 to i1, !dbg !2772
  br i1 %155, label %bb97, label %bb98, !dbg !2772

bb97:                                             ; preds = %bb91
; call rustc_demangle::v0::Printer::print
  %156 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2773
  %157 = zext i1 %156 to i8, !dbg !2773
  store i8 %157, ptr %_0, align 1, !dbg !2773
  br label %bb222, !dbg !2773

bb98:                                             ; preds = %bb91
  store ptr %self, ptr %parser.dbg.spill88, align 4, !dbg !2774
    #dbg_declare(ptr %parser.dbg.spill88, !2439, !DIExpression(), !2775)
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E(ptr sret([16 x i8]) align 4 %_105, ptr align 4 %self) #13, !dbg !2776
  %158 = load ptr, ptr %_105, align 4, !dbg !2777
  %159 = ptrtoint ptr %158 to i32, !dbg !2777
  %160 = icmp eq i32 %159, 0, !dbg !2777
  %_106 = select i1 %160, i32 1, i32 0, !dbg !2777
  %161 = trunc nuw i32 %_106 to i1, !dbg !2778
  br i1 %161, label %bb100, label %bb101, !dbg !2778

bb100:                                            ; preds = %bb98
  %162 = getelementptr inbounds i8, ptr %_105, i32 4, !dbg !2779
  %163 = load i8, ptr %162, align 4, !dbg !2779
  %164 = trunc nuw i8 %163 to i1, !dbg !2779
  %165 = zext i1 %164 to i8, !dbg !2779
  store i8 %165, ptr %err7, align 1, !dbg !2779
; call rustc_demangle::v0::ParseError::message
  %166 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err7) #13, !dbg !2780
  %_111.0 = extractvalue { ptr, i32 } %166, 0, !dbg !2780
  %_111.1 = extractvalue { ptr, i32 } %166, 1, !dbg !2780
; call rustc_demangle::v0::Printer::print
  %_110 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_111.0, i32 %_111.1) #13, !dbg !2781
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_109 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_110) #13, !dbg !2782
  %_113 = zext i1 %_109 to i32, !dbg !2782
  %167 = trunc nuw i32 %_113 to i1, !dbg !2782
  br i1 %167, label %bb106, label %bb105, !dbg !2782

bb101:                                            ; preds = %bb98
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %name6, ptr align 4 %_105, i32 16, i1 false), !dbg !2783
  %168 = load i32, ptr %ns, align 4, !dbg !2784
  %169 = icmp eq i32 %168, 1114112, !dbg !2784
  %_115 = select i1 %169, i32 0, i32 1, !dbg !2784
  %170 = trunc nuw i32 %_115 to i1, !dbg !2785
  br i1 %170, label %bb108, label %bb107, !dbg !2785

bb108:                                            ; preds = %bb101
  %ns89 = load i32, ptr %ns, align 4, !dbg !2786
  store i32 %ns89, ptr %ns.dbg.spill, align 4, !dbg !2786
    #dbg_declare(ptr %ns.dbg.spill, !2449, !DIExpression(), !2787)
; call rustc_demangle::v0::Printer::print
  %_118 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_94ff3b0cb4f395ddb7f0d8054d812ce5, i32 3) #13, !dbg !2788
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_117 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_118) #13, !dbg !2789
  %_119 = zext i1 %_117 to i32, !dbg !2789
  %171 = trunc nuw i32 %_119 to i1, !dbg !2789
  br i1 %171, label %bb112, label %bb111, !dbg !2789

bb107:                                            ; preds = %bb101
  %_216.0 = load ptr, ptr %name6, align 4, !dbg !2790
  %172 = getelementptr inbounds i8, ptr %name6, i32 4, !dbg !2790
  %_216.1 = load i32, ptr %172, align 4, !dbg !2790
; call core::str::<impl str>::is_empty
  %_146 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_216.0, i32 %_216.1) #13, !dbg !2791
  br i1 %_146, label %bb150, label %bb152, !dbg !2790

bb152:                                            ; preds = %bb150, %bb107
; call rustc_demangle::v0::Printer::print
  %_149 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_0078f96ecbe246c9d8cda3cf01c437ac, i32 2) #13, !dbg !2792
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_148 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_149) #13, !dbg !2793
  %_150 = zext i1 %_148 to i32, !dbg !2793
  %173 = trunc nuw i32 %_150 to i1, !dbg !2793
  br i1 %173, label %bb156, label %bb155, !dbg !2793

bb150:                                            ; preds = %bb107
  %174 = getelementptr inbounds i8, ptr %name6, i32 8, !dbg !2794
  %_219.0 = load ptr, ptr %174, align 4, !dbg !2794
  %175 = getelementptr inbounds i8, ptr %174, i32 4, !dbg !2794
  %_219.1 = load i32, ptr %175, align 4, !dbg !2794
; call core::str::<impl str>::is_empty
  %_147 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_219.0, i32 %_219.1) #13, !dbg !2795
  br i1 %_147, label %bb220, label %bb152, !dbg !2794

bb156:                                            ; preds = %bb152
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %176 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_c8d7bfc75677b03b624aca8be1466fba) #13, !dbg !2796
  %177 = zext i1 %176 to i8, !dbg !2796
  store i8 %177, ptr %_0, align 1, !dbg !2796
  br label %bb222, !dbg !2796

bb155:                                            ; preds = %bb152
; call rustc_demangle::v0::Printer::print
  %_152 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE(ptr align 4 %self, ptr align 4 %name6) #13, !dbg !2797
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_151 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_152) #13, !dbg !2798
  %_153 = zext i1 %_151 to i32, !dbg !2798
  %178 = trunc nuw i32 %_153 to i1, !dbg !2798
  br i1 %178, label %bb159, label %bb220, !dbg !2798

bb159:                                            ; preds = %bb155
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %179 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f714ed889728099d4bdfdf2e790c9d1e) #13, !dbg !2799
  %180 = zext i1 %179 to i8, !dbg !2799
  store i8 %180, ptr %_0, align 1, !dbg !2799
  br label %bb222, !dbg !2799

bb112:                                            ; preds = %bb108
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %181 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_224693d2df21bc8a3a0572d9d9e11b7b) #13, !dbg !2800
  %182 = zext i1 %181 to i8, !dbg !2800
  store i8 %182, ptr %_0, align 1, !dbg !2800
  br label %bb222, !dbg !2800

bb111:                                            ; preds = %bb108
  switch i32 %ns89, label %bb113 [
    i32 67, label %bb115
    i32 83, label %bb114
  ], !dbg !2801

bb113:                                            ; preds = %bb111
; call rustc_demangle::v0::Printer::print
  %_127 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hd09854794c0a73edE(ptr align 4 %self, i32 %ns89) #13, !dbg !2802
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_126 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_127) #13, !dbg !2803
  %_128 = zext i1 %_126 to i32, !dbg !2803
  %183 = trunc nuw i32 %_128 to i1, !dbg !2803
  br i1 %183, label %bb124, label %bb125, !dbg !2803

bb115:                                            ; preds = %bb111
; call rustc_demangle::v0::Printer::print
  %_121 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_65c7084c473eeb2498964f743450e692, i32 7) #13, !dbg !2804
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_120 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_121) #13, !dbg !2805
  %_122 = zext i1 %_120 to i32, !dbg !2805
  %184 = trunc nuw i32 %_122 to i1, !dbg !2805
  br i1 %184, label %bb118, label %bb125, !dbg !2805

bb114:                                            ; preds = %bb111
; call rustc_demangle::v0::Printer::print
  %_124 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_a30cb47ff4c8eb494e3bec5122dc5416, i32 4) #13, !dbg !2806
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_123 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_124) #13, !dbg !2807
  %_125 = zext i1 %_123 to i32, !dbg !2807
  %185 = trunc nuw i32 %_125 to i1, !dbg !2807
  br i1 %185, label %bb121, label %bb125, !dbg !2807

bb118:                                            ; preds = %bb115
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %186 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_abe5c9d97f5988bd862d1e81f8f64d4e) #13, !dbg !2808
  %187 = zext i1 %186 to i8, !dbg !2808
  store i8 %187, ptr %_0, align 1, !dbg !2808
  br label %bb222, !dbg !2808

bb125:                                            ; preds = %bb113, %bb114, %bb115
  %_217.0 = load ptr, ptr %name6, align 4, !dbg !2809
  %188 = getelementptr inbounds i8, ptr %name6, i32 4, !dbg !2809
  %_217.1 = load i32, ptr %188, align 4, !dbg !2809
; call core::str::<impl str>::is_empty
  %_129 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_217.0, i32 %_217.1) #13, !dbg !2810
  br i1 %_129, label %bb127, label %bb129, !dbg !2809

bb121:                                            ; preds = %bb114
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %189 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_4e48fe025ae186e1a68c38e07d7b8b0c) #13, !dbg !2811
  %190 = zext i1 %189 to i8, !dbg !2811
  store i8 %190, ptr %_0, align 1, !dbg !2811
  br label %bb222, !dbg !2811

bb124:                                            ; preds = %bb113
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %191 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_86a53b4f5e385769220da1002cb374c7) #13, !dbg !2812
  %192 = zext i1 %191 to i8, !dbg !2812
  store i8 %192, ptr %_0, align 1, !dbg !2812
  br label %bb222, !dbg !2812

bb129:                                            ; preds = %bb127, %bb125
; call rustc_demangle::v0::Printer::print
  %_132 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_3b8c95b91c663a5a9387bddd44e7b465, i32 1) #13, !dbg !2813
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_131 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_132) #13, !dbg !2814
  %_133 = zext i1 %_131 to i32, !dbg !2814
  %193 = trunc nuw i32 %_133 to i1, !dbg !2814
  br i1 %193, label %bb133, label %bb132, !dbg !2814

bb127:                                            ; preds = %bb125
  %194 = getelementptr inbounds i8, ptr %name6, i32 8, !dbg !2815
  %_218.0 = load ptr, ptr %194, align 4, !dbg !2815
  %195 = getelementptr inbounds i8, ptr %194, i32 4, !dbg !2815
  %_218.1 = load i32, ptr %195, align 4, !dbg !2815
; call core::str::<impl str>::is_empty
  %_130 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_218.0, i32 %_218.1) #13, !dbg !2816
  br i1 %_130, label %bb137, label %bb129, !dbg !2815

bb137:                                            ; preds = %bb132, %bb127
; call rustc_demangle::v0::Printer::print
  %_138 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_915544995c76d19b0d8d87d991dcd459, i32 1) #13, !dbg !2817
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_137 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_138) #13, !dbg !2818
  %_139 = zext i1 %_137 to i32, !dbg !2818
  %196 = trunc nuw i32 %_139 to i1, !dbg !2818
  br i1 %196, label %bb141, label %bb140, !dbg !2818

bb133:                                            ; preds = %bb129
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %197 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_3e444ed9de0bd8fdfa622ab270e2e35e) #13, !dbg !2819
  %198 = zext i1 %197 to i8, !dbg !2819
  store i8 %198, ptr %_0, align 1, !dbg !2819
  br label %bb222, !dbg !2819

bb132:                                            ; preds = %bb129
; call rustc_demangle::v0::Printer::print
  %_135 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE(ptr align 4 %self, ptr align 4 %name6) #13, !dbg !2820
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_134 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_135) #13, !dbg !2821
  %_136 = zext i1 %_134 to i32, !dbg !2821
  %199 = trunc nuw i32 %_136 to i1, !dbg !2821
  br i1 %199, label %bb136, label %bb137, !dbg !2821

bb136:                                            ; preds = %bb132
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %200 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_5c392cbf2df3e4080805b50f30d5c8d4) #13, !dbg !2822
  %201 = zext i1 %200 to i8, !dbg !2822
  store i8 %201, ptr %_0, align 1, !dbg !2822
  br label %bb222, !dbg !2822

bb141:                                            ; preds = %bb137
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %202 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_56e2142e355c8c9a309ee595bd82b6b7) #13, !dbg !2823
  %203 = zext i1 %202 to i8, !dbg !2823
  store i8 %203, ptr %_0, align 1, !dbg !2823
  br label %bb222, !dbg !2823

bb140:                                            ; preds = %bb137
; call rustc_demangle::v0::Printer::print
  %_141 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h755367634094e4b9E(ptr align 4 %self, i64 %dis87) #13, !dbg !2824
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_140 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_141) #13, !dbg !2825
  %_142 = zext i1 %_140 to i32, !dbg !2825
  %204 = trunc nuw i32 %_142 to i1, !dbg !2825
  br i1 %204, label %bb145, label %bb144, !dbg !2825

bb145:                                            ; preds = %bb140
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %205 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_adeec868404974c0462ebccabdf981ed) #13, !dbg !2826
  %206 = zext i1 %205 to i8, !dbg !2826
  store i8 %206, ptr %_0, align 1, !dbg !2826
  br label %bb222, !dbg !2826

bb144:                                            ; preds = %bb140
; call rustc_demangle::v0::Printer::print
  %_144 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_fcd552ca5ffc948e1053f652f94fed71, i32 1) #13, !dbg !2827
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_143 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_144) #13, !dbg !2828
  %_145 = zext i1 %_143 to i32, !dbg !2828
  %207 = trunc nuw i32 %_145 to i1, !dbg !2828
  br i1 %207, label %bb148, label %bb220, !dbg !2828

bb148:                                            ; preds = %bb144
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %208 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_2381c8d966b76b86773408054d39563c) #13, !dbg !2829
  %209 = zext i1 %208 to i8, !dbg !2829
  store i8 %209, ptr %_0, align 1, !dbg !2829
  br label %bb222, !dbg !2829

bb106:                                            ; preds = %bb100
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %210 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_14ae02ad5e2360304425731af5c5e513) #13, !dbg !2830
  %211 = zext i1 %210 to i8, !dbg !2830
  store i8 %211, ptr %_0, align 1, !dbg !2830
  br label %bb222, !dbg !2830

bb105:                                            ; preds = %bb100
  %212 = load i8, ptr %err7, align 1, !dbg !2831
  %213 = trunc nuw i8 %212 to i1, !dbg !2831
  %214 = getelementptr inbounds i8, ptr %_114, i32 4, !dbg !2831
  %215 = zext i1 %213 to i8, !dbg !2831
  store i8 %215, ptr %214, align 4, !dbg !2831
  store ptr null, ptr %_114, align 4, !dbg !2831
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_114, i32 16, i1 false), !dbg !2832
  store i8 0, ptr %_0, align 1, !dbg !2833
  br label %bb222, !dbg !2834

bb96:                                             ; preds = %bb90
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %216 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_2c539a3ca252e014d6234cffd08c788d) #13, !dbg !2835
  %217 = zext i1 %216 to i8, !dbg !2835
  store i8 %217, ptr %_0, align 1, !dbg !2835
  br label %bb222, !dbg !2835

bb95:                                             ; preds = %bb90
  %218 = load i8, ptr %err5, align 1, !dbg !2836
  %219 = trunc nuw i8 %218 to i1, !dbg !2836
  %220 = getelementptr inbounds i8, ptr %_102, i32 4, !dbg !2836
  %221 = zext i1 %219 to i8, !dbg !2836
  store i8 %221, ptr %220, align 4, !dbg !2836
  store ptr null, ptr %_102, align 4, !dbg !2836
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_102, i32 16, i1 false), !dbg !2837
  store i8 0, ptr %_0, align 1, !dbg !2838
  br label %bb222, !dbg !2839

bb76:                                             ; preds = %bb70
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %222 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b3b0d884b11c8d05862dde7f357f68c7) #13, !dbg !2840
  %223 = zext i1 %222 to i8, !dbg !2840
  store i8 %223, ptr %_0, align 1, !dbg !2840
  br label %bb222, !dbg !2840

bb75:                                             ; preds = %bb70
  %224 = load i8, ptr %err4, align 1, !dbg !2841
  %225 = trunc nuw i8 %224 to i1, !dbg !2841
  %226 = getelementptr inbounds i8, ptr %_82, i32 4, !dbg !2841
  %227 = zext i1 %225 to i8, !dbg !2841
  store i8 %227, ptr %226, align 4, !dbg !2841
  store ptr null, ptr %_82, align 4, !dbg !2841
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_82, i32 16, i1 false), !dbg !2842
  store i8 0, ptr %_0, align 1, !dbg !2843
  br label %bb222, !dbg !2844

bb171:                                            ; preds = %bb165, %bb25
; call rustc_demangle::v0::Printer::print
  %_168 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_069739ecb4f78035aca324a6dc5131a2, i32 1) #13, !dbg !2845
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_167 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_168) #13, !dbg !2846
  %_169 = zext i1 %_167 to i32, !dbg !2846
  %228 = trunc nuw i32 %_169 to i1, !dbg !2846
  br i1 %228, label %bb175, label %bb174, !dbg !2846

bb160:                                            ; preds = %bb25
  %229 = load ptr, ptr %self, align 4, !dbg !2675
  %230 = ptrtoint ptr %229 to i32, !dbg !2675
  %231 = icmp eq i32 %230, 0, !dbg !2675
  %_154 = select i1 %231, i32 1, i32 0, !dbg !2675
  %232 = trunc nuw i32 %_154 to i1, !dbg !2676
  br i1 %232, label %bb161, label %bb162, !dbg !2676

bb161:                                            ; preds = %bb160
; call rustc_demangle::v0::Printer::print
  %233 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !2682
  %234 = zext i1 %233 to i8, !dbg !2682
  store i8 %234, ptr %_0, align 1, !dbg !2682
  br label %bb222, !dbg !2682

bb162:                                            ; preds = %bb160
  store ptr %self, ptr %parser.dbg.spill90, align 4, !dbg !2683
    #dbg_declare(ptr %parser.dbg.spill90, !2495, !DIExpression(), !2847)
; call rustc_demangle::v0::Parser::disambiguator
  call void @_ZN14rustc_demangle2v06Parser13disambiguator17hb8f2bd207c519d1dE(ptr sret([16 x i8]) align 8 %_156, ptr align 4 %self) #13, !dbg !2848
  %235 = load i8, ptr %_156, align 8, !dbg !2849
  %236 = trunc nuw i8 %235 to i1, !dbg !2849
  %_157 = zext i1 %236 to i32, !dbg !2849
  %237 = trunc nuw i32 %_157 to i1, !dbg !2850
  br i1 %237, label %bb164, label %bb165, !dbg !2850

bb164:                                            ; preds = %bb162
  %238 = getelementptr inbounds i8, ptr %_156, i32 1, !dbg !2851
  %239 = load i8, ptr %238, align 1, !dbg !2851
  %240 = trunc nuw i8 %239 to i1, !dbg !2851
  %241 = zext i1 %240 to i8, !dbg !2851
  store i8 %241, ptr %err8, align 1, !dbg !2851
; call rustc_demangle::v0::ParseError::message
  %242 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err8) #13, !dbg !2852
  %_162.0 = extractvalue { ptr, i32 } %242, 0, !dbg !2852
  %_162.1 = extractvalue { ptr, i32 } %242, 1, !dbg !2852
; call rustc_demangle::v0::Printer::print
  %_161 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_162.0, i32 %_162.1) #13, !dbg !2853
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_160 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_161) #13, !dbg !2854
  %_164 = zext i1 %_160 to i32, !dbg !2854
  %243 = trunc nuw i32 %_164 to i1, !dbg !2854
  br i1 %243, label %bb170, label %bb169, !dbg !2854

bb165:                                            ; preds = %bb162
  %244 = getelementptr inbounds i8, ptr %_156, i32 8, !dbg !2855
  %x91 = load i64, ptr %244, align 8, !dbg !2855
  store i64 %x91, ptr %x.dbg.spill92, align 8, !dbg !2855
    #dbg_declare(ptr %x.dbg.spill92, !2497, !DIExpression(), !2856)
; call rustc_demangle::v0::Printer::skipping_printing
  call void @_ZN14rustc_demangle2v07Printer17skipping_printing17h20796fb0adcc57eaE(ptr align 4 %self) #13, !dbg !2857
  br label %bb171, !dbg !2857

bb175:                                            ; preds = %bb171
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %245 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_71343812d7fcaca5b6812055933b025d) #13, !dbg !2858
  %246 = zext i1 %245 to i8, !dbg !2858
  store i8 %246, ptr %_0, align 1, !dbg !2858
  br label %bb222, !dbg !2858

bb174:                                            ; preds = %bb171
; call rustc_demangle::v0::Printer::print_type
  %_171 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) #13, !dbg !2859
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_170 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_171) #13, !dbg !2860
  %_172 = zext i1 %_170 to i32, !dbg !2860
  %247 = trunc nuw i32 %_172 to i1, !dbg !2860
  br i1 %247, label %bb179, label %bb178, !dbg !2860

bb179:                                            ; preds = %bb174
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %248 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ef714b91865773a83baae0d30770d30e) #13, !dbg !2861
  %249 = zext i1 %248 to i8, !dbg !2861
  store i8 %249, ptr %_0, align 1, !dbg !2861
  br label %bb222, !dbg !2861

bb178:                                            ; preds = %bb174
  %250 = icmp eq i8 %tag, 77, !dbg !2862
  br i1 %250, label %bb188, label %bb180, !dbg !2862

bb188:                                            ; preds = %bb183, %bb178
; call rustc_demangle::v0::Printer::print
  %_180 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_b0f75d2f000046282f87eeb3267426fe, i32 1) #13, !dbg !2863
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_179 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_180) #13, !dbg !2864
  %_181 = zext i1 %_179 to i32, !dbg !2864
  %251 = trunc nuw i32 %_181 to i1, !dbg !2864
  br i1 %251, label %bb191, label %bb220, !dbg !2864

bb180:                                            ; preds = %bb178
; call rustc_demangle::v0::Printer::print
  %_174 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_a2519ea1fadc68f0634aad6a281b12ca, i32 4) #13, !dbg !2865
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_173 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_174) #13, !dbg !2866
  %_175 = zext i1 %_173 to i32, !dbg !2866
  %252 = trunc nuw i32 %_175 to i1, !dbg !2866
  br i1 %252, label %bb184, label %bb183, !dbg !2866

bb184:                                            ; preds = %bb180
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %253 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_519a833684c9935a887b22fe577fe5cb) #13, !dbg !2867
  %254 = zext i1 %253 to i8, !dbg !2867
  store i8 %254, ptr %_0, align 1, !dbg !2867
  br label %bb222, !dbg !2867

bb183:                                            ; preds = %bb180
; call rustc_demangle::v0::Printer::print_path
  %_177 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext false) #13, !dbg !2868
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_176 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_177) #13, !dbg !2869
  %_178 = zext i1 %_176 to i32, !dbg !2869
  %255 = trunc nuw i32 %_178 to i1, !dbg !2869
  br i1 %255, label %bb187, label %bb188, !dbg !2869

bb187:                                            ; preds = %bb183
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %256 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_0fbb26bb7219cf69c8b51dd22d98c63c) #13, !dbg !2870
  %257 = zext i1 %256 to i8, !dbg !2870
  store i8 %257, ptr %_0, align 1, !dbg !2870
  br label %bb222, !dbg !2870

bb191:                                            ; preds = %bb188
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %258 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_54fe10194026bfa38c668c297cb7dac8) #13, !dbg !2871
  %259 = zext i1 %258 to i8, !dbg !2871
  store i8 %259, ptr %_0, align 1, !dbg !2871
  br label %bb222, !dbg !2871

bb170:                                            ; preds = %bb164
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %260 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_cda98d975a02c3bf4cc8d7458ec3842d) #13, !dbg !2872
  %261 = zext i1 %260 to i8, !dbg !2872
  store i8 %261, ptr %_0, align 1, !dbg !2872
  br label %bb222, !dbg !2872

bb169:                                            ; preds = %bb164
  %262 = load i8, ptr %err8, align 1, !dbg !2873
  %263 = trunc nuw i8 %262 to i1, !dbg !2873
  %264 = getelementptr inbounds i8, ptr %_165, i32 4, !dbg !2873
  %265 = zext i1 %263 to i8, !dbg !2873
  store i8 %265, ptr %264, align 4, !dbg !2873
  store ptr null, ptr %_165, align 4, !dbg !2873
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_165, i32 16, i1 false), !dbg !2874
  store i8 0, ptr %_0, align 1, !dbg !2875
  br label %bb222, !dbg !2876

bb195:                                            ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %266 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ddcb8617e85d27b16df29a12a0784c92) #13, !dbg !2877
  %267 = zext i1 %266 to i8, !dbg !2877
  store i8 %267, ptr %_0, align 1, !dbg !2877
  br label %bb222, !dbg !2877

bb194:                                            ; preds = %bb24
  %268 = load i8, ptr %in_value, align 1, !dbg !2878
  %269 = trunc nuw i8 %268 to i1, !dbg !2878
  br i1 %269, label %bb196, label %bb200, !dbg !2878

bb200:                                            ; preds = %bb196, %bb194
; call rustc_demangle::v0::Printer::print
  %_189 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_069739ecb4f78035aca324a6dc5131a2, i32 1) #13, !dbg !2879
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_188 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_189) #13, !dbg !2880
  %_190 = zext i1 %_188 to i32, !dbg !2880
  %270 = trunc nuw i32 %_190 to i1, !dbg !2880
  br i1 %270, label %bb204, label %bb203, !dbg !2880

bb196:                                            ; preds = %bb194
; call rustc_demangle::v0::Printer::print
  %_186 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_0078f96ecbe246c9d8cda3cf01c437ac, i32 2) #13, !dbg !2881
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_185 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_186) #13, !dbg !2882
  %_187 = zext i1 %_185 to i32, !dbg !2882
  %271 = trunc nuw i32 %_187 to i1, !dbg !2882
  br i1 %271, label %bb199, label %bb200, !dbg !2882

bb199:                                            ; preds = %bb196
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %272 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_53eb17fa0f1a7b138157b7845ce97153) #13, !dbg !2883
  %273 = zext i1 %272 to i8, !dbg !2883
  store i8 %273, ptr %_0, align 1, !dbg !2883
  br label %bb222, !dbg !2883

bb204:                                            ; preds = %bb200
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %274 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_05aca42c8dd8b91e904adf7fb9c4e706) #13, !dbg !2884
  %275 = zext i1 %274 to i8, !dbg !2884
  store i8 %275, ptr %_0, align 1, !dbg !2884
  br label %bb222, !dbg !2884

bb203:                                            ; preds = %bb200
; call rustc_demangle::v0::Printer::print_sep_list
  %276 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hdf132c66be8ff57bE(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !2885
  %_192.0 = extractvalue { i32, i32 } %276, 0, !dbg !2885
  %_192.1 = extractvalue { i32, i32 } %276, 1, !dbg !2885
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %277 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_192.0, i32 %_192.1) #13, !dbg !2886
  %278 = extractvalue { i32, i32 } %277, 0, !dbg !2886
  %279 = extractvalue { i32, i32 } %277, 1, !dbg !2886
  store i32 %278, ptr %_191, align 4, !dbg !2886
  %280 = getelementptr inbounds i8, ptr %_191, i32 4, !dbg !2886
  store i32 %279, ptr %280, align 4, !dbg !2886
  %_194 = load i32, ptr %_191, align 4, !dbg !2886
  %281 = getelementptr inbounds i8, ptr %_191, i32 4, !dbg !2886
  %282 = load i32, ptr %281, align 4, !dbg !2886
  %283 = trunc nuw i32 %_194 to i1, !dbg !2886
  br i1 %283, label %bb208, label %bb207, !dbg !2886

bb208:                                            ; preds = %bb203
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %284 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_8410381529f786a540a24d6efc507447) #13, !dbg !2887
  %285 = zext i1 %284 to i8, !dbg !2887
  store i8 %285, ptr %_0, align 1, !dbg !2887
  br label %bb222, !dbg !2887

bb207:                                            ; preds = %bb203
  %286 = getelementptr inbounds i8, ptr %_191, i32 4, !dbg !2886
  %val = load i32, ptr %286, align 4, !dbg !2886
  store i32 %val, ptr %val.dbg.spill93, align 4, !dbg !2886
    #dbg_declare(ptr %val.dbg.spill93, !2539, !DIExpression(), !2888)
; call rustc_demangle::v0::Printer::print
  %_197 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_b0f75d2f000046282f87eeb3267426fe, i32 1) #13, !dbg !2889
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_196 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_197) #13, !dbg !2890
  %_198 = zext i1 %_196 to i32, !dbg !2890
  %287 = trunc nuw i32 %_198 to i1, !dbg !2890
  br i1 %287, label %bb211, label %bb220, !dbg !2890

bb211:                                            ; preds = %bb207
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %288 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_20b13634fac2b7e274a8ccb77f19b643) #13, !dbg !2891
  %289 = zext i1 %288 to i8, !dbg !2891
  store i8 %289, ptr %_0, align 1, !dbg !2891
  br label %bb222, !dbg !2891

bb214:                                            ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %290 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_8636bb08d583d94c4e1ba1612fb5c8dc) #13, !dbg !2892
  %291 = zext i1 %290 to i8, !dbg !2892
  store i8 %291, ptr %_0, align 1, !dbg !2892
  br label %bb222, !dbg !2892

bb219:                                            ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %292 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_c890f05c54c4d0dde16e63d2e15de4a4) #13, !dbg !2893
  %293 = zext i1 %292 to i8, !dbg !2893
  store i8 %293, ptr %_0, align 1, !dbg !2893
  br label %bb222, !dbg !2893

bb218:                                            ; preds = %bb22
  %294 = load i8, ptr %err9, align 1, !dbg !2894
  %295 = trunc nuw i8 %294 to i1, !dbg !2894
  %296 = getelementptr inbounds i8, ptr %_210, i32 4, !dbg !2894
  %297 = zext i1 %295 to i8, !dbg !2894
  store i8 %297, ptr %296, align 4, !dbg !2894
  store ptr null, ptr %_210, align 4, !dbg !2894
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_210, i32 16, i1 false), !dbg !2895
  store i8 0, ptr %_0, align 1, !dbg !2896
  br label %bb222, !dbg !2897

bb21:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %298 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_71adac003a90212660cc1e42776f84ff) #13, !dbg !2898
  %299 = zext i1 %298 to i8, !dbg !2898
  store i8 %299, ptr %_0, align 1, !dbg !2898
  br label %bb222, !dbg !2898

bb20:                                             ; preds = %bb15
  %300 = load i8, ptr %err1, align 1, !dbg !2899
  %301 = trunc nuw i8 %300 to i1, !dbg !2899
  %302 = getelementptr inbounds i8, ptr %_25, i32 4, !dbg !2899
  %303 = zext i1 %301 to i8, !dbg !2899
  store i8 %303, ptr %302, align 4, !dbg !2899
  store ptr null, ptr %_25, align 4, !dbg !2899
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_25, i32 16, i1 false), !dbg !2900
  store i8 0, ptr %_0, align 1, !dbg !2901
  br label %bb222, !dbg !2902

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %304 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_7065277c489a2716c458bdc11eb3cae9) #13, !dbg !2903
  %305 = zext i1 %304 to i8, !dbg !2903
  store i8 %305, ptr %_0, align 1, !dbg !2903
  br label %bb222, !dbg !2903

bb10:                                             ; preds = %bb5
  %306 = load i8, ptr %err, align 1, !dbg !2904
  %307 = trunc nuw i8 %306 to i1, !dbg !2904
  %308 = getelementptr inbounds i8, ptr %_13, i32 4, !dbg !2904
  %309 = zext i1 %307 to i8, !dbg !2904
  store i8 %309, ptr %308, align 4, !dbg !2904
  store ptr null, ptr %_13, align 4, !dbg !2904
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_13, i32 16, i1 false), !dbg !2905
  store i8 0, ptr %_0, align 1, !dbg !2906
  br label %bb222, !dbg !2907

bb1:                                              ; No predecessors!
  unreachable, !dbg !2908
}

; rustc_demangle::v0::Printer::print_path::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h1b23fdaaa8245f44E"(ptr align 1 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !2910 {
start:
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2921, !DIExpression(DW_OP_deref), !2922)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !2920, !DIExpression(), !2923)
  %0 = load i8, ptr %_1, align 1, !dbg !2924
  %_3 = trunc nuw i8 %0 to i1, !dbg !2924
; call rustc_demangle::v0::Printer::print_path
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %this, i1 zeroext %_3) #13, !dbg !2925
  ret i1 %_0, !dbg !2926
}

; rustc_demangle::v0::Printer::print_path::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h4812f5845730f013E"(ptr align 4 %this) unnamed_addr #0 !dbg !2927 {
start:
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2933, !DIExpression(), !2934)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !2932, !DIExpression(), !2935)
; call rustc_demangle::v0::Printer::print_path
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %this, i1 zeroext false) #13, !dbg !2936
  ret i1 %_0, !dbg !2937
}

; rustc_demangle::v0::Printer::print_type
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) unnamed_addr #1 !dbg !2938 {
start:
  %lt.dbg.spill72 = alloca [8 x i8], align 8
  %parser.dbg.spill70 = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %lt.dbg.spill = alloca [8 x i8], align 8
  %parser.dbg.spill69 = alloca [4 x i8], align 4
  %parser.dbg.spill68 = alloca [4 x i8], align 4
  %ty.dbg.spill = alloca [8 x i8], align 4
  %tag.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill67 = alloca [0 x i8], align 1
  %residual.dbg.spill66 = alloca [0 x i8], align 1
  %val.dbg.spill65 = alloca [0 x i8], align 1
  %residual.dbg.spill64 = alloca [0 x i8], align 1
  %val.dbg.spill63 = alloca [0 x i8], align 1
  %residual.dbg.spill62 = alloca [0 x i8], align 1
  %val.dbg.spill61 = alloca [0 x i8], align 1
  %residual.dbg.spill60 = alloca [0 x i8], align 1
  %val.dbg.spill59 = alloca [0 x i8], align 1
  %residual.dbg.spill58 = alloca [0 x i8], align 1
  %val.dbg.spill57 = alloca [0 x i8], align 1
  %residual.dbg.spill56 = alloca [0 x i8], align 1
  %val.dbg.spill55 = alloca [0 x i8], align 1
  %residual.dbg.spill54 = alloca [0 x i8], align 1
  %val.dbg.spill53 = alloca [0 x i8], align 1
  %residual.dbg.spill52 = alloca [0 x i8], align 1
  %val.dbg.spill51 = alloca [0 x i8], align 1
  %residual.dbg.spill50 = alloca [0 x i8], align 1
  %val.dbg.spill49 = alloca [0 x i8], align 1
  %residual.dbg.spill48 = alloca [0 x i8], align 1
  %val.dbg.spill47 = alloca [0 x i8], align 1
  %residual.dbg.spill46 = alloca [0 x i8], align 1
  %val.dbg.spill45 = alloca [0 x i8], align 1
  %residual.dbg.spill44 = alloca [0 x i8], align 1
  %val.dbg.spill43 = alloca [0 x i8], align 1
  %residual.dbg.spill42 = alloca [0 x i8], align 1
  %val.dbg.spill41 = alloca [0 x i8], align 1
  %residual.dbg.spill40 = alloca [0 x i8], align 1
  %residual.dbg.spill39 = alloca [0 x i8], align 1
  %val.dbg.spill38 = alloca [0 x i8], align 1
  %residual.dbg.spill37 = alloca [0 x i8], align 1
  %val.dbg.spill36 = alloca [0 x i8], align 1
  %residual.dbg.spill35 = alloca [0 x i8], align 1
  %val.dbg.spill34 = alloca [0 x i8], align 1
  %residual.dbg.spill33 = alloca [0 x i8], align 1
  %val.dbg.spill32 = alloca [0 x i8], align 1
  %residual.dbg.spill31 = alloca [0 x i8], align 1
  %val.dbg.spill30 = alloca [0 x i8], align 1
  %residual.dbg.spill29 = alloca [0 x i8], align 1
  %val.dbg.spill28 = alloca [0 x i8], align 1
  %residual.dbg.spill27 = alloca [0 x i8], align 1
  %val.dbg.spill26 = alloca [0 x i8], align 1
  %residual.dbg.spill25 = alloca [0 x i8], align 1
  %val.dbg.spill24 = alloca [0 x i8], align 1
  %residual.dbg.spill23 = alloca [0 x i8], align 1
  %val.dbg.spill22 = alloca [0 x i8], align 1
  %residual.dbg.spill21 = alloca [0 x i8], align 1
  %val.dbg.spill20 = alloca [0 x i8], align 1
  %residual.dbg.spill19 = alloca [0 x i8], align 1
  %val.dbg.spill18 = alloca [0 x i8], align 1
  %residual.dbg.spill17 = alloca [0 x i8], align 1
  %val.dbg.spill16 = alloca [0 x i8], align 1
  %residual.dbg.spill15 = alloca [0 x i8], align 1
  %val.dbg.spill14 = alloca [0 x i8], align 1
  %residual.dbg.spill13 = alloca [0 x i8], align 1
  %val.dbg.spill12 = alloca [0 x i8], align 1
  %residual.dbg.spill11 = alloca [0 x i8], align 1
  %val.dbg.spill10 = alloca [0 x i8], align 1
  %residual.dbg.spill9 = alloca [0 x i8], align 1
  %val.dbg.spill8 = alloca [0 x i8], align 1
  %residual.dbg.spill7 = alloca [0 x i8], align 1
  %val.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %x.dbg.spill = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_125 = alloca [16 x i8], align 4
  %err4 = alloca [1 x i8], align 1
  %_116 = alloca [16 x i8], align 8
  %_113 = alloca [16 x i8], align 4
  %err3 = alloca [1 x i8], align 1
  %_86 = alloca [8 x i8], align 4
  %_43 = alloca [16 x i8], align 4
  %err2 = alloca [1 x i8], align 1
  %_34 = alloca [16 x i8], align 8
  %_27 = alloca [16 x i8], align 4
  %err1 = alloca [1 x i8], align 1
  %_19 = alloca [1 x i8], align 1
  %_14 = alloca [8 x i8], align 4
  %_13 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2943, !DIExpression(), !3112)
    #dbg_declare(ptr %err, !2950, !DIExpression(), !3113)
    #dbg_declare(ptr %err1, !2962, !DIExpression(), !3114)
    #dbg_declare(ptr %err2, !2978, !DIExpression(), !3115)
    #dbg_declare(ptr %err3, !3066, !DIExpression(), !3116)
    #dbg_declare(ptr %err4, !3078, !DIExpression(), !3117)
    #dbg_declare(ptr %residual.dbg.spill, !2952, !DIExpression(), !3118)
    #dbg_declare(ptr %val.dbg.spill, !2954, !DIExpression(), !3119)
    #dbg_declare(ptr %x.dbg.spill, !2960, !DIExpression(), !3120)
    #dbg_declare(ptr %residual.dbg.spill5, !2964, !DIExpression(), !3121)
    #dbg_declare(ptr %val.dbg.spill6, !2966, !DIExpression(), !3122)
    #dbg_declare(ptr %residual.dbg.spill7, !2968, !DIExpression(), !3123)
    #dbg_declare(ptr %val.dbg.spill8, !2970, !DIExpression(), !3124)
    #dbg_declare(ptr %residual.dbg.spill9, !2980, !DIExpression(), !3125)
    #dbg_declare(ptr %val.dbg.spill10, !2982, !DIExpression(), !3126)
    #dbg_declare(ptr %residual.dbg.spill11, !2984, !DIExpression(), !3127)
    #dbg_declare(ptr %val.dbg.spill12, !2986, !DIExpression(), !3128)
    #dbg_declare(ptr %residual.dbg.spill13, !2988, !DIExpression(), !3129)
    #dbg_declare(ptr %val.dbg.spill14, !2990, !DIExpression(), !3130)
    #dbg_declare(ptr %residual.dbg.spill15, !2992, !DIExpression(), !3131)
    #dbg_declare(ptr %val.dbg.spill16, !2994, !DIExpression(), !3132)
    #dbg_declare(ptr %residual.dbg.spill17, !2996, !DIExpression(), !3133)
    #dbg_declare(ptr %val.dbg.spill18, !2998, !DIExpression(), !3134)
    #dbg_declare(ptr %residual.dbg.spill19, !3000, !DIExpression(), !3135)
    #dbg_declare(ptr %val.dbg.spill20, !3002, !DIExpression(), !3136)
    #dbg_declare(ptr %residual.dbg.spill21, !3004, !DIExpression(), !3137)
    #dbg_declare(ptr %val.dbg.spill22, !3006, !DIExpression(), !3138)
    #dbg_declare(ptr %residual.dbg.spill23, !3008, !DIExpression(), !3139)
    #dbg_declare(ptr %val.dbg.spill24, !3010, !DIExpression(), !3140)
    #dbg_declare(ptr %residual.dbg.spill25, !3012, !DIExpression(), !3141)
    #dbg_declare(ptr %val.dbg.spill26, !3014, !DIExpression(), !3142)
    #dbg_declare(ptr %residual.dbg.spill27, !3016, !DIExpression(), !3143)
    #dbg_declare(ptr %val.dbg.spill28, !3018, !DIExpression(), !3144)
    #dbg_declare(ptr %residual.dbg.spill29, !3020, !DIExpression(), !3145)
    #dbg_declare(ptr %val.dbg.spill30, !3022, !DIExpression(), !3146)
    #dbg_declare(ptr %residual.dbg.spill31, !3024, !DIExpression(), !3147)
    #dbg_declare(ptr %val.dbg.spill32, !3026, !DIExpression(), !3148)
    #dbg_declare(ptr %residual.dbg.spill33, !3028, !DIExpression(), !3149)
    #dbg_declare(ptr %val.dbg.spill34, !3030, !DIExpression(), !3150)
    #dbg_declare(ptr %residual.dbg.spill35, !3032, !DIExpression(), !3151)
    #dbg_declare(ptr %val.dbg.spill36, !3034, !DIExpression(), !3152)
    #dbg_declare(ptr %residual.dbg.spill37, !3036, !DIExpression(), !3153)
    #dbg_declare(ptr %val.dbg.spill38, !3038, !DIExpression(), !3154)
    #dbg_declare(ptr %residual.dbg.spill39, !3042, !DIExpression(), !3155)
    #dbg_declare(ptr %residual.dbg.spill40, !3046, !DIExpression(), !3156)
    #dbg_declare(ptr %val.dbg.spill41, !3048, !DIExpression(), !3157)
    #dbg_declare(ptr %residual.dbg.spill42, !3050, !DIExpression(), !3158)
    #dbg_declare(ptr %val.dbg.spill43, !3052, !DIExpression(), !3159)
    #dbg_declare(ptr %residual.dbg.spill44, !3054, !DIExpression(), !3160)
    #dbg_declare(ptr %val.dbg.spill45, !3056, !DIExpression(), !3161)
    #dbg_declare(ptr %residual.dbg.spill46, !3058, !DIExpression(), !3162)
    #dbg_declare(ptr %val.dbg.spill47, !3060, !DIExpression(), !3163)
    #dbg_declare(ptr %residual.dbg.spill48, !3062, !DIExpression(), !3164)
    #dbg_declare(ptr %val.dbg.spill49, !3064, !DIExpression(), !3165)
    #dbg_declare(ptr %residual.dbg.spill50, !3068, !DIExpression(), !3166)
    #dbg_declare(ptr %val.dbg.spill51, !3070, !DIExpression(), !3167)
    #dbg_declare(ptr %residual.dbg.spill52, !3080, !DIExpression(), !3168)
    #dbg_declare(ptr %val.dbg.spill53, !3082, !DIExpression(), !3169)
    #dbg_declare(ptr %residual.dbg.spill54, !3084, !DIExpression(), !3170)
    #dbg_declare(ptr %val.dbg.spill55, !3086, !DIExpression(), !3171)
    #dbg_declare(ptr %residual.dbg.spill56, !3088, !DIExpression(), !3172)
    #dbg_declare(ptr %val.dbg.spill57, !3090, !DIExpression(), !3173)
    #dbg_declare(ptr %residual.dbg.spill58, !3092, !DIExpression(), !3174)
    #dbg_declare(ptr %val.dbg.spill59, !3094, !DIExpression(), !3175)
    #dbg_declare(ptr %residual.dbg.spill60, !3096, !DIExpression(), !3176)
    #dbg_declare(ptr %val.dbg.spill61, !3098, !DIExpression(), !3177)
    #dbg_declare(ptr %residual.dbg.spill62, !3100, !DIExpression(), !3178)
    #dbg_declare(ptr %val.dbg.spill63, !3102, !DIExpression(), !3179)
    #dbg_declare(ptr %residual.dbg.spill64, !3104, !DIExpression(), !3180)
    #dbg_declare(ptr %val.dbg.spill65, !3106, !DIExpression(), !3181)
    #dbg_declare(ptr %residual.dbg.spill66, !3108, !DIExpression(), !3182)
    #dbg_declare(ptr %val.dbg.spill67, !3110, !DIExpression(), !3183)
  %0 = load ptr, ptr %self, align 4, !dbg !3184
  %1 = ptrtoint ptr %0 to i32, !dbg !3184
  %2 = icmp eq i32 %1, 0, !dbg !3184
  %_2 = select i1 %2, i32 1, i32 0, !dbg !3184
  %3 = trunc nuw i32 %_2 to i1, !dbg !3185
  br i1 %3, label %bb2, label %bb3, !dbg !3185

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !3186
  %5 = zext i1 %4 to i8, !dbg !3186
  store i8 %5, ptr %_0, align 1, !dbg !3186
  br label %bb177, !dbg !3186

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !3187
    #dbg_declare(ptr %parser.dbg.spill, !2946, !DIExpression(), !3188)
; call rustc_demangle::v0::Parser::next
  %6 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) #13, !dbg !3189
  %7 = extractvalue { i1, i8 } %6, 0, !dbg !3189
  %8 = extractvalue { i1, i8 } %6, 1, !dbg !3189
  %9 = zext i1 %7 to i8, !dbg !3189
  store i8 %9, ptr %_4, align 1, !dbg !3189
  %10 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !3189
  store i8 %8, ptr %10, align 1, !dbg !3189
  %11 = load i8, ptr %_4, align 1, !dbg !3190
  %12 = trunc nuw i8 %11 to i1, !dbg !3190
  %13 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !3190
  %14 = load i8, ptr %13, align 1, !dbg !3190
  %_5 = zext i1 %12 to i32, !dbg !3190
  %15 = trunc nuw i32 %_5 to i1, !dbg !3191
  br i1 %15, label %bb5, label %bb6, !dbg !3191

bb5:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !3192
  %17 = load i8, ptr %16, align 1, !dbg !3192
  %18 = trunc nuw i8 %17 to i1, !dbg !3192
  %19 = zext i1 %18 to i8, !dbg !3192
  store i8 %19, ptr %err, align 1, !dbg !3192
; call rustc_demangle::v0::ParseError::message
  %20 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !3193
  %_10.0 = extractvalue { ptr, i32 } %20, 0, !dbg !3193
  %_10.1 = extractvalue { ptr, i32 } %20, 1, !dbg !3193
; call rustc_demangle::v0::Printer::print
  %_9 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_10.0, i32 %_10.1) #13, !dbg !3194
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_8 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_9) #13, !dbg !3195
  %_12 = zext i1 %_8 to i32, !dbg !3195
  %21 = trunc nuw i32 %_12 to i1, !dbg !3195
  br i1 %21, label %bb11, label %bb10, !dbg !3195

bb6:                                              ; preds = %bb3
  %22 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !3196
  %tag = load i8, ptr %22, align 1, !dbg !3196
  store i8 %tag, ptr %tag.dbg.spill, align 1, !dbg !3196
    #dbg_declare(ptr %tag.dbg.spill, !2944, !DIExpression(), !3197)
    #dbg_declare(ptr %tag.dbg.spill, !2948, !DIExpression(), !3198)
; call rustc_demangle::v0::basic_type
  %23 = call { ptr, i32 } @_ZN14rustc_demangle2v010basic_type17h156aa3e3723135c9E(i8 %tag) #13, !dbg !3199
  %24 = extractvalue { ptr, i32 } %23, 0, !dbg !3199
  %25 = extractvalue { ptr, i32 } %23, 1, !dbg !3199
  store ptr %24, ptr %_14, align 4, !dbg !3199
  %26 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !3199
  store i32 %25, ptr %26, align 4, !dbg !3199
  %27 = load ptr, ptr %_14, align 4, !dbg !3199
  %28 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !3199
  %29 = load i32, ptr %28, align 4, !dbg !3199
  %30 = ptrtoint ptr %27 to i32, !dbg !3199
  %31 = icmp eq i32 %30, 0, !dbg !3199
  %_15 = select i1 %31, i32 0, i32 1, !dbg !3199
  %32 = trunc nuw i32 %_15 to i1, !dbg !3200
  br i1 %32, label %bb13, label %bb14, !dbg !3200

bb13:                                             ; preds = %bb6
  %ty.0 = load ptr, ptr %_14, align 4, !dbg !3201
  %33 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !3201
  %ty.1 = load i32, ptr %33, align 4, !dbg !3201
  store ptr %ty.0, ptr %ty.dbg.spill, align 4, !dbg !3201
  %34 = getelementptr inbounds i8, ptr %ty.dbg.spill, i32 4, !dbg !3201
  store i32 %ty.1, ptr %34, align 4, !dbg !3201
    #dbg_declare(ptr %ty.dbg.spill, !2956, !DIExpression(), !3201)
; call rustc_demangle::v0::Printer::print
  %35 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %ty.0, i32 %ty.1) #13, !dbg !3202
  %36 = zext i1 %35 to i8, !dbg !3202
  store i8 %36, ptr %_0, align 1, !dbg !3202
  br label %bb177, !dbg !3202

bb14:                                             ; preds = %bb6
  %37 = load ptr, ptr %self, align 4, !dbg !3203
  %38 = ptrtoint ptr %37 to i32, !dbg !3203
  %39 = icmp eq i32 %38, 0, !dbg !3203
  %_17 = select i1 %39, i32 1, i32 0, !dbg !3203
  %40 = trunc nuw i32 %_17 to i1, !dbg !3204
  br i1 %40, label %bb15, label %bb16, !dbg !3204

bb177:                                            ; preds = %bb2, %bb11, %bb10, %bb15, %bb24, %bb23, %bb174, %bb175, %bb162, %bb166, %bb169, %bb158, %bb125, %bb129, %bb138, %bb147, %bb146, %bb152, %bb155, %bb137, %bb136, %bb121, %bb106, %bb110, %bb118, %bb114, %bb86, %bb90, %bb102, %bb95, %bb98, %bb70, %bb75, %bb82, %bb78, %bb37, %bb40, %bb49, %bb48, %bb54, %bb57, %bb62, %bb66, %bb13
  %41 = load i8, ptr %_0, align 1, !dbg !3205
  %42 = trunc nuw i8 %41 to i1, !dbg !3205
  ret i1 %42, !dbg !3205

bb15:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print
  %43 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !3206
  %44 = zext i1 %43 to i8, !dbg !3206
  store i8 %44, ptr %_0, align 1, !dbg !3206
  br label %bb177, !dbg !3206

bb16:                                             ; preds = %bb14
  store ptr %self, ptr %parser.dbg.spill68, align 4, !dbg !3207
    #dbg_declare(ptr %parser.dbg.spill68, !2958, !DIExpression(), !3208)
; call rustc_demangle::v0::Parser::push_depth
  %45 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE(ptr align 4 %self) #13, !dbg !3209
  store i8 %45, ptr %_19, align 1, !dbg !3209
  %46 = load i8, ptr %_19, align 1, !dbg !3210
  %47 = icmp eq i8 %46, 2, !dbg !3210
  %_20 = select i1 %47, i32 0, i32 1, !dbg !3210
  %48 = trunc nuw i32 %_20 to i1, !dbg !3211
  br i1 %48, label %bb18, label %bb19, !dbg !3211

bb18:                                             ; preds = %bb16
  %49 = load i8, ptr %_19, align 1, !dbg !3212
  %50 = trunc nuw i8 %49 to i1, !dbg !3212
  %51 = zext i1 %50 to i8, !dbg !3212
  store i8 %51, ptr %err1, align 1, !dbg !3212
; call rustc_demangle::v0::ParseError::message
  %52 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err1) #13, !dbg !3213
  %_24.0 = extractvalue { ptr, i32 } %52, 0, !dbg !3213
  %_24.1 = extractvalue { ptr, i32 } %52, 1, !dbg !3213
; call rustc_demangle::v0::Printer::print
  %_23 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_24.0, i32 %_24.1) #13, !dbg !3214
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_22 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_23) #13, !dbg !3215
  %_26 = zext i1 %_22 to i32, !dbg !3215
  %53 = trunc nuw i32 %_26 to i1, !dbg !3215
  br i1 %53, label %bb24, label %bb23, !dbg !3215

bb19:                                             ; preds = %bb16
  switch i8 %tag, label %bb25 [
    i8 82, label %bb33
    i8 81, label %bb33
    i8 80, label %bb32
    i8 79, label %bb32
    i8 65, label %bb31
    i8 83, label %bb31
    i8 84, label %bb30
    i8 70, label %bb29
    i8 68, label %bb28
    i8 66, label %bb27
    i8 87, label %bb26
  ], !dbg !3216

bb25:                                             ; preds = %bb19
; call core::result::Result<T,E>::as_mut
  %54 = call { i32, ptr } @"_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17h801a85e9aa54c889E"(ptr align 4 %self) #13, !dbg !3217
  %_145.0 = extractvalue { i32, ptr } %54, 0, !dbg !3217
  %_145.1 = extractvalue { i32, ptr } %54, 1, !dbg !3217
; call core::result::Result<T,E>::map
  %_144 = call align 1 ptr @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h3823fcfadbccdb7eE"(i32 %_145.0, ptr %_145.1) #13, !dbg !3218
; call rustc_demangle::v0::Printer::print_path
  %_148 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext false) #13, !dbg !3219
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_147 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_148) #13, !dbg !3220
  %_149 = zext i1 %_147 to i32, !dbg !3220
  %55 = trunc nuw i32 %_149 to i1, !dbg !3220
  br i1 %55, label %bb174, label %bb175, !dbg !3220

bb33:                                             ; preds = %bb19, %bb19
; call rustc_demangle::v0::Printer::print
  %_29 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_90406cad91539dd86ffc765a92ace5f1, i32 1) #13, !dbg !3221
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_28 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_29) #13, !dbg !3222
  %_30 = zext i1 %_28 to i32, !dbg !3222
  %56 = trunc nuw i32 %_30 to i1, !dbg !3222
  br i1 %56, label %bb37, label %bb36, !dbg !3222

bb32:                                             ; preds = %bb19, %bb19
; call rustc_demangle::v0::Printer::print
  %_57 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_09f68c7ae2e79d4408ae53b7c9133001, i32 1) #13, !dbg !3223
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_56 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_57) #13, !dbg !3224
  %_58 = zext i1 %_56 to i32, !dbg !3224
  %57 = trunc nuw i32 %_58 to i1, !dbg !3224
  br i1 %57, label %bb70, label %bb69, !dbg !3224

bb31:                                             ; preds = %bb19, %bb19
; call rustc_demangle::v0::Printer::print
  %_69 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_036636151bab3754536335311c8d3ab8, i32 1) #13, !dbg !3225
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_68 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_69) #13, !dbg !3226
  %_70 = zext i1 %_68 to i32, !dbg !3226
  %58 = trunc nuw i32 %_70 to i1, !dbg !3226
  br i1 %58, label %bb86, label %bb85, !dbg !3226

bb30:                                             ; preds = %bb19
; call rustc_demangle::v0::Printer::print
  %_84 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_1ff25e6ad58d770003043bae3c4113bf, i32 1) #13, !dbg !3227
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_83 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_84) #13, !dbg !3228
  %_85 = zext i1 %_83 to i32, !dbg !3228
  %59 = trunc nuw i32 %_85 to i1, !dbg !3228
  br i1 %59, label %bb106, label %bb105, !dbg !3228

bb29:                                             ; preds = %bb19
; call rustc_demangle::v0::Printer::in_binder
  %_98 = call zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17hb1022bb763a81b78E(ptr align 4 %self) #13, !dbg !3229
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_97 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_98) #13, !dbg !3230
  %_99 = zext i1 %_97 to i32, !dbg !3230
  %60 = trunc nuw i32 %_99 to i1, !dbg !3230
  br i1 %60, label %bb121, label %bb175, !dbg !3230

bb28:                                             ; preds = %bb19
; call rustc_demangle::v0::Printer::print
  %_101 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_a829167bede50220b67c7236e0c8e10a, i32 4) #13, !dbg !3231
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_100 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_101) #13, !dbg !3232
  %_102 = zext i1 %_100 to i32, !dbg !3232
  %61 = trunc nuw i32 %_102 to i1, !dbg !3232
  br i1 %61, label %bb125, label %bb124, !dbg !3232

bb27:                                             ; preds = %bb19
; call rustc_demangle::v0::Printer::print_backref
  %_133 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h65b9b523c9004866E(ptr align 4 %self) #13, !dbg !3233
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_132 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_133) #13, !dbg !3234
  %_134 = zext i1 %_132 to i32, !dbg !3234
  %62 = trunc nuw i32 %_134 to i1, !dbg !3234
  br i1 %62, label %bb158, label %bb175, !dbg !3234

bb26:                                             ; preds = %bb19
; call rustc_demangle::v0::Printer::print_type
  %_136 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) #13, !dbg !3235
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_135 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_136) #13, !dbg !3236
  %_137 = zext i1 %_135 to i32, !dbg !3236
  %63 = trunc nuw i32 %_137 to i1, !dbg !3236
  br i1 %63, label %bb162, label %bb161, !dbg !3236

bb37:                                             ; preds = %bb33
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %64 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_e7cd09c1ce875bea82e464b9898b1e0f) #13, !dbg !3237
  %65 = zext i1 %64 to i8, !dbg !3237
  store i8 %65, ptr %_0, align 1, !dbg !3237
  br label %bb177, !dbg !3237

bb36:                                             ; preds = %bb33
; call rustc_demangle::v0::Printer::eat
  %_31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 76) #13, !dbg !3238
  br i1 %_31, label %bb39, label %bb58, !dbg !3239

bb58:                                             ; preds = %bb53, %bb44, %bb36
  %66 = icmp eq i8 %tag, 82, !dbg !3240
  br i1 %66, label %bb63, label %bb59, !dbg !3240

bb39:                                             ; preds = %bb36
  %67 = load ptr, ptr %self, align 4, !dbg !3203
  %68 = ptrtoint ptr %67 to i32, !dbg !3203
  %69 = icmp eq i32 %68, 0, !dbg !3203
  %_32 = select i1 %69, i32 1, i32 0, !dbg !3203
  %70 = trunc nuw i32 %_32 to i1, !dbg !3204
  br i1 %70, label %bb40, label %bb41, !dbg !3204

bb40:                                             ; preds = %bb39
; call rustc_demangle::v0::Printer::print
  %71 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !3206
  %72 = zext i1 %71 to i8, !dbg !3206
  store i8 %72, ptr %_0, align 1, !dbg !3206
  br label %bb177, !dbg !3206

bb41:                                             ; preds = %bb39
  store ptr %self, ptr %parser.dbg.spill69, align 4, !dbg !3207
    #dbg_declare(ptr %parser.dbg.spill69, !2974, !DIExpression(), !3241)
; call rustc_demangle::v0::Parser::integer_62
  call void @_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE(ptr sret([16 x i8]) align 8 %_34, ptr align 4 %self) #13, !dbg !3242
  %73 = load i8, ptr %_34, align 8, !dbg !3243
  %74 = trunc nuw i8 %73 to i1, !dbg !3243
  %_35 = zext i1 %74 to i32, !dbg !3243
  %75 = trunc nuw i32 %_35 to i1, !dbg !3244
  br i1 %75, label %bb43, label %bb44, !dbg !3244

bb43:                                             ; preds = %bb41
  %76 = getelementptr inbounds i8, ptr %_34, i32 1, !dbg !3245
  %77 = load i8, ptr %76, align 1, !dbg !3245
  %78 = trunc nuw i8 %77 to i1, !dbg !3245
  %79 = zext i1 %78 to i8, !dbg !3245
  store i8 %79, ptr %err2, align 1, !dbg !3245
; call rustc_demangle::v0::ParseError::message
  %80 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err2) #13, !dbg !3246
  %_40.0 = extractvalue { ptr, i32 } %80, 0, !dbg !3246
  %_40.1 = extractvalue { ptr, i32 } %80, 1, !dbg !3246
; call rustc_demangle::v0::Printer::print
  %_39 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_40.0, i32 %_40.1) #13, !dbg !3247
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_38 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_39) #13, !dbg !3248
  %_42 = zext i1 %_38 to i32, !dbg !3248
  %81 = trunc nuw i32 %_42 to i1, !dbg !3248
  br i1 %81, label %bb49, label %bb48, !dbg !3248

bb44:                                             ; preds = %bb41
  %82 = getelementptr inbounds i8, ptr %_34, i32 8, !dbg !3249
  %lt = load i64, ptr %82, align 8, !dbg !3249
  store i64 %lt, ptr %lt.dbg.spill, align 8, !dbg !3249
    #dbg_declare(ptr %lt.dbg.spill, !2972, !DIExpression(), !3250)
    #dbg_declare(ptr %lt.dbg.spill, !2976, !DIExpression(), !3251)
  %83 = icmp eq i64 %lt, 0, !dbg !3252
  br i1 %83, label %bb58, label %bb50, !dbg !3252

bb50:                                             ; preds = %bb44
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %_45 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E(ptr align 4 %self, i64 %lt) #13, !dbg !3253
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_44 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_45) #13, !dbg !3254
  %_46 = zext i1 %_44 to i32, !dbg !3254
  %84 = trunc nuw i32 %_46 to i1, !dbg !3254
  br i1 %84, label %bb54, label %bb53, !dbg !3254

bb54:                                             ; preds = %bb50
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %85 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d0797cc105afc10a107cf5ae93ae596d) #13, !dbg !3255
  %86 = zext i1 %85 to i8, !dbg !3255
  store i8 %86, ptr %_0, align 1, !dbg !3255
  br label %bb177, !dbg !3255

bb53:                                             ; preds = %bb50
; call rustc_demangle::v0::Printer::print
  %_48 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_0242e8ee118de705af76c627590b82cc, i32 1) #13, !dbg !3256
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_47 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_48) #13, !dbg !3257
  %_49 = zext i1 %_47 to i32, !dbg !3257
  %87 = trunc nuw i32 %_49 to i1, !dbg !3257
  br i1 %87, label %bb57, label %bb58, !dbg !3257

bb57:                                             ; preds = %bb53
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %88 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_70c137d977440624ace6e11f24f8617d) #13, !dbg !3258
  %89 = zext i1 %88 to i8, !dbg !3258
  store i8 %89, ptr %_0, align 1, !dbg !3258
  br label %bb177, !dbg !3258

bb63:                                             ; preds = %bb59, %bb58
; call rustc_demangle::v0::Printer::print_type
  %_54 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) #13, !dbg !3259
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_53 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_54) #13, !dbg !3260
  %_55 = zext i1 %_53 to i32, !dbg !3260
  %90 = trunc nuw i32 %_55 to i1, !dbg !3260
  br i1 %90, label %bb66, label %bb175, !dbg !3260

bb59:                                             ; preds = %bb58
; call rustc_demangle::v0::Printer::print
  %_51 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_4543a0c9d8502324cad8b2ffa53f8557, i32 4) #13, !dbg !3261
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_50 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_51) #13, !dbg !3262
  %_52 = zext i1 %_50 to i32, !dbg !3262
  %91 = trunc nuw i32 %_52 to i1, !dbg !3262
  br i1 %91, label %bb62, label %bb63, !dbg !3262

bb62:                                             ; preds = %bb59
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %92 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_22b4592a16bee36a5db37d3e31e16080) #13, !dbg !3263
  %93 = zext i1 %92 to i8, !dbg !3263
  store i8 %93, ptr %_0, align 1, !dbg !3263
  br label %bb177, !dbg !3263

bb66:                                             ; preds = %bb63
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %94 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_4336d2da2ff187b97a7d0d6bee830d25) #13, !dbg !3264
  %95 = zext i1 %94 to i8, !dbg !3264
  store i8 %95, ptr %_0, align 1, !dbg !3264
  br label %bb177, !dbg !3264

bb175:                                            ; preds = %bb25, %bb165, %bb27, %bb151, %bb142, %bb29, %bb115, %bb99, %bb79, %bb63
; call rustc_demangle::v0::Printer::pop_depth
  call void @_ZN14rustc_demangle2v07Printer9pop_depth17ha25b3c4e0a438db8E(ptr align 4 %self) #13, !dbg !3265
  store i8 0, ptr %_0, align 1, !dbg !3266
  br label %bb177, !dbg !3205

bb49:                                             ; preds = %bb43
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %96 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_45f1abad4da9d5f3f1e76ebd2b4ddaed) #13, !dbg !3267
  %97 = zext i1 %96 to i8, !dbg !3267
  store i8 %97, ptr %_0, align 1, !dbg !3267
  br label %bb177, !dbg !3267

bb48:                                             ; preds = %bb43
  %98 = load i8, ptr %err2, align 1, !dbg !3268
  %99 = trunc nuw i8 %98 to i1, !dbg !3268
  %100 = getelementptr inbounds i8, ptr %_43, i32 4, !dbg !3268
  %101 = zext i1 %99 to i8, !dbg !3268
  store i8 %101, ptr %100, align 4, !dbg !3268
  store ptr null, ptr %_43, align 4, !dbg !3268
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_43, i32 16, i1 false), !dbg !3269
  store i8 0, ptr %_0, align 1, !dbg !3270
  br label %bb177, !dbg !3271

bb70:                                             ; preds = %bb32
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %102 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_5c33c218596c8edf2cdd49e1aab389da) #13, !dbg !3272
  %103 = zext i1 %102 to i8, !dbg !3272
  store i8 %103, ptr %_0, align 1, !dbg !3272
  br label %bb177, !dbg !3272

bb69:                                             ; preds = %bb32
  %104 = icmp eq i8 %tag, 80, !dbg !3273
  br i1 %104, label %bb72, label %bb71, !dbg !3273

bb72:                                             ; preds = %bb69
; call rustc_demangle::v0::Printer::print
  %_63 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_0afa2bdf9a2fea4f2e3cb5846009f9d9, i32 6) #13, !dbg !3274
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_62 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_63) #13, !dbg !3275
  %_64 = zext i1 %_62 to i32, !dbg !3275
  %105 = trunc nuw i32 %_64 to i1, !dbg !3275
  br i1 %105, label %bb78, label %bb79, !dbg !3275

bb71:                                             ; preds = %bb69
; call rustc_demangle::v0::Printer::print
  %_60 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_4543a0c9d8502324cad8b2ffa53f8557, i32 4) #13, !dbg !3276
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_59 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_60) #13, !dbg !3277
  %_61 = zext i1 %_59 to i32, !dbg !3277
  %106 = trunc nuw i32 %_61 to i1, !dbg !3277
  br i1 %106, label %bb75, label %bb79, !dbg !3277

bb78:                                             ; preds = %bb72
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %107 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_bd4c8d17e49824a3ac78616fa70560e0) #13, !dbg !3278
  %108 = zext i1 %107 to i8, !dbg !3278
  store i8 %108, ptr %_0, align 1, !dbg !3278
  br label %bb177, !dbg !3278

bb79:                                             ; preds = %bb71, %bb72
; call rustc_demangle::v0::Printer::print_type
  %_66 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) #13, !dbg !3279
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_65 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_66) #13, !dbg !3280
  %_67 = zext i1 %_65 to i32, !dbg !3280
  %109 = trunc nuw i32 %_67 to i1, !dbg !3280
  br i1 %109, label %bb82, label %bb175, !dbg !3280

bb75:                                             ; preds = %bb71
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %110 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_4a74b97ab84933bbdc9a2acd5cd27965) #13, !dbg !3281
  %111 = zext i1 %110 to i8, !dbg !3281
  store i8 %111, ptr %_0, align 1, !dbg !3281
  br label %bb177, !dbg !3281

bb82:                                             ; preds = %bb79
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %112 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_c4daa44c23d57978b99038632c9ccbc0) #13, !dbg !3282
  %113 = zext i1 %112 to i8, !dbg !3282
  store i8 %113, ptr %_0, align 1, !dbg !3282
  br label %bb177, !dbg !3282

bb86:                                             ; preds = %bb31
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %114 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f0221c65c8558493a3dd812e8e7980d1) #13, !dbg !3283
  %115 = zext i1 %114 to i8, !dbg !3283
  store i8 %115, ptr %_0, align 1, !dbg !3283
  br label %bb177, !dbg !3283

bb85:                                             ; preds = %bb31
; call rustc_demangle::v0::Printer::print_type
  %_72 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) #13, !dbg !3284
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_71 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_72) #13, !dbg !3285
  %_73 = zext i1 %_71 to i32, !dbg !3285
  %116 = trunc nuw i32 %_73 to i1, !dbg !3285
  br i1 %116, label %bb90, label %bb89, !dbg !3285

bb90:                                             ; preds = %bb85
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %117 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9ac81c02bf32f110e736d715cf8339a0) #13, !dbg !3286
  %118 = zext i1 %117 to i8, !dbg !3286
  store i8 %118, ptr %_0, align 1, !dbg !3286
  br label %bb177, !dbg !3286

bb89:                                             ; preds = %bb85
  %119 = icmp eq i8 %tag, 65, !dbg !3287
  br i1 %119, label %bb91, label %bb99, !dbg !3287

bb91:                                             ; preds = %bb89
; call rustc_demangle::v0::Printer::print
  %_75 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_5de0042c26ac0fa48900f046c47bd77b, i32 2) #13, !dbg !3288
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_74 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_75) #13, !dbg !3289
  %_76 = zext i1 %_74 to i32, !dbg !3289
  %120 = trunc nuw i32 %_76 to i1, !dbg !3289
  br i1 %120, label %bb95, label %bb94, !dbg !3289

bb99:                                             ; preds = %bb94, %bb89
; call rustc_demangle::v0::Printer::print
  %_81 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_7a6887ef0f93938f57a4bb958cf80311, i32 1) #13, !dbg !3290
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_80 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_81) #13, !dbg !3291
  %_82 = zext i1 %_80 to i32, !dbg !3291
  %121 = trunc nuw i32 %_82 to i1, !dbg !3291
  br i1 %121, label %bb102, label %bb175, !dbg !3291

bb95:                                             ; preds = %bb91
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %122 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a87c510a6400e1b5e5587c963b849354) #13, !dbg !3292
  %123 = zext i1 %122 to i8, !dbg !3292
  store i8 %123, ptr %_0, align 1, !dbg !3292
  br label %bb177, !dbg !3292

bb94:                                             ; preds = %bb91
; call rustc_demangle::v0::Printer::print_const
  %_78 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %self, i1 zeroext true) #13, !dbg !3293
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_77 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_78) #13, !dbg !3294
  %_79 = zext i1 %_77 to i32, !dbg !3294
  %124 = trunc nuw i32 %_79 to i1, !dbg !3294
  br i1 %124, label %bb98, label %bb99, !dbg !3294

bb98:                                             ; preds = %bb94
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %125 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_85594c4da6259664ce9b4b6f156e572c) #13, !dbg !3295
  %126 = zext i1 %125 to i8, !dbg !3295
  store i8 %126, ptr %_0, align 1, !dbg !3295
  br label %bb177, !dbg !3295

bb102:                                            ; preds = %bb99
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %127 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9affada7652f5db271f6afb3d5ca5785) #13, !dbg !3296
  %128 = zext i1 %127 to i8, !dbg !3296
  store i8 %128, ptr %_0, align 1, !dbg !3296
  br label %bb177, !dbg !3296

bb106:                                            ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %129 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_3648faee4f7273d3de54cba23a62d90b) #13, !dbg !3297
  %130 = zext i1 %129 to i8, !dbg !3297
  store i8 %130, ptr %_0, align 1, !dbg !3297
  br label %bb177, !dbg !3297

bb105:                                            ; preds = %bb30
; call rustc_demangle::v0::Printer::print_sep_list
  %131 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hee9770f90521c53fE(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !3298
  %_87.0 = extractvalue { i32, i32 } %131, 0, !dbg !3298
  %_87.1 = extractvalue { i32, i32 } %131, 1, !dbg !3298
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %132 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_87.0, i32 %_87.1) #13, !dbg !3299
  %133 = extractvalue { i32, i32 } %132, 0, !dbg !3299
  %134 = extractvalue { i32, i32 } %132, 1, !dbg !3299
  store i32 %133, ptr %_86, align 4, !dbg !3299
  %135 = getelementptr inbounds i8, ptr %_86, i32 4, !dbg !3299
  store i32 %134, ptr %135, align 4, !dbg !3299
  %_89 = load i32, ptr %_86, align 4, !dbg !3299
  %136 = getelementptr inbounds i8, ptr %_86, i32 4, !dbg !3299
  %137 = load i32, ptr %136, align 4, !dbg !3299
  %138 = trunc nuw i32 %_89 to i1, !dbg !3299
  br i1 %138, label %bb110, label %bb109, !dbg !3299

bb110:                                            ; preds = %bb105
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %139 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_db015d4450b93e850d1e9750fdff1c2e) #13, !dbg !3300
  %140 = zext i1 %139 to i8, !dbg !3300
  store i8 %140, ptr %_0, align 1, !dbg !3300
  br label %bb177, !dbg !3300

bb109:                                            ; preds = %bb105
  %141 = getelementptr inbounds i8, ptr %_86, i32 4, !dbg !3299
  %count = load i32, ptr %141, align 4, !dbg !3299
  store i32 %count, ptr %count.dbg.spill, align 4, !dbg !3299
    #dbg_declare(ptr %count.dbg.spill, !3040, !DIExpression(), !3301)
    #dbg_declare(ptr %count.dbg.spill, !3044, !DIExpression(), !3302)
  %142 = icmp eq i32 %count, 1, !dbg !3303
  br i1 %142, label %bb111, label %bb115, !dbg !3303

bb111:                                            ; preds = %bb109
; call rustc_demangle::v0::Printer::print
  %_92 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_41a776d8d06dc2b9b0480e88fa257ffe, i32 1) #13, !dbg !3304
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_91 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_92) #13, !dbg !3305
  %_93 = zext i1 %_91 to i32, !dbg !3305
  %143 = trunc nuw i32 %_93 to i1, !dbg !3305
  br i1 %143, label %bb114, label %bb115, !dbg !3305

bb115:                                            ; preds = %bb111, %bb109
; call rustc_demangle::v0::Printer::print
  %_95 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_9e3f62b0e6490cc45676dc85f910c2d0, i32 1) #13, !dbg !3306
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_94 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_95) #13, !dbg !3307
  %_96 = zext i1 %_94 to i32, !dbg !3307
  %144 = trunc nuw i32 %_96 to i1, !dbg !3307
  br i1 %144, label %bb118, label %bb175, !dbg !3307

bb114:                                            ; preds = %bb111
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %145 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_0b023ef5c66b686bfdbf1660724c4612) #13, !dbg !3308
  %146 = zext i1 %145 to i8, !dbg !3308
  store i8 %146, ptr %_0, align 1, !dbg !3308
  br label %bb177, !dbg !3308

bb118:                                            ; preds = %bb115
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %147 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d239924077cb84cbb1741425d3439ae4) #13, !dbg !3309
  %148 = zext i1 %147 to i8, !dbg !3309
  store i8 %148, ptr %_0, align 1, !dbg !3309
  br label %bb177, !dbg !3309

bb121:                                            ; preds = %bb29
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %149 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_bb87aed718dd3166b7b85417c0acd458) #13, !dbg !3310
  %150 = zext i1 %149 to i8, !dbg !3310
  store i8 %150, ptr %_0, align 1, !dbg !3310
  br label %bb177, !dbg !3310

bb125:                                            ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %151 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_563758920a9374918d64fcdb380348f9) #13, !dbg !3311
  %152 = zext i1 %151 to i8, !dbg !3311
  store i8 %152, ptr %_0, align 1, !dbg !3311
  br label %bb177, !dbg !3311

bb124:                                            ; preds = %bb28
; call rustc_demangle::v0::Printer::in_binder
  %_104 = call zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17h4730f4302cbba6d1E(ptr align 4 %self) #13, !dbg !3312
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_103 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_104) #13, !dbg !3313
  %_105 = zext i1 %_103 to i32, !dbg !3313
  %153 = trunc nuw i32 %_105 to i1, !dbg !3313
  br i1 %153, label %bb129, label %bb128, !dbg !3313

bb129:                                            ; preds = %bb124
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %154 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_0f9d095b4bccc49cf70096120f65276d) #13, !dbg !3314
  %155 = zext i1 %154 to i8, !dbg !3314
  store i8 %155, ptr %_0, align 1, !dbg !3314
  br label %bb177, !dbg !3314

bb128:                                            ; preds = %bb124
; call rustc_demangle::v0::Printer::eat
  %_106 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 76) #13, !dbg !3315
  br i1 %_106, label %bb131, label %bb132, !dbg !3316

bb132:                                            ; preds = %bb128
  store i8 0, ptr %err3, align 1, !dbg !3317
; call rustc_demangle::v0::ParseError::message
  %156 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err3) #13, !dbg !3318
  %_110.0 = extractvalue { ptr, i32 } %156, 0, !dbg !3318
  %_110.1 = extractvalue { ptr, i32 } %156, 1, !dbg !3318
; call rustc_demangle::v0::Printer::print
  %_109 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_110.0, i32 %_110.1) #13, !dbg !3319
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_108 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_109) #13, !dbg !3320
  %_112 = zext i1 %_108 to i32, !dbg !3320
  %157 = trunc nuw i32 %_112 to i1, !dbg !3320
  br i1 %157, label %bb137, label %bb136, !dbg !3320

bb131:                                            ; preds = %bb128
  %158 = load ptr, ptr %self, align 4, !dbg !3203
  %159 = ptrtoint ptr %158 to i32, !dbg !3203
  %160 = icmp eq i32 %159, 0, !dbg !3203
  %_114 = select i1 %160, i32 1, i32 0, !dbg !3203
  %161 = trunc nuw i32 %_114 to i1, !dbg !3204
  br i1 %161, label %bb138, label %bb139, !dbg !3204

bb137:                                            ; preds = %bb132
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %162 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_af9ae64d7cd643006f4ba33848c5623e) #13, !dbg !3321
  %163 = zext i1 %162 to i8, !dbg !3321
  store i8 %163, ptr %_0, align 1, !dbg !3321
  br label %bb177, !dbg !3321

bb136:                                            ; preds = %bb132
  %164 = load i8, ptr %err3, align 1, !dbg !3322
  %165 = trunc nuw i8 %164 to i1, !dbg !3322
  %166 = getelementptr inbounds i8, ptr %_113, i32 4, !dbg !3322
  %167 = zext i1 %165 to i8, !dbg !3322
  store i8 %167, ptr %166, align 4, !dbg !3322
  store ptr null, ptr %_113, align 4, !dbg !3322
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_113, i32 16, i1 false), !dbg !3323
  store i8 0, ptr %_0, align 1, !dbg !3324
  br label %bb177, !dbg !3325

bb138:                                            ; preds = %bb131
; call rustc_demangle::v0::Printer::print
  %168 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !3206
  %169 = zext i1 %168 to i8, !dbg !3206
  store i8 %169, ptr %_0, align 1, !dbg !3206
  br label %bb177, !dbg !3206

bb139:                                            ; preds = %bb131
  store ptr %self, ptr %parser.dbg.spill70, align 4, !dbg !3207
    #dbg_declare(ptr %parser.dbg.spill70, !3074, !DIExpression(), !3326)
; call rustc_demangle::v0::Parser::integer_62
  call void @_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE(ptr sret([16 x i8]) align 8 %_116, ptr align 4 %self) #13, !dbg !3327
  %170 = load i8, ptr %_116, align 8, !dbg !3328
  %171 = trunc nuw i8 %170 to i1, !dbg !3328
  %_117 = zext i1 %171 to i32, !dbg !3328
  %172 = trunc nuw i32 %_117 to i1, !dbg !3329
  br i1 %172, label %bb141, label %bb142, !dbg !3329

bb141:                                            ; preds = %bb139
  %173 = getelementptr inbounds i8, ptr %_116, i32 1, !dbg !3330
  %174 = load i8, ptr %173, align 1, !dbg !3330
  %175 = trunc nuw i8 %174 to i1, !dbg !3330
  %176 = zext i1 %175 to i8, !dbg !3330
  store i8 %176, ptr %err4, align 1, !dbg !3330
; call rustc_demangle::v0::ParseError::message
  %177 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err4) #13, !dbg !3331
  %_122.0 = extractvalue { ptr, i32 } %177, 0, !dbg !3331
  %_122.1 = extractvalue { ptr, i32 } %177, 1, !dbg !3331
; call rustc_demangle::v0::Printer::print
  %_121 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_122.0, i32 %_122.1) #13, !dbg !3332
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_120 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_121) #13, !dbg !3333
  %_124 = zext i1 %_120 to i32, !dbg !3333
  %178 = trunc nuw i32 %_124 to i1, !dbg !3333
  br i1 %178, label %bb147, label %bb146, !dbg !3333

bb142:                                            ; preds = %bb139
  %179 = getelementptr inbounds i8, ptr %_116, i32 8, !dbg !3334
  %lt71 = load i64, ptr %179, align 8, !dbg !3334
  store i64 %lt71, ptr %lt.dbg.spill72, align 8, !dbg !3334
    #dbg_declare(ptr %lt.dbg.spill72, !3072, !DIExpression(), !3335)
    #dbg_declare(ptr %lt.dbg.spill72, !3076, !DIExpression(), !3336)
  %180 = icmp eq i64 %lt71, 0, !dbg !3337
  br i1 %180, label %bb175, label %bb148, !dbg !3337

bb148:                                            ; preds = %bb142
; call rustc_demangle::v0::Printer::print
  %_127 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_7dfda8f4ef3bc65bd5aae61db4a0d2cf, i32 3) #13, !dbg !3338
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_126 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_127) #13, !dbg !3339
  %_128 = zext i1 %_126 to i32, !dbg !3339
  %181 = trunc nuw i32 %_128 to i1, !dbg !3339
  br i1 %181, label %bb152, label %bb151, !dbg !3339

bb152:                                            ; preds = %bb148
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %182 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b410616e6c5ac2400c0994d3b350d88f) #13, !dbg !3340
  %183 = zext i1 %182 to i8, !dbg !3340
  store i8 %183, ptr %_0, align 1, !dbg !3340
  br label %bb177, !dbg !3340

bb151:                                            ; preds = %bb148
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %_130 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E(ptr align 4 %self, i64 %lt71) #13, !dbg !3341
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_129 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_130) #13, !dbg !3342
  %_131 = zext i1 %_129 to i32, !dbg !3342
  %184 = trunc nuw i32 %_131 to i1, !dbg !3342
  br i1 %184, label %bb155, label %bb175, !dbg !3342

bb155:                                            ; preds = %bb151
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %185 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b38d7e1becd01bafc23519d9ae72b947) #13, !dbg !3343
  %186 = zext i1 %185 to i8, !dbg !3343
  store i8 %186, ptr %_0, align 1, !dbg !3343
  br label %bb177, !dbg !3343

bb147:                                            ; preds = %bb141
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %187 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_28c68034091b198546c29eaab34fbcfa) #13, !dbg !3344
  %188 = zext i1 %187 to i8, !dbg !3344
  store i8 %188, ptr %_0, align 1, !dbg !3344
  br label %bb177, !dbg !3344

bb146:                                            ; preds = %bb141
  %189 = load i8, ptr %err4, align 1, !dbg !3345
  %190 = trunc nuw i8 %189 to i1, !dbg !3345
  %191 = getelementptr inbounds i8, ptr %_125, i32 4, !dbg !3345
  %192 = zext i1 %190 to i8, !dbg !3345
  store i8 %192, ptr %191, align 4, !dbg !3345
  store ptr null, ptr %_125, align 4, !dbg !3345
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_125, i32 16, i1 false), !dbg !3346
  store i8 0, ptr %_0, align 1, !dbg !3347
  br label %bb177, !dbg !3348

bb158:                                            ; preds = %bb27
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %193 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_fb47d9db3cc27c60ad0fc6d6e3f19f8c) #13, !dbg !3349
  %194 = zext i1 %193 to i8, !dbg !3349
  store i8 %194, ptr %_0, align 1, !dbg !3349
  br label %bb177, !dbg !3349

bb162:                                            ; preds = %bb26
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %195 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_5a7c889e380b0a488de60ea6b7099409) #13, !dbg !3350
  %196 = zext i1 %195 to i8, !dbg !3350
  store i8 %196, ptr %_0, align 1, !dbg !3350
  br label %bb177, !dbg !3350

bb161:                                            ; preds = %bb26
; call rustc_demangle::v0::Printer::print
  %_139 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_c78a450e571c59bd9864ddd59ec6978c, i32 4) #13, !dbg !3351
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_138 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_139) #13, !dbg !3352
  %_140 = zext i1 %_138 to i32, !dbg !3352
  %197 = trunc nuw i32 %_140 to i1, !dbg !3352
  br i1 %197, label %bb166, label %bb165, !dbg !3352

bb166:                                            ; preds = %bb161
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %198 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a2e6b4ca3e3b5209a800f50364b9eb5a) #13, !dbg !3353
  %199 = zext i1 %198 to i8, !dbg !3353
  store i8 %199, ptr %_0, align 1, !dbg !3353
  br label %bb177, !dbg !3353

bb165:                                            ; preds = %bb161
; call rustc_demangle::v0::Printer::print_pat
  %_142 = call zeroext i1 @_ZN14rustc_demangle2v07Printer9print_pat17h18ec7f9bb765c837E(ptr align 4 %self) #13, !dbg !3354
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_141 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_142) #13, !dbg !3355
  %_143 = zext i1 %_141 to i32, !dbg !3355
  %200 = trunc nuw i32 %_143 to i1, !dbg !3355
  br i1 %200, label %bb169, label %bb175, !dbg !3355

bb169:                                            ; preds = %bb165
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %201 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f7481220c4027f2628f2755cdf8f1339) #13, !dbg !3356
  %202 = zext i1 %201 to i8, !dbg !3356
  store i8 %202, ptr %_0, align 1, !dbg !3356
  br label %bb177, !dbg !3356

bb174:                                            ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %203 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_3c0d3bee421bab906c628431f2a67524) #13, !dbg !3357
  %204 = zext i1 %203 to i8, !dbg !3357
  store i8 %204, ptr %_0, align 1, !dbg !3357
  br label %bb177, !dbg !3357

bb24:                                             ; preds = %bb18
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %205 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_5d9c185165fcedca57ee9fa3c7b48763) #13, !dbg !3358
  %206 = zext i1 %205 to i8, !dbg !3358
  store i8 %206, ptr %_0, align 1, !dbg !3358
  br label %bb177, !dbg !3358

bb23:                                             ; preds = %bb18
  %207 = load i8, ptr %err1, align 1, !dbg !3359
  %208 = trunc nuw i8 %207 to i1, !dbg !3359
  %209 = getelementptr inbounds i8, ptr %_27, i32 4, !dbg !3359
  %210 = zext i1 %208 to i8, !dbg !3359
  store i8 %210, ptr %209, align 4, !dbg !3359
  store ptr null, ptr %_27, align 4, !dbg !3359
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_27, i32 16, i1 false), !dbg !3360
  store i8 0, ptr %_0, align 1, !dbg !3361
  br label %bb177, !dbg !3362

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %211 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_67a674df87cf332b15212e05190fbe7a) #13, !dbg !3363
  %212 = zext i1 %211 to i8, !dbg !3363
  store i8 %212, ptr %_0, align 1, !dbg !3363
  br label %bb177, !dbg !3363

bb10:                                             ; preds = %bb5
  %213 = load i8, ptr %err, align 1, !dbg !3364
  %214 = trunc nuw i8 %213 to i1, !dbg !3364
  %215 = getelementptr inbounds i8, ptr %_13, i32 4, !dbg !3364
  %216 = zext i1 %214 to i8, !dbg !3364
  store i8 %216, ptr %215, align 4, !dbg !3364
  store ptr null, ptr %_13, align 4, !dbg !3364
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_13, i32 16, i1 false), !dbg !3365
  store i8 0, ptr %_0, align 1, !dbg !3366
  br label %bb177, !dbg !3367

bb1:                                              ; No predecessors!
  unreachable, !dbg !3368
}

; rustc_demangle::v0::Printer::print_type::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h220257e452c6950fE"(ptr align 4 %this) unnamed_addr #0 !dbg !3370 {
start:
  %val.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [0 x i8], align 1
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !3381, !DIExpression(), !3382)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !3376, !DIExpression(), !3383)
    #dbg_declare(ptr %residual.dbg.spill, !3377, !DIExpression(), !3384)
; call rustc_demangle::v0::Printer::print_sep_list
  %0 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h4feeef1dc361b87fE(ptr align 4 %this, ptr align 1 @alloc_7dfda8f4ef3bc65bd5aae61db4a0d2cf, i32 3) #13, !dbg !3385
  %_4.0 = extractvalue { i32, i32 } %0, 0, !dbg !3385
  %_4.1 = extractvalue { i32, i32 } %0, 1, !dbg !3385
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %1 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_4.0, i32 %_4.1) #13, !dbg !3386
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !3386
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !3386
  store i32 %2, ptr %_3, align 4, !dbg !3386
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !3386
  store i32 %3, ptr %4, align 4, !dbg !3386
  %_6 = load i32, ptr %_3, align 4, !dbg !3386
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !3386
  %6 = load i32, ptr %5, align 4, !dbg !3386
  %7 = trunc nuw i32 %_6 to i1, !dbg !3386
  br i1 %7, label %bb5, label %bb4, !dbg !3386

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a1c2895327a128585bd907162fcbcc7e) #13, !dbg !3387
  %9 = zext i1 %8 to i8, !dbg !3387
  store i8 %9, ptr %_0, align 1, !dbg !3387
  br label %bb6, !dbg !3387

bb4:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !3386
  %val = load i32, ptr %10, align 4, !dbg !3386
  store i32 %val, ptr %val.dbg.spill, align 4, !dbg !3386
    #dbg_declare(ptr %val.dbg.spill, !3379, !DIExpression(), !3388)
  store i8 0, ptr %_0, align 1, !dbg !3389
  br label %bb6, !dbg !3390

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i8, ptr %_0, align 1, !dbg !3390
  %12 = trunc nuw i8 %11 to i1, !dbg !3390
  ret i1 %12, !dbg !3390

bb3:                                              ; No predecessors!
  unreachable, !dbg !3386
}

; rustc_demangle::v0::Printer::print_type::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h6f6409beafbd7d6dE"(ptr align 4 %this) unnamed_addr #0 !dbg !3391 {
start:
  %val.dbg.spill.i = alloca [8 x i8], align 4
  %self.i = alloca [8 x i8], align 4
  %val.dbg.spill26 = alloca [4 x i8], align 4
  %part.dbg.spill = alloca [8 x i8], align 4
  %abi.dbg.spill = alloca [8 x i8], align 4
  %parser.dbg.spill = alloca [4 x i8], align 4
  %is_unsafe.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill25 = alloca [0 x i8], align 1
  %residual.dbg.spill24 = alloca [0 x i8], align 1
  %val.dbg.spill23 = alloca [0 x i8], align 1
  %residual.dbg.spill22 = alloca [0 x i8], align 1
  %val.dbg.spill21 = alloca [0 x i8], align 1
  %residual.dbg.spill20 = alloca [0 x i8], align 1
  %residual.dbg.spill19 = alloca [0 x i8], align 1
  %val.dbg.spill18 = alloca [0 x i8], align 1
  %residual.dbg.spill17 = alloca [0 x i8], align 1
  %val.dbg.spill16 = alloca [0 x i8], align 1
  %residual.dbg.spill15 = alloca [0 x i8], align 1
  %val.dbg.spill14 = alloca [0 x i8], align 1
  %residual.dbg.spill13 = alloca [0 x i8], align 1
  %val.dbg.spill12 = alloca [0 x i8], align 1
  %residual.dbg.spill11 = alloca [0 x i8], align 1
  %val.dbg.spill10 = alloca [0 x i8], align 1
  %residual.dbg.spill9 = alloca [0 x i8], align 1
  %val.dbg.spill8 = alloca [0 x i8], align 1
  %residual.dbg.spill7 = alloca [0 x i8], align 1
  %val.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_63 = alloca [8 x i8], align 4
  %_47 = alloca [8 x i8], align 4
  %iter = alloca [40 x i8], align 4
  %_45 = alloca [40 x i8], align 4
  %_44 = alloca [40 x i8], align 4
  %parts = alloca [40 x i8], align 4
  %_27 = alloca [16 x i8], align 4
  %err2 = alloca [1 x i8], align 1
  %_18 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %abi1 = alloca [16 x i8], align 4
  %_9 = alloca [16 x i8], align 4
  %abi = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !3495, !DIExpression(), !3496)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !3396, !DIExpression(), !3497)
    #dbg_declare(ptr %abi, !3399, !DIExpression(), !3498)
    #dbg_declare(ptr %abi1, !3401, !DIExpression(), !3499)
    #dbg_declare(ptr %abi1, !3405, !DIExpression(), !3500)
    #dbg_declare(ptr %err, !3407, !DIExpression(), !3501)
    #dbg_declare(ptr %err2, !3413, !DIExpression(), !3502)
    #dbg_declare(ptr %parts, !3429, !DIExpression(), !3503)
    #dbg_declare(ptr %iter, !3459, !DIExpression(), !3504)
    #dbg_declare(ptr %residual.dbg.spill, !3409, !DIExpression(), !3505)
    #dbg_declare(ptr %val.dbg.spill, !3411, !DIExpression(), !3506)
    #dbg_declare(ptr %residual.dbg.spill3, !3415, !DIExpression(), !3507)
    #dbg_declare(ptr %val.dbg.spill4, !3417, !DIExpression(), !3508)
    #dbg_declare(ptr %residual.dbg.spill5, !3419, !DIExpression(), !3509)
    #dbg_declare(ptr %val.dbg.spill6, !3421, !DIExpression(), !3510)
    #dbg_declare(ptr %residual.dbg.spill7, !3425, !DIExpression(), !3511)
    #dbg_declare(ptr %val.dbg.spill8, !3427, !DIExpression(), !3512)
    #dbg_declare(ptr %residual.dbg.spill9, !3455, !DIExpression(), !3513)
    #dbg_declare(ptr %val.dbg.spill10, !3457, !DIExpression(), !3514)
    #dbg_declare(ptr %residual.dbg.spill11, !3463, !DIExpression(), !3515)
    #dbg_declare(ptr %val.dbg.spill12, !3465, !DIExpression(), !3516)
    #dbg_declare(ptr %residual.dbg.spill13, !3467, !DIExpression(), !3517)
    #dbg_declare(ptr %val.dbg.spill14, !3469, !DIExpression(), !3518)
    #dbg_declare(ptr %residual.dbg.spill15, !3471, !DIExpression(), !3519)
    #dbg_declare(ptr %val.dbg.spill16, !3473, !DIExpression(), !3520)
    #dbg_declare(ptr %residual.dbg.spill17, !3475, !DIExpression(), !3521)
    #dbg_declare(ptr %val.dbg.spill18, !3477, !DIExpression(), !3522)
    #dbg_declare(ptr %residual.dbg.spill19, !3479, !DIExpression(), !3523)
    #dbg_declare(ptr %residual.dbg.spill20, !3483, !DIExpression(), !3524)
    #dbg_declare(ptr %val.dbg.spill21, !3485, !DIExpression(), !3525)
    #dbg_declare(ptr %residual.dbg.spill22, !3487, !DIExpression(), !3526)
    #dbg_declare(ptr %val.dbg.spill23, !3489, !DIExpression(), !3527)
    #dbg_declare(ptr %residual.dbg.spill24, !3491, !DIExpression(), !3528)
    #dbg_declare(ptr %val.dbg.spill25, !3493, !DIExpression(), !3529)
; call rustc_demangle::v0::Printer::eat
  %is_unsafe = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %this, i8 85) #13, !dbg !3530
  %0 = zext i1 %is_unsafe to i8, !dbg !3530
  store i8 %0, ptr %is_unsafe.dbg.spill, align 1, !dbg !3530
    #dbg_declare(ptr %is_unsafe.dbg.spill, !3397, !DIExpression(), !3531)
; call rustc_demangle::v0::Printer::eat
  %_5 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %this, i8 75) #13, !dbg !3532
  br i1 %_5, label %bb3, label %bb28, !dbg !3533

bb28:                                             ; preds = %start
  store ptr null, ptr %abi, align 4, !dbg !3534
  br label %bb29, !dbg !3535

bb3:                                              ; preds = %start
; call rustc_demangle::v0::Printer::eat
  %_6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %this, i8 67) #13, !dbg !3536
  br i1 %_6, label %bb5, label %bb6, !dbg !3537

bb29:                                             ; preds = %bb5, %bb21, %bb28
  br i1 %is_unsafe, label %bb30, label %bb34, !dbg !3538

bb6:                                              ; preds = %bb3
  %1 = load ptr, ptr %this, align 4, !dbg !3539
  %2 = ptrtoint ptr %1 to i32, !dbg !3539
  %3 = icmp eq i32 %2, 0, !dbg !3539
  %_7 = select i1 %3, i32 1, i32 0, !dbg !3539
  %4 = trunc nuw i32 %_7 to i1, !dbg !3540
  br i1 %4, label %bb8, label %bb9, !dbg !3540

bb5:                                              ; preds = %bb3
  store ptr @alloc_e57470275a219d8492d489e56910499e, ptr %abi, align 4, !dbg !3541
  %5 = getelementptr inbounds i8, ptr %abi, i32 4, !dbg !3541
  store i32 1, ptr %5, align 4, !dbg !3541
  br label %bb29, !dbg !3542

bb8:                                              ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !3543
  %7 = zext i1 %6 to i8, !dbg !3543
  store i8 %7, ptr %_0, align 1, !dbg !3543
  br label %bb85, !dbg !3543

bb9:                                              ; preds = %bb6
  store ptr %this, ptr %parser.dbg.spill, align 4, !dbg !3544
    #dbg_declare(ptr %parser.dbg.spill, !3403, !DIExpression(), !3545)
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E(ptr sret([16 x i8]) align 4 %_9, ptr align 4 %this) #13, !dbg !3546
  %8 = load ptr, ptr %_9, align 4, !dbg !3547
  %9 = ptrtoint ptr %8 to i32, !dbg !3547
  %10 = icmp eq i32 %9, 0, !dbg !3547
  %_10 = select i1 %10, i32 1, i32 0, !dbg !3547
  %11 = trunc nuw i32 %_10 to i1, !dbg !3548
  br i1 %11, label %bb11, label %bb12, !dbg !3548

bb11:                                             ; preds = %bb9
  %12 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !3549
  %13 = load i8, ptr %12, align 4, !dbg !3549
  %14 = trunc nuw i8 %13 to i1, !dbg !3549
  %15 = zext i1 %14 to i8, !dbg !3549
  store i8 %15, ptr %err, align 1, !dbg !3549
; call rustc_demangle::v0::ParseError::message
  %16 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !3550
  %_15.0 = extractvalue { ptr, i32 } %16, 0, !dbg !3550
  %_15.1 = extractvalue { ptr, i32 } %16, 1, !dbg !3550
; call rustc_demangle::v0::Printer::print
  %_14 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 %_15.0, i32 %_15.1) #13, !dbg !3551
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !3552
  %_17 = zext i1 %_13 to i32, !dbg !3552
  %17 = trunc nuw i32 %_17 to i1, !dbg !3552
  br i1 %17, label %bb17, label %bb16, !dbg !3552

bb12:                                             ; preds = %bb9
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %abi1, ptr align 4 %_9, i32 16, i1 false), !dbg !3553
  %_78.0 = load ptr, ptr %abi1, align 4, !dbg !3554
  %18 = getelementptr inbounds i8, ptr %abi1, i32 4, !dbg !3554
  %_78.1 = load i32, ptr %18, align 4, !dbg !3554
; call core::str::<impl str>::is_empty
  %_19 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_78.0, i32 %_78.1) #13, !dbg !3555
  br i1 %_19, label %bb22, label %bb19, !dbg !3554

bb19:                                             ; preds = %bb12
  %19 = getelementptr inbounds i8, ptr %abi1, i32 8, !dbg !3556
  %_79.0 = load ptr, ptr %19, align 4, !dbg !3556
  %20 = getelementptr inbounds i8, ptr %19, i32 4, !dbg !3556
  %_79.1 = load i32, ptr %20, align 4, !dbg !3556
; call core::str::<impl str>::is_empty
  %_20 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_79.0, i32 %_79.1) #13, !dbg !3557
  br i1 %_20, label %bb21, label %bb22, !dbg !3556

bb22:                                             ; preds = %bb19, %bb12
  store i8 0, ptr %err2, align 1, !dbg !3558
; call rustc_demangle::v0::ParseError::message
  %21 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err2) #13, !dbg !3559
  %_24.0 = extractvalue { ptr, i32 } %21, 0, !dbg !3559
  %_24.1 = extractvalue { ptr, i32 } %21, 1, !dbg !3559
; call rustc_demangle::v0::Printer::print
  %_23 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 %_24.0, i32 %_24.1) #13, !dbg !3560
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_22 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_23) #13, !dbg !3561
  %_26 = zext i1 %_22 to i32, !dbg !3561
  %22 = trunc nuw i32 %_26 to i1, !dbg !3561
  br i1 %22, label %bb27, label %bb26, !dbg !3561

bb21:                                             ; preds = %bb19
  %_28.0 = load ptr, ptr %abi1, align 4, !dbg !3562
  %23 = getelementptr inbounds i8, ptr %abi1, i32 4, !dbg !3562
  %_28.1 = load i32, ptr %23, align 4, !dbg !3562
  store ptr %_28.0, ptr %abi, align 4, !dbg !3563
  %24 = getelementptr inbounds i8, ptr %abi, i32 4, !dbg !3563
  store i32 %_28.1, ptr %24, align 4, !dbg !3563
  br label %bb29, !dbg !3542

bb27:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_67b777d3a13f5a5965b613492a73b2ea) #13, !dbg !3564
  %26 = zext i1 %25 to i8, !dbg !3564
  store i8 %26, ptr %_0, align 1, !dbg !3564
  br label %bb85, !dbg !3564

bb26:                                             ; preds = %bb22
  %27 = load i8, ptr %err2, align 1, !dbg !3565
  %28 = trunc nuw i8 %27 to i1, !dbg !3565
  %29 = getelementptr inbounds i8, ptr %_27, i32 4, !dbg !3565
  %30 = zext i1 %28 to i8, !dbg !3565
  store i8 %30, ptr %29, align 4, !dbg !3565
  store ptr null, ptr %_27, align 4, !dbg !3565
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %this, ptr align 4 %_27, i32 16, i1 false), !dbg !3566
  store i8 0, ptr %_0, align 1, !dbg !3567
  br label %bb85, !dbg !3568

bb85:                                             ; preds = %bb33, %bb66, %bb70, %bb74, %bb84, %bb80, %bb83, %bb39, %bb46, %bb55, %bb58, %bb61, %bb8, %bb17, %bb16, %bb27, %bb26
  %31 = load i8, ptr %_0, align 1, !dbg !3569
  %32 = trunc nuw i8 %31 to i1, !dbg !3569
  ret i1 %32, !dbg !3569

bb17:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_cf99c3d99b7655c4c23a8f9ba882d830) #13, !dbg !3570
  %34 = zext i1 %33 to i8, !dbg !3570
  store i8 %34, ptr %_0, align 1, !dbg !3570
  br label %bb85, !dbg !3570

bb16:                                             ; preds = %bb11
  %35 = load i8, ptr %err, align 1, !dbg !3571
  %36 = trunc nuw i8 %35 to i1, !dbg !3571
  %37 = getelementptr inbounds i8, ptr %_18, i32 4, !dbg !3571
  %38 = zext i1 %36 to i8, !dbg !3571
  store i8 %38, ptr %37, align 4, !dbg !3571
  store ptr null, ptr %_18, align 4, !dbg !3571
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %this, ptr align 4 %_18, i32 16, i1 false), !dbg !3572
  store i8 0, ptr %_0, align 1, !dbg !3573
  br label %bb85, !dbg !3574

bb34:                                             ; preds = %bb30, %bb29
  %39 = load ptr, ptr %abi, align 4, !dbg !3575
  %40 = getelementptr inbounds i8, ptr %abi, i32 4, !dbg !3575
  %41 = load i32, ptr %40, align 4, !dbg !3575
  %42 = ptrtoint ptr %39 to i32, !dbg !3575
  %43 = icmp eq i32 %42, 0, !dbg !3575
  %_32 = select i1 %43, i32 0, i32 1, !dbg !3575
  %44 = trunc nuw i32 %_32 to i1, !dbg !3576
  br i1 %44, label %bb35, label %bb62, !dbg !3576

bb30:                                             ; preds = %bb29
; call rustc_demangle::v0::Printer::print
  %_30 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_b05c003eda9f73f01c171c5c1d105cae, i32 7) #13, !dbg !3577
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_29 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_30) #13, !dbg !3578
  %_31 = zext i1 %_29 to i32, !dbg !3578
  %45 = trunc nuw i32 %_31 to i1, !dbg !3578
  br i1 %45, label %bb33, label %bb34, !dbg !3578

bb33:                                             ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %46 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_300a6b88e2b00c52981cbea07c4a55c5) #13, !dbg !3579
  %47 = zext i1 %46 to i8, !dbg !3579
  store i8 %47, ptr %_0, align 1, !dbg !3579
  br label %bb85, !dbg !3579

bb35:                                             ; preds = %bb34
  %abi.0 = load ptr, ptr %abi, align 4, !dbg !3580
  %48 = getelementptr inbounds i8, ptr %abi, i32 4, !dbg !3580
  %abi.1 = load i32, ptr %48, align 4, !dbg !3580
  store ptr %abi.0, ptr %abi.dbg.spill, align 4, !dbg !3580
  %49 = getelementptr inbounds i8, ptr %abi.dbg.spill, i32 4, !dbg !3580
  store i32 %abi.1, ptr %49, align 4, !dbg !3580
    #dbg_declare(ptr %abi.dbg.spill, !3423, !DIExpression(), !3580)
; call rustc_demangle::v0::Printer::print
  %_35 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_849429a70944c612a9b3676f71c6e442, i32 8) #13, !dbg !3581
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_34 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_35) #13, !dbg !3582
  %_36 = zext i1 %_34 to i32, !dbg !3582
  %50 = trunc nuw i32 %_36 to i1, !dbg !3582
  br i1 %50, label %bb39, label %bb38, !dbg !3582

bb62:                                             ; preds = %bb51, %bb34
; call rustc_demangle::v0::Printer::print
  %_61 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_f62cbc6e5cb5848b26a3a14b15d3c668, i32 3) #13, !dbg !3583
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_60 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_61) #13, !dbg !3584
  %_62 = zext i1 %_60 to i32, !dbg !3584
  %51 = trunc nuw i32 %_62 to i1, !dbg !3584
  br i1 %51, label %bb66, label %bb65, !dbg !3584

bb39:                                             ; preds = %bb35
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %52 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ba8273ca857ebde0e49b7fbe08f32872) #13, !dbg !3585
  %53 = zext i1 %52 to i8, !dbg !3585
  store i8 %53, ptr %_0, align 1, !dbg !3585
  br label %bb85, !dbg !3585

bb38:                                             ; preds = %bb35
; call core::str::<impl str>::split
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17hf58520c1cbf0b29fE"(ptr sret([40 x i8]) align 4 %parts, ptr align 1 %abi.0, i32 %abi.1, i32 95) #13, !dbg !3586
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %54 = call { ptr, i32 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbf3248bfa90064b9E"(ptr align 4 %parts) #13, !dbg !3587
  %_41.0 = extractvalue { ptr, i32 } %54, 0, !dbg !3587
  %_41.1 = extractvalue { ptr, i32 } %54, 1, !dbg !3587
  store ptr %_41.0, ptr %self.i, align 4
  %55 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_41.1, ptr %55, align 4
    #dbg_declare(ptr %self.i, !3588, !DIExpression(), !3596)
  %56 = load ptr, ptr %self.i, align 4, !dbg !3598
  %57 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !3598
  %58 = load i32, ptr %57, align 4, !dbg !3598
  %59 = ptrtoint ptr %56 to i32, !dbg !3598
  %60 = icmp eq i32 %59, 0, !dbg !3598
  %_2.i = select i1 %60, i32 0, i32 1, !dbg !3598
  %61 = trunc nuw i32 %_2.i to i1, !dbg !3599
  br i1 %61, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit", label %bb2.i, !dbg !3599

bb2.i:                                            ; preds = %bb38
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h87f3d65d3174ccbeE(ptr align 4 @alloc_c67d7a50dd54899f8318469e49218d2f) #14, !dbg !3600
  unreachable, !dbg !3600

"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit": ; preds = %bb38
  %val.0.i = load ptr, ptr %self.i, align 4, !dbg !3601
  %62 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !3601
  %val.1.i = load i32, ptr %62, align 4, !dbg !3601
  store ptr %val.0.i, ptr %val.dbg.spill.i, align 4, !dbg !3601
  %63 = getelementptr inbounds i8, ptr %val.dbg.spill.i, i32 4, !dbg !3601
  store i32 %val.1.i, ptr %63, align 4, !dbg !3601
    #dbg_declare(ptr %val.dbg.spill.i, !3594, !DIExpression(), !3602)
  %64 = insertvalue { ptr, i32 } poison, ptr %val.0.i, 0, !dbg !3603
  %65 = insertvalue { ptr, i32 } %64, i32 %val.1.i, 1, !dbg !3603
  %_40.0 = extractvalue { ptr, i32 } %65, 0, !dbg !3604
  %_40.1 = extractvalue { ptr, i32 } %65, 1, !dbg !3604
; call rustc_demangle::v0::Printer::print
  %_39 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 %_40.0, i32 %_40.1) #13, !dbg !3605
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_38 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_39) #13, !dbg !3606
  %_43 = zext i1 %_38 to i32, !dbg !3606
  %66 = trunc nuw i32 %_43 to i1, !dbg !3606
  br i1 %66, label %bb46, label %bb45, !dbg !3606

bb46:                                             ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit"
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %67 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_5e3a257f2cdb6faab7e5e64268d70a16) #13, !dbg !3607
  %68 = zext i1 %67 to i8, !dbg !3607
  store i8 %68, ptr %_0, align 1, !dbg !3607
  br label %bb85, !dbg !3607

bb45:                                             ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit"
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_45, ptr align 4 %parts, i32 40, i1 false), !dbg !3608
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf8b66e604df8019dE"(ptr sret([40 x i8]) align 4 %_44, ptr align 4 %_45) #13, !dbg !3608
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter, ptr align 4 %_44, i32 40, i1 false), !dbg !3608
  br label %bb48, !dbg !3609

bb48:                                             ; preds = %bb54, %bb45
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %69 = call { ptr, i32 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbf3248bfa90064b9E"(ptr align 4 %iter) #13, !dbg !3504
  %70 = extractvalue { ptr, i32 } %69, 0, !dbg !3504
  %71 = extractvalue { ptr, i32 } %69, 1, !dbg !3504
  store ptr %70, ptr %_47, align 4, !dbg !3504
  %72 = getelementptr inbounds i8, ptr %_47, i32 4, !dbg !3504
  store i32 %71, ptr %72, align 4, !dbg !3504
  %73 = load ptr, ptr %_47, align 4, !dbg !3504
  %74 = getelementptr inbounds i8, ptr %_47, i32 4, !dbg !3504
  %75 = load i32, ptr %74, align 4, !dbg !3504
  %76 = ptrtoint ptr %73 to i32, !dbg !3504
  %77 = icmp eq i32 %76, 0, !dbg !3504
  %_49 = select i1 %77, i32 0, i32 1, !dbg !3504
  %78 = trunc nuw i32 %_49 to i1, !dbg !3504
  br i1 %78, label %bb50, label %bb51, !dbg !3504

bb50:                                             ; preds = %bb48
  %part.0 = load ptr, ptr %_47, align 4, !dbg !3610
  %79 = getelementptr inbounds i8, ptr %_47, i32 4, !dbg !3610
  %part.1 = load i32, ptr %79, align 4, !dbg !3610
  store ptr %part.0, ptr %part.dbg.spill, align 4, !dbg !3610
  %80 = getelementptr inbounds i8, ptr %part.dbg.spill, i32 4, !dbg !3610
  store i32 %part.1, ptr %80, align 4, !dbg !3610
    #dbg_declare(ptr %part.dbg.spill, !3461, !DIExpression(), !3611)
; call rustc_demangle::v0::Printer::print
  %_52 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_3bb2650aa074fcfb8c10a9c40791bfbc, i32 1) #13, !dbg !3612
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_51 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_52) #13, !dbg !3613
  %_53 = zext i1 %_51 to i32, !dbg !3613
  %81 = trunc nuw i32 %_53 to i1, !dbg !3613
  br i1 %81, label %bb55, label %bb54, !dbg !3613

bb51:                                             ; preds = %bb48
; call rustc_demangle::v0::Printer::print
  %_58 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_4ebc30902302927a921d5b6c9d1f67ec, i32 2) #13, !dbg !3614
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_57 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_58) #13, !dbg !3615
  %_59 = zext i1 %_57 to i32, !dbg !3615
  %82 = trunc nuw i32 %_59 to i1, !dbg !3615
  br i1 %82, label %bb61, label %bb62, !dbg !3615

bb61:                                             ; preds = %bb51
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %83 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_59829d2cc401e8aaf896cd78466d4e67) #13, !dbg !3616
  %84 = zext i1 %83 to i8, !dbg !3616
  store i8 %84, ptr %_0, align 1, !dbg !3616
  br label %bb85, !dbg !3616

bb55:                                             ; preds = %bb50
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %85 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_97fd67ff296716430f5b5e3cbee64f2d) #13, !dbg !3617
  %86 = zext i1 %85 to i8, !dbg !3617
  store i8 %86, ptr %_0, align 1, !dbg !3617
  br label %bb85, !dbg !3617

bb54:                                             ; preds = %bb50
; call rustc_demangle::v0::Printer::print
  %_55 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 %part.0, i32 %part.1) #13, !dbg !3618
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_54 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_55) #13, !dbg !3619
  %_56 = zext i1 %_54 to i32, !dbg !3619
  %87 = trunc nuw i32 %_56 to i1, !dbg !3619
  br i1 %87, label %bb58, label %bb48, !dbg !3619

bb58:                                             ; preds = %bb54
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %88 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_39bb140c51a70ef05131b062b4845092) #13, !dbg !3620
  %89 = zext i1 %88 to i8, !dbg !3620
  store i8 %89, ptr %_0, align 1, !dbg !3620
  br label %bb85, !dbg !3620

bb66:                                             ; preds = %bb62
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %90 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_1fa7fff189641ee37b2720478c4728c4) #13, !dbg !3621
  %91 = zext i1 %90 to i8, !dbg !3621
  store i8 %91, ptr %_0, align 1, !dbg !3621
  br label %bb85, !dbg !3621

bb65:                                             ; preds = %bb62
; call rustc_demangle::v0::Printer::print_sep_list
  %92 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hee9770f90521c53fE(ptr align 4 %this, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !3622
  %_64.0 = extractvalue { i32, i32 } %92, 0, !dbg !3622
  %_64.1 = extractvalue { i32, i32 } %92, 1, !dbg !3622
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %93 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_64.0, i32 %_64.1) #13, !dbg !3623
  %94 = extractvalue { i32, i32 } %93, 0, !dbg !3623
  %95 = extractvalue { i32, i32 } %93, 1, !dbg !3623
  store i32 %94, ptr %_63, align 4, !dbg !3623
  %96 = getelementptr inbounds i8, ptr %_63, i32 4, !dbg !3623
  store i32 %95, ptr %96, align 4, !dbg !3623
  %_66 = load i32, ptr %_63, align 4, !dbg !3623
  %97 = getelementptr inbounds i8, ptr %_63, i32 4, !dbg !3623
  %98 = load i32, ptr %97, align 4, !dbg !3623
  %99 = trunc nuw i32 %_66 to i1, !dbg !3623
  br i1 %99, label %bb70, label %bb69, !dbg !3623

bb70:                                             ; preds = %bb65
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %100 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_801d685749f53d28e7fd67930b405195) #13, !dbg !3624
  %101 = zext i1 %100 to i8, !dbg !3624
  store i8 %101, ptr %_0, align 1, !dbg !3624
  br label %bb85, !dbg !3624

bb69:                                             ; preds = %bb65
  %102 = getelementptr inbounds i8, ptr %_63, i32 4, !dbg !3623
  %val = load i32, ptr %102, align 4, !dbg !3623
  store i32 %val, ptr %val.dbg.spill26, align 4, !dbg !3623
    #dbg_declare(ptr %val.dbg.spill26, !3481, !DIExpression(), !3625)
; call rustc_demangle::v0::Printer::print
  %_69 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_9e3f62b0e6490cc45676dc85f910c2d0, i32 1) #13, !dbg !3626
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_68 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_69) #13, !dbg !3627
  %_70 = zext i1 %_68 to i32, !dbg !3627
  %103 = trunc nuw i32 %_70 to i1, !dbg !3627
  br i1 %103, label %bb74, label %bb73, !dbg !3627

bb74:                                             ; preds = %bb69
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %104 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_c57a8a6e7fd94b78a3c10207957cdd38) #13, !dbg !3628
  %105 = zext i1 %104 to i8, !dbg !3628
  store i8 %105, ptr %_0, align 1, !dbg !3628
  br label %bb85, !dbg !3628

bb73:                                             ; preds = %bb69
; call rustc_demangle::v0::Printer::eat
  %_71 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %this, i8 117) #13, !dbg !3629
  br i1 %_71, label %bb84, label %bb76, !dbg !3630

bb76:                                             ; preds = %bb73
; call rustc_demangle::v0::Printer::print
  %_73 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_d92ab822b978e55c052ee90d2c85e635, i32 4) #13, !dbg !3631
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_72 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_73) #13, !dbg !3632
  %_74 = zext i1 %_72 to i32, !dbg !3632
  %106 = trunc nuw i32 %_74 to i1, !dbg !3632
  br i1 %106, label %bb80, label %bb79, !dbg !3632

bb84:                                             ; preds = %bb79, %bb73
  store i8 0, ptr %_0, align 1, !dbg !3633
  br label %bb85, !dbg !3569

bb80:                                             ; preds = %bb76
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %107 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_70e2452bd85fb2ffd66a72a8feadbf90) #13, !dbg !3634
  %108 = zext i1 %107 to i8, !dbg !3634
  store i8 %108, ptr %_0, align 1, !dbg !3634
  br label %bb85, !dbg !3634

bb79:                                             ; preds = %bb76
; call rustc_demangle::v0::Printer::print_type
  %_76 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %this) #13, !dbg !3635
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_75 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_76) #13, !dbg !3636
  %_77 = zext i1 %_75 to i32, !dbg !3636
  %109 = trunc nuw i32 %_77 to i1, !dbg !3636
  br i1 %109, label %bb83, label %bb84, !dbg !3636

bb83:                                             ; preds = %bb79
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %110 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9dace3975078b77196c565c6fef3c86c) #13, !dbg !3637
  %111 = zext i1 %110 to i8, !dbg !3637
  store i8 %111, ptr %_0, align 1, !dbg !3637
  br label %bb85, !dbg !3637

bb7:                                              ; No predecessors!
  unreachable, !dbg !3638
}

; rustc_demangle::v0::Printer::print_type::{{closure}}
; Function Attrs: inlinehint nounwind
define internal void @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h75617aadb88e893eE"(ptr align 4 %p) unnamed_addr #0 !dbg !3640 {
start:
  %p.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !3646, !DIExpression(), !3647)
  store ptr %p, ptr %p.dbg.spill, align 4
    #dbg_declare(ptr %p.dbg.spill, !3645, !DIExpression(), !3648)
  %0 = getelementptr inbounds i8, ptr %p, i32 8, !dbg !3649
  %1 = load i32, ptr %0, align 4, !dbg !3649
  %_3.0 = sub i32 %1, 1, !dbg !3649
  %_3.1 = icmp ult i32 %1, 1, !dbg !3649
  br i1 %_3.1, label %panic, label %bb1, !dbg !3649

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %p, i32 8, !dbg !3649
  store i32 %_3.0, ptr %2, align 4, !dbg !3649
  ret void, !dbg !3650

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_027d8d1b2fc35861e9bea46ae4a8b4f5) #14, !dbg !3649
  unreachable, !dbg !3649
}

; rustc_demangle::v0::Printer::print_const
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %self, i1 zeroext %0) unnamed_addr #1 !dbg !3651 {
start:
  %val.dbg.spill102 = alloca [4 x i8], align 4
  %val.dbg.spill100 = alloca [4 x i8], align 4
  %x.dbg.spill98 = alloca [1 x i8], align 1
  %parser.dbg.spill97 = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill96 = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %1 = alloca [16 x i8], align 8
  %x.dbg.spill95 = alloca [8 x i8], align 4
  %parser.dbg.spill92 = alloca [4 x i8], align 4
  %x.dbg.spill91 = alloca [8 x i8], align 4
  %parser.dbg.spill90 = alloca [4 x i8], align 4
  %parser.dbg.spill89 = alloca [4 x i8], align 4
  %tag.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill88 = alloca [0 x i8], align 1
  %residual.dbg.spill87 = alloca [0 x i8], align 1
  %val.dbg.spill86 = alloca [0 x i8], align 1
  %residual.dbg.spill85 = alloca [0 x i8], align 1
  %val.dbg.spill84 = alloca [0 x i8], align 1
  %residual.dbg.spill83 = alloca [0 x i8], align 1
  %val.dbg.spill82 = alloca [0 x i8], align 1
  %residual.dbg.spill81 = alloca [0 x i8], align 1
  %val.dbg.spill80 = alloca [0 x i8], align 1
  %residual.dbg.spill79 = alloca [0 x i8], align 1
  %residual.dbg.spill78 = alloca [0 x i8], align 1
  %val.dbg.spill77 = alloca [0 x i8], align 1
  %residual.dbg.spill76 = alloca [0 x i8], align 1
  %val.dbg.spill75 = alloca [0 x i8], align 1
  %residual.dbg.spill74 = alloca [0 x i8], align 1
  %residual.dbg.spill73 = alloca [0 x i8], align 1
  %val.dbg.spill72 = alloca [0 x i8], align 1
  %residual.dbg.spill71 = alloca [0 x i8], align 1
  %val.dbg.spill70 = alloca [0 x i8], align 1
  %residual.dbg.spill69 = alloca [0 x i8], align 1
  %val.dbg.spill68 = alloca [0 x i8], align 1
  %residual.dbg.spill67 = alloca [0 x i8], align 1
  %val.dbg.spill66 = alloca [0 x i8], align 1
  %residual.dbg.spill65 = alloca [0 x i8], align 1
  %val.dbg.spill64 = alloca [0 x i8], align 1
  %residual.dbg.spill63 = alloca [0 x i8], align 1
  %val.dbg.spill62 = alloca [0 x i8], align 1
  %residual.dbg.spill61 = alloca [0 x i8], align 1
  %residual.dbg.spill60 = alloca [0 x i8], align 1
  %val.dbg.spill59 = alloca [0 x i8], align 1
  %residual.dbg.spill58 = alloca [0 x i8], align 1
  %val.dbg.spill57 = alloca [0 x i8], align 1
  %residual.dbg.spill56 = alloca [0 x i8], align 1
  %val.dbg.spill55 = alloca [0 x i8], align 1
  %residual.dbg.spill54 = alloca [0 x i8], align 1
  %residual.dbg.spill53 = alloca [0 x i8], align 1
  %val.dbg.spill52 = alloca [0 x i8], align 1
  %residual.dbg.spill51 = alloca [0 x i8], align 1
  %val.dbg.spill50 = alloca [0 x i8], align 1
  %residual.dbg.spill49 = alloca [0 x i8], align 1
  %val.dbg.spill48 = alloca [0 x i8], align 1
  %residual.dbg.spill47 = alloca [0 x i8], align 1
  %val.dbg.spill46 = alloca [0 x i8], align 1
  %residual.dbg.spill45 = alloca [0 x i8], align 1
  %val.dbg.spill44 = alloca [0 x i8], align 1
  %residual.dbg.spill43 = alloca [0 x i8], align 1
  %val.dbg.spill42 = alloca [0 x i8], align 1
  %residual.dbg.spill41 = alloca [0 x i8], align 1
  %val.dbg.spill40 = alloca [0 x i8], align 1
  %residual.dbg.spill39 = alloca [0 x i8], align 1
  %val.dbg.spill38 = alloca [0 x i8], align 1
  %residual.dbg.spill37 = alloca [0 x i8], align 1
  %val.dbg.spill36 = alloca [0 x i8], align 1
  %residual.dbg.spill35 = alloca [0 x i8], align 1
  %val.dbg.spill34 = alloca [0 x i8], align 1
  %residual.dbg.spill33 = alloca [0 x i8], align 1
  %val.dbg.spill32 = alloca [0 x i8], align 1
  %residual.dbg.spill31 = alloca [0 x i8], align 1
  %val.dbg.spill30 = alloca [0 x i8], align 1
  %residual.dbg.spill29 = alloca [0 x i8], align 1
  %val.dbg.spill28 = alloca [0 x i8], align 1
  %residual.dbg.spill27 = alloca [0 x i8], align 1
  %val.dbg.spill26 = alloca [0 x i8], align 1
  %residual.dbg.spill25 = alloca [0 x i8], align 1
  %val.dbg.spill24 = alloca [0 x i8], align 1
  %residual.dbg.spill23 = alloca [0 x i8], align 1
  %val.dbg.spill22 = alloca [0 x i8], align 1
  %residual.dbg.spill21 = alloca [0 x i8], align 1
  %val.dbg.spill20 = alloca [0 x i8], align 1
  %residual.dbg.spill19 = alloca [0 x i8], align 1
  %val.dbg.spill18 = alloca [0 x i8], align 1
  %residual.dbg.spill17 = alloca [0 x i8], align 1
  %val.dbg.spill16 = alloca [0 x i8], align 1
  %residual.dbg.spill15 = alloca [0 x i8], align 1
  %val.dbg.spill14 = alloca [0 x i8], align 1
  %residual.dbg.spill13 = alloca [0 x i8], align 1
  %val.dbg.spill12 = alloca [0 x i8], align 1
  %residual.dbg.spill11 = alloca [0 x i8], align 1
  %val.dbg.spill10 = alloca [0 x i8], align 1
  %residual.dbg.spill9 = alloca [0 x i8], align 1
  %x.dbg.spill = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_226 = alloca [16 x i8], align 4
  %err8 = alloca [1 x i8], align 1
  %_214 = alloca [16 x i8], align 4
  %err7 = alloca [1 x i8], align 1
  %_200 = alloca [8 x i8], align 4
  %_189 = alloca [8 x i8], align 4
  %_185 = alloca [16 x i8], align 4
  %err6 = alloca [1 x i8], align 1
  %_176 = alloca [2 x i8], align 1
  %_155 = alloca [8 x i8], align 4
  %_139 = alloca [8 x i8], align 4
  %_101 = alloca [16 x i8], align 4
  %err5 = alloca [1 x i8], align 1
  %_88 = alloca [16 x i8], align 4
  %err4 = alloca [1 x i8], align 1
  %_79 = alloca [8 x i8], align 4
  %_76 = alloca [8 x i8], align 4
  %valid_char = alloca [4 x i8], align 4
  %_71 = alloca [16 x i8], align 4
  %err3 = alloca [1 x i8], align 1
  %_57 = alloca [16 x i8], align 4
  %err2 = alloca [1 x i8], align 1
  %_48 = alloca [8 x i8], align 4
  %_45 = alloca [8 x i8], align 4
  %_43 = alloca [16 x i8], align 8
  %open_brace_if_outside_expr = alloca [8 x i8], align 4
  %opened_brace = alloca [1 x i8], align 1
  %_25 = alloca [16 x i8], align 4
  %err1 = alloca [1 x i8], align 1
  %_17 = alloca [1 x i8], align 1
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_5 = alloca [2 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %in_value = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %in_value, align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3654, !DIExpression(), !3884)
    #dbg_declare(ptr %in_value, !3655, !DIExpression(), !3885)
    #dbg_declare(ptr %err, !3662, !DIExpression(), !3886)
    #dbg_declare(ptr %err1, !3672, !DIExpression(), !3887)
    #dbg_declare(ptr %opened_brace, !3678, !DIExpression(), !3888)
    #dbg_declare(ptr %open_brace_if_outside_expr, !3680, !DIExpression(), !3889)
    #dbg_declare(ptr %err2, !3708, !DIExpression(), !3890)
    #dbg_declare(ptr %err3, !3722, !DIExpression(), !3891)
    #dbg_declare(ptr %valid_char, !3728, !DIExpression(), !3892)
    #dbg_declare(ptr %err4, !3734, !DIExpression(), !3893)
    #dbg_declare(ptr %err5, !3746, !DIExpression(), !3894)
    #dbg_declare(ptr %err6, !3834, !DIExpression(), !3895)
    #dbg_declare(ptr %err7, !3864, !DIExpression(), !3896)
    #dbg_declare(ptr %err8, !3874, !DIExpression(), !3897)
    #dbg_declare(ptr %residual.dbg.spill, !3664, !DIExpression(), !3898)
    #dbg_declare(ptr %val.dbg.spill, !3666, !DIExpression(), !3899)
    #dbg_declare(ptr %x.dbg.spill, !3670, !DIExpression(), !3900)
    #dbg_declare(ptr %residual.dbg.spill9, !3674, !DIExpression(), !3901)
    #dbg_declare(ptr %val.dbg.spill10, !3676, !DIExpression(), !3902)
    #dbg_declare(ptr %residual.dbg.spill11, !3688, !DIExpression(), !3903)
    #dbg_declare(ptr %val.dbg.spill12, !3690, !DIExpression(), !3904)
    #dbg_declare(ptr %residual.dbg.spill13, !3692, !DIExpression(), !3905)
    #dbg_declare(ptr %val.dbg.spill14, !3694, !DIExpression(), !3906)
    #dbg_declare(ptr %residual.dbg.spill15, !3696, !DIExpression(), !3907)
    #dbg_declare(ptr %val.dbg.spill16, !3698, !DIExpression(), !3908)
    #dbg_declare(ptr %residual.dbg.spill17, !3700, !DIExpression(), !3909)
    #dbg_declare(ptr %val.dbg.spill18, !3702, !DIExpression(), !3910)
    #dbg_declare(ptr %residual.dbg.spill19, !3710, !DIExpression(), !3911)
    #dbg_declare(ptr %val.dbg.spill20, !3712, !DIExpression(), !3912)
    #dbg_declare(ptr %residual.dbg.spill21, !3714, !DIExpression(), !3913)
    #dbg_declare(ptr %val.dbg.spill22, !3716, !DIExpression(), !3914)
    #dbg_declare(ptr %residual.dbg.spill23, !3718, !DIExpression(), !3915)
    #dbg_declare(ptr %val.dbg.spill24, !3720, !DIExpression(), !3916)
    #dbg_declare(ptr %residual.dbg.spill25, !3724, !DIExpression(), !3917)
    #dbg_declare(ptr %val.dbg.spill26, !3726, !DIExpression(), !3918)
    #dbg_declare(ptr %residual.dbg.spill27, !3736, !DIExpression(), !3919)
    #dbg_declare(ptr %val.dbg.spill28, !3738, !DIExpression(), !3920)
    #dbg_declare(ptr %residual.dbg.spill29, !3742, !DIExpression(), !3921)
    #dbg_declare(ptr %val.dbg.spill30, !3744, !DIExpression(), !3922)
    #dbg_declare(ptr %residual.dbg.spill31, !3748, !DIExpression(), !3923)
    #dbg_declare(ptr %val.dbg.spill32, !3750, !DIExpression(), !3924)
    #dbg_declare(ptr %residual.dbg.spill33, !3752, !DIExpression(), !3925)
    #dbg_declare(ptr %val.dbg.spill34, !3754, !DIExpression(), !3926)
    #dbg_declare(ptr %residual.dbg.spill35, !3756, !DIExpression(), !3927)
    #dbg_declare(ptr %val.dbg.spill36, !3758, !DIExpression(), !3928)
    #dbg_declare(ptr %residual.dbg.spill37, !3760, !DIExpression(), !3929)
    #dbg_declare(ptr %val.dbg.spill38, !3762, !DIExpression(), !3930)
    #dbg_declare(ptr %residual.dbg.spill39, !3764, !DIExpression(), !3931)
    #dbg_declare(ptr %val.dbg.spill40, !3766, !DIExpression(), !3932)
    #dbg_declare(ptr %residual.dbg.spill41, !3768, !DIExpression(), !3933)
    #dbg_declare(ptr %val.dbg.spill42, !3770, !DIExpression(), !3934)
    #dbg_declare(ptr %residual.dbg.spill43, !3772, !DIExpression(), !3935)
    #dbg_declare(ptr %val.dbg.spill44, !3774, !DIExpression(), !3936)
    #dbg_declare(ptr %residual.dbg.spill45, !3776, !DIExpression(), !3937)
    #dbg_declare(ptr %val.dbg.spill46, !3778, !DIExpression(), !3938)
    #dbg_declare(ptr %residual.dbg.spill47, !3780, !DIExpression(), !3939)
    #dbg_declare(ptr %val.dbg.spill48, !3782, !DIExpression(), !3940)
    #dbg_declare(ptr %residual.dbg.spill49, !3784, !DIExpression(), !3941)
    #dbg_declare(ptr %val.dbg.spill50, !3786, !DIExpression(), !3942)
    #dbg_declare(ptr %residual.dbg.spill51, !3788, !DIExpression(), !3943)
    #dbg_declare(ptr %val.dbg.spill52, !3790, !DIExpression(), !3944)
    #dbg_declare(ptr %residual.dbg.spill53, !3792, !DIExpression(), !3945)
    #dbg_declare(ptr %residual.dbg.spill54, !3796, !DIExpression(), !3946)
    #dbg_declare(ptr %val.dbg.spill55, !3798, !DIExpression(), !3947)
    #dbg_declare(ptr %residual.dbg.spill56, !3800, !DIExpression(), !3948)
    #dbg_declare(ptr %val.dbg.spill57, !3802, !DIExpression(), !3949)
    #dbg_declare(ptr %residual.dbg.spill58, !3804, !DIExpression(), !3950)
    #dbg_declare(ptr %val.dbg.spill59, !3806, !DIExpression(), !3951)
    #dbg_declare(ptr %residual.dbg.spill60, !3810, !DIExpression(), !3952)
    #dbg_declare(ptr %residual.dbg.spill61, !3814, !DIExpression(), !3953)
    #dbg_declare(ptr %val.dbg.spill62, !3816, !DIExpression(), !3954)
    #dbg_declare(ptr %residual.dbg.spill63, !3818, !DIExpression(), !3955)
    #dbg_declare(ptr %val.dbg.spill64, !3820, !DIExpression(), !3956)
    #dbg_declare(ptr %residual.dbg.spill65, !3822, !DIExpression(), !3957)
    #dbg_declare(ptr %val.dbg.spill66, !3824, !DIExpression(), !3958)
    #dbg_declare(ptr %residual.dbg.spill67, !3826, !DIExpression(), !3959)
    #dbg_declare(ptr %val.dbg.spill68, !3828, !DIExpression(), !3960)
    #dbg_declare(ptr %residual.dbg.spill69, !3836, !DIExpression(), !3961)
    #dbg_declare(ptr %val.dbg.spill70, !3838, !DIExpression(), !3962)
    #dbg_declare(ptr %residual.dbg.spill71, !3840, !DIExpression(), !3963)
    #dbg_declare(ptr %val.dbg.spill72, !3842, !DIExpression(), !3964)
    #dbg_declare(ptr %residual.dbg.spill73, !3844, !DIExpression(), !3965)
    #dbg_declare(ptr %residual.dbg.spill74, !3848, !DIExpression(), !3966)
    #dbg_declare(ptr %val.dbg.spill75, !3850, !DIExpression(), !3967)
    #dbg_declare(ptr %residual.dbg.spill76, !3852, !DIExpression(), !3968)
    #dbg_declare(ptr %val.dbg.spill77, !3854, !DIExpression(), !3969)
    #dbg_declare(ptr %residual.dbg.spill78, !3856, !DIExpression(), !3970)
    #dbg_declare(ptr %residual.dbg.spill79, !3860, !DIExpression(), !3971)
    #dbg_declare(ptr %val.dbg.spill80, !3862, !DIExpression(), !3972)
    #dbg_declare(ptr %residual.dbg.spill81, !3866, !DIExpression(), !3973)
    #dbg_declare(ptr %val.dbg.spill82, !3868, !DIExpression(), !3974)
    #dbg_declare(ptr %residual.dbg.spill83, !3870, !DIExpression(), !3975)
    #dbg_declare(ptr %val.dbg.spill84, !3872, !DIExpression(), !3976)
    #dbg_declare(ptr %residual.dbg.spill85, !3876, !DIExpression(), !3977)
    #dbg_declare(ptr %val.dbg.spill86, !3878, !DIExpression(), !3978)
    #dbg_declare(ptr %residual.dbg.spill87, !3880, !DIExpression(), !3979)
    #dbg_declare(ptr %val.dbg.spill88, !3882, !DIExpression(), !3980)
  %3 = load ptr, ptr %self, align 4, !dbg !3981
  %4 = ptrtoint ptr %3 to i32, !dbg !3981
  %5 = icmp eq i32 %4, 0, !dbg !3981
  %_3 = select i1 %5, i32 1, i32 0, !dbg !3981
  %6 = trunc nuw i32 %_3 to i1, !dbg !3982
  br i1 %6, label %bb2, label %bb3, !dbg !3982

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !3983
  %8 = zext i1 %7 to i8, !dbg !3983
  store i8 %8, ptr %_0, align 1, !dbg !3983
  br label %bb231, !dbg !3983

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !3984
    #dbg_declare(ptr %parser.dbg.spill, !3658, !DIExpression(), !3985)
; call rustc_demangle::v0::Parser::next
  %9 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) #13, !dbg !3986
  %10 = extractvalue { i1, i8 } %9, 0, !dbg !3986
  %11 = extractvalue { i1, i8 } %9, 1, !dbg !3986
  %12 = zext i1 %10 to i8, !dbg !3986
  store i8 %12, ptr %_5, align 1, !dbg !3986
  %13 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !3986
  store i8 %11, ptr %13, align 1, !dbg !3986
  %14 = load i8, ptr %_5, align 1, !dbg !3987
  %15 = trunc nuw i8 %14 to i1, !dbg !3987
  %16 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !3987
  %17 = load i8, ptr %16, align 1, !dbg !3987
  %_6 = zext i1 %15 to i32, !dbg !3987
  %18 = trunc nuw i32 %_6 to i1, !dbg !3988
  br i1 %18, label %bb5, label %bb6, !dbg !3988

bb5:                                              ; preds = %bb3
  %19 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !3989
  %20 = load i8, ptr %19, align 1, !dbg !3989
  %21 = trunc nuw i8 %20 to i1, !dbg !3989
  %22 = zext i1 %21 to i8, !dbg !3989
  store i8 %22, ptr %err, align 1, !dbg !3989
; call rustc_demangle::v0::ParseError::message
  %23 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !3990
  %_11.0 = extractvalue { ptr, i32 } %23, 0, !dbg !3990
  %_11.1 = extractvalue { ptr, i32 } %23, 1, !dbg !3990
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !3991
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !3992
  %_13 = zext i1 %_9 to i32, !dbg !3992
  %24 = trunc nuw i32 %_13 to i1, !dbg !3992
  br i1 %24, label %bb11, label %bb10, !dbg !3992

bb6:                                              ; preds = %bb3
  %25 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !3993
  %tag = load i8, ptr %25, align 1, !dbg !3993
  store i8 %tag, ptr %tag.dbg.spill, align 1, !dbg !3993
    #dbg_declare(ptr %tag.dbg.spill, !3656, !DIExpression(), !3994)
    #dbg_declare(ptr %tag.dbg.spill, !3660, !DIExpression(), !3995)
  %26 = load ptr, ptr %self, align 4, !dbg !3996
  %27 = ptrtoint ptr %26 to i32, !dbg !3996
  %28 = icmp eq i32 %27, 0, !dbg !3996
  %_15 = select i1 %28, i32 1, i32 0, !dbg !3996
  %29 = trunc nuw i32 %_15 to i1, !dbg !3997
  br i1 %29, label %bb12, label %bb13, !dbg !3997

bb12:                                             ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %30 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !3998
  %31 = zext i1 %30 to i8, !dbg !3998
  store i8 %31, ptr %_0, align 1, !dbg !3998
  br label %bb231, !dbg !3998

bb13:                                             ; preds = %bb6
  store ptr %self, ptr %parser.dbg.spill89, align 4, !dbg !3999
    #dbg_declare(ptr %parser.dbg.spill89, !3668, !DIExpression(), !4000)
; call rustc_demangle::v0::Parser::push_depth
  %32 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE(ptr align 4 %self) #13, !dbg !4001
  store i8 %32, ptr %_17, align 1, !dbg !4001
  %33 = load i8, ptr %_17, align 1, !dbg !4002
  %34 = icmp eq i8 %33, 2, !dbg !4002
  %_18 = select i1 %34, i32 0, i32 1, !dbg !4002
  %35 = trunc nuw i32 %_18 to i1, !dbg !4003
  br i1 %35, label %bb15, label %bb16, !dbg !4003

bb15:                                             ; preds = %bb13
  %36 = load i8, ptr %_17, align 1, !dbg !4004
  %37 = trunc nuw i8 %36 to i1, !dbg !4004
  %38 = zext i1 %37 to i8, !dbg !4004
  store i8 %38, ptr %err1, align 1, !dbg !4004
; call rustc_demangle::v0::ParseError::message
  %39 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err1) #13, !dbg !4005
  %_22.0 = extractvalue { ptr, i32 } %39, 0, !dbg !4005
  %_22.1 = extractvalue { ptr, i32 } %39, 1, !dbg !4005
; call rustc_demangle::v0::Printer::print
  %_21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_22.0, i32 %_22.1) #13, !dbg !4006
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_21) #13, !dbg !4007
  %_24 = zext i1 %_20 to i32, !dbg !4007
  %40 = trunc nuw i32 %_24 to i1, !dbg !4007
  br i1 %40, label %bb21, label %bb20, !dbg !4007

bb16:                                             ; preds = %bb13
  store i8 0, ptr %opened_brace, align 1, !dbg !4008
  store ptr %in_value, ptr %open_brace_if_outside_expr, align 4, !dbg !4009
  %41 = getelementptr inbounds i8, ptr %open_brace_if_outside_expr, i32 4, !dbg !4009
  store ptr %opened_brace, ptr %41, align 4, !dbg !4009
  switch i8 %tag, label %bb22 [
    i8 112, label %bb33
    i8 104, label %bb32
    i8 116, label %bb32
    i8 109, label %bb32
    i8 121, label %bb32
    i8 111, label %bb32
    i8 106, label %bb32
    i8 97, label %bb31
    i8 115, label %bb31
    i8 108, label %bb31
    i8 120, label %bb31
    i8 110, label %bb31
    i8 105, label %bb31
    i8 98, label %bb30
    i8 99, label %bb29
    i8 101, label %bb28
    i8 82, label %bb27
    i8 81, label %bb27
    i8 65, label %bb26
    i8 84, label %bb25
    i8 86, label %bb24
    i8 66, label %bb23
  ], !dbg !4010

bb22:                                             ; preds = %bb16
  store i8 0, ptr %err8, align 1, !dbg !4011
; call rustc_demangle::v0::ParseError::message
  %42 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err8) #13, !dbg !4012
  %_223.0 = extractvalue { ptr, i32 } %42, 0, !dbg !4012
  %_223.1 = extractvalue { ptr, i32 } %42, 1, !dbg !4012
; call rustc_demangle::v0::Printer::print
  %_222 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_223.0, i32 %_223.1) #13, !dbg !4013
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_221 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_222) #13, !dbg !4014
  %_225 = zext i1 %_221 to i32, !dbg !4014
  %43 = trunc nuw i32 %_225 to i1, !dbg !4014
  br i1 %43, label %bb223, label %bb222, !dbg !4014

bb33:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print
  %_31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_27cca3636828088e60ce450d2eca2060, i32 1) #13, !dbg !4015
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_30 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_31) #13, !dbg !4016
  %_32 = zext i1 %_30 to i32, !dbg !4016
  %44 = trunc nuw i32 %_32 to i1, !dbg !4016
  br i1 %44, label %bb36, label %bb224, !dbg !4016

bb32:                                             ; preds = %bb16, %bb16, %bb16, %bb16, %bb16, %bb16
; call rustc_demangle::v0::Printer::print_const_uint
  %_34 = call zeroext i1 @_ZN14rustc_demangle2v07Printer16print_const_uint17h6458ccb71c2d2030E(ptr align 4 %self, i8 %tag) #13, !dbg !4017
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_33 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_34) #13, !dbg !4018
  %_35 = zext i1 %_33 to i32, !dbg !4018
  %45 = trunc nuw i32 %_35 to i1, !dbg !4018
  br i1 %45, label %bb39, label %bb224, !dbg !4018

bb31:                                             ; preds = %bb16, %bb16, %bb16, %bb16, %bb16, %bb16
; call rustc_demangle::v0::Printer::eat
  %_36 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 110) #13, !dbg !4019
  br i1 %_36, label %bb41, label %bb45, !dbg !4020

bb30:                                             ; preds = %bb16
  %46 = load ptr, ptr %self, align 4, !dbg !4021
  %47 = ptrtoint ptr %46 to i32, !dbg !4021
  %48 = icmp eq i32 %47, 0, !dbg !4021
  %_46 = select i1 %48, i32 1, i32 0, !dbg !4021
  %49 = trunc nuw i32 %_46 to i1, !dbg !4022
  br i1 %49, label %bb49, label %bb50, !dbg !4022

bb29:                                             ; preds = %bb16
  %50 = load ptr, ptr %self, align 4, !dbg !4021
  %51 = ptrtoint ptr %50 to i32, !dbg !4021
  %52 = icmp eq i32 %51, 0, !dbg !4021
  %_77 = select i1 %52, i32 1, i32 0, !dbg !4021
  %53 = trunc nuw i32 %_77 to i1, !dbg !4022
  br i1 %53, label %bb75, label %bb76, !dbg !4022

bb28:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_103 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hbc6454b96a907a18E"(ptr align 4 %open_brace_if_outside_expr, ptr align 4 %self) #13, !dbg !4023
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_102 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_103) #13, !dbg !4023
  %_106 = zext i1 %_102 to i32, !dbg !4023
  %54 = trunc nuw i32 %_106 to i1, !dbg !4023
  br i1 %54, label %bb102, label %bb101, !dbg !4023

bb27:                                             ; preds = %bb16, %bb16
  %55 = icmp eq i8 %tag, 82, !dbg !4024
  br i1 %55, label %bb110, label %bb116, !dbg !4024

bb26:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_132 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hbc6454b96a907a18E"(ptr align 4 %open_brace_if_outside_expr, ptr align 4 %self) #13, !dbg !4025
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_131 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_132) #13, !dbg !4025
  %_135 = zext i1 %_131 to i32, !dbg !4025
  %56 = trunc nuw i32 %_135 to i1, !dbg !4025
  br i1 %56, label %bb136, label %bb135, !dbg !4025

bb25:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_148 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hbc6454b96a907a18E"(ptr align 4 %open_brace_if_outside_expr, ptr align 4 %self) #13, !dbg !4026
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_147 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_148) #13, !dbg !4026
  %_151 = zext i1 %_147 to i32, !dbg !4026
  %57 = trunc nuw i32 %_151 to i1, !dbg !4026
  br i1 %57, label %bb151, label %bb150, !dbg !4026

bb24:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_167 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hbc6454b96a907a18E"(ptr align 4 %open_brace_if_outside_expr, ptr align 4 %self) #13, !dbg !4027
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_166 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_167) #13, !dbg !4027
  %_170 = zext i1 %_166 to i32, !dbg !4027
  %58 = trunc nuw i32 %_170 to i1, !dbg !4027
  br i1 %58, label %bb171, label %bb170, !dbg !4027

bb23:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print_backref
  %_216 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h5753f13fbe9f0a9eE(ptr align 4 %self, ptr align 1 %in_value) #13, !dbg !4028
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_215 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_216) #13, !dbg !4029
  %_219 = zext i1 %_215 to i32, !dbg !4029
  %59 = trunc nuw i32 %_219 to i1, !dbg !4029
  br i1 %59, label %bb218, label %bb224, !dbg !4029

bb36:                                             ; preds = %bb33
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %60 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_58f012df8fa22577035f778fe9bf2f12) #13, !dbg !4030
  %61 = zext i1 %60 to i8, !dbg !4030
  store i8 %61, ptr %_0, align 1, !dbg !4030
  br label %bb231, !dbg !4030

bb224:                                            ; preds = %bb23, %bb206, %bb195, %bb180, %bb164, %bb143, %bb129, %bb112, %bb105, %bb89, %bb62, %bb63, %bb45, %bb32, %bb33
  %62 = load i8, ptr %opened_brace, align 1, !dbg !4031
  %_227 = trunc nuw i8 %62 to i1, !dbg !4031
  br i1 %_227, label %bb225, label %bb229, !dbg !4031

bb231:                                            ; preds = %bb2, %bb11, %bb10, %bb12, %bb21, %bb20, %bb223, %bb222, %bb218, %bb228, %bb229, %bb171, %bb175, %bb176, %bb185, %bb184, %bb215, %bb214, %bb203, %bb207, %bb210, %bb192, %bb196, %bb199, %bb151, %bb155, %bb159, %bb167, %bb163, %bb136, %bb140, %bb144, %bb147, %bb120, %bb124, %bb128, %bb132, %bb115, %bb102, %bb106, %bb109, %bb75, %bb84, %bb83, %bb93, %bb98, %bb97, %bb49, %bb58, %bb57, %bb74, %bb73, %bb69, %bb66, %bb44, %bb48, %bb39, %bb36
  %63 = load i8, ptr %_0, align 1, !dbg !4032
  %64 = trunc nuw i8 %63 to i1, !dbg !4032
  ret i1 %64, !dbg !4032

bb39:                                             ; preds = %bb32
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %65 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9ed6d728ce144f6967df25dd3c28a5f7) #13, !dbg !4033
  %66 = zext i1 %65 to i8, !dbg !4033
  store i8 %66, ptr %_0, align 1, !dbg !4033
  br label %bb231, !dbg !4033

bb45:                                             ; preds = %bb41, %bb31
; call rustc_demangle::v0::Printer::print_const_uint
  %_41 = call zeroext i1 @_ZN14rustc_demangle2v07Printer16print_const_uint17h6458ccb71c2d2030E(ptr align 4 %self, i8 %tag) #13, !dbg !4034
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_40 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_41) #13, !dbg !4035
  %_42 = zext i1 %_40 to i32, !dbg !4035
  %67 = trunc nuw i32 %_42 to i1, !dbg !4035
  br i1 %67, label %bb48, label %bb224, !dbg !4035

bb41:                                             ; preds = %bb31
; call rustc_demangle::v0::Printer::print
  %_38 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_3bb2650aa074fcfb8c10a9c40791bfbc, i32 1) #13, !dbg !4036
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_37 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_38) #13, !dbg !4037
  %_39 = zext i1 %_37 to i32, !dbg !4037
  %68 = trunc nuw i32 %_39 to i1, !dbg !4037
  br i1 %68, label %bb44, label %bb45, !dbg !4037

bb44:                                             ; preds = %bb41
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %69 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_35e274eb2f4b538fe25e81004ffef15e) #13, !dbg !4038
  %70 = zext i1 %69 to i8, !dbg !4038
  store i8 %70, ptr %_0, align 1, !dbg !4038
  br label %bb231, !dbg !4038

bb48:                                             ; preds = %bb45
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %71 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_692e33c434fc686c887a82cca89b5200) #13, !dbg !4039
  %72 = zext i1 %71 to i8, !dbg !4039
  store i8 %72, ptr %_0, align 1, !dbg !4039
  br label %bb231, !dbg !4039

bb49:                                             ; preds = %bb30
; call rustc_demangle::v0::Printer::print
  %73 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4040
  %74 = zext i1 %73 to i8, !dbg !4040
  store i8 %74, ptr %_0, align 1, !dbg !4040
  br label %bb231, !dbg !4040

bb50:                                             ; preds = %bb30
  store ptr %self, ptr %parser.dbg.spill90, align 4, !dbg !4041
    #dbg_declare(ptr %parser.dbg.spill90, !3704, !DIExpression(), !4042)
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17h2dcdab77a1a24703E(ptr sret([8 x i8]) align 4 %_48, ptr align 4 %self) #13, !dbg !4043
  %75 = load ptr, ptr %_48, align 4, !dbg !4044
  %76 = ptrtoint ptr %75 to i32, !dbg !4044
  %77 = icmp eq i32 %76, 0, !dbg !4044
  %_49 = select i1 %77, i32 1, i32 0, !dbg !4044
  %78 = trunc nuw i32 %_49 to i1, !dbg !4045
  br i1 %78, label %bb52, label %bb53, !dbg !4045

bb52:                                             ; preds = %bb50
  %79 = getelementptr inbounds i8, ptr %_48, i32 4, !dbg !4046
  %80 = load i8, ptr %79, align 4, !dbg !4046
  %81 = trunc nuw i8 %80 to i1, !dbg !4046
  %82 = zext i1 %81 to i8, !dbg !4046
  store i8 %82, ptr %err2, align 1, !dbg !4046
; call rustc_demangle::v0::ParseError::message
  %83 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err2) #13, !dbg !4047
  %_54.0 = extractvalue { ptr, i32 } %83, 0, !dbg !4047
  %_54.1 = extractvalue { ptr, i32 } %83, 1, !dbg !4047
; call rustc_demangle::v0::Printer::print
  %_53 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_54.0, i32 %_54.1) #13, !dbg !4048
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_52 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_53) #13, !dbg !4049
  %_56 = zext i1 %_52 to i32, !dbg !4049
  %84 = trunc nuw i32 %_56 to i1, !dbg !4049
  br i1 %84, label %bb58, label %bb57, !dbg !4049

bb53:                                             ; preds = %bb50
  %x.0 = load ptr, ptr %_48, align 4, !dbg !4050
  %85 = getelementptr inbounds i8, ptr %_48, i32 4, !dbg !4050
  %x.1 = load i32, ptr %85, align 4, !dbg !4050
  store ptr %x.0, ptr %x.dbg.spill91, align 4, !dbg !4050
  %86 = getelementptr inbounds i8, ptr %x.dbg.spill91, i32 4, !dbg !4050
  store i32 %x.1, ptr %86, align 4, !dbg !4050
    #dbg_declare(ptr %x.dbg.spill91, !3706, !DIExpression(), !4051)
  store ptr %x.0, ptr %_45, align 4, !dbg !4052
  %87 = getelementptr inbounds i8, ptr %_45, i32 4, !dbg !4052
  store i32 %x.1, ptr %87, align 4, !dbg !4052
; call rustc_demangle::v0::HexNibbles::try_parse_uint
  call void @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h1ef6a10dcba92f07E(ptr sret([16 x i8]) align 8 %_43, ptr align 4 %_45) #13, !dbg !4053
  %88 = load i64, ptr %_43, align 8, !dbg !4054
  %89 = getelementptr inbounds i8, ptr %_43, i32 8, !dbg !4054
  %90 = load i64, ptr %89, align 8, !dbg !4054
  %_58 = trunc i64 %88 to i32, !dbg !4054
  %91 = trunc nuw i32 %_58 to i1, !dbg !4055
  br i1 %91, label %bb61, label %bb60, !dbg !4055

bb61:                                             ; preds = %bb53
  %92 = getelementptr inbounds i8, ptr %_43, i32 8, !dbg !4055
  %93 = load i64, ptr %92, align 8, !dbg !4055
  switch i64 %93, label %bb60 [
    i64 0, label %bb63
    i64 1, label %bb62
  ], !dbg !4055

bb60:                                             ; preds = %bb61, %bb53
  store i8 0, ptr %err3, align 1, !dbg !4011
; call rustc_demangle::v0::ParseError::message
  %94 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err3) #13, !dbg !4056
  %_68.0 = extractvalue { ptr, i32 } %94, 0, !dbg !4056
  %_68.1 = extractvalue { ptr, i32 } %94, 1, !dbg !4056
; call rustc_demangle::v0::Printer::print
  %_67 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_68.0, i32 %_68.1) #13, !dbg !4057
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_66 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_67) #13, !dbg !4058
  %_70 = zext i1 %_66 to i32, !dbg !4058
  %95 = trunc nuw i32 %_70 to i1, !dbg !4058
  br i1 %95, label %bb74, label %bb73, !dbg !4058

bb63:                                             ; preds = %bb61
; call rustc_demangle::v0::Printer::print
  %_60 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_6f4357e3a3c9006d5d6d935934a9de54, i32 5) #13, !dbg !4059
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_59 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_60) #13, !dbg !4060
  %_61 = zext i1 %_59 to i32, !dbg !4060
  %96 = trunc nuw i32 %_61 to i1, !dbg !4060
  br i1 %96, label %bb66, label %bb224, !dbg !4060

bb62:                                             ; preds = %bb61
; call rustc_demangle::v0::Printer::print
  %_63 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_c9ee9951a160df092319190fa06505e4, i32 4) #13, !dbg !4061
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_62 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_63) #13, !dbg !4062
  %_64 = zext i1 %_62 to i32, !dbg !4062
  %97 = trunc nuw i32 %_64 to i1, !dbg !4062
  br i1 %97, label %bb69, label %bb224, !dbg !4062

bb66:                                             ; preds = %bb63
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %98 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_abba61d2e6b97d0cf22b9ed30ecbec87) #13, !dbg !4063
  %99 = zext i1 %98 to i8, !dbg !4063
  store i8 %99, ptr %_0, align 1, !dbg !4063
  br label %bb231, !dbg !4063

bb69:                                             ; preds = %bb62
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %100 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d57767391fa56b914512dd3f1cf4b5f4) #13, !dbg !4064
  %101 = zext i1 %100 to i8, !dbg !4064
  store i8 %101, ptr %_0, align 1, !dbg !4064
  br label %bb231, !dbg !4064

bb74:                                             ; preds = %bb60
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %102 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_38f185384a790a67ba514b4d50bac362) #13, !dbg !4065
  %103 = zext i1 %102 to i8, !dbg !4065
  store i8 %103, ptr %_0, align 1, !dbg !4065
  br label %bb231, !dbg !4065

bb73:                                             ; preds = %bb60
  %104 = load i8, ptr %err3, align 1, !dbg !4066
  %105 = trunc nuw i8 %104 to i1, !dbg !4066
  %106 = getelementptr inbounds i8, ptr %_71, i32 4, !dbg !4066
  %107 = zext i1 %105 to i8, !dbg !4066
  store i8 %107, ptr %106, align 4, !dbg !4066
  store ptr null, ptr %_71, align 4, !dbg !4066
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_71, i32 16, i1 false), !dbg !4067
  store i8 0, ptr %_0, align 1, !dbg !4068
  br label %bb231, !dbg !4069

bb58:                                             ; preds = %bb52
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %108 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_66418e448bae042db4c4e2f934871d2c) #13, !dbg !4070
  %109 = zext i1 %108 to i8, !dbg !4070
  store i8 %109, ptr %_0, align 1, !dbg !4070
  br label %bb231, !dbg !4070

bb57:                                             ; preds = %bb52
  %110 = load i8, ptr %err2, align 1, !dbg !4071
  %111 = trunc nuw i8 %110 to i1, !dbg !4071
  %112 = getelementptr inbounds i8, ptr %_57, i32 4, !dbg !4071
  %113 = zext i1 %111 to i8, !dbg !4071
  store i8 %113, ptr %112, align 4, !dbg !4071
  store ptr null, ptr %_57, align 4, !dbg !4071
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_57, i32 16, i1 false), !dbg !4072
  store i8 0, ptr %_0, align 1, !dbg !4073
  br label %bb231, !dbg !4074

bb75:                                             ; preds = %bb29
; call rustc_demangle::v0::Printer::print
  %114 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4040
  %115 = zext i1 %114 to i8, !dbg !4040
  store i8 %115, ptr %_0, align 1, !dbg !4040
  br label %bb231, !dbg !4040

bb76:                                             ; preds = %bb29
  store ptr %self, ptr %parser.dbg.spill92, align 4, !dbg !4041
    #dbg_declare(ptr %parser.dbg.spill92, !3730, !DIExpression(), !4075)
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17h2dcdab77a1a24703E(ptr sret([8 x i8]) align 4 %_79, ptr align 4 %self) #13, !dbg !4076
  %116 = load ptr, ptr %_79, align 4, !dbg !4077
  %117 = ptrtoint ptr %116 to i32, !dbg !4077
  %118 = icmp eq i32 %117, 0, !dbg !4077
  %_80 = select i1 %118, i32 1, i32 0, !dbg !4077
  %119 = trunc nuw i32 %_80 to i1, !dbg !4078
  br i1 %119, label %bb78, label %bb79, !dbg !4078

bb78:                                             ; preds = %bb76
  %120 = getelementptr inbounds i8, ptr %_79, i32 4, !dbg !4079
  %121 = load i8, ptr %120, align 4, !dbg !4079
  %122 = trunc nuw i8 %121 to i1, !dbg !4079
  %123 = zext i1 %122 to i8, !dbg !4079
  store i8 %123, ptr %err4, align 1, !dbg !4079
; call rustc_demangle::v0::ParseError::message
  %124 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err4) #13, !dbg !4080
  %_85.0 = extractvalue { ptr, i32 } %124, 0, !dbg !4080
  %_85.1 = extractvalue { ptr, i32 } %124, 1, !dbg !4080
; call rustc_demangle::v0::Printer::print
  %_84 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_85.0, i32 %_85.1) #13, !dbg !4081
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_83 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_84) #13, !dbg !4082
  %_87 = zext i1 %_83 to i32, !dbg !4082
  %125 = trunc nuw i32 %_87 to i1, !dbg !4082
  br i1 %125, label %bb84, label %bb83, !dbg !4082

bb79:                                             ; preds = %bb76
  %x.093 = load ptr, ptr %_79, align 4, !dbg !4083
  %126 = getelementptr inbounds i8, ptr %_79, i32 4, !dbg !4083
  %x.194 = load i32, ptr %126, align 4, !dbg !4083
  store ptr %x.093, ptr %x.dbg.spill95, align 4, !dbg !4083
  %127 = getelementptr inbounds i8, ptr %x.dbg.spill95, i32 4, !dbg !4083
  store i32 %x.194, ptr %127, align 4, !dbg !4083
    #dbg_declare(ptr %x.dbg.spill95, !3732, !DIExpression(), !4084)
  store ptr %x.093, ptr %_76, align 4, !dbg !4085
  %128 = getelementptr inbounds i8, ptr %_76, i32 4, !dbg !4085
  store i32 %x.194, ptr %128, align 4, !dbg !4085
; call rustc_demangle::v0::HexNibbles::try_parse_uint
  call void @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h1ef6a10dcba92f07E(ptr sret([16 x i8]) align 8 %1, ptr align 4 %_76) #13, !dbg !4086
  %_74.0 = load i64, ptr %1, align 8, !dbg !4086
  %129 = getelementptr inbounds i8, ptr %1, i32 8, !dbg !4086
  %_74.1 = load i64, ptr %129, align 8, !dbg !4086
; call core::option::Option<T>::and_then
  %130 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h53aae724df5e5824E"(i64 %_74.0, i64 %_74.1) #13, !dbg !4087
  %_73.0 = extractvalue { i32, i32 } %130, 0, !dbg !4087
  %_73.1 = extractvalue { i32, i32 } %130, 1, !dbg !4087
; call core::option::Option<T>::and_then
  %131 = call i32 @"_ZN4core6option15Option$LT$T$GT$8and_then17h577cb2e29999f52fE"(i32 %_73.0, i32 %_73.1) #13, !dbg !4088
  store i32 %131, ptr %valid_char, align 4, !dbg !4088
  %132 = load i32, ptr %valid_char, align 4, !dbg !4089
  %133 = icmp eq i32 %132, 1114112, !dbg !4089
  %_89 = select i1 %133, i32 0, i32 1, !dbg !4089
  %134 = trunc nuw i32 %_89 to i1, !dbg !4090
  br i1 %134, label %bb89, label %bb88, !dbg !4090

bb89:                                             ; preds = %bb79
  %c = load i32, ptr %valid_char, align 4, !dbg !4091
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !4091
    #dbg_declare(ptr %c.dbg.spill, !3740, !DIExpression(), !4092)
; call core::iter::sources::once::once
  %_93 = call i32 @_ZN4core4iter7sources4once4once17h79dea27c84eede91E(i32 %c) #13, !dbg !4093
; call rustc_demangle::v0::Printer::print_quoted_escaped_chars
  %_92 = call zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h914937b601f2723dE(ptr align 4 %self, i32 39, i32 %_93) #13, !dbg !4094
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_91 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_92) #13, !dbg !4095
  %_94 = zext i1 %_91 to i32, !dbg !4095
  %135 = trunc nuw i32 %_94 to i1, !dbg !4095
  br i1 %135, label %bb93, label %bb224, !dbg !4095

bb88:                                             ; preds = %bb79
  store i8 0, ptr %err5, align 1, !dbg !4096
; call rustc_demangle::v0::ParseError::message
  %136 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err5) #13, !dbg !4097
  %_98.0 = extractvalue { ptr, i32 } %136, 0, !dbg !4097
  %_98.1 = extractvalue { ptr, i32 } %136, 1, !dbg !4097
; call rustc_demangle::v0::Printer::print
  %_97 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_98.0, i32 %_98.1) #13, !dbg !4098
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_96 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_97) #13, !dbg !4099
  %_100 = zext i1 %_96 to i32, !dbg !4099
  %137 = trunc nuw i32 %_100 to i1, !dbg !4099
  br i1 %137, label %bb98, label %bb97, !dbg !4099

bb98:                                             ; preds = %bb88
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %138 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_321a71decb31d99babce4bc074bcd8b2) #13, !dbg !4100
  %139 = zext i1 %138 to i8, !dbg !4100
  store i8 %139, ptr %_0, align 1, !dbg !4100
  br label %bb231, !dbg !4100

bb97:                                             ; preds = %bb88
  %140 = load i8, ptr %err5, align 1, !dbg !4101
  %141 = trunc nuw i8 %140 to i1, !dbg !4101
  %142 = getelementptr inbounds i8, ptr %_101, i32 4, !dbg !4101
  %143 = zext i1 %141 to i8, !dbg !4101
  store i8 %143, ptr %142, align 4, !dbg !4101
  store ptr null, ptr %_101, align 4, !dbg !4101
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_101, i32 16, i1 false), !dbg !4102
  store i8 0, ptr %_0, align 1, !dbg !4103
  br label %bb231, !dbg !4104

bb93:                                             ; preds = %bb89
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %144 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_c12f37eacd5884254b3ec5c954a8867c) #13, !dbg !4105
  %145 = zext i1 %144 to i8, !dbg !4105
  store i8 %145, ptr %_0, align 1, !dbg !4105
  br label %bb231, !dbg !4105

bb84:                                             ; preds = %bb78
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %146 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b951d0b7c1735c08fa7b9e731766fe79) #13, !dbg !4106
  %147 = zext i1 %146 to i8, !dbg !4106
  store i8 %147, ptr %_0, align 1, !dbg !4106
  br label %bb231, !dbg !4106

bb83:                                             ; preds = %bb78
  %148 = load i8, ptr %err4, align 1, !dbg !4107
  %149 = trunc nuw i8 %148 to i1, !dbg !4107
  %150 = getelementptr inbounds i8, ptr %_88, i32 4, !dbg !4107
  %151 = zext i1 %149 to i8, !dbg !4107
  store i8 %151, ptr %150, align 4, !dbg !4107
  store ptr null, ptr %_88, align 4, !dbg !4107
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_88, i32 16, i1 false), !dbg !4108
  store i8 0, ptr %_0, align 1, !dbg !4109
  br label %bb231, !dbg !4110

bb102:                                            ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %152 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f08660be9a9bed030b118b7cf537178e) #13, !dbg !4111
  %153 = zext i1 %152 to i8, !dbg !4111
  store i8 %153, ptr %_0, align 1, !dbg !4111
  br label %bb231, !dbg !4111

bb101:                                            ; preds = %bb28
; call rustc_demangle::v0::Printer::print
  %_108 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_09f68c7ae2e79d4408ae53b7c9133001, i32 1) #13, !dbg !4112
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_107 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_108) #13, !dbg !4113
  %_109 = zext i1 %_107 to i32, !dbg !4113
  %154 = trunc nuw i32 %_109 to i1, !dbg !4113
  br i1 %154, label %bb106, label %bb105, !dbg !4113

bb106:                                            ; preds = %bb101
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %155 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_e399f891b7d00a9ab293576963defc3b) #13, !dbg !4114
  %156 = zext i1 %155 to i8, !dbg !4114
  store i8 %156, ptr %_0, align 1, !dbg !4114
  br label %bb231, !dbg !4114

bb105:                                            ; preds = %bb101
; call rustc_demangle::v0::Printer::print_const_str_literal
  %_111 = call zeroext i1 @_ZN14rustc_demangle2v07Printer23print_const_str_literal17h3070eca8218c613cE(ptr align 4 %self) #13, !dbg !4115
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_110 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_111) #13, !dbg !4116
  %_112 = zext i1 %_110 to i32, !dbg !4116
  %157 = trunc nuw i32 %_112 to i1, !dbg !4116
  br i1 %157, label %bb109, label %bb224, !dbg !4116

bb109:                                            ; preds = %bb105
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %158 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_03dcaee0c2238237c8727a9dbb1eae53) #13, !dbg !4117
  %159 = zext i1 %158 to i8, !dbg !4117
  store i8 %159, ptr %_0, align 1, !dbg !4117
  br label %bb231, !dbg !4117

bb110:                                            ; preds = %bb27
; call rustc_demangle::v0::Printer::eat
  %_113 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 101) #13, !dbg !4118
  br i1 %_113, label %bb112, label %bb116, !dbg !4119

bb116:                                            ; preds = %bb110, %bb27
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_118 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hbc6454b96a907a18E"(ptr align 4 %open_brace_if_outside_expr, ptr align 4 %self) #13, !dbg !4120
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_117 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_118) #13, !dbg !4120
  %_121 = zext i1 %_117 to i32, !dbg !4120
  %160 = trunc nuw i32 %_121 to i1, !dbg !4120
  br i1 %160, label %bb120, label %bb119, !dbg !4120

bb112:                                            ; preds = %bb110
; call rustc_demangle::v0::Printer::print_const_str_literal
  %_115 = call zeroext i1 @_ZN14rustc_demangle2v07Printer23print_const_str_literal17h3070eca8218c613cE(ptr align 4 %self) #13, !dbg !4121
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_114 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_115) #13, !dbg !4122
  %_116 = zext i1 %_114 to i32, !dbg !4122
  %161 = trunc nuw i32 %_116 to i1, !dbg !4122
  br i1 %161, label %bb115, label %bb224, !dbg !4122

bb115:                                            ; preds = %bb112
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %162 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_3a0a9673827b9a32501f30b465752845) #13, !dbg !4123
  %163 = zext i1 %162 to i8, !dbg !4123
  store i8 %163, ptr %_0, align 1, !dbg !4123
  br label %bb231, !dbg !4123

bb120:                                            ; preds = %bb116
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %164 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a5751ae476814f377f835d368c2c8869) #13, !dbg !4124
  %165 = zext i1 %164 to i8, !dbg !4124
  store i8 %165, ptr %_0, align 1, !dbg !4124
  br label %bb231, !dbg !4124

bb119:                                            ; preds = %bb116
; call rustc_demangle::v0::Printer::print
  %_123 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_90406cad91539dd86ffc765a92ace5f1, i32 1) #13, !dbg !4125
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_122 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_123) #13, !dbg !4126
  %_124 = zext i1 %_122 to i32, !dbg !4126
  %166 = trunc nuw i32 %_124 to i1, !dbg !4126
  br i1 %166, label %bb124, label %bb123, !dbg !4126

bb124:                                            ; preds = %bb119
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %167 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b3e50377ca04fe93e9f6a0ef731400de) #13, !dbg !4127
  %168 = zext i1 %167 to i8, !dbg !4127
  store i8 %168, ptr %_0, align 1, !dbg !4127
  br label %bb231, !dbg !4127

bb123:                                            ; preds = %bb119
  %169 = icmp eq i8 %tag, 82, !dbg !4128
  br i1 %169, label %bb129, label %bb125, !dbg !4128

bb129:                                            ; preds = %bb125, %bb123
; call rustc_demangle::v0::Printer::print_const
  %_129 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %self, i1 zeroext true) #13, !dbg !4129
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_128 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_129) #13, !dbg !4130
  %_130 = zext i1 %_128 to i32, !dbg !4130
  %170 = trunc nuw i32 %_130 to i1, !dbg !4130
  br i1 %170, label %bb132, label %bb224, !dbg !4130

bb125:                                            ; preds = %bb123
; call rustc_demangle::v0::Printer::print
  %_126 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_4543a0c9d8502324cad8b2ffa53f8557, i32 4) #13, !dbg !4131
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_125 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_126) #13, !dbg !4132
  %_127 = zext i1 %_125 to i32, !dbg !4132
  %171 = trunc nuw i32 %_127 to i1, !dbg !4132
  br i1 %171, label %bb128, label %bb129, !dbg !4132

bb128:                                            ; preds = %bb125
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %172 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_80f4cf6f275fd67b39033d61fc4abb13) #13, !dbg !4133
  %173 = zext i1 %172 to i8, !dbg !4133
  store i8 %173, ptr %_0, align 1, !dbg !4133
  br label %bb231, !dbg !4133

bb132:                                            ; preds = %bb129
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %174 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_cb30856e1a1824c72a1ad63ee268a554) #13, !dbg !4134
  %175 = zext i1 %174 to i8, !dbg !4134
  store i8 %175, ptr %_0, align 1, !dbg !4134
  br label %bb231, !dbg !4134

bb136:                                            ; preds = %bb26
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %176 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_843ecd5511435909c94edccee3c9ea44) #13, !dbg !4135
  %177 = zext i1 %176 to i8, !dbg !4135
  store i8 %177, ptr %_0, align 1, !dbg !4135
  br label %bb231, !dbg !4135

bb135:                                            ; preds = %bb26
; call rustc_demangle::v0::Printer::print
  %_137 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_036636151bab3754536335311c8d3ab8, i32 1) #13, !dbg !4136
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_136 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_137) #13, !dbg !4137
  %_138 = zext i1 %_136 to i32, !dbg !4137
  %178 = trunc nuw i32 %_138 to i1, !dbg !4137
  br i1 %178, label %bb140, label %bb139, !dbg !4137

bb140:                                            ; preds = %bb135
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %179 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_846cb5e65fea24d4cb98261127649875) #13, !dbg !4138
  %180 = zext i1 %179 to i8, !dbg !4138
  store i8 %180, ptr %_0, align 1, !dbg !4138
  br label %bb231, !dbg !4138

bb139:                                            ; preds = %bb135
; call rustc_demangle::v0::Printer::print_sep_list
  %181 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h11502cdacf266f16E(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !4139
  %_140.0 = extractvalue { i32, i32 } %181, 0, !dbg !4139
  %_140.1 = extractvalue { i32, i32 } %181, 1, !dbg !4139
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %182 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_140.0, i32 %_140.1) #13, !dbg !4140
  %183 = extractvalue { i32, i32 } %182, 0, !dbg !4140
  %184 = extractvalue { i32, i32 } %182, 1, !dbg !4140
  store i32 %183, ptr %_139, align 4, !dbg !4140
  %185 = getelementptr inbounds i8, ptr %_139, i32 4, !dbg !4140
  store i32 %184, ptr %185, align 4, !dbg !4140
  %_142 = load i32, ptr %_139, align 4, !dbg !4140
  %186 = getelementptr inbounds i8, ptr %_139, i32 4, !dbg !4140
  %187 = load i32, ptr %186, align 4, !dbg !4140
  %188 = trunc nuw i32 %_142 to i1, !dbg !4140
  br i1 %188, label %bb144, label %bb143, !dbg !4140

bb144:                                            ; preds = %bb139
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %189 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_3473781297785ca3b5ac81035d46faa0) #13, !dbg !4141
  %190 = zext i1 %189 to i8, !dbg !4141
  store i8 %190, ptr %_0, align 1, !dbg !4141
  br label %bb231, !dbg !4141

bb143:                                            ; preds = %bb139
  %191 = getelementptr inbounds i8, ptr %_139, i32 4, !dbg !4140
  %val = load i32, ptr %191, align 4, !dbg !4140
  store i32 %val, ptr %val.dbg.spill96, align 4, !dbg !4140
    #dbg_declare(ptr %val.dbg.spill96, !3794, !DIExpression(), !4142)
; call rustc_demangle::v0::Printer::print
  %_145 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_7a6887ef0f93938f57a4bb958cf80311, i32 1) #13, !dbg !4143
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_144 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_145) #13, !dbg !4144
  %_146 = zext i1 %_144 to i32, !dbg !4144
  %192 = trunc nuw i32 %_146 to i1, !dbg !4144
  br i1 %192, label %bb147, label %bb224, !dbg !4144

bb147:                                            ; preds = %bb143
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %193 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_fb7387a7d4faad44f920ce2c322a02af) #13, !dbg !4145
  %194 = zext i1 %193 to i8, !dbg !4145
  store i8 %194, ptr %_0, align 1, !dbg !4145
  br label %bb231, !dbg !4145

bb151:                                            ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %195 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_5deffcd89ec898b58ca9dd4f223d9a1b) #13, !dbg !4146
  %196 = zext i1 %195 to i8, !dbg !4146
  store i8 %196, ptr %_0, align 1, !dbg !4146
  br label %bb231, !dbg !4146

bb150:                                            ; preds = %bb25
; call rustc_demangle::v0::Printer::print
  %_153 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_1ff25e6ad58d770003043bae3c4113bf, i32 1) #13, !dbg !4147
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_152 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_153) #13, !dbg !4148
  %_154 = zext i1 %_152 to i32, !dbg !4148
  %197 = trunc nuw i32 %_154 to i1, !dbg !4148
  br i1 %197, label %bb155, label %bb154, !dbg !4148

bb155:                                            ; preds = %bb150
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %198 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9574321608dec1d2baa0a324f7990d7f) #13, !dbg !4149
  %199 = zext i1 %198 to i8, !dbg !4149
  store i8 %199, ptr %_0, align 1, !dbg !4149
  br label %bb231, !dbg !4149

bb154:                                            ; preds = %bb150
; call rustc_demangle::v0::Printer::print_sep_list
  %200 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hf509d84c0cd68436E(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !4150
  %_156.0 = extractvalue { i32, i32 } %200, 0, !dbg !4150
  %_156.1 = extractvalue { i32, i32 } %200, 1, !dbg !4150
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %201 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_156.0, i32 %_156.1) #13, !dbg !4151
  %202 = extractvalue { i32, i32 } %201, 0, !dbg !4151
  %203 = extractvalue { i32, i32 } %201, 1, !dbg !4151
  store i32 %202, ptr %_155, align 4, !dbg !4151
  %204 = getelementptr inbounds i8, ptr %_155, i32 4, !dbg !4151
  store i32 %203, ptr %204, align 4, !dbg !4151
  %_158 = load i32, ptr %_155, align 4, !dbg !4151
  %205 = getelementptr inbounds i8, ptr %_155, i32 4, !dbg !4151
  %206 = load i32, ptr %205, align 4, !dbg !4151
  %207 = trunc nuw i32 %_158 to i1, !dbg !4151
  br i1 %207, label %bb159, label %bb158, !dbg !4151

bb159:                                            ; preds = %bb154
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %208 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_de8b6be32b09b13a847b977788cb0ac4) #13, !dbg !4152
  %209 = zext i1 %208 to i8, !dbg !4152
  store i8 %209, ptr %_0, align 1, !dbg !4152
  br label %bb231, !dbg !4152

bb158:                                            ; preds = %bb154
  %210 = getelementptr inbounds i8, ptr %_155, i32 4, !dbg !4151
  %count = load i32, ptr %210, align 4, !dbg !4151
  store i32 %count, ptr %count.dbg.spill, align 4, !dbg !4151
    #dbg_declare(ptr %count.dbg.spill, !3808, !DIExpression(), !4153)
    #dbg_declare(ptr %count.dbg.spill, !3812, !DIExpression(), !4154)
  %211 = icmp eq i32 %count, 1, !dbg !4155
  br i1 %211, label %bb160, label %bb164, !dbg !4155

bb160:                                            ; preds = %bb158
; call rustc_demangle::v0::Printer::print
  %_161 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_41a776d8d06dc2b9b0480e88fa257ffe, i32 1) #13, !dbg !4156
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_160 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_161) #13, !dbg !4157
  %_162 = zext i1 %_160 to i32, !dbg !4157
  %212 = trunc nuw i32 %_162 to i1, !dbg !4157
  br i1 %212, label %bb163, label %bb164, !dbg !4157

bb164:                                            ; preds = %bb160, %bb158
; call rustc_demangle::v0::Printer::print
  %_164 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_9e3f62b0e6490cc45676dc85f910c2d0, i32 1) #13, !dbg !4158
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_163 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_164) #13, !dbg !4159
  %_165 = zext i1 %_163 to i32, !dbg !4159
  %213 = trunc nuw i32 %_165 to i1, !dbg !4159
  br i1 %213, label %bb167, label %bb224, !dbg !4159

bb163:                                            ; preds = %bb160
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %214 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_3bdd94f17c65b5e846d83fbc27b4ee62) #13, !dbg !4160
  %215 = zext i1 %214 to i8, !dbg !4160
  store i8 %215, ptr %_0, align 1, !dbg !4160
  br label %bb231, !dbg !4160

bb167:                                            ; preds = %bb164
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %216 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_510db121a7ecf02e245c1f4b8dbf12df) #13, !dbg !4161
  %217 = zext i1 %216 to i8, !dbg !4161
  store i8 %217, ptr %_0, align 1, !dbg !4161
  br label %bb231, !dbg !4161

bb171:                                            ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %218 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_4dab6447145314021a06bd4e0a400ebf) #13, !dbg !4162
  %219 = zext i1 %218 to i8, !dbg !4162
  store i8 %219, ptr %_0, align 1, !dbg !4162
  br label %bb231, !dbg !4162

bb170:                                            ; preds = %bb24
; call rustc_demangle::v0::Printer::print_path
  %_172 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext true) #13, !dbg !4163
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_171 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_172) #13, !dbg !4164
  %_173 = zext i1 %_171 to i32, !dbg !4164
  %220 = trunc nuw i32 %_173 to i1, !dbg !4164
  br i1 %220, label %bb175, label %bb174, !dbg !4164

bb175:                                            ; preds = %bb170
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %221 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_0d16bd17918a9004692a81948b9cbf0b) #13, !dbg !4165
  %222 = zext i1 %221 to i8, !dbg !4165
  store i8 %222, ptr %_0, align 1, !dbg !4165
  br label %bb231, !dbg !4165

bb174:                                            ; preds = %bb170
  %223 = load ptr, ptr %self, align 4, !dbg !4021
  %224 = ptrtoint ptr %223 to i32, !dbg !4021
  %225 = icmp eq i32 %224, 0, !dbg !4021
  %_174 = select i1 %225, i32 1, i32 0, !dbg !4021
  %226 = trunc nuw i32 %_174 to i1, !dbg !4022
  br i1 %226, label %bb176, label %bb177, !dbg !4022

bb176:                                            ; preds = %bb174
; call rustc_demangle::v0::Printer::print
  %227 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4040
  %228 = zext i1 %227 to i8, !dbg !4040
  store i8 %228, ptr %_0, align 1, !dbg !4040
  br label %bb231, !dbg !4040

bb177:                                            ; preds = %bb174
  store ptr %self, ptr %parser.dbg.spill97, align 4, !dbg !4041
    #dbg_declare(ptr %parser.dbg.spill97, !3830, !DIExpression(), !4166)
; call rustc_demangle::v0::Parser::next
  %229 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) #13, !dbg !4167
  %230 = extractvalue { i1, i8 } %229, 0, !dbg !4167
  %231 = extractvalue { i1, i8 } %229, 1, !dbg !4167
  %232 = zext i1 %230 to i8, !dbg !4167
  store i8 %232, ptr %_176, align 1, !dbg !4167
  %233 = getelementptr inbounds i8, ptr %_176, i32 1, !dbg !4167
  store i8 %231, ptr %233, align 1, !dbg !4167
  %234 = load i8, ptr %_176, align 1, !dbg !4168
  %235 = trunc nuw i8 %234 to i1, !dbg !4168
  %236 = getelementptr inbounds i8, ptr %_176, i32 1, !dbg !4168
  %237 = load i8, ptr %236, align 1, !dbg !4168
  %_177 = zext i1 %235 to i32, !dbg !4168
  %238 = trunc nuw i32 %_177 to i1, !dbg !4169
  br i1 %238, label %bb179, label %bb180, !dbg !4169

bb179:                                            ; preds = %bb177
  %239 = getelementptr inbounds i8, ptr %_176, i32 1, !dbg !4170
  %240 = load i8, ptr %239, align 1, !dbg !4170
  %241 = trunc nuw i8 %240 to i1, !dbg !4170
  %242 = zext i1 %241 to i8, !dbg !4170
  store i8 %242, ptr %err6, align 1, !dbg !4170
; call rustc_demangle::v0::ParseError::message
  %243 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err6) #13, !dbg !4171
  %_182.0 = extractvalue { ptr, i32 } %243, 0, !dbg !4171
  %_182.1 = extractvalue { ptr, i32 } %243, 1, !dbg !4171
; call rustc_demangle::v0::Printer::print
  %_181 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_182.0, i32 %_182.1) #13, !dbg !4172
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_180 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_181) #13, !dbg !4173
  %_184 = zext i1 %_180 to i32, !dbg !4173
  %244 = trunc nuw i32 %_184 to i1, !dbg !4173
  br i1 %244, label %bb185, label %bb184, !dbg !4173

bb180:                                            ; preds = %bb177
  %245 = getelementptr inbounds i8, ptr %_176, i32 1, !dbg !4174
  %x = load i8, ptr %245, align 1, !dbg !4174
  store i8 %x, ptr %x.dbg.spill98, align 1, !dbg !4174
    #dbg_declare(ptr %x.dbg.spill98, !3832, !DIExpression(), !4175)
  switch i8 %x, label %bb186 [
    i8 85, label %bb224
    i8 84, label %bb188
    i8 83, label %bb187
  ], !dbg !4022

bb186:                                            ; preds = %bb180
  store i8 0, ptr %err7, align 1, !dbg !4011
; call rustc_demangle::v0::ParseError::message
  %246 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err7) #13, !dbg !4176
  %_211.0 = extractvalue { ptr, i32 } %246, 0, !dbg !4176
  %_211.1 = extractvalue { ptr, i32 } %246, 1, !dbg !4176
; call rustc_demangle::v0::Printer::print
  %_210 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_211.0, i32 %_211.1) #13, !dbg !4177
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_209 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_210) #13, !dbg !4178
  %_213 = zext i1 %_209 to i32, !dbg !4178
  %247 = trunc nuw i32 %_213 to i1, !dbg !4178
  br i1 %247, label %bb215, label %bb214, !dbg !4178

bb188:                                            ; preds = %bb180
; call rustc_demangle::v0::Printer::print
  %_187 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_1ff25e6ad58d770003043bae3c4113bf, i32 1) #13, !dbg !4179
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_186 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_187) #13, !dbg !4180
  %_188 = zext i1 %_186 to i32, !dbg !4180
  %248 = trunc nuw i32 %_188 to i1, !dbg !4180
  br i1 %248, label %bb192, label %bb191, !dbg !4180

bb187:                                            ; preds = %bb180
; call rustc_demangle::v0::Printer::print
  %_198 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_fe2ddbdc622a788f5416063d1e8d8ad4, i32 3) #13, !dbg !4181
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_197 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_198) #13, !dbg !4182
  %_199 = zext i1 %_197 to i32, !dbg !4182
  %249 = trunc nuw i32 %_199 to i1, !dbg !4182
  br i1 %249, label %bb203, label %bb202, !dbg !4182

bb192:                                            ; preds = %bb188
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %250 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_4b8dc7744292b691f926096cb37562c5) #13, !dbg !4183
  %251 = zext i1 %250 to i8, !dbg !4183
  store i8 %251, ptr %_0, align 1, !dbg !4183
  br label %bb231, !dbg !4183

bb191:                                            ; preds = %bb188
; call rustc_demangle::v0::Printer::print_sep_list
  %252 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h450b8f780bd93df1E(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !4184
  %_190.0 = extractvalue { i32, i32 } %252, 0, !dbg !4184
  %_190.1 = extractvalue { i32, i32 } %252, 1, !dbg !4184
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %253 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_190.0, i32 %_190.1) #13, !dbg !4185
  %254 = extractvalue { i32, i32 } %253, 0, !dbg !4185
  %255 = extractvalue { i32, i32 } %253, 1, !dbg !4185
  store i32 %254, ptr %_189, align 4, !dbg !4185
  %256 = getelementptr inbounds i8, ptr %_189, i32 4, !dbg !4185
  store i32 %255, ptr %256, align 4, !dbg !4185
  %_192 = load i32, ptr %_189, align 4, !dbg !4185
  %257 = getelementptr inbounds i8, ptr %_189, i32 4, !dbg !4185
  %258 = load i32, ptr %257, align 4, !dbg !4185
  %259 = trunc nuw i32 %_192 to i1, !dbg !4185
  br i1 %259, label %bb196, label %bb195, !dbg !4185

bb196:                                            ; preds = %bb191
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %260 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_0ff0760917077e36874136d5c371bed7) #13, !dbg !4186
  %261 = zext i1 %260 to i8, !dbg !4186
  store i8 %261, ptr %_0, align 1, !dbg !4186
  br label %bb231, !dbg !4186

bb195:                                            ; preds = %bb191
  %262 = getelementptr inbounds i8, ptr %_189, i32 4, !dbg !4185
  %val99 = load i32, ptr %262, align 4, !dbg !4185
  store i32 %val99, ptr %val.dbg.spill100, align 4, !dbg !4185
    #dbg_declare(ptr %val.dbg.spill100, !3846, !DIExpression(), !4187)
; call rustc_demangle::v0::Printer::print
  %_195 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_9e3f62b0e6490cc45676dc85f910c2d0, i32 1) #13, !dbg !4188
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_194 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_195) #13, !dbg !4189
  %_196 = zext i1 %_194 to i32, !dbg !4189
  %263 = trunc nuw i32 %_196 to i1, !dbg !4189
  br i1 %263, label %bb199, label %bb224, !dbg !4189

bb199:                                            ; preds = %bb195
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %264 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_007fdc34da6b4aae7af16f288f4f45b7) #13, !dbg !4190
  %265 = zext i1 %264 to i8, !dbg !4190
  store i8 %265, ptr %_0, align 1, !dbg !4190
  br label %bb231, !dbg !4190

bb203:                                            ; preds = %bb187
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %266 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f741e87fd704eb7570d8910145005335) #13, !dbg !4191
  %267 = zext i1 %266 to i8, !dbg !4191
  store i8 %267, ptr %_0, align 1, !dbg !4191
  br label %bb231, !dbg !4191

bb202:                                            ; preds = %bb187
; call rustc_demangle::v0::Printer::print_sep_list
  %268 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h2b1ef20dec8cc977E(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !4192
  %_201.0 = extractvalue { i32, i32 } %268, 0, !dbg !4192
  %_201.1 = extractvalue { i32, i32 } %268, 1, !dbg !4192
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %269 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_201.0, i32 %_201.1) #13, !dbg !4193
  %270 = extractvalue { i32, i32 } %269, 0, !dbg !4193
  %271 = extractvalue { i32, i32 } %269, 1, !dbg !4193
  store i32 %270, ptr %_200, align 4, !dbg !4193
  %272 = getelementptr inbounds i8, ptr %_200, i32 4, !dbg !4193
  store i32 %271, ptr %272, align 4, !dbg !4193
  %_203 = load i32, ptr %_200, align 4, !dbg !4193
  %273 = getelementptr inbounds i8, ptr %_200, i32 4, !dbg !4193
  %274 = load i32, ptr %273, align 4, !dbg !4193
  %275 = trunc nuw i32 %_203 to i1, !dbg !4193
  br i1 %275, label %bb207, label %bb206, !dbg !4193

bb207:                                            ; preds = %bb202
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %276 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_1775578fc260bc127962520638c9b1f9) #13, !dbg !4194
  %277 = zext i1 %276 to i8, !dbg !4194
  store i8 %277, ptr %_0, align 1, !dbg !4194
  br label %bb231, !dbg !4194

bb206:                                            ; preds = %bb202
  %278 = getelementptr inbounds i8, ptr %_200, i32 4, !dbg !4193
  %val101 = load i32, ptr %278, align 4, !dbg !4193
  store i32 %val101, ptr %val.dbg.spill102, align 4, !dbg !4193
    #dbg_declare(ptr %val.dbg.spill102, !3858, !DIExpression(), !4195)
; call rustc_demangle::v0::Printer::print
  %_206 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_047fb90e55f5a12b86403e3ea891a5bd, i32 2) #13, !dbg !4196
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_205 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_206) #13, !dbg !4197
  %_207 = zext i1 %_205 to i32, !dbg !4197
  %279 = trunc nuw i32 %_207 to i1, !dbg !4197
  br i1 %279, label %bb210, label %bb224, !dbg !4197

bb210:                                            ; preds = %bb206
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %280 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d797c75081b3c58113d160978311cb3f) #13, !dbg !4198
  %281 = zext i1 %280 to i8, !dbg !4198
  store i8 %281, ptr %_0, align 1, !dbg !4198
  br label %bb231, !dbg !4198

bb215:                                            ; preds = %bb186
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %282 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_7979bdb26d94ae43a7f0f4d78d8e14cc) #13, !dbg !4199
  %283 = zext i1 %282 to i8, !dbg !4199
  store i8 %283, ptr %_0, align 1, !dbg !4199
  br label %bb231, !dbg !4199

bb214:                                            ; preds = %bb186
  %284 = load i8, ptr %err7, align 1, !dbg !4200
  %285 = trunc nuw i8 %284 to i1, !dbg !4200
  %286 = getelementptr inbounds i8, ptr %_214, i32 4, !dbg !4200
  %287 = zext i1 %285 to i8, !dbg !4200
  store i8 %287, ptr %286, align 4, !dbg !4200
  store ptr null, ptr %_214, align 4, !dbg !4200
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_214, i32 16, i1 false), !dbg !4201
  store i8 0, ptr %_0, align 1, !dbg !4202
  br label %bb231, !dbg !4203

bb185:                                            ; preds = %bb179
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %288 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_7a1916db7c03a19cceea5d06d625d4ad) #13, !dbg !4204
  %289 = zext i1 %288 to i8, !dbg !4204
  store i8 %289, ptr %_0, align 1, !dbg !4204
  br label %bb231, !dbg !4204

bb184:                                            ; preds = %bb179
  %290 = load i8, ptr %err6, align 1, !dbg !4205
  %291 = trunc nuw i8 %290 to i1, !dbg !4205
  %292 = getelementptr inbounds i8, ptr %_185, i32 4, !dbg !4205
  %293 = zext i1 %291 to i8, !dbg !4205
  store i8 %293, ptr %292, align 4, !dbg !4205
  store ptr null, ptr %_185, align 4, !dbg !4205
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_185, i32 16, i1 false), !dbg !4206
  store i8 0, ptr %_0, align 1, !dbg !4207
  br label %bb231, !dbg !4208

bb218:                                            ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %294 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_526724f0590e135d7b17c351490e0c99) #13, !dbg !4209
  %295 = zext i1 %294 to i8, !dbg !4209
  store i8 %295, ptr %_0, align 1, !dbg !4209
  br label %bb231, !dbg !4209

bb229:                                            ; preds = %bb225, %bb224
; call rustc_demangle::v0::Printer::pop_depth
  call void @_ZN14rustc_demangle2v07Printer9pop_depth17ha25b3c4e0a438db8E(ptr align 4 %self) #13, !dbg !4210
  store i8 0, ptr %_0, align 1, !dbg !4211
  br label %bb231, !dbg !4032

bb225:                                            ; preds = %bb224
; call rustc_demangle::v0::Printer::print
  %_229 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_fcd552ca5ffc948e1053f652f94fed71, i32 1) #13, !dbg !4212
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_228 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_229) #13, !dbg !4213
  %_230 = zext i1 %_228 to i32, !dbg !4213
  %296 = trunc nuw i32 %_230 to i1, !dbg !4213
  br i1 %296, label %bb228, label %bb229, !dbg !4213

bb228:                                            ; preds = %bb225
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %297 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_0ec5681a6a9ce6ba2c2f5dce67130432) #13, !dbg !4214
  %298 = zext i1 %297 to i8, !dbg !4214
  store i8 %298, ptr %_0, align 1, !dbg !4214
  br label %bb231, !dbg !4214

bb223:                                            ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %299 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_92c75c2c02af0561f277556518a66b1f) #13, !dbg !4215
  %300 = zext i1 %299 to i8, !dbg !4215
  store i8 %300, ptr %_0, align 1, !dbg !4215
  br label %bb231, !dbg !4215

bb222:                                            ; preds = %bb22
  %301 = load i8, ptr %err8, align 1, !dbg !4216
  %302 = trunc nuw i8 %301 to i1, !dbg !4216
  %303 = getelementptr inbounds i8, ptr %_226, i32 4, !dbg !4216
  %304 = zext i1 %302 to i8, !dbg !4216
  store i8 %304, ptr %303, align 4, !dbg !4216
  store ptr null, ptr %_226, align 4, !dbg !4216
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_226, i32 16, i1 false), !dbg !4217
  store i8 0, ptr %_0, align 1, !dbg !4218
  br label %bb231, !dbg !4219

bb21:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %305 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_0ade96101761e8524b8e26e137f99cc5) #13, !dbg !4220
  %306 = zext i1 %305 to i8, !dbg !4220
  store i8 %306, ptr %_0, align 1, !dbg !4220
  br label %bb231, !dbg !4220

bb20:                                             ; preds = %bb15
  %307 = load i8, ptr %err1, align 1, !dbg !4221
  %308 = trunc nuw i8 %307 to i1, !dbg !4221
  %309 = getelementptr inbounds i8, ptr %_25, i32 4, !dbg !4221
  %310 = zext i1 %308 to i8, !dbg !4221
  store i8 %310, ptr %309, align 4, !dbg !4221
  store ptr null, ptr %_25, align 4, !dbg !4221
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_25, i32 16, i1 false), !dbg !4222
  store i8 0, ptr %_0, align 1, !dbg !4223
  br label %bb231, !dbg !4224

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %311 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_77eff6b2ecdee870a316ac258f909de7) #13, !dbg !4225
  %312 = zext i1 %311 to i8, !dbg !4225
  store i8 %312, ptr %_0, align 1, !dbg !4225
  br label %bb231, !dbg !4225

bb10:                                             ; preds = %bb5
  %313 = load i8, ptr %err, align 1, !dbg !4226
  %314 = trunc nuw i8 %313 to i1, !dbg !4226
  %315 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !4226
  %316 = zext i1 %314 to i8, !dbg !4226
  store i8 %316, ptr %315, align 4, !dbg !4226
  store ptr null, ptr %_14, align 4, !dbg !4226
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !4227
  store i8 0, ptr %_0, align 1, !dbg !4228
  br label %bb231, !dbg !4229

bb1:                                              ; No predecessors!
  unreachable, !dbg !4230
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h45d5d32cf0a9328dE"(ptr align 1 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !4232 {
start:
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4239, !DIExpression(), !4240)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4238, !DIExpression(), !4241)
; call rustc_demangle::v0::Printer::print_const
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %this, i1 zeroext true) #13, !dbg !4242
  ret i1 %_0, !dbg !4243
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h4970e09e28f17006E"(ptr align 1 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !4244 {
start:
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4252, !DIExpression(DW_OP_deref), !4253)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4251, !DIExpression(), !4254)
  %0 = load i8, ptr %_1, align 1, !dbg !4255
  %_3 = trunc nuw i8 %0 to i1, !dbg !4255
; call rustc_demangle::v0::Printer::print_const
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %this, i1 zeroext %_3) #13, !dbg !4256
  ret i1 %_0, !dbg !4257
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h5b7a8e3fd21833a6E"(ptr align 1 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !4258 {
start:
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4265, !DIExpression(), !4266)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4264, !DIExpression(), !4267)
; call rustc_demangle::v0::Printer::print_const
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %this, i1 zeroext true) #13, !dbg !4268
  ret i1 %_0, !dbg !4269
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h6fb5a04d6d462f37E"(i64 %v) unnamed_addr #0 !dbg !4270 {
start:
  %v.dbg.spill = alloca [8 x i8], align 8
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !4276, !DIExpression(), !4277)
  store i64 %v, ptr %v.dbg.spill, align 8
    #dbg_declare(ptr %v.dbg.spill, !4275, !DIExpression(), !4278)
; call core::convert::num::<impl core::convert::TryFrom<u64> for u32>::try_from
  %0 = call { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$u64$GT$$u20$for$u20$u32$GT$8try_from17h27b367f8cbb39d61E"(i64 %v) #13, !dbg !4279
  %_3.0 = extractvalue { i32, i32 } %0, 0, !dbg !4279
  %_3.1 = extractvalue { i32, i32 } %0, 1, !dbg !4279
; call core::result::Result<T,E>::ok
  %1 = call { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h026ca7f6f03c9c84E"(i32 %_3.0, i32 %_3.1) #13, !dbg !4280
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !4280
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !4280
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !4281
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !4281
  ret { i32, i32 } %3, !dbg !4281
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hb8c3e667aad3162eE"(ptr align 1 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !4282 {
start:
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4289, !DIExpression(), !4290)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4288, !DIExpression(), !4291)
; call rustc_demangle::v0::Printer::print_const
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %this, i1 zeroext true) #13, !dbg !4292
  ret i1 %_0, !dbg !4293
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hbc6454b96a907a18E"(ptr align 4 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !4294 {
start:
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4300, !DIExpression(DW_OP_deref, DW_OP_deref), !4302)
    #dbg_declare(ptr %_1.dbg.spill, !4301, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4, DW_OP_deref), !4303)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4299, !DIExpression(), !4304)
  %_4 = load ptr, ptr %_1, align 4, !dbg !4305
  %0 = load i8, ptr %_4, align 1, !dbg !4305
  %_3 = trunc nuw i8 %0 to i1, !dbg !4305
  br i1 %_3, label %bb1, label %bb2, !dbg !4305

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !4306
  %_5 = load ptr, ptr %1, align 4, !dbg !4306
  store i8 1, ptr %_5, align 1, !dbg !4306
; call rustc_demangle::v0::Printer::print
  %2 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_387c6006141796f3ecab55b2882927cf, i32 1) #13, !dbg !4307
  %3 = zext i1 %2 to i8, !dbg !4307
  store i8 %3, ptr %_0, align 1, !dbg !4307
  br label %bb3, !dbg !4307

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !4308
  br label %bb3, !dbg !4309

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, ptr %_0, align 1, !dbg !4309
  %5 = trunc nuw i8 %4 to i1, !dbg !4309
  ret i1 %5, !dbg !4309
}

; rustc_demangle::v0::Printer::print_const::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hfab9b5a736dab7deE"(ptr align 1 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !4310 {
start:
  %parser.dbg.spill8 = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [8 x i8], align 8
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill7 = alloca [0 x i8], align 1
  %residual.dbg.spill6 = alloca [0 x i8], align 1
  %val.dbg.spill5 = alloca [0 x i8], align 1
  %residual.dbg.spill4 = alloca [0 x i8], align 1
  %val.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_26 = alloca [16 x i8], align 4
  %err1 = alloca [1 x i8], align 1
  %name = alloca [16 x i8], align 4
  %_17 = alloca [16 x i8], align 4
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4347, !DIExpression(), !4348)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4316, !DIExpression(), !4349)
    #dbg_declare(ptr %err, !4321, !DIExpression(), !4350)
    #dbg_declare(ptr %name, !4327, !DIExpression(), !4351)
    #dbg_declare(ptr %name, !4331, !DIExpression(), !4352)
    #dbg_declare(ptr %err1, !4333, !DIExpression(), !4353)
    #dbg_declare(ptr %residual.dbg.spill, !4323, !DIExpression(), !4354)
    #dbg_declare(ptr %val.dbg.spill, !4325, !DIExpression(), !4355)
    #dbg_declare(ptr %residual.dbg.spill2, !4335, !DIExpression(), !4356)
    #dbg_declare(ptr %val.dbg.spill3, !4337, !DIExpression(), !4357)
    #dbg_declare(ptr %residual.dbg.spill4, !4339, !DIExpression(), !4358)
    #dbg_declare(ptr %val.dbg.spill5, !4341, !DIExpression(), !4359)
    #dbg_declare(ptr %residual.dbg.spill6, !4343, !DIExpression(), !4360)
    #dbg_declare(ptr %val.dbg.spill7, !4345, !DIExpression(), !4361)
  %0 = load ptr, ptr %this, align 4, !dbg !4362
  %1 = ptrtoint ptr %0 to i32, !dbg !4362
  %2 = icmp eq i32 %1, 0, !dbg !4362
  %_3 = select i1 %2, i32 1, i32 0, !dbg !4362
  %3 = trunc nuw i32 %_3 to i1, !dbg !4363
  br i1 %3, label %bb2, label %bb3, !dbg !4363

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4364
  %5 = zext i1 %4 to i8, !dbg !4364
  store i8 %5, ptr %_0, align 1, !dbg !4364
  br label %bb30, !dbg !4364

bb3:                                              ; preds = %start
  store ptr %this, ptr %parser.dbg.spill, align 4, !dbg !4365
    #dbg_declare(ptr %parser.dbg.spill, !4317, !DIExpression(), !4366)
; call rustc_demangle::v0::Parser::disambiguator
  call void @_ZN14rustc_demangle2v06Parser13disambiguator17hb8f2bd207c519d1dE(ptr sret([16 x i8]) align 8 %_5, ptr align 4 %this) #13, !dbg !4367
  %6 = load i8, ptr %_5, align 8, !dbg !4368
  %7 = trunc nuw i8 %6 to i1, !dbg !4368
  %_6 = zext i1 %7 to i32, !dbg !4368
  %8 = trunc nuw i32 %_6 to i1, !dbg !4369
  br i1 %8, label %bb5, label %bb6, !dbg !4369

bb5:                                              ; preds = %bb3
  %9 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !4370
  %10 = load i8, ptr %9, align 1, !dbg !4370
  %11 = trunc nuw i8 %10 to i1, !dbg !4370
  %12 = zext i1 %11 to i8, !dbg !4370
  store i8 %12, ptr %err, align 1, !dbg !4370
; call rustc_demangle::v0::ParseError::message
  %13 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !4371
  %_11.0 = extractvalue { ptr, i32 } %13, 0, !dbg !4371
  %_11.1 = extractvalue { ptr, i32 } %13, 1, !dbg !4371
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !4372
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !4373
  %_13 = zext i1 %_9 to i32, !dbg !4373
  %14 = trunc nuw i32 %_13 to i1, !dbg !4373
  br i1 %14, label %bb11, label %bb10, !dbg !4373

bb6:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !4374
  %x = load i64, ptr %15, align 8, !dbg !4374
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !4374
    #dbg_declare(ptr %x.dbg.spill, !4319, !DIExpression(), !4375)
  %16 = load ptr, ptr %this, align 4, !dbg !4362
  %17 = ptrtoint ptr %16 to i32, !dbg !4362
  %18 = icmp eq i32 %17, 0, !dbg !4362
  %_15 = select i1 %18, i32 1, i32 0, !dbg !4362
  %19 = trunc nuw i32 %_15 to i1, !dbg !4363
  br i1 %19, label %bb12, label %bb13, !dbg !4363

bb12:                                             ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %20 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4364
  %21 = zext i1 %20 to i8, !dbg !4364
  store i8 %21, ptr %_0, align 1, !dbg !4364
  br label %bb30, !dbg !4364

bb13:                                             ; preds = %bb6
  store ptr %this, ptr %parser.dbg.spill8, align 4, !dbg !4365
    #dbg_declare(ptr %parser.dbg.spill8, !4329, !DIExpression(), !4376)
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E(ptr sret([16 x i8]) align 4 %_17, ptr align 4 %this) #13, !dbg !4377
  %22 = load ptr, ptr %_17, align 4, !dbg !4378
  %23 = ptrtoint ptr %22 to i32, !dbg !4378
  %24 = icmp eq i32 %23, 0, !dbg !4378
  %_18 = select i1 %24, i32 1, i32 0, !dbg !4378
  %25 = trunc nuw i32 %_18 to i1, !dbg !4379
  br i1 %25, label %bb15, label %bb16, !dbg !4379

bb15:                                             ; preds = %bb13
  %26 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !4380
  %27 = load i8, ptr %26, align 4, !dbg !4380
  %28 = trunc nuw i8 %27 to i1, !dbg !4380
  %29 = zext i1 %28 to i8, !dbg !4380
  store i8 %29, ptr %err1, align 1, !dbg !4380
; call rustc_demangle::v0::ParseError::message
  %30 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err1) #13, !dbg !4381
  %_23.0 = extractvalue { ptr, i32 } %30, 0, !dbg !4381
  %_23.1 = extractvalue { ptr, i32 } %30, 1, !dbg !4381
; call rustc_demangle::v0::Printer::print
  %_22 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 %_23.0, i32 %_23.1) #13, !dbg !4382
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_21 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_22) #13, !dbg !4383
  %_25 = zext i1 %_21 to i32, !dbg !4383
  %31 = trunc nuw i32 %_25 to i1, !dbg !4383
  br i1 %31, label %bb21, label %bb20, !dbg !4383

bb16:                                             ; preds = %bb13
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %name, ptr align 4 %_17, i32 16, i1 false), !dbg !4384
; call rustc_demangle::v0::Printer::print
  %_28 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE(ptr align 4 %this, ptr align 4 %name) #13, !dbg !4385
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_27 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_28) #13, !dbg !4386
  %_29 = zext i1 %_27 to i32, !dbg !4386
  %32 = trunc nuw i32 %_29 to i1, !dbg !4386
  br i1 %32, label %bb25, label %bb24, !dbg !4386

bb25:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_c6920c06024504a44d1b100a9e640fe0) #13, !dbg !4387
  %34 = zext i1 %33 to i8, !dbg !4387
  store i8 %34, ptr %_0, align 1, !dbg !4387
  br label %bb30, !dbg !4387

bb24:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print
  %_31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %this, ptr align 1 @alloc_556e4180596b5b612bb6ed6c0cbb55e1, i32 2) #13, !dbg !4388
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_30 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_31) #13, !dbg !4389
  %_32 = zext i1 %_30 to i32, !dbg !4389
  %35 = trunc nuw i32 %_32 to i1, !dbg !4389
  br i1 %35, label %bb29, label %bb28, !dbg !4389

bb29:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %36 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_56fc114a3a40b08be8d55b10cf05d30f) #13, !dbg !4390
  %37 = zext i1 %36 to i8, !dbg !4390
  store i8 %37, ptr %_0, align 1, !dbg !4390
  br label %bb30, !dbg !4390

bb28:                                             ; preds = %bb24
; call rustc_demangle::v0::Printer::print_const
  %38 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %this, i1 zeroext true) #13, !dbg !4391
  %39 = zext i1 %38 to i8, !dbg !4391
  store i8 %39, ptr %_0, align 1, !dbg !4391
  br label %bb30, !dbg !4391

bb30:                                             ; preds = %bb2, %bb11, %bb10, %bb12, %bb21, %bb20, %bb25, %bb29, %bb28
  %40 = load i8, ptr %_0, align 1, !dbg !4392
  %41 = trunc nuw i8 %40 to i1, !dbg !4392
  ret i1 %41, !dbg !4392

bb21:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f8179501488ea02e708eb39ad62a08c7) #13, !dbg !4393
  %43 = zext i1 %42 to i8, !dbg !4393
  store i8 %43, ptr %_0, align 1, !dbg !4393
  br label %bb30, !dbg !4393

bb20:                                             ; preds = %bb15
  %44 = load i8, ptr %err1, align 1, !dbg !4394
  %45 = trunc nuw i8 %44 to i1, !dbg !4394
  %46 = getelementptr inbounds i8, ptr %_26, i32 4, !dbg !4394
  %47 = zext i1 %45 to i8, !dbg !4394
  store i8 %47, ptr %46, align 4, !dbg !4394
  store ptr null, ptr %_26, align 4, !dbg !4394
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %this, ptr align 4 %_26, i32 16, i1 false), !dbg !4395
  store i8 0, ptr %_0, align 1, !dbg !4396
  br label %bb30, !dbg !4397

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %48 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_830366ea3b9c57b1e780dcd5e8334405) #13, !dbg !4398
  %49 = zext i1 %48 to i8, !dbg !4398
  store i8 %49, ptr %_0, align 1, !dbg !4398
  br label %bb30, !dbg !4398

bb10:                                             ; preds = %bb5
  %50 = load i8, ptr %err, align 1, !dbg !4399
  %51 = trunc nuw i8 %50 to i1, !dbg !4399
  %52 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !4399
  %53 = zext i1 %51 to i8, !dbg !4399
  store i8 %53, ptr %52, align 4, !dbg !4399
  store ptr null, ptr %_14, align 4, !dbg !4399
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %this, ptr align 4 %_14, i32 16, i1 false), !dbg !4400
  store i8 0, ptr %_0, align 1, !dbg !4401
  br label %bb30, !dbg !4402

bb1:                                              ; No predecessors!
  unreachable, !dbg !4403
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h4d96d73f26008496E(ptr align 4 %self, ptr align 1 %f) unnamed_addr #1 !dbg !4405 {
start:
  %r.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_19 = alloca [16 x i8], align 4
  %orig_parser = alloca [16 x i8], align 4
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %backref_parser = alloca [16 x i8], align 4
  %_5 = alloca [16 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4412, !DIExpression(), !4430)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4413, !DIExpression(), !4431)
    #dbg_declare(ptr %backref_parser, !4414, !DIExpression(), !4432)
    #dbg_declare(ptr %backref_parser, !4418, !DIExpression(), !4433)
    #dbg_declare(ptr %err, !4420, !DIExpression(), !4434)
    #dbg_declare(ptr %orig_parser, !4426, !DIExpression(), !4435)
    #dbg_declare(ptr %residual.dbg.spill, !4422, !DIExpression(), !4436)
    #dbg_declare(ptr %val.dbg.spill, !4424, !DIExpression(), !4437)
  %0 = load ptr, ptr %self, align 4, !dbg !4438
  %1 = ptrtoint ptr %0 to i32, !dbg !4438
  %2 = icmp eq i32 %1, 0, !dbg !4438
  %_3 = select i1 %2, i32 1, i32 0, !dbg !4438
  %3 = trunc nuw i32 %_3 to i1, !dbg !4439
  br i1 %3, label %bb2, label %bb3, !dbg !4439

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4440
  %5 = zext i1 %4 to i8, !dbg !4440
  store i8 %5, ptr %_0, align 1, !dbg !4440
  br label %bb17, !dbg !4440

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !4441
    #dbg_declare(ptr %parser.dbg.spill, !4416, !DIExpression(), !4442)
; call rustc_demangle::v0::Parser::backref
  call void @_ZN14rustc_demangle2v06Parser7backref17h9112f87c50388295E(ptr sret([16 x i8]) align 4 %_5, ptr align 4 %self) #13, !dbg !4443
  %6 = load ptr, ptr %_5, align 4, !dbg !4444
  %7 = ptrtoint ptr %6 to i32, !dbg !4444
  %8 = icmp eq i32 %7, 0, !dbg !4444
  %_6 = select i1 %8, i32 1, i32 0, !dbg !4444
  %9 = trunc nuw i32 %_6 to i1, !dbg !4445
  br i1 %9, label %bb5, label %bb6, !dbg !4445

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4446
  %11 = load i8, ptr %10, align 4, !dbg !4446
  %12 = trunc nuw i8 %11 to i1, !dbg !4446
  %13 = zext i1 %12 to i8, !dbg !4446
  store i8 %13, ptr %err, align 1, !dbg !4446
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !4447
  %_11.0 = extractvalue { ptr, i32 } %14, 0, !dbg !4447
  %_11.1 = extractvalue { ptr, i32 } %14, 1, !dbg !4447
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !4448
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !4449
  %_13 = zext i1 %_9 to i32, !dbg !4449
  %15 = trunc nuw i32 %_13 to i1, !dbg !4449
  br i1 %15, label %bb11, label %bb10, !dbg !4449

bb6:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %backref_parser, ptr align 4 %_5, i32 16, i1 false), !dbg !4450
  %_16 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !4451
; call core::option::Option<T>::is_none
  %_15 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %_16) #13, !dbg !4452
  br i1 %_15, label %bb13, label %bb14, !dbg !4451

bb14:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_19, ptr align 4 %backref_parser, i32 16, i1 false), !dbg !4453
; call core::mem::replace
  call void @_ZN4core3mem7replace17hed4e539074d1fd88E(ptr sret([16 x i8]) align 4 %orig_parser, ptr align 4 %self, ptr align 4 %_19) #13, !dbg !4454
; call rustc_demangle::v0::Printer::print_path::{{closure}}
  %r = call zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h1b23fdaaa8245f44E"(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4455
  %16 = zext i1 %r to i8, !dbg !4455
  store i8 %16, ptr %r.dbg.spill, align 1, !dbg !4455
    #dbg_declare(ptr %r.dbg.spill, !4428, !DIExpression(), !4456)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %orig_parser, i32 16, i1 false), !dbg !4457
  %17 = zext i1 %r to i8, !dbg !4458
  store i8 %17, ptr %_0, align 1, !dbg !4458
  br label %bb18, !dbg !4459

bb13:                                             ; preds = %bb6
  store i8 0, ptr %_0, align 1, !dbg !4460
  br label %bb17, !dbg !4461

bb18:                                             ; preds = %bb17, %bb14
  %18 = load i8, ptr %_0, align 1, !dbg !4463
  %19 = trunc nuw i8 %18 to i1, !dbg !4463
  ret i1 %19, !dbg !4463

bb17:                                             ; preds = %bb2, %bb11, %bb10, %bb13
  br label %bb18, !dbg !4459

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a787644ab8dfa36077f51af2bd9f67db) #13, !dbg !4464
  %21 = zext i1 %20 to i8, !dbg !4464
  store i8 %21, ptr %_0, align 1, !dbg !4464
  br label %bb17, !dbg !4464

bb10:                                             ; preds = %bb5
  %22 = load i8, ptr %err, align 1, !dbg !4465
  %23 = trunc nuw i8 %22 to i1, !dbg !4465
  %24 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !4465
  %25 = zext i1 %23 to i8, !dbg !4465
  store i8 %25, ptr %24, align 4, !dbg !4465
  store ptr null, ptr %_14, align 4, !dbg !4465
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !4466
  store i8 0, ptr %_0, align 1, !dbg !4467
  br label %bb17, !dbg !4468

bb1:                                              ; No predecessors!
  unreachable, !dbg !4469
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h5753f13fbe9f0a9eE(ptr align 4 %self, ptr align 1 %f) unnamed_addr #1 !dbg !4471 {
start:
  %r.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_19 = alloca [16 x i8], align 4
  %orig_parser = alloca [16 x i8], align 4
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %backref_parser = alloca [16 x i8], align 4
  %_5 = alloca [16 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4478, !DIExpression(), !4496)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4479, !DIExpression(), !4497)
    #dbg_declare(ptr %backref_parser, !4480, !DIExpression(), !4498)
    #dbg_declare(ptr %backref_parser, !4484, !DIExpression(), !4499)
    #dbg_declare(ptr %err, !4486, !DIExpression(), !4500)
    #dbg_declare(ptr %orig_parser, !4492, !DIExpression(), !4501)
    #dbg_declare(ptr %residual.dbg.spill, !4488, !DIExpression(), !4502)
    #dbg_declare(ptr %val.dbg.spill, !4490, !DIExpression(), !4503)
  %0 = load ptr, ptr %self, align 4, !dbg !4504
  %1 = ptrtoint ptr %0 to i32, !dbg !4504
  %2 = icmp eq i32 %1, 0, !dbg !4504
  %_3 = select i1 %2, i32 1, i32 0, !dbg !4504
  %3 = trunc nuw i32 %_3 to i1, !dbg !4505
  br i1 %3, label %bb2, label %bb3, !dbg !4505

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4506
  %5 = zext i1 %4 to i8, !dbg !4506
  store i8 %5, ptr %_0, align 1, !dbg !4506
  br label %bb17, !dbg !4506

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !4507
    #dbg_declare(ptr %parser.dbg.spill, !4482, !DIExpression(), !4508)
; call rustc_demangle::v0::Parser::backref
  call void @_ZN14rustc_demangle2v06Parser7backref17h9112f87c50388295E(ptr sret([16 x i8]) align 4 %_5, ptr align 4 %self) #13, !dbg !4509
  %6 = load ptr, ptr %_5, align 4, !dbg !4510
  %7 = ptrtoint ptr %6 to i32, !dbg !4510
  %8 = icmp eq i32 %7, 0, !dbg !4510
  %_6 = select i1 %8, i32 1, i32 0, !dbg !4510
  %9 = trunc nuw i32 %_6 to i1, !dbg !4511
  br i1 %9, label %bb5, label %bb6, !dbg !4511

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4512
  %11 = load i8, ptr %10, align 4, !dbg !4512
  %12 = trunc nuw i8 %11 to i1, !dbg !4512
  %13 = zext i1 %12 to i8, !dbg !4512
  store i8 %13, ptr %err, align 1, !dbg !4512
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !4513
  %_11.0 = extractvalue { ptr, i32 } %14, 0, !dbg !4513
  %_11.1 = extractvalue { ptr, i32 } %14, 1, !dbg !4513
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !4514
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !4515
  %_13 = zext i1 %_9 to i32, !dbg !4515
  %15 = trunc nuw i32 %_13 to i1, !dbg !4515
  br i1 %15, label %bb11, label %bb10, !dbg !4515

bb6:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %backref_parser, ptr align 4 %_5, i32 16, i1 false), !dbg !4516
  %_16 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !4517
; call core::option::Option<T>::is_none
  %_15 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %_16) #13, !dbg !4518
  br i1 %_15, label %bb13, label %bb14, !dbg !4517

bb14:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_19, ptr align 4 %backref_parser, i32 16, i1 false), !dbg !4519
; call core::mem::replace
  call void @_ZN4core3mem7replace17hed4e539074d1fd88E(ptr sret([16 x i8]) align 4 %orig_parser, ptr align 4 %self, ptr align 4 %_19) #13, !dbg !4520
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %r = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h4970e09e28f17006E"(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4521
  %16 = zext i1 %r to i8, !dbg !4521
  store i8 %16, ptr %r.dbg.spill, align 1, !dbg !4521
    #dbg_declare(ptr %r.dbg.spill, !4494, !DIExpression(), !4522)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %orig_parser, i32 16, i1 false), !dbg !4523
  %17 = zext i1 %r to i8, !dbg !4524
  store i8 %17, ptr %_0, align 1, !dbg !4524
  br label %bb18, !dbg !4525

bb13:                                             ; preds = %bb6
  store i8 0, ptr %_0, align 1, !dbg !4526
  br label %bb17, !dbg !4527

bb18:                                             ; preds = %bb17, %bb14
  %18 = load i8, ptr %_0, align 1, !dbg !4529
  %19 = trunc nuw i8 %18 to i1, !dbg !4529
  ret i1 %19, !dbg !4529

bb17:                                             ; preds = %bb2, %bb11, %bb10, %bb13
  br label %bb18, !dbg !4525

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a787644ab8dfa36077f51af2bd9f67db) #13, !dbg !4530
  %21 = zext i1 %20 to i8, !dbg !4530
  store i8 %21, ptr %_0, align 1, !dbg !4530
  br label %bb17, !dbg !4530

bb10:                                             ; preds = %bb5
  %22 = load i8, ptr %err, align 1, !dbg !4531
  %23 = trunc nuw i8 %22 to i1, !dbg !4531
  %24 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !4531
  %25 = zext i1 %23 to i8, !dbg !4531
  store i8 %25, ptr %24, align 4, !dbg !4531
  store ptr null, ptr %_14, align 4, !dbg !4531
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !4532
  store i8 0, ptr %_0, align 1, !dbg !4533
  br label %bb17, !dbg !4534

bb1:                                              ; No predecessors!
  unreachable, !dbg !4535
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17h65b9b523c9004866E(ptr align 4 %self) unnamed_addr #1 !dbg !4537 {
start:
  %r.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_19 = alloca [16 x i8], align 4
  %orig_parser = alloca [16 x i8], align 4
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %backref_parser = alloca [16 x i8], align 4
  %_5 = alloca [16 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4545, !DIExpression(), !4563)
    #dbg_declare(ptr %f.dbg.spill, !4546, !DIExpression(), !4564)
    #dbg_declare(ptr %backref_parser, !4547, !DIExpression(), !4565)
    #dbg_declare(ptr %backref_parser, !4551, !DIExpression(), !4566)
    #dbg_declare(ptr %err, !4553, !DIExpression(), !4567)
    #dbg_declare(ptr %orig_parser, !4559, !DIExpression(), !4568)
    #dbg_declare(ptr %residual.dbg.spill, !4555, !DIExpression(), !4569)
    #dbg_declare(ptr %val.dbg.spill, !4557, !DIExpression(), !4570)
  %0 = load ptr, ptr %self, align 4, !dbg !4571
  %1 = ptrtoint ptr %0 to i32, !dbg !4571
  %2 = icmp eq i32 %1, 0, !dbg !4571
  %_3 = select i1 %2, i32 1, i32 0, !dbg !4571
  %3 = trunc nuw i32 %_3 to i1, !dbg !4572
  br i1 %3, label %bb2, label %bb3, !dbg !4572

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4573
  %5 = zext i1 %4 to i8, !dbg !4573
  store i8 %5, ptr %_0, align 1, !dbg !4573
  br label %bb17, !dbg !4573

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !4574
    #dbg_declare(ptr %parser.dbg.spill, !4549, !DIExpression(), !4575)
; call rustc_demangle::v0::Parser::backref
  call void @_ZN14rustc_demangle2v06Parser7backref17h9112f87c50388295E(ptr sret([16 x i8]) align 4 %_5, ptr align 4 %self) #13, !dbg !4576
  %6 = load ptr, ptr %_5, align 4, !dbg !4577
  %7 = ptrtoint ptr %6 to i32, !dbg !4577
  %8 = icmp eq i32 %7, 0, !dbg !4577
  %_6 = select i1 %8, i32 1, i32 0, !dbg !4577
  %9 = trunc nuw i32 %_6 to i1, !dbg !4578
  br i1 %9, label %bb5, label %bb6, !dbg !4578

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4579
  %11 = load i8, ptr %10, align 4, !dbg !4579
  %12 = trunc nuw i8 %11 to i1, !dbg !4579
  %13 = zext i1 %12 to i8, !dbg !4579
  store i8 %13, ptr %err, align 1, !dbg !4579
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !4580
  %_11.0 = extractvalue { ptr, i32 } %14, 0, !dbg !4580
  %_11.1 = extractvalue { ptr, i32 } %14, 1, !dbg !4580
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !4581
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !4582
  %_13 = zext i1 %_9 to i32, !dbg !4582
  %15 = trunc nuw i32 %_13 to i1, !dbg !4582
  br i1 %15, label %bb11, label %bb10, !dbg !4582

bb6:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %backref_parser, ptr align 4 %_5, i32 16, i1 false), !dbg !4583
  %_16 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !4584
; call core::option::Option<T>::is_none
  %_15 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %_16) #13, !dbg !4585
  br i1 %_15, label %bb13, label %bb14, !dbg !4584

bb14:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_19, ptr align 4 %backref_parser, i32 16, i1 false), !dbg !4586
; call core::mem::replace
  call void @_ZN4core3mem7replace17hed4e539074d1fd88E(ptr sret([16 x i8]) align 4 %orig_parser, ptr align 4 %self, ptr align 4 %_19) #13, !dbg !4587
; call core::ops::function::FnOnce::call_once
  %r = call zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17hfe38cb335703ebf9E(ptr align 4 %self) #13, !dbg !4588
  %16 = zext i1 %r to i8, !dbg !4588
  store i8 %16, ptr %r.dbg.spill, align 1, !dbg !4588
    #dbg_declare(ptr %r.dbg.spill, !4561, !DIExpression(), !4589)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %orig_parser, i32 16, i1 false), !dbg !4590
  %17 = zext i1 %r to i8, !dbg !4591
  store i8 %17, ptr %_0, align 1, !dbg !4591
  br label %bb18, !dbg !4592

bb13:                                             ; preds = %bb6
  store i8 0, ptr %_0, align 1, !dbg !4593
  br label %bb17, !dbg !4594

bb18:                                             ; preds = %bb17, %bb14
  %18 = load i8, ptr %_0, align 1, !dbg !4596
  %19 = trunc nuw i8 %18 to i1, !dbg !4596
  ret i1 %19, !dbg !4596

bb17:                                             ; preds = %bb2, %bb11, %bb10, %bb13
  br label %bb18, !dbg !4592

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a787644ab8dfa36077f51af2bd9f67db) #13, !dbg !4597
  %21 = zext i1 %20 to i8, !dbg !4597
  store i8 %21, ptr %_0, align 1, !dbg !4597
  br label %bb17, !dbg !4597

bb10:                                             ; preds = %bb5
  %22 = load i8, ptr %err, align 1, !dbg !4598
  %23 = trunc nuw i8 %22 to i1, !dbg !4598
  %24 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !4598
  %25 = zext i1 %23 to i8, !dbg !4598
  store i8 %25, ptr %24, align 4, !dbg !4598
  store ptr null, ptr %_14, align 4, !dbg !4598
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !4599
  store i8 0, ptr %_0, align 1, !dbg !4600
  br label %bb17, !dbg !4601

bb1:                                              ; No predecessors!
  unreachable, !dbg !4602
}

; rustc_demangle::v0::Printer::print_backref
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17ha0f7ef4d704b70e7E(ptr align 4 %self, ptr align 1 %f) unnamed_addr #1 !dbg !4604 {
start:
  %r.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_19 = alloca [16 x i8], align 4
  %orig_parser = alloca [16 x i8], align 4
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %backref_parser = alloca [16 x i8], align 4
  %_5 = alloca [16 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4615, !DIExpression(), !4633)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4616, !DIExpression(), !4634)
    #dbg_declare(ptr %backref_parser, !4617, !DIExpression(), !4635)
    #dbg_declare(ptr %backref_parser, !4621, !DIExpression(), !4636)
    #dbg_declare(ptr %err, !4623, !DIExpression(), !4637)
    #dbg_declare(ptr %orig_parser, !4629, !DIExpression(), !4638)
    #dbg_declare(ptr %residual.dbg.spill, !4625, !DIExpression(), !4639)
    #dbg_declare(ptr %val.dbg.spill, !4627, !DIExpression(), !4640)
  %0 = load ptr, ptr %self, align 4, !dbg !4641
  %1 = ptrtoint ptr %0 to i32, !dbg !4641
  %2 = icmp eq i32 %1, 0, !dbg !4641
  %_3 = select i1 %2, i32 1, i32 0, !dbg !4641
  %3 = trunc nuw i32 %_3 to i1, !dbg !4642
  br i1 %3, label %bb2, label %bb3, !dbg !4642

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !4643
  %5 = zext i1 %4 to i8, !dbg !4643
  store i8 %5, ptr %_0, align 1, !dbg !4643
  br label %bb17, !dbg !4643

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !4644
    #dbg_declare(ptr %parser.dbg.spill, !4619, !DIExpression(), !4645)
; call rustc_demangle::v0::Parser::backref
  call void @_ZN14rustc_demangle2v06Parser7backref17h9112f87c50388295E(ptr sret([16 x i8]) align 4 %_5, ptr align 4 %self) #13, !dbg !4646
  %6 = load ptr, ptr %_5, align 4, !dbg !4647
  %7 = ptrtoint ptr %6 to i32, !dbg !4647
  %8 = icmp eq i32 %7, 0, !dbg !4647
  %_6 = select i1 %8, i32 1, i32 0, !dbg !4647
  %9 = trunc nuw i32 %_6 to i1, !dbg !4648
  br i1 %9, label %bb5, label %bb6, !dbg !4648

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4649
  %11 = load i8, ptr %10, align 4, !dbg !4649
  %12 = trunc nuw i8 %11 to i1, !dbg !4649
  %13 = zext i1 %12 to i8, !dbg !4649
  store i8 %13, ptr %err, align 1, !dbg !4649
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !4650
  %_11.0 = extractvalue { ptr, i32 } %14, 0, !dbg !4650
  %_11.1 = extractvalue { ptr, i32 } %14, 1, !dbg !4650
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !4651
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !4652
  %_13 = zext i1 %_9 to i32, !dbg !4652
  %15 = trunc nuw i32 %_13 to i1, !dbg !4652
  br i1 %15, label %bb11, label %bb10, !dbg !4652

bb6:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %backref_parser, ptr align 4 %_5, i32 16, i1 false), !dbg !4653
  %_16 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !4654
; call core::option::Option<T>::is_none
  %_15 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %_16) #13, !dbg !4655
  br i1 %_15, label %bb13, label %bb14, !dbg !4654

bb14:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_19, ptr align 4 %backref_parser, i32 16, i1 false), !dbg !4656
; call core::mem::replace
  call void @_ZN4core3mem7replace17hed4e539074d1fd88E(ptr sret([16 x i8]) align 4 %orig_parser, ptr align 4 %self, ptr align 4 %_19) #13, !dbg !4657
; call rustc_demangle::v0::Printer::print_path_maybe_open_generics::{{closure}}
  %r = call zeroext i1 @"_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics28_$u7b$$u7b$closure$u7d$$u7d$17h54216aea32251b5bE"(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4658
  %16 = zext i1 %r to i8, !dbg !4658
  store i8 %16, ptr %r.dbg.spill, align 1, !dbg !4658
    #dbg_declare(ptr %r.dbg.spill, !4631, !DIExpression(), !4659)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %orig_parser, i32 16, i1 false), !dbg !4660
  %17 = zext i1 %r to i8, !dbg !4661
  store i8 %17, ptr %_0, align 1, !dbg !4661
  br label %bb18, !dbg !4662

bb13:                                             ; preds = %bb6
  store i8 0, ptr %_0, align 1, !dbg !4663
  br label %bb17, !dbg !4664

bb18:                                             ; preds = %bb17, %bb14
  %18 = load i8, ptr %_0, align 1, !dbg !4666
  %19 = trunc nuw i8 %18 to i1, !dbg !4666
  ret i1 %19, !dbg !4666

bb17:                                             ; preds = %bb2, %bb11, %bb10, %bb13
  br label %bb18, !dbg !4662

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %20 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a787644ab8dfa36077f51af2bd9f67db) #13, !dbg !4667
  %21 = zext i1 %20 to i8, !dbg !4667
  store i8 %21, ptr %_0, align 1, !dbg !4667
  br label %bb17, !dbg !4667

bb10:                                             ; preds = %bb5
  %22 = load i8, ptr %err, align 1, !dbg !4668
  %23 = trunc nuw i8 %22 to i1, !dbg !4668
  %24 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !4668
  %25 = zext i1 %23 to i8, !dbg !4668
  store i8 %25, ptr %24, align 4, !dbg !4668
  store ptr null, ptr %_14, align 4, !dbg !4668
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !4669
  store i8 0, ptr %_0, align 1, !dbg !4670
  br label %bb17, !dbg !4671

bb1:                                              ; No predecessors!
  unreachable, !dbg !4672
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nounwind
define internal { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h11502cdacf266f16E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) unnamed_addr #1 !dbg !4674 {
start:
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %sep.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4695, !DIExpression(), !4708)
    #dbg_declare(ptr %f, !4696, !DIExpression(), !4709)
  store ptr %sep.0, ptr %sep.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %sep.dbg.spill, i32 4
  store i32 %sep.1, ptr %0, align 4
    #dbg_declare(ptr %sep.dbg.spill, !4697, !DIExpression(), !4710)
    #dbg_declare(ptr %i, !4698, !DIExpression(), !4711)
    #dbg_declare(ptr %residual.dbg.spill, !4700, !DIExpression(), !4712)
    #dbg_declare(ptr %val.dbg.spill, !4702, !DIExpression(), !4713)
    #dbg_declare(ptr %residual.dbg.spill1, !4704, !DIExpression(), !4714)
    #dbg_declare(ptr %val.dbg.spill2, !4706, !DIExpression(), !4715)
  store i32 0, ptr %i, align 4, !dbg !4716
  br label %bb1, !dbg !4717

bb1:                                              ; preds = %bb16, %start
; call core::result::Result<T,E>::is_ok
  %_5 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !4718
  br i1 %_5, label %bb3, label %bb17, !dbg !4719

bb17:                                             ; preds = %bb3, %bb1
  %_19 = load i32, ptr %i, align 4, !dbg !4720
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4721
  store i32 %_19, ptr %1, align 4, !dbg !4721
  store i32 0, ptr %_0, align 4, !dbg !4721
  br label %bb19, !dbg !4722

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !4723
  br i1 %_7, label %bb17, label %bb5, !dbg !4724

bb5:                                              ; preds = %bb3
  %_9 = load i32, ptr %i, align 4, !dbg !4725
  %_8 = icmp ugt i32 %_9, 0, !dbg !4725
  br i1 %_8, label %bb6, label %bb11, !dbg !4725

bb11:                                             ; preds = %bb6, %bb5
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_14 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h5b7a8e3fd21833a6E"(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4726
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !4726
  %_17 = zext i1 %_13 to i32, !dbg !4726
  %2 = trunc nuw i32 %_17 to i1, !dbg !4726
  br i1 %2, label %bb15, label %bb14, !dbg !4726

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) #13, !dbg !4727
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !4728
  %_12 = zext i1 %_10 to i32, !dbg !4728
  %3 = trunc nuw i32 %_12 to i1, !dbg !4728
  br i1 %3, label %bb10, label %bb11, !dbg !4728

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_69a1fab1ce19125085e0aeefcee52f67) #13, !dbg !4729
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !4729
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !4729
  store i32 %5, ptr %_0, align 4, !dbg !4729
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4729
  store i32 %6, ptr %7, align 4, !dbg !4729
  br label %bb18, !dbg !4729

bb15:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_9b9da7b9861b1ad88f1b99fa22add4c9) #13, !dbg !4730
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !4730
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !4730
  store i32 %9, ptr %_0, align 4, !dbg !4730
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4730
  store i32 %10, ptr %11, align 4, !dbg !4730
  br label %bb18, !dbg !4730

bb14:                                             ; preds = %bb11
  %12 = load i32, ptr %i, align 4, !dbg !4731
  %_18.0 = add i32 %12, 1, !dbg !4731
  %_18.1 = icmp ult i32 %_18.0, %12, !dbg !4731
  br i1 %_18.1, label %panic, label %bb16, !dbg !4731

bb16:                                             ; preds = %bb14
  store i32 %_18.0, ptr %i, align 4, !dbg !4731
  br label %bb1, !dbg !4717

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_77048164a9e65997537db53b0701b75a) #14, !dbg !4731
  unreachable, !dbg !4731

bb18:                                             ; preds = %bb10, %bb15
  br label %bb19, !dbg !4722

bb19:                                             ; preds = %bb17, %bb18
  %13 = load i32, ptr %_0, align 4, !dbg !4732
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4732
  %15 = load i32, ptr %14, align 4, !dbg !4732
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !4732
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !4732
  ret { i32, i32 } %17, !dbg !4732

bb9:                                              ; No predecessors!
  unreachable, !dbg !4733
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nounwind
define internal { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h2b1ef20dec8cc977E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) unnamed_addr #1 !dbg !4735 {
start:
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %sep.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4742, !DIExpression(), !4755)
    #dbg_declare(ptr %f, !4743, !DIExpression(), !4756)
  store ptr %sep.0, ptr %sep.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %sep.dbg.spill, i32 4
  store i32 %sep.1, ptr %0, align 4
    #dbg_declare(ptr %sep.dbg.spill, !4744, !DIExpression(), !4757)
    #dbg_declare(ptr %i, !4745, !DIExpression(), !4758)
    #dbg_declare(ptr %residual.dbg.spill, !4747, !DIExpression(), !4759)
    #dbg_declare(ptr %val.dbg.spill, !4749, !DIExpression(), !4760)
    #dbg_declare(ptr %residual.dbg.spill1, !4751, !DIExpression(), !4761)
    #dbg_declare(ptr %val.dbg.spill2, !4753, !DIExpression(), !4762)
  store i32 0, ptr %i, align 4, !dbg !4763
  br label %bb1, !dbg !4764

bb1:                                              ; preds = %bb16, %start
; call core::result::Result<T,E>::is_ok
  %_5 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !4765
  br i1 %_5, label %bb3, label %bb17, !dbg !4766

bb17:                                             ; preds = %bb3, %bb1
  %_19 = load i32, ptr %i, align 4, !dbg !4767
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4768
  store i32 %_19, ptr %1, align 4, !dbg !4768
  store i32 0, ptr %_0, align 4, !dbg !4768
  br label %bb19, !dbg !4769

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !4770
  br i1 %_7, label %bb17, label %bb5, !dbg !4771

bb5:                                              ; preds = %bb3
  %_9 = load i32, ptr %i, align 4, !dbg !4772
  %_8 = icmp ugt i32 %_9, 0, !dbg !4772
  br i1 %_8, label %bb6, label %bb11, !dbg !4772

bb11:                                             ; preds = %bb6, %bb5
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_14 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hfab9b5a736dab7deE"(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4773
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !4773
  %_17 = zext i1 %_13 to i32, !dbg !4773
  %2 = trunc nuw i32 %_17 to i1, !dbg !4773
  br i1 %2, label %bb15, label %bb14, !dbg !4773

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) #13, !dbg !4774
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !4775
  %_12 = zext i1 %_10 to i32, !dbg !4775
  %3 = trunc nuw i32 %_12 to i1, !dbg !4775
  br i1 %3, label %bb10, label %bb11, !dbg !4775

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_69a1fab1ce19125085e0aeefcee52f67) #13, !dbg !4776
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !4776
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !4776
  store i32 %5, ptr %_0, align 4, !dbg !4776
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4776
  store i32 %6, ptr %7, align 4, !dbg !4776
  br label %bb18, !dbg !4776

bb15:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_9b9da7b9861b1ad88f1b99fa22add4c9) #13, !dbg !4777
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !4777
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !4777
  store i32 %9, ptr %_0, align 4, !dbg !4777
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4777
  store i32 %10, ptr %11, align 4, !dbg !4777
  br label %bb18, !dbg !4777

bb14:                                             ; preds = %bb11
  %12 = load i32, ptr %i, align 4, !dbg !4778
  %_18.0 = add i32 %12, 1, !dbg !4778
  %_18.1 = icmp ult i32 %_18.0, %12, !dbg !4778
  br i1 %_18.1, label %panic, label %bb16, !dbg !4778

bb16:                                             ; preds = %bb14
  store i32 %_18.0, ptr %i, align 4, !dbg !4778
  br label %bb1, !dbg !4764

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_77048164a9e65997537db53b0701b75a) #14, !dbg !4778
  unreachable, !dbg !4778

bb18:                                             ; preds = %bb10, %bb15
  br label %bb19, !dbg !4769

bb19:                                             ; preds = %bb17, %bb18
  %13 = load i32, ptr %_0, align 4, !dbg !4779
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4779
  %15 = load i32, ptr %14, align 4, !dbg !4779
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !4779
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !4779
  ret { i32, i32 } %17, !dbg !4779

bb9:                                              ; No predecessors!
  unreachable, !dbg !4780
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nounwind
define internal { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h450b8f780bd93df1E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) unnamed_addr #1 !dbg !4782 {
start:
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %sep.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4789, !DIExpression(), !4802)
    #dbg_declare(ptr %f, !4790, !DIExpression(), !4803)
  store ptr %sep.0, ptr %sep.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %sep.dbg.spill, i32 4
  store i32 %sep.1, ptr %0, align 4
    #dbg_declare(ptr %sep.dbg.spill, !4791, !DIExpression(), !4804)
    #dbg_declare(ptr %i, !4792, !DIExpression(), !4805)
    #dbg_declare(ptr %residual.dbg.spill, !4794, !DIExpression(), !4806)
    #dbg_declare(ptr %val.dbg.spill, !4796, !DIExpression(), !4807)
    #dbg_declare(ptr %residual.dbg.spill1, !4798, !DIExpression(), !4808)
    #dbg_declare(ptr %val.dbg.spill2, !4800, !DIExpression(), !4809)
  store i32 0, ptr %i, align 4, !dbg !4810
  br label %bb1, !dbg !4811

bb1:                                              ; preds = %bb16, %start
; call core::result::Result<T,E>::is_ok
  %_5 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !4812
  br i1 %_5, label %bb3, label %bb17, !dbg !4813

bb17:                                             ; preds = %bb3, %bb1
  %_19 = load i32, ptr %i, align 4, !dbg !4814
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4815
  store i32 %_19, ptr %1, align 4, !dbg !4815
  store i32 0, ptr %_0, align 4, !dbg !4815
  br label %bb19, !dbg !4816

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !4817
  br i1 %_7, label %bb17, label %bb5, !dbg !4818

bb5:                                              ; preds = %bb3
  %_9 = load i32, ptr %i, align 4, !dbg !4819
  %_8 = icmp ugt i32 %_9, 0, !dbg !4819
  br i1 %_8, label %bb6, label %bb11, !dbg !4819

bb11:                                             ; preds = %bb6, %bb5
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_14 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hb8c3e667aad3162eE"(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4820
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !4820
  %_17 = zext i1 %_13 to i32, !dbg !4820
  %2 = trunc nuw i32 %_17 to i1, !dbg !4820
  br i1 %2, label %bb15, label %bb14, !dbg !4820

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) #13, !dbg !4821
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !4822
  %_12 = zext i1 %_10 to i32, !dbg !4822
  %3 = trunc nuw i32 %_12 to i1, !dbg !4822
  br i1 %3, label %bb10, label %bb11, !dbg !4822

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_69a1fab1ce19125085e0aeefcee52f67) #13, !dbg !4823
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !4823
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !4823
  store i32 %5, ptr %_0, align 4, !dbg !4823
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4823
  store i32 %6, ptr %7, align 4, !dbg !4823
  br label %bb18, !dbg !4823

bb15:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_9b9da7b9861b1ad88f1b99fa22add4c9) #13, !dbg !4824
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !4824
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !4824
  store i32 %9, ptr %_0, align 4, !dbg !4824
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4824
  store i32 %10, ptr %11, align 4, !dbg !4824
  br label %bb18, !dbg !4824

bb14:                                             ; preds = %bb11
  %12 = load i32, ptr %i, align 4, !dbg !4825
  %_18.0 = add i32 %12, 1, !dbg !4825
  %_18.1 = icmp ult i32 %_18.0, %12, !dbg !4825
  br i1 %_18.1, label %panic, label %bb16, !dbg !4825

bb16:                                             ; preds = %bb14
  store i32 %_18.0, ptr %i, align 4, !dbg !4825
  br label %bb1, !dbg !4811

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_77048164a9e65997537db53b0701b75a) #14, !dbg !4825
  unreachable, !dbg !4825

bb18:                                             ; preds = %bb10, %bb15
  br label %bb19, !dbg !4816

bb19:                                             ; preds = %bb17, %bb18
  %13 = load i32, ptr %_0, align 4, !dbg !4826
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4826
  %15 = load i32, ptr %14, align 4, !dbg !4826
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !4826
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !4826
  ret { i32, i32 } %17, !dbg !4826

bb9:                                              ; No predecessors!
  unreachable, !dbg !4827
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nounwind
define internal { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17h4feeef1dc361b87fE(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) unnamed_addr #1 !dbg !4829 {
start:
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %sep.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4834, !DIExpression(), !4847)
    #dbg_declare(ptr %f, !4835, !DIExpression(), !4848)
  store ptr %sep.0, ptr %sep.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %sep.dbg.spill, i32 4
  store i32 %sep.1, ptr %0, align 4
    #dbg_declare(ptr %sep.dbg.spill, !4836, !DIExpression(), !4849)
    #dbg_declare(ptr %i, !4837, !DIExpression(), !4850)
    #dbg_declare(ptr %residual.dbg.spill, !4839, !DIExpression(), !4851)
    #dbg_declare(ptr %val.dbg.spill, !4841, !DIExpression(), !4852)
    #dbg_declare(ptr %residual.dbg.spill1, !4843, !DIExpression(), !4853)
    #dbg_declare(ptr %val.dbg.spill2, !4845, !DIExpression(), !4854)
  store i32 0, ptr %i, align 4, !dbg !4855
  br label %bb1, !dbg !4856

bb1:                                              ; preds = %bb16, %start
; call core::result::Result<T,E>::is_ok
  %_5 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !4857
  br i1 %_5, label %bb3, label %bb17, !dbg !4858

bb17:                                             ; preds = %bb3, %bb1
  %_19 = load i32, ptr %i, align 4, !dbg !4859
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4860
  store i32 %_19, ptr %1, align 4, !dbg !4860
  store i32 0, ptr %_0, align 4, !dbg !4860
  br label %bb19, !dbg !4861

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !4862
  br i1 %_7, label %bb17, label %bb5, !dbg !4863

bb5:                                              ; preds = %bb3
  %_9 = load i32, ptr %i, align 4, !dbg !4864
  %_8 = icmp ugt i32 %_9, 0, !dbg !4864
  br i1 %_8, label %bb6, label %bb11, !dbg !4864

bb11:                                             ; preds = %bb6, %bb5
; call core::ops::function::Fn::call
  %_14 = call zeroext i1 @_ZN4core3ops8function2Fn4call17hfefefa743834d7f5E(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4865
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !4865
  %_17 = zext i1 %_13 to i32, !dbg !4865
  %2 = trunc nuw i32 %_17 to i1, !dbg !4865
  br i1 %2, label %bb15, label %bb14, !dbg !4865

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) #13, !dbg !4866
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !4867
  %_12 = zext i1 %_10 to i32, !dbg !4867
  %3 = trunc nuw i32 %_12 to i1, !dbg !4867
  br i1 %3, label %bb10, label %bb11, !dbg !4867

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_69a1fab1ce19125085e0aeefcee52f67) #13, !dbg !4868
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !4868
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !4868
  store i32 %5, ptr %_0, align 4, !dbg !4868
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4868
  store i32 %6, ptr %7, align 4, !dbg !4868
  br label %bb18, !dbg !4868

bb15:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_9b9da7b9861b1ad88f1b99fa22add4c9) #13, !dbg !4869
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !4869
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !4869
  store i32 %9, ptr %_0, align 4, !dbg !4869
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4869
  store i32 %10, ptr %11, align 4, !dbg !4869
  br label %bb18, !dbg !4869

bb14:                                             ; preds = %bb11
  %12 = load i32, ptr %i, align 4, !dbg !4870
  %_18.0 = add i32 %12, 1, !dbg !4870
  %_18.1 = icmp ult i32 %_18.0, %12, !dbg !4870
  br i1 %_18.1, label %panic, label %bb16, !dbg !4870

bb16:                                             ; preds = %bb14
  store i32 %_18.0, ptr %i, align 4, !dbg !4870
  br label %bb1, !dbg !4856

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_77048164a9e65997537db53b0701b75a) #14, !dbg !4870
  unreachable, !dbg !4870

bb18:                                             ; preds = %bb10, %bb15
  br label %bb19, !dbg !4861

bb19:                                             ; preds = %bb17, %bb18
  %13 = load i32, ptr %_0, align 4, !dbg !4871
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4871
  %15 = load i32, ptr %14, align 4, !dbg !4871
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !4871
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !4871
  ret { i32, i32 } %17, !dbg !4871

bb9:                                              ; No predecessors!
  unreachable, !dbg !4872
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nounwind
define internal { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hdf132c66be8ff57bE(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) unnamed_addr #1 !dbg !4874 {
start:
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %sep.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4877, !DIExpression(), !4890)
    #dbg_declare(ptr %f, !4878, !DIExpression(), !4891)
  store ptr %sep.0, ptr %sep.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %sep.dbg.spill, i32 4
  store i32 %sep.1, ptr %0, align 4
    #dbg_declare(ptr %sep.dbg.spill, !4879, !DIExpression(), !4892)
    #dbg_declare(ptr %i, !4880, !DIExpression(), !4893)
    #dbg_declare(ptr %residual.dbg.spill, !4882, !DIExpression(), !4894)
    #dbg_declare(ptr %val.dbg.spill, !4884, !DIExpression(), !4895)
    #dbg_declare(ptr %residual.dbg.spill1, !4886, !DIExpression(), !4896)
    #dbg_declare(ptr %val.dbg.spill2, !4888, !DIExpression(), !4897)
  store i32 0, ptr %i, align 4, !dbg !4898
  br label %bb1, !dbg !4899

bb1:                                              ; preds = %bb16, %start
; call core::result::Result<T,E>::is_ok
  %_5 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !4900
  br i1 %_5, label %bb3, label %bb17, !dbg !4901

bb17:                                             ; preds = %bb3, %bb1
  %_19 = load i32, ptr %i, align 4, !dbg !4902
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4903
  store i32 %_19, ptr %1, align 4, !dbg !4903
  store i32 0, ptr %_0, align 4, !dbg !4903
  br label %bb19, !dbg !4904

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !4905
  br i1 %_7, label %bb17, label %bb5, !dbg !4906

bb5:                                              ; preds = %bb3
  %_9 = load i32, ptr %i, align 4, !dbg !4907
  %_8 = icmp ugt i32 %_9, 0, !dbg !4907
  br i1 %_8, label %bb6, label %bb11, !dbg !4907

bb11:                                             ; preds = %bb6, %bb5
; call core::ops::function::Fn::call
  %_14 = call zeroext i1 @_ZN4core3ops8function2Fn4call17h221f007c70093d42E(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4908
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !4908
  %_17 = zext i1 %_13 to i32, !dbg !4908
  %2 = trunc nuw i32 %_17 to i1, !dbg !4908
  br i1 %2, label %bb15, label %bb14, !dbg !4908

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) #13, !dbg !4909
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !4910
  %_12 = zext i1 %_10 to i32, !dbg !4910
  %3 = trunc nuw i32 %_12 to i1, !dbg !4910
  br i1 %3, label %bb10, label %bb11, !dbg !4910

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_69a1fab1ce19125085e0aeefcee52f67) #13, !dbg !4911
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !4911
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !4911
  store i32 %5, ptr %_0, align 4, !dbg !4911
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4911
  store i32 %6, ptr %7, align 4, !dbg !4911
  br label %bb18, !dbg !4911

bb15:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_9b9da7b9861b1ad88f1b99fa22add4c9) #13, !dbg !4912
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !4912
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !4912
  store i32 %9, ptr %_0, align 4, !dbg !4912
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4912
  store i32 %10, ptr %11, align 4, !dbg !4912
  br label %bb18, !dbg !4912

bb14:                                             ; preds = %bb11
  %12 = load i32, ptr %i, align 4, !dbg !4913
  %_18.0 = add i32 %12, 1, !dbg !4913
  %_18.1 = icmp ult i32 %_18.0, %12, !dbg !4913
  br i1 %_18.1, label %panic, label %bb16, !dbg !4913

bb16:                                             ; preds = %bb14
  store i32 %_18.0, ptr %i, align 4, !dbg !4913
  br label %bb1, !dbg !4899

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_77048164a9e65997537db53b0701b75a) #14, !dbg !4913
  unreachable, !dbg !4913

bb18:                                             ; preds = %bb10, %bb15
  br label %bb19, !dbg !4904

bb19:                                             ; preds = %bb17, %bb18
  %13 = load i32, ptr %_0, align 4, !dbg !4914
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4914
  %15 = load i32, ptr %14, align 4, !dbg !4914
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !4914
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !4914
  ret { i32, i32 } %17, !dbg !4914

bb9:                                              ; No predecessors!
  unreachable, !dbg !4915
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nounwind
define internal { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hee9770f90521c53fE(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) unnamed_addr #1 !dbg !4917 {
start:
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %sep.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4920, !DIExpression(), !4933)
    #dbg_declare(ptr %f, !4921, !DIExpression(), !4934)
  store ptr %sep.0, ptr %sep.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %sep.dbg.spill, i32 4
  store i32 %sep.1, ptr %0, align 4
    #dbg_declare(ptr %sep.dbg.spill, !4922, !DIExpression(), !4935)
    #dbg_declare(ptr %i, !4923, !DIExpression(), !4936)
    #dbg_declare(ptr %residual.dbg.spill, !4925, !DIExpression(), !4937)
    #dbg_declare(ptr %val.dbg.spill, !4927, !DIExpression(), !4938)
    #dbg_declare(ptr %residual.dbg.spill1, !4929, !DIExpression(), !4939)
    #dbg_declare(ptr %val.dbg.spill2, !4931, !DIExpression(), !4940)
  store i32 0, ptr %i, align 4, !dbg !4941
  br label %bb1, !dbg !4942

bb1:                                              ; preds = %bb16, %start
; call core::result::Result<T,E>::is_ok
  %_5 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !4943
  br i1 %_5, label %bb3, label %bb17, !dbg !4944

bb17:                                             ; preds = %bb3, %bb1
  %_19 = load i32, ptr %i, align 4, !dbg !4945
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4946
  store i32 %_19, ptr %1, align 4, !dbg !4946
  store i32 0, ptr %_0, align 4, !dbg !4946
  br label %bb19, !dbg !4947

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !4948
  br i1 %_7, label %bb17, label %bb5, !dbg !4949

bb5:                                              ; preds = %bb3
  %_9 = load i32, ptr %i, align 4, !dbg !4950
  %_8 = icmp ugt i32 %_9, 0, !dbg !4950
  br i1 %_8, label %bb6, label %bb11, !dbg !4950

bb11:                                             ; preds = %bb6, %bb5
; call core::ops::function::Fn::call
  %_14 = call zeroext i1 @_ZN4core3ops8function2Fn4call17hd25a12ecb0781f6cE(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4951
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !4951
  %_17 = zext i1 %_13 to i32, !dbg !4951
  %2 = trunc nuw i32 %_17 to i1, !dbg !4951
  br i1 %2, label %bb15, label %bb14, !dbg !4951

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) #13, !dbg !4952
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !4953
  %_12 = zext i1 %_10 to i32, !dbg !4953
  %3 = trunc nuw i32 %_12 to i1, !dbg !4953
  br i1 %3, label %bb10, label %bb11, !dbg !4953

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_69a1fab1ce19125085e0aeefcee52f67) #13, !dbg !4954
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !4954
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !4954
  store i32 %5, ptr %_0, align 4, !dbg !4954
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4954
  store i32 %6, ptr %7, align 4, !dbg !4954
  br label %bb18, !dbg !4954

bb15:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_9b9da7b9861b1ad88f1b99fa22add4c9) #13, !dbg !4955
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !4955
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !4955
  store i32 %9, ptr %_0, align 4, !dbg !4955
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4955
  store i32 %10, ptr %11, align 4, !dbg !4955
  br label %bb18, !dbg !4955

bb14:                                             ; preds = %bb11
  %12 = load i32, ptr %i, align 4, !dbg !4956
  %_18.0 = add i32 %12, 1, !dbg !4956
  %_18.1 = icmp ult i32 %_18.0, %12, !dbg !4956
  br i1 %_18.1, label %panic, label %bb16, !dbg !4956

bb16:                                             ; preds = %bb14
  store i32 %_18.0, ptr %i, align 4, !dbg !4956
  br label %bb1, !dbg !4942

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_77048164a9e65997537db53b0701b75a) #14, !dbg !4956
  unreachable, !dbg !4956

bb18:                                             ; preds = %bb10, %bb15
  br label %bb19, !dbg !4947

bb19:                                             ; preds = %bb17, %bb18
  %13 = load i32, ptr %_0, align 4, !dbg !4957
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4957
  %15 = load i32, ptr %14, align 4, !dbg !4957
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !4957
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !4957
  ret { i32, i32 } %17, !dbg !4957

bb9:                                              ; No predecessors!
  unreachable, !dbg !4958
}

; rustc_demangle::v0::Printer::print_sep_list
; Function Attrs: nounwind
define internal { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hf509d84c0cd68436E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) unnamed_addr #1 !dbg !4960 {
start:
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %sep.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4967, !DIExpression(), !4980)
    #dbg_declare(ptr %f, !4968, !DIExpression(), !4981)
  store ptr %sep.0, ptr %sep.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %sep.dbg.spill, i32 4
  store i32 %sep.1, ptr %0, align 4
    #dbg_declare(ptr %sep.dbg.spill, !4969, !DIExpression(), !4982)
    #dbg_declare(ptr %i, !4970, !DIExpression(), !4983)
    #dbg_declare(ptr %residual.dbg.spill, !4972, !DIExpression(), !4984)
    #dbg_declare(ptr %val.dbg.spill, !4974, !DIExpression(), !4985)
    #dbg_declare(ptr %residual.dbg.spill1, !4976, !DIExpression(), !4986)
    #dbg_declare(ptr %val.dbg.spill2, !4978, !DIExpression(), !4987)
  store i32 0, ptr %i, align 4, !dbg !4988
  br label %bb1, !dbg !4989

bb1:                                              ; preds = %bb16, %start
; call core::result::Result<T,E>::is_ok
  %_5 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !4990
  br i1 %_5, label %bb3, label %bb17, !dbg !4991

bb17:                                             ; preds = %bb3, %bb1
  %_19 = load i32, ptr %i, align 4, !dbg !4992
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4993
  store i32 %_19, ptr %1, align 4, !dbg !4993
  store i32 0, ptr %_0, align 4, !dbg !4993
  br label %bb19, !dbg !4994

bb3:                                              ; preds = %bb1
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !4995
  br i1 %_7, label %bb17, label %bb5, !dbg !4996

bb5:                                              ; preds = %bb3
  %_9 = load i32, ptr %i, align 4, !dbg !4997
  %_8 = icmp ugt i32 %_9, 0, !dbg !4997
  br i1 %_8, label %bb6, label %bb11, !dbg !4997

bb11:                                             ; preds = %bb6, %bb5
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %_14 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h45d5d32cf0a9328dE"(ptr align 1 %f, ptr align 4 %self) #13, !dbg !4998
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_13 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_14) #13, !dbg !4998
  %_17 = zext i1 %_13 to i32, !dbg !4998
  %2 = trunc nuw i32 %_17 to i1, !dbg !4998
  br i1 %2, label %bb15, label %bb14, !dbg !4998

bb6:                                              ; preds = %bb5
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %sep.0, i32 %sep.1) #13, !dbg !4999
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !5000
  %_12 = zext i1 %_10 to i32, !dbg !5000
  %3 = trunc nuw i32 %_12 to i1, !dbg !5000
  br i1 %3, label %bb10, label %bb11, !dbg !5000

bb10:                                             ; preds = %bb6
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_69a1fab1ce19125085e0aeefcee52f67) #13, !dbg !5001
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !5001
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !5001
  store i32 %5, ptr %_0, align 4, !dbg !5001
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5001
  store i32 %6, ptr %7, align 4, !dbg !5001
  br label %bb18, !dbg !5001

bb15:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 @alloc_9b9da7b9861b1ad88f1b99fa22add4c9) #13, !dbg !5002
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !5002
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !5002
  store i32 %9, ptr %_0, align 4, !dbg !5002
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5002
  store i32 %10, ptr %11, align 4, !dbg !5002
  br label %bb18, !dbg !5002

bb14:                                             ; preds = %bb11
  %12 = load i32, ptr %i, align 4, !dbg !5003
  %_18.0 = add i32 %12, 1, !dbg !5003
  %_18.1 = icmp ult i32 %_18.0, %12, !dbg !5003
  br i1 %_18.1, label %panic, label %bb16, !dbg !5003

bb16:                                             ; preds = %bb14
  store i32 %_18.0, ptr %i, align 4, !dbg !5003
  br label %bb1, !dbg !4989

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_77048164a9e65997537db53b0701b75a) #14, !dbg !5003
  unreachable, !dbg !5003

bb18:                                             ; preds = %bb10, %bb15
  br label %bb19, !dbg !4994

bb19:                                             ; preds = %bb17, %bb18
  %13 = load i32, ptr %_0, align 4, !dbg !5004
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5004
  %15 = load i32, ptr %14, align 4, !dbg !5004
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !5004
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !5004
  ret { i32, i32 } %17, !dbg !5004

bb9:                                              ; No predecessors!
  unreachable, !dbg !5005
}

; rustc_demangle::v0::Printer::print_dyn_trait
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer15print_dyn_trait17h2077f0323168ff5bE(ptr align 4 %self) unnamed_addr #1 !dbg !5007 {
start:
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill14 = alloca [1 x i8], align 1
  %val.dbg.spill13 = alloca [0 x i8], align 1
  %residual.dbg.spill12 = alloca [0 x i8], align 1
  %val.dbg.spill11 = alloca [0 x i8], align 1
  %residual.dbg.spill10 = alloca [0 x i8], align 1
  %val.dbg.spill9 = alloca [0 x i8], align 1
  %residual.dbg.spill8 = alloca [0 x i8], align 1
  %val.dbg.spill7 = alloca [0 x i8], align 1
  %residual.dbg.spill6 = alloca [0 x i8], align 1
  %val.dbg.spill5 = alloca [0 x i8], align 1
  %residual.dbg.spill4 = alloca [0 x i8], align 1
  %val.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_26 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %name = alloca [16 x i8], align 4
  %_17 = alloca [16 x i8], align 4
  %_3 = alloca [1 x i8], align 1
  %open = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5010, !DIExpression(), !5053)
    #dbg_declare(ptr %open, !5011, !DIExpression(), !5054)
    #dbg_declare(ptr %name, !5025, !DIExpression(), !5055)
    #dbg_declare(ptr %name, !5029, !DIExpression(), !5056)
    #dbg_declare(ptr %err, !5031, !DIExpression(), !5057)
    #dbg_declare(ptr %residual.dbg.spill, !5013, !DIExpression(), !5058)
    #dbg_declare(ptr %residual.dbg.spill1, !5017, !DIExpression(), !5059)
    #dbg_declare(ptr %val.dbg.spill, !5019, !DIExpression(), !5060)
    #dbg_declare(ptr %residual.dbg.spill2, !5021, !DIExpression(), !5061)
    #dbg_declare(ptr %val.dbg.spill3, !5023, !DIExpression(), !5062)
    #dbg_declare(ptr %residual.dbg.spill4, !5033, !DIExpression(), !5063)
    #dbg_declare(ptr %val.dbg.spill5, !5035, !DIExpression(), !5064)
    #dbg_declare(ptr %residual.dbg.spill6, !5037, !DIExpression(), !5065)
    #dbg_declare(ptr %val.dbg.spill7, !5039, !DIExpression(), !5066)
    #dbg_declare(ptr %residual.dbg.spill8, !5041, !DIExpression(), !5067)
    #dbg_declare(ptr %val.dbg.spill9, !5043, !DIExpression(), !5068)
    #dbg_declare(ptr %residual.dbg.spill10, !5045, !DIExpression(), !5069)
    #dbg_declare(ptr %val.dbg.spill11, !5047, !DIExpression(), !5070)
    #dbg_declare(ptr %residual.dbg.spill12, !5049, !DIExpression(), !5071)
    #dbg_declare(ptr %val.dbg.spill13, !5051, !DIExpression(), !5072)
; call rustc_demangle::v0::Printer::print_path_maybe_open_generics
  %_4 = call i8 @_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hdc3fa7ba7071b4caE(ptr align 4 %self) #13, !dbg !5073
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %0 = call i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4bbc9c93858d8ae3E"(i8 %_4) #13, !dbg !5074
  store i8 %0, ptr %_3, align 1, !dbg !5074
  %1 = load i8, ptr %_3, align 1, !dbg !5074
  %2 = icmp eq i8 %1, 2, !dbg !5074
  %_5 = select i1 %2, i32 1, i32 0, !dbg !5074
  %3 = trunc nuw i32 %_5 to i1, !dbg !5074
  br i1 %3, label %bb5, label %bb4, !dbg !5074

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_7cefe9a6e57997c272470c5dba1ebe44) #13, !dbg !5075
  %5 = zext i1 %4 to i8, !dbg !5075
  store i8 %5, ptr %_0, align 1, !dbg !5075
  br label %bb46, !dbg !5075

bb4:                                              ; preds = %start
  %6 = load i8, ptr %_3, align 1, !dbg !5074
  %val = trunc nuw i8 %6 to i1, !dbg !5074
  %7 = zext i1 %val to i8, !dbg !5074
  store i8 %7, ptr %val.dbg.spill14, align 1, !dbg !5074
    #dbg_declare(ptr %val.dbg.spill14, !5015, !DIExpression(), !5076)
  %8 = zext i1 %val to i8, !dbg !5076
  store i8 %8, ptr %open, align 1, !dbg !5076
  br label %bb6, !dbg !5077

bb6:                                              ; preds = %bb35, %bb4
; call rustc_demangle::v0::Printer::eat
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 112) #13, !dbg !5078
  br i1 %_7, label %bb8, label %bb40, !dbg !5079

bb40:                                             ; preds = %bb6
  %9 = load i8, ptr %open, align 1, !dbg !5080
  %_36 = trunc nuw i8 %9 to i1, !dbg !5080
  br i1 %_36, label %bb41, label %bb45, !dbg !5080

bb8:                                              ; preds = %bb6
  %10 = load i8, ptr %open, align 1, !dbg !5081
  %_8 = trunc nuw i8 %10 to i1, !dbg !5081
  br i1 %_8, label %bb14, label %bb9, !dbg !5081

bb45:                                             ; preds = %bb41, %bb40
  store i8 0, ptr %_0, align 1, !dbg !5082
  br label %bb46, !dbg !5083

bb41:                                             ; preds = %bb40
; call rustc_demangle::v0::Printer::print
  %_38 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_b0f75d2f000046282f87eeb3267426fe, i32 1) #13, !dbg !5084
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_37 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_38) #13, !dbg !5085
  %_39 = zext i1 %_37 to i32, !dbg !5085
  %11 = trunc nuw i32 %_39 to i1, !dbg !5085
  br i1 %11, label %bb44, label %bb45, !dbg !5085

bb44:                                             ; preds = %bb41
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %12 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_5e276d8957e9f5cd7fcf274cd8db2055) #13, !dbg !5086
  %13 = zext i1 %12 to i8, !dbg !5086
  store i8 %13, ptr %_0, align 1, !dbg !5086
  br label %bb46, !dbg !5086

bb46:                                             ; preds = %bb5, %bb17, %bb19, %bb28, %bb27, %bb32, %bb36, %bb39, %bb13, %bb44, %bb45
  %14 = load i8, ptr %_0, align 1, !dbg !5083
  %15 = trunc nuw i8 %14 to i1, !dbg !5083
  ret i1 %15, !dbg !5083

bb9:                                              ; preds = %bb8
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_069739ecb4f78035aca324a6dc5131a2, i32 1) #13, !dbg !5087
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !5088
  %_11 = zext i1 %_9 to i32, !dbg !5088
  %16 = trunc nuw i32 %_11 to i1, !dbg !5088
  br i1 %16, label %bb13, label %bb12, !dbg !5088

bb14:                                             ; preds = %bb8
; call rustc_demangle::v0::Printer::print
  %_13 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !5089
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_12 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_13) #13, !dbg !5090
  %_14 = zext i1 %_12 to i32, !dbg !5090
  %17 = trunc nuw i32 %_14 to i1, !dbg !5090
  br i1 %17, label %bb17, label %bb18, !dbg !5090

bb13:                                             ; preds = %bb9
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_10d31d15f2c9c283a7d7183844cd950a) #13, !dbg !5091
  %19 = zext i1 %18 to i8, !dbg !5091
  store i8 %19, ptr %_0, align 1, !dbg !5091
  br label %bb46, !dbg !5091

bb12:                                             ; preds = %bb9
  store i8 1, ptr %open, align 1, !dbg !5092
  br label %bb18, !dbg !5093

bb18:                                             ; preds = %bb14, %bb12
  %20 = load ptr, ptr %self, align 4, !dbg !5094
  %21 = ptrtoint ptr %20 to i32, !dbg !5094
  %22 = icmp eq i32 %21, 0, !dbg !5094
  %_15 = select i1 %22, i32 1, i32 0, !dbg !5094
  %23 = trunc nuw i32 %_15 to i1, !dbg !5095
  br i1 %23, label %bb19, label %bb20, !dbg !5095

bb17:                                             ; preds = %bb14
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %24 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_135e198f40c6d0ab32818ba7b00342cc) #13, !dbg !5096
  %25 = zext i1 %24 to i8, !dbg !5096
  store i8 %25, ptr %_0, align 1, !dbg !5096
  br label %bb46, !dbg !5096

bb19:                                             ; preds = %bb18
; call rustc_demangle::v0::Printer::print
  %26 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !5097
  %27 = zext i1 %26 to i8, !dbg !5097
  store i8 %27, ptr %_0, align 1, !dbg !5097
  br label %bb46, !dbg !5097

bb20:                                             ; preds = %bb18
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !5098
    #dbg_declare(ptr %parser.dbg.spill, !5027, !DIExpression(), !5099)
; call rustc_demangle::v0::Parser::ident
  call void @_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E(ptr sret([16 x i8]) align 4 %_17, ptr align 4 %self) #13, !dbg !5100
  %28 = load ptr, ptr %_17, align 4, !dbg !5101
  %29 = ptrtoint ptr %28 to i32, !dbg !5101
  %30 = icmp eq i32 %29, 0, !dbg !5101
  %_18 = select i1 %30, i32 1, i32 0, !dbg !5101
  %31 = trunc nuw i32 %_18 to i1, !dbg !5102
  br i1 %31, label %bb22, label %bb23, !dbg !5102

bb22:                                             ; preds = %bb20
  %32 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !5103
  %33 = load i8, ptr %32, align 4, !dbg !5103
  %34 = trunc nuw i8 %33 to i1, !dbg !5103
  %35 = zext i1 %34 to i8, !dbg !5103
  store i8 %35, ptr %err, align 1, !dbg !5103
; call rustc_demangle::v0::ParseError::message
  %36 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !5104
  %_23.0 = extractvalue { ptr, i32 } %36, 0, !dbg !5104
  %_23.1 = extractvalue { ptr, i32 } %36, 1, !dbg !5104
; call rustc_demangle::v0::Printer::print
  %_22 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_23.0, i32 %_23.1) #13, !dbg !5105
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_21 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_22) #13, !dbg !5106
  %_25 = zext i1 %_21 to i32, !dbg !5106
  %37 = trunc nuw i32 %_25 to i1, !dbg !5106
  br i1 %37, label %bb28, label %bb27, !dbg !5106

bb23:                                             ; preds = %bb20
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %name, ptr align 4 %_17, i32 16, i1 false), !dbg !5107
; call rustc_demangle::v0::Printer::print
  %_28 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE(ptr align 4 %self, ptr align 4 %name) #13, !dbg !5108
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_27 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_28) #13, !dbg !5109
  %_29 = zext i1 %_27 to i32, !dbg !5109
  %38 = trunc nuw i32 %_29 to i1, !dbg !5109
  br i1 %38, label %bb32, label %bb31, !dbg !5109

bb32:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %39 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_aee9f4107113db8c9f005d1108899919) #13, !dbg !5110
  %40 = zext i1 %39 to i8, !dbg !5110
  store i8 %40, ptr %_0, align 1, !dbg !5110
  br label %bb46, !dbg !5110

bb31:                                             ; preds = %bb23
; call rustc_demangle::v0::Printer::print
  %_31 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_998113dda678cc10281d5123c32c9b27, i32 3) #13, !dbg !5111
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_30 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_31) #13, !dbg !5112
  %_32 = zext i1 %_30 to i32, !dbg !5112
  %41 = trunc nuw i32 %_32 to i1, !dbg !5112
  br i1 %41, label %bb36, label %bb35, !dbg !5112

bb36:                                             ; preds = %bb31
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %42 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d9a0d3542e2fdfad37aef176d28fea0e) #13, !dbg !5113
  %43 = zext i1 %42 to i8, !dbg !5113
  store i8 %43, ptr %_0, align 1, !dbg !5113
  br label %bb46, !dbg !5113

bb35:                                             ; preds = %bb31
; call rustc_demangle::v0::Printer::print_type
  %_34 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) #13, !dbg !5114
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_33 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_34) #13, !dbg !5115
  %_35 = zext i1 %_33 to i32, !dbg !5115
  %44 = trunc nuw i32 %_35 to i1, !dbg !5115
  br i1 %44, label %bb39, label %bb6, !dbg !5115

bb39:                                             ; preds = %bb35
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %45 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_93a658e291735a21cc7773ea397fc07c) #13, !dbg !5116
  %46 = zext i1 %45 to i8, !dbg !5116
  store i8 %46, ptr %_0, align 1, !dbg !5116
  br label %bb46, !dbg !5116

bb28:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %47 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_41a4b27061e6a0abded1d64057583ff8) #13, !dbg !5117
  %48 = zext i1 %47 to i8, !dbg !5117
  store i8 %48, ptr %_0, align 1, !dbg !5117
  br label %bb46, !dbg !5117

bb27:                                             ; preds = %bb22
  %49 = load i8, ptr %err, align 1, !dbg !5118
  %50 = trunc nuw i8 %49 to i1, !dbg !5118
  %51 = getelementptr inbounds i8, ptr %_26, i32 4, !dbg !5118
  %52 = zext i1 %50 to i8, !dbg !5118
  store i8 %52, ptr %51, align 4, !dbg !5118
  store ptr null, ptr %_26, align 4, !dbg !5118
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_26, i32 16, i1 false), !dbg !5119
  store i8 0, ptr %_0, align 1, !dbg !5120
  br label %bb46, !dbg !5121

bb3:                                              ; No predecessors!
  unreachable, !dbg !5122
}

; rustc_demangle::v0::Printer::print_const_uint
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer16print_const_uint17h6458ccb71c2d2030E(ptr align 4 %self, i8 %ty_tag) unnamed_addr #1 !dbg !5124 {
start:
  %val.dbg.spill.i = alloca [8 x i8], align 4
  %self.i = alloca [8 x i8], align 4
  %ty.dbg.spill = alloca [8 x i8], align 4
  %out.dbg.spill = alloca [4 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 8
  %x.dbg.spill = alloca [8 x i8], align 4
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill8 = alloca [0 x i8], align 1
  %residual.dbg.spill7 = alloca [0 x i8], align 1
  %val.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %ty_tag.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [16 x i8], align 8
  %_15 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_6 = alloca [8 x i8], align 4
  %hex = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5129, !DIExpression(), !5165)
  store i8 %ty_tag, ptr %ty_tag.dbg.spill, align 1
    #dbg_declare(ptr %ty_tag.dbg.spill, !5130, !DIExpression(), !5166)
    #dbg_declare(ptr %hex, !5131, !DIExpression(), !5167)
    #dbg_declare(ptr %err, !5137, !DIExpression(), !5168)
    #dbg_declare(ptr %residual.dbg.spill, !5139, !DIExpression(), !5169)
    #dbg_declare(ptr %val.dbg.spill, !5141, !DIExpression(), !5170)
    #dbg_declare(ptr %residual.dbg.spill1, !5145, !DIExpression(), !5171)
    #dbg_declare(ptr %val.dbg.spill2, !5147, !DIExpression(), !5172)
    #dbg_declare(ptr %residual.dbg.spill3, !5149, !DIExpression(), !5173)
    #dbg_declare(ptr %val.dbg.spill4, !5151, !DIExpression(), !5174)
    #dbg_declare(ptr %residual.dbg.spill5, !5153, !DIExpression(), !5175)
    #dbg_declare(ptr %val.dbg.spill6, !5155, !DIExpression(), !5176)
    #dbg_declare(ptr %residual.dbg.spill7, !5161, !DIExpression(), !5177)
    #dbg_declare(ptr %val.dbg.spill8, !5163, !DIExpression(), !5178)
  %0 = load ptr, ptr %self, align 4, !dbg !5179
  %1 = ptrtoint ptr %0 to i32, !dbg !5179
  %2 = icmp eq i32 %1, 0, !dbg !5179
  %_4 = select i1 %2, i32 1, i32 0, !dbg !5179
  %3 = trunc nuw i32 %_4 to i1, !dbg !5180
  br i1 %3, label %bb2, label %bb3, !dbg !5180

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !5181
  %5 = zext i1 %4 to i8, !dbg !5181
  store i8 %5, ptr %_0, align 1, !dbg !5181
  br label %bb35, !dbg !5181

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !5182
    #dbg_declare(ptr %parser.dbg.spill, !5133, !DIExpression(), !5183)
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17h2dcdab77a1a24703E(ptr sret([8 x i8]) align 4 %_6, ptr align 4 %self) #13, !dbg !5184
  %6 = load ptr, ptr %_6, align 4, !dbg !5185
  %7 = ptrtoint ptr %6 to i32, !dbg !5185
  %8 = icmp eq i32 %7, 0, !dbg !5185
  %_7 = select i1 %8, i32 1, i32 0, !dbg !5185
  %9 = trunc nuw i32 %_7 to i1, !dbg !5186
  br i1 %9, label %bb5, label %bb6, !dbg !5186

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !5187
  %11 = load i8, ptr %10, align 4, !dbg !5187
  %12 = trunc nuw i8 %11 to i1, !dbg !5187
  %13 = zext i1 %12 to i8, !dbg !5187
  store i8 %13, ptr %err, align 1, !dbg !5187
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !5188
  %_12.0 = extractvalue { ptr, i32 } %14, 0, !dbg !5188
  %_12.1 = extractvalue { ptr, i32 } %14, 1, !dbg !5188
; call rustc_demangle::v0::Printer::print
  %_11 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_12.0, i32 %_12.1) #13, !dbg !5189
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_10 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_11) #13, !dbg !5190
  %_14 = zext i1 %_10 to i32, !dbg !5190
  %15 = trunc nuw i32 %_14 to i1, !dbg !5190
  br i1 %15, label %bb11, label %bb10, !dbg !5190

bb6:                                              ; preds = %bb3
  %x.0 = load ptr, ptr %_6, align 4, !dbg !5191
  %16 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !5191
  %x.1 = load i32, ptr %16, align 4, !dbg !5191
  store ptr %x.0, ptr %x.dbg.spill, align 4, !dbg !5191
  %17 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 4, !dbg !5191
  store i32 %x.1, ptr %17, align 4, !dbg !5191
    #dbg_declare(ptr %x.dbg.spill, !5135, !DIExpression(), !5192)
  store ptr %x.0, ptr %hex, align 4, !dbg !5193
  %18 = getelementptr inbounds i8, ptr %hex, i32 4, !dbg !5193
  store i32 %x.1, ptr %18, align 4, !dbg !5193
; call rustc_demangle::v0::HexNibbles::try_parse_uint
  call void @_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h1ef6a10dcba92f07E(ptr sret([16 x i8]) align 8 %_16, ptr align 4 %hex) #13, !dbg !5194
  %19 = load i64, ptr %_16, align 8, !dbg !5195
  %20 = getelementptr inbounds i8, ptr %_16, i32 8, !dbg !5195
  %21 = load i64, ptr %20, align 8, !dbg !5195
  %_18 = trunc i64 %19 to i32, !dbg !5195
  %22 = trunc nuw i32 %_18 to i1, !dbg !5196
  br i1 %22, label %bb14, label %bb13, !dbg !5196

bb14:                                             ; preds = %bb6
  %23 = getelementptr inbounds i8, ptr %_16, i32 8, !dbg !5197
  %v = load i64, ptr %23, align 8, !dbg !5197
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !5197
    #dbg_declare(ptr %v.dbg.spill, !5143, !DIExpression(), !5198)
; call rustc_demangle::v0::Printer::print
  %_21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h755367634094e4b9E(ptr align 4 %self, i64 %v) #13, !dbg !5199
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_21) #13, !dbg !5200
  %_22 = zext i1 %_20 to i32, !dbg !5200
  %24 = trunc nuw i32 %_22 to i1, !dbg !5200
  br i1 %24, label %bb17, label %bb25, !dbg !5200

bb13:                                             ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %_24 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83d8d36e705c58ed11bda7b90dabc655, i32 2) #13, !dbg !5201
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_23 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_24) #13, !dbg !5202
  %_25 = zext i1 %_23 to i32, !dbg !5202
  %25 = trunc nuw i32 %_25 to i1, !dbg !5202
  br i1 %25, label %bb21, label %bb20, !dbg !5202

bb21:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %26 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_dd091a1efcc6ffcd13d70eba7f30b430) #13, !dbg !5203
  %27 = zext i1 %26 to i8, !dbg !5203
  store i8 %27, ptr %_0, align 1, !dbg !5203
  br label %bb35, !dbg !5203

bb20:                                             ; preds = %bb13
  %_28.0 = load ptr, ptr %hex, align 4, !dbg !5204
  %28 = getelementptr inbounds i8, ptr %hex, i32 4, !dbg !5204
  %_28.1 = load i32, ptr %28, align 4, !dbg !5204
; call rustc_demangle::v0::Printer::print
  %_27 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_28.0, i32 %_28.1) #13, !dbg !5205
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_26 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_27) #13, !dbg !5206
  %_29 = zext i1 %_26 to i32, !dbg !5206
  %29 = trunc nuw i32 %_29 to i1, !dbg !5206
  br i1 %29, label %bb24, label %bb25, !dbg !5206

bb24:                                             ; preds = %bb20
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %30 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_e0f27199601837fa947672fe663d782a) #13, !dbg !5207
  %31 = zext i1 %30 to i8, !dbg !5207
  store i8 %31, ptr %_0, align 1, !dbg !5207
  br label %bb35, !dbg !5207

bb25:                                             ; preds = %bb14, %bb20
  %_30 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5208
  %32 = load ptr, ptr %_30, align 4, !dbg !5208
  %33 = ptrtoint ptr %32 to i32, !dbg !5208
  %34 = icmp eq i32 %33, 0, !dbg !5208
  %_31 = select i1 %34, i32 0, i32 1, !dbg !5208
  %35 = trunc nuw i32 %_31 to i1, !dbg !5209
  br i1 %35, label %bb26, label %bb34, !dbg !5209

bb35:                                             ; preds = %bb2, %bb11, %bb10, %bb17, %bb34, %bb33, %bb21, %bb24
  %36 = load i8, ptr %_0, align 1, !dbg !5210
  %37 = trunc nuw i8 %36 to i1, !dbg !5210
  ret i1 %37, !dbg !5210

bb17:                                             ; preds = %bb14
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %38 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_71054a8da1fe1babd7b72d9d9461da0d) #13, !dbg !5211
  %39 = zext i1 %38 to i8, !dbg !5211
  store i8 %39, ptr %_0, align 1, !dbg !5211
  br label %bb35, !dbg !5211

bb26:                                             ; preds = %bb25
  store ptr %_30, ptr %out.dbg.spill, align 4, !dbg !5212
    #dbg_declare(ptr %out.dbg.spill, !5157, !DIExpression(), !5212)
  %_40 = load ptr, ptr %_30, align 4, !dbg !5213
; call core::fmt::Formatter::alternate
  %_33 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h47450e30007958d8E(ptr align 4 %_40) #13, !dbg !5214
  br i1 %_33, label %bb34, label %bb28, !dbg !5213

bb34:                                             ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit", %bb26, %bb25
  store i8 0, ptr %_0, align 1, !dbg !5215
  br label %bb35, !dbg !5210

bb28:                                             ; preds = %bb26
; call rustc_demangle::v0::basic_type
  %40 = call { ptr, i32 } @_ZN14rustc_demangle2v010basic_type17h156aa3e3723135c9E(i8 %ty_tag) #13, !dbg !5216
  %_36.0 = extractvalue { ptr, i32 } %40, 0, !dbg !5216
  %_36.1 = extractvalue { ptr, i32 } %40, 1, !dbg !5216
  store ptr %_36.0, ptr %self.i, align 4
  %41 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_36.1, ptr %41, align 4
    #dbg_declare(ptr %self.i, !3588, !DIExpression(), !5217)
  %42 = load ptr, ptr %self.i, align 4, !dbg !5219
  %43 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !5219
  %44 = load i32, ptr %43, align 4, !dbg !5219
  %45 = ptrtoint ptr %42 to i32, !dbg !5219
  %46 = icmp eq i32 %45, 0, !dbg !5219
  %_2.i = select i1 %46, i32 0, i32 1, !dbg !5219
  %47 = trunc nuw i32 %_2.i to i1, !dbg !5220
  br i1 %47, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit", label %bb2.i, !dbg !5220

bb2.i:                                            ; preds = %bb28
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h87f3d65d3174ccbeE(ptr align 4 @alloc_e8bb6a85a2336345285f029bee8c4d87) #14, !dbg !5221
  unreachable, !dbg !5221

"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit": ; preds = %bb28
  %val.0.i = load ptr, ptr %self.i, align 4, !dbg !5222
  %48 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !5222
  %val.1.i = load i32, ptr %48, align 4, !dbg !5222
  store ptr %val.0.i, ptr %val.dbg.spill.i, align 4, !dbg !5222
  %49 = getelementptr inbounds i8, ptr %val.dbg.spill.i, i32 4, !dbg !5222
  store i32 %val.1.i, ptr %49, align 4, !dbg !5222
    #dbg_declare(ptr %val.dbg.spill.i, !3594, !DIExpression(), !5223)
  %50 = insertvalue { ptr, i32 } poison, ptr %val.0.i, 0, !dbg !5224
  %51 = insertvalue { ptr, i32 } %50, i32 %val.1.i, 1, !dbg !5224
  %ty.0 = extractvalue { ptr, i32 } %51, 0, !dbg !5225
  %ty.1 = extractvalue { ptr, i32 } %51, 1, !dbg !5225
  store ptr %ty.0, ptr %ty.dbg.spill, align 4, !dbg !5225
  %52 = getelementptr inbounds i8, ptr %ty.dbg.spill, i32 4, !dbg !5225
  store i32 %ty.1, ptr %52, align 4, !dbg !5225
    #dbg_declare(ptr %ty.dbg.spill, !5159, !DIExpression(), !5226)
; call rustc_demangle::v0::Printer::print
  %_38 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %ty.0, i32 %ty.1) #13, !dbg !5227
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_37 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_38) #13, !dbg !5228
  %_39 = zext i1 %_37 to i32, !dbg !5228
  %53 = trunc nuw i32 %_39 to i1, !dbg !5228
  br i1 %53, label %bb33, label %bb34, !dbg !5228

bb33:                                             ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE.exit"
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %54 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_05274a89086c2f868cc8e52db65b1bd8) #13, !dbg !5229
  %55 = zext i1 %54 to i8, !dbg !5229
  store i8 %55, ptr %_0, align 1, !dbg !5229
  br label %bb35, !dbg !5229

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %56 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f8df48d5c7207c9c706ab6a6aa980fad) #13, !dbg !5230
  %57 = zext i1 %56 to i8, !dbg !5230
  store i8 %57, ptr %_0, align 1, !dbg !5230
  br label %bb35, !dbg !5230

bb10:                                             ; preds = %bb5
  %58 = load i8, ptr %err, align 1, !dbg !5231
  %59 = trunc nuw i8 %58 to i1, !dbg !5231
  %60 = getelementptr inbounds i8, ptr %_15, i32 4, !dbg !5231
  %61 = zext i1 %59 to i8, !dbg !5231
  store i8 %61, ptr %60, align 4, !dbg !5231
  store ptr null, ptr %_15, align 4, !dbg !5231
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_15, i32 16, i1 false), !dbg !5232
  store i8 0, ptr %_0, align 1, !dbg !5233
  br label %bb35, !dbg !5234

bb1:                                              ; No predecessors!
  unreachable, !dbg !5235
}

; rustc_demangle::v0::Printer::print_generic_arg
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer17print_generic_arg17h94f686437d5719d5E(ptr align 4 %self) unnamed_addr #1 !dbg !5237 {
start:
  %lt.dbg.spill = alloca [8 x i8], align 8
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5240, !DIExpression(), !5253)
    #dbg_declare(ptr %err, !5247, !DIExpression(), !5254)
    #dbg_declare(ptr %residual.dbg.spill, !5249, !DIExpression(), !5255)
    #dbg_declare(ptr %val.dbg.spill, !5251, !DIExpression(), !5256)
; call rustc_demangle::v0::Printer::eat
  %_2 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 76) #13, !dbg !5257
  br i1 %_2, label %bb2, label %bb14, !dbg !5258

bb14:                                             ; preds = %start
; call rustc_demangle::v0::Printer::eat
  %_15 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 75) #13, !dbg !5259
  br i1 %_15, label %bb16, label %bb17, !dbg !5260

bb2:                                              ; preds = %start
  %0 = load ptr, ptr %self, align 4, !dbg !5261
  %1 = ptrtoint ptr %0 to i32, !dbg !5261
  %2 = icmp eq i32 %1, 0, !dbg !5261
  %_3 = select i1 %2, i32 1, i32 0, !dbg !5261
  %3 = trunc nuw i32 %_3 to i1, !dbg !5262
  br i1 %3, label %bb4, label %bb5, !dbg !5262

bb17:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print_type
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %self) #13, !dbg !5263
  %5 = zext i1 %4 to i8, !dbg !5263
  store i8 %5, ptr %_0, align 1, !dbg !5263
  br label %bb18, !dbg !5263

bb16:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print_const
  %6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %self, i1 zeroext false) #13, !dbg !5264
  %7 = zext i1 %6 to i8, !dbg !5264
  store i8 %7, ptr %_0, align 1, !dbg !5264
  br label %bb18, !dbg !5264

bb18:                                             ; preds = %bb4, %bb13, %bb12, %bb8, %bb16, %bb17
  %8 = load i8, ptr %_0, align 1, !dbg !5265
  %9 = trunc nuw i8 %8 to i1, !dbg !5265
  ret i1 %9, !dbg !5265

bb4:                                              ; preds = %bb2
; call rustc_demangle::v0::Printer::print
  %10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !5266
  %11 = zext i1 %10 to i8, !dbg !5266
  store i8 %11, ptr %_0, align 1, !dbg !5266
  br label %bb18, !dbg !5266

bb5:                                              ; preds = %bb2
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !5267
    #dbg_declare(ptr %parser.dbg.spill, !5243, !DIExpression(), !5268)
; call rustc_demangle::v0::Parser::integer_62
  call void @_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE(ptr sret([16 x i8]) align 8 %_5, ptr align 4 %self) #13, !dbg !5269
  %12 = load i8, ptr %_5, align 8, !dbg !5270
  %13 = trunc nuw i8 %12 to i1, !dbg !5270
  %_6 = zext i1 %13 to i32, !dbg !5270
  %14 = trunc nuw i32 %_6 to i1, !dbg !5271
  br i1 %14, label %bb7, label %bb8, !dbg !5271

bb7:                                              ; preds = %bb5
  %15 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !5272
  %16 = load i8, ptr %15, align 1, !dbg !5272
  %17 = trunc nuw i8 %16 to i1, !dbg !5272
  %18 = zext i1 %17 to i8, !dbg !5272
  store i8 %18, ptr %err, align 1, !dbg !5272
; call rustc_demangle::v0::ParseError::message
  %19 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !5273
  %_11.0 = extractvalue { ptr, i32 } %19, 0, !dbg !5273
  %_11.1 = extractvalue { ptr, i32 } %19, 1, !dbg !5273
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !5274
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !5275
  %_13 = zext i1 %_9 to i32, !dbg !5275
  %20 = trunc nuw i32 %_13 to i1, !dbg !5275
  br i1 %20, label %bb13, label %bb12, !dbg !5275

bb8:                                              ; preds = %bb5
  %21 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !5276
  %lt = load i64, ptr %21, align 8, !dbg !5276
  store i64 %lt, ptr %lt.dbg.spill, align 8, !dbg !5276
    #dbg_declare(ptr %lt.dbg.spill, !5241, !DIExpression(), !5277)
    #dbg_declare(ptr %lt.dbg.spill, !5245, !DIExpression(), !5278)
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %22 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E(ptr align 4 %self, i64 %lt) #13, !dbg !5279
  %23 = zext i1 %22 to i8, !dbg !5279
  store i8 %23, ptr %_0, align 1, !dbg !5279
  br label %bb18, !dbg !5279

bb13:                                             ; preds = %bb7
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %24 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d182f94df0ba7d0ac1f27eb82f7f65a4) #13, !dbg !5280
  %25 = zext i1 %24 to i8, !dbg !5280
  store i8 %25, ptr %_0, align 1, !dbg !5280
  br label %bb18, !dbg !5280

bb12:                                             ; preds = %bb7
  %26 = load i8, ptr %err, align 1, !dbg !5281
  %27 = trunc nuw i8 %26 to i1, !dbg !5281
  %28 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !5281
  %29 = zext i1 %27 to i8, !dbg !5281
  store i8 %29, ptr %28, align 4, !dbg !5281
  store ptr null, ptr %_14, align 4, !dbg !5281
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !5282
  store i8 0, ptr %_0, align 1, !dbg !5283
  br label %bb18, !dbg !5284

bb3:                                              ; No predecessors!
  unreachable, !dbg !5285
}

; rustc_demangle::v0::Printer::skipping_printing
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v07Printer17skipping_printing17h20796fb0adcc57eaE(ptr align 4 %self) unnamed_addr #1 !dbg !5287 {
start:
  %orig_out.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5294, !DIExpression(), !5298)
    #dbg_declare(ptr %f.dbg.spill, !5295, !DIExpression(), !5299)
  %_4 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5300
; call core::option::Option<T>::take
  %orig_out = call align 4 ptr @"_ZN4core6option15Option$LT$T$GT$4take17h377d8dd2789ef001E"(ptr align 4 %_4) #13, !dbg !5301
  store ptr %orig_out, ptr %orig_out.dbg.spill, align 4, !dbg !5301
    #dbg_declare(ptr %orig_out.dbg.spill, !5296, !DIExpression(), !5302)
; call rustc_demangle::v0::Printer::print_path::{{closure}}
  %_6 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h4812f5845730f013E"(ptr align 4 %self) #13, !dbg !5303
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1764e143a7407ec9E"(i1 zeroext %_6, ptr align 1 @alloc_ead4d96489f9fd178dc690c294e1bf9b, i32 61, ptr align 4 @alloc_3855a533c97ad96a76dda89c2990f037) #13, !dbg !5304
  %0 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5305
  store ptr %orig_out, ptr %0, align 4, !dbg !5305
  ret void, !dbg !5306
}

; rustc_demangle::v0::Printer::print_const_str_literal
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer23print_const_str_literal17h3070eca8218c613cE(ptr align 4 %self) unnamed_addr #1 !dbg !5307 {
start:
  %x.dbg.spill = alloca [8 x i8], align 4
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_25 = alloca [16 x i8], align 4
  %err1 = alloca [1 x i8], align 1
  %chars = alloca [20 x i8], align 4
  %_16 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_7 = alloca [8 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  %_2 = alloca [20 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5310, !DIExpression(), !5329)
    #dbg_declare(ptr %err, !5315, !DIExpression(), !5330)
    #dbg_declare(ptr %chars, !5321, !DIExpression(), !5331)
    #dbg_declare(ptr %err1, !5323, !DIExpression(), !5332)
    #dbg_declare(ptr %residual.dbg.spill, !5317, !DIExpression(), !5333)
    #dbg_declare(ptr %val.dbg.spill, !5319, !DIExpression(), !5334)
    #dbg_declare(ptr %residual.dbg.spill2, !5325, !DIExpression(), !5335)
    #dbg_declare(ptr %val.dbg.spill3, !5327, !DIExpression(), !5336)
  %0 = load ptr, ptr %self, align 4, !dbg !5337
  %1 = ptrtoint ptr %0 to i32, !dbg !5337
  %2 = icmp eq i32 %1, 0, !dbg !5337
  %_5 = select i1 %2, i32 1, i32 0, !dbg !5337
  %3 = trunc nuw i32 %_5 to i1, !dbg !5338
  br i1 %3, label %bb2, label %bb3, !dbg !5338

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !5339
  %5 = zext i1 %4 to i8, !dbg !5339
  store i8 %5, ptr %_0, align 1, !dbg !5339
  br label %bb20, !dbg !5339

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !5340
    #dbg_declare(ptr %parser.dbg.spill, !5311, !DIExpression(), !5341)
; call rustc_demangle::v0::Parser::hex_nibbles
  call void @_ZN14rustc_demangle2v06Parser11hex_nibbles17h2dcdab77a1a24703E(ptr sret([8 x i8]) align 4 %_7, ptr align 4 %self) #13, !dbg !5342
  %6 = load ptr, ptr %_7, align 4, !dbg !5343
  %7 = ptrtoint ptr %6 to i32, !dbg !5343
  %8 = icmp eq i32 %7, 0, !dbg !5343
  %_8 = select i1 %8, i32 1, i32 0, !dbg !5343
  %9 = trunc nuw i32 %_8 to i1, !dbg !5344
  br i1 %9, label %bb5, label %bb6, !dbg !5344

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !5345
  %11 = load i8, ptr %10, align 4, !dbg !5345
  %12 = trunc nuw i8 %11 to i1, !dbg !5345
  %13 = zext i1 %12 to i8, !dbg !5345
  store i8 %13, ptr %err, align 1, !dbg !5345
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !5346
  %_13.0 = extractvalue { ptr, i32 } %14, 0, !dbg !5346
  %_13.1 = extractvalue { ptr, i32 } %14, 1, !dbg !5346
; call rustc_demangle::v0::Printer::print
  %_12 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_13.0, i32 %_13.1) #13, !dbg !5347
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_11 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_12) #13, !dbg !5348
  %_15 = zext i1 %_11 to i32, !dbg !5348
  %15 = trunc nuw i32 %_15 to i1, !dbg !5348
  br i1 %15, label %bb11, label %bb10, !dbg !5348

bb6:                                              ; preds = %bb3
  %x.0 = load ptr, ptr %_7, align 4, !dbg !5349
  %16 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !5349
  %x.1 = load i32, ptr %16, align 4, !dbg !5349
  store ptr %x.0, ptr %x.dbg.spill, align 4, !dbg !5349
  %17 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 4, !dbg !5349
  store i32 %x.1, ptr %17, align 4, !dbg !5349
    #dbg_declare(ptr %x.dbg.spill, !5313, !DIExpression(), !5350)
  store ptr %x.0, ptr %_4, align 4, !dbg !5351
  %18 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !5351
  store i32 %x.1, ptr %18, align 4, !dbg !5351
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars
  call void @_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars17h19864841f71ddfdfE(ptr sret([20 x i8]) align 4 %_2, ptr align 4 %_4) #13, !dbg !5352
  %19 = load ptr, ptr %_2, align 4, !dbg !5353
  %20 = ptrtoint ptr %19 to i32, !dbg !5353
  %21 = icmp eq i32 %20, 0, !dbg !5353
  %_17 = select i1 %21, i32 0, i32 1, !dbg !5353
  %22 = trunc nuw i32 %_17 to i1, !dbg !5354
  br i1 %22, label %bb14, label %bb13, !dbg !5354

bb14:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %chars, ptr align 4 %_2, i32 20, i1 false), !dbg !5355
; call rustc_demangle::v0::Printer::print_quoted_escaped_chars
  %23 = call zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h9fa93d09e0af28dfE(ptr align 4 %self, i32 34, ptr align 4 %chars) #13, !dbg !5356
  %24 = zext i1 %23 to i8, !dbg !5356
  store i8 %24, ptr %_0, align 1, !dbg !5356
  br label %bb20, !dbg !5356

bb13:                                             ; preds = %bb6
  store i8 0, ptr %err1, align 1, !dbg !5357
; call rustc_demangle::v0::ParseError::message
  %25 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err1) #13, !dbg !5358
  %_22.0 = extractvalue { ptr, i32 } %25, 0, !dbg !5358
  %_22.1 = extractvalue { ptr, i32 } %25, 1, !dbg !5358
; call rustc_demangle::v0::Printer::print
  %_21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_22.0, i32 %_22.1) #13, !dbg !5359
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_21) #13, !dbg !5360
  %_24 = zext i1 %_20 to i32, !dbg !5360
  %26 = trunc nuw i32 %_24 to i1, !dbg !5360
  br i1 %26, label %bb19, label %bb18, !dbg !5360

bb19:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %27 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_19225259b1f6ae9f650a0b2b9126fd68) #13, !dbg !5361
  %28 = zext i1 %27 to i8, !dbg !5361
  store i8 %28, ptr %_0, align 1, !dbg !5361
  br label %bb20, !dbg !5361

bb18:                                             ; preds = %bb13
  %29 = load i8, ptr %err1, align 1, !dbg !5362
  %30 = trunc nuw i8 %29 to i1, !dbg !5362
  %31 = getelementptr inbounds i8, ptr %_25, i32 4, !dbg !5362
  %32 = zext i1 %30 to i8, !dbg !5362
  store i8 %32, ptr %31, align 4, !dbg !5362
  store ptr null, ptr %_25, align 4, !dbg !5362
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_25, i32 16, i1 false), !dbg !5363
  store i8 0, ptr %_0, align 1, !dbg !5364
  br label %bb20, !dbg !5365

bb20:                                             ; preds = %bb2, %bb11, %bb10, %bb14, %bb19, %bb18
  %33 = load i8, ptr %_0, align 1, !dbg !5366
  %34 = trunc nuw i8 %33 to i1, !dbg !5366
  ret i1 %34, !dbg !5366

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %35 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f6bdd9b8b27bdd76c53cce2153da650a) #13, !dbg !5367
  %36 = zext i1 %35 to i8, !dbg !5367
  store i8 %36, ptr %_0, align 1, !dbg !5367
  br label %bb20, !dbg !5367

bb10:                                             ; preds = %bb5
  %37 = load i8, ptr %err, align 1, !dbg !5368
  %38 = trunc nuw i8 %37 to i1, !dbg !5368
  %39 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !5368
  %40 = zext i1 %38 to i8, !dbg !5368
  store i8 %40, ptr %39, align 4, !dbg !5368
  store ptr null, ptr %_16, align 4, !dbg !5368
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_16, i32 16, i1 false), !dbg !5369
  store i8 0, ptr %_0, align 1, !dbg !5370
  br label %bb20, !dbg !5371

bb1:                                              ; No predecessors!
  unreachable, !dbg !5372
}

; rustc_demangle::v0::Printer::print_lifetime_from_index
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E(ptr align 4 %self, i64 %lt) unnamed_addr #1 !dbg !5374 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %depth.dbg.spill = alloca [8 x i8], align 8
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %lt.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [4 x i8], align 4
  %_27 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_8 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5379, !DIExpression(), !5399)
  store i64 %lt, ptr %lt.dbg.spill, align 8
    #dbg_declare(ptr %lt.dbg.spill, !5380, !DIExpression(), !5400)
    #dbg_declare(ptr %err, !5393, !DIExpression(), !5401)
    #dbg_declare(ptr %residual.dbg.spill, !5381, !DIExpression(), !5402)
    #dbg_declare(ptr %val.dbg.spill, !5383, !DIExpression(), !5403)
    #dbg_declare(ptr %residual.dbg.spill1, !5389, !DIExpression(), !5404)
    #dbg_declare(ptr %val.dbg.spill2, !5391, !DIExpression(), !5405)
    #dbg_declare(ptr %residual.dbg.spill3, !5395, !DIExpression(), !5406)
    #dbg_declare(ptr %val.dbg.spill4, !5397, !DIExpression(), !5407)
  %_4 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5408
; call core::option::Option<T>::is_none
  %_3 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %_4) #13, !dbg !5409
  br i1 %_3, label %bb2, label %bb3, !dbg !5408

bb3:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %_6 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_8b81d5a4eae5f23ca3c590a4cd01f630, i32 1) #13, !dbg !5410
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_5 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_6) #13, !dbg !5411
  %_7 = zext i1 %_5 to i32, !dbg !5411
  %0 = trunc nuw i32 %_7 to i1, !dbg !5411
  br i1 %0, label %bb8, label %bb7, !dbg !5411

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !5412
  br label %bb26, !dbg !5413

bb8:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %1 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_03d93ef07fc5a4a67ea227d750e92409) #13, !dbg !5415
  %2 = zext i1 %1 to i8, !dbg !5415
  store i8 %2, ptr %_0, align 1, !dbg !5415
  br label %bb26, !dbg !5415

bb7:                                              ; preds = %bb3
  %3 = icmp eq i64 %lt, 0, !dbg !5416
  br i1 %3, label %bb9, label %bb10, !dbg !5416

bb9:                                              ; preds = %bb7
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_27cca3636828088e60ce450d2eca2060, i32 1) #13, !dbg !5417
  %5 = zext i1 %4 to i8, !dbg !5417
  store i8 %5, ptr %_0, align 1, !dbg !5417
  br label %bb26, !dbg !5417

bb10:                                             ; preds = %bb7
  %6 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !5418
  %_10 = load i32, ptr %6, align 4, !dbg !5418
  %_9 = zext i32 %_10 to i64, !dbg !5419
; call core::num::<impl u64>::checked_sub
  call void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_sub17h25afcbdc5e9ad36fE"(ptr sret([16 x i8]) align 8 %_8, i64 %_9, i64 %lt) #13, !dbg !5420
  %7 = load i64, ptr %_8, align 8, !dbg !5419
  %8 = getelementptr inbounds i8, ptr %_8, i32 8, !dbg !5419
  %9 = load i64, ptr %8, align 8, !dbg !5419
  %_11 = trunc i64 %7 to i32, !dbg !5419
  %10 = trunc nuw i32 %_11 to i1, !dbg !5421
  br i1 %10, label %bb13, label %bb12, !dbg !5421

bb26:                                             ; preds = %bb2, %bb8, %bb15, %bb20, %bb19, %bb25, %bb24, %bb9
  %11 = load i8, ptr %_0, align 1, !dbg !5422
  %12 = trunc nuw i8 %11 to i1, !dbg !5422
  ret i1 %12, !dbg !5422

bb13:                                             ; preds = %bb10
  %13 = getelementptr inbounds i8, ptr %_8, i32 8, !dbg !5423
  %depth = load i64, ptr %13, align 8, !dbg !5423
  store i64 %depth, ptr %depth.dbg.spill, align 8, !dbg !5423
    #dbg_declare(ptr %depth.dbg.spill, !5385, !DIExpression(), !5424)
  %_13 = icmp ult i64 %depth, 26, !dbg !5425
  br i1 %_13, label %bb14, label %bb16, !dbg !5425

bb12:                                             ; preds = %bb10
  store i8 0, ptr %err, align 1, !dbg !5426
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !5427
  %_24.0 = extractvalue { ptr, i32 } %14, 0, !dbg !5427
  %_24.1 = extractvalue { ptr, i32 } %14, 1, !dbg !5427
; call rustc_demangle::v0::Printer::print
  %_23 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_24.0, i32 %_24.1) #13, !dbg !5428
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_22 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_23) #13, !dbg !5429
  %_26 = zext i1 %_22 to i32, !dbg !5429
  %15 = trunc nuw i32 %_26 to i1, !dbg !5429
  br i1 %15, label %bb25, label %bb24, !dbg !5429

bb25:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %16 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_cea3a5cff8c51aa351847d5b8f89866b) #13, !dbg !5430
  %17 = zext i1 %16 to i8, !dbg !5430
  store i8 %17, ptr %_0, align 1, !dbg !5430
  br label %bb26, !dbg !5430

bb24:                                             ; preds = %bb12
  %18 = load i8, ptr %err, align 1, !dbg !5431
  %19 = trunc nuw i8 %18 to i1, !dbg !5431
  %20 = getelementptr inbounds i8, ptr %_27, i32 4, !dbg !5431
  %21 = zext i1 %19 to i8, !dbg !5431
  store i8 %21, ptr %20, align 4, !dbg !5431
  store ptr null, ptr %_27, align 4, !dbg !5431
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_27, i32 16, i1 false), !dbg !5432
  store i8 0, ptr %_0, align 1, !dbg !5433
  br label %bb26, !dbg !5434

bb16:                                             ; preds = %bb13
; call rustc_demangle::v0::Printer::print
  %_19 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_27cca3636828088e60ce450d2eca2060, i32 1) #13, !dbg !5435
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_18 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_19) #13, !dbg !5436
  %_20 = zext i1 %_18 to i32, !dbg !5436
  %22 = trunc nuw i32 %_20 to i1, !dbg !5436
  br i1 %22, label %bb20, label %bb19, !dbg !5436

bb14:                                             ; preds = %bb13
  %_16 = trunc i64 %depth to i8, !dbg !5437
  %_17.0 = add i8 97, %_16, !dbg !5438
  %_17.1 = icmp ult i8 %_17.0, 97, !dbg !5438
  br i1 %_17.1, label %panic, label %bb15, !dbg !5438

bb20:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %23 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_63acfc96622f9f177b3b59977aab9bd8) #13, !dbg !5439
  %24 = zext i1 %23 to i8, !dbg !5439
  store i8 %24, ptr %_0, align 1, !dbg !5439
  br label %bb26, !dbg !5439

bb19:                                             ; preds = %bb16
; call rustc_demangle::v0::Printer::print
  %25 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h755367634094e4b9E(ptr align 4 %self, i64 %depth) #13, !dbg !5440
  %26 = zext i1 %25 to i8, !dbg !5440
  store i8 %26, ptr %_0, align 1, !dbg !5440
  br label %bb26, !dbg !5440

bb15:                                             ; preds = %bb14
  %c = zext i8 %_17.0 to i32, !dbg !5438
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !5438
    #dbg_declare(ptr %c.dbg.spill, !5387, !DIExpression(), !5441)
; call rustc_demangle::v0::Printer::print
  %27 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hd09854794c0a73edE(ptr align 4 %self, i32 %c) #13, !dbg !5442
  %28 = zext i1 %27 to i8, !dbg !5442
  store i8 %28, ptr %_0, align 1, !dbg !5442
  br label %bb26, !dbg !5442

panic:                                            ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_86f3d20449ea630c41a97b597223faf5) #14, !dbg !5438
  unreachable, !dbg !5438

bb6:                                              ; No predecessors!
  unreachable, !dbg !5413
}

; rustc_demangle::v0::Printer::print_quoted_escaped_chars
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h914937b601f2723dE(ptr align 4 %self, i32 %quote, i32 %chars) unnamed_addr #1 !dbg !5443 {
start:
  %escaped.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %out.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill7 = alloca [0 x i8], align 1
  %residual.dbg.spill6 = alloca [0 x i8], align 1
  %val.dbg.spill5 = alloca [0 x i8], align 1
  %residual.dbg.spill4 = alloca [0 x i8], align 1
  %val.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %chars.dbg.spill = alloca [4 x i8], align 4
  %quote.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_35 = alloca [1 x i8], align 1
  %_25 = alloca [4 x i8], align 4
  %iter1 = alloca [16 x i8], align 4
  %_23 = alloca [16 x i8], align 4
  %_22 = alloca [16 x i8], align 4
  %_17 = alloca [1 x i8], align 1
  %_13 = alloca [4 x i8], align 4
  %iter = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5462, !DIExpression(), !5520)
  store i32 %quote, ptr %quote.dbg.spill, align 4
    #dbg_declare(ptr %quote.dbg.spill, !5463, !DIExpression(), !5521)
  store i32 %chars, ptr %chars.dbg.spill, align 4
    #dbg_declare(ptr %chars.dbg.spill, !5464, !DIExpression(), !5522)
    #dbg_declare(ptr %iter, !5471, !DIExpression(), !5523)
    #dbg_declare(ptr %iter1, !5479, !DIExpression(), !5524)
    #dbg_declare(ptr %residual.dbg.spill, !5467, !DIExpression(), !5525)
    #dbg_declare(ptr %val.dbg.spill, !5469, !DIExpression(), !5526)
    #dbg_declare(ptr %residual.dbg.spill2, !5475, !DIExpression(), !5527)
    #dbg_declare(ptr %val.dbg.spill3, !5477, !DIExpression(), !5528)
    #dbg_declare(ptr %residual.dbg.spill4, !5512, !DIExpression(), !5529)
    #dbg_declare(ptr %val.dbg.spill5, !5514, !DIExpression(), !5530)
    #dbg_declare(ptr %residual.dbg.spill6, !5516, !DIExpression(), !5531)
    #dbg_declare(ptr %val.dbg.spill7, !5518, !DIExpression(), !5532)
  store i8 0, ptr %_35, align 1, !dbg !5533
  store i8 1, ptr %_35, align 1, !dbg !5533
  %_4 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5534
  %0 = load ptr, ptr %_4, align 4, !dbg !5534
  %1 = ptrtoint ptr %0 to i32, !dbg !5534
  %2 = icmp eq i32 %1, 0, !dbg !5534
  %_5 = select i1 %2, i32 0, i32 1, !dbg !5534
  %3 = trunc nuw i32 %_5 to i1, !dbg !5535
  br i1 %3, label %bb1, label %bb33, !dbg !5535

bb1:                                              ; preds = %start
  store ptr %_4, ptr %out.dbg.spill, align 4, !dbg !5536
    #dbg_declare(ptr %out.dbg.spill, !5465, !DIExpression(), !5536)
; call <&mut W as core::fmt::Write>::write_char
  %_8 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %quote) #13, !dbg !5537
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_7 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_8) #13, !dbg !5538
  %_9 = zext i1 %_7 to i32, !dbg !5538
  %4 = trunc nuw i32 %_9 to i1, !dbg !5538
  br i1 %4, label %bb6, label %bb5, !dbg !5538

bb33:                                             ; preds = %bb11, %start
  store i8 0, ptr %_0, align 1, !dbg !5539
  %5 = load i8, ptr %_35, align 1, !dbg !5540
  %6 = trunc nuw i8 %5 to i1, !dbg !5540
  br i1 %6, label %bb37, label %bb36, !dbg !5540

bb6:                                              ; preds = %bb1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b7f8239ac0ee9ea18ce6bb3b2c8cc23f) #13, !dbg !5541
  %8 = zext i1 %7 to i8, !dbg !5541
  store i8 %8, ptr %_0, align 1, !dbg !5541
  br label %bb35, !dbg !5541

bb5:                                              ; preds = %bb1
  store i8 0, ptr %_35, align 1, !dbg !5542
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_10 = call i32 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h987fd98d61476583E"(i32 %chars) #13, !dbg !5542
  store i32 %_10, ptr %iter, align 4, !dbg !5542
  br label %bb8, !dbg !5543

bb8:                                              ; preds = %bb16, %bb23, %bb5
; call <core::iter::sources::once::Once<T> as core::iter::traits::iterator::Iterator>::next
  %9 = call i32 @"_ZN99_$LT$core..iter..sources..once..Once$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he963aa5e8a4a6250E"(ptr align 4 %iter) #13, !dbg !5523
  store i32 %9, ptr %_13, align 4, !dbg !5523
  %10 = load i32, ptr %_13, align 4, !dbg !5523
  %11 = icmp eq i32 %10, 1114112, !dbg !5523
  %_15 = select i1 %11, i32 0, i32 1, !dbg !5523
  %12 = trunc nuw i32 %_15 to i1, !dbg !5523
  br i1 %12, label %bb10, label %bb11, !dbg !5523

bb10:                                             ; preds = %bb8
  %c = load i32, ptr %_13, align 4, !dbg !5544
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !5544
    #dbg_declare(ptr %c.dbg.spill, !5473, !DIExpression(), !5545)
  switch i32 %quote, label %bb12 [
    i32 39, label %bb13
    i32 34, label %bb14
  ], !dbg !5546

bb11:                                             ; preds = %bb8
; call <&mut W as core::fmt::Write>::write_char
  %_33 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %quote) #13, !dbg !5547
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_32 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_33) #13, !dbg !5548
  %_34 = zext i1 %_32 to i32, !dbg !5548
  %13 = trunc nuw i32 %_34 to i1, !dbg !5548
  br i1 %13, label %bb32, label %bb33, !dbg !5548

bb32:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %14 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d13195e84ec9718716723d8fa6e4e6c0) #13, !dbg !5549
  %15 = zext i1 %14 to i8, !dbg !5549
  store i8 %15, ptr %_0, align 1, !dbg !5549
  br label %bb35, !dbg !5549

bb35:                                             ; preds = %bb6, %bb34, %bb32
  %16 = load i8, ptr %_35, align 1, !dbg !5540
  %17 = trunc nuw i8 %16 to i1, !dbg !5540
  br i1 %17, label %bb38, label %bb36, !dbg !5540

bb12:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1, !dbg !5546
  br label %bb15, !dbg !5546

bb13:                                             ; preds = %bb10
  %18 = icmp eq i32 %c, 34, !dbg !5546
  %19 = zext i1 %18 to i8, !dbg !5546
  store i8 %19, ptr %_17, align 1, !dbg !5546
  br label %bb15, !dbg !5546

bb14:                                             ; preds = %bb10
  %20 = icmp eq i32 %c, 39, !dbg !5546
  %21 = zext i1 %20 to i8, !dbg !5546
  store i8 %21, ptr %_17, align 1, !dbg !5546
  br label %bb15, !dbg !5546

bb15:                                             ; preds = %bb12, %bb14, %bb13
  %22 = load i8, ptr %_17, align 1, !dbg !5546
  %23 = trunc nuw i8 %22 to i1, !dbg !5546
  br i1 %23, label %bb16, label %bb20, !dbg !5546

bb20:                                             ; preds = %bb15
; call core::char::methods::<impl char>::escape_debug
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h200d0bc8cbcc76e8E"(ptr sret([16 x i8]) align 4 %_23, i32 %c) #13, !dbg !5550
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h76029def0fb2ddbcE"(ptr sret([16 x i8]) align 4 %_22, ptr align 4 %_23) #13, !dbg !5551
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter1, ptr align 4 %_22, i32 16, i1 false), !dbg !5551
  br label %bb23, !dbg !5552

bb16:                                             ; preds = %bb15
; call <&mut W as core::fmt::Write>::write_char
  %_20 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %c) #13, !dbg !5553
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_19 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_20) #13, !dbg !5554
  %_21 = zext i1 %_19 to i32, !dbg !5554
  %24 = trunc nuw i32 %_21 to i1, !dbg !5554
  br i1 %24, label %bb19, label %bb8, !dbg !5554

bb23:                                             ; preds = %bb25, %bb20
; call <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
  %25 = call i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb25337508d5d68c8E"(ptr align 4 %iter1) #13, !dbg !5524
  store i32 %25, ptr %_25, align 4, !dbg !5524
  %26 = load i32, ptr %_25, align 4, !dbg !5524
  %27 = icmp eq i32 %26, 1114112, !dbg !5524
  %_27 = select i1 %27, i32 0, i32 1, !dbg !5524
  %28 = trunc nuw i32 %_27 to i1, !dbg !5524
  br i1 %28, label %bb25, label %bb8, !dbg !5524

bb25:                                             ; preds = %bb23
  %escaped = load i32, ptr %_25, align 4, !dbg !5555
  store i32 %escaped, ptr %escaped.dbg.spill, align 4, !dbg !5555
    #dbg_declare(ptr %escaped.dbg.spill, !5510, !DIExpression(), !5556)
; call <&mut W as core::fmt::Write>::write_char
  %_30 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %escaped) #13, !dbg !5557
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_29 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_30) #13, !dbg !5558
  %_31 = zext i1 %_29 to i32, !dbg !5558
  %29 = trunc nuw i32 %_31 to i1, !dbg !5558
  br i1 %29, label %bb28, label %bb23, !dbg !5558

bb28:                                             ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %30 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_4b80768d4b767388f04e0699a70d3b58) #13, !dbg !5559
  %31 = zext i1 %30 to i8, !dbg !5559
  store i8 %31, ptr %_0, align 1, !dbg !5559
  br label %bb34, !dbg !5559

bb34:                                             ; preds = %bb19, %bb28
  br label %bb35, !dbg !5560

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %32 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a717a592fcf8ab137c836bd317489f92) #13, !dbg !5561
  %33 = zext i1 %32 to i8, !dbg !5561
  store i8 %33, ptr %_0, align 1, !dbg !5561
  br label %bb34, !dbg !5561

bb36:                                             ; preds = %bb37, %bb33, %bb38, %bb35
  %34 = load i8, ptr %_0, align 1, !dbg !5562
  %35 = trunc nuw i8 %34 to i1, !dbg !5562
  ret i1 %35, !dbg !5562

bb38:                                             ; preds = %bb35
  br label %bb36, !dbg !5540

bb37:                                             ; preds = %bb33
  br label %bb36, !dbg !5540

bb4:                                              ; No predecessors!
  unreachable, !dbg !5563
}

; rustc_demangle::v0::Printer::print_quoted_escaped_chars
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h9fa93d09e0af28dfE(ptr align 4 %self, i32 %quote, ptr align 4 %chars) unnamed_addr #1 !dbg !5565 {
start:
  %escaped.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %out.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill7 = alloca [0 x i8], align 1
  %residual.dbg.spill6 = alloca [0 x i8], align 1
  %val.dbg.spill5 = alloca [0 x i8], align 1
  %residual.dbg.spill4 = alloca [0 x i8], align 1
  %val.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %quote.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_35 = alloca [1 x i8], align 1
  %_25 = alloca [4 x i8], align 4
  %iter1 = alloca [16 x i8], align 4
  %_23 = alloca [16 x i8], align 4
  %_22 = alloca [16 x i8], align 4
  %_17 = alloca [1 x i8], align 1
  %_13 = alloca [4 x i8], align 4
  %iter = alloca [20 x i8], align 4
  %_11 = alloca [20 x i8], align 4
  %_10 = alloca [20 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5572, !DIExpression(), !5601)
  store i32 %quote, ptr %quote.dbg.spill, align 4
    #dbg_declare(ptr %quote.dbg.spill, !5573, !DIExpression(), !5602)
    #dbg_declare(ptr %chars, !5574, !DIExpression(), !5603)
    #dbg_declare(ptr %iter, !5581, !DIExpression(), !5604)
    #dbg_declare(ptr %iter1, !5589, !DIExpression(), !5605)
    #dbg_declare(ptr %residual.dbg.spill, !5577, !DIExpression(), !5606)
    #dbg_declare(ptr %val.dbg.spill, !5579, !DIExpression(), !5607)
    #dbg_declare(ptr %residual.dbg.spill2, !5585, !DIExpression(), !5608)
    #dbg_declare(ptr %val.dbg.spill3, !5587, !DIExpression(), !5609)
    #dbg_declare(ptr %residual.dbg.spill4, !5593, !DIExpression(), !5610)
    #dbg_declare(ptr %val.dbg.spill5, !5595, !DIExpression(), !5611)
    #dbg_declare(ptr %residual.dbg.spill6, !5597, !DIExpression(), !5612)
    #dbg_declare(ptr %val.dbg.spill7, !5599, !DIExpression(), !5613)
  store i8 0, ptr %_35, align 1, !dbg !5614
  store i8 1, ptr %_35, align 1, !dbg !5614
  %_4 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5615
  %0 = load ptr, ptr %_4, align 4, !dbg !5615
  %1 = ptrtoint ptr %0 to i32, !dbg !5615
  %2 = icmp eq i32 %1, 0, !dbg !5615
  %_5 = select i1 %2, i32 0, i32 1, !dbg !5615
  %3 = trunc nuw i32 %_5 to i1, !dbg !5616
  br i1 %3, label %bb1, label %bb33, !dbg !5616

bb1:                                              ; preds = %start
  store ptr %_4, ptr %out.dbg.spill, align 4, !dbg !5617
    #dbg_declare(ptr %out.dbg.spill, !5575, !DIExpression(), !5617)
; call <&mut W as core::fmt::Write>::write_char
  %_8 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %quote) #13, !dbg !5618
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_7 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_8) #13, !dbg !5619
  %_9 = zext i1 %_7 to i32, !dbg !5619
  %4 = trunc nuw i32 %_9 to i1, !dbg !5619
  br i1 %4, label %bb6, label %bb5, !dbg !5619

bb33:                                             ; preds = %bb11, %start
  store i8 0, ptr %_0, align 1, !dbg !5620
  %5 = load i8, ptr %_35, align 1, !dbg !5621
  %6 = trunc nuw i8 %5 to i1, !dbg !5621
  br i1 %6, label %bb37, label %bb36, !dbg !5621

bb6:                                              ; preds = %bb1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b7f8239ac0ee9ea18ce6bb3b2c8cc23f) #13, !dbg !5622
  %8 = zext i1 %7 to i8, !dbg !5622
  store i8 %8, ptr %_0, align 1, !dbg !5622
  br label %bb35, !dbg !5622

bb5:                                              ; preds = %bb1
  store i8 0, ptr %_35, align 1, !dbg !5623
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %chars, i32 20, i1 false), !dbg !5623
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1f5cac5415d8f7fdE"(ptr sret([20 x i8]) align 4 %_10, ptr align 4 %_11) #13, !dbg !5623
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter, ptr align 4 %_10, i32 20, i1 false), !dbg !5623
  br label %bb8, !dbg !5624

bb8:                                              ; preds = %bb16, %bb23, %bb5
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %9 = call i32 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7ed85dc997dbfcb8E"(ptr align 4 %iter) #13, !dbg !5604
  store i32 %9, ptr %_13, align 4, !dbg !5604
  %10 = load i32, ptr %_13, align 4, !dbg !5604
  %11 = icmp eq i32 %10, 1114112, !dbg !5604
  %_15 = select i1 %11, i32 0, i32 1, !dbg !5604
  %12 = trunc nuw i32 %_15 to i1, !dbg !5604
  br i1 %12, label %bb10, label %bb11, !dbg !5604

bb10:                                             ; preds = %bb8
  %c = load i32, ptr %_13, align 4, !dbg !5625
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !5625
    #dbg_declare(ptr %c.dbg.spill, !5583, !DIExpression(), !5626)
  switch i32 %quote, label %bb12 [
    i32 39, label %bb13
    i32 34, label %bb14
  ], !dbg !5627

bb11:                                             ; preds = %bb8
; call <&mut W as core::fmt::Write>::write_char
  %_33 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %quote) #13, !dbg !5628
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_32 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_33) #13, !dbg !5629
  %_34 = zext i1 %_32 to i32, !dbg !5629
  %13 = trunc nuw i32 %_34 to i1, !dbg !5629
  br i1 %13, label %bb32, label %bb33, !dbg !5629

bb32:                                             ; preds = %bb11
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %14 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d13195e84ec9718716723d8fa6e4e6c0) #13, !dbg !5630
  %15 = zext i1 %14 to i8, !dbg !5630
  store i8 %15, ptr %_0, align 1, !dbg !5630
  br label %bb35, !dbg !5630

bb35:                                             ; preds = %bb6, %bb34, %bb32
  %16 = load i8, ptr %_35, align 1, !dbg !5621
  %17 = trunc nuw i8 %16 to i1, !dbg !5621
  br i1 %17, label %bb38, label %bb36, !dbg !5621

bb12:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1, !dbg !5627
  br label %bb15, !dbg !5627

bb13:                                             ; preds = %bb10
  %18 = icmp eq i32 %c, 34, !dbg !5627
  %19 = zext i1 %18 to i8, !dbg !5627
  store i8 %19, ptr %_17, align 1, !dbg !5627
  br label %bb15, !dbg !5627

bb14:                                             ; preds = %bb10
  %20 = icmp eq i32 %c, 39, !dbg !5627
  %21 = zext i1 %20 to i8, !dbg !5627
  store i8 %21, ptr %_17, align 1, !dbg !5627
  br label %bb15, !dbg !5627

bb15:                                             ; preds = %bb12, %bb14, %bb13
  %22 = load i8, ptr %_17, align 1, !dbg !5627
  %23 = trunc nuw i8 %22 to i1, !dbg !5627
  br i1 %23, label %bb16, label %bb20, !dbg !5627

bb20:                                             ; preds = %bb15
; call core::char::methods::<impl char>::escape_debug
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h200d0bc8cbcc76e8E"(ptr sret([16 x i8]) align 4 %_23, i32 %c) #13, !dbg !5631
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h76029def0fb2ddbcE"(ptr sret([16 x i8]) align 4 %_22, ptr align 4 %_23) #13, !dbg !5632
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter1, ptr align 4 %_22, i32 16, i1 false), !dbg !5632
  br label %bb23, !dbg !5633

bb16:                                             ; preds = %bb15
; call <&mut W as core::fmt::Write>::write_char
  %_20 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %c) #13, !dbg !5634
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_19 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_20) #13, !dbg !5635
  %_21 = zext i1 %_19 to i32, !dbg !5635
  %24 = trunc nuw i32 %_21 to i1, !dbg !5635
  br i1 %24, label %bb19, label %bb8, !dbg !5635

bb23:                                             ; preds = %bb25, %bb20
; call <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
  %25 = call i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb25337508d5d68c8E"(ptr align 4 %iter1) #13, !dbg !5605
  store i32 %25, ptr %_25, align 4, !dbg !5605
  %26 = load i32, ptr %_25, align 4, !dbg !5605
  %27 = icmp eq i32 %26, 1114112, !dbg !5605
  %_27 = select i1 %27, i32 0, i32 1, !dbg !5605
  %28 = trunc nuw i32 %_27 to i1, !dbg !5605
  br i1 %28, label %bb25, label %bb8, !dbg !5605

bb25:                                             ; preds = %bb23
  %escaped = load i32, ptr %_25, align 4, !dbg !5636
  store i32 %escaped, ptr %escaped.dbg.spill, align 4, !dbg !5636
    #dbg_declare(ptr %escaped.dbg.spill, !5591, !DIExpression(), !5637)
; call <&mut W as core::fmt::Write>::write_char
  %_30 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %_4, i32 %escaped) #13, !dbg !5638
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_29 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_30) #13, !dbg !5639
  %_31 = zext i1 %_29 to i32, !dbg !5639
  %29 = trunc nuw i32 %_31 to i1, !dbg !5639
  br i1 %29, label %bb28, label %bb23, !dbg !5639

bb28:                                             ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %30 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_4b80768d4b767388f04e0699a70d3b58) #13, !dbg !5640
  %31 = zext i1 %30 to i8, !dbg !5640
  store i8 %31, ptr %_0, align 1, !dbg !5640
  br label %bb34, !dbg !5640

bb34:                                             ; preds = %bb19, %bb28
  br label %bb35, !dbg !5641

bb19:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %32 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a717a592fcf8ab137c836bd317489f92) #13, !dbg !5642
  %33 = zext i1 %32 to i8, !dbg !5642
  store i8 %33, ptr %_0, align 1, !dbg !5642
  br label %bb34, !dbg !5642

bb36:                                             ; preds = %bb37, %bb33, %bb38, %bb35
  %34 = load i8, ptr %_0, align 1, !dbg !5643
  %35 = trunc nuw i8 %34 to i1, !dbg !5643
  ret i1 %35, !dbg !5643

bb38:                                             ; preds = %bb35
  br label %bb36, !dbg !5621

bb37:                                             ; preds = %bb33
  br label %bb36, !dbg !5621

bb4:                                              ; No predecessors!
  unreachable, !dbg !5644
}

; rustc_demangle::v0::Printer::print_path_maybe_open_generics
; Function Attrs: nounwind
define internal i8 @_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hdc3fa7ba7071b4caE(ptr align 4 %self) unnamed_addr #1 !dbg !5646 {
start:
  %val.dbg.spill8 = alloca [4 x i8], align 4
  %val.dbg.spill7 = alloca [0 x i8], align 1
  %residual.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_17 = alloca [8 x i8], align 4
  %open = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5666, !DIExpression(), !5689)
    #dbg_declare(ptr %open, !5667, !DIExpression(), !5690)
    #dbg_declare(ptr %residual.dbg.spill, !5669, !DIExpression(), !5691)
    #dbg_declare(ptr %val.dbg.spill, !5671, !DIExpression(), !5692)
    #dbg_declare(ptr %residual.dbg.spill1, !5673, !DIExpression(), !5693)
    #dbg_declare(ptr %val.dbg.spill2, !5675, !DIExpression(), !5694)
    #dbg_declare(ptr %residual.dbg.spill3, !5677, !DIExpression(), !5695)
    #dbg_declare(ptr %val.dbg.spill4, !5679, !DIExpression(), !5696)
    #dbg_declare(ptr %residual.dbg.spill5, !5681, !DIExpression(), !5697)
    #dbg_declare(ptr %residual.dbg.spill6, !5685, !DIExpression(), !5698)
    #dbg_declare(ptr %val.dbg.spill7, !5687, !DIExpression(), !5699)
; call rustc_demangle::v0::Printer::eat
  %_2 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 66) #13, !dbg !5700
  br i1 %_2, label %bb2, label %bb8, !dbg !5701

bb8:                                              ; preds = %start
; call rustc_demangle::v0::Printer::eat
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 73) #13, !dbg !5702
  br i1 %_10, label %bb10, label %bb23, !dbg !5703

bb2:                                              ; preds = %start
  store i8 0, ptr %open, align 1, !dbg !5704
; call rustc_demangle::v0::Printer::print_backref
  %_5 = call zeroext i1 @_ZN14rustc_demangle2v07Printer13print_backref17ha0f7ef4d704b70e7E(ptr align 4 %self, ptr align 1 %open) #13, !dbg !5705
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_4 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_5) #13, !dbg !5706
  %_8 = zext i1 %_4 to i32, !dbg !5706
  %0 = trunc nuw i32 %_8 to i1, !dbg !5706
  br i1 %0, label %bb7, label %bb6, !dbg !5706

bb23:                                             ; preds = %bb8
; call rustc_demangle::v0::Printer::print_path
  %_23 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext false) #13, !dbg !5707
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_22 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_23) #13, !dbg !5708
  %_24 = zext i1 %_22 to i32, !dbg !5708
  %1 = trunc nuw i32 %_24 to i1, !dbg !5708
  br i1 %1, label %bb27, label %bb26, !dbg !5708

bb10:                                             ; preds = %bb8
; call rustc_demangle::v0::Printer::print_path
  %_12 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %self, i1 zeroext false) #13, !dbg !5709
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_11 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_12) #13, !dbg !5710
  %_13 = zext i1 %_11 to i32, !dbg !5710
  %2 = trunc nuw i32 %_13 to i1, !dbg !5710
  br i1 %2, label %bb14, label %bb13, !dbg !5710

bb27:                                             ; preds = %bb23
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %3 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbbe8a96f2b4d53E"(ptr align 4 @alloc_d4d20f40d3875c32731f785725cc3ca2) #13, !dbg !5711
  store i8 %3, ptr %_0, align 1, !dbg !5711
  br label %bb28, !dbg !5711

bb26:                                             ; preds = %bb23
  store i8 0, ptr %_0, align 1, !dbg !5712
  br label %bb28, !dbg !5713

bb28:                                             ; preds = %bb7, %bb6, %bb14, %bb18, %bb22, %bb21, %bb27, %bb26
  %4 = load i8, ptr %_0, align 1, !dbg !5714
  ret i8 %4, !dbg !5714

bb14:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %5 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbbe8a96f2b4d53E"(ptr align 4 @alloc_5cc8d615d0d430c19940729ae5453f98) #13, !dbg !5715
  store i8 %5, ptr %_0, align 1, !dbg !5715
  br label %bb28, !dbg !5715

bb13:                                             ; preds = %bb10
; call rustc_demangle::v0::Printer::print
  %_15 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_069739ecb4f78035aca324a6dc5131a2, i32 1) #13, !dbg !5716
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_14 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_15) #13, !dbg !5717
  %_16 = zext i1 %_14 to i32, !dbg !5717
  %6 = trunc nuw i32 %_16 to i1, !dbg !5717
  br i1 %6, label %bb18, label %bb17, !dbg !5717

bb18:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbbe8a96f2b4d53E"(ptr align 4 @alloc_53010fd4052d9625b4787f4b90e49f6a) #13, !dbg !5718
  store i8 %7, ptr %_0, align 1, !dbg !5718
  br label %bb28, !dbg !5718

bb17:                                             ; preds = %bb13
; call rustc_demangle::v0::Printer::print_sep_list
  %8 = call { i32, i32 } @_ZN14rustc_demangle2v07Printer14print_sep_list17hdf132c66be8ff57bE(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !5719
  %_18.0 = extractvalue { i32, i32 } %8, 0, !dbg !5719
  %_18.1 = extractvalue { i32, i32 } %8, 1, !dbg !5719
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %9 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %_18.0, i32 %_18.1) #13, !dbg !5720
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !5720
  %11 = extractvalue { i32, i32 } %9, 1, !dbg !5720
  store i32 %10, ptr %_17, align 4, !dbg !5720
  %12 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !5720
  store i32 %11, ptr %12, align 4, !dbg !5720
  %_20 = load i32, ptr %_17, align 4, !dbg !5720
  %13 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !5720
  %14 = load i32, ptr %13, align 4, !dbg !5720
  %15 = trunc nuw i32 %_20 to i1, !dbg !5720
  br i1 %15, label %bb22, label %bb21, !dbg !5720

bb22:                                             ; preds = %bb17
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %16 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbbe8a96f2b4d53E"(ptr align 4 @alloc_6b31c84da84d5b9ef8856eee0c371b2d) #13, !dbg !5721
  store i8 %16, ptr %_0, align 1, !dbg !5721
  br label %bb28, !dbg !5721

bb21:                                             ; preds = %bb17
  %17 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !5720
  %val = load i32, ptr %17, align 4, !dbg !5720
  store i32 %val, ptr %val.dbg.spill8, align 4, !dbg !5720
    #dbg_declare(ptr %val.dbg.spill8, !5683, !DIExpression(), !5722)
  store i8 1, ptr %_0, align 1, !dbg !5723
  br label %bb28, !dbg !5713

bb7:                                              ; preds = %bb2
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = call i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbbe8a96f2b4d53E"(ptr align 4 @alloc_c664c756225ae3d8f5347bcf6795d969) #13, !dbg !5724
  store i8 %18, ptr %_0, align 1, !dbg !5724
  br label %bb28, !dbg !5724

bb6:                                              ; preds = %bb2
  %19 = load i8, ptr %open, align 1, !dbg !5725
  %_9 = trunc nuw i8 %19 to i1, !dbg !5725
  %20 = zext i1 %_9 to i8, !dbg !5726
  store i8 %20, ptr %_0, align 1, !dbg !5726
  br label %bb28, !dbg !5727

bb5:                                              ; No predecessors!
  unreachable, !dbg !5728
}

; rustc_demangle::v0::Printer::print_path_maybe_open_generics::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics28_$u7b$$u7b$closure$u7d$$u7d$17h54216aea32251b5bE"(ptr align 1 %_1, ptr align 4 %this) unnamed_addr #0 !dbg !5730 {
start:
  %val.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %this.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !5735, !DIExpression(DW_OP_deref), !5740)
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !5734, !DIExpression(), !5741)
    #dbg_declare(ptr %residual.dbg.spill, !5736, !DIExpression(), !5742)
; call rustc_demangle::v0::Printer::print_path_maybe_open_generics
  %_4 = call i8 @_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hdc3fa7ba7071b4caE(ptr align 4 %this) #13, !dbg !5743
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %0 = call i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4bbc9c93858d8ae3E"(i8 %_4) #13, !dbg !5744
  store i8 %0, ptr %_3, align 1, !dbg !5744
  %1 = load i8, ptr %_3, align 1, !dbg !5744
  %2 = icmp eq i8 %1, 2, !dbg !5744
  %_5 = select i1 %2, i32 1, i32 0, !dbg !5744
  %3 = trunc nuw i32 %_5 to i1, !dbg !5744
  br i1 %3, label %bb5, label %bb4, !dbg !5744

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %4 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_7512957e5d06f03091064f9c5279a4ac) #13, !dbg !5745
  %5 = zext i1 %4 to i8, !dbg !5745
  store i8 %5, ptr %_0, align 1, !dbg !5745
  br label %bb6, !dbg !5745

bb4:                                              ; preds = %start
  %6 = load i8, ptr %_3, align 1, !dbg !5744
  %val = trunc nuw i8 %6 to i1, !dbg !5744
  %7 = zext i1 %val to i8, !dbg !5744
  store i8 %7, ptr %val.dbg.spill, align 1, !dbg !5744
    #dbg_declare(ptr %val.dbg.spill, !5738, !DIExpression(), !5746)
  %8 = zext i1 %val to i8, !dbg !5747
  store i8 %8, ptr %_1, align 1, !dbg !5747
  store i8 0, ptr %_0, align 1, !dbg !5748
  br label %bb6, !dbg !5749

bb6:                                              ; preds = %bb5, %bb4
  %9 = load i8, ptr %_0, align 1, !dbg !5749
  %10 = trunc nuw i8 %9 to i1, !dbg !5749
  ret i1 %10, !dbg !5749

bb3:                                              ; No predecessors!
  unreachable, !dbg !5744
}

; rustc_demangle::v0::Printer::eat
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 %0) unnamed_addr #1 !dbg !5750 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  %b = alloca [1 x i8], align 1
  store i8 %0, ptr %b, align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5755, !DIExpression(), !5757)
    #dbg_declare(ptr %b, !5756, !DIExpression(), !5758)
; call core::result::Result<T,E>::as_mut
  %1 = call { i32, ptr } @"_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17h801a85e9aa54c889E"(ptr align 4 %self) #13, !dbg !5759
  %_5.0 = extractvalue { i32, ptr } %1, 0, !dbg !5759
  %_5.1 = extractvalue { i32, ptr } %1, 1, !dbg !5759
; call core::result::Result<T,E>::map
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hbebfe392bb886fbcE"(ptr sret([8 x i8]) align 4 %_4, i32 %_5.0, ptr %_5.1, ptr align 1 %b) #13, !dbg !5760
; call <core::result::Result<T,E> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN74_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d07ca84956e9dfaE"(ptr align 4 %_4, ptr align 4 @alloc_32c81a225f4c778cd7b459aa85f3f404) #13, !dbg !5761
  ret i1 %_0, !dbg !5762
}

; rustc_demangle::v0::Printer::eat::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v07Printer3eat28_$u7b$$u7b$closure$u7d$$u7d$17h1c94e0b0cbbd40e4E"(ptr align 1 %_1, ptr align 4 %p) unnamed_addr #0 !dbg !5763 {
start:
  %p.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !5772, !DIExpression(DW_OP_deref), !5773)
  store ptr %p, ptr %p.dbg.spill, align 4
    #dbg_declare(ptr %p.dbg.spill, !5771, !DIExpression(), !5774)
  %_3 = load i8, ptr %_1, align 1, !dbg !5775
; call rustc_demangle::v0::Parser::eat
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E(ptr align 4 %p, i8 %_3) #13, !dbg !5776
  ret i1 %_0, !dbg !5777
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17h755367634094e4b9E(ptr align 4 %self, i64 %0) unnamed_addr #1 !dbg !5778 {
start:
  %out.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %x = alloca [8 x i8], align 8
  store i64 %0, ptr %x, align 8
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5783, !DIExpression(), !5791)
    #dbg_declare(ptr %x, !5784, !DIExpression(), !5792)
    #dbg_declare(ptr %residual.dbg.spill, !5787, !DIExpression(), !5793)
    #dbg_declare(ptr %val.dbg.spill, !5789, !DIExpression(), !5794)
  %_3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5795
  %1 = load ptr, ptr %_3, align 4, !dbg !5795
  %2 = ptrtoint ptr %1 to i32, !dbg !5795
  %3 = icmp eq i32 %2, 0, !dbg !5795
  %_4 = select i1 %3, i32 0, i32 1, !dbg !5795
  %4 = trunc nuw i32 %_4 to i1, !dbg !5796
  br i1 %4, label %bb1, label %bb7, !dbg !5796

bb1:                                              ; preds = %start
  store ptr %_3, ptr %out.dbg.spill, align 4, !dbg !5797
    #dbg_declare(ptr %out.dbg.spill, !5785, !DIExpression(), !5797)
  %_10 = load ptr, ptr %_3, align 4, !dbg !5798
; call core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
  %_7 = call zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h1e0156a411964040E"(ptr align 8 %x, ptr align 4 %_10) #13, !dbg !5799
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_6 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_7) #13, !dbg !5799
  %_9 = zext i1 %_6 to i32, !dbg !5799
  %5 = trunc nuw i32 %_9 to i1, !dbg !5799
  br i1 %5, label %bb5, label %bb7, !dbg !5799

bb7:                                              ; preds = %bb1, %start
  store i8 0, ptr %_0, align 1, !dbg !5800
  br label %bb8, !dbg !5801

bb5:                                              ; preds = %bb1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6b0297d86dedee56dc675ddc1c167c55) #13, !dbg !5802
  %7 = zext i1 %6 to i8, !dbg !5802
  store i8 %7, ptr %_0, align 1, !dbg !5802
  br label %bb8, !dbg !5801

bb8:                                              ; preds = %bb7, %bb5
  %8 = load i8, ptr %_0, align 1, !dbg !5803
  %9 = trunc nuw i8 %8 to i1, !dbg !5803
  ret i1 %9, !dbg !5803

bb4:                                              ; No predecessors!
  unreachable, !dbg !5799
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %0, i32 %1) unnamed_addr #1 !dbg !5804 {
start:
  %out.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %x = alloca [8 x i8], align 4
  store ptr %0, ptr %x, align 4
  %2 = getelementptr inbounds i8, ptr %x, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5811, !DIExpression(), !5819)
    #dbg_declare(ptr %x, !5812, !DIExpression(), !5820)
    #dbg_declare(ptr %residual.dbg.spill, !5815, !DIExpression(), !5821)
    #dbg_declare(ptr %val.dbg.spill, !5817, !DIExpression(), !5822)
  %_3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5823
  %3 = load ptr, ptr %_3, align 4, !dbg !5823
  %4 = ptrtoint ptr %3 to i32, !dbg !5823
  %5 = icmp eq i32 %4, 0, !dbg !5823
  %_4 = select i1 %5, i32 0, i32 1, !dbg !5823
  %6 = trunc nuw i32 %_4 to i1, !dbg !5824
  br i1 %6, label %bb1, label %bb7, !dbg !5824

bb1:                                              ; preds = %start
  store ptr %_3, ptr %out.dbg.spill, align 4, !dbg !5825
    #dbg_declare(ptr %out.dbg.spill, !5813, !DIExpression(), !5825)
  %_10 = load ptr, ptr %_3, align 4, !dbg !5826
; call <&T as core::fmt::Display>::fmt
  %_7 = call zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0d6be1c96a81b327E"(ptr align 4 %x, ptr align 4 %_10) #13, !dbg !5827
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_6 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_7) #13, !dbg !5827
  %_9 = zext i1 %_6 to i32, !dbg !5827
  %7 = trunc nuw i32 %_9 to i1, !dbg !5827
  br i1 %7, label %bb5, label %bb7, !dbg !5827

bb7:                                              ; preds = %bb1, %start
  store i8 0, ptr %_0, align 1, !dbg !5828
  br label %bb8, !dbg !5829

bb5:                                              ; preds = %bb1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6b0297d86dedee56dc675ddc1c167c55) #13, !dbg !5830
  %9 = zext i1 %8 to i8, !dbg !5830
  store i8 %9, ptr %_0, align 1, !dbg !5830
  br label %bb8, !dbg !5829

bb8:                                              ; preds = %bb7, %bb5
  %10 = load i8, ptr %_0, align 1, !dbg !5831
  %11 = trunc nuw i8 %10 to i1, !dbg !5831
  ret i1 %11, !dbg !5831

bb4:                                              ; No predecessors!
  unreachable, !dbg !5827
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hd09854794c0a73edE(ptr align 4 %self, i32 %0) unnamed_addr #1 !dbg !5832 {
start:
  %out.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %x = alloca [4 x i8], align 4
  store i32 %0, ptr %x, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5839, !DIExpression(), !5847)
    #dbg_declare(ptr %x, !5840, !DIExpression(), !5848)
    #dbg_declare(ptr %residual.dbg.spill, !5843, !DIExpression(), !5849)
    #dbg_declare(ptr %val.dbg.spill, !5845, !DIExpression(), !5850)
  %_3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5851
  %1 = load ptr, ptr %_3, align 4, !dbg !5851
  %2 = ptrtoint ptr %1 to i32, !dbg !5851
  %3 = icmp eq i32 %2, 0, !dbg !5851
  %_4 = select i1 %3, i32 0, i32 1, !dbg !5851
  %4 = trunc nuw i32 %_4 to i1, !dbg !5852
  br i1 %4, label %bb1, label %bb7, !dbg !5852

bb1:                                              ; preds = %start
  store ptr %_3, ptr %out.dbg.spill, align 4, !dbg !5853
    #dbg_declare(ptr %out.dbg.spill, !5841, !DIExpression(), !5853)
  %_10 = load ptr, ptr %_3, align 4, !dbg !5854
; call <char as core::fmt::Display>::fmt
  %_7 = call zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17he0e2483a667679bfE"(ptr align 4 %x, ptr align 4 %_10) #13, !dbg !5855
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_6 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_7) #13, !dbg !5855
  %_9 = zext i1 %_6 to i32, !dbg !5855
  %5 = trunc nuw i32 %_9 to i1, !dbg !5855
  br i1 %5, label %bb5, label %bb7, !dbg !5855

bb7:                                              ; preds = %bb1, %start
  store i8 0, ptr %_0, align 1, !dbg !5856
  br label %bb8, !dbg !5857

bb5:                                              ; preds = %bb1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %6 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6b0297d86dedee56dc675ddc1c167c55) #13, !dbg !5858
  %7 = zext i1 %6 to i8, !dbg !5858
  store i8 %7, ptr %_0, align 1, !dbg !5858
  br label %bb8, !dbg !5857

bb8:                                              ; preds = %bb7, %bb5
  %8 = load i8, ptr %_0, align 1, !dbg !5859
  %9 = trunc nuw i8 %8 to i1, !dbg !5859
  ret i1 %9, !dbg !5859

bb4:                                              ; No predecessors!
  unreachable, !dbg !5855
}

; rustc_demangle::v0::Printer::print
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE(ptr align 4 %self, ptr align 4 %x) unnamed_addr #1 !dbg !5860 {
start:
  %out.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5867, !DIExpression(), !5875)
    #dbg_declare(ptr %x, !5868, !DIExpression(), !5876)
    #dbg_declare(ptr %residual.dbg.spill, !5871, !DIExpression(), !5877)
    #dbg_declare(ptr %val.dbg.spill, !5873, !DIExpression(), !5878)
  %_3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5879
  %0 = load ptr, ptr %_3, align 4, !dbg !5879
  %1 = ptrtoint ptr %0 to i32, !dbg !5879
  %2 = icmp eq i32 %1, 0, !dbg !5879
  %_4 = select i1 %2, i32 0, i32 1, !dbg !5879
  %3 = trunc nuw i32 %_4 to i1, !dbg !5880
  br i1 %3, label %bb1, label %bb7, !dbg !5880

bb1:                                              ; preds = %start
  store ptr %_3, ptr %out.dbg.spill, align 4, !dbg !5881
    #dbg_declare(ptr %out.dbg.spill, !5869, !DIExpression(), !5881)
  %_10 = load ptr, ptr %_3, align 4, !dbg !5882
; call <rustc_demangle::v0::Ident as core::fmt::Display>::fmt
  %_7 = call zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h20c03d2c4c158525E"(ptr align 4 %x, ptr align 4 %_10) #13, !dbg !5883
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_6 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_7) #13, !dbg !5883
  %_9 = zext i1 %_6 to i32, !dbg !5883
  %4 = trunc nuw i32 %_9 to i1, !dbg !5883
  br i1 %4, label %bb5, label %bb7, !dbg !5883

bb7:                                              ; preds = %bb1, %start
  store i8 0, ptr %_0, align 1, !dbg !5884
  br label %bb8, !dbg !5885

bb5:                                              ; preds = %bb1
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %5 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6b0297d86dedee56dc675ddc1c167c55) #13, !dbg !5886
  %6 = zext i1 %5 to i8, !dbg !5886
  store i8 %6, ptr %_0, align 1, !dbg !5886
  br label %bb8, !dbg !5885

bb8:                                              ; preds = %bb7, %bb5
  %7 = load i8, ptr %_0, align 1, !dbg !5887
  %8 = trunc nuw i8 %7 to i1, !dbg !5887
  ret i1 %8, !dbg !5887

bb4:                                              ; No predecessors!
  unreachable, !dbg !5883
}

; rustc_demangle::v0::Printer::in_binder
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17h4730f4302cbba6d1E(ptr align 4 %self) unnamed_addr #1 !dbg !5888 {
start:
  %i.dbg.spill = alloca [8 x i8], align 8
  %r.dbg.spill = alloca [1 x i8], align 1
  %0 = alloca [16 x i8], align 8
  %bound_lifetimes.dbg.spill = alloca [8 x i8], align 8
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill8 = alloca [0 x i8], align 1
  %residual.dbg.spill7 = alloca [0 x i8], align 1
  %val.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_46 = alloca [1 x i8], align 1
  %_26 = alloca [16 x i8], align 8
  %iter = alloca [16 x i8], align 8
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5895, !DIExpression(), !5937)
    #dbg_declare(ptr %f.dbg.spill, !5896, !DIExpression(), !5938)
    #dbg_declare(ptr %err, !5903, !DIExpression(), !5939)
    #dbg_declare(ptr %iter, !5913, !DIExpression(), !5940)
    #dbg_declare(ptr %residual.dbg.spill, !5905, !DIExpression(), !5941)
    #dbg_declare(ptr %val.dbg.spill, !5907, !DIExpression(), !5942)
    #dbg_declare(ptr %residual.dbg.spill1, !5909, !DIExpression(), !5943)
    #dbg_declare(ptr %val.dbg.spill2, !5911, !DIExpression(), !5944)
    #dbg_declare(ptr %residual.dbg.spill3, !5923, !DIExpression(), !5945)
    #dbg_declare(ptr %val.dbg.spill4, !5925, !DIExpression(), !5946)
    #dbg_declare(ptr %residual.dbg.spill5, !5927, !DIExpression(), !5947)
    #dbg_declare(ptr %val.dbg.spill6, !5929, !DIExpression(), !5948)
    #dbg_declare(ptr %residual.dbg.spill7, !5931, !DIExpression(), !5949)
    #dbg_declare(ptr %val.dbg.spill8, !5933, !DIExpression(), !5950)
  store i8 0, ptr %_46, align 1, !dbg !5951
  store i8 1, ptr %_46, align 1, !dbg !5951
  %1 = load ptr, ptr %self, align 4, !dbg !5952
  %2 = ptrtoint ptr %1 to i32, !dbg !5952
  %3 = icmp eq i32 %2, 0, !dbg !5952
  %_3 = select i1 %3, i32 1, i32 0, !dbg !5952
  %4 = trunc nuw i32 %_3 to i1, !dbg !5953
  br i1 %4, label %bb2, label %bb3, !dbg !5953

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %5 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !5954
  %6 = zext i1 %5 to i8, !dbg !5954
  store i8 %6, ptr %_0, align 1, !dbg !5954
  br label %bb40, !dbg !5954

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !5955
    #dbg_declare(ptr %parser.dbg.spill, !5899, !DIExpression(), !5956)
; call rustc_demangle::v0::Parser::opt_integer_62
  call void @_ZN14rustc_demangle2v06Parser14opt_integer_6217hc782639caf15959dE(ptr sret([16 x i8]) align 8 %_5, ptr align 4 %self, i8 71) #13, !dbg !5957
  %7 = load i8, ptr %_5, align 8, !dbg !5958
  %8 = trunc nuw i8 %7 to i1, !dbg !5958
  %_6 = zext i1 %8 to i32, !dbg !5958
  %9 = trunc nuw i32 %_6 to i1, !dbg !5959
  br i1 %9, label %bb5, label %bb6, !dbg !5959

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !5960
  %11 = load i8, ptr %10, align 1, !dbg !5960
  %12 = trunc nuw i8 %11 to i1, !dbg !5960
  %13 = zext i1 %12 to i8, !dbg !5960
  store i8 %13, ptr %err, align 1, !dbg !5960
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !5961
  %_11.0 = extractvalue { ptr, i32 } %14, 0, !dbg !5961
  %_11.1 = extractvalue { ptr, i32 } %14, 1, !dbg !5961
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !5962
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !5963
  %_13 = zext i1 %_9 to i32, !dbg !5963
  %15 = trunc nuw i32 %_13 to i1, !dbg !5963
  br i1 %15, label %bb11, label %bb10, !dbg !5963

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !5964
  %bound_lifetimes = load i64, ptr %16, align 8, !dbg !5964
  store i64 %bound_lifetimes, ptr %bound_lifetimes.dbg.spill, align 8, !dbg !5964
    #dbg_declare(ptr %bound_lifetimes.dbg.spill, !5897, !DIExpression(), !5965)
    #dbg_declare(ptr %bound_lifetimes.dbg.spill, !5901, !DIExpression(), !5966)
  %_16 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !5967
; call core::option::Option<T>::is_none
  %_15 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %_16) #13, !dbg !5968
  br i1 %_15, label %bb13, label %bb14, !dbg !5967

bb14:                                             ; preds = %bb6
  %_19 = icmp ugt i64 %bound_lifetimes, 0, !dbg !5969
  br i1 %_19, label %bb15, label %bb37, !dbg !5969

bb13:                                             ; preds = %bb6
  store i8 0, ptr %_46, align 1, !dbg !5970
; call rustc_demangle::v0::Printer::print_type::{{closure}}
  %17 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h220257e452c6950fE"(ptr align 4 %self) #13, !dbg !5970
  %18 = zext i1 %17 to i8, !dbg !5970
  store i8 %18, ptr %_0, align 1, !dbg !5970
  br label %bb40, !dbg !5970

bb37:                                             ; preds = %bb24, %bb14
  store i8 0, ptr %_46, align 1, !dbg !5971
; call rustc_demangle::v0::Printer::print_type::{{closure}}
  %r = call zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h220257e452c6950fE"(ptr align 4 %self) #13, !dbg !5971
  %19 = zext i1 %r to i8, !dbg !5971
  store i8 %19, ptr %r.dbg.spill, align 1, !dbg !5971
    #dbg_declare(ptr %r.dbg.spill, !5935, !DIExpression(), !5972)
  %_44 = trunc i64 %bound_lifetimes to i32, !dbg !5973
  %20 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !5974
  %21 = load i32, ptr %20, align 4, !dbg !5974
  %_45.0 = sub i32 %21, %_44, !dbg !5974
  %_45.1 = icmp ult i32 %21, %_44, !dbg !5974
  br i1 %_45.1, label %panic, label %bb39, !dbg !5974

bb15:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print
  %_21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_5f65a5d2b17800803b9d5ec1af97e3ca, i32 4) #13, !dbg !5975
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_21) #13, !dbg !5976
  %_22 = zext i1 %_20 to i32, !dbg !5976
  %22 = trunc nuw i32 %_22 to i1, !dbg !5976
  br i1 %22, label %bb19, label %bb18, !dbg !5976

bb19:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %23 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b5d7db497ee4d9db0f3cecd866f73538) #13, !dbg !5977
  %24 = zext i1 %23 to i8, !dbg !5977
  store i8 %24, ptr %_0, align 1, !dbg !5977
  br label %bb40, !dbg !5977

bb18:                                             ; preds = %bb15
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfb0e42ba33413543E"(ptr sret([16 x i8]) align 8 %0, i64 0, i64 %bound_lifetimes) #13, !dbg !5978
  %_23.0 = load i64, ptr %0, align 8, !dbg !5978
  %25 = getelementptr inbounds i8, ptr %0, i32 8, !dbg !5978
  %_23.1 = load i64, ptr %25, align 8, !dbg !5978
  store i64 %_23.0, ptr %iter, align 8, !dbg !5978
  %26 = getelementptr inbounds i8, ptr %iter, i32 8, !dbg !5978
  store i64 %_23.1, ptr %26, align 8, !dbg !5978
  br label %bb21, !dbg !5979

bb21:                                             ; preds = %bb30, %bb18
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  call void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5870ab742149e2dbE"(ptr sret([16 x i8]) align 8 %_26, ptr align 8 %iter) #13, !dbg !5940
  %27 = load i64, ptr %_26, align 8, !dbg !5940
  %28 = getelementptr inbounds i8, ptr %_26, i32 8, !dbg !5940
  %29 = load i64, ptr %28, align 8, !dbg !5940
  %_28 = trunc i64 %27 to i32, !dbg !5940
  %30 = trunc nuw i32 %_28 to i1, !dbg !5940
  br i1 %30, label %bb23, label %bb24, !dbg !5940

bb23:                                             ; preds = %bb21
  %31 = getelementptr inbounds i8, ptr %_26, i32 8, !dbg !5980
  %i = load i64, ptr %31, align 8, !dbg !5980
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !5980
    #dbg_declare(ptr %i.dbg.spill, !5921, !DIExpression(), !5981)
  %_30 = icmp ugt i64 %i, 0, !dbg !5982
  br i1 %_30, label %bb25, label %bb29, !dbg !5982

bb24:                                             ; preds = %bb21
; call rustc_demangle::v0::Printer::print
  %_39 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_497bf069984d9b51728086bf7474a8fe, i32 2) #13, !dbg !5983
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_38 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_39) #13, !dbg !5984
  %_40 = zext i1 %_38 to i32, !dbg !5984
  %32 = trunc nuw i32 %_40 to i1, !dbg !5984
  br i1 %32, label %bb36, label %bb37, !dbg !5984

bb36:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9cdd1cc3dda8aa93c7dd217081de8134) #13, !dbg !5985
  %34 = zext i1 %33 to i8, !dbg !5985
  store i8 %34, ptr %_0, align 1, !dbg !5985
  br label %bb40, !dbg !5985

bb39:                                             ; preds = %bb37
  %35 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !5974
  store i32 %_45.0, ptr %35, align 4, !dbg !5974
  %36 = zext i1 %r to i8, !dbg !5986
  store i8 %36, ptr %_0, align 1, !dbg !5986
  br label %bb41, !dbg !5987

panic:                                            ; preds = %bb37
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_ab7d4a10450dd9ba7763905add1e6f09) #14, !dbg !5974
  unreachable, !dbg !5974

bb41:                                             ; preds = %bb42, %bb40, %bb39
  %37 = load i8, ptr %_0, align 1, !dbg !5988
  %38 = trunc nuw i8 %37 to i1, !dbg !5988
  ret i1 %38, !dbg !5988

bb40:                                             ; preds = %bb2, %bb11, %bb10, %bb13, %bb19, %bb28, %bb33, %bb36
  %39 = load i8, ptr %_46, align 1, !dbg !5987
  %40 = trunc nuw i8 %39 to i1, !dbg !5987
  br i1 %40, label %bb42, label %bb41, !dbg !5987

bb29:                                             ; preds = %bb25, %bb23
  %41 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !5989
  %42 = load i32, ptr %41, align 4, !dbg !5989
  %_34.0 = add i32 %42, 1, !dbg !5989
  %_34.1 = icmp ult i32 %_34.0, %42, !dbg !5989
  br i1 %_34.1, label %panic9, label %bb30, !dbg !5989

bb25:                                             ; preds = %bb23
; call rustc_demangle::v0::Printer::print
  %_32 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !5990
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_31 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_32) #13, !dbg !5991
  %_33 = zext i1 %_31 to i32, !dbg !5991
  %43 = trunc nuw i32 %_33 to i1, !dbg !5991
  br i1 %43, label %bb28, label %bb29, !dbg !5991

bb28:                                             ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %44 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a70ce0616d863679e312694c1453caee) #13, !dbg !5992
  %45 = zext i1 %44 to i8, !dbg !5992
  store i8 %45, ptr %_0, align 1, !dbg !5992
  br label %bb40, !dbg !5992

bb30:                                             ; preds = %bb29
  %46 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !5989
  store i32 %_34.0, ptr %46, align 4, !dbg !5989
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %_36 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E(ptr align 4 %self, i64 1) #13, !dbg !5993
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_35 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_36) #13, !dbg !5994
  %_37 = zext i1 %_35 to i32, !dbg !5994
  %47 = trunc nuw i32 %_37 to i1, !dbg !5994
  br i1 %47, label %bb33, label %bb21, !dbg !5994

panic9:                                           ; preds = %bb29
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_712e938276eb7b48a1507ff28da7bde9) #14, !dbg !5989
  unreachable, !dbg !5989

bb33:                                             ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %48 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ad537110394614bd422e49669e65f03c) #13, !dbg !5995
  %49 = zext i1 %48 to i8, !dbg !5995
  store i8 %49, ptr %_0, align 1, !dbg !5995
  br label %bb40, !dbg !5995

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %50 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_66c284d3ccc1ae2f2d939ab55a7f8621) #13, !dbg !5996
  %51 = zext i1 %50 to i8, !dbg !5996
  store i8 %51, ptr %_0, align 1, !dbg !5996
  br label %bb40, !dbg !5996

bb10:                                             ; preds = %bb5
  %52 = load i8, ptr %err, align 1, !dbg !5997
  %53 = trunc nuw i8 %52 to i1, !dbg !5997
  %54 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !5997
  %55 = zext i1 %53 to i8, !dbg !5997
  store i8 %55, ptr %54, align 4, !dbg !5997
  store ptr null, ptr %_14, align 4, !dbg !5997
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !5998
  store i8 0, ptr %_0, align 1, !dbg !5999
  br label %bb40, !dbg !6000

bb42:                                             ; preds = %bb40
  br label %bb41, !dbg !5987

bb1:                                              ; No predecessors!
  unreachable, !dbg !6001
}

; rustc_demangle::v0::Printer::in_binder
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer9in_binder17hb1022bb763a81b78E(ptr align 4 %self) unnamed_addr #1 !dbg !6003 {
start:
  %i.dbg.spill = alloca [8 x i8], align 8
  %r.dbg.spill = alloca [1 x i8], align 1
  %0 = alloca [16 x i8], align 8
  %bound_lifetimes.dbg.spill = alloca [8 x i8], align 8
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill8 = alloca [0 x i8], align 1
  %residual.dbg.spill7 = alloca [0 x i8], align 1
  %val.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_46 = alloca [1 x i8], align 1
  %_26 = alloca [16 x i8], align 8
  %iter = alloca [16 x i8], align 8
  %_14 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_5 = alloca [16 x i8], align 8
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6010, !DIExpression(), !6046)
    #dbg_declare(ptr %f.dbg.spill, !6011, !DIExpression(), !6047)
    #dbg_declare(ptr %err, !6018, !DIExpression(), !6048)
    #dbg_declare(ptr %iter, !6028, !DIExpression(), !6049)
    #dbg_declare(ptr %residual.dbg.spill, !6020, !DIExpression(), !6050)
    #dbg_declare(ptr %val.dbg.spill, !6022, !DIExpression(), !6051)
    #dbg_declare(ptr %residual.dbg.spill1, !6024, !DIExpression(), !6052)
    #dbg_declare(ptr %val.dbg.spill2, !6026, !DIExpression(), !6053)
    #dbg_declare(ptr %residual.dbg.spill3, !6032, !DIExpression(), !6054)
    #dbg_declare(ptr %val.dbg.spill4, !6034, !DIExpression(), !6055)
    #dbg_declare(ptr %residual.dbg.spill5, !6036, !DIExpression(), !6056)
    #dbg_declare(ptr %val.dbg.spill6, !6038, !DIExpression(), !6057)
    #dbg_declare(ptr %residual.dbg.spill7, !6040, !DIExpression(), !6058)
    #dbg_declare(ptr %val.dbg.spill8, !6042, !DIExpression(), !6059)
  store i8 0, ptr %_46, align 1, !dbg !6060
  store i8 1, ptr %_46, align 1, !dbg !6060
  %1 = load ptr, ptr %self, align 4, !dbg !6061
  %2 = ptrtoint ptr %1 to i32, !dbg !6061
  %3 = icmp eq i32 %2, 0, !dbg !6061
  %_3 = select i1 %3, i32 1, i32 0, !dbg !6061
  %4 = trunc nuw i32 %_3 to i1, !dbg !6062
  br i1 %4, label %bb2, label %bb3, !dbg !6062

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %5 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !6063
  %6 = zext i1 %5 to i8, !dbg !6063
  store i8 %6, ptr %_0, align 1, !dbg !6063
  br label %bb40, !dbg !6063

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !6064
    #dbg_declare(ptr %parser.dbg.spill, !6014, !DIExpression(), !6065)
; call rustc_demangle::v0::Parser::opt_integer_62
  call void @_ZN14rustc_demangle2v06Parser14opt_integer_6217hc782639caf15959dE(ptr sret([16 x i8]) align 8 %_5, ptr align 4 %self, i8 71) #13, !dbg !6066
  %7 = load i8, ptr %_5, align 8, !dbg !6067
  %8 = trunc nuw i8 %7 to i1, !dbg !6067
  %_6 = zext i1 %8 to i32, !dbg !6067
  %9 = trunc nuw i32 %_6 to i1, !dbg !6068
  br i1 %9, label %bb5, label %bb6, !dbg !6068

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %_5, i32 1, !dbg !6069
  %11 = load i8, ptr %10, align 1, !dbg !6069
  %12 = trunc nuw i8 %11 to i1, !dbg !6069
  %13 = zext i1 %12 to i8, !dbg !6069
  store i8 %13, ptr %err, align 1, !dbg !6069
; call rustc_demangle::v0::ParseError::message
  %14 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !6070
  %_11.0 = extractvalue { ptr, i32 } %14, 0, !dbg !6070
  %_11.1 = extractvalue { ptr, i32 } %14, 1, !dbg !6070
; call rustc_demangle::v0::Printer::print
  %_10 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !6071
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !6072
  %_13 = zext i1 %_9 to i32, !dbg !6072
  %15 = trunc nuw i32 %_13 to i1, !dbg !6072
  br i1 %15, label %bb11, label %bb10, !dbg !6072

bb6:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !6073
  %bound_lifetimes = load i64, ptr %16, align 8, !dbg !6073
  store i64 %bound_lifetimes, ptr %bound_lifetimes.dbg.spill, align 8, !dbg !6073
    #dbg_declare(ptr %bound_lifetimes.dbg.spill, !6012, !DIExpression(), !6074)
    #dbg_declare(ptr %bound_lifetimes.dbg.spill, !6016, !DIExpression(), !6075)
  %_16 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !6076
; call core::option::Option<T>::is_none
  %_15 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %_16) #13, !dbg !6077
  br i1 %_15, label %bb13, label %bb14, !dbg !6076

bb14:                                             ; preds = %bb6
  %_19 = icmp ugt i64 %bound_lifetimes, 0, !dbg !6078
  br i1 %_19, label %bb15, label %bb37, !dbg !6078

bb13:                                             ; preds = %bb6
  store i8 0, ptr %_46, align 1, !dbg !6079
; call rustc_demangle::v0::Printer::print_type::{{closure}}
  %17 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h6f6409beafbd7d6dE"(ptr align 4 %self) #13, !dbg !6079
  %18 = zext i1 %17 to i8, !dbg !6079
  store i8 %18, ptr %_0, align 1, !dbg !6079
  br label %bb40, !dbg !6079

bb37:                                             ; preds = %bb24, %bb14
  store i8 0, ptr %_46, align 1, !dbg !6080
; call rustc_demangle::v0::Printer::print_type::{{closure}}
  %r = call zeroext i1 @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h6f6409beafbd7d6dE"(ptr align 4 %self) #13, !dbg !6080
  %19 = zext i1 %r to i8, !dbg !6080
  store i8 %19, ptr %r.dbg.spill, align 1, !dbg !6080
    #dbg_declare(ptr %r.dbg.spill, !6044, !DIExpression(), !6081)
  %_44 = trunc i64 %bound_lifetimes to i32, !dbg !6082
  %20 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !6083
  %21 = load i32, ptr %20, align 4, !dbg !6083
  %_45.0 = sub i32 %21, %_44, !dbg !6083
  %_45.1 = icmp ult i32 %21, %_44, !dbg !6083
  br i1 %_45.1, label %panic, label %bb39, !dbg !6083

bb15:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print
  %_21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_5f65a5d2b17800803b9d5ec1af97e3ca, i32 4) #13, !dbg !6084
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_21) #13, !dbg !6085
  %_22 = zext i1 %_20 to i32, !dbg !6085
  %22 = trunc nuw i32 %_22 to i1, !dbg !6085
  br i1 %22, label %bb19, label %bb18, !dbg !6085

bb19:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %23 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_b5d7db497ee4d9db0f3cecd866f73538) #13, !dbg !6086
  %24 = zext i1 %23 to i8, !dbg !6086
  store i8 %24, ptr %_0, align 1, !dbg !6086
  br label %bb40, !dbg !6086

bb18:                                             ; preds = %bb15
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfb0e42ba33413543E"(ptr sret([16 x i8]) align 8 %0, i64 0, i64 %bound_lifetimes) #13, !dbg !6087
  %_23.0 = load i64, ptr %0, align 8, !dbg !6087
  %25 = getelementptr inbounds i8, ptr %0, i32 8, !dbg !6087
  %_23.1 = load i64, ptr %25, align 8, !dbg !6087
  store i64 %_23.0, ptr %iter, align 8, !dbg !6087
  %26 = getelementptr inbounds i8, ptr %iter, i32 8, !dbg !6087
  store i64 %_23.1, ptr %26, align 8, !dbg !6087
  br label %bb21, !dbg !6088

bb21:                                             ; preds = %bb30, %bb18
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  call void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5870ab742149e2dbE"(ptr sret([16 x i8]) align 8 %_26, ptr align 8 %iter) #13, !dbg !6049
  %27 = load i64, ptr %_26, align 8, !dbg !6049
  %28 = getelementptr inbounds i8, ptr %_26, i32 8, !dbg !6049
  %29 = load i64, ptr %28, align 8, !dbg !6049
  %_28 = trunc i64 %27 to i32, !dbg !6049
  %30 = trunc nuw i32 %_28 to i1, !dbg !6049
  br i1 %30, label %bb23, label %bb24, !dbg !6049

bb23:                                             ; preds = %bb21
  %31 = getelementptr inbounds i8, ptr %_26, i32 8, !dbg !6089
  %i = load i64, ptr %31, align 8, !dbg !6089
  store i64 %i, ptr %i.dbg.spill, align 8, !dbg !6089
    #dbg_declare(ptr %i.dbg.spill, !6030, !DIExpression(), !6090)
  %_30 = icmp ugt i64 %i, 0, !dbg !6091
  br i1 %_30, label %bb25, label %bb29, !dbg !6091

bb24:                                             ; preds = %bb21
; call rustc_demangle::v0::Printer::print
  %_39 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_497bf069984d9b51728086bf7474a8fe, i32 2) #13, !dbg !6092
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_38 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_39) #13, !dbg !6093
  %_40 = zext i1 %_38 to i32, !dbg !6093
  %32 = trunc nuw i32 %_40 to i1, !dbg !6093
  br i1 %32, label %bb36, label %bb37, !dbg !6093

bb36:                                             ; preds = %bb24
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %33 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_9cdd1cc3dda8aa93c7dd217081de8134) #13, !dbg !6094
  %34 = zext i1 %33 to i8, !dbg !6094
  store i8 %34, ptr %_0, align 1, !dbg !6094
  br label %bb40, !dbg !6094

bb39:                                             ; preds = %bb37
  %35 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !6083
  store i32 %_45.0, ptr %35, align 4, !dbg !6083
  %36 = zext i1 %r to i8, !dbg !6095
  store i8 %36, ptr %_0, align 1, !dbg !6095
  br label %bb41, !dbg !6096

panic:                                            ; preds = %bb37
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_ab7d4a10450dd9ba7763905add1e6f09) #14, !dbg !6083
  unreachable, !dbg !6083

bb41:                                             ; preds = %bb42, %bb40, %bb39
  %37 = load i8, ptr %_0, align 1, !dbg !6097
  %38 = trunc nuw i8 %37 to i1, !dbg !6097
  ret i1 %38, !dbg !6097

bb40:                                             ; preds = %bb2, %bb11, %bb10, %bb13, %bb19, %bb28, %bb33, %bb36
  %39 = load i8, ptr %_46, align 1, !dbg !6096
  %40 = trunc nuw i8 %39 to i1, !dbg !6096
  br i1 %40, label %bb42, label %bb41, !dbg !6096

bb29:                                             ; preds = %bb25, %bb23
  %41 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !6098
  %42 = load i32, ptr %41, align 4, !dbg !6098
  %_34.0 = add i32 %42, 1, !dbg !6098
  %_34.1 = icmp ult i32 %_34.0, %42, !dbg !6098
  br i1 %_34.1, label %panic9, label %bb30, !dbg !6098

bb25:                                             ; preds = %bb23
; call rustc_demangle::v0::Printer::print
  %_32 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_94b00be069aafad82a2c6df764237b82, i32 2) #13, !dbg !6099
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_31 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_32) #13, !dbg !6100
  %_33 = zext i1 %_31 to i32, !dbg !6100
  %43 = trunc nuw i32 %_33 to i1, !dbg !6100
  br i1 %43, label %bb28, label %bb29, !dbg !6100

bb28:                                             ; preds = %bb25
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %44 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_a70ce0616d863679e312694c1453caee) #13, !dbg !6101
  %45 = zext i1 %44 to i8, !dbg !6101
  store i8 %45, ptr %_0, align 1, !dbg !6101
  br label %bb40, !dbg !6101

bb30:                                             ; preds = %bb29
  %46 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !6098
  store i32 %_34.0, ptr %46, align 4, !dbg !6098
; call rustc_demangle::v0::Printer::print_lifetime_from_index
  %_36 = call zeroext i1 @_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E(ptr align 4 %self, i64 1) #13, !dbg !6102
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_35 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_36) #13, !dbg !6103
  %_37 = zext i1 %_35 to i32, !dbg !6103
  %47 = trunc nuw i32 %_37 to i1, !dbg !6103
  br i1 %47, label %bb33, label %bb21, !dbg !6103

panic9:                                           ; preds = %bb29
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_712e938276eb7b48a1507ff28da7bde9) #14, !dbg !6098
  unreachable, !dbg !6098

bb33:                                             ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %48 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ad537110394614bd422e49669e65f03c) #13, !dbg !6104
  %49 = zext i1 %48 to i8, !dbg !6104
  store i8 %49, ptr %_0, align 1, !dbg !6104
  br label %bb40, !dbg !6104

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %50 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_66c284d3ccc1ae2f2d939ab55a7f8621) #13, !dbg !6105
  %51 = zext i1 %50 to i8, !dbg !6105
  store i8 %51, ptr %_0, align 1, !dbg !6105
  br label %bb40, !dbg !6105

bb10:                                             ; preds = %bb5
  %52 = load i8, ptr %err, align 1, !dbg !6106
  %53 = trunc nuw i8 %52 to i1, !dbg !6106
  %54 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !6106
  %55 = zext i1 %53 to i8, !dbg !6106
  store i8 %55, ptr %54, align 4, !dbg !6106
  store ptr null, ptr %_14, align 4, !dbg !6106
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_14, i32 16, i1 false), !dbg !6107
  store i8 0, ptr %_0, align 1, !dbg !6108
  br label %bb40, !dbg !6109

bb42:                                             ; preds = %bb40
  br label %bb41, !dbg !6096

bb1:                                              ; No predecessors!
  unreachable, !dbg !6110
}

; rustc_demangle::v0::Printer::pop_depth
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v07Printer9pop_depth17ha25b3c4e0a438db8E(ptr align 4 %self) unnamed_addr #1 !dbg !6112 {
start:
  %parser.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6117, !DIExpression(), !6120)
  %0 = load ptr, ptr %self, align 4, !dbg !6121
  %1 = ptrtoint ptr %0 to i32, !dbg !6121
  %2 = icmp eq i32 %1, 0, !dbg !6121
  %_2 = select i1 %2, i32 1, i32 0, !dbg !6121
  %3 = trunc nuw i32 %_2 to i1, !dbg !6122
  br i1 %3, label %bb2, label %bb1, !dbg !6122

bb2:                                              ; preds = %bb1, %start
  ret void, !dbg !6123

bb1:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !6124
    #dbg_declare(ptr %parser.dbg.spill, !6118, !DIExpression(), !6124)
; call rustc_demangle::v0::Parser::pop_depth
  call void @_ZN14rustc_demangle2v06Parser9pop_depth17h8a2b94e2ef028f8dE(ptr align 4 %self) #13, !dbg !6125
  br label %bb2, !dbg !6125

bb3:                                              ; No predecessors!
  unreachable, !dbg !6126
}

; rustc_demangle::v0::Printer::print_pat
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle2v07Printer9print_pat17h18ec7f9bb765c837E(ptr align 4 %self) unnamed_addr #1 !dbg !6127 {
start:
  %parser.dbg.spill24 = alloca [4 x i8], align 4
  %tag.dbg.spill = alloca [1 x i8], align 1
  %parser.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill23 = alloca [0 x i8], align 1
  %residual.dbg.spill22 = alloca [0 x i8], align 1
  %val.dbg.spill21 = alloca [0 x i8], align 1
  %residual.dbg.spill20 = alloca [0 x i8], align 1
  %val.dbg.spill19 = alloca [0 x i8], align 1
  %residual.dbg.spill18 = alloca [0 x i8], align 1
  %val.dbg.spill17 = alloca [0 x i8], align 1
  %residual.dbg.spill16 = alloca [0 x i8], align 1
  %val.dbg.spill15 = alloca [0 x i8], align 1
  %residual.dbg.spill14 = alloca [0 x i8], align 1
  %val.dbg.spill13 = alloca [0 x i8], align 1
  %residual.dbg.spill12 = alloca [0 x i8], align 1
  %val.dbg.spill11 = alloca [0 x i8], align 1
  %residual.dbg.spill10 = alloca [0 x i8], align 1
  %x.dbg.spill = alloca [0 x i8], align 1
  %val.dbg.spill9 = alloca [0 x i8], align 1
  %residual.dbg.spill8 = alloca [0 x i8], align 1
  %val.dbg.spill7 = alloca [0 x i8], align 1
  %residual.dbg.spill6 = alloca [0 x i8], align 1
  %val.dbg.spill5 = alloca [0 x i8], align 1
  %residual.dbg.spill4 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_63 = alloca [16 x i8], align 4
  %err3 = alloca [1 x i8], align 1
  %_46 = alloca [16 x i8], align 4
  %err2 = alloca [1 x i8], align 1
  %_33 = alloca [16 x i8], align 4
  %err1 = alloca [1 x i8], align 1
  %_25 = alloca [1 x i8], align 1
  %_13 = alloca [16 x i8], align 4
  %err = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6130, !DIExpression(), !6193)
    #dbg_declare(ptr %err, !6137, !DIExpression(), !6194)
    #dbg_declare(ptr %err1, !6159, !DIExpression(), !6195)
    #dbg_declare(ptr %err2, !6169, !DIExpression(), !6196)
    #dbg_declare(ptr %err3, !6187, !DIExpression(), !6197)
    #dbg_declare(ptr %residual.dbg.spill, !6139, !DIExpression(), !6198)
    #dbg_declare(ptr %val.dbg.spill, !6141, !DIExpression(), !6199)
    #dbg_declare(ptr %residual.dbg.spill4, !6143, !DIExpression(), !6200)
    #dbg_declare(ptr %val.dbg.spill5, !6145, !DIExpression(), !6201)
    #dbg_declare(ptr %residual.dbg.spill6, !6147, !DIExpression(), !6202)
    #dbg_declare(ptr %val.dbg.spill7, !6149, !DIExpression(), !6203)
    #dbg_declare(ptr %residual.dbg.spill8, !6151, !DIExpression(), !6204)
    #dbg_declare(ptr %val.dbg.spill9, !6153, !DIExpression(), !6205)
    #dbg_declare(ptr %x.dbg.spill, !6157, !DIExpression(), !6206)
    #dbg_declare(ptr %residual.dbg.spill10, !6161, !DIExpression(), !6207)
    #dbg_declare(ptr %val.dbg.spill11, !6163, !DIExpression(), !6208)
    #dbg_declare(ptr %residual.dbg.spill12, !6165, !DIExpression(), !6209)
    #dbg_declare(ptr %val.dbg.spill13, !6167, !DIExpression(), !6210)
    #dbg_declare(ptr %residual.dbg.spill14, !6171, !DIExpression(), !6211)
    #dbg_declare(ptr %val.dbg.spill15, !6173, !DIExpression(), !6212)
    #dbg_declare(ptr %residual.dbg.spill16, !6175, !DIExpression(), !6213)
    #dbg_declare(ptr %val.dbg.spill17, !6177, !DIExpression(), !6214)
    #dbg_declare(ptr %residual.dbg.spill18, !6179, !DIExpression(), !6215)
    #dbg_declare(ptr %val.dbg.spill19, !6181, !DIExpression(), !6216)
    #dbg_declare(ptr %residual.dbg.spill20, !6183, !DIExpression(), !6217)
    #dbg_declare(ptr %val.dbg.spill21, !6185, !DIExpression(), !6218)
    #dbg_declare(ptr %residual.dbg.spill22, !6189, !DIExpression(), !6219)
    #dbg_declare(ptr %val.dbg.spill23, !6191, !DIExpression(), !6220)
  %0 = load ptr, ptr %self, align 4, !dbg !6221
  %1 = ptrtoint ptr %0 to i32, !dbg !6221
  %2 = icmp eq i32 %1, 0, !dbg !6221
  %_2 = select i1 %2, i32 1, i32 0, !dbg !6221
  %3 = trunc nuw i32 %_2 to i1, !dbg !6222
  br i1 %3, label %bb2, label %bb3, !dbg !6222

bb2:                                              ; preds = %start
; call rustc_demangle::v0::Printer::print
  %4 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !6223
  %5 = zext i1 %4 to i8, !dbg !6223
  store i8 %5, ptr %_0, align 1, !dbg !6223
  br label %bb68, !dbg !6223

bb3:                                              ; preds = %start
  store ptr %self, ptr %parser.dbg.spill, align 4, !dbg !6224
    #dbg_declare(ptr %parser.dbg.spill, !6133, !DIExpression(), !6225)
; call rustc_demangle::v0::Parser::next
  %6 = call { i1, i8 } @_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E(ptr align 4 %self) #13, !dbg !6226
  %7 = extractvalue { i1, i8 } %6, 0, !dbg !6226
  %8 = extractvalue { i1, i8 } %6, 1, !dbg !6226
  %9 = zext i1 %7 to i8, !dbg !6226
  store i8 %9, ptr %_4, align 1, !dbg !6226
  %10 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !6226
  store i8 %8, ptr %10, align 1, !dbg !6226
  %11 = load i8, ptr %_4, align 1, !dbg !6227
  %12 = trunc nuw i8 %11 to i1, !dbg !6227
  %13 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !6227
  %14 = load i8, ptr %13, align 1, !dbg !6227
  %_5 = zext i1 %12 to i32, !dbg !6227
  %15 = trunc nuw i32 %_5 to i1, !dbg !6228
  br i1 %15, label %bb5, label %bb6, !dbg !6228

bb5:                                              ; preds = %bb3
  %16 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !6229
  %17 = load i8, ptr %16, align 1, !dbg !6229
  %18 = trunc nuw i8 %17 to i1, !dbg !6229
  %19 = zext i1 %18 to i8, !dbg !6229
  store i8 %19, ptr %err, align 1, !dbg !6229
; call rustc_demangle::v0::ParseError::message
  %20 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err) #13, !dbg !6230
  %_10.0 = extractvalue { ptr, i32 } %20, 0, !dbg !6230
  %_10.1 = extractvalue { ptr, i32 } %20, 1, !dbg !6230
; call rustc_demangle::v0::Printer::print
  %_9 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_10.0, i32 %_10.1) #13, !dbg !6231
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_8 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_9) #13, !dbg !6232
  %_12 = zext i1 %_8 to i32, !dbg !6232
  %21 = trunc nuw i32 %_12 to i1, !dbg !6232
  br i1 %21, label %bb11, label %bb10, !dbg !6232

bb6:                                              ; preds = %bb3
  %22 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !6233
  %tag = load i8, ptr %22, align 1, !dbg !6233
  store i8 %tag, ptr %tag.dbg.spill, align 1, !dbg !6233
    #dbg_declare(ptr %tag.dbg.spill, !6131, !DIExpression(), !6234)
    #dbg_declare(ptr %tag.dbg.spill, !6135, !DIExpression(), !6235)
  switch i8 %tag, label %bb12 [
    i8 82, label %bb15
    i8 79, label %bb14
    i8 78, label %bb13
  ], !dbg !6236

bb12:                                             ; preds = %bb6
  store i8 0, ptr %err3, align 1, !dbg !6237
; call rustc_demangle::v0::ParseError::message
  %23 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err3) #13, !dbg !6238
  %_60.0 = extractvalue { ptr, i32 } %23, 0, !dbg !6238
  %_60.1 = extractvalue { ptr, i32 } %23, 1, !dbg !6238
; call rustc_demangle::v0::Printer::print
  %_59 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_60.0, i32 %_60.1) #13, !dbg !6239
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_58 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_59) #13, !dbg !6240
  %_62 = zext i1 %_58 to i32, !dbg !6240
  %24 = trunc nuw i32 %_62 to i1, !dbg !6240
  br i1 %24, label %bb66, label %bb65, !dbg !6240

bb15:                                             ; preds = %bb6
; call rustc_demangle::v0::Printer::print_const
  %_15 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %self, i1 zeroext false) #13, !dbg !6241
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_14 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_15) #13, !dbg !6242
  %_16 = zext i1 %_14 to i32, !dbg !6242
  %25 = trunc nuw i32 %_16 to i1, !dbg !6242
  br i1 %25, label %bb19, label %bb18, !dbg !6242

bb14:                                             ; preds = %bb6
  %26 = load ptr, ptr %self, align 4, !dbg !6243
  %27 = ptrtoint ptr %26 to i32, !dbg !6243
  %28 = icmp eq i32 %27, 0, !dbg !6243
  %_23 = select i1 %28, i32 1, i32 0, !dbg !6243
  %29 = trunc nuw i32 %_23 to i1, !dbg !6244
  br i1 %29, label %bb27, label %bb28, !dbg !6244

bb13:                                             ; preds = %bb6
; call rustc_demangle::v0::Printer::print
  %_55 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_efb33f7f1846bae0320d1e2e46b80887, i32 5) #13, !dbg !6245
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_54 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_55) #13, !dbg !6246
  %_56 = zext i1 %_54 to i32, !dbg !6246
  %30 = trunc nuw i32 %_56 to i1, !dbg !6246
  br i1 %30, label %bb61, label %bb67, !dbg !6246

bb19:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %31 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_c1e9ff2befa62d5d9eb82c8882621c91) #13, !dbg !6247
  %32 = zext i1 %31 to i8, !dbg !6247
  store i8 %32, ptr %_0, align 1, !dbg !6247
  br label %bb68, !dbg !6247

bb18:                                             ; preds = %bb15
; call rustc_demangle::v0::Printer::print
  %_18 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_fad8087ce9ba23e86b71d97267724fb0, i32 3) #13, !dbg !6248
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_17 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_18) #13, !dbg !6249
  %_19 = zext i1 %_17 to i32, !dbg !6249
  %33 = trunc nuw i32 %_19 to i1, !dbg !6249
  br i1 %33, label %bb23, label %bb22, !dbg !6249

bb23:                                             ; preds = %bb18
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %34 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_afec21daaa5e6363a762ced4d04cce21) #13, !dbg !6250
  %35 = zext i1 %34 to i8, !dbg !6250
  store i8 %35, ptr %_0, align 1, !dbg !6250
  br label %bb68, !dbg !6250

bb22:                                             ; preds = %bb18
; call rustc_demangle::v0::Printer::print_const
  %_21 = call zeroext i1 @_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE(ptr align 4 %self, i1 zeroext false) #13, !dbg !6251
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_20 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_21) #13, !dbg !6252
  %_22 = zext i1 %_20 to i32, !dbg !6252
  %36 = trunc nuw i32 %_22 to i1, !dbg !6252
  br i1 %36, label %bb26, label %bb67, !dbg !6252

bb26:                                             ; preds = %bb22
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %37 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6e3e9258c72a340a2921ab14d6de6be5) #13, !dbg !6253
  %38 = zext i1 %37 to i8, !dbg !6253
  store i8 %38, ptr %_0, align 1, !dbg !6253
  br label %bb68, !dbg !6253

bb67:                                             ; preds = %bb13, %bb42, %bb22
  store i8 0, ptr %_0, align 1, !dbg !6254
  br label %bb68, !dbg !6255

bb68:                                             ; preds = %bb2, %bb11, %bb10, %bb66, %bb65, %bb61, %bb67, %bb27, %bb36, %bb35, %bb39, %bb50, %bb49, %bb55, %bb58, %bb19, %bb23, %bb26
  %39 = load i8, ptr %_0, align 1, !dbg !6255
  %40 = trunc nuw i8 %39 to i1, !dbg !6255
  ret i1 %40, !dbg !6255

bb27:                                             ; preds = %bb14
; call rustc_demangle::v0::Printer::print
  %41 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_83ea95cd0f4d551c88f8147f19082056, i32 1) #13, !dbg !6256
  %42 = zext i1 %41 to i8, !dbg !6256
  store i8 %42, ptr %_0, align 1, !dbg !6256
  br label %bb68, !dbg !6256

bb28:                                             ; preds = %bb14
  store ptr %self, ptr %parser.dbg.spill24, align 4, !dbg !6257
    #dbg_declare(ptr %parser.dbg.spill24, !6155, !DIExpression(), !6258)
; call rustc_demangle::v0::Parser::push_depth
  %43 = call i8 @_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE(ptr align 4 %self) #13, !dbg !6259
  store i8 %43, ptr %_25, align 1, !dbg !6259
  %44 = load i8, ptr %_25, align 1, !dbg !6260
  %45 = icmp eq i8 %44, 2, !dbg !6260
  %_26 = select i1 %45, i32 0, i32 1, !dbg !6260
  %46 = trunc nuw i32 %_26 to i1, !dbg !6261
  br i1 %46, label %bb30, label %bb31, !dbg !6261

bb30:                                             ; preds = %bb28
  %47 = load i8, ptr %_25, align 1, !dbg !6262
  %48 = trunc nuw i8 %47 to i1, !dbg !6262
  %49 = zext i1 %48 to i8, !dbg !6262
  store i8 %49, ptr %err1, align 1, !dbg !6262
; call rustc_demangle::v0::ParseError::message
  %50 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err1) #13, !dbg !6263
  %_30.0 = extractvalue { ptr, i32 } %50, 0, !dbg !6263
  %_30.1 = extractvalue { ptr, i32 } %50, 1, !dbg !6263
; call rustc_demangle::v0::Printer::print
  %_29 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_30.0, i32 %_30.1) #13, !dbg !6264
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_28 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_29) #13, !dbg !6265
  %_32 = zext i1 %_28 to i32, !dbg !6265
  %51 = trunc nuw i32 %_32 to i1, !dbg !6265
  br i1 %51, label %bb36, label %bb35, !dbg !6265

bb31:                                             ; preds = %bb28
; call rustc_demangle::v0::Printer::print_pat
  %_35 = call zeroext i1 @_ZN14rustc_demangle2v07Printer9print_pat17h18ec7f9bb765c837E(ptr align 4 %self) #13, !dbg !6266
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_34 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_35) #13, !dbg !6267
  %_36 = zext i1 %_34 to i32, !dbg !6267
  %52 = trunc nuw i32 %_36 to i1, !dbg !6267
  br i1 %52, label %bb39, label %bb40, !dbg !6267

bb39:                                             ; preds = %bb31
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %53 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_d321c890de1bff07a70d2f546d27a66c) #13, !dbg !6268
  %54 = zext i1 %53 to i8, !dbg !6268
  store i8 %54, ptr %_0, align 1, !dbg !6268
  br label %bb68, !dbg !6268

bb40:                                             ; preds = %bb54, %bb31
; call rustc_demangle::v0::Printer::eat
  %_37 = call zeroext i1 @_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E(ptr align 4 %self, i8 69) #13, !dbg !6269
  br i1 %_37, label %bb42, label %bb43, !dbg !6270

bb43:                                             ; preds = %bb40
; call core::result::Result<T,E>::is_err
  %_38 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h9015cb0eb6f1c0cbE"(ptr align 4 %self) #13, !dbg !6271
  br i1 %_38, label %bb45, label %bb51, !dbg !6272

bb42:                                             ; preds = %bb40
; call rustc_demangle::v0::Printer::pop_depth
  call void @_ZN14rustc_demangle2v07Printer9pop_depth17ha25b3c4e0a438db8E(ptr align 4 %self) #13, !dbg !6273
  br label %bb67, !dbg !6273

bb51:                                             ; preds = %bb43
; call rustc_demangle::v0::Printer::print
  %_48 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 @alloc_a73d0e35045fd787c81346701178a687, i32 3) #13, !dbg !6274
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_47 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_48) #13, !dbg !6275
  %_49 = zext i1 %_47 to i32, !dbg !6275
  %55 = trunc nuw i32 %_49 to i1, !dbg !6275
  br i1 %55, label %bb55, label %bb54, !dbg !6275

bb45:                                             ; preds = %bb43
  store i8 0, ptr %err2, align 1, !dbg !6237
; call rustc_demangle::v0::ParseError::message
  %56 = call { ptr, i32 } @_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E(ptr align 1 %err2) #13, !dbg !6276
  %_43.0 = extractvalue { ptr, i32 } %56, 0, !dbg !6276
  %_43.1 = extractvalue { ptr, i32 } %56, 1, !dbg !6276
; call rustc_demangle::v0::Printer::print
  %_42 = call zeroext i1 @_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E(ptr align 4 %self, ptr align 1 %_43.0, i32 %_43.1) #13, !dbg !6277
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_41 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_42) #13, !dbg !6278
  %_45 = zext i1 %_41 to i32, !dbg !6278
  %57 = trunc nuw i32 %_45 to i1, !dbg !6278
  br i1 %57, label %bb50, label %bb49, !dbg !6278

bb55:                                             ; preds = %bb51
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %58 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ec53e480c0113964aed9ade00db5f71d) #13, !dbg !6279
  %59 = zext i1 %58 to i8, !dbg !6279
  store i8 %59, ptr %_0, align 1, !dbg !6279
  br label %bb68, !dbg !6279

bb54:                                             ; preds = %bb51
; call rustc_demangle::v0::Printer::print_pat
  %_51 = call zeroext i1 @_ZN14rustc_demangle2v07Printer9print_pat17h18ec7f9bb765c837E(ptr align 4 %self) #13, !dbg !6280
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_50 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_51) #13, !dbg !6281
  %_52 = zext i1 %_50 to i32, !dbg !6281
  %60 = trunc nuw i32 %_52 to i1, !dbg !6281
  br i1 %60, label %bb58, label %bb40, !dbg !6281

bb58:                                             ; preds = %bb54
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %61 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_53b217ca7f7ca7da6d733c84e98e7d35) #13, !dbg !6282
  %62 = zext i1 %61 to i8, !dbg !6282
  store i8 %62, ptr %_0, align 1, !dbg !6282
  br label %bb68, !dbg !6282

bb50:                                             ; preds = %bb45
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %63 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6bc5650fe177edef0613f1404f58772a) #13, !dbg !6283
  %64 = zext i1 %63 to i8, !dbg !6283
  store i8 %64, ptr %_0, align 1, !dbg !6283
  br label %bb68, !dbg !6283

bb49:                                             ; preds = %bb45
  %65 = load i8, ptr %err2, align 1, !dbg !6284
  %66 = trunc nuw i8 %65 to i1, !dbg !6284
  %67 = getelementptr inbounds i8, ptr %_46, i32 4, !dbg !6284
  %68 = zext i1 %66 to i8, !dbg !6284
  store i8 %68, ptr %67, align 4, !dbg !6284
  store ptr null, ptr %_46, align 4, !dbg !6284
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_46, i32 16, i1 false), !dbg !6285
  store i8 0, ptr %_0, align 1, !dbg !6286
  br label %bb68, !dbg !6287

bb36:                                             ; preds = %bb30
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %69 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_e2bd95442f5eda3378a92a4f3a2d49a9) #13, !dbg !6288
  %70 = zext i1 %69 to i8, !dbg !6288
  store i8 %70, ptr %_0, align 1, !dbg !6288
  br label %bb68, !dbg !6288

bb35:                                             ; preds = %bb30
  %71 = load i8, ptr %err1, align 1, !dbg !6289
  %72 = trunc nuw i8 %71 to i1, !dbg !6289
  %73 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !6289
  %74 = zext i1 %72 to i8, !dbg !6289
  store i8 %74, ptr %73, align 4, !dbg !6289
  store ptr null, ptr %_33, align 4, !dbg !6289
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_33, i32 16, i1 false), !dbg !6290
  store i8 0, ptr %_0, align 1, !dbg !6291
  br label %bb68, !dbg !6292

bb61:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %75 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_2181aad97e76b7370f096452405145eb) #13, !dbg !6293
  %76 = zext i1 %75 to i8, !dbg !6293
  store i8 %76, ptr %_0, align 1, !dbg !6293
  br label %bb68, !dbg !6293

bb66:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %77 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_aa4e71feec07e7e105ccae0bbffc2734) #13, !dbg !6294
  %78 = zext i1 %77 to i8, !dbg !6294
  store i8 %78, ptr %_0, align 1, !dbg !6294
  br label %bb68, !dbg !6294

bb65:                                             ; preds = %bb12
  %79 = load i8, ptr %err3, align 1, !dbg !6295
  %80 = trunc nuw i8 %79 to i1, !dbg !6295
  %81 = getelementptr inbounds i8, ptr %_63, i32 4, !dbg !6295
  %82 = zext i1 %80 to i8, !dbg !6295
  store i8 %82, ptr %81, align 4, !dbg !6295
  store ptr null, ptr %_63, align 4, !dbg !6295
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_63, i32 16, i1 false), !dbg !6296
  store i8 0, ptr %_0, align 1, !dbg !6297
  br label %bb68, !dbg !6298

bb11:                                             ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %83 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_347050566101c44882104c723f0d7eb7) #13, !dbg !6299
  %84 = zext i1 %83 to i8, !dbg !6299
  store i8 %84, ptr %_0, align 1, !dbg !6299
  br label %bb68, !dbg !6299

bb10:                                             ; preds = %bb5
  %85 = load i8, ptr %err, align 1, !dbg !6300
  %86 = trunc nuw i8 %85 to i1, !dbg !6300
  %87 = getelementptr inbounds i8, ptr %_13, i32 4, !dbg !6300
  %88 = zext i1 %86 to i8, !dbg !6300
  store i8 %88, ptr %87, align 4, !dbg !6300
  store ptr null, ptr %_13, align 4, !dbg !6300
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_13, i32 16, i1 false), !dbg !6301
  store i8 0, ptr %_0, align 1, !dbg !6302
  br label %bb68, !dbg !6303

bb1:                                              ; No predecessors!
  unreachable, !dbg !6304
}

; rustc_demangle::v0::demangle
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle2v08demangle17h12a06ca24fe18059E(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !6306 {
start:
  %self.dbg.spill.i4 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %residual.dbg.spill3 = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %try_parse_path.dbg.spill = alloca [0 x i8], align 1
  %s.dbg.spill = alloca [8 x i8], align 4
  %_57 = alloca [16 x i8], align 4
  %val1 = alloca [16 x i8], align 4
  %_53 = alloca [16 x i8], align 4
  %_52 = alloca [16 x i8], align 4
  %_50 = alloca [16 x i8], align 4
  %_49 = alloca [16 x i8], align 4
  %_43 = alloca [4 x i8], align 4
  %val = alloca [16 x i8], align 4
  %_39 = alloca [16 x i8], align 4
  %_38 = alloca [16 x i8], align 4
  %_36 = alloca [16 x i8], align 4
  %_35 = alloca [16 x i8], align 4
  %parser = alloca [16 x i8], align 4
  %_32 = alloca [0 x i8], align 1
  %_29 = alloca [8 x i8], align 4
  %inner = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !6329, !DIExpression(), !6345)
    #dbg_declare(ptr %inner, !6330, !DIExpression(), !6346)
    #dbg_declare(ptr %parser, !6335, !DIExpression(), !6347)
    #dbg_declare(ptr %val, !6339, !DIExpression(), !6348)
    #dbg_declare(ptr %val1, !6343, !DIExpression(), !6349)
    #dbg_declare(ptr %try_parse_path.dbg.spill, !6332, !DIExpression(), !6350)
; call core::str::<impl str>::len
  %_4 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %s.0, i32 %s.1) #13, !dbg !6351
  %_3 = icmp ugt i32 %_4, 2, !dbg !6352
  br i1 %_3, label %bb2, label %bb6, !dbg !6352

bb6:                                              ; preds = %bb2, %start
; call core::str::<impl str>::len
  %_9 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %s.0, i32 %s.1) #13, !dbg !6353
  %_8 = icmp ugt i32 %_9, 1, !dbg !6354
  br i1 %_8, label %bb8, label %bb12, !dbg !6354

bb2:                                              ; preds = %start
; call core::str::<impl str>::starts_with
  %_5 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E"(ptr align 1 %s.0, i32 %s.1, ptr align 1 @alloc_f9fb86e927c411227d6ce9b567ff107b, i32 2) #13, !dbg !6355
  br i1 %_5, label %bb4, label %bb6, !dbg !6356

bb4:                                              ; preds = %bb2
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %1 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %s.0, i32 %s.1, i32 2, ptr align 4 @alloc_fb40345895c39c54357a205e03a9ab5d) #13, !dbg !6357
  %_6.0 = extractvalue { ptr, i32 } %1, 0, !dbg !6357
  %_6.1 = extractvalue { ptr, i32 } %1, 1, !dbg !6357
  store ptr %_6.0, ptr %inner, align 4, !dbg !6358
  %2 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6358
  store i32 %_6.1, ptr %2, align 4, !dbg !6358
  br label %bb19, !dbg !6359

bb12:                                             ; preds = %bb8, %bb6
; call core::str::<impl str>::len
  %_14 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %s.0, i32 %s.1) #13, !dbg !6360
  %_13 = icmp ugt i32 %_14, 3, !dbg !6361
  br i1 %_13, label %bb14, label %bb18, !dbg !6361

bb8:                                              ; preds = %bb6
; call core::str::<impl str>::starts_with
  %_10 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E"(ptr align 1 %s.0, i32 %s.1, i32 82) #13, !dbg !6362
  br i1 %_10, label %bb10, label %bb12, !dbg !6363

bb10:                                             ; preds = %bb8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %3 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %s.0, i32 %s.1, i32 1, ptr align 4 @alloc_4766f40ce33c5960a7536169803d72a3) #13, !dbg !6364
  %_11.0 = extractvalue { ptr, i32 } %3, 0, !dbg !6364
  %_11.1 = extractvalue { ptr, i32 } %3, 1, !dbg !6364
  store ptr %_11.0, ptr %inner, align 4, !dbg !6365
  %4 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6365
  store i32 %_11.1, ptr %4, align 4, !dbg !6365
  br label %bb19, !dbg !6366

bb18:                                             ; preds = %bb14, %bb12
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6367
  store i8 0, ptr %5, align 4, !dbg !6367
  store ptr null, ptr %_0, align 4, !dbg !6367
  br label %bb45, !dbg !6368

bb14:                                             ; preds = %bb12
; call core::str::<impl str>::starts_with
  %_15 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E"(ptr align 1 %s.0, i32 %s.1, ptr align 1 @alloc_a9bdd0561b8b141bc8188b4c981126c6, i32 3) #13, !dbg !6370
  br i1 %_15, label %bb16, label %bb18, !dbg !6371

bb16:                                             ; preds = %bb14
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %6 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %s.0, i32 %s.1, i32 3, ptr align 4 @alloc_f6381ea9595286d112d8d14532639436) #13, !dbg !6372
  %_16.0 = extractvalue { ptr, i32 } %6, 0, !dbg !6372
  %_16.1 = extractvalue { ptr, i32 } %6, 1, !dbg !6372
  store ptr %_16.0, ptr %inner, align 4, !dbg !6373
  %7 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6373
  store i32 %_16.1, ptr %7, align 4, !dbg !6373
  br label %bb19, !dbg !6366

bb45:                                             ; preds = %bb27, %bb33, %bb43, %bb42, %bb22, %bb18
  ret void, !dbg !6374

bb19:                                             ; preds = %bb4, %bb10, %bb16
  %_20.0 = load ptr, ptr %inner, align 4, !dbg !6375
  %8 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6375
  %_20.1 = load i32, ptr %8, align 4, !dbg !6375
  store ptr %_20.0, ptr %self.dbg.spill.i4, align 4
  %9 = getelementptr inbounds i8, ptr %self.dbg.spill.i4, i32 4
  store i32 %_20.1, ptr %9, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !886, !DIExpression(), !6376)
  %10 = insertvalue { ptr, i32 } poison, ptr %_20.0, 0, !dbg !6378
  %11 = insertvalue { ptr, i32 } %10, i32 %_20.1, 1, !dbg !6378
  %_19.0 = extractvalue { ptr, i32 } %11, 0, !dbg !6379
  %_19.1 = extractvalue { ptr, i32 } %11, 1, !dbg !6379
  %_23 = icmp ult i32 0, %_19.1, !dbg !6375
  br i1 %_23, label %bb21, label %panic, !dbg !6375

bb21:                                             ; preds = %bb19
  %12 = getelementptr inbounds nuw i8, ptr %_19.0, i32 0, !dbg !6380
  %13 = load i8, ptr %12, align 1, !dbg !6380
  %_24 = icmp ule i8 65, %13, !dbg !6380
  br i1 %_24, label %bb24, label %bb22, !dbg !6380

panic:                                            ; preds = %bb19
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 0, i32 %_19.1, ptr align 4 @alloc_eb364b0938a59e626face21148e313c0) #14, !dbg !6375
  unreachable, !dbg !6375

bb22:                                             ; preds = %bb24, %bb21
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6381
  store i8 0, ptr %14, align 4, !dbg !6381
  store ptr null, ptr %_0, align 4, !dbg !6381
  br label %bb45, !dbg !6368

bb24:                                             ; preds = %bb21
  %15 = getelementptr inbounds nuw i8, ptr %_19.0, i32 0, !dbg !6380
  %16 = load i8, ptr %15, align 1, !dbg !6380
  %_25 = icmp ule i8 %16, 90, !dbg !6380
  br i1 %_25, label %bb23, label %bb22, !dbg !6380

bb23:                                             ; preds = %bb24
  %_30.0 = load ptr, ptr %inner, align 4, !dbg !6382
  %17 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6382
  %_30.1 = load i32, ptr %17, align 4, !dbg !6382
; call core::str::<impl str>::bytes
  %18 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hee061ce74cf188a3E"(ptr align 1 %_30.0, i32 %_30.1) #13, !dbg !6383
  %19 = extractvalue { ptr, ptr } %18, 0, !dbg !6383
  %20 = extractvalue { ptr, ptr } %18, 1, !dbg !6383
  store ptr %19, ptr %_29, align 4, !dbg !6383
  %21 = getelementptr inbounds i8, ptr %_29, i32 4, !dbg !6383
  store ptr %20, ptr %21, align 4, !dbg !6383
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
  %_27 = call zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17ha7ff31e633c9850aE"(ptr align 4 %_29) #13, !dbg !6384
  br i1 %_27, label %bb27, label %bb28, !dbg !6382

bb28:                                             ; preds = %bb23
  %_34.0 = load ptr, ptr %inner, align 4, !dbg !6385
  %22 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6385
  %_34.1 = load i32, ptr %22, align 4, !dbg !6385
  store ptr %_34.0, ptr %parser, align 4, !dbg !6386
  %23 = getelementptr inbounds i8, ptr %parser, i32 4, !dbg !6386
  store i32 %_34.1, ptr %23, align 4, !dbg !6386
  %24 = getelementptr inbounds i8, ptr %parser, i32 8, !dbg !6386
  store i32 0, ptr %24, align 4, !dbg !6386
  %25 = getelementptr inbounds i8, ptr %parser, i32 12, !dbg !6386
  store i32 0, ptr %25, align 4, !dbg !6386
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_39, ptr align 4 %parser, i32 16, i1 false), !dbg !6387
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_38, ptr align 4 %_39, i32 16, i1 false), !dbg !6388
; call rustc_demangle::v0::demangle::{{closure}}
  call void @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17ha9f0c78f9f6ea66fE"(ptr sret([16 x i8]) align 4 %_36, ptr align 1 %_32, ptr align 4 %_38) #13, !dbg !6388
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd5164492adef2e3cE"(ptr sret([16 x i8]) align 4 %_35, ptr align 4 %_36) #13, !dbg !6388
  %26 = load ptr, ptr %_35, align 4, !dbg !6388
  %27 = ptrtoint ptr %26 to i32, !dbg !6388
  %28 = icmp eq i32 %27, 0, !dbg !6388
  %_40 = select i1 %28, i32 1, i32 0, !dbg !6388
  %29 = trunc nuw i32 %_40 to i1, !dbg !6388
  br i1 %29, label %bb33, label %bb32, !dbg !6388

bb27:                                             ; preds = %bb23
  %30 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6389
  store i8 0, ptr %30, align 4, !dbg !6389
  store ptr null, ptr %_0, align 4, !dbg !6389
  br label %bb45, !dbg !6368

bb33:                                             ; preds = %bb28
  %31 = getelementptr inbounds i8, ptr %_35, i32 4, !dbg !6390
  %32 = load i8, ptr %31, align 4, !dbg !6390
  %residual2 = trunc nuw i8 %32 to i1, !dbg !6390
  %33 = zext i1 %residual2 to i8, !dbg !6390
  store i8 %33, ptr %residual.dbg.spill3, align 1, !dbg !6390
    #dbg_declare(ptr %residual.dbg.spill3, !6337, !DIExpression(), !6391)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h94e3dca9ee159bc4E"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual2, ptr align 4 @alloc_a510887131eeda456440555b131a6334) #13, !dbg !6392
  br label %bb45, !dbg !6392

bb32:                                             ; preds = %bb28
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %val, ptr align 4 %_35, i32 16, i1 false), !dbg !6388
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %parser, ptr align 4 %val, i32 16, i1 false), !dbg !6393
  %_63.0 = load ptr, ptr %parser, align 4, !dbg !6394
  %34 = getelementptr inbounds i8, ptr %parser, i32 4, !dbg !6394
  %_63.1 = load i32, ptr %34, align 4, !dbg !6394
  store ptr %_63.0, ptr %self.dbg.spill.i, align 4
  %35 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_63.1, ptr %35, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !6395)
  %36 = insertvalue { ptr, i32 } poison, ptr %_63.0, 0, !dbg !6397
  %37 = insertvalue { ptr, i32 } %36, i32 %_63.1, 1, !dbg !6397
  %_44.0 = extractvalue { ptr, i32 } %37, 0, !dbg !6398
  %_44.1 = extractvalue { ptr, i32 } %37, 1, !dbg !6398
  %38 = getelementptr inbounds i8, ptr %parser, i32 8, !dbg !6399
  %_45 = load i32, ptr %38, align 4, !dbg !6399
; call core::slice::<impl [T]>::get
  %39 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcd563978280d65deE"(ptr align 1 %_44.0, i32 %_44.1, i32 %_45) #13, !dbg !6400
  store ptr %39, ptr %_43, align 4, !dbg !6400
  %40 = load ptr, ptr %_43, align 4, !dbg !6394
  %41 = ptrtoint ptr %40 to i32, !dbg !6394
  %42 = icmp eq i32 %41, 0, !dbg !6394
  %_48 = select i1 %42, i32 0, i32 1, !dbg !6394
  %43 = trunc nuw i32 %_48 to i1, !dbg !6401
  br i1 %43, label %bb36, label %bb43, !dbg !6401

bb36:                                             ; preds = %bb32
  %_64 = load ptr, ptr %_43, align 4, !dbg !6402
  %44 = load i8, ptr %_64, align 1, !dbg !6402
  %_46 = icmp ule i8 65, %44, !dbg !6402
  br i1 %_46, label %bb38, label %bb43, !dbg !6402

bb43:                                             ; preds = %bb41, %bb38, %bb36, %bb32
  %_59.0 = load ptr, ptr %inner, align 4, !dbg !6403
  %45 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6403
  %_59.1 = load i32, ptr %45, align 4, !dbg !6403
  %_66.0 = load ptr, ptr %parser, align 4, !dbg !6404
  %46 = getelementptr inbounds i8, ptr %parser, i32 4, !dbg !6404
  %_66.1 = load i32, ptr %46, align 4, !dbg !6404
  %47 = getelementptr inbounds i8, ptr %parser, i32 8, !dbg !6405
  %_62 = load i32, ptr %47, align 4, !dbg !6405
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %48 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_66.0, i32 %_66.1, i32 %_62, ptr align 4 @alloc_43f41aae90a4da56ef1e71166ea52897) #13, !dbg !6406
  %_60.0 = extractvalue { ptr, i32 } %48, 0, !dbg !6406
  %_60.1 = extractvalue { ptr, i32 } %48, 1, !dbg !6406
  store ptr %_59.0, ptr %_57, align 4, !dbg !6407
  %49 = getelementptr inbounds i8, ptr %_57, i32 4, !dbg !6407
  store i32 %_59.1, ptr %49, align 4, !dbg !6407
  %50 = getelementptr inbounds i8, ptr %_57, i32 8, !dbg !6407
  store ptr %_60.0, ptr %50, align 4, !dbg !6407
  %51 = getelementptr inbounds i8, ptr %50, i32 4, !dbg !6407
  store i32 %_60.1, ptr %51, align 4, !dbg !6407
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_57, i32 16, i1 false), !dbg !6408
  br label %bb45, !dbg !6374

bb38:                                             ; preds = %bb36
  %_65 = load ptr, ptr %_43, align 4, !dbg !6402
  %52 = load i8, ptr %_65, align 1, !dbg !6402
  %_47 = icmp ule i8 %52, 90, !dbg !6402
  br i1 %_47, label %bb37, label %bb43, !dbg !6402

bb37:                                             ; preds = %bb38
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_53, ptr align 4 %parser, i32 16, i1 false), !dbg !6409
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_52, ptr align 4 %_53, i32 16, i1 false), !dbg !6410
; call rustc_demangle::v0::demangle::{{closure}}
  call void @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17ha9f0c78f9f6ea66fE"(ptr sret([16 x i8]) align 4 %_50, ptr align 1 %_32, ptr align 4 %_52) #13, !dbg !6410
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd5164492adef2e3cE"(ptr sret([16 x i8]) align 4 %_49, ptr align 4 %_50) #13, !dbg !6410
  %53 = load ptr, ptr %_49, align 4, !dbg !6410
  %54 = ptrtoint ptr %53 to i32, !dbg !6410
  %55 = icmp eq i32 %54, 0, !dbg !6410
  %_54 = select i1 %55, i32 1, i32 0, !dbg !6410
  %56 = trunc nuw i32 %_54 to i1, !dbg !6410
  br i1 %56, label %bb42, label %bb41, !dbg !6410

bb42:                                             ; preds = %bb37
  %57 = getelementptr inbounds i8, ptr %_49, i32 4, !dbg !6411
  %58 = load i8, ptr %57, align 4, !dbg !6411
  %residual = trunc nuw i8 %58 to i1, !dbg !6411
  %59 = zext i1 %residual to i8, !dbg !6411
  store i8 %59, ptr %residual.dbg.spill, align 1, !dbg !6411
    #dbg_declare(ptr %residual.dbg.spill, !6341, !DIExpression(), !6412)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h94e3dca9ee159bc4E"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 @alloc_d006cb3af6845129162b80da09a90807) #13, !dbg !6413
  br label %bb45, !dbg !6413

bb41:                                             ; preds = %bb37
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %val1, ptr align 4 %_49, i32 16, i1 false), !dbg !6410
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %parser, ptr align 4 %val1, i32 16, i1 false), !dbg !6414
  br label %bb43, !dbg !6415

bb31:                                             ; No predecessors!
  unreachable, !dbg !6416
}

; rustc_demangle::v0::demangle::{{closure}}
; Function Attrs: inlinehint nounwind
define internal void @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17ha9f0c78f9f6ea66fE"(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %_1, ptr align 4 %parser) unnamed_addr #0 !dbg !6418 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [16 x i8], align 4
  %dummy_printer = alloca [24 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6426, !DIExpression(), !6427)
    #dbg_declare(ptr %parser, !6423, !DIExpression(), !6428)
    #dbg_declare(ptr %dummy_printer, !6424, !DIExpression(), !6429)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_4, ptr align 4 %parser, i32 16, i1 false), !dbg !6430
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %dummy_printer, ptr align 4 %_4, i32 16, i1 false), !dbg !6431
  %0 = getelementptr inbounds i8, ptr %dummy_printer, i32 16, !dbg !6431
  store ptr null, ptr %0, align 4, !dbg !6431
  %1 = getelementptr inbounds i8, ptr %dummy_printer, i32 20, !dbg !6431
  store i32 0, ptr %1, align 4, !dbg !6431
; call rustc_demangle::v0::Printer::print_path
  %_7 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %dummy_printer, i1 zeroext false) #13, !dbg !6432
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1764e143a7407ec9E"(i1 zeroext %_7, ptr align 1 @alloc_ead4d96489f9fd178dc690c294e1bf9b, i32 61, ptr align 4 @alloc_2b9ecd7fb79c392a9530f3ffcead8477) #13, !dbg !6433
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %dummy_printer, i32 16, i1 false), !dbg !6434
  ret void, !dbg !6435
}

; rustc_demangle::v0::demangle::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17hc0a6af2925c9d046E"(ptr align 1 %_1, i8 %c) unnamed_addr #0 !dbg !6436 {
start:
  %c.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6442, !DIExpression(), !6443)
  store i8 %c, ptr %c.dbg.spill, align 1
    #dbg_declare(ptr %c.dbg.spill, !6441, !DIExpression(), !6444)
  %_3 = and i8 %c, -128, !dbg !6445
  %_0 = icmp ne i8 %_3, 0, !dbg !6445
  ret i1 %_0, !dbg !6446
}

; rustc_demangle::legacy::is_rust_hash
; Function Attrs: nounwind
define internal zeroext i1 @_ZN14rustc_demangle6legacy12is_rust_hash17hb40e9be59fc7970bE(ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !6447 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !6450, !DIExpression(), !6451)
; call core::str::<impl str>::starts_with
  %_2 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E"(ptr align 1 %s.0, i32 %s.1, i32 104) #13, !dbg !6452
  br i1 %_2, label %bb2, label %bb3, !dbg !6453

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !6453
  br label %bb6, !dbg !6453

bb2:                                              ; preds = %start
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %1 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %s.0, i32 %s.1, i32 1, ptr align 4 @alloc_2eafdd1cb095d3316a8c4a324a182911) #13, !dbg !6454
  %_5.0 = extractvalue { ptr, i32 } %1, 0, !dbg !6454
  %_5.1 = extractvalue { ptr, i32 } %1, 1, !dbg !6454
; call core::str::<impl str>::chars
  %2 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %_5.0, i32 %_5.1) #13, !dbg !6455
  %3 = extractvalue { ptr, ptr } %2, 0, !dbg !6455
  %4 = extractvalue { ptr, ptr } %2, 1, !dbg !6455
  store ptr %3, ptr %_4, align 4, !dbg !6455
  %5 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !6455
  store ptr %4, ptr %5, align 4, !dbg !6455
; call core::iter::traits::iterator::Iterator::all
  %6 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h4a614af27c7c3388E(ptr align 4 %_4) #13, !dbg !6456
  %7 = zext i1 %6 to i8, !dbg !6456
  store i8 %7, ptr %_0, align 1, !dbg !6456
  br label %bb6, !dbg !6456

bb6:                                              ; preds = %bb2, %bb3
  %8 = load i8, ptr %_0, align 1, !dbg !6457
  %9 = trunc nuw i8 %8 to i1, !dbg !6457
  ret i1 %9, !dbg !6457
}

; rustc_demangle::legacy::is_rust_hash::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle6legacy12is_rust_hash28_$u7b$$u7b$closure$u7d$$u7d$17he7d4c979a7d9f479E"(ptr align 1 %_1, i32 %c) unnamed_addr #0 !dbg !6458 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6466, !DIExpression(), !6467)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !6465, !DIExpression(), !6468)
; call core::char::methods::<impl char>::is_digit
  %_0 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17h29934e8c7c7783a9E"(i32 %c, i32 16) #13, !dbg !6469
  ret i1 %_0, !dbg !6470
}

; rustc_demangle::legacy::demangle
; Function Attrs: nounwind
define internal void @_ZN14rustc_demangle6legacy8demangle17hacd077b712c1531bE(ptr sret([20 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !6471 {
start:
  %val.dbg.spill9 = alloca [4 x i8], align 4
  %val.dbg.spill7 = alloca [4 x i8], align 4
  %val.dbg.spill5 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %s.dbg.spill = alloca [8 x i8], align 4
  %_65 = alloca [12 x i8], align 4
  %_64 = alloca [20 x i8], align 4
  %_57 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %_44 = alloca [4 x i8], align 4
  %_35 = alloca [8 x i8], align 4
  %d = alloca [4 x i8], align 4
  %_31 = alloca [8 x i8], align 4
  %len = alloca [4 x i8], align 4
  %_21 = alloca [4 x i8], align 4
  %c = alloca [4 x i8], align 4
  %chars = alloca [8 x i8], align 4
  %elements = alloca [4 x i8], align 4
  %_15 = alloca [8 x i8], align 4
  %_6 = alloca [8 x i8], align 4
  %inner = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !6494, !DIExpression(), !6525)
    #dbg_declare(ptr %inner, !6495, !DIExpression(), !6526)
    #dbg_declare(ptr %elements, !6497, !DIExpression(), !6527)
    #dbg_declare(ptr %chars, !6499, !DIExpression(), !6528)
    #dbg_declare(ptr %c, !6501, !DIExpression(), !6529)
    #dbg_declare(ptr %len, !6507, !DIExpression(), !6530)
    #dbg_declare(ptr %d, !6509, !DIExpression(), !6531)
    #dbg_declare(ptr %iter, !6519, !DIExpression(), !6532)
    #dbg_declare(ptr %residual.dbg.spill, !6503, !DIExpression(), !6533)
    #dbg_declare(ptr %residual.dbg.spill1, !6511, !DIExpression(), !6534)
    #dbg_declare(ptr %residual.dbg.spill2, !6515, !DIExpression(), !6535)
    #dbg_declare(ptr %residual.dbg.spill3, !6521, !DIExpression(), !6536)
; call core::str::<impl str>::starts_with
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E"(ptr align 1 %s.0, i32 %s.1, ptr align 1 @alloc_6ef5ff4b1ea9b9d93c9327f097636b5b, i32 3) #13, !dbg !6537
  br i1 %_3, label %bb2, label %bb4, !dbg !6538

bb4:                                              ; preds = %start
; call core::str::<impl str>::starts_with
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E"(ptr align 1 %s.0, i32 %s.1, ptr align 1 @alloc_1b14c4cc7c72e5fc015408685aea44cc, i32 2) #13, !dbg !6539
  br i1 %_7, label %bb6, label %bb8, !dbg !6540

bb2:                                              ; preds = %start
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %1 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %s.0, i32 %s.1, i32 3, ptr align 4 @alloc_977439345b059aced4e07c05eeb3cb36) #13, !dbg !6541
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !6541
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !6541
  store ptr %_4.0, ptr %inner, align 4, !dbg !6542
  %2 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6542
  store i32 %_4.1, ptr %2, align 4, !dbg !6542
  br label %bb14, !dbg !6543

bb8:                                              ; preds = %bb4
; call core::str::<impl str>::starts_with
  %_10 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E"(ptr align 1 %s.0, i32 %s.1, ptr align 1 @alloc_f784cc82b63fe0a0f43a5a75f8fc403b, i32 4) #13, !dbg !6544
  br i1 %_10, label %bb10, label %bb12, !dbg !6545

bb6:                                              ; preds = %bb4
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %3 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %s.0, i32 %s.1, i32 2, ptr align 4 @alloc_87aa5e1af30fb402141ea76baa76707c) #13, !dbg !6546
  %_8.0 = extractvalue { ptr, i32 } %3, 0, !dbg !6546
  %_8.1 = extractvalue { ptr, i32 } %3, 1, !dbg !6546
  store ptr %_8.0, ptr %_6, align 4, !dbg !6547
  %4 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !6547
  store i32 %_8.1, ptr %4, align 4, !dbg !6547
  br label %bb13, !dbg !6548

bb12:                                             ; preds = %bb8
  store ptr null, ptr %_0, align 4, !dbg !6549
  br label %bb59, !dbg !6550

bb10:                                             ; preds = %bb8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %5 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %s.0, i32 %s.1, i32 4, ptr align 4 @alloc_a6583d77a94085ed5caad02c689ad26b) #13, !dbg !6552
  %_11.0 = extractvalue { ptr, i32 } %5, 0, !dbg !6552
  %_11.1 = extractvalue { ptr, i32 } %5, 1, !dbg !6552
  store ptr %_11.0, ptr %_6, align 4, !dbg !6553
  %6 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !6553
  store i32 %_11.1, ptr %6, align 4, !dbg !6553
  br label %bb13, !dbg !6548

bb59:                                             ; preds = %bb17, %bb25, %bb55, %bb39, %bb44, %bb30, %bb57, %bb12
  ret void, !dbg !6554

bb13:                                             ; preds = %bb6, %bb10
  %7 = load ptr, ptr %_6, align 4, !dbg !6548
  %8 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !6548
  %9 = load i32, ptr %8, align 4, !dbg !6548
  store ptr %7, ptr %inner, align 4, !dbg !6548
  %10 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6548
  store i32 %9, ptr %10, align 4, !dbg !6548
  br label %bb14, !dbg !6543

bb14:                                             ; preds = %bb2, %bb13
  %_16.0 = load ptr, ptr %inner, align 4, !dbg !6555
  %11 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6555
  %_16.1 = load i32, ptr %11, align 4, !dbg !6555
; call core::str::<impl str>::bytes
  %12 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hee061ce74cf188a3E"(ptr align 1 %_16.0, i32 %_16.1) #13, !dbg !6556
  %13 = extractvalue { ptr, ptr } %12, 0, !dbg !6556
  %14 = extractvalue { ptr, ptr } %12, 1, !dbg !6556
  store ptr %13, ptr %_15, align 4, !dbg !6556
  %15 = getelementptr inbounds i8, ptr %_15, i32 4, !dbg !6556
  store ptr %14, ptr %15, align 4, !dbg !6556
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
  %_13 = call zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h4dec297513eb01a7E"(ptr align 4 %_15) #13, !dbg !6557
  br i1 %_13, label %bb17, label %bb18, !dbg !6555

bb18:                                             ; preds = %bb14
  store i32 0, ptr %elements, align 4, !dbg !6558
  %_19.0 = load ptr, ptr %inner, align 4, !dbg !6559
  %16 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6559
  %_19.1 = load i32, ptr %16, align 4, !dbg !6559
; call core::str::<impl str>::chars
  %17 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %_19.0, i32 %_19.1) #13, !dbg !6560
  %18 = extractvalue { ptr, ptr } %17, 0, !dbg !6560
  %19 = extractvalue { ptr, ptr } %17, 1, !dbg !6560
  store ptr %18, ptr %chars, align 4, !dbg !6560
  %20 = getelementptr inbounds i8, ptr %chars, i32 4, !dbg !6560
  store ptr %19, ptr %20, align 4, !dbg !6560
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_23 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %chars) #13, !dbg !6561
; call core::option::Option<T>::ok_or
  %_22 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he54f112823e43c6bE"(i32 %_23) #13, !dbg !6562
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %21 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd57a36708ee5cf11E"(i32 %_22) #13, !dbg !6563
  store i32 %21, ptr %_21, align 4, !dbg !6563
  %22 = load i32, ptr %_21, align 4, !dbg !6563
  %23 = icmp eq i32 %22, 1114112, !dbg !6563
  %_25 = select i1 %23, i32 1, i32 0, !dbg !6563
  %24 = trunc nuw i32 %_25 to i1, !dbg !6563
  br i1 %24, label %bb25, label %bb24, !dbg !6563

bb17:                                             ; preds = %bb14
  store ptr null, ptr %_0, align 4, !dbg !6564
  br label %bb59, !dbg !6565

bb25:                                             ; preds = %bb18
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h408a49701b14ff89E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 @alloc_c0292548c3d0bdc18ad3d08f8743f6f4) #13, !dbg !6567
  br label %bb59, !dbg !6567

bb24:                                             ; preds = %bb18
  %val = load i32, ptr %_21, align 4, !dbg !6563
  store i32 %val, ptr %val.dbg.spill, align 4, !dbg !6563
    #dbg_declare(ptr %val.dbg.spill, !6505, !DIExpression(), !6568)
  store i32 %val, ptr %c, align 4, !dbg !6568
  br label %bb26, !dbg !6569

bb26:                                             ; preds = %bb56, %bb24
  %_27 = load i32, ptr %c, align 4, !dbg !6570
  %25 = icmp eq i32 %_27, 69, !dbg !6570
  br i1 %25, label %bb57, label %bb27, !dbg !6570

bb57:                                             ; preds = %bb26
  %_66.0 = load ptr, ptr %inner, align 4, !dbg !6571
  %26 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !6571
  %_66.1 = load i32, ptr %26, align 4, !dbg !6571
  %_67 = load i32, ptr %elements, align 4, !dbg !6572
  store ptr %_66.0, ptr %_65, align 4, !dbg !6573
  %27 = getelementptr inbounds i8, ptr %_65, i32 4, !dbg !6573
  store i32 %_66.1, ptr %27, align 4, !dbg !6573
  %28 = getelementptr inbounds i8, ptr %_65, i32 8, !dbg !6573
  store i32 %_67, ptr %28, align 4, !dbg !6573
; call core::str::iter::Chars::as_str
  %29 = call { ptr, i32 } @_ZN4core3str4iter5Chars6as_str17ha220dca85a589e1fE(ptr align 4 %chars) #13, !dbg !6574
  %_68.0 = extractvalue { ptr, i32 } %29, 0, !dbg !6574
  %_68.1 = extractvalue { ptr, i32 } %29, 1, !dbg !6574
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_64, ptr align 4 %_65, i32 12, i1 false), !dbg !6575
  %30 = getelementptr inbounds i8, ptr %_64, i32 12, !dbg !6575
  store ptr %_68.0, ptr %30, align 4, !dbg !6575
  %31 = getelementptr inbounds i8, ptr %30, i32 4, !dbg !6575
  store i32 %_68.1, ptr %31, align 4, !dbg !6575
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_64, i32 20, i1 false), !dbg !6576
  br label %bb59, !dbg !6554

bb27:                                             ; preds = %bb26
  %_29 = load i32, ptr %c, align 4, !dbg !6577
; call core::char::methods::<impl char>::is_digit
  %_28 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17h29934e8c7c7783a9E"(i32 %_29, i32 10) #13, !dbg !6578
  br i1 %_28, label %bb29, label %bb30, !dbg !6577

bb30:                                             ; preds = %bb27
  store ptr null, ptr %_0, align 4, !dbg !6579
  br label %bb59, !dbg !6580

bb29:                                             ; preds = %bb27
  store i32 0, ptr %len, align 4, !dbg !6582
  br label %bb31, !dbg !6583

bb31:                                             ; preds = %bb43, %bb29
  %_32 = load i32, ptr %c, align 4, !dbg !6584
; call core::char::methods::<impl char>::to_digit
  %32 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_32, i32 10) #13, !dbg !6585
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !6585
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !6585
  store i32 %33, ptr %_31, align 4, !dbg !6585
  %35 = getelementptr inbounds i8, ptr %_31, i32 4, !dbg !6585
  store i32 %34, ptr %35, align 4, !dbg !6585
  %_33 = load i32, ptr %_31, align 4, !dbg !6584
  %36 = getelementptr inbounds i8, ptr %_31, i32 4, !dbg !6584
  %37 = load i32, ptr %36, align 4, !dbg !6584
  %38 = trunc nuw i32 %_33 to i1, !dbg !6586
  br i1 %38, label %bb33, label %bb45, !dbg !6586

bb33:                                             ; preds = %bb31
  %39 = getelementptr inbounds i8, ptr %_31, i32 4, !dbg !6531
  %40 = load i32, ptr %39, align 4, !dbg !6531
  store i32 %40, ptr %d, align 4, !dbg !6531
  %_39 = load i32, ptr %len, align 4, !dbg !6587
; call core::num::<impl usize>::checked_mul
  %41 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %_39, i32 10) #13, !dbg !6588
  %_38.0 = extractvalue { i32, i32 } %41, 0, !dbg !6588
  %_38.1 = extractvalue { i32, i32 } %41, 1, !dbg !6588
; call core::option::Option<T>::and_then
  %42 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h88ced2e301a24869E"(i32 %_38.0, i32 %_38.1, ptr align 4 %d) #13, !dbg !6589
  %_37.0 = extractvalue { i32, i32 } %42, 0, !dbg !6589
  %_37.1 = extractvalue { i32, i32 } %42, 1, !dbg !6589
; call core::option::Option<T>::ok_or
  %43 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E"(i32 %_37.0, i32 %_37.1) #13, !dbg !6590
  %_36.0 = extractvalue { i32, i32 } %43, 0, !dbg !6590
  %_36.1 = extractvalue { i32, i32 } %43, 1, !dbg !6590
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %44 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %_36.0, i32 %_36.1) #13, !dbg !6587
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !6587
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !6587
  store i32 %45, ptr %_35, align 4, !dbg !6587
  %47 = getelementptr inbounds i8, ptr %_35, i32 4, !dbg !6587
  store i32 %46, ptr %47, align 4, !dbg !6587
  %_42 = load i32, ptr %_35, align 4, !dbg !6587
  %48 = getelementptr inbounds i8, ptr %_35, i32 4, !dbg !6587
  %49 = load i32, ptr %48, align 4, !dbg !6587
  %50 = trunc nuw i32 %_42 to i1, !dbg !6587
  br i1 %50, label %bb39, label %bb38, !dbg !6587

bb45:                                             ; preds = %bb31
  %_52 = load i32, ptr %len, align 4, !dbg !6591
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %51 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 0, i32 %_52) #13, !dbg !6592
  %_50.0 = extractvalue { i32, i32 } %51, 0, !dbg !6592
  %_50.1 = extractvalue { i32, i32 } %51, 1, !dbg !6592
  store i32 %_50.0, ptr %iter, align 4, !dbg !6592
  %52 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !6592
  store i32 %_50.1, ptr %52, align 4, !dbg !6592
  br label %bb47, !dbg !6593

bb39:                                             ; preds = %bb33
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h408a49701b14ff89E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 @alloc_ca1745c237cdf9b83a58d852671fb98f) #13, !dbg !6594
  br label %bb59, !dbg !6594

bb38:                                             ; preds = %bb33
  %53 = getelementptr inbounds i8, ptr %_35, i32 4, !dbg !6587
  %val4 = load i32, ptr %53, align 4, !dbg !6587
  store i32 %val4, ptr %val.dbg.spill5, align 4, !dbg !6587
    #dbg_declare(ptr %val.dbg.spill5, !6513, !DIExpression(), !6595)
  store i32 %val4, ptr %len, align 4, !dbg !6596
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_46 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %chars) #13, !dbg !6597
; call core::option::Option<T>::ok_or
  %_45 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he54f112823e43c6bE"(i32 %_46) #13, !dbg !6598
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %54 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd57a36708ee5cf11E"(i32 %_45) #13, !dbg !6599
  store i32 %54, ptr %_44, align 4, !dbg !6599
  %55 = load i32, ptr %_44, align 4, !dbg !6599
  %56 = icmp eq i32 %55, 1114112, !dbg !6599
  %_48 = select i1 %56, i32 1, i32 0, !dbg !6599
  %57 = trunc nuw i32 %_48 to i1, !dbg !6599
  br i1 %57, label %bb44, label %bb43, !dbg !6599

bb44:                                             ; preds = %bb38
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h408a49701b14ff89E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 @alloc_253d37b3faebd138ee039e94376d0b24) #13, !dbg !6600
  br label %bb59, !dbg !6600

bb43:                                             ; preds = %bb38
  %val6 = load i32, ptr %_44, align 4, !dbg !6599
  store i32 %val6, ptr %val.dbg.spill7, align 4, !dbg !6599
    #dbg_declare(ptr %val.dbg.spill7, !6517, !DIExpression(), !6601)
  store i32 %val6, ptr %c, align 4, !dbg !6602
  br label %bb31, !dbg !6583

bb47:                                             ; preds = %bb54, %bb45
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %58 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter) #13, !dbg !6532
  %_54.0 = extractvalue { i32, i32 } %58, 0, !dbg !6532
  %_54.1 = extractvalue { i32, i32 } %58, 1, !dbg !6532
  %59 = trunc nuw i32 %_54.0 to i1, !dbg !6532
  br i1 %59, label %bb49, label %bb50, !dbg !6532

bb49:                                             ; preds = %bb47
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_59 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %chars) #13, !dbg !6603
; call core::option::Option<T>::ok_or
  %_58 = call i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he54f112823e43c6bE"(i32 %_59) #13, !dbg !6604
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %60 = call i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd57a36708ee5cf11E"(i32 %_58) #13, !dbg !6605
  store i32 %60, ptr %_57, align 4, !dbg !6605
  %61 = load i32, ptr %_57, align 4, !dbg !6605
  %62 = icmp eq i32 %61, 1114112, !dbg !6605
  %_61 = select i1 %62, i32 1, i32 0, !dbg !6605
  %63 = trunc nuw i32 %_61 to i1, !dbg !6605
  br i1 %63, label %bb55, label %bb54, !dbg !6605

bb50:                                             ; preds = %bb47
  %64 = load i32, ptr %elements, align 4, !dbg !6606
  %_63.0 = add i32 %64, 1, !dbg !6606
  %_63.1 = icmp ult i32 %_63.0, %64, !dbg !6606
  br i1 %_63.1, label %panic, label %bb56, !dbg !6606

bb56:                                             ; preds = %bb50
  store i32 %_63.0, ptr %elements, align 4, !dbg !6606
  br label %bb26, !dbg !6569

panic:                                            ; preds = %bb50
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_54a311666ada05edbfbd08a055b9dd81) #14, !dbg !6606
  unreachable, !dbg !6606

bb55:                                             ; preds = %bb49
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h408a49701b14ff89E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 @alloc_3a67bb1890528be13a5469d9208956b0) #13, !dbg !6607
  br label %bb59, !dbg !6607

bb54:                                             ; preds = %bb49
  %val8 = load i32, ptr %_57, align 4, !dbg !6605
  store i32 %val8, ptr %val.dbg.spill9, align 4, !dbg !6605
    #dbg_declare(ptr %val.dbg.spill9, !6523, !DIExpression(), !6608)
  store i32 %val8, ptr %c, align 4, !dbg !6609
  br label %bb47, !dbg !6593

bb23:                                             ; No predecessors!
  unreachable, !dbg !6550
}

; rustc_demangle::legacy::demangle::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17ha87e1852dc5ba981E"(ptr align 1 %_1, i8 %c) unnamed_addr #0 !dbg !6610 {
start:
  %c.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6616, !DIExpression(), !6617)
  store i8 %c, ptr %c.dbg.spill, align 1
    #dbg_declare(ptr %c.dbg.spill, !6615, !DIExpression(), !6618)
  %_3 = and i8 %c, -128, !dbg !6619
  %_0 = icmp ne i8 %_3, 0, !dbg !6619
  ret i1 %_0, !dbg !6620
}

; rustc_demangle::legacy::demangle::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17hede4034f9e44097fE"(ptr align 4 %_1, i32 %len) unnamed_addr #0 !dbg !6621 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6642, !DIExpression(DW_OP_deref), !6643)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !6641, !DIExpression(), !6644)
  %_4 = load i32, ptr %_1, align 4, !dbg !6645
; call core::num::<impl usize>::checked_add
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %len, i32 %_4) #13, !dbg !6646
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !6646
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !6646
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !6647
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !6647
  ret { i32, i32 } %2, !dbg !6647
}

; rustc_demangle::Demangle::as_str
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN14rustc_demangle8Demangle6as_str17h78684f9f31ef46fbE(ptr align 4 %self) unnamed_addr #1 !dbg !6648 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6654, !DIExpression(), !6655)
  %0 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !6656
  %_0.0 = load ptr, ptr %0, align 4, !dbg !6656
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !6656
  %_0.1 = load i32, ptr %1, align 4, !dbg !6656
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !6657
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !6657
  ret { ptr, i32 } %3, !dbg !6657
}

; rustc_demangle::demangle
; Function Attrs: nounwind
define dso_local void @_ZN14rustc_demangle8demangle17hddccca6ff9567998E(ptr sret([32 x i8]) align 4 %_0, ptr align 1 %0, i32 %1) unnamed_addr #1 !dbg !6658 {
start:
  %s.dbg.spill3 = alloca [8 x i8], align 4
  %d.dbg.spill = alloca [8 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  %all_hex.dbg.spill = alloca [1 x i8], align 1
  %candidate.dbg.spill = alloca [8 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %llvm.dbg.spill = alloca [8 x i8], align 4
  %_42 = alloca [16 x i8], align 4
  %_41 = alloca [16 x i8], align 4
  %_33 = alloca [12 x i8], align 4
  %_27 = alloca [16 x i8], align 4
  %_26 = alloca [12 x i8], align 4
  %d = alloca [12 x i8], align 4
  %_21 = alloca [20 x i8], align 4
  %style = alloca [16 x i8], align 4
  %suffix = alloca [8 x i8], align 4
  %_15 = alloca [8 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %s = alloca [8 x i8], align 4
  store ptr %0, ptr %s, align 4
  %2 = getelementptr inbounds i8, ptr %s, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %s, !6662, !DIExpression(), !6681)
    #dbg_declare(ptr %suffix, !6671, !DIExpression(), !6682)
    #dbg_declare(ptr %style, !6673, !DIExpression(), !6683)
    #dbg_declare(ptr %d, !6675, !DIExpression(), !6684)
  store ptr @alloc_38cc8a1f551c002dbab45fc807dc614b, ptr %llvm.dbg.spill, align 4, !dbg !6685
  %3 = getelementptr inbounds i8, ptr %llvm.dbg.spill, i32 4, !dbg !6685
  store i32 6, ptr %3, align 4, !dbg !6685
    #dbg_declare(ptr %llvm.dbg.spill, !6663, !DIExpression(), !6686)
  %_4.0 = load ptr, ptr %s, align 4, !dbg !6687
  %4 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !6687
  %_4.1 = load i32, ptr %4, align 4, !dbg !6687
; call core::str::<impl str>::find
  %5 = call { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h5ff0cd4fe64abb93E"(ptr align 1 %_4.0, i32 %_4.1, ptr align 1 @alloc_38cc8a1f551c002dbab45fc807dc614b, i32 6) #13, !dbg !6688
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !6688
  %7 = extractvalue { i32, i32 } %5, 1, !dbg !6688
  store i32 %6, ptr %_3, align 4, !dbg !6688
  %8 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6688
  store i32 %7, ptr %8, align 4, !dbg !6688
  %_5 = load i32, ptr %_3, align 4, !dbg !6687
  %9 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6687
  %10 = load i32, ptr %9, align 4, !dbg !6687
  %11 = trunc nuw i32 %_5 to i1, !dbg !6689
  br i1 %11, label %bb2, label %bb10, !dbg !6689

bb2:                                              ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6690
  %i = load i32, ptr %12, align 4, !dbg !6690
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !6690
    #dbg_declare(ptr %i.dbg.spill, !6665, !DIExpression(), !6690)
  %_8.0 = load ptr, ptr %s, align 4, !dbg !6691
  %13 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !6691
  %_8.1 = load i32, ptr %13, align 4, !dbg !6691
; call core::str::<impl str>::len
  %_11 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 @alloc_38cc8a1f551c002dbab45fc807dc614b, i32 6) #13, !dbg !6692
  %_12.0 = add i32 %i, %_11, !dbg !6693
  %_12.1 = icmp ult i32 %_12.0, %i, !dbg !6693
  br i1 %_12.1, label %panic, label %bb4, !dbg !6693

bb10:                                             ; preds = %bb8, %bb4, %start
  store ptr inttoptr (i32 1 to ptr), ptr %suffix, align 4, !dbg !6694
  %14 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6694
  store i32 0, ptr %14, align 4, !dbg !6694
  %_22.0 = load ptr, ptr %s, align 4, !dbg !6695
  %15 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !6695
  %_22.1 = load i32, ptr %15, align 4, !dbg !6695
; call rustc_demangle::legacy::demangle
  call void @_ZN14rustc_demangle6legacy8demangle17hacd077b712c1531bE(ptr sret([20 x i8]) align 4 %_21, ptr align 1 %_22.0, i32 %_22.1) #13, !dbg !6696
  %16 = load ptr, ptr %_21, align 4, !dbg !6696
  %17 = ptrtoint ptr %16 to i32, !dbg !6696
  %18 = icmp eq i32 %17, 0, !dbg !6696
  %_23 = select i1 %18, i32 1, i32 0, !dbg !6696
  %19 = trunc nuw i32 %_23 to i1, !dbg !6697
  br i1 %19, label %bb13, label %bb14, !dbg !6697

bb4:                                              ; preds = %bb2
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %20 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_8.0, i32 %_8.1, i32 %_12.0, ptr align 4 @alloc_52c81fb79df78a7027127477ec085d7a) #13, !dbg !6698
  %candidate.0 = extractvalue { ptr, i32 } %20, 0, !dbg !6698
  %candidate.1 = extractvalue { ptr, i32 } %20, 1, !dbg !6698
  store ptr %candidate.0, ptr %candidate.dbg.spill, align 4, !dbg !6698
  %21 = getelementptr inbounds i8, ptr %candidate.dbg.spill, i32 4, !dbg !6698
  store i32 %candidate.1, ptr %21, align 4, !dbg !6698
    #dbg_declare(ptr %candidate.dbg.spill, !6667, !DIExpression(), !6699)
; call core::str::<impl str>::chars
  %22 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %candidate.0, i32 %candidate.1) #13, !dbg !6700
  %23 = extractvalue { ptr, ptr } %22, 0, !dbg !6700
  %24 = extractvalue { ptr, ptr } %22, 1, !dbg !6700
  store ptr %23, ptr %_15, align 4, !dbg !6700
  %25 = getelementptr inbounds i8, ptr %_15, i32 4, !dbg !6700
  store ptr %24, ptr %25, align 4, !dbg !6700
; call core::iter::traits::iterator::Iterator::all
  %all_hex = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h85cebea358c3df93E(ptr align 4 %_15) #13, !dbg !6701
  %26 = zext i1 %all_hex to i8, !dbg !6701
  store i8 %26, ptr %all_hex.dbg.spill, align 1, !dbg !6701
    #dbg_declare(ptr %all_hex.dbg.spill, !6669, !DIExpression(), !6702)
  br i1 %all_hex, label %bb8, label %bb10, !dbg !6703

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_9acee487d5c6838b9c5bbe5d2d0b41a9) #14, !dbg !6693
  unreachable, !dbg !6693

bb8:                                              ; preds = %bb4
  %_17.0 = load ptr, ptr %s, align 4, !dbg !6704
  %27 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !6704
  %_17.1 = load i32, ptr %27, align 4, !dbg !6704
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %28 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1 %_17.0, i32 %_17.1, i32 %i, ptr align 4 @alloc_7aa333270d32626655c32c7e8a5db1d5) #13, !dbg !6705
  %_16.0 = extractvalue { ptr, i32 } %28, 0, !dbg !6705
  %_16.1 = extractvalue { ptr, i32 } %28, 1, !dbg !6705
  store ptr %_16.0, ptr %s, align 4, !dbg !6706
  %29 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !6706
  store i32 %_16.1, ptr %29, align 4, !dbg !6706
  br label %bb10, !dbg !6707

bb13:                                             ; preds = %bb10
  %_28.0 = load ptr, ptr %s, align 4, !dbg !6708
  %30 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !6708
  %_28.1 = load i32, ptr %30, align 4, !dbg !6708
; call rustc_demangle::v0::demangle
  call void @_ZN14rustc_demangle2v08demangle17h12a06ca24fe18059E(ptr sret([16 x i8]) align 4 %_27, ptr align 1 %_28.0, i32 %_28.1) #13, !dbg !6709
  %31 = load ptr, ptr %_27, align 4, !dbg !6709
  %32 = ptrtoint ptr %31 to i32, !dbg !6709
  %33 = icmp eq i32 %32, 0, !dbg !6709
  %_30 = select i1 %33, i32 1, i32 0, !dbg !6709
  %34 = trunc nuw i32 %_30 to i1, !dbg !6710
  br i1 %34, label %bb16, label %bb18, !dbg !6710

bb14:                                             ; preds = %bb10
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %d, ptr align 4 %_21, i32 12, i1 false), !dbg !6711
  %35 = getelementptr inbounds i8, ptr %_21, i32 12, !dbg !6712
  %s.0 = load ptr, ptr %35, align 4, !dbg !6712
  %36 = getelementptr inbounds i8, ptr %35, i32 4, !dbg !6712
  %s.1 = load i32, ptr %36, align 4, !dbg !6712
  store ptr %s.0, ptr %s.dbg.spill, align 4, !dbg !6712
  %37 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4, !dbg !6712
  store i32 %s.1, ptr %37, align 4, !dbg !6712
    #dbg_declare(ptr %s.dbg.spill, !6677, !DIExpression(), !6713)
  store ptr %s.0, ptr %suffix, align 4, !dbg !6714
  %38 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6714
  store i32 %s.1, ptr %38, align 4, !dbg !6714
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_26, ptr align 4 %d, i32 12, i1 false), !dbg !6715
  %39 = getelementptr inbounds i8, ptr %style, i32 4, !dbg !6716
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %39, ptr align 4 %_26, i32 12, i1 false), !dbg !6716
  store i32 1, ptr %style, align 4, !dbg !6716
  br label %bb19, !dbg !6717

bb19:                                             ; preds = %bb17, %bb18, %bb14
  %_35.0 = load ptr, ptr %suffix, align 4, !dbg !6718
  %40 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6718
  %_35.1 = load i32, ptr %40, align 4, !dbg !6718
; call core::str::<impl str>::is_empty
  %_34 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_35.0, i32 %_35.1) #13, !dbg !6719
  br i1 %_34, label %bb26, label %bb21, !dbg !6718

bb16:                                             ; preds = %bb13
  %41 = getelementptr inbounds i8, ptr %_27, i32 4, !dbg !6709
  %42 = load i8, ptr %41, align 4, !dbg !6709
  %43 = trunc nuw i8 %42 to i1, !dbg !6709
  %_29 = zext i1 %43 to i32, !dbg !6709
  %44 = trunc nuw i32 %_29 to i1, !dbg !6710
  br i1 %44, label %bb17, label %bb17, !dbg !6710

bb18:                                             ; preds = %bb13
  %d.0 = load ptr, ptr %_27, align 4, !dbg !6720
  %45 = getelementptr inbounds i8, ptr %_27, i32 4, !dbg !6720
  %d.1 = load i32, ptr %45, align 4, !dbg !6720
  store ptr %d.0, ptr %d.dbg.spill, align 4, !dbg !6720
  %46 = getelementptr inbounds i8, ptr %d.dbg.spill, i32 4, !dbg !6720
  store i32 %d.1, ptr %46, align 4, !dbg !6720
    #dbg_declare(ptr %d.dbg.spill, !6678, !DIExpression(), !6721)
  %47 = getelementptr inbounds i8, ptr %_27, i32 8, !dbg !6722
  %s.01 = load ptr, ptr %47, align 4, !dbg !6722
  %48 = getelementptr inbounds i8, ptr %47, i32 4, !dbg !6722
  %s.12 = load i32, ptr %48, align 4, !dbg !6722
  store ptr %s.01, ptr %s.dbg.spill3, align 4, !dbg !6722
  %49 = getelementptr inbounds i8, ptr %s.dbg.spill3, i32 4, !dbg !6722
  store i32 %s.12, ptr %49, align 4, !dbg !6722
    #dbg_declare(ptr %s.dbg.spill3, !6680, !DIExpression(), !6723)
  store ptr %s.01, ptr %suffix, align 4, !dbg !6724
  %50 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6724
  store i32 %s.12, ptr %50, align 4, !dbg !6724
  %51 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !6725
  store ptr %d.0, ptr %51, align 4, !dbg !6725
  %52 = getelementptr inbounds i8, ptr %51, i32 4, !dbg !6725
  store i32 %d.1, ptr %52, align 4, !dbg !6725
  store ptr null, ptr %_33, align 4, !dbg !6725
  %53 = getelementptr inbounds i8, ptr %style, i32 4, !dbg !6726
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %53, ptr align 4 %_33, i32 12, i1 false), !dbg !6726
  store i32 1, ptr %style, align 4, !dbg !6726
  br label %bb19, !dbg !6727

bb17:                                             ; preds = %bb16, %bb16
  store i32 0, ptr %style, align 4, !dbg !6728
  br label %bb19, !dbg !6728

bb21:                                             ; preds = %bb19
  %_37.0 = load ptr, ptr %suffix, align 4, !dbg !6729
  %54 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6729
  %_37.1 = load i32, ptr %54, align 4, !dbg !6729
; call core::str::<impl str>::starts_with
  %_36 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E"(ptr align 1 %_37.0, i32 %_37.1, i32 46) #13, !dbg !6730
  br i1 %_36, label %bb23, label %bb25, !dbg !6729

bb26:                                             ; preds = %bb25, %bb23, %bb19
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_42, ptr align 4 %style, i32 16, i1 false), !dbg !6731
  %_43.0 = load ptr, ptr %s, align 4, !dbg !6732
  %55 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !6732
  %_43.1 = load i32, ptr %55, align 4, !dbg !6732
  %_44.0 = load ptr, ptr %suffix, align 4, !dbg !6733
  %56 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6733
  %_44.1 = load i32, ptr %56, align 4, !dbg !6733
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_42, i32 16, i1 false), !dbg !6734
  %57 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !6734
  store ptr %_43.0, ptr %57, align 4, !dbg !6734
  %58 = getelementptr inbounds i8, ptr %57, i32 4, !dbg !6734
  store i32 %_43.1, ptr %58, align 4, !dbg !6734
  %59 = getelementptr inbounds i8, ptr %_0, i32 24, !dbg !6734
  store ptr %_44.0, ptr %59, align 4, !dbg !6734
  %60 = getelementptr inbounds i8, ptr %59, i32 4, !dbg !6734
  store i32 %_44.1, ptr %60, align 4, !dbg !6734
  ret void, !dbg !6735

bb25:                                             ; preds = %bb23, %bb21
  store ptr inttoptr (i32 1 to ptr), ptr %suffix, align 4, !dbg !6736
  %61 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6736
  store i32 0, ptr %61, align 4, !dbg !6736
  store i32 0, ptr %_41, align 4, !dbg !6737
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %style, ptr align 4 %_41, i32 16, i1 false), !dbg !6738
  br label %bb26, !dbg !6739

bb23:                                             ; preds = %bb21
  %_39.0 = load ptr, ptr %suffix, align 4, !dbg !6740
  %62 = getelementptr inbounds i8, ptr %suffix, i32 4, !dbg !6740
  %_39.1 = load i32, ptr %62, align 4, !dbg !6740
; call rustc_demangle::is_symbol_like
  %_38 = call zeroext i1 @_ZN14rustc_demangle14is_symbol_like17h5659f9504ee70352E(ptr align 1 %_39.0, i32 %_39.1) #13, !dbg !6741
  br i1 %_38, label %bb26, label %bb25, !dbg !6741

bb12:                                             ; No predecessors!
  unreachable, !dbg !6742
}

; rustc_demangle::demangle::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN14rustc_demangle8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h8f3f56dfdaf25207E"(ptr align 1 %_1, i32 %c) unnamed_addr #0 !dbg !6743 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6751, !DIExpression(), !6752)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !6750, !DIExpression(), !6753)
  %_5 = icmp ule i32 65, %c, !dbg !6754
  br i1 %_5, label %bb4, label %bb1, !dbg !6754

bb1:                                              ; preds = %bb4, %start
  %_3 = icmp ule i32 48, %c, !dbg !6755
  br i1 %_3, label %bb3, label %bb2, !dbg !6755

bb4:                                              ; preds = %start
  %_6 = icmp ule i32 %c, 70, !dbg !6754
  br i1 %_6, label %bb5, label %bb1, !dbg !6754

bb5:                                              ; preds = %bb3, %bb4
  store i8 1, ptr %_0, align 1, !dbg !6756
  br label %bb6, !dbg !6756

bb2:                                              ; preds = %bb3, %bb1
  %0 = icmp eq i32 %c, 64, !dbg !6757
  %1 = zext i1 %0 to i8, !dbg !6757
  store i8 %1, ptr %_0, align 1, !dbg !6757
  br label %bb6, !dbg !6757

bb3:                                              ; preds = %bb1
  %_4 = icmp ule i32 %c, 57, !dbg !6755
  br i1 %_4, label %bb5, label %bb2, !dbg !6755

bb6:                                              ; preds = %bb5, %bb2
  %2 = load i8, ptr %_0, align 1, !dbg !6758
  %3 = trunc nuw i8 %2 to i1, !dbg !6758
  ret i1 %3, !dbg !6758
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3fa62735205e149dE"(ptr sret([8 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 %0) unnamed_addr #0 !dbg !6759 {
start:
  %t.dbg.spill.i = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %residual to i8
  store i8 %1, ptr %residual.dbg.spill, align 1
    #dbg_declare(ptr %residual.dbg.spill, !6765, !DIExpression(), !6770)
  %2 = zext i1 %residual to i8, !dbg !6771
  store i8 %2, ptr %e.dbg.spill, align 1, !dbg !6771
    #dbg_declare(ptr %e.dbg.spill, !6766, !DIExpression(), !6772)
  %3 = zext i1 %residual to i8
  store i8 %3, ptr %t.dbg.spill.i, align 1
    #dbg_declare(ptr %t.dbg.spill.i, !6773, !DIExpression(), !6782)
  %4 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6784
  %5 = zext i1 %residual to i8, !dbg !6784
  store i8 %5, ptr %4, align 1, !dbg !6784
  store i8 1, ptr %_0, align 4, !dbg !6784
  ret void, !dbg !6785
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h408a49701b14ff89E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %0) unnamed_addr #0 !dbg !6786 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !6790, !DIExpression(), !6795)
    #dbg_declare(ptr %e.dbg.spill, !6791, !DIExpression(), !6796)
    #dbg_declare(ptr poison, !6797, !DIExpression(), !6802)
  store ptr null, ptr %_0, align 4, !dbg !6804
  ret void, !dbg !6805
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h51cbba3b483e7d23E"(ptr sret([16 x i8]) align 8 %_0, i1 zeroext %residual, ptr align 4 %0) unnamed_addr #0 !dbg !6806 {
start:
  %t.dbg.spill.i = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %residual to i8
  store i8 %1, ptr %residual.dbg.spill, align 1
    #dbg_declare(ptr %residual.dbg.spill, !6810, !DIExpression(), !6814)
  %2 = zext i1 %residual to i8, !dbg !6815
  store i8 %2, ptr %e.dbg.spill, align 1, !dbg !6815
    #dbg_declare(ptr %e.dbg.spill, !6811, !DIExpression(), !6816)
  %3 = zext i1 %residual to i8
  store i8 %3, ptr %t.dbg.spill.i, align 1
    #dbg_declare(ptr %t.dbg.spill.i, !6773, !DIExpression(), !6817)
  %4 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6819
  %5 = zext i1 %residual to i8, !dbg !6819
  store i8 %5, ptr %4, align 1, !dbg !6819
  store i8 1, ptr %_0, align 8, !dbg !6819
  ret void, !dbg !6820
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h53fae95007a39ef6E"(ptr sret([8 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 %0) unnamed_addr #0 !dbg !6821 {
start:
  %t.dbg.spill.i = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %residual to i8
  store i8 %1, ptr %residual.dbg.spill, align 1
    #dbg_declare(ptr %residual.dbg.spill, !6825, !DIExpression(), !6829)
  %2 = zext i1 %residual to i8, !dbg !6830
  store i8 %2, ptr %e.dbg.spill, align 1, !dbg !6830
    #dbg_declare(ptr %e.dbg.spill, !6826, !DIExpression(), !6831)
  %3 = zext i1 %residual to i8
  store i8 %3, ptr %t.dbg.spill.i, align 1
    #dbg_declare(ptr %t.dbg.spill.i, !6773, !DIExpression(), !6832)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6834
  %5 = zext i1 %residual to i8, !dbg !6834
  store i8 %5, ptr %4, align 4, !dbg !6834
  store ptr null, ptr %_0, align 4, !dbg !6834
  ret void, !dbg !6835
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7dcb1b3996f19a6eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 %0) unnamed_addr #0 !dbg !6836 {
start:
  %t.dbg.spill.i = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %residual to i8
  store i8 %1, ptr %residual.dbg.spill, align 1
    #dbg_declare(ptr %residual.dbg.spill, !6840, !DIExpression(), !6844)
  %2 = zext i1 %residual to i8, !dbg !6845
  store i8 %2, ptr %e.dbg.spill, align 1, !dbg !6845
    #dbg_declare(ptr %e.dbg.spill, !6841, !DIExpression(), !6846)
  %3 = zext i1 %residual to i8
  store i8 %3, ptr %t.dbg.spill.i, align 1
    #dbg_declare(ptr %t.dbg.spill.i, !6773, !DIExpression(), !6847)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6849
  %5 = zext i1 %residual to i8, !dbg !6849
  store i8 %5, ptr %4, align 4, !dbg !6849
  store ptr null, ptr %_0, align 4, !dbg !6849
  ret void, !dbg !6850
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h84d107d40cde513aE"(i1 zeroext %residual, ptr align 4 %0) unnamed_addr #0 !dbg !6851 {
start:
  %t.dbg.spill.i = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %residual to i8
  store i8 %1, ptr %residual.dbg.spill, align 1
    #dbg_declare(ptr %residual.dbg.spill, !6855, !DIExpression(), !6859)
  %2 = zext i1 %residual to i8, !dbg !6860
  store i8 %2, ptr %e.dbg.spill, align 1, !dbg !6860
    #dbg_declare(ptr %e.dbg.spill, !6856, !DIExpression(), !6861)
  %3 = zext i1 %residual to i8
  store i8 %3, ptr %t.dbg.spill.i, align 1
    #dbg_declare(ptr %t.dbg.spill.i, !6773, !DIExpression(), !6862)
  %_0.1 = zext i1 %residual to i8, !dbg !6864
  %4 = insertvalue { i1, i8 } { i1 true, i8 poison }, i8 %_0.1, 1, !dbg !6865
  ret { i1, i8 } %4, !dbg !6865
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE"(ptr align 4 %0) unnamed_addr #0 !dbg !6866 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !6870, !DIExpression(), !6874)
    #dbg_declare(ptr %e.dbg.spill, !6871, !DIExpression(), !6875)
    #dbg_declare(ptr poison, !6797, !DIExpression(), !6876)
  ret i1 true, !dbg !6878
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h94e3dca9ee159bc4E"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 %0) unnamed_addr #0 !dbg !6879 {
start:
  %t.dbg.spill.i = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %residual to i8
  store i8 %1, ptr %residual.dbg.spill, align 1
    #dbg_declare(ptr %residual.dbg.spill, !6883, !DIExpression(), !6887)
  %2 = zext i1 %residual to i8, !dbg !6888
  store i8 %2, ptr %e.dbg.spill, align 1, !dbg !6888
    #dbg_declare(ptr %e.dbg.spill, !6884, !DIExpression(), !6889)
  %3 = zext i1 %residual to i8
  store i8 %3, ptr %t.dbg.spill.i, align 1
    #dbg_declare(ptr %t.dbg.spill.i, !6773, !DIExpression(), !6890)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6892
  %5 = zext i1 %residual to i8, !dbg !6892
  store i8 %5, ptr %4, align 4, !dbg !6892
  store ptr null, ptr %_0, align 4, !dbg !6892
  ret void, !dbg !6893
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hba1210a8c40db0c3E"(ptr align 4 %0) unnamed_addr #0 !dbg !6894 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !6898, !DIExpression(), !6902)
    #dbg_declare(ptr %e.dbg.spill, !6899, !DIExpression(), !6903)
    #dbg_declare(ptr poison, !6797, !DIExpression(), !6904)
  ret i32 1114112, !dbg !6906
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc3d3462676cac45eE"(ptr sret([16 x i8]) align 4 %_0, i1 zeroext %residual, ptr align 4 %0) unnamed_addr #0 !dbg !6907 {
start:
  %t.dbg.spill.i = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %residual to i8
  store i8 %1, ptr %residual.dbg.spill, align 1
    #dbg_declare(ptr %residual.dbg.spill, !6911, !DIExpression(), !6915)
  %2 = zext i1 %residual to i8, !dbg !6916
  store i8 %2, ptr %e.dbg.spill, align 1, !dbg !6916
    #dbg_declare(ptr %e.dbg.spill, !6912, !DIExpression(), !6917)
  %3 = zext i1 %residual to i8
  store i8 %3, ptr %t.dbg.spill.i, align 1
    #dbg_declare(ptr %t.dbg.spill.i, !6773, !DIExpression(), !6918)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6920
  %5 = zext i1 %residual to i8, !dbg !6920
  store i8 %5, ptr %4, align 4, !dbg !6920
  store ptr null, ptr %_0, align 4, !dbg !6920
  ret void, !dbg !6921
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E"(ptr align 4 %0) unnamed_addr #0 !dbg !6922 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !6926, !DIExpression(), !6931)
    #dbg_declare(ptr %e.dbg.spill, !6927, !DIExpression(), !6932)
    #dbg_declare(ptr poison, !6933, !DIExpression(), !6940)
  ret { i32, i32 } { i32 1, i32 undef }, !dbg !6942
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbbe8a96f2b4d53E"(ptr align 4 %0) unnamed_addr #0 !dbg !6943 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !6947, !DIExpression(), !6951)
    #dbg_declare(ptr %e.dbg.spill, !6948, !DIExpression(), !6952)
    #dbg_declare(ptr poison, !6933, !DIExpression(), !6953)
  ret i8 2, !dbg !6955
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() unnamed_addr #0 !dbg !6956 {
start:
  %b.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !6976, !DIExpression(), !6979)
    #dbg_declare(ptr %b.dbg.spill, !6977, !DIExpression(), !6980)
  ret i1 true, !dbg !6981
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17had059c36733d49c0E"(i32 %residual) unnamed_addr #0 !dbg !6982 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [4 x i8], align 4
  store i32 %residual, ptr %residual.dbg.spill, align 4
    #dbg_declare(ptr %residual.dbg.spill, !6999, !DIExpression(), !7002)
  store i32 %residual, ptr %b.dbg.spill, align 4, !dbg !7003
    #dbg_declare(ptr %b.dbg.spill, !7000, !DIExpression(), !7004)
  %0 = insertvalue { i32, i32 } { i32 1, i32 poison }, i32 %residual, 1, !dbg !7005
  ret { i32, i32 } %0, !dbg !7005
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8051f11f402ca3fdE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !7006 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7013, !DIExpression(), !7015)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !7014, !DIExpression(), !7016)
  %_3 = load ptr, ptr %self, align 4, !dbg !7017
; call core::fmt::num::<impl core::fmt::Debug for u8>::fmt
  %_0 = call zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h2ef17d5f0cd24fb3E"(ptr align 1 %_3, ptr align 4 %f) #13, !dbg !7018
  ret i1 %_0, !dbg !7019
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hdf0467d4d34a203fE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !7020 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7027, !DIExpression(), !7029)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !7028, !DIExpression(), !7030)
  %_3 = load ptr, ptr %self, align 4, !dbg !7031
; call <rustc_demangle::DemangleStyle as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN68_$LT$rustc_demangle..DemangleStyle$u20$as$u20$core..fmt..Display$GT$3fmt17hc56a78af5d178756E"(ptr align 4 %_3, ptr align 4 %f) #13, !dbg !7032
  ret i1 %_0, !dbg !7033
}

; <u64 as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h3fa6b670e2a56253E"(i64 %start1, i32 %n) unnamed_addr #0 !dbg !7034 {
start:
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %n.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [8 x i8], align 8
  store i64 %start1, ptr %start.dbg.spill, align 8
    #dbg_declare(ptr %start.dbg.spill, !7041, !DIExpression(), !7043)
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !7042, !DIExpression(), !7044)
  %_3 = zext i32 %n to i64, !dbg !7045
  store i64 %start1, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !7046, !DIExpression(), !7053)
  store i64 %_3, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !7052, !DIExpression(), !7055)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !7056
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add17h68ae21b5a98219c3E.exit", !dbg !7056

bb2.i:                                            ; preds = %start
; call core::num::<impl u64>::unchecked_add::precondition_check
  call void @"_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add18precondition_check17hbc02bab51f5d3cd5E"(i64 %start1, i64 %_3, ptr align 4 @alloc_dbfdd7441bdbbdad76ecc7188cefc7cb) #13, !dbg !7059
  br label %"_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add17h68ae21b5a98219c3E.exit", !dbg !7059

"_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add17h68ae21b5a98219c3E.exit": ; preds = %start, %bb2.i
  %_0.i = add nuw i64 %start1, %_3, !dbg !7060
  ret i64 %_0.i, !dbg !7061
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h80c722eaa0e19ab2E"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %f) unnamed_addr #1 !dbg !7062 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !7067, !DIExpression(), !7069)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !7068, !DIExpression(), !7070)
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h3d7f8458381edc22E(ptr sret([8 x i8]) align 4 %_5, ptr align 4 %f) #13, !dbg !7071
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !7072
  %_6.0 = extractvalue { ptr, ptr } %1, 0, !dbg !7072
  %_6.1 = extractvalue { ptr, ptr } %1, 1, !dbg !7072
; call core::fmt::builders::DebugList::entries
  %_3 = call align 4 ptr @_ZN4core3fmt8builders9DebugList7entries17hf4e064138c87dbd7E(ptr align 4 %_5, ptr %_6.0, ptr %_6.1) #13, !dbg !7073
; call core::fmt::builders::DebugList::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h33dc0bd1778972c3E(ptr align 4 %_3) #13, !dbg !7074
  ret i1 %_0, !dbg !7075
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h667e354051da0bf2E"(ptr sret([20 x i8]) align 4 %_0, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #0 !dbg !7076 {
start:
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [0 x i8], align 1
  %_3 = alloca [20 x i8], align 4
    #dbg_declare(ptr %self.dbg.spill, !7101, !DIExpression(), !7103)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %0, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !7102, !DIExpression(), !7104)
; call <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17heb499a14c747ce7fE"(ptr sret([20 x i8]) align 4 %_3, ptr align 1 %haystack.0, i32 %haystack.1) #13, !dbg !7105
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_3, i32 20, i1 false), !dbg !7106
  ret void, !dbg !7107
}

; core::intrinsics::cold_path
; Function Attrs: cold nounwind
define internal void @_ZN4core10intrinsics9cold_path17hf80992cbedfa8b2cE() unnamed_addr #2 !dbg !7108 {
start:
  ret void, !dbg !7113
}

; core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h60e79f921649fd3dE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !7114 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7122, !DIExpression(), !7124)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !7123, !DIExpression(), !7125)
  %_3 = load i8, ptr %self, align 1, !dbg !7126
  %_4 = load i8, ptr %other, align 1, !dbg !7127
  %_0 = icmp eq i8 %_3, %_4, !dbg !7126
  ret i1 %_0, !dbg !7128
}

; core::cmp::impls::<impl core::cmp::PartialEq for bool>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$bool$GT$2eq17h30b4d001eff5ac0bE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !7129 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7134, !DIExpression(), !7136)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !7135, !DIExpression(), !7137)
  %0 = load i8, ptr %self, align 1, !dbg !7138
  %_3 = trunc nuw i8 %0 to i1, !dbg !7138
  %1 = load i8, ptr %other, align 1, !dbg !7139
  %_4 = trunc nuw i8 %1 to i1, !dbg !7139
  %_0 = icmp eq i1 %_3, %_4, !dbg !7138
  ret i1 %_0, !dbg !7140
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h98a84bbf1f32ec72E"(ptr align 1 %self, ptr align 1 %_other) unnamed_addr #0 !dbg !7141 {
start:
  %_other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7146, !DIExpression(), !7148)
  store ptr %_other, ptr %_other.dbg.spill, align 4
    #dbg_declare(ptr %_other.dbg.spill, !7147, !DIExpression(), !7149)
  ret i1 true, !dbg !7150
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h0c76c58be8d3cc8aE"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #0 !dbg !7151 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7157, !DIExpression(), !7162)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !7158, !DIExpression(), !7163)
  %_3 = load ptr, ptr %self, align 4, !dbg !7164
  %_4 = load ptr, ptr %other, align 4, !dbg !7165
; call core::cmp::impls::<impl core::cmp::PartialEq for bool>::eq
  %_0 = call zeroext i1 @"_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$bool$GT$2eq17h30b4d001eff5ac0bE"(ptr align 1 %_3, ptr align 1 %_4) #13, !dbg !7166
  ret i1 %_0, !dbg !7167
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h4c994e93616ba6c2E"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #0 !dbg !7168 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7173, !DIExpression(), !7177)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !7174, !DIExpression(), !7178)
  %_3 = load ptr, ptr %self, align 4, !dbg !7179
  %_4 = load ptr, ptr %other, align 4, !dbg !7180
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %_0 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h98a84bbf1f32ec72E"(ptr align 1 %_3, ptr align 1 %_4) #13, !dbg !7181
  ret i1 %_0, !dbg !7182
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hc5171afe0a09d45aE"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #0 !dbg !7183 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7190, !DIExpression(), !7195)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !7191, !DIExpression(), !7196)
  %_3 = load ptr, ptr %self, align 4, !dbg !7197
  %_4 = load ptr, ptr %other, align 4, !dbg !7198
; call core::cmp::impls::<impl core::cmp::PartialEq<&mut B> for &mut A>::eq
  %_0 = call zeroext i1 @"_ZN4core3cmp5impls85_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$mut$u20$B$GT$$u20$for$u20$$RF$mut$u20$A$GT$2eq17h1fb842233c166a00E"(ptr align 4 %_3, ptr align 4 %_4) #13, !dbg !7199
  ret i1 %_0, !dbg !7200
}

; core::cmp::impls::<impl core::cmp::PartialEq<&mut B> for &mut A>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3cmp5impls85_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$mut$u20$B$GT$$u20$for$u20$$RF$mut$u20$A$GT$2eq17h1fb842233c166a00E"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #0 !dbg !7201 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7206, !DIExpression(), !7211)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !7207, !DIExpression(), !7212)
  %_5 = load ptr, ptr %self, align 4, !dbg !7213
  %_6 = load ptr, ptr %other, align 4, !dbg !7214
; call <rustc_demangle::v0::ParseError as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..v0..ParseError$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf189bb8e1965f47dE"(ptr align 1 %_5, ptr align 1 %_6) #13, !dbg !7215
  ret i1 %_0, !dbg !7216
}

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1_formatted
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$16new_v1_formatted17h59f0ab9a669843b2E"(ptr sret([24 x i8]) align 4 %_0, ptr align 4 %pieces.0, i32 %pieces.1, ptr align 4 %args.0, i32 %args.1, ptr align 4 %fmt.0, i32 %fmt.1) unnamed_addr #0 !dbg !7217 {
start:
  %fmt.dbg.spill = alloca [8 x i8], align 4
  %args.dbg.spill = alloca [8 x i8], align 4
  %pieces.dbg.spill = alloca [8 x i8], align 4
  store ptr %pieces.0, ptr %pieces.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %pieces.dbg.spill, i32 4
  store i32 %pieces.1, ptr %0, align 4
    #dbg_declare(ptr %pieces.dbg.spill, !7277, !DIExpression(), !7280)
  store ptr %args.0, ptr %args.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %args.dbg.spill, i32 4
  store i32 %args.1, ptr %1, align 4
    #dbg_declare(ptr %args.dbg.spill, !7278, !DIExpression(), !7281)
  store ptr %fmt.0, ptr %fmt.dbg.spill, align 4
  %2 = getelementptr inbounds i8, ptr %fmt.dbg.spill, i32 4
  store i32 %fmt.1, ptr %2, align 4
    #dbg_declare(ptr %fmt.dbg.spill, !7279, !DIExpression(), !7282)
  store ptr %pieces.0, ptr %_0, align 4, !dbg !7283
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7283
  store i32 %pieces.1, ptr %3, align 4, !dbg !7283
  %4 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !7283
  store ptr %fmt.0, ptr %4, align 4, !dbg !7283
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !7283
  store i32 %fmt.1, ptr %5, align 4, !dbg !7283
  %6 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !7283
  store ptr %args.0, ptr %6, align 4, !dbg !7283
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !7283
  store i32 %args.1, ptr %7, align 4, !dbg !7283
  ret void, !dbg !7284
}

; core::fmt::rt::Argument::new_display
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3fmt2rt8Argument11new_display17ha32fa88f3dd46c3bE(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %x) unnamed_addr #0 !dbg !7285 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !7292, !DIExpression(), !7296)
; call core::ptr::non_null::NonNull<T>::from_ref
  %_4 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17he281a6a654334f5eE"(ptr align 4 %x) #13, !dbg !7297
; call core::ptr::non_null::NonNull<T>::cast
  %_3 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5b535dc032b49aeE"(ptr %_4) #13, !dbg !7298
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hdf0467d4d34a203fE", ptr %f.dbg.spill, align 4, !dbg !7299
    #dbg_declare(ptr %f.dbg.spill, !7293, !DIExpression(), !7300)
  store ptr %_3, ptr %_2, align 4, !dbg !7301
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !7301
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hdf0467d4d34a203fE", ptr %0, align 4, !dbg !7301
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 8, i1 false), !dbg !7302
  ret void, !dbg !7303
}

; core::fmt::rt::Argument::new_debug
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3fmt2rt8Argument9new_debug17h21a8bd79f2bc8b2dE(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %x) unnamed_addr #0 !dbg !7304 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !7309, !DIExpression(), !7315)
; call core::ptr::non_null::NonNull<T>::from_ref
  %_4 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17heaa798669a37b198E"(ptr align 4 %x) #13, !dbg !7316
; call core::ptr::non_null::NonNull<T>::cast
  %_3 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h116c3c49f5237742E"(ptr %_4) #13, !dbg !7317
  store ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbffdc5d01bf5408bE", ptr %f.dbg.spill, align 4, !dbg !7318
    #dbg_declare(ptr %f.dbg.spill, !7310, !DIExpression(), !7319)
  store ptr %_3, ptr %_2, align 4, !dbg !7320
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !7320
  store ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbffdc5d01bf5408bE", ptr %0, align 4, !dbg !7320
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 8, i1 false), !dbg !7321
  ret void, !dbg !7322
}

; core::fmt::rt::Argument::new_debug
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3fmt2rt8Argument9new_debug17h6d2f5f061bbf7995E(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %x) unnamed_addr #0 !dbg !7323 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !7330, !DIExpression(), !7336)
; call core::ptr::non_null::NonNull<T>::from_ref
  %_4 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17hceb4a26181774aa2E"(ptr align 4 %x) #13, !dbg !7337
; call core::ptr::non_null::NonNull<T>::cast
  %_3 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hcb15b3d53cd50a46E"(ptr %_4) #13, !dbg !7338
  store ptr @"_ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hffb09e4c131fa7cbE", ptr %f.dbg.spill, align 4, !dbg !7339
    #dbg_declare(ptr %f.dbg.spill, !7331, !DIExpression(), !7340)
  store ptr %_3, ptr %_2, align 4, !dbg !7341
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !7341
  store ptr @"_ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hffb09e4c131fa7cbE", ptr %0, align 4, !dbg !7341
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 8, i1 false), !dbg !7342
  ret void, !dbg !7343
}

; core::fmt::num::<impl core::fmt::Debug for u8>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h2ef17d5f0cd24fb3E"(ptr align 1 %self, ptr align 4 %f) unnamed_addr #0 !dbg !7344 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7351, !DIExpression(), !7353)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !7352, !DIExpression(), !7354)
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72b54bf2b5971ea0E(ptr align 4 %f) #13, !dbg !7355
  br i1 %_3, label %bb2, label %bb3, !dbg !7356

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hda8089ad17629515E(ptr align 4 %f) #13, !dbg !7357
  br i1 %_5, label %bb5, label %bb6, !dbg !7358

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17hf19d67508dd58d4aE"(ptr align 1 %self, ptr align 4 %f) #13, !dbg !7359
  %1 = zext i1 %0 to i8, !dbg !7359
  store i8 %1, ptr %_0, align 1, !dbg !7359
  br label %bb7, !dbg !7359

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
  %2 = call zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hf2721191f040b59aE"(ptr align 1 %self, ptr align 4 %f) #13, !dbg !7360
  %3 = zext i1 %2 to i8, !dbg !7360
  store i8 %3, ptr %_0, align 1, !dbg !7360
  br label %bb7, !dbg !7360

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h3a28df7a448ec4e8E"(ptr align 1 %self, ptr align 4 %f) #13, !dbg !7361
  %5 = zext i1 %4 to i8, !dbg !7361
  store i8 %5, ptr %_0, align 1, !dbg !7361
  br label %bb7, !dbg !7361

bb7:                                              ; preds = %bb2, %bb5, %bb6
  %6 = load i8, ptr %_0, align 1, !dbg !7362
  %7 = trunc nuw i8 %6 to i1, !dbg !7362
  ret i1 %7, !dbg !7362
}

; core::fmt::Write::write_char
; Function Attrs: nounwind
define dso_local zeroext i1 @_ZN4core3fmt5Write10write_char17h662c5676ef1cb115E(ptr align 4 %self, i32 %c) unnamed_addr #1 !dbg !7363 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [4 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7369, !DIExpression(), !7373)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !7370, !DIExpression(), !7374)
  call void @llvm.memset.p0.i32(ptr align 1 %_7, i8 0, i32 4, i1 false), !dbg !7375
; call core::char::methods::<impl char>::encode_utf8
  %0 = call { ptr, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h10ba4a67745ca36cE"(i32 %c, ptr align 1 %_7, i32 4) #13, !dbg !7376
  %_4.0 = extractvalue { ptr, i32 } %0, 0, !dbg !7376
  %_4.1 = extractvalue { ptr, i32 } %0, 1, !dbg !7376
; call <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str
  %_0 = call zeroext i1 @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h15d60bbff95f40b2E"(ptr align 4 %self, ptr align 1 %_4.0, i32 %_4.1) #13, !dbg !7377
  ret i1 %_0, !dbg !7378
}

; core::fmt::Write::write_fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @_ZN4core3fmt5Write9write_fmt17h61407c8efb4119f8E(ptr align 4 %self, ptr align 4 %args) unnamed_addr #1 !dbg !7379 {
start:
  %0 = alloca [24 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7383, !DIExpression(), !7385)
    #dbg_declare(ptr %args, !7384, !DIExpression(), !7386)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 4 %args, i32 24, i1 false), !dbg !7387
; call <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
  %_0 = call zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h6358aa247e5ddb59E"(ptr align 4 %self, ptr align 4 %0) #13, !dbg !7388
  ret i1 %_0, !dbg !7389
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nounwind
define dso_local align 4 ptr @_ZN4core3fmt8builders9DebugList7entries17hf4e064138c87dbd7E(ptr align 4 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 !dbg !7390 {
start:
  %entries.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %entry = alloca [4 x i8], align 4
  %_5 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7408, !DIExpression(), !7414)
  store ptr %entries.0, ptr %entries.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %entries.dbg.spill, i32 4
  store ptr %entries.1, ptr %0, align 4
    #dbg_declare(ptr %entries.dbg.spill, !7409, !DIExpression(), !7415)
    #dbg_declare(ptr %iter, !7410, !DIExpression(), !7416)
    #dbg_declare(ptr %entry, !7412, !DIExpression(), !7417)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf3ad8c8bcc5e89e6E"(ptr %entries.0, ptr %entries.1) #13, !dbg !7418
  %_3.0 = extractvalue { ptr, ptr } %1, 0, !dbg !7418
  %_3.1 = extractvalue { ptr, ptr } %1, 1, !dbg !7418
  store ptr %_3.0, ptr %iter, align 4, !dbg !7418
  %2 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !7418
  store ptr %_3.1, ptr %2, align 4, !dbg !7418
  br label %bb2, !dbg !7419

bb2:                                              ; preds = %bb5, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #13, !dbg !7416
  store ptr %3, ptr %_5, align 4, !dbg !7416
  %4 = load ptr, ptr %_5, align 4, !dbg !7416
  %5 = ptrtoint ptr %4 to i32, !dbg !7416
  %6 = icmp eq i32 %5, 0, !dbg !7416
  %_7 = select i1 %6, i32 0, i32 1, !dbg !7416
  %7 = trunc nuw i32 %_7 to i1, !dbg !7416
  br i1 %7, label %bb5, label %bb6, !dbg !7416

bb5:                                              ; preds = %bb2
  %8 = load ptr, ptr %_5, align 4, !dbg !7420
  store ptr %8, ptr %entry, align 4, !dbg !7420
; call core::fmt::builders::DebugList::entry
  %_9 = call align 4 ptr @_ZN4core3fmt8builders9DebugList5entry17h12e33360041c77efE(ptr align 4 %self, ptr align 1 %entry, ptr align 4 @vtable.0) #13, !dbg !7421
  br label %bb2, !dbg !7422

bb6:                                              ; preds = %bb2
  ret ptr %self, !dbg !7423

bb4:                                              ; No predecessors!
  unreachable, !dbg !7416
}

; core::fmt::Arguments::as_statically_known_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3fmt9Arguments23as_statically_known_str17hc982a5d21bdfbd93E(ptr align 4 %self) unnamed_addr #0 !dbg !7424 {
start:
  %0 = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %s = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7430, !DIExpression(), !7433)
    #dbg_declare(ptr %s, !7431, !DIExpression(), !7434)
; call core::fmt::Arguments::as_str
  %1 = call { ptr, i32 } @_ZN4core3fmt9Arguments6as_str17hf7edd833e326cd3fE(ptr align 4 %self) #13, !dbg !7435
  %2 = extractvalue { ptr, i32 } %1, 0, !dbg !7435
  %3 = extractvalue { ptr, i32 } %1, 1, !dbg !7435
  store ptr %2, ptr %s, align 4, !dbg !7435
  %4 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !7435
  store i32 %3, ptr %4, align 4, !dbg !7435
; call core::option::Option<T>::is_some
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h59be6c2f34b18cc5E"(ptr align 4 %s) #13, !dbg !7436
  %5 = call i1 @llvm.is.constant.i1(i1 %_4), !dbg !7437
  %6 = zext i1 %5 to i8, !dbg !7437
  store i8 %6, ptr %0, align 1, !dbg !7437
  %7 = load i8, ptr %0, align 1, !dbg !7437
  %_3 = trunc nuw i8 %7 to i1, !dbg !7437
  br i1 %_3, label %bb4, label %bb5, !dbg !7437

bb5:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !7438
  br label %bb6, !dbg !7439

bb4:                                              ; preds = %start
  %8 = load ptr, ptr %s, align 4, !dbg !7440
  %9 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !7440
  %10 = load i32, ptr %9, align 4, !dbg !7440
  store ptr %8, ptr %_0, align 4, !dbg !7440
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7440
  store i32 %10, ptr %11, align 4, !dbg !7440
  br label %bb6, !dbg !7439

bb6:                                              ; preds = %bb4, %bb5
  %12 = load ptr, ptr %_0, align 4, !dbg !7441
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7441
  %14 = load i32, ptr %13, align 4, !dbg !7441
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0, !dbg !7441
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1, !dbg !7441
  ret { ptr, i32 } %16, !dbg !7441
}

; core::fmt::Arguments::as_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3fmt9Arguments6as_str17hf7edd833e326cd3fE(ptr align 4 %self) unnamed_addr #0 !dbg !7442 {
start:
  %s.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [16 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7445, !DIExpression(), !7448)
  %_3.0 = load ptr, ptr %self, align 4, !dbg !7449
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7449
  %_3.1 = load i32, ptr %0, align 4, !dbg !7449
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !7450
  %_4.0 = load ptr, ptr %1, align 4, !dbg !7450
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !7450
  %_4.1 = load i32, ptr %2, align 4, !dbg !7450
  store ptr %_3.0, ptr %_2, align 4, !dbg !7451
  %3 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !7451
  store i32 %_3.1, ptr %3, align 4, !dbg !7451
  %4 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !7451
  store ptr %_4.0, ptr %4, align 4, !dbg !7451
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !7451
  store i32 %_4.1, ptr %5, align 4, !dbg !7451
  %_15.0 = load ptr, ptr %_2, align 4, !dbg !7452
  %6 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !7452
  %_15.1 = load i32, ptr %6, align 4, !dbg !7452
  %7 = icmp eq i32 %_15.1, 0, !dbg !7452
  br i1 %7, label %bb2, label %bb3, !dbg !7452

bb2:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !7453
  %_16.0 = load ptr, ptr %8, align 4, !dbg !7453
  %9 = getelementptr inbounds i8, ptr %8, i32 4, !dbg !7453
  %_16.1 = load i32, ptr %9, align 4, !dbg !7453
  %10 = icmp eq i32 %_16.1, 0, !dbg !7453
  br i1 %10, label %bb6, label %bb1, !dbg !7453

bb3:                                              ; preds = %start
  %_17.0 = load ptr, ptr %_2, align 4, !dbg !7454
  %11 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !7454
  %_17.1 = load i32, ptr %11, align 4, !dbg !7454
  %12 = icmp eq i32 %_17.1, 1, !dbg !7454
  br i1 %12, label %bb4, label %bb1, !dbg !7454

bb6:                                              ; preds = %bb2
  store ptr inttoptr (i32 1 to ptr), ptr %_0, align 4, !dbg !7455
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7455
  store i32 0, ptr %13, align 4, !dbg !7455
  br label %bb7, !dbg !7456

bb1:                                              ; preds = %bb4, %bb3, %bb2
  store ptr null, ptr %_0, align 4, !dbg !7457
  br label %bb7, !dbg !7457

bb7:                                              ; preds = %bb1, %bb5, %bb6
  %14 = load ptr, ptr %_0, align 4, !dbg !7458
  %15 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7458
  %16 = load i32, ptr %15, align 4, !dbg !7458
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0, !dbg !7458
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1, !dbg !7458
  ret { ptr, i32 } %18, !dbg !7458

bb4:                                              ; preds = %bb3
  %19 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !7459
  %_18.0 = load ptr, ptr %19, align 4, !dbg !7459
  %20 = getelementptr inbounds i8, ptr %19, i32 4, !dbg !7459
  %_18.1 = load i32, ptr %20, align 4, !dbg !7459
  %21 = icmp eq i32 %_18.1, 0, !dbg !7459
  br i1 %21, label %bb5, label %bb1, !dbg !7459

bb5:                                              ; preds = %bb4
  %_19.0 = load ptr, ptr %_2, align 4, !dbg !7460
  %22 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !7460
  %_19.1 = load i32, ptr %22, align 4, !dbg !7460
  %s = getelementptr inbounds nuw { ptr, i32 }, ptr %_19.0, i32 0, !dbg !7460
  store ptr %s, ptr %s.dbg.spill, align 4, !dbg !7460
    #dbg_declare(ptr %s.dbg.spill, !7446, !DIExpression(), !7461)
  %_20.0 = load ptr, ptr %s, align 4, !dbg !7462
  %23 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !7462
  %_20.1 = load i32, ptr %23, align 4, !dbg !7462
  store ptr %_20.0, ptr %_0, align 4, !dbg !7463
  %24 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7463
  store i32 %_20.1, ptr %24, align 4, !dbg !7463
  br label %bb7, !dbg !7464
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local { i8, i8 } @_ZN4core3mem7replace17h4861124eed80d67bE(ptr align 1 %dest, i8 %src.0, i8 %src.1) unnamed_addr #0 !dbg !7465 {
start:
  %result.dbg.spill = alloca [2 x i8], align 1
  %src.dbg.spill = alloca [2 x i8], align 1
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !7472, !DIExpression(), !7478)
  store i8 %src.0, ptr %src.dbg.spill, align 1
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 1
  store i8 %src.1, ptr %0, align 1
    #dbg_declare(ptr %src.dbg.spill, !7473, !DIExpression(), !7479)
  %result.0 = load i8, ptr %dest, align 1, !dbg !7480
  %1 = getelementptr inbounds i8, ptr %dest, i32 1, !dbg !7480
  %result.1 = load i8, ptr %1, align 1, !dbg !7480
  store i8 %result.0, ptr %result.dbg.spill, align 1, !dbg !7480
  %2 = getelementptr inbounds i8, ptr %result.dbg.spill, i32 1, !dbg !7480
  store i8 %result.1, ptr %2, align 1, !dbg !7480
    #dbg_declare(ptr %result.dbg.spill, !7474, !DIExpression(), !7481)
  store i8 %src.0, ptr %dest, align 1, !dbg !7482
  %3 = getelementptr inbounds i8, ptr %dest, i32 1, !dbg !7482
  store i8 %src.1, ptr %3, align 1, !dbg !7482
  %4 = insertvalue { i8, i8 } poison, i8 %result.0, 0, !dbg !7483
  %5 = insertvalue { i8, i8 } %4, i8 %result.1, 1, !dbg !7483
  ret { i8, i8 } %5, !dbg !7483
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @_ZN4core3mem7replace17h527ec1d7ad9e7f53E(ptr align 4 %dest, ptr align 4 %src) unnamed_addr #0 !dbg !7484 {
start:
  %result.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !7489, !DIExpression(), !7495)
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !7490, !DIExpression(), !7496)
  %result = load ptr, ptr %dest, align 4, !dbg !7497
  store ptr %result, ptr %result.dbg.spill, align 4, !dbg !7497
    #dbg_declare(ptr %result.dbg.spill, !7491, !DIExpression(), !7498)
  store ptr %src, ptr %dest, align 4, !dbg !7499
  ret ptr %result, !dbg !7500
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem7replace17he084a17bb7843eaeE(ptr align 4 %dest, i32 %src) unnamed_addr #0 !dbg !7501 {
start:
  %result.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !7506, !DIExpression(), !7511)
  store i32 %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !7507, !DIExpression(), !7512)
  %result = load i32, ptr %dest, align 4, !dbg !7513
  store i32 %result, ptr %result.dbg.spill, align 4, !dbg !7513
    #dbg_declare(ptr %result.dbg.spill, !7508, !DIExpression(), !7514)
  store i32 %src, ptr %dest, align 4, !dbg !7515
  ret i32 %result, !dbg !7516
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3mem7replace17hed4e539074d1fd88E(ptr sret([16 x i8]) align 4 %result, ptr align 4 %dest, ptr align 4 %src) unnamed_addr #0 !dbg !7517 {
start:
    #dbg_declare(ptr %result, !7524, !DIExpression(), !7528)
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !7522, !DIExpression(), !7529)
    #dbg_declare(ptr %src, !7523, !DIExpression(), !7530)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %result, ptr align 4 %dest, i32 16, i1 false), !dbg !7531
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %dest, ptr align 4 %src, i32 16, i1 false), !dbg !7532
  ret void, !dbg !7533
}

; core::num::<impl u8>::is_utf8_char_boundary
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17h2418698cb1b1e55fE"(i8 %self) unnamed_addr #0 !dbg !7534 {
start:
  %self.dbg.spill = alloca [1 x i8], align 1
  store i8 %self, ptr %self.dbg.spill, align 1
    #dbg_declare(ptr %self.dbg.spill, !7540, !DIExpression(), !7541)
  %_0 = icmp sge i8 %self, -64, !dbg !7542
  ret i1 %_0, !dbg !7543
}

; core::num::<impl u32>::checked_add
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17ha1f3cf4b9e7994beE"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !7544 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7549, !DIExpression(), !7551)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !7550, !DIExpression(), !7552)
  %_5.0 = add i32 %self, %rhs, !dbg !7553
  %_5.1 = icmp ult i32 %_5.0, %self, !dbg !7553
  %0 = zext i1 %_5.1 to i8
  store i8 %0, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !7554, !DIExpression(), !7559)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !7561

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !7562
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7563

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !7564
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7563

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %1 = load i8, ptr %_0.i, align 1, !dbg !7565
  %2 = trunc nuw i8 %1 to i1, !dbg !7565
  br i1 %2, label %bb2, label %bb3, !dbg !7566

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %_6 = add nuw i32 %self, %rhs, !dbg !7567
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7568
  store i32 %_6, ptr %3, align 4, !dbg !7568
  store i32 1, ptr %_0, align 4, !dbg !7568
  br label %bb4, !dbg !7569

bb2:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !7570
  br label %bb4, !dbg !7569

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4, !dbg !7571
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7571
  %6 = load i32, ptr %5, align 4, !dbg !7571
  %7 = insertvalue { i32, i32 } poison, i32 %4, 0, !dbg !7571
  %8 = insertvalue { i32, i32 } %7, i32 %6, 1, !dbg !7571
  ret { i32, i32 } %8, !dbg !7571
}

; core::num::<impl u32>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_mul17h999bf06362575789E"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !7572 {
start:
  %b.dbg.spill.i1 = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [4 x i8], align 4
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7574, !DIExpression(), !7579)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !7575, !DIExpression(), !7580)
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !7581, !DIExpression(), !7594)
  store i32 %rhs, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !7590, !DIExpression(), !7596)
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %self, i32 %rhs), !dbg !7597
  %_5.0.i = extractvalue { i32, i1 } %0, 0, !dbg !7597
  %_5.1.i = extractvalue { i32, i1 } %0, 1, !dbg !7597
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !7598
    #dbg_declare(ptr %a.dbg.spill.i, !7591, !DIExpression(), !7599)
  %1 = zext i1 %_5.1.i to i8, !dbg !7600
  store i8 %1, ptr %b.dbg.spill.i1, align 1, !dbg !7600
    #dbg_declare(ptr %b.dbg.spill.i1, !7593, !DIExpression(), !7601)
  %_5.0 = extractvalue { i32, i1 } %0, 0, !dbg !7602
  %_5.1 = extractvalue { i32, i1 } %0, 1, !dbg !7602
  store i32 %_5.0, ptr %a.dbg.spill, align 4, !dbg !7603
    #dbg_declare(ptr %a.dbg.spill, !7576, !DIExpression(), !7604)
  %2 = zext i1 %_5.1 to i8, !dbg !7605
  store i8 %2, ptr %b.dbg.spill, align 1, !dbg !7605
    #dbg_declare(ptr %b.dbg.spill, !7578, !DIExpression(), !7606)
  %3 = zext i1 %_5.1 to i8
  store i8 %3, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !7554, !DIExpression(), !7607)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !7609

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !7610
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7611

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !7612
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7611

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %4 = load i8, ptr %_0.i, align 1, !dbg !7613
  %5 = trunc nuw i8 %4 to i1, !dbg !7613
  br i1 %5, label %bb3, label %bb4, !dbg !7614

bb4:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7615
  store i32 %_5.0, ptr %6, align 4, !dbg !7615
  store i32 1, ptr %_0, align 4, !dbg !7615
  br label %bb5, !dbg !7616

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !7617
  br label %bb5, !dbg !7616

bb5:                                              ; preds = %bb3, %bb4
  %7 = load i32, ptr %_0, align 4, !dbg !7618
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7618
  %9 = load i32, ptr %8, align 4, !dbg !7618
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !7618
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !7618
  ret { i32, i32 } %11, !dbg !7618
}

; core::num::<impl u32>::checked_sub
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_sub17he9698245add31fc9E"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !7619 {
start:
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7621, !DIExpression(), !7623)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !7622, !DIExpression(), !7624)
  %_3 = icmp ult i32 %self, %rhs, !dbg !7625
  br i1 %_3, label %bb1, label %bb2, !dbg !7625

bb2:                                              ; preds = %start
  %_4 = sub nuw i32 %self, %rhs, !dbg !7626
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7627
  store i32 %_4, ptr %0, align 4, !dbg !7627
  store i32 1, ptr %_0, align 4, !dbg !7627
  br label %bb3, !dbg !7628

bb1:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !7629
  br label %bb3, !dbg !7628

bb3:                                              ; preds = %bb1, %bb2
  %1 = load i32, ptr %_0, align 4, !dbg !7630
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7630
  %3 = load i32, ptr %2, align 4, !dbg !7630
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !7630
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !7630
  ret { i32, i32 } %5, !dbg !7630
}

; core::num::<impl u32>::from_str_radix
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17hc82f8ed412042f79E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %src.0, i32 %src.1, i32 %radix) unnamed_addr #0 !dbg !7631 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %radix.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [8 x i8], align 4
  store ptr %src.0, ptr %src.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 4
  store i32 %src.1, ptr %0, align 4
    #dbg_declare(ptr %src.dbg.spill, !7654, !DIExpression(), !7656)
  store i32 %radix, ptr %radix.dbg.spill, align 4
    #dbg_declare(ptr %radix.dbg.spill, !7655, !DIExpression(), !7657)
  store ptr %src.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %src.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !7658)
  %2 = insertvalue { ptr, i32 } poison, ptr %src.0, 0, !dbg !7660
  %3 = insertvalue { ptr, i32 } %2, i32 %src.1, 1, !dbg !7660
  %_3.0 = extractvalue { ptr, i32 } %3, 0, !dbg !7661
  %_3.1 = extractvalue { ptr, i32 } %3, 1, !dbg !7661
; call core::num::<impl u32>::from_ascii_radix
  call void @"_ZN4core3num21_$LT$impl$u20$u32$GT$16from_ascii_radix17h9bae4b968c990e26E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %_3.0, i32 %_3.1, i32 %radix) #13, !dbg !7662
  ret void, !dbg !7663
}

; core::num::<impl u32>::from_ascii_radix
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num21_$LT$impl$u20$u32$GT$16from_ascii_radix17h9bae4b968c990e26E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %src.0, i32 %src.1, i32 %radix) unnamed_addr #0 !dbg !7664 {
start:
  %digits.dbg.spill.i = alloca [8 x i8], align 4
  %is_signed_ty.dbg.spill.i = alloca [1 x i8], align 1
  %radix.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [1 x i8], align 1
  %x.dbg.spill34 = alloca [4 x i8], align 4
  %rest.dbg.spill31 = alloca [8 x i8], align 4
  %c.dbg.spill28 = alloca [4 x i8], align 4
  %x.dbg.spill25 = alloca [4 x i8], align 4
  %rest.dbg.spill23 = alloca [8 x i8], align 4
  %c.dbg.spill20 = alloca [4 x i8], align 4
  %value.dbg.spill18 = alloca [4 x i8], align 4
  %value.dbg.spill16 = alloca [4 x i8], align 4
  %x.dbg.spill14 = alloca [4 x i8], align 4
  %rest.dbg.spill12 = alloca [8 x i8], align 4
  %c.dbg.spill9 = alloca [4 x i8], align 4
  %value.dbg.spill7 = alloca [4 x i8], align 4
  %value.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %rest.dbg.spill5 = alloca [8 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %is_positive.dbg.spill = alloca [1 x i8], align 1
  %rest.dbg.spill2 = alloca [4 x i8], align 4
  %rest.dbg.spill = alloca [8 x i8], align 4
  %is_signed_ty.dbg.spill = alloca [1 x i8], align 1
  %radix.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [8 x i8], align 4
  %_94 = alloca [8 x i8], align 4
  %_83 = alloca [8 x i8], align 4
  %mul1 = alloca [8 x i8], align 4
  %_71 = alloca [8 x i8], align 4
  %_60 = alloca [8 x i8], align 4
  %mul = alloca [8 x i8], align 4
  %_45 = alloca [8 x i8], align 4
  %_30 = alloca [8 x i8], align 4
  %result = alloca [4 x i8], align 4
  %rest = alloca [8 x i8], align 4
  %_12 = alloca [12 x i8], align 4
  %digits = alloca [8 x i8], align 4
  store ptr %src.0, ptr %src.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 4
  store i32 %src.1, ptr %0, align 4
    #dbg_declare(ptr %src.dbg.spill, !7668, !DIExpression(), !7723)
  store i32 %radix, ptr %radix.dbg.spill, align 4
    #dbg_declare(ptr %radix.dbg.spill, !7669, !DIExpression(), !7724)
    #dbg_declare(ptr %digits, !7674, !DIExpression(), !7725)
    #dbg_declare(ptr %rest, !7677, !DIExpression(), !7726)
    #dbg_declare(ptr %result, !7681, !DIExpression(), !7727)
    #dbg_declare(ptr %mul, !7700, !DIExpression(), !7728)
    #dbg_declare(ptr %mul1, !7713, !DIExpression(), !7729)
  %_3 = icmp ugt i32 2, %radix, !dbg !7730
  br i1 %_3, label %bb2, label %bb1, !dbg !7730

bb1:                                              ; preds = %start
  %_4 = icmp ugt i32 %radix, 36, !dbg !7731
  br i1 %_4, label %bb2, label %bb3, !dbg !7731

bb2:                                              ; preds = %bb1, %start
; call core::num::from_ascii_radix_panic
  call void @_ZN4core3num22from_ascii_radix_panic17ha2face5f2bfe58c6E(i32 %radix, ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !7732
  unreachable, !dbg !7732

bb3:                                              ; preds = %bb1
; call core::slice::<impl [T]>::is_empty
  %_6 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %src.0, i32 %src.1) #13, !dbg !7733
  br i1 %_6, label %bb5, label %bb6, !dbg !7734

bb6:                                              ; preds = %bb3
  store i8 0, ptr %is_signed_ty.dbg.spill, align 1, !dbg !7735
    #dbg_declare(ptr %is_signed_ty.dbg.spill, !7670, !DIExpression(), !7736)
  %1 = icmp eq i32 %src.1, 1, !dbg !7737
  br i1 %1, label %bb8, label %bb7, !dbg !7737

bb5:                                              ; preds = %bb3
  %2 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7738
  store i8 0, ptr %2, align 1, !dbg !7738
  store i8 1, ptr %_0, align 4, !dbg !7738
  br label %bb57, !dbg !7739

bb8:                                              ; preds = %bb6
  %3 = getelementptr inbounds nuw i8, ptr %src.0, i32 0, !dbg !7741
  %4 = load i8, ptr %3, align 1, !dbg !7741
  switch i8 %4, label %bb7 [
    i8 43, label %bb13
    i8 45, label %bb13
  ], !dbg !7741

bb7:                                              ; preds = %bb8, %bb6
  %_15 = icmp uge i32 %src.1, 1, !dbg !7742
  br i1 %_15, label %bb10, label %bb9, !dbg !7742

bb13:                                             ; preds = %bb8, %bb8
  %5 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7743
  store i8 1, ptr %5, align 1, !dbg !7743
  store i8 1, ptr %_0, align 4, !dbg !7743
  br label %bb57, !dbg !7744

bb57:                                             ; preds = %bb5, %bb23, %bb56, %bb30, %bb43, %bb40, %bb38, %bb54, %bb51, %bb49, %bb13
  ret void, !dbg !7746

bb9:                                              ; preds = %bb11, %bb10, %bb7
  store i8 1, ptr %_12, align 4, !dbg !7747
  %6 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !7747
  store ptr %src.0, ptr %6, align 4, !dbg !7747
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !7747
  store i32 %src.1, ptr %7, align 4, !dbg !7747
  br label %bb15, !dbg !7748

bb10:                                             ; preds = %bb7
  %8 = getelementptr inbounds nuw i8, ptr %src.0, i32 0, !dbg !7741
  %9 = load i8, ptr %8, align 1, !dbg !7741
  switch i8 %9, label %bb9 [
    i8 43, label %bb12
    i8 45, label %bb11
  ], !dbg !7741

bb12:                                             ; preds = %bb10
  %rest.0 = getelementptr inbounds nuw i8, ptr %src.0, i32 1, !dbg !7749
  %rest.1 = sub i32 %src.1, 1, !dbg !7749
  store ptr %rest.0, ptr %rest.dbg.spill, align 4, !dbg !7749
  %10 = getelementptr inbounds i8, ptr %rest.dbg.spill, i32 4, !dbg !7749
  store i32 %rest.1, ptr %10, align 4, !dbg !7749
    #dbg_declare(ptr %rest.dbg.spill, !7675, !DIExpression(), !7750)
  store i8 1, ptr %_12, align 4, !dbg !7751
  %11 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !7751
  store ptr %rest.0, ptr %11, align 4, !dbg !7751
  %12 = getelementptr inbounds i8, ptr %11, i32 4, !dbg !7751
  store i32 %rest.1, ptr %12, align 4, !dbg !7751
  br label %bb15, !dbg !7752

bb11:                                             ; preds = %bb10
  %13 = getelementptr inbounds nuw i8, ptr %src.0, i32 1, !dbg !7753
  %14 = sub i32 %src.1, 1, !dbg !7753
  store ptr %13, ptr %rest, align 4, !dbg !7753
  %15 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !7753
  store i32 %14, ptr %15, align 4, !dbg !7753
  store ptr %rest, ptr %rest.dbg.spill2, align 4, !dbg !7753
    #dbg_declare(ptr %rest.dbg.spill2, !7679, !DIExpression(), !7726)
  br label %bb9, !dbg !7754

bb15:                                             ; preds = %bb9, %bb14, %bb12
  %16 = load i8, ptr %_12, align 4, !dbg !7755
  %is_positive = trunc nuw i8 %16 to i1, !dbg !7755
  %17 = zext i1 %is_positive to i8, !dbg !7755
  store i8 %17, ptr %is_positive.dbg.spill, align 1, !dbg !7755
    #dbg_declare(ptr %is_positive.dbg.spill, !7672, !DIExpression(), !7756)
  %18 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !7757
  %19 = load ptr, ptr %18, align 4, !dbg !7757
  %20 = getelementptr inbounds i8, ptr %18, i32 4, !dbg !7757
  %21 = load i32, ptr %20, align 4, !dbg !7757
  store ptr %19, ptr %digits, align 4, !dbg !7757
  %22 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7757
  store i32 %21, ptr %22, align 4, !dbg !7757
  store i32 0, ptr %result, align 4, !dbg !7758
  %_23.0 = load ptr, ptr %digits, align 4, !dbg !7759
  %23 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7759
  %_23.1 = load i32, ptr %23, align 4, !dbg !7759
  store i32 %radix, ptr %radix.dbg.spill.i, align 4
    #dbg_declare(ptr %radix.dbg.spill.i, !7760, !DIExpression(), !7767)
  store i8 0, ptr %is_signed_ty.dbg.spill.i, align 1
    #dbg_declare(ptr %is_signed_ty.dbg.spill.i, !7765, !DIExpression(), !7769)
  store ptr %_23.0, ptr %digits.dbg.spill.i, align 4
  %24 = getelementptr inbounds i8, ptr %digits.dbg.spill.i, i32 4
  store i32 %_23.1, ptr %24, align 4
    #dbg_declare(ptr %digits.dbg.spill.i, !7766, !DIExpression(), !7770)
  %_4.i = icmp ule i32 %radix, 16, !dbg !7771
  br i1 %_4.i, label %bb1.i, label %bb2.i, !dbg !7771

bb2.i:                                            ; preds = %bb15
  store i8 0, ptr %_0.i, align 1, !dbg !7771
  br label %_ZN4core3num16can_not_overflow17hc4113376ded13e9bE.exit, !dbg !7771

bb1.i:                                            ; preds = %bb15
  %25 = icmp ule i32 %_23.1, 8, !dbg !7772
  %26 = zext i1 %25 to i8, !dbg !7772
  store i8 %26, ptr %_0.i, align 1, !dbg !7772
  br label %_ZN4core3num16can_not_overflow17hc4113376ded13e9bE.exit, !dbg !7771

_ZN4core3num16can_not_overflow17hc4113376ded13e9bE.exit: ; preds = %bb2.i, %bb1.i
  %27 = load i8, ptr %_0.i, align 1, !dbg !7773
  %28 = trunc nuw i8 %27 to i1, !dbg !7773
  br i1 %28, label %bb17, label %bb33, !dbg !7774

bb14:                                             ; No predecessors!
  store i8 0, ptr %_12, align 4, !dbg !7775
  %29 = load ptr, ptr %rest, align 4, !dbg !7775
  %30 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !7775
  %31 = load i32, ptr %30, align 4, !dbg !7775
  %32 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !7775
  store ptr %29, ptr %32, align 4, !dbg !7775
  %33 = getelementptr inbounds i8, ptr %32, i32 4, !dbg !7775
  store i32 %31, ptr %33, align 4, !dbg !7775
  br label %bb15, !dbg !7776

bb33:                                             ; preds = %_ZN4core3num16can_not_overflow17hc4113376ded13e9bE.exit
  br i1 %is_positive, label %bb34, label %bb45, !dbg !7777

bb17:                                             ; preds = %_ZN4core3num16can_not_overflow17hc4113376ded13e9bE.exit
  br i1 %is_positive, label %bb18, label %bb26, !dbg !7778

bb45:                                             ; preds = %bb55, %bb33
  %34 = load ptr, ptr %digits, align 4, !dbg !7779
  %35 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7779
  %_77 = load i32, ptr %35, align 4, !dbg !7779
  %_78 = icmp uge i32 %_77, 1, !dbg !7779
  br i1 %_78, label %bb46, label %bb56, !dbg !7779

bb34:                                             ; preds = %bb44, %bb33
  %36 = load ptr, ptr %digits, align 4, !dbg !7780
  %37 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7780
  %_54 = load i32, ptr %37, align 4, !dbg !7780
  %_55 = icmp uge i32 %_54, 1, !dbg !7780
  br i1 %_55, label %bb35, label %bb56, !dbg !7780

bb56:                                             ; preds = %bb18, %bb26, %bb34, %bb45
  %_100 = load i32, ptr %result, align 4, !dbg !7781
  %38 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7782
  store i32 %_100, ptr %38, align 4, !dbg !7782
  store i8 0, ptr %_0, align 4, !dbg !7782
  br label %bb57, !dbg !7746

bb46:                                             ; preds = %bb45
  %39 = load ptr, ptr %digits, align 4, !dbg !7783
  %40 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7783
  %41 = load i32, ptr %40, align 4, !dbg !7783
  %c = getelementptr inbounds nuw i8, ptr %39, i32 0, !dbg !7783
  store ptr %c, ptr %c.dbg.spill, align 4, !dbg !7783
    #dbg_declare(ptr %c.dbg.spill, !7710, !DIExpression(), !7783)
  %42 = load ptr, ptr %digits, align 4, !dbg !7784
  %43 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7784
  %44 = load i32, ptr %43, align 4, !dbg !7784
  %rest.03 = getelementptr inbounds nuw i8, ptr %42, i32 1, !dbg !7784
  %rest.14 = sub i32 %44, 1, !dbg !7784
  store ptr %rest.03, ptr %rest.dbg.spill5, align 4, !dbg !7784
  %45 = getelementptr inbounds i8, ptr %rest.dbg.spill5, i32 4, !dbg !7784
  store i32 %rest.14, ptr %45, align 4, !dbg !7784
    #dbg_declare(ptr %rest.dbg.spill5, !7712, !DIExpression(), !7784)
  %_82 = load i32, ptr %result, align 4, !dbg !7785
; call core::num::<impl u32>::checked_mul
  %46 = call { i32, i32 } @"_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_mul17h999bf06362575789E"(i32 %_82, i32 %radix) #13, !dbg !7786
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !7786
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !7786
  store i32 %47, ptr %mul1, align 4, !dbg !7786
  %49 = getelementptr inbounds i8, ptr %mul1, i32 4, !dbg !7786
  store i32 %48, ptr %49, align 4, !dbg !7786
  %_85 = load i8, ptr %c, align 1, !dbg !7787
  %_84 = zext i8 %_85 to i32, !dbg !7788
; call core::char::methods::<impl char>::to_digit
  %50 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_84, i32 %radix) #13, !dbg !7789
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !7789
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !7789
  store i32 %51, ptr %_83, align 4, !dbg !7789
  %53 = getelementptr inbounds i8, ptr %_83, i32 4, !dbg !7789
  store i32 %52, ptr %53, align 4, !dbg !7789
  %_86 = load i32, ptr %_83, align 4, !dbg !7788
  %54 = getelementptr inbounds i8, ptr %_83, i32 4, !dbg !7788
  %55 = load i32, ptr %54, align 4, !dbg !7788
  %56 = trunc nuw i32 %_86 to i1, !dbg !7790
  br i1 %56, label %bb50, label %bb49, !dbg !7790

bb50:                                             ; preds = %bb46
  %57 = getelementptr inbounds i8, ptr %_83, i32 4, !dbg !7791
  %x = load i32, ptr %57, align 4, !dbg !7791
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !7791
    #dbg_declare(ptr %x.dbg.spill, !7715, !DIExpression(), !7792)
    #dbg_declare(ptr %x.dbg.spill, !7717, !DIExpression(), !7793)
  %_90 = load i32, ptr %mul1, align 4, !dbg !7794
  %58 = getelementptr inbounds i8, ptr %mul1, i32 4, !dbg !7794
  %59 = load i32, ptr %58, align 4, !dbg !7794
  %60 = trunc nuw i32 %_90 to i1, !dbg !7795
  br i1 %60, label %bb52, label %bb51, !dbg !7795

bb49:                                             ; preds = %bb46
  %61 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7796
  store i8 1, ptr %61, align 1, !dbg !7796
  store i8 1, ptr %_0, align 4, !dbg !7796
  br label %bb57, !dbg !7797

bb52:                                             ; preds = %bb50
  %62 = getelementptr inbounds i8, ptr %mul1, i32 4, !dbg !7799
  %value = load i32, ptr %62, align 4, !dbg !7799
  store i32 %value, ptr %value.dbg.spill, align 4, !dbg !7799
    #dbg_declare(ptr %value.dbg.spill, !7719, !DIExpression(), !7800)
  store i32 %value, ptr %result, align 4, !dbg !7801
  %_95 = load i32, ptr %result, align 4, !dbg !7802
; call core::num::<impl u32>::checked_sub
  %63 = call { i32, i32 } @"_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_sub17he9698245add31fc9E"(i32 %_95, i32 %x) #13, !dbg !7803
  %64 = extractvalue { i32, i32 } %63, 0, !dbg !7803
  %65 = extractvalue { i32, i32 } %63, 1, !dbg !7803
  store i32 %64, ptr %_94, align 4, !dbg !7803
  %66 = getelementptr inbounds i8, ptr %_94, i32 4, !dbg !7803
  store i32 %65, ptr %66, align 4, !dbg !7803
  %_96 = load i32, ptr %_94, align 4, !dbg !7803
  %67 = getelementptr inbounds i8, ptr %_94, i32 4, !dbg !7803
  %68 = load i32, ptr %67, align 4, !dbg !7803
  %69 = trunc nuw i32 %_96 to i1, !dbg !7795
  br i1 %69, label %bb55, label %bb54, !dbg !7795

bb51:                                             ; preds = %bb50
  %70 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7804
  store i8 3, ptr %70, align 1, !dbg !7804
  store i8 1, ptr %_0, align 4, !dbg !7804
  br label %bb57, !dbg !7805

bb55:                                             ; preds = %bb52
  %71 = getelementptr inbounds i8, ptr %_94, i32 4, !dbg !7799
  %value6 = load i32, ptr %71, align 4, !dbg !7799
  store i32 %value6, ptr %value.dbg.spill7, align 4, !dbg !7799
    #dbg_declare(ptr %value.dbg.spill7, !7721, !DIExpression(), !7807)
  store i32 %value6, ptr %result, align 4, !dbg !7808
  store ptr %rest.03, ptr %digits, align 4, !dbg !7809
  %72 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7809
  store i32 %rest.14, ptr %72, align 4, !dbg !7809
  br label %bb45, !dbg !7810

bb54:                                             ; preds = %bb52
  %73 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7804
  store i8 3, ptr %73, align 1, !dbg !7804
  store i8 1, ptr %_0, align 4, !dbg !7804
  br label %bb57, !dbg !7805

bb35:                                             ; preds = %bb34
  %74 = load ptr, ptr %digits, align 4, !dbg !7811
  %75 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7811
  %76 = load i32, ptr %75, align 4, !dbg !7811
  %c8 = getelementptr inbounds nuw i8, ptr %74, i32 0, !dbg !7811
  store ptr %c8, ptr %c.dbg.spill9, align 4, !dbg !7811
    #dbg_declare(ptr %c.dbg.spill9, !7697, !DIExpression(), !7811)
  %77 = load ptr, ptr %digits, align 4, !dbg !7812
  %78 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7812
  %79 = load i32, ptr %78, align 4, !dbg !7812
  %rest.010 = getelementptr inbounds nuw i8, ptr %77, i32 1, !dbg !7812
  %rest.111 = sub i32 %79, 1, !dbg !7812
  store ptr %rest.010, ptr %rest.dbg.spill12, align 4, !dbg !7812
  %80 = getelementptr inbounds i8, ptr %rest.dbg.spill12, i32 4, !dbg !7812
  store i32 %rest.111, ptr %80, align 4, !dbg !7812
    #dbg_declare(ptr %rest.dbg.spill12, !7699, !DIExpression(), !7812)
  %_59 = load i32, ptr %result, align 4, !dbg !7813
; call core::num::<impl u32>::checked_mul
  %81 = call { i32, i32 } @"_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_mul17h999bf06362575789E"(i32 %_59, i32 %radix) #13, !dbg !7814
  %82 = extractvalue { i32, i32 } %81, 0, !dbg !7814
  %83 = extractvalue { i32, i32 } %81, 1, !dbg !7814
  store i32 %82, ptr %mul, align 4, !dbg !7814
  %84 = getelementptr inbounds i8, ptr %mul, i32 4, !dbg !7814
  store i32 %83, ptr %84, align 4, !dbg !7814
  %_62 = load i8, ptr %c8, align 1, !dbg !7815
  %_61 = zext i8 %_62 to i32, !dbg !7816
; call core::char::methods::<impl char>::to_digit
  %85 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_61, i32 %radix) #13, !dbg !7817
  %86 = extractvalue { i32, i32 } %85, 0, !dbg !7817
  %87 = extractvalue { i32, i32 } %85, 1, !dbg !7817
  store i32 %86, ptr %_60, align 4, !dbg !7817
  %88 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !7817
  store i32 %87, ptr %88, align 4, !dbg !7817
  %_63 = load i32, ptr %_60, align 4, !dbg !7816
  %89 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !7816
  %90 = load i32, ptr %89, align 4, !dbg !7816
  %91 = trunc nuw i32 %_63 to i1, !dbg !7818
  br i1 %91, label %bb39, label %bb38, !dbg !7818

bb39:                                             ; preds = %bb35
  %92 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !7819
  %x13 = load i32, ptr %92, align 4, !dbg !7819
  store i32 %x13, ptr %x.dbg.spill14, align 4, !dbg !7819
    #dbg_declare(ptr %x.dbg.spill14, !7702, !DIExpression(), !7820)
    #dbg_declare(ptr %x.dbg.spill14, !7704, !DIExpression(), !7821)
  %_67 = load i32, ptr %mul, align 4, !dbg !7822
  %93 = getelementptr inbounds i8, ptr %mul, i32 4, !dbg !7822
  %94 = load i32, ptr %93, align 4, !dbg !7822
  %95 = trunc nuw i32 %_67 to i1, !dbg !7823
  br i1 %95, label %bb41, label %bb40, !dbg !7823

bb38:                                             ; preds = %bb35
  %96 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7824
  store i8 1, ptr %96, align 1, !dbg !7824
  store i8 1, ptr %_0, align 4, !dbg !7824
  br label %bb57, !dbg !7825

bb41:                                             ; preds = %bb39
  %97 = getelementptr inbounds i8, ptr %mul, i32 4, !dbg !7827
  %value15 = load i32, ptr %97, align 4, !dbg !7827
  store i32 %value15, ptr %value.dbg.spill16, align 4, !dbg !7827
    #dbg_declare(ptr %value.dbg.spill16, !7706, !DIExpression(), !7828)
  store i32 %value15, ptr %result, align 4, !dbg !7829
  %_72 = load i32, ptr %result, align 4, !dbg !7830
; call core::num::<impl u32>::checked_add
  %98 = call { i32, i32 } @"_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17ha1f3cf4b9e7994beE"(i32 %_72, i32 %x13) #13, !dbg !7831
  %99 = extractvalue { i32, i32 } %98, 0, !dbg !7831
  %100 = extractvalue { i32, i32 } %98, 1, !dbg !7831
  store i32 %99, ptr %_71, align 4, !dbg !7831
  %101 = getelementptr inbounds i8, ptr %_71, i32 4, !dbg !7831
  store i32 %100, ptr %101, align 4, !dbg !7831
  %_73 = load i32, ptr %_71, align 4, !dbg !7831
  %102 = getelementptr inbounds i8, ptr %_71, i32 4, !dbg !7831
  %103 = load i32, ptr %102, align 4, !dbg !7831
  %104 = trunc nuw i32 %_73 to i1, !dbg !7823
  br i1 %104, label %bb44, label %bb43, !dbg !7823

bb40:                                             ; preds = %bb39
  %105 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7832
  store i8 2, ptr %105, align 1, !dbg !7832
  store i8 1, ptr %_0, align 4, !dbg !7832
  br label %bb57, !dbg !7833

bb44:                                             ; preds = %bb41
  %106 = getelementptr inbounds i8, ptr %_71, i32 4, !dbg !7827
  %value17 = load i32, ptr %106, align 4, !dbg !7827
  store i32 %value17, ptr %value.dbg.spill18, align 4, !dbg !7827
    #dbg_declare(ptr %value.dbg.spill18, !7708, !DIExpression(), !7835)
  store i32 %value17, ptr %result, align 4, !dbg !7836
  store ptr %rest.010, ptr %digits, align 4, !dbg !7837
  %107 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7837
  store i32 %rest.111, ptr %107, align 4, !dbg !7837
  br label %bb34, !dbg !7810

bb43:                                             ; preds = %bb41
  %108 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7832
  store i8 2, ptr %108, align 1, !dbg !7832
  store i8 1, ptr %_0, align 4, !dbg !7832
  br label %bb57, !dbg !7833

bb26:                                             ; preds = %bb32, %bb17
  %109 = load ptr, ptr %digits, align 4, !dbg !7838
  %110 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7838
  %_39 = load i32, ptr %110, align 4, !dbg !7838
  %_40 = icmp uge i32 %_39, 1, !dbg !7838
  br i1 %_40, label %bb27, label %bb56, !dbg !7838

bb18:                                             ; preds = %bb25, %bb17
  %111 = load ptr, ptr %digits, align 4, !dbg !7839
  %112 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7839
  %_24 = load i32, ptr %112, align 4, !dbg !7839
  %_25 = icmp uge i32 %_24, 1, !dbg !7839
  br i1 %_25, label %bb19, label %bb56, !dbg !7839

bb27:                                             ; preds = %bb26
  %113 = load ptr, ptr %digits, align 4, !dbg !7840
  %114 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7840
  %115 = load i32, ptr %114, align 4, !dbg !7840
  %c19 = getelementptr inbounds nuw i8, ptr %113, i32 0, !dbg !7840
  store ptr %c19, ptr %c.dbg.spill20, align 4, !dbg !7840
    #dbg_declare(ptr %c.dbg.spill20, !7690, !DIExpression(), !7840)
  %116 = load ptr, ptr %digits, align 4, !dbg !7841
  %117 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7841
  %118 = load i32, ptr %117, align 4, !dbg !7841
  %rest.021 = getelementptr inbounds nuw i8, ptr %116, i32 1, !dbg !7841
  %rest.122 = sub i32 %118, 1, !dbg !7841
  store ptr %rest.021, ptr %rest.dbg.spill23, align 4, !dbg !7841
  %119 = getelementptr inbounds i8, ptr %rest.dbg.spill23, i32 4, !dbg !7841
  store i32 %rest.122, ptr %119, align 4, !dbg !7841
    #dbg_declare(ptr %rest.dbg.spill23, !7692, !DIExpression(), !7841)
  %_43 = load i32, ptr %result, align 4, !dbg !7842
  %120 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_43, i32 %radix), !dbg !7842
  %_44.0 = extractvalue { i32, i1 } %120, 0, !dbg !7842
  %_44.1 = extractvalue { i32, i1 } %120, 1, !dbg !7842
  br i1 %_44.1, label %panic, label %bb28, !dbg !7842

bb28:                                             ; preds = %bb27
  store i32 %_44.0, ptr %result, align 4, !dbg !7843
  %_47 = load i8, ptr %c19, align 1, !dbg !7844
  %_46 = zext i8 %_47 to i32, !dbg !7845
; call core::char::methods::<impl char>::to_digit
  %121 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_46, i32 %radix) #13, !dbg !7846
  %122 = extractvalue { i32, i32 } %121, 0, !dbg !7846
  %123 = extractvalue { i32, i32 } %121, 1, !dbg !7846
  store i32 %122, ptr %_45, align 4, !dbg !7846
  %124 = getelementptr inbounds i8, ptr %_45, i32 4, !dbg !7846
  store i32 %123, ptr %124, align 4, !dbg !7846
  %_48 = load i32, ptr %_45, align 4, !dbg !7845
  %125 = getelementptr inbounds i8, ptr %_45, i32 4, !dbg !7845
  %126 = load i32, ptr %125, align 4, !dbg !7845
  %127 = trunc nuw i32 %_48 to i1, !dbg !7847
  br i1 %127, label %bb31, label %bb30, !dbg !7847

panic:                                            ; preds = %bb27
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !7842
  unreachable, !dbg !7842

bb31:                                             ; preds = %bb28
  %128 = getelementptr inbounds i8, ptr %_45, i32 4, !dbg !7848
  %x24 = load i32, ptr %128, align 4, !dbg !7848
  store i32 %x24, ptr %x.dbg.spill25, align 4, !dbg !7848
    #dbg_declare(ptr %x.dbg.spill25, !7693, !DIExpression(), !7849)
    #dbg_declare(ptr %x.dbg.spill25, !7695, !DIExpression(), !7850)
  %_52 = load i32, ptr %result, align 4, !dbg !7851
  %_53.0 = sub i32 %_52, %x24, !dbg !7851
  %_53.1 = icmp ult i32 %_52, %x24, !dbg !7851
  br i1 %_53.1, label %panic26, label %bb32, !dbg !7851

bb30:                                             ; preds = %bb28
  %129 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7852
  store i8 1, ptr %129, align 1, !dbg !7852
  store i8 1, ptr %_0, align 4, !dbg !7852
  br label %bb57, !dbg !7853

bb32:                                             ; preds = %bb31
  store i32 %_53.0, ptr %result, align 4, !dbg !7855
  store ptr %rest.021, ptr %digits, align 4, !dbg !7856
  %130 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7856
  store i32 %rest.122, ptr %130, align 4, !dbg !7856
  br label %bb26, !dbg !7857

panic26:                                          ; preds = %bb31
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !7851
  unreachable, !dbg !7851

bb19:                                             ; preds = %bb18
  %131 = load ptr, ptr %digits, align 4, !dbg !7858
  %132 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7858
  %133 = load i32, ptr %132, align 4, !dbg !7858
  %c27 = getelementptr inbounds nuw i8, ptr %131, i32 0, !dbg !7858
  store ptr %c27, ptr %c.dbg.spill28, align 4, !dbg !7858
    #dbg_declare(ptr %c.dbg.spill28, !7683, !DIExpression(), !7858)
  %134 = load ptr, ptr %digits, align 4, !dbg !7859
  %135 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7859
  %136 = load i32, ptr %135, align 4, !dbg !7859
  %rest.029 = getelementptr inbounds nuw i8, ptr %134, i32 1, !dbg !7859
  %rest.130 = sub i32 %136, 1, !dbg !7859
  store ptr %rest.029, ptr %rest.dbg.spill31, align 4, !dbg !7859
  %137 = getelementptr inbounds i8, ptr %rest.dbg.spill31, i32 4, !dbg !7859
  store i32 %rest.130, ptr %137, align 4, !dbg !7859
    #dbg_declare(ptr %rest.dbg.spill31, !7685, !DIExpression(), !7859)
  %_28 = load i32, ptr %result, align 4, !dbg !7860
  %138 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_28, i32 %radix), !dbg !7860
  %_29.0 = extractvalue { i32, i1 } %138, 0, !dbg !7860
  %_29.1 = extractvalue { i32, i1 } %138, 1, !dbg !7860
  br i1 %_29.1, label %panic32, label %bb20, !dbg !7860

bb20:                                             ; preds = %bb19
  store i32 %_29.0, ptr %result, align 4, !dbg !7861
  %_32 = load i8, ptr %c27, align 1, !dbg !7862
  %_31 = zext i8 %_32 to i32, !dbg !7863
; call core::char::methods::<impl char>::to_digit
  %139 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_31, i32 %radix) #13, !dbg !7864
  %140 = extractvalue { i32, i32 } %139, 0, !dbg !7864
  %141 = extractvalue { i32, i32 } %139, 1, !dbg !7864
  store i32 %140, ptr %_30, align 4, !dbg !7864
  %142 = getelementptr inbounds i8, ptr %_30, i32 4, !dbg !7864
  store i32 %141, ptr %142, align 4, !dbg !7864
  %_33 = load i32, ptr %_30, align 4, !dbg !7863
  %143 = getelementptr inbounds i8, ptr %_30, i32 4, !dbg !7863
  %144 = load i32, ptr %143, align 4, !dbg !7863
  %145 = trunc nuw i32 %_33 to i1, !dbg !7865
  br i1 %145, label %bb24, label %bb23, !dbg !7865

panic32:                                          ; preds = %bb19
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !7860
  unreachable, !dbg !7860

bb24:                                             ; preds = %bb20
  %146 = getelementptr inbounds i8, ptr %_30, i32 4, !dbg !7866
  %x33 = load i32, ptr %146, align 4, !dbg !7866
  store i32 %x33, ptr %x.dbg.spill34, align 4, !dbg !7866
    #dbg_declare(ptr %x.dbg.spill34, !7686, !DIExpression(), !7867)
    #dbg_declare(ptr %x.dbg.spill34, !7688, !DIExpression(), !7868)
  %_37 = load i32, ptr %result, align 4, !dbg !7869
  %_38.0 = add i32 %_37, %x33, !dbg !7869
  %_38.1 = icmp ult i32 %_38.0, %_37, !dbg !7869
  br i1 %_38.1, label %panic35, label %bb25, !dbg !7869

bb23:                                             ; preds = %bb20
  %147 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !7870
  store i8 1, ptr %147, align 1, !dbg !7870
  store i8 1, ptr %_0, align 4, !dbg !7870
  br label %bb57, !dbg !7853

bb25:                                             ; preds = %bb24
  store i32 %_38.0, ptr %result, align 4, !dbg !7871
  store ptr %rest.029, ptr %digits, align 4, !dbg !7872
  %148 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !7872
  store i32 %rest.130, ptr %148, align 4, !dbg !7872
  br label %bb18, !dbg !7857

panic35:                                          ; preds = %bb24
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !7869
  unreachable, !dbg !7869

bb22:                                             ; No predecessors!
  unreachable, !dbg !7739
}

; core::num::<impl u64>::checked_add
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17hb44e6f61114d879fE"(ptr sret([16 x i8]) align 8 %_0, i64 %self, i64 %rhs) unnamed_addr #0 !dbg !7873 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7877, !DIExpression(), !7879)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !7878, !DIExpression(), !7880)
  %_5.0 = add i64 %self, %rhs, !dbg !7881
  %_5.1 = icmp ult i64 %_5.0, %self, !dbg !7881
  %0 = zext i1 %_5.1 to i8
  store i8 %0, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !7554, !DIExpression(), !7882)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !7884

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !7885
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7886

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !7887
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7886

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %1 = load i8, ptr %_0.i, align 1, !dbg !7888
  %2 = trunc nuw i8 %1 to i1, !dbg !7888
  br i1 %2, label %bb2, label %bb3, !dbg !7889

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %_6 = add nuw i64 %self, %rhs, !dbg !7890
  %3 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !7891
  store i64 %_6, ptr %3, align 8, !dbg !7891
  store i64 1, ptr %_0, align 8, !dbg !7891
  br label %bb4, !dbg !7892

bb2:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i64 0, ptr %_0, align 8, !dbg !7893
  br label %bb4, !dbg !7892

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !7894
}

; core::num::<impl u64>::checked_mul
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h9f8a1b16d6975a17E"(ptr sret([16 x i8]) align 8 %_0, i64 %self, i64 %rhs) unnamed_addr #0 !dbg !7895 {
start:
  %b.dbg.spill.i1 = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [8 x i8], align 8
  %0 = alloca [16 x i8], align 8
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7897, !DIExpression(), !7902)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !7898, !DIExpression(), !7903)
  store i64 %self, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !7904, !DIExpression(), !7917)
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !7913, !DIExpression(), !7919)
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs), !dbg !7920
  %_5.0.i = extractvalue { i64, i1 } %1, 0, !dbg !7920
  %_5.1.i = extractvalue { i64, i1 } %1, 1, !dbg !7920
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !7921
    #dbg_declare(ptr %a.dbg.spill.i, !7914, !DIExpression(), !7922)
  %2 = zext i1 %_5.1.i to i8, !dbg !7923
  store i8 %2, ptr %b.dbg.spill.i1, align 1, !dbg !7923
    #dbg_declare(ptr %b.dbg.spill.i1, !7916, !DIExpression(), !7924)
  store i64 %_5.0.i, ptr %0, align 8, !dbg !7925
  %3 = getelementptr inbounds i8, ptr %0, i32 8, !dbg !7925
  %4 = zext i1 %_5.1.i to i8, !dbg !7925
  store i8 %4, ptr %3, align 8, !dbg !7925
  %_5.0 = load i64, ptr %0, align 8, !dbg !7926
  %5 = getelementptr inbounds i8, ptr %0, i32 8, !dbg !7926
  %6 = load i8, ptr %5, align 8, !dbg !7926
  %_5.1 = trunc nuw i8 %6 to i1, !dbg !7926
  store i64 %_5.0, ptr %a.dbg.spill, align 8, !dbg !7927
    #dbg_declare(ptr %a.dbg.spill, !7899, !DIExpression(), !7928)
  %7 = zext i1 %_5.1 to i8, !dbg !7929
  store i8 %7, ptr %b.dbg.spill, align 1, !dbg !7929
    #dbg_declare(ptr %b.dbg.spill, !7901, !DIExpression(), !7930)
  %8 = zext i1 %_5.1 to i8
  store i8 %8, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !7554, !DIExpression(), !7931)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !7933

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !7934
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7935

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !7936
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !7935

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %9 = load i8, ptr %_0.i, align 1, !dbg !7937
  %10 = trunc nuw i8 %9 to i1, !dbg !7937
  br i1 %10, label %bb3, label %bb4, !dbg !7938

bb4:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %11 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !7939
  store i64 %_5.0, ptr %11, align 8, !dbg !7939
  store i64 1, ptr %_0, align 8, !dbg !7939
  br label %bb5, !dbg !7940

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i64 0, ptr %_0, align 8, !dbg !7941
  br label %bb5, !dbg !7940

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !7942
}

; core::num::<impl u64>::checked_sub
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_sub17h25afcbdc5e9ad36fE"(ptr sret([16 x i8]) align 8 %_0, i64 %self, i64 %rhs) unnamed_addr #0 !dbg !7943 {
start:
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [8 x i8], align 8
  store i64 %self, ptr %self.dbg.spill, align 8
    #dbg_declare(ptr %self.dbg.spill, !7945, !DIExpression(), !7947)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !7946, !DIExpression(), !7948)
  %_3 = icmp ult i64 %self, %rhs, !dbg !7949
  br i1 %_3, label %bb1, label %bb2, !dbg !7949

bb2:                                              ; preds = %start
  %_4 = sub nuw i64 %self, %rhs, !dbg !7950
  %0 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !7951
  store i64 %_4, ptr %0, align 8, !dbg !7951
  store i64 1, ptr %_0, align 8, !dbg !7951
  br label %bb3, !dbg !7952

bb1:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !7953
  br label %bb3, !dbg !7952

bb3:                                              ; preds = %bb1, %bb2
  ret void, !dbg !7954
}

; core::num::<impl u64>::unchecked_add::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add18precondition_check17hbc02bab51f5d3cd5E"(i64 %lhs, i64 %rhs, ptr align 4 %0) unnamed_addr #0 !dbg !7955 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [8 x i8], align 8
  %rhs.dbg.spill.i = alloca [8 x i8], align 8
  %self.dbg.spill.i = alloca [8 x i8], align 8
  %1 = alloca [16 x i8], align 8
  %msg.dbg.spill = alloca [8 x i8], align 4
  %rhs.dbg.spill = alloca [8 x i8], align 8
  %lhs.dbg.spill = alloca [8 x i8], align 8
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store i64 %lhs, ptr %lhs.dbg.spill, align 8
    #dbg_declare(ptr %lhs.dbg.spill, !7960, !DIExpression(), !7964)
  store i64 %rhs, ptr %rhs.dbg.spill, align 8
    #dbg_declare(ptr %rhs.dbg.spill, !7961, !DIExpression(), !7964)
  store ptr @alloc_fc445f6abf67cf4b683577fd3aaed336, ptr %msg.dbg.spill, align 4, !dbg !7965
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !7965
  store i32 184, ptr %2, align 4, !dbg !7965
    #dbg_declare(ptr %msg.dbg.spill, !7962, !DIExpression(), !7965)
  store i64 %lhs, ptr %self.dbg.spill.i, align 8
    #dbg_declare(ptr %self.dbg.spill.i, !7966, !DIExpression(), !7973)
  store i64 %rhs, ptr %rhs.dbg.spill.i, align 8
    #dbg_declare(ptr %rhs.dbg.spill.i, !7969, !DIExpression(), !7976)
  %_5.0.i = add i64 %lhs, %rhs, !dbg !7977
  %_5.1.i = icmp ult i64 %_5.0.i, %lhs, !dbg !7977
  store i64 %_5.0.i, ptr %a.dbg.spill.i, align 8, !dbg !7978
    #dbg_declare(ptr %a.dbg.spill.i, !7970, !DIExpression(), !7979)
  %3 = zext i1 %_5.1.i to i8, !dbg !7980
  store i8 %3, ptr %b.dbg.spill.i, align 1, !dbg !7980
    #dbg_declare(ptr %b.dbg.spill.i, !7972, !DIExpression(), !7981)
  store i64 %_5.0.i, ptr %1, align 8, !dbg !7982
  %4 = getelementptr inbounds i8, ptr %1, i32 8, !dbg !7982
  %5 = zext i1 %_5.1.i to i8, !dbg !7982
  store i8 %5, ptr %4, align 8, !dbg !7982
  %_4.0 = load i64, ptr %1, align 8, !dbg !7983
  %6 = getelementptr inbounds i8, ptr %1, i32 8, !dbg !7983
  %7 = load i8, ptr %6, align 8, !dbg !7983
  %_4.1 = trunc nuw i8 %7 to i1, !dbg !7983
  br i1 %_4.1, label %bb2, label %bb4, !dbg !7984

bb4:                                              ; preds = %start
  ret void, !dbg !7985

bb2:                                              ; preds = %start
  %8 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !7986
  store ptr @alloc_fc445f6abf67cf4b683577fd3aaed336, ptr %8, align 4, !dbg !7986
  %9 = getelementptr inbounds i8, ptr %8, i32 4, !dbg !7986
  store i32 184, ptr %9, align 4, !dbg !7986
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #13, !dbg !7987
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17ha90b816b7292deffE(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #14, !dbg !7988
  unreachable, !dbg !7988
}

; core::num::from_ascii_radix_panic
; Function Attrs: cold inlinehint noreturn nounwind
define internal void @_ZN4core3num22from_ascii_radix_panic17ha2face5f2bfe58c6E(i32 %radix, ptr align 4 %0) unnamed_addr #3 !dbg !7989 {
start:
  %radix.dbg.spill.i = alloca [4 x i8], align 4
  %radix.dbg.spill = alloca [4 x i8], align 4
  store i32 %radix, ptr %radix.dbg.spill, align 4
    #dbg_declare(ptr %radix.dbg.spill, !7993, !DIExpression(), !7994)
  store i32 %radix, ptr %radix.dbg.spill.i, align 4
    #dbg_declare(ptr %radix.dbg.spill.i, !7995, !DIExpression(), !7999)
; call core::num::from_ascii_radix_panic::do_panic::runtime
  call void @_ZN4core3num22from_ascii_radix_panic8do_panic7runtime17h38c05a34dd2fcef2E(i32 %radix, ptr align 4 %0) #14, !dbg !8002
  unreachable, !dbg !8002

_ZN4core3num22from_ascii_radix_panic8do_panic17h1247f74ea500aa96E.exit: ; No predecessors!
  unreachable, !dbg !8004
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !8005 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8009, !DIExpression(), !8011)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !8010, !DIExpression(), !8012)
  %_5.0 = add i32 %self, %rhs, !dbg !8013
  %_5.1 = icmp ult i32 %_5.0, %self, !dbg !8013
  %0 = zext i1 %_5.1 to i8
  store i8 %0, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !7554, !DIExpression(), !8014)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !8016

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !8017
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !8018

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !8019
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !8018

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %1 = load i8, ptr %_0.i, align 1, !dbg !8020
  %2 = trunc nuw i8 %1 to i1, !dbg !8020
  br i1 %2, label %bb2, label %bb3, !dbg !8021

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %_6 = add nuw i32 %self, %rhs, !dbg !8022
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8023
  store i32 %_6, ptr %3, align 4, !dbg !8023
  store i32 1, ptr %_0, align 4, !dbg !8023
  br label %bb4, !dbg !8024

bb2:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !8025
  br label %bb4, !dbg !8024

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4, !dbg !8026
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8026
  %6 = load i32, ptr %5, align 4, !dbg !8026
  %7 = insertvalue { i32, i32 } poison, i32 %4, 0, !dbg !8026
  %8 = insertvalue { i32, i32 } %7, i32 %6, 1, !dbg !8026
  ret { i32, i32 } %8, !dbg !8026
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !8027 {
start:
  %b.dbg.spill.i1 = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [4 x i8], align 4
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8029, !DIExpression(), !8034)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !8030, !DIExpression(), !8035)
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !8036, !DIExpression(), !8049)
  store i32 %rhs, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !8045, !DIExpression(), !8051)
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %self, i32 %rhs), !dbg !8052
  %_5.0.i = extractvalue { i32, i1 } %0, 0, !dbg !8052
  %_5.1.i = extractvalue { i32, i1 } %0, 1, !dbg !8052
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !8053
    #dbg_declare(ptr %a.dbg.spill.i, !8046, !DIExpression(), !8054)
  %1 = zext i1 %_5.1.i to i8, !dbg !8055
  store i8 %1, ptr %b.dbg.spill.i1, align 1, !dbg !8055
    #dbg_declare(ptr %b.dbg.spill.i1, !8048, !DIExpression(), !8056)
  %_5.0 = extractvalue { i32, i1 } %0, 0, !dbg !8057
  %_5.1 = extractvalue { i32, i1 } %0, 1, !dbg !8057
  store i32 %_5.0, ptr %a.dbg.spill, align 4, !dbg !8058
    #dbg_declare(ptr %a.dbg.spill, !8031, !DIExpression(), !8059)
  %2 = zext i1 %_5.1 to i8, !dbg !8060
  store i8 %2, ptr %b.dbg.spill, align 1, !dbg !8060
    #dbg_declare(ptr %b.dbg.spill, !8033, !DIExpression(), !8061)
  %3 = zext i1 %_5.1 to i8
  store i8 %3, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !7554, !DIExpression(), !8062)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !8064

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !8065
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !8066

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !8067
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !8066

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %4 = load i8, ptr %_0.i, align 1, !dbg !8068
  %5 = trunc nuw i8 %4 to i1, !dbg !8068
  br i1 %5, label %bb3, label %bb4, !dbg !8069

bb4:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8070
  store i32 %_5.0, ptr %6, align 4, !dbg !8070
  store i32 1, ptr %_0, align 4, !dbg !8070
  br label %bb5, !dbg !8071

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !8072
  br label %bb5, !dbg !8071

bb5:                                              ; preds = %bb3, %bb4
  %7 = load i32, ptr %_0, align 4, !dbg !8073
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8073
  %9 = load i32, ptr %8, align 4, !dbg !8073
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !8073
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !8073
  ret { i32, i32 } %11, !dbg !8073
}

; core::num::<impl usize>::checked_sub
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hf518b4cbfbcb79daE"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !8074 {
start:
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8076, !DIExpression(), !8078)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !8077, !DIExpression(), !8079)
  %_3 = icmp ult i32 %self, %rhs, !dbg !8080
  br i1 %_3, label %bb1, label %bb2, !dbg !8080

bb2:                                              ; preds = %start
  %_4 = sub nuw i32 %self, %rhs, !dbg !8081
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8082
  store i32 %_4, ptr %0, align 4, !dbg !8082
  store i32 1, ptr %_0, align 4, !dbg !8082
  br label %bb3, !dbg !8083

bb1:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !8084
  br label %bb3, !dbg !8083

bb3:                                              ; preds = %bb1, %bb2
  %1 = load i32, ptr %_0, align 4, !dbg !8085
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8085
  %3 = load i32, ptr %2, align 4, !dbg !8085
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !8085
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !8085
  ret { i32, i32 } %5, !dbg !8085
}

; core::num::<impl usize>::from_str_radix
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num23_$LT$impl$u20$usize$GT$14from_str_radix17he829758c6626fb2fE"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %src.0, i32 %src.1, i32 %radix) unnamed_addr #0 !dbg !8086 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %radix.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [8 x i8], align 4
  store ptr %src.0, ptr %src.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 4
  store i32 %src.1, ptr %0, align 4
    #dbg_declare(ptr %src.dbg.spill, !8105, !DIExpression(), !8107)
  store i32 %radix, ptr %radix.dbg.spill, align 4
    #dbg_declare(ptr %radix.dbg.spill, !8106, !DIExpression(), !8108)
  store ptr %src.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %src.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !8109)
  %2 = insertvalue { ptr, i32 } poison, ptr %src.0, 0, !dbg !8111
  %3 = insertvalue { ptr, i32 } %2, i32 %src.1, 1, !dbg !8111
  %_3.0 = extractvalue { ptr, i32 } %3, 0, !dbg !8112
  %_3.1 = extractvalue { ptr, i32 } %3, 1, !dbg !8112
; call core::num::<impl usize>::from_ascii_radix
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$16from_ascii_radix17haecc50657e6b2bd2E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %_3.0, i32 %_3.1, i32 %radix) #13, !dbg !8113
  ret void, !dbg !8114
}

; core::num::<impl usize>::from_ascii_radix
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num23_$LT$impl$u20$usize$GT$16from_ascii_radix17haecc50657e6b2bd2E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %src.0, i32 %src.1, i32 %radix) unnamed_addr #0 !dbg !8115 {
start:
  %digits.dbg.spill.i = alloca [8 x i8], align 4
  %is_signed_ty.dbg.spill.i = alloca [1 x i8], align 1
  %radix.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [1 x i8], align 1
  %x.dbg.spill36 = alloca [4 x i8], align 4
  %rest.dbg.spill33 = alloca [8 x i8], align 4
  %c.dbg.spill30 = alloca [4 x i8], align 4
  %x.dbg.spill27 = alloca [4 x i8], align 4
  %rest.dbg.spill26 = alloca [8 x i8], align 4
  %c.dbg.spill23 = alloca [4 x i8], align 4
  %value.dbg.spill21 = alloca [4 x i8], align 4
  %value.dbg.spill19 = alloca [4 x i8], align 4
  %x.dbg.spill17 = alloca [4 x i8], align 4
  %value.dbg.spill16 = alloca [4 x i8], align 4
  %rest.dbg.spill14 = alloca [8 x i8], align 4
  %c.dbg.spill11 = alloca [4 x i8], align 4
  %value.dbg.spill9 = alloca [4 x i8], align 4
  %value.dbg.spill7 = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %value.dbg.spill = alloca [4 x i8], align 4
  %rest.dbg.spill5 = alloca [8 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %is_positive.dbg.spill = alloca [1 x i8], align 1
  %rest.dbg.spill2 = alloca [4 x i8], align 4
  %rest.dbg.spill = alloca [8 x i8], align 4
  %is_signed_ty.dbg.spill = alloca [1 x i8], align 1
  %radix.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [8 x i8], align 4
  %_102 = alloca [8 x i8], align 4
  %_91 = alloca [8 x i8], align 4
  %mul1 = alloca [8 x i8], align 4
  %_77 = alloca [8 x i8], align 4
  %_66 = alloca [8 x i8], align 4
  %mul = alloca [8 x i8], align 4
  %_48 = alloca [8 x i8], align 4
  %_31 = alloca [8 x i8], align 4
  %result = alloca [4 x i8], align 4
  %rest = alloca [8 x i8], align 4
  %_12 = alloca [12 x i8], align 4
  %digits = alloca [8 x i8], align 4
  store ptr %src.0, ptr %src.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 4
  store i32 %src.1, ptr %0, align 4
    #dbg_declare(ptr %src.dbg.spill, !8119, !DIExpression(), !8173)
  store i32 %radix, ptr %radix.dbg.spill, align 4
    #dbg_declare(ptr %radix.dbg.spill, !8120, !DIExpression(), !8174)
    #dbg_declare(ptr %digits, !8125, !DIExpression(), !8175)
    #dbg_declare(ptr %rest, !8128, !DIExpression(), !8176)
    #dbg_declare(ptr %result, !8131, !DIExpression(), !8177)
    #dbg_declare(ptr %mul, !8150, !DIExpression(), !8178)
    #dbg_declare(ptr %mul1, !8163, !DIExpression(), !8179)
  %_3 = icmp ugt i32 2, %radix, !dbg !8180
  br i1 %_3, label %bb2, label %bb1, !dbg !8180

bb1:                                              ; preds = %start
  %_4 = icmp ugt i32 %radix, 36, !dbg !8181
  br i1 %_4, label %bb2, label %bb3, !dbg !8181

bb2:                                              ; preds = %bb1, %start
; call core::num::from_ascii_radix_panic
  call void @_ZN4core3num22from_ascii_radix_panic17ha2face5f2bfe58c6E(i32 %radix, ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !8182
  unreachable, !dbg !8182

bb3:                                              ; preds = %bb1
; call core::slice::<impl [T]>::is_empty
  %_6 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %src.0, i32 %src.1) #13, !dbg !8183
  br i1 %_6, label %bb5, label %bb6, !dbg !8184

bb6:                                              ; preds = %bb3
  store i8 0, ptr %is_signed_ty.dbg.spill, align 1, !dbg !8185
    #dbg_declare(ptr %is_signed_ty.dbg.spill, !8121, !DIExpression(), !8186)
  %1 = icmp eq i32 %src.1, 1, !dbg !8187
  br i1 %1, label %bb8, label %bb7, !dbg !8187

bb5:                                              ; preds = %bb3
  %2 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8188
  store i8 0, ptr %2, align 1, !dbg !8188
  store i8 1, ptr %_0, align 4, !dbg !8188
  br label %bb57, !dbg !8189

bb8:                                              ; preds = %bb6
  %3 = getelementptr inbounds nuw i8, ptr %src.0, i32 0, !dbg !8191
  %4 = load i8, ptr %3, align 1, !dbg !8191
  switch i8 %4, label %bb7 [
    i8 43, label %bb13
    i8 45, label %bb13
  ], !dbg !8191

bb7:                                              ; preds = %bb8, %bb6
  %_15 = icmp uge i32 %src.1, 1, !dbg !8192
  br i1 %_15, label %bb10, label %bb9, !dbg !8192

bb13:                                             ; preds = %bb8, %bb8
  %5 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8193
  store i8 1, ptr %5, align 1, !dbg !8193
  store i8 1, ptr %_0, align 4, !dbg !8193
  br label %bb57, !dbg !8194

bb57:                                             ; preds = %bb5, %bb23, %bb56, %bb30, %bb43, %bb40, %bb38, %bb54, %bb51, %bb49, %bb13
  ret void, !dbg !8196

bb9:                                              ; preds = %bb11, %bb10, %bb7
  store i8 1, ptr %_12, align 4, !dbg !8197
  %6 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !8197
  store ptr %src.0, ptr %6, align 4, !dbg !8197
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !8197
  store i32 %src.1, ptr %7, align 4, !dbg !8197
  br label %bb15, !dbg !8198

bb10:                                             ; preds = %bb7
  %8 = getelementptr inbounds nuw i8, ptr %src.0, i32 0, !dbg !8191
  %9 = load i8, ptr %8, align 1, !dbg !8191
  switch i8 %9, label %bb9 [
    i8 43, label %bb12
    i8 45, label %bb11
  ], !dbg !8191

bb12:                                             ; preds = %bb10
  %rest.0 = getelementptr inbounds nuw i8, ptr %src.0, i32 1, !dbg !8199
  %rest.1 = sub i32 %src.1, 1, !dbg !8199
  store ptr %rest.0, ptr %rest.dbg.spill, align 4, !dbg !8199
  %10 = getelementptr inbounds i8, ptr %rest.dbg.spill, i32 4, !dbg !8199
  store i32 %rest.1, ptr %10, align 4, !dbg !8199
    #dbg_declare(ptr %rest.dbg.spill, !8126, !DIExpression(), !8200)
  store i8 1, ptr %_12, align 4, !dbg !8201
  %11 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !8201
  store ptr %rest.0, ptr %11, align 4, !dbg !8201
  %12 = getelementptr inbounds i8, ptr %11, i32 4, !dbg !8201
  store i32 %rest.1, ptr %12, align 4, !dbg !8201
  br label %bb15, !dbg !8202

bb11:                                             ; preds = %bb10
  %13 = getelementptr inbounds nuw i8, ptr %src.0, i32 1, !dbg !8203
  %14 = sub i32 %src.1, 1, !dbg !8203
  store ptr %13, ptr %rest, align 4, !dbg !8203
  %15 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !8203
  store i32 %14, ptr %15, align 4, !dbg !8203
  store ptr %rest, ptr %rest.dbg.spill2, align 4, !dbg !8203
    #dbg_declare(ptr %rest.dbg.spill2, !8130, !DIExpression(), !8176)
  br label %bb9, !dbg !8204

bb15:                                             ; preds = %bb9, %bb14, %bb12
  %16 = load i8, ptr %_12, align 4, !dbg !8205
  %is_positive = trunc nuw i8 %16 to i1, !dbg !8205
  %17 = zext i1 %is_positive to i8, !dbg !8205
  store i8 %17, ptr %is_positive.dbg.spill, align 1, !dbg !8205
    #dbg_declare(ptr %is_positive.dbg.spill, !8123, !DIExpression(), !8206)
  %18 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !8207
  %19 = load ptr, ptr %18, align 4, !dbg !8207
  %20 = getelementptr inbounds i8, ptr %18, i32 4, !dbg !8207
  %21 = load i32, ptr %20, align 4, !dbg !8207
  store ptr %19, ptr %digits, align 4, !dbg !8207
  %22 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8207
  store i32 %21, ptr %22, align 4, !dbg !8207
  store i32 0, ptr %result, align 4, !dbg !8208
  %_23.0 = load ptr, ptr %digits, align 4, !dbg !8209
  %23 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8209
  %_23.1 = load i32, ptr %23, align 4, !dbg !8209
  store i32 %radix, ptr %radix.dbg.spill.i, align 4
    #dbg_declare(ptr %radix.dbg.spill.i, !8210, !DIExpression(), !8215)
  store i8 0, ptr %is_signed_ty.dbg.spill.i, align 1
    #dbg_declare(ptr %is_signed_ty.dbg.spill.i, !8213, !DIExpression(), !8217)
  store ptr %_23.0, ptr %digits.dbg.spill.i, align 4
  %24 = getelementptr inbounds i8, ptr %digits.dbg.spill.i, i32 4
  store i32 %_23.1, ptr %24, align 4
    #dbg_declare(ptr %digits.dbg.spill.i, !8214, !DIExpression(), !8218)
  %_4.i = icmp ule i32 %radix, 16, !dbg !8219
  br i1 %_4.i, label %bb1.i, label %bb2.i, !dbg !8219

bb2.i:                                            ; preds = %bb15
  store i8 0, ptr %_0.i, align 1, !dbg !8219
  br label %_ZN4core3num16can_not_overflow17hbb3d2d467242870fE.exit, !dbg !8219

bb1.i:                                            ; preds = %bb15
  %25 = icmp ule i32 %_23.1, 8, !dbg !8220
  %26 = zext i1 %25 to i8, !dbg !8220
  store i8 %26, ptr %_0.i, align 1, !dbg !8220
  br label %_ZN4core3num16can_not_overflow17hbb3d2d467242870fE.exit, !dbg !8219

_ZN4core3num16can_not_overflow17hbb3d2d467242870fE.exit: ; preds = %bb2.i, %bb1.i
  %27 = load i8, ptr %_0.i, align 1, !dbg !8221
  %28 = trunc nuw i8 %27 to i1, !dbg !8221
  br i1 %28, label %bb17, label %bb33, !dbg !8222

bb14:                                             ; No predecessors!
  store i8 0, ptr %_12, align 4, !dbg !8223
  %29 = load ptr, ptr %rest, align 4, !dbg !8223
  %30 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !8223
  %31 = load i32, ptr %30, align 4, !dbg !8223
  %32 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !8223
  store ptr %29, ptr %32, align 4, !dbg !8223
  %33 = getelementptr inbounds i8, ptr %32, i32 4, !dbg !8223
  store i32 %31, ptr %33, align 4, !dbg !8223
  br label %bb15, !dbg !8224

bb33:                                             ; preds = %_ZN4core3num16can_not_overflow17hbb3d2d467242870fE.exit
  br i1 %is_positive, label %bb34, label %bb45, !dbg !8225

bb17:                                             ; preds = %_ZN4core3num16can_not_overflow17hbb3d2d467242870fE.exit
  br i1 %is_positive, label %bb18, label %bb26, !dbg !8226

bb45:                                             ; preds = %bb55, %bb33
  %34 = load ptr, ptr %digits, align 4, !dbg !8227
  %35 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8227
  %_83 = load i32, ptr %35, align 4, !dbg !8227
  %_84 = icmp uge i32 %_83, 1, !dbg !8227
  br i1 %_84, label %bb46, label %bb56, !dbg !8227

bb34:                                             ; preds = %bb44, %bb33
  %36 = load ptr, ptr %digits, align 4, !dbg !8228
  %37 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8228
  %_58 = load i32, ptr %37, align 4, !dbg !8228
  %_59 = icmp uge i32 %_58, 1, !dbg !8228
  br i1 %_59, label %bb35, label %bb56, !dbg !8228

bb56:                                             ; preds = %bb18, %bb26, %bb34, %bb45
  %_108 = load i32, ptr %result, align 4, !dbg !8229
  %38 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8230
  store i32 %_108, ptr %38, align 4, !dbg !8230
  store i8 0, ptr %_0, align 4, !dbg !8230
  br label %bb57, !dbg !8196

bb46:                                             ; preds = %bb45
  %39 = load ptr, ptr %digits, align 4, !dbg !8231
  %40 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8231
  %41 = load i32, ptr %40, align 4, !dbg !8231
  %c = getelementptr inbounds nuw i8, ptr %39, i32 0, !dbg !8231
  store ptr %c, ptr %c.dbg.spill, align 4, !dbg !8231
    #dbg_declare(ptr %c.dbg.spill, !8160, !DIExpression(), !8231)
  %42 = load ptr, ptr %digits, align 4, !dbg !8232
  %43 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8232
  %44 = load i32, ptr %43, align 4, !dbg !8232
  %rest.03 = getelementptr inbounds nuw i8, ptr %42, i32 1, !dbg !8232
  %rest.14 = sub i32 %44, 1, !dbg !8232
  store ptr %rest.03, ptr %rest.dbg.spill5, align 4, !dbg !8232
  %45 = getelementptr inbounds i8, ptr %rest.dbg.spill5, i32 4, !dbg !8232
  store i32 %rest.14, ptr %45, align 4, !dbg !8232
    #dbg_declare(ptr %rest.dbg.spill5, !8162, !DIExpression(), !8232)
  %_88 = load i32, ptr %result, align 4, !dbg !8233
; call core::num::<impl usize>::checked_mul
  %46 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %_88, i32 %radix) #13, !dbg !8234
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !8234
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !8234
  store i32 %47, ptr %mul1, align 4, !dbg !8234
  %49 = getelementptr inbounds i8, ptr %mul1, i32 4, !dbg !8234
  store i32 %48, ptr %49, align 4, !dbg !8234
  %_93 = load i8, ptr %c, align 1, !dbg !8235
  %_92 = zext i8 %_93 to i32, !dbg !8236
; call core::char::methods::<impl char>::to_digit
  %50 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_92, i32 %radix) #13, !dbg !8237
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !8237
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !8237
  store i32 %51, ptr %_91, align 4, !dbg !8237
  %53 = getelementptr inbounds i8, ptr %_91, i32 4, !dbg !8237
  store i32 %52, ptr %53, align 4, !dbg !8237
  %_94 = load i32, ptr %_91, align 4, !dbg !8236
  %54 = getelementptr inbounds i8, ptr %_91, i32 4, !dbg !8236
  %55 = load i32, ptr %54, align 4, !dbg !8236
  %56 = trunc nuw i32 %_94 to i1, !dbg !8238
  br i1 %56, label %bb50, label %bb49, !dbg !8238

bb50:                                             ; preds = %bb46
  %57 = getelementptr inbounds i8, ptr %_91, i32 4, !dbg !8239
  %value = load i32, ptr %57, align 4, !dbg !8239
  store i32 %value, ptr %value.dbg.spill, align 4, !dbg !8239
    #dbg_declare(ptr %value.dbg.spill, !8167, !DIExpression(), !8240)
  store i32 %value, ptr %x.dbg.spill, align 4, !dbg !8241
    #dbg_declare(ptr %x.dbg.spill, !8165, !DIExpression(), !8242)
  %_98 = load i32, ptr %mul1, align 4, !dbg !8243
  %58 = getelementptr inbounds i8, ptr %mul1, i32 4, !dbg !8243
  %59 = load i32, ptr %58, align 4, !dbg !8243
  %60 = trunc nuw i32 %_98 to i1, !dbg !8244
  br i1 %60, label %bb52, label %bb51, !dbg !8244

bb49:                                             ; preds = %bb46
  %61 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8245
  store i8 1, ptr %61, align 1, !dbg !8245
  store i8 1, ptr %_0, align 4, !dbg !8245
  br label %bb57, !dbg !8246

bb52:                                             ; preds = %bb50
  %62 = getelementptr inbounds i8, ptr %mul1, i32 4, !dbg !8248
  %value6 = load i32, ptr %62, align 4, !dbg !8248
  store i32 %value6, ptr %value.dbg.spill7, align 4, !dbg !8248
    #dbg_declare(ptr %value.dbg.spill7, !8169, !DIExpression(), !8249)
  store i32 %value6, ptr %result, align 4, !dbg !8250
  %_103 = load i32, ptr %result, align 4, !dbg !8251
; call core::num::<impl usize>::checked_sub
  %63 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hf518b4cbfbcb79daE"(i32 %_103, i32 %value) #13, !dbg !8252
  %64 = extractvalue { i32, i32 } %63, 0, !dbg !8252
  %65 = extractvalue { i32, i32 } %63, 1, !dbg !8252
  store i32 %64, ptr %_102, align 4, !dbg !8252
  %66 = getelementptr inbounds i8, ptr %_102, i32 4, !dbg !8252
  store i32 %65, ptr %66, align 4, !dbg !8252
  %_104 = load i32, ptr %_102, align 4, !dbg !8252
  %67 = getelementptr inbounds i8, ptr %_102, i32 4, !dbg !8252
  %68 = load i32, ptr %67, align 4, !dbg !8252
  %69 = trunc nuw i32 %_104 to i1, !dbg !8244
  br i1 %69, label %bb55, label %bb54, !dbg !8244

bb51:                                             ; preds = %bb50
  %70 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8253
  store i8 3, ptr %70, align 1, !dbg !8253
  store i8 1, ptr %_0, align 4, !dbg !8253
  br label %bb57, !dbg !8254

bb55:                                             ; preds = %bb52
  %71 = getelementptr inbounds i8, ptr %_102, i32 4, !dbg !8248
  %value8 = load i32, ptr %71, align 4, !dbg !8248
  store i32 %value8, ptr %value.dbg.spill9, align 4, !dbg !8248
    #dbg_declare(ptr %value.dbg.spill9, !8171, !DIExpression(), !8256)
  store i32 %value8, ptr %result, align 4, !dbg !8257
  store ptr %rest.03, ptr %digits, align 4, !dbg !8258
  %72 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8258
  store i32 %rest.14, ptr %72, align 4, !dbg !8258
  br label %bb45, !dbg !8259

bb54:                                             ; preds = %bb52
  %73 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8253
  store i8 3, ptr %73, align 1, !dbg !8253
  store i8 1, ptr %_0, align 4, !dbg !8253
  br label %bb57, !dbg !8254

bb35:                                             ; preds = %bb34
  %74 = load ptr, ptr %digits, align 4, !dbg !8260
  %75 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8260
  %76 = load i32, ptr %75, align 4, !dbg !8260
  %c10 = getelementptr inbounds nuw i8, ptr %74, i32 0, !dbg !8260
  store ptr %c10, ptr %c.dbg.spill11, align 4, !dbg !8260
    #dbg_declare(ptr %c.dbg.spill11, !8147, !DIExpression(), !8260)
  %77 = load ptr, ptr %digits, align 4, !dbg !8261
  %78 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8261
  %79 = load i32, ptr %78, align 4, !dbg !8261
  %rest.012 = getelementptr inbounds nuw i8, ptr %77, i32 1, !dbg !8261
  %rest.113 = sub i32 %79, 1, !dbg !8261
  store ptr %rest.012, ptr %rest.dbg.spill14, align 4, !dbg !8261
  %80 = getelementptr inbounds i8, ptr %rest.dbg.spill14, i32 4, !dbg !8261
  store i32 %rest.113, ptr %80, align 4, !dbg !8261
    #dbg_declare(ptr %rest.dbg.spill14, !8149, !DIExpression(), !8261)
  %_63 = load i32, ptr %result, align 4, !dbg !8262
; call core::num::<impl usize>::checked_mul
  %81 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %_63, i32 %radix) #13, !dbg !8263
  %82 = extractvalue { i32, i32 } %81, 0, !dbg !8263
  %83 = extractvalue { i32, i32 } %81, 1, !dbg !8263
  store i32 %82, ptr %mul, align 4, !dbg !8263
  %84 = getelementptr inbounds i8, ptr %mul, i32 4, !dbg !8263
  store i32 %83, ptr %84, align 4, !dbg !8263
  %_68 = load i8, ptr %c10, align 1, !dbg !8264
  %_67 = zext i8 %_68 to i32, !dbg !8265
; call core::char::methods::<impl char>::to_digit
  %85 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_67, i32 %radix) #13, !dbg !8266
  %86 = extractvalue { i32, i32 } %85, 0, !dbg !8266
  %87 = extractvalue { i32, i32 } %85, 1, !dbg !8266
  store i32 %86, ptr %_66, align 4, !dbg !8266
  %88 = getelementptr inbounds i8, ptr %_66, i32 4, !dbg !8266
  store i32 %87, ptr %88, align 4, !dbg !8266
  %_69 = load i32, ptr %_66, align 4, !dbg !8265
  %89 = getelementptr inbounds i8, ptr %_66, i32 4, !dbg !8265
  %90 = load i32, ptr %89, align 4, !dbg !8265
  %91 = trunc nuw i32 %_69 to i1, !dbg !8267
  br i1 %91, label %bb39, label %bb38, !dbg !8267

bb39:                                             ; preds = %bb35
  %92 = getelementptr inbounds i8, ptr %_66, i32 4, !dbg !8268
  %value15 = load i32, ptr %92, align 4, !dbg !8268
  store i32 %value15, ptr %value.dbg.spill16, align 4, !dbg !8268
    #dbg_declare(ptr %value.dbg.spill16, !8154, !DIExpression(), !8269)
  store i32 %value15, ptr %x.dbg.spill17, align 4, !dbg !8270
    #dbg_declare(ptr %x.dbg.spill17, !8152, !DIExpression(), !8271)
  %_73 = load i32, ptr %mul, align 4, !dbg !8272
  %93 = getelementptr inbounds i8, ptr %mul, i32 4, !dbg !8272
  %94 = load i32, ptr %93, align 4, !dbg !8272
  %95 = trunc nuw i32 %_73 to i1, !dbg !8273
  br i1 %95, label %bb41, label %bb40, !dbg !8273

bb38:                                             ; preds = %bb35
  %96 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8274
  store i8 1, ptr %96, align 1, !dbg !8274
  store i8 1, ptr %_0, align 4, !dbg !8274
  br label %bb57, !dbg !8275

bb41:                                             ; preds = %bb39
  %97 = getelementptr inbounds i8, ptr %mul, i32 4, !dbg !8277
  %value18 = load i32, ptr %97, align 4, !dbg !8277
  store i32 %value18, ptr %value.dbg.spill19, align 4, !dbg !8277
    #dbg_declare(ptr %value.dbg.spill19, !8156, !DIExpression(), !8278)
  store i32 %value18, ptr %result, align 4, !dbg !8279
  %_78 = load i32, ptr %result, align 4, !dbg !8280
; call core::num::<impl usize>::checked_add
  %98 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE"(i32 %_78, i32 %value15) #13, !dbg !8281
  %99 = extractvalue { i32, i32 } %98, 0, !dbg !8281
  %100 = extractvalue { i32, i32 } %98, 1, !dbg !8281
  store i32 %99, ptr %_77, align 4, !dbg !8281
  %101 = getelementptr inbounds i8, ptr %_77, i32 4, !dbg !8281
  store i32 %100, ptr %101, align 4, !dbg !8281
  %_79 = load i32, ptr %_77, align 4, !dbg !8281
  %102 = getelementptr inbounds i8, ptr %_77, i32 4, !dbg !8281
  %103 = load i32, ptr %102, align 4, !dbg !8281
  %104 = trunc nuw i32 %_79 to i1, !dbg !8273
  br i1 %104, label %bb44, label %bb43, !dbg !8273

bb40:                                             ; preds = %bb39
  %105 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8282
  store i8 2, ptr %105, align 1, !dbg !8282
  store i8 1, ptr %_0, align 4, !dbg !8282
  br label %bb57, !dbg !8283

bb44:                                             ; preds = %bb41
  %106 = getelementptr inbounds i8, ptr %_77, i32 4, !dbg !8277
  %value20 = load i32, ptr %106, align 4, !dbg !8277
  store i32 %value20, ptr %value.dbg.spill21, align 4, !dbg !8277
    #dbg_declare(ptr %value.dbg.spill21, !8158, !DIExpression(), !8285)
  store i32 %value20, ptr %result, align 4, !dbg !8286
  store ptr %rest.012, ptr %digits, align 4, !dbg !8287
  %107 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8287
  store i32 %rest.113, ptr %107, align 4, !dbg !8287
  br label %bb34, !dbg !8259

bb43:                                             ; preds = %bb41
  %108 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8282
  store i8 2, ptr %108, align 1, !dbg !8282
  store i8 1, ptr %_0, align 4, !dbg !8282
  br label %bb57, !dbg !8283

bb26:                                             ; preds = %bb32, %bb17
  %109 = load ptr, ptr %digits, align 4, !dbg !8288
  %110 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8288
  %_41 = load i32, ptr %110, align 4, !dbg !8288
  %_42 = icmp uge i32 %_41, 1, !dbg !8288
  br i1 %_42, label %bb27, label %bb56, !dbg !8288

bb18:                                             ; preds = %bb25, %bb17
  %111 = load ptr, ptr %digits, align 4, !dbg !8289
  %112 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8289
  %_24 = load i32, ptr %112, align 4, !dbg !8289
  %_25 = icmp uge i32 %_24, 1, !dbg !8289
  br i1 %_25, label %bb19, label %bb56, !dbg !8289

bb27:                                             ; preds = %bb26
  %113 = load ptr, ptr %digits, align 4, !dbg !8290
  %114 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8290
  %115 = load i32, ptr %114, align 4, !dbg !8290
  %c22 = getelementptr inbounds nuw i8, ptr %113, i32 0, !dbg !8290
  store ptr %c22, ptr %c.dbg.spill23, align 4, !dbg !8290
    #dbg_declare(ptr %c.dbg.spill23, !8140, !DIExpression(), !8290)
  %116 = load ptr, ptr %digits, align 4, !dbg !8291
  %117 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8291
  %118 = load i32, ptr %117, align 4, !dbg !8291
  %rest.024 = getelementptr inbounds nuw i8, ptr %116, i32 1, !dbg !8291
  %rest.125 = sub i32 %118, 1, !dbg !8291
  store ptr %rest.024, ptr %rest.dbg.spill26, align 4, !dbg !8291
  %119 = getelementptr inbounds i8, ptr %rest.dbg.spill26, i32 4, !dbg !8291
  store i32 %rest.125, ptr %119, align 4, !dbg !8291
    #dbg_declare(ptr %rest.dbg.spill26, !8142, !DIExpression(), !8291)
  %_45 = load i32, ptr %result, align 4, !dbg !8292
  %120 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_45, i32 %radix), !dbg !8292
  %_47.0 = extractvalue { i32, i1 } %120, 0, !dbg !8292
  %_47.1 = extractvalue { i32, i1 } %120, 1, !dbg !8292
  br i1 %_47.1, label %panic, label %bb28, !dbg !8292

bb28:                                             ; preds = %bb27
  store i32 %_47.0, ptr %result, align 4, !dbg !8293
  %_50 = load i8, ptr %c22, align 1, !dbg !8294
  %_49 = zext i8 %_50 to i32, !dbg !8295
; call core::char::methods::<impl char>::to_digit
  %121 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_49, i32 %radix) #13, !dbg !8296
  %122 = extractvalue { i32, i32 } %121, 0, !dbg !8296
  %123 = extractvalue { i32, i32 } %121, 1, !dbg !8296
  store i32 %122, ptr %_48, align 4, !dbg !8296
  %124 = getelementptr inbounds i8, ptr %_48, i32 4, !dbg !8296
  store i32 %123, ptr %124, align 4, !dbg !8296
  %_51 = load i32, ptr %_48, align 4, !dbg !8295
  %125 = getelementptr inbounds i8, ptr %_48, i32 4, !dbg !8295
  %126 = load i32, ptr %125, align 4, !dbg !8295
  %127 = trunc nuw i32 %_51 to i1, !dbg !8297
  br i1 %127, label %bb31, label %bb30, !dbg !8297

panic:                                            ; preds = %bb27
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !8292
  unreachable, !dbg !8292

bb31:                                             ; preds = %bb28
  %128 = getelementptr inbounds i8, ptr %_48, i32 4, !dbg !8298
  %x = load i32, ptr %128, align 4, !dbg !8298
  store i32 %x, ptr %x.dbg.spill27, align 4, !dbg !8298
    #dbg_declare(ptr %x.dbg.spill27, !8143, !DIExpression(), !8299)
    #dbg_declare(ptr %x.dbg.spill27, !8145, !DIExpression(), !8300)
  %_55 = load i32, ptr %result, align 4, !dbg !8301
  %_57.0 = sub i32 %_55, %x, !dbg !8301
  %_57.1 = icmp ult i32 %_55, %x, !dbg !8301
  br i1 %_57.1, label %panic28, label %bb32, !dbg !8301

bb30:                                             ; preds = %bb28
  %129 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8302
  store i8 1, ptr %129, align 1, !dbg !8302
  store i8 1, ptr %_0, align 4, !dbg !8302
  br label %bb57, !dbg !8303

bb32:                                             ; preds = %bb31
  store i32 %_57.0, ptr %result, align 4, !dbg !8305
  store ptr %rest.024, ptr %digits, align 4, !dbg !8306
  %130 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8306
  store i32 %rest.125, ptr %130, align 4, !dbg !8306
  br label %bb26, !dbg !8307

panic28:                                          ; preds = %bb31
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !8301
  unreachable, !dbg !8301

bb19:                                             ; preds = %bb18
  %131 = load ptr, ptr %digits, align 4, !dbg !8308
  %132 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8308
  %133 = load i32, ptr %132, align 4, !dbg !8308
  %c29 = getelementptr inbounds nuw i8, ptr %131, i32 0, !dbg !8308
  store ptr %c29, ptr %c.dbg.spill30, align 4, !dbg !8308
    #dbg_declare(ptr %c.dbg.spill30, !8133, !DIExpression(), !8308)
  %134 = load ptr, ptr %digits, align 4, !dbg !8309
  %135 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8309
  %136 = load i32, ptr %135, align 4, !dbg !8309
  %rest.031 = getelementptr inbounds nuw i8, ptr %134, i32 1, !dbg !8309
  %rest.132 = sub i32 %136, 1, !dbg !8309
  store ptr %rest.031, ptr %rest.dbg.spill33, align 4, !dbg !8309
  %137 = getelementptr inbounds i8, ptr %rest.dbg.spill33, i32 4, !dbg !8309
  store i32 %rest.132, ptr %137, align 4, !dbg !8309
    #dbg_declare(ptr %rest.dbg.spill33, !8135, !DIExpression(), !8309)
  %_28 = load i32, ptr %result, align 4, !dbg !8310
  %138 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_28, i32 %radix), !dbg !8310
  %_30.0 = extractvalue { i32, i1 } %138, 0, !dbg !8310
  %_30.1 = extractvalue { i32, i1 } %138, 1, !dbg !8310
  br i1 %_30.1, label %panic34, label %bb20, !dbg !8310

bb20:                                             ; preds = %bb19
  store i32 %_30.0, ptr %result, align 4, !dbg !8311
  %_33 = load i8, ptr %c29, align 1, !dbg !8312
  %_32 = zext i8 %_33 to i32, !dbg !8313
; call core::char::methods::<impl char>::to_digit
  %139 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %_32, i32 %radix) #13, !dbg !8314
  %140 = extractvalue { i32, i32 } %139, 0, !dbg !8314
  %141 = extractvalue { i32, i32 } %139, 1, !dbg !8314
  store i32 %140, ptr %_31, align 4, !dbg !8314
  %142 = getelementptr inbounds i8, ptr %_31, i32 4, !dbg !8314
  store i32 %141, ptr %142, align 4, !dbg !8314
  %_34 = load i32, ptr %_31, align 4, !dbg !8313
  %143 = getelementptr inbounds i8, ptr %_31, i32 4, !dbg !8313
  %144 = load i32, ptr %143, align 4, !dbg !8313
  %145 = trunc nuw i32 %_34 to i1, !dbg !8315
  br i1 %145, label %bb24, label %bb23, !dbg !8315

panic34:                                          ; preds = %bb19
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !8310
  unreachable, !dbg !8310

bb24:                                             ; preds = %bb20
  %146 = getelementptr inbounds i8, ptr %_31, i32 4, !dbg !8316
  %x35 = load i32, ptr %146, align 4, !dbg !8316
  store i32 %x35, ptr %x.dbg.spill36, align 4, !dbg !8316
    #dbg_declare(ptr %x.dbg.spill36, !8136, !DIExpression(), !8317)
    #dbg_declare(ptr %x.dbg.spill36, !8138, !DIExpression(), !8318)
  %_38 = load i32, ptr %result, align 4, !dbg !8319
  %_40.0 = add i32 %_38, %x35, !dbg !8319
  %_40.1 = icmp ult i32 %_40.0, %_38, !dbg !8319
  br i1 %_40.1, label %panic37, label %bb25, !dbg !8319

bb23:                                             ; preds = %bb20
  %147 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8320
  store i8 1, ptr %147, align 1, !dbg !8320
  store i8 1, ptr %_0, align 4, !dbg !8320
  br label %bb57, !dbg !8303

bb25:                                             ; preds = %bb24
  store i32 %_40.0, ptr %result, align 4, !dbg !8321
  store ptr %rest.031, ptr %digits, align 4, !dbg !8322
  %148 = getelementptr inbounds i8, ptr %digits, i32 4, !dbg !8322
  store i32 %rest.132, ptr %148, align 4, !dbg !8322
  br label %bb18, !dbg !8307

panic37:                                          ; preds = %bb24
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_24f471c037342a73d49e22aaced163ba) #14, !dbg !8319
  unreachable, !dbg !8319

bb22:                                             ; No predecessors!
  unreachable, !dbg !8189
}

; core::num::<impl core::str::traits::FromStr for usize>::from_str
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17hce002435c662e58fE"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %src.0, i32 %src.1) unnamed_addr #0 !dbg !8323 {
start:
  %src.dbg.spill = alloca [8 x i8], align 4
  store ptr %src.0, ptr %src.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 4
  store i32 %src.1, ptr %0, align 4
    #dbg_declare(ptr %src.dbg.spill, !8328, !DIExpression(), !8329)
; call core::num::<impl usize>::from_str_radix
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$14from_str_radix17he829758c6626fb2fE"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %src.0, i32 %src.1, i32 10) #13, !dbg !8330
  ret void, !dbg !8331
}

; core::ops::control_flow::ControlFlow<B,C>::break_value
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17hf6e5f6ad675834d7E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !8332 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8337, !DIExpression(), !8340)
  %_2 = load i32, ptr %self, align 4, !dbg !8341
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8341
  %4 = load i32, ptr %3, align 4, !dbg !8341
  %5 = trunc nuw i32 %_2 to i1, !dbg !8342
  br i1 %5, label %bb2, label %bb3, !dbg !8342

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8343
  %x = load i32, ptr %6, align 4, !dbg !8343
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8343
    #dbg_declare(ptr %x.dbg.spill, !8338, !DIExpression(), !8344)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8345
  store i32 %x, ptr %7, align 4, !dbg !8345
  store i32 1, ptr %_0, align 4, !dbg !8345
  br label %bb6, !dbg !8346

bb3:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !8347
  br label %bb6, !dbg !8347

bb6:                                              ; preds = %bb2, %bb3
  %_4 = load i32, ptr %self, align 4, !dbg !8348
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8348
  %9 = load i32, ptr %8, align 4, !dbg !8348
  %10 = trunc nuw i32 %_4 to i1, !dbg !8348
  br i1 %10, label %bb4, label %bb5, !dbg !8348

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i32, ptr %_0, align 4, !dbg !8349
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8349
  %13 = load i32, ptr %12, align 4, !dbg !8349
  %14 = insertvalue { i32, i32 } poison, i32 %11, 0, !dbg !8349
  %15 = insertvalue { i32, i32 } %14, i32 %13, 1, !dbg !8349
  ret { i32, i32 } %15, !dbg !8349

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8348

bb1:                                              ; No predecessors!
  unreachable, !dbg !8341
}

; core::ops::range::RangeInclusive<Idx>::end
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h7cbd12770d5221c3E"(ptr align 4 %self) unnamed_addr #0 !dbg !8350 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8362, !DIExpression(), !8363)
  %_0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8364
  ret ptr %_0, !dbg !8365
}

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h53fd2a5488ac6380E"(ptr sret([12 x i8]) align 4 %_0, i32 %start1, i32 %end) unnamed_addr #0 !dbg !8366 {
start:
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  store i32 %start1, ptr %start.dbg.spill, align 4
    #dbg_declare(ptr %start.dbg.spill, !8371, !DIExpression(), !8373)
  store i32 %end, ptr %end.dbg.spill, align 4
    #dbg_declare(ptr %end.dbg.spill, !8372, !DIExpression(), !8374)
  store i32 %start1, ptr %_0, align 4, !dbg !8375
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8375
  store i32 %end, ptr %0, align 4, !dbg !8375
  %1 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !8375
  store i8 0, ptr %1, align 4, !dbg !8375
  ret void, !dbg !8376
}

; core::ops::range::RangeInclusive<usize>::into_slice_range
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h0aba1386ed5fda79E"(ptr align 4 %self) unnamed_addr #0 !dbg !8377 {
start:
  %exclusive_end.dbg.spill = alloca [4 x i8], align 4
  %start1 = alloca [4 x i8], align 4
    #dbg_declare(ptr %self, !8382, !DIExpression(), !8387)
    #dbg_declare(ptr %start1, !8385, !DIExpression(), !8388)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8389
  %_3 = load i32, ptr %0, align 4, !dbg !8389
  %_4.0 = add i32 %_3, 1, !dbg !8389
  %_4.1 = icmp ult i32 %_4.0, %_3, !dbg !8389
  br i1 %_4.1, label %panic, label %bb1, !dbg !8389

bb1:                                              ; preds = %start
  store i32 %_4.0, ptr %exclusive_end.dbg.spill, align 4, !dbg !8389
    #dbg_declare(ptr %exclusive_end.dbg.spill, !8383, !DIExpression(), !8390)
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !8391
  %2 = load i8, ptr %1, align 4, !dbg !8391
  %_6 = trunc nuw i8 %2 to i1, !dbg !8391
  br i1 %_6, label %bb2, label %bb3, !dbg !8391

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_e6fafa18fc9206e3da53fc079828daf0) #14, !dbg !8389
  unreachable, !dbg !8389

bb3:                                              ; preds = %bb1
  %3 = load i32, ptr %self, align 4, !dbg !8392
  store i32 %3, ptr %start1, align 4, !dbg !8392
  br label %bb4, !dbg !8393

bb2:                                              ; preds = %bb1
  store i32 %_4.0, ptr %start1, align 4, !dbg !8394
  br label %bb4, !dbg !8393

bb4:                                              ; preds = %bb2, %bb3
  %_7 = load i32, ptr %start1, align 4, !dbg !8395
  %4 = insertvalue { i32, i32 } poison, i32 %_7, 0, !dbg !8396
  %5 = insertvalue { i32, i32 } %4, i32 %_4.0, 1, !dbg !8396
  ret { i32, i32 } %5, !dbg !8396
}

; core::ops::function::Fn::call
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core3ops8function2Fn4call17h221f007c70093d42E(ptr align 1 %_1, ptr align 4 %0) unnamed_addr #0 !dbg !8397 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  store ptr %0, ptr %_2, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !8405, !DIExpression(), !8413)
    #dbg_declare(ptr %_2, !8406, !DIExpression(), !8413)
  %1 = load ptr, ptr %_2, align 4, !dbg !8413
; call rustc_demangle::v0::Printer::print_generic_arg
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer17print_generic_arg17h94f686437d5719d5E(ptr align 4 %1) #13, !dbg !8413
  ret i1 %_0, !dbg !8413
}

; core::ops::function::Fn::call
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core3ops8function2Fn4call17hd25a12ecb0781f6cE(ptr align 1 %_1, ptr align 4 %0) unnamed_addr #0 !dbg !8414 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  store ptr %0, ptr %_2, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !8416, !DIExpression(), !8418)
    #dbg_declare(ptr %_2, !8417, !DIExpression(), !8418)
  %1 = load ptr, ptr %_2, align 4, !dbg !8418
; call rustc_demangle::v0::Printer::print_type
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %1) #13, !dbg !8418
  ret i1 %_0, !dbg !8418
}

; core::ops::function::Fn::call
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core3ops8function2Fn4call17hfefefa743834d7f5E(ptr align 1 %_1, ptr align 4 %0) unnamed_addr #0 !dbg !8419 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  store ptr %0, ptr %_2, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !8421, !DIExpression(), !8423)
    #dbg_declare(ptr %_2, !8422, !DIExpression(), !8423)
  %1 = load ptr, ptr %_2, align 4, !dbg !8423
; call rustc_demangle::v0::Printer::print_dyn_trait
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer15print_dyn_trait17h2077f0323168ff5bE(ptr align 4 %1) #13, !dbg !8423
  ret i1 %_0, !dbg !8423
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3ops8function5FnMut8call_mut17ha8a1afda6865764dE(ptr align 1 %_1, i32 %0) unnamed_addr #0 !dbg !8424 {
start:
  %t.dbg.spill.i = alloca [4 x i8], align 4
  %e.i = alloca [0 x i8], align 1
  %self.i = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  store i32 %0, ptr %_2, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !8430, !DIExpression(), !8438)
    #dbg_declare(ptr %_2, !8431, !DIExpression(), !8438)
  %1 = load i32, ptr %_2, align 4, !dbg !8438
  store i32 %1, ptr %self.i, align 4
    #dbg_declare(ptr %self.i, !8439, !DIExpression(), !8449)
    #dbg_declare(ptr %e.i, !8447, !DIExpression(), !8451)
  %2 = load i32, ptr %self.i, align 4, !dbg !8452
  %3 = icmp eq i32 %2, 1114112, !dbg !8452
  %_2.i = select i1 %3, i32 1, i32 0, !dbg !8452
  %4 = trunc nuw i32 %_2.i to i1, !dbg !8453
  br i1 %4, label %bb2.i, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h962290102e1523aaE.exit", !dbg !8453

bb2.i:                                            ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17h0e0ed4031502a6aaE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i32 43, ptr align 1 %e.i, ptr align 4 @alloc_18bafa59a51fd0a7bd278489b6d6eb68) #14, !dbg !8454
  unreachable, !dbg !8454

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h962290102e1523aaE.exit": ; preds = %start
  %t.i = load i32, ptr %self.i, align 4, !dbg !8455
  store i32 %t.i, ptr %t.dbg.spill.i, align 4, !dbg !8455
    #dbg_declare(ptr %t.dbg.spill.i, !8445, !DIExpression(), !8456)
  ret i32 %t.i, !dbg !8438
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nounwind
define dso_local i8 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h35f121ff29b03874E"(ptr align 1 %self, ptr align 4 %0) unnamed_addr #1 !dbg !8457 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %args = alloca [8 x i8], align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %args, ptr align 4 %0, i32 8, i1 false)
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8461, !DIExpression(), !8468)
    #dbg_declare(ptr %args, !8462, !DIExpression(), !8469)
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  %_0 = call i8 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h0a07fb9b653d1643E"(ptr align 1 %self, ptr align 4 %args) #13, !dbg !8470
  ret i8 %_0, !dbg !8471
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h92d84ce9a89a78eeE"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %self, ptr align 1 %0, i32 %1) unnamed_addr #1 !dbg !8472 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %args = alloca [8 x i8], align 4
  store ptr %0, ptr %args, align 4
  %2 = getelementptr inbounds i8, ptr %args, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8474, !DIExpression(), !8481)
    #dbg_declare(ptr %args, !8475, !DIExpression(), !8482)
  %3 = load ptr, ptr %args, align 4, !dbg !8483
  %4 = getelementptr inbounds i8, ptr %args, i32 4, !dbg !8483
  %5 = load i32, ptr %4, align 4, !dbg !8483
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  call void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17ha29bdf3d74e4c4aaE"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %self, ptr align 1 %3, i32 %5) #13, !dbg !8484
  ret void, !dbg !8485
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nounwind
define dso_local i32 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hd23666a4b9597abeE"(ptr align 1 %self, i32 %0) unnamed_addr #1 !dbg !8486 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %args = alloca [4 x i8], align 4
  store i32 %0, ptr %args, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8488, !DIExpression(), !8492)
    #dbg_declare(ptr %args, !8489, !DIExpression(), !8493)
  %1 = load i32, ptr %args, align 4, !dbg !8494
; call core::ops::function::FnMut::call_mut
  %_0 = call i32 @_ZN4core3ops8function5FnMut8call_mut17ha8a1afda6865764dE(ptr align 1 %self, i32 %1) #13, !dbg !8495
  ret i32 %_0, !dbg !8496
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3ops8function6FnOnce9call_once17he18d56b5f027f6eaE(i32 %0) unnamed_addr #0 !dbg !8497 {
start:
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_2 = alloca [4 x i8], align 4
  store i32 %0, ptr %_2, align 4
    #dbg_declare(ptr %_1.dbg.spill, !8505, !DIExpression(), !8513)
    #dbg_declare(ptr %_2, !8506, !DIExpression(), !8513)
  %1 = load i32, ptr %_2, align 4, !dbg !8513
; call core::char::from_u32
  %_0 = call i32 @_ZN4core4char8from_u3217h3ca732bdf05cd746E(i32 %1) #13, !dbg !8513
  ret i32 %_0, !dbg !8513
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17hfe38cb335703ebf9E(ptr align 4 %0) unnamed_addr #0 !dbg !8514 {
start:
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_2 = alloca [4 x i8], align 4
  store ptr %0, ptr %_2, align 4
    #dbg_declare(ptr %_1.dbg.spill, !8518, !DIExpression(), !8520)
    #dbg_declare(ptr %_2, !8519, !DIExpression(), !8520)
  %1 = load ptr, ptr %_2, align 4, !dbg !8520
; call rustc_demangle::v0::Printer::print_type
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E(ptr align 4 %1) #13, !dbg !8520
  ret i1 %_0, !dbg !8520
}

; core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %this, i32 %count, i32 %size, ptr align 4 %0) unnamed_addr #0 !dbg !8521 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !8528, !DIExpression(), !8533)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !8529, !DIExpression(), !8533)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !8530, !DIExpression(), !8533)
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %msg.dbg.spill, align 4, !dbg !8534
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !8534
  store i32 214, ptr %1, align 4, !dbg !8534
    #dbg_declare(ptr %msg.dbg.spill, !8531, !DIExpression(), !8534)
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h7000176888ff5fa5E"(ptr %this, i32 %count, i32 %size) #13, !dbg !8535
  br i1 %_4, label %bb2, label %bb3, !dbg !8535

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !8538
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %2, align 4, !dbg !8538
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !8538
  store i32 214, ptr %3, align 4, !dbg !8538
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #13, !dbg !8539
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17ha90b816b7292deffE(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #14, !dbg !8540
  unreachable, !dbg !8540

bb2:                                              ; preds = %start
  ret void, !dbg !8541
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h7000176888ff5fa5E"(ptr %this, i32 %count, i32 %size) unnamed_addr #0 !dbg !8542 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !8546, !DIExpression(), !8549)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !8547, !DIExpression(), !8550)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !8548, !DIExpression(), !8551)
  store ptr %this, ptr %_4, align 4, !dbg !8552
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !8552
  store i32 %count, ptr %0, align 4, !dbg !8552
  %1 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !8552
  store i32 %size, ptr %1, align 4, !dbg !8552
  %2 = load ptr, ptr %_4, align 4, !dbg !8554
  %3 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !8554
  %4 = load i32, ptr %3, align 4, !dbg !8554
  %5 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !8554
  %6 = load i32, ptr %5, align 4, !dbg !8554
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17h8afcbe697c563539E"(ptr %2, i32 %4, i32 %6) #13, !dbg !8554
  ret i1 %_0, !dbg !8555
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17h8afcbe697c563539E"(ptr %this, i32 %count, i32 %size) unnamed_addr #0 !dbg !8556 {
start:
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %overflow.dbg.spill = alloca [1 x i8], align 1
  %byte_offset.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !8559, !DIExpression(), !8566)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !8560, !DIExpression(), !8566)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !8561, !DIExpression(), !8566)
; call core::num::<impl usize>::checked_mul
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %count, i32 %size) #13, !dbg !8567
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !8567
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !8567
  store i32 %1, ptr %_5, align 4, !dbg !8567
  %3 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !8567
  store i32 %2, ptr %3, align 4, !dbg !8567
  %_6 = load i32, ptr %_5, align 4, !dbg !8569
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !8569
  %5 = load i32, ptr %4, align 4, !dbg !8569
  %6 = trunc nuw i32 %_6 to i1, !dbg !8570
  br i1 %6, label %bb2, label %bb3, !dbg !8570

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !8571
  %byte_offset = load i32, ptr %7, align 4, !dbg !8571
  store i32 %byte_offset, ptr %byte_offset.dbg.spill, align 4, !dbg !8571
    #dbg_declare(ptr %byte_offset.dbg.spill, !8562, !DIExpression(), !8572)
  store ptr %this, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !8573, !DIExpression(), !8581)
  store ptr %this, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !8583, !DIExpression(), !8590)
  %_0.i = ptrtoint ptr %this to i32, !dbg !8592
  store i32 %_0.i, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !8593, !DIExpression(), !8600)
  store i32 %byte_offset, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !8596, !DIExpression(), !8602)
  %_5.0.i = add i32 %_0.i, %byte_offset, !dbg !8603
  %_5.1.i = icmp ult i32 %_5.0.i, %_0.i, !dbg !8603
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !8604
    #dbg_declare(ptr %a.dbg.spill.i, !8597, !DIExpression(), !8605)
  %8 = zext i1 %_5.1.i to i8, !dbg !8606
  store i8 %8, ptr %b.dbg.spill.i, align 1, !dbg !8606
    #dbg_declare(ptr %b.dbg.spill.i, !8599, !DIExpression(), !8607)
  %9 = insertvalue { i32, i1 } poison, i32 %_5.0.i, 0, !dbg !8608
  %10 = insertvalue { i32, i1 } %9, i1 %_5.1.i, 1, !dbg !8608
  %_8.0 = extractvalue { i32, i1 } %10, 0, !dbg !8609
  %_8.1 = extractvalue { i32, i1 } %10, 1, !dbg !8609
  %11 = zext i1 %_8.1 to i8, !dbg !8610
  store i8 %11, ptr %overflow.dbg.spill, align 1, !dbg !8610
    #dbg_declare(ptr %overflow.dbg.spill, !8564, !DIExpression(), !8611)
  %_10 = icmp ule i32 %byte_offset, 2147483647, !dbg !8612
  br i1 %_10, label %bb6, label %bb7, !dbg !8612

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !8613
  br label %bb8, !dbg !8614

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !8612
  br label %bb8, !dbg !8612

bb6:                                              ; preds = %bb2
  %12 = xor i1 %_8.1, true, !dbg !8615
  %13 = zext i1 %12 to i8, !dbg !8615
  store i8 %13, ptr %_0, align 1, !dbg !8615
  br label %bb8, !dbg !8612

bb8:                                              ; preds = %bb3, %bb6, %bb7
  %14 = load i8, ptr %_0, align 1, !dbg !8616
  %15 = trunc nuw i8 %14 to i1, !dbg !8616
  ret i1 %15, !dbg !8616

bb9:                                              ; No predecessors!
  unreachable, !dbg !8617
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h337dfc48d9fdebecE"(ptr %self.0, i32 %self.1) unnamed_addr #0 !dbg !8618 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8638, !DIExpression(), !8639)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !8640, !DIExpression(), !8650)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !8652
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !8652
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !8653
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !8653
  ret ptr %_4.0, !dbg !8654
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5b535dc032b49aeE"(ptr %self) unnamed_addr #0 !dbg !8655 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8665, !DIExpression(), !8666)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !8667, !DIExpression(), !8674)
  ret ptr %self, !dbg !8676
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hcb15b3d53cd50a46E"(ptr %self) unnamed_addr #0 !dbg !8677 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8687, !DIExpression(), !8688)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !8689, !DIExpression(), !8696)
  ret ptr %self, !dbg !8698
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h8f8196276a973e56E"(ptr align 4 %r.0, i32 %r.1) unnamed_addr #0 !dbg !8699 {
start:
  %r.dbg.spill = alloca [8 x i8], align 4
  store ptr %r.0, ptr %r.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i32 4
  store i32 %r.1, ptr %0, align 4
    #dbg_declare(ptr %r.dbg.spill, !8708, !DIExpression(), !8709)
  %1 = insertvalue { ptr, i32 } poison, ptr %r.0, 0, !dbg !8710
  %2 = insertvalue { ptr, i32 } %1, i32 %r.1, 1, !dbg !8710
  ret { ptr, i32 } %2, !dbg !8710
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17hceb4a26181774aa2E"(ptr align 4 %r) unnamed_addr #0 !dbg !8711 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !8716, !DIExpression(), !8717)
  ret ptr %r, !dbg !8718
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17he281a6a654334f5eE"(ptr align 4 %r) unnamed_addr #0 !dbg !8719 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !8724, !DIExpression(), !8725)
  ret ptr %r, !dbg !8726
}

; core::ptr::const_ptr::<impl *const T>::add::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17he1a74c10ff1d520fE"(ptr %this, i32 %count, i32 %size, ptr align 4 %0) unnamed_addr #0 !dbg !8727 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !8730, !DIExpression(), !8735)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !8731, !DIExpression(), !8735)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !8732, !DIExpression(), !8735)
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %msg.dbg.spill, align 4, !dbg !8736
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !8736
  store i32 214, ptr %1, align 4, !dbg !8736
    #dbg_declare(ptr %msg.dbg.spill, !8733, !DIExpression(), !8736)
; call core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h067b619b72e947f6E"(ptr %this, i32 %count, i32 %size) #13, !dbg !8737
  br i1 %_4, label %bb2, label %bb3, !dbg !8737

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !8739
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %2, align 4, !dbg !8739
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !8739
  store i32 214, ptr %3, align 4, !dbg !8739
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #13, !dbg !8740
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17ha90b816b7292deffE(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #14, !dbg !8741
  unreachable, !dbg !8741

bb2:                                              ; preds = %start
  ret void, !dbg !8742
}

; core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h067b619b72e947f6E"(ptr %this, i32 %count, i32 %size) unnamed_addr #0 !dbg !8743 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !8745, !DIExpression(), !8748)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !8746, !DIExpression(), !8749)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !8747, !DIExpression(), !8750)
  store ptr %this, ptr %_4, align 4, !dbg !8751
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !8751
  store i32 %count, ptr %0, align 4, !dbg !8751
  %1 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !8751
  store i32 %size, ptr %1, align 4, !dbg !8751
  %2 = load ptr, ptr %_4, align 4, !dbg !8753
  %3 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !8753
  %4 = load i32, ptr %3, align 4, !dbg !8753
  %5 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !8753
  %6 = load i32, ptr %5, align 4, !dbg !8753
; call core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17h1c6cb852e5f10124E"(ptr %2, i32 %4, i32 %6) #13, !dbg !8753
  ret i1 %_0, !dbg !8754
}

; core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17h1c6cb852e5f10124E"(ptr %this, i32 %count, i32 %size) unnamed_addr #0 !dbg !8755 {
start:
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %overflow.dbg.spill = alloca [1 x i8], align 1
  %byte_offset.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !8758, !DIExpression(), !8765)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !8759, !DIExpression(), !8765)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !8760, !DIExpression(), !8765)
; call core::num::<impl usize>::checked_mul
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E"(i32 %count, i32 %size) #13, !dbg !8766
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !8766
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !8766
  store i32 %1, ptr %_5, align 4, !dbg !8766
  %3 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !8766
  store i32 %2, ptr %3, align 4, !dbg !8766
  %_6 = load i32, ptr %_5, align 4, !dbg !8768
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !8768
  %5 = load i32, ptr %4, align 4, !dbg !8768
  %6 = trunc nuw i32 %_6 to i1, !dbg !8769
  br i1 %6, label %bb2, label %bb3, !dbg !8769

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !8770
  %byte_offset = load i32, ptr %7, align 4, !dbg !8770
  store i32 %byte_offset, ptr %byte_offset.dbg.spill, align 4, !dbg !8770
    #dbg_declare(ptr %byte_offset.dbg.spill, !8761, !DIExpression(), !8771)
  store ptr %this, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !8573, !DIExpression(), !8772)
  store ptr %this, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !8583, !DIExpression(), !8774)
  %_0.i = ptrtoint ptr %this to i32, !dbg !8776
  store i32 %_0.i, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !8593, !DIExpression(), !8777)
  store i32 %byte_offset, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !8596, !DIExpression(), !8779)
  %_5.0.i = add i32 %_0.i, %byte_offset, !dbg !8780
  %_5.1.i = icmp ult i32 %_5.0.i, %_0.i, !dbg !8780
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !8781
    #dbg_declare(ptr %a.dbg.spill.i, !8597, !DIExpression(), !8782)
  %8 = zext i1 %_5.1.i to i8, !dbg !8783
  store i8 %8, ptr %b.dbg.spill.i, align 1, !dbg !8783
    #dbg_declare(ptr %b.dbg.spill.i, !8599, !DIExpression(), !8784)
  %9 = insertvalue { i32, i1 } poison, i32 %_5.0.i, 0, !dbg !8785
  %10 = insertvalue { i32, i1 } %9, i1 %_5.1.i, 1, !dbg !8785
  %_8.0 = extractvalue { i32, i1 } %10, 0, !dbg !8786
  %_8.1 = extractvalue { i32, i1 } %10, 1, !dbg !8786
  %11 = zext i1 %_8.1 to i8, !dbg !8787
  store i8 %11, ptr %overflow.dbg.spill, align 1, !dbg !8787
    #dbg_declare(ptr %overflow.dbg.spill, !8763, !DIExpression(), !8788)
  %_10 = icmp ule i32 %byte_offset, 2147483647, !dbg !8789
  br i1 %_10, label %bb6, label %bb7, !dbg !8789

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !8790
  br label %bb8, !dbg !8791

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !8789
  br label %bb8, !dbg !8789

bb6:                                              ; preds = %bb2
  %12 = xor i1 %_8.1, true, !dbg !8792
  %13 = zext i1 %12 to i8, !dbg !8792
  store i8 %13, ptr %_0, align 1, !dbg !8792
  br label %bb8, !dbg !8789

bb8:                                              ; preds = %bb3, %bb6, %bb7
  %14 = load i8, ptr %_0, align 1, !dbg !8793
  %15 = trunc nuw i8 %14 to i1, !dbg !8793
  ret i1 %15, !dbg !8793

bb9:                                              ; No predecessors!
  unreachable, !dbg !8794
}

; core::str::<impl str>::starts_with
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E"(ptr align 1 %self.0, i32 %self.1, i32 %pat) unnamed_addr #1 !dbg !8795 {
start:
  %pat.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8799, !DIExpression(), !8801)
  store i32 %pat, ptr %pat.dbg.spill, align 4
    #dbg_declare(ptr %pat.dbg.spill, !8800, !DIExpression(), !8802)
; call <char as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h01fd2c4c1501c2c1E"(i32 %pat, ptr align 1 %self.0, i32 %self.1) #13, !dbg !8803
  ret i1 %_0, !dbg !8804
}

; core::str::<impl str>::starts_with
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E"(ptr align 1 %self.0, i32 %self.1, ptr align 1 %pat.0, i32 %pat.1) unnamed_addr #1 !dbg !8805 {
start:
  %pat.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8809, !DIExpression(), !8813)
  store ptr %pat.0, ptr %pat.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %pat.dbg.spill, i32 4
  store i32 %pat.1, ptr %1, align 4
    #dbg_declare(ptr %pat.dbg.spill, !8810, !DIExpression(), !8814)
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h33657c4616047b53E"(ptr align 1 %pat.0, i32 %pat.1, ptr align 1 %self.0, i32 %self.1) #13, !dbg !8815
  ret i1 %_0, !dbg !8816
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h835445ad7a164e2fE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !8817 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8821, !DIExpression(), !8822)
; call core::str::<impl str>::chars
  %1 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !8823
  %_2.0 = extractvalue { ptr, ptr } %1, 0, !dbg !8823
  %_2.1 = extractvalue { ptr, ptr } %1, 1, !dbg !8823
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !8824
  store i32 0, ptr %2, align 4, !dbg !8824
  store ptr %_2.0, ptr %_0, align 4, !dbg !8824
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8824
  store ptr %_2.1, ptr %3, align 4, !dbg !8824
  ret void, !dbg !8825
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h23cd1c400a6aaa96E"(ptr align 1 %self.0, i32 %self.1, i32 %index) unnamed_addr #0 !dbg !8826 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8830, !DIExpression(), !8832)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !8831, !DIExpression(), !8833)
  %1 = icmp eq i32 %index, 0, !dbg !8834
  br i1 %1, label %bb1, label %bb2, !dbg !8834

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !8835
  br label %bb9, !dbg !8836

bb2:                                              ; preds = %start
; call core::str::<impl str>::len
  %_4 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !8837
  %_3 = icmp uge i32 %index, %_4, !dbg !8838
  br i1 %_3, label %bb4, label %bb6, !dbg !8838

bb9:                                              ; preds = %bb4, %bb8, %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !8836
  %3 = trunc nuw i8 %2 to i1, !dbg !8836
  ret i1 %3, !dbg !8836

bb6:                                              ; preds = %bb2
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %4 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %4, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !8839)
  %5 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !8841
  %6 = insertvalue { ptr, i32 } %5, i32 %self.1, 1, !dbg !8841
  %_7.0 = extractvalue { ptr, i32 } %6, 0, !dbg !8842
  %_7.1 = extractvalue { ptr, i32 } %6, 1, !dbg !8842
  %_9 = icmp ult i32 %index, %_7.1, !dbg !8843
  br i1 %_9, label %bb8, label %panic, !dbg !8843

bb4:                                              ; preds = %bb2
; call core::str::<impl str>::len
  %_5 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !8844
  %7 = icmp eq i32 %index, %_5, !dbg !8845
  %8 = zext i1 %7 to i8, !dbg !8845
  store i8 %8, ptr %_0, align 1, !dbg !8845
  br label %bb9, !dbg !8846

bb8:                                              ; preds = %bb6
  %9 = getelementptr inbounds nuw i8, ptr %_7.0, i32 %index, !dbg !8843
  %_6 = load i8, ptr %9, align 1, !dbg !8843
; call core::num::<impl u8>::is_utf8_char_boundary
  %10 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17h2418698cb1b1e55fE"(i8 %_6) #13, !dbg !8847
  %11 = zext i1 %10 to i8, !dbg !8847
  store i8 %11, ptr %_0, align 1, !dbg !8847
  br label %bb9, !dbg !8847

panic:                                            ; preds = %bb6
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %index, i32 %_7.1, ptr align 4 @alloc_985a71e2adce914a65f22ac7b011ae59) #14, !dbg !8843
  unreachable, !dbg !8843
}

; core::str::<impl str>::trim_start_matches
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$18trim_start_matches17h5fedf5b6593d03b4E"(ptr align 1 %self.0, i32 %self.1, ptr align 1 %pat.0, i32 %pat.1) unnamed_addr #1 !dbg !8848 {
start:
  %a.dbg.spill = alloca [4 x i8], align 4
  %pat.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %matcher = alloca [64 x i8], align 8
  %i = alloca [4 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8852, !DIExpression(), !8895)
  store ptr %pat.0, ptr %pat.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %pat.dbg.spill, i32 4
  store i32 %pat.1, ptr %1, align 4
    #dbg_declare(ptr %pat.dbg.spill, !8853, !DIExpression(), !8896)
    #dbg_declare(ptr %i, !8854, !DIExpression(), !8897)
    #dbg_declare(ptr %matcher, !8856, !DIExpression(), !8898)
; call core::str::<impl str>::len
  %2 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !8899
  store i32 %2, ptr %i, align 4, !dbg !8899
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h95307f884c112c16E"(ptr sret([64 x i8]) align 8 %matcher, ptr align 1 %pat.0, i32 %pat.1, ptr align 1 %self.0, i32 %self.1) #13, !dbg !8900
; call core::str::pattern::Searcher::next_reject
  call void @_ZN4core3str7pattern8Searcher11next_reject17h0423c57c9b33829aE(ptr sret([12 x i8]) align 4 %_5, ptr align 8 %matcher) #13, !dbg !8901
  %_7 = load i32, ptr %_5, align 4, !dbg !8902
  %3 = trunc nuw i32 %_7 to i1, !dbg !8903
  br i1 %3, label %bb4, label %bb5, !dbg !8903

bb4:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !8904
  %a = load i32, ptr %4, align 4, !dbg !8904
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !8904
    #dbg_declare(ptr %a.dbg.spill, !8893, !DIExpression(), !8904)
  store i32 %a, ptr %i, align 4, !dbg !8905
  br label %bb5, !dbg !8906

bb5:                                              ; preds = %bb4, %start
  %_10 = load i32, ptr %i, align 4, !dbg !8907
; call core::str::<impl str>::len
  %_11 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !8908
; call core::str::<impl str>::get_unchecked
  %5 = call { ptr, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h89779cbeda97bb80E"(ptr align 1 %self.0, i32 %self.1, i32 %_10, i32 %_11) #13, !dbg !8909
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !8909
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !8909
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !8910
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !8910
  ret { ptr, i32 } %7, !dbg !8910

bb9:                                              ; No predecessors!
  unreachable, !dbg !8911
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !8912 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8916, !DIExpression(), !8917)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !8918)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !8920
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !8920
  %_2.0 = extractvalue { ptr, i32 } %3, 0, !dbg !8921
  %_2.1 = extractvalue { ptr, i32 } %3, 1, !dbg !8921
  ret i32 %_2.1, !dbg !8922
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17h5ff0cd4fe64abb93E"(ptr align 1 %self.0, i32 %self.1, ptr align 1 %pat.0, i32 %pat.1) unnamed_addr #0 !dbg !8923 {
start:
  %pat.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [64 x i8], align 8
  %_3 = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8927, !DIExpression(), !8929)
  store ptr %pat.0, ptr %pat.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %pat.dbg.spill, i32 4
  store i32 %pat.1, ptr %1, align 4
    #dbg_declare(ptr %pat.dbg.spill, !8928, !DIExpression(), !8930)
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h95307f884c112c16E"(ptr sret([64 x i8]) align 8 %_5, ptr align 1 %pat.0, i32 %pat.1, ptr align 1 %self.0, i32 %self.1) #13, !dbg !8931
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h9249f5fe1de63aecE"(ptr sret([12 x i8]) align 4 %_3, ptr align 8 %_5) #13, !dbg !8932
; call core::option::Option<T>::map
  %2 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17hce424b976cc90a2aE"(ptr align 4 %_3) #13, !dbg !8933
  %_0.0 = extractvalue { i32, i32 } %2, 0, !dbg !8933
  %_0.1 = extractvalue { i32, i32 } %2, 1, !dbg !8933
  %3 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !8934
  %4 = insertvalue { i32, i32 } %3, i32 %_0.1, 1, !dbg !8934
  ret { i32, i32 } %4, !dbg !8934
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hce650607de5fdb51E"(ptr align 1 %self.0, i32 %self.1, i32 %pat) unnamed_addr #0 !dbg !8935 {
start:
  %pat.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [28 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8939, !DIExpression(), !8941)
  store i32 %pat, ptr %pat.dbg.spill, align 4
    #dbg_declare(ptr %pat.dbg.spill, !8940, !DIExpression(), !8942)
; call <char as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h6479824b8c3f3205E"(ptr sret([28 x i8]) align 4 %_5, i32 %pat, ptr align 1 %self.0, i32 %self.1) #13, !dbg !8943
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4faa49d588e2b0b4E"(ptr sret([12 x i8]) align 4 %_3, ptr align 4 %_5) #13, !dbg !8944
; call core::option::Option<T>::map
  %1 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17hb04a75bdada3252fE"(ptr align 4 %_3) #13, !dbg !8945
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !8945
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !8945
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !8946
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !8946
  ret { i32, i32 } %3, !dbg !8946
}

; core::str::<impl str>::find
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hfa4cba738df6c1b8E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !8947 {
start:
  %pat.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [20 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !8951, !DIExpression(), !8955)
    #dbg_declare(ptr %pat.dbg.spill, !8952, !DIExpression(), !8956)
; call <F as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h667e354051da0bf2E"(ptr sret([20 x i8]) align 4 %_5, ptr align 1 %self.0, i32 %self.1) #13, !dbg !8957
; call <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
  call void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4182eb60dfa4f812E"(ptr sret([12 x i8]) align 4 %_3, ptr align 4 %_5) #13, !dbg !8958
; call core::option::Option<T>::map
  %1 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h6c73ccf157d4d3deE"(ptr align 4 %_3) #13, !dbg !8959
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !8959
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !8959
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !8960
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !8960
  ret { i32, i32 } %3, !dbg !8960
}

; core::str::<impl str>::find::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h31d63c40ab02e035E"(i32 %_2.0, i32 %_2.1) unnamed_addr #0 !dbg !8961 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !8973, !DIExpression(), !8975)
  store i32 %_2.0, ptr %_2.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_2.dbg.spill, i32 4
  store i32 %_2.1, ptr %0, align 4
    #dbg_declare(ptr %_2.dbg.spill, !8974, !DIExpression(), !8976)
  store i32 %_2.0, ptr %i.dbg.spill, align 4, !dbg !8977
    #dbg_declare(ptr %i.dbg.spill, !8971, !DIExpression(), !8978)
  ret i32 %_2.0, !dbg !8979
}

; core::str::<impl str>::find::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h6c6ffe772a22f8efE"(i32 %_2.0, i32 %_2.1) unnamed_addr #0 !dbg !8980 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !8987, !DIExpression(), !8989)
  store i32 %_2.0, ptr %_2.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_2.dbg.spill, i32 4
  store i32 %_2.1, ptr %0, align 4
    #dbg_declare(ptr %_2.dbg.spill, !8988, !DIExpression(), !8990)
  store i32 %_2.0, ptr %i.dbg.spill, align 4, !dbg !8991
    #dbg_declare(ptr %i.dbg.spill, !8985, !DIExpression(), !8992)
  ret i32 %_2.0, !dbg !8993
}

; core::str::<impl str>::find::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h8b1e4e775925a075E"(i32 %_2.0, i32 %_2.1) unnamed_addr #0 !dbg !8994 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !9001, !DIExpression(), !9003)
  store i32 %_2.0, ptr %_2.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_2.dbg.spill, i32 4
  store i32 %_2.1, ptr %0, align 4
    #dbg_declare(ptr %_2.dbg.spill, !9002, !DIExpression(), !9004)
  store i32 %_2.0, ptr %i.dbg.spill, align 4, !dbg !9005
    #dbg_declare(ptr %i.dbg.spill, !8999, !DIExpression(), !9006)
  ret i32 %_2.0, !dbg !9007
}

; core::str::<impl str>::bytes
; Function Attrs: inlinehint nounwind
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hee061ce74cf188a3E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !9008 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9012, !DIExpression(), !9013)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !9014)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !9016
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !9016
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !9017
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !9017
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %_4.0, i32 %_4.1) #13, !dbg !9018
  %_3.0 = extractvalue { ptr, ptr } %4, 0, !dbg !9018
  %_3.1 = extractvalue { ptr, ptr } %4, 1, !dbg !9018
; call core::iter::traits::iterator::Iterator::copied
  %5 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6copied17hd680b744117ee0feE(ptr %_3.0, ptr %_3.1) #13, !dbg !9019
  %_2.0 = extractvalue { ptr, ptr } %5, 0, !dbg !9019
  %_2.1 = extractvalue { ptr, ptr } %5, 1, !dbg !9019
  %6 = insertvalue { ptr, ptr } poison, ptr %_2.0, 0, !dbg !9020
  %7 = insertvalue { ptr, ptr } %6, ptr %_2.1, 1, !dbg !9020
  ret { ptr, ptr } %7, !dbg !9020
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nounwind
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !9021 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9025, !DIExpression(), !9026)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !9027)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !9029
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !9029
  %_3.0 = extractvalue { ptr, i32 } %3, 0, !dbg !9030
  %_3.1 = extractvalue { ptr, i32 } %3, 1, !dbg !9030
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %_3.0, i32 %_3.1) #13, !dbg !9031
  %_2.0 = extractvalue { ptr, ptr } %4, 0, !dbg !9031
  %_2.1 = extractvalue { ptr, ptr } %4, 1, !dbg !9031
  %5 = insertvalue { ptr, ptr } poison, ptr %_2.0, 0, !dbg !9032
  %6 = insertvalue { ptr, ptr } %5, ptr %_2.1, 1, !dbg !9032
  ret { ptr, ptr } %6, !dbg !9032
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17he147b8d5c70730b2E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !9033 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9035, !DIExpression(), !9038)
; call core::num::<impl core::str::traits::FromStr for usize>::from_str
  call void @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17hce002435c662e58fE"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) #13, !dbg !9039
  ret void, !dbg !9040
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17hf58520c1cbf0b29fE"(ptr sret([40 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1, i32 %pat) unnamed_addr #0 !dbg !9041 {
start:
  %pat.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [28 x i8], align 4
  %_3 = alloca [40 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9045, !DIExpression(), !9047)
  store i32 %pat, ptr %pat.dbg.spill, align 4
    #dbg_declare(ptr %pat.dbg.spill, !9046, !DIExpression(), !9048)
; call core::str::<impl str>::len
  %_4 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !9049
; call <char as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h6479824b8c3f3205E"(ptr sret([28 x i8]) align 4 %_5, i32 %pat, ptr align 1 %self.0, i32 %self.1) #13, !dbg !9050
  %1 = getelementptr inbounds i8, ptr %_3, i32 28, !dbg !9051
  store i32 0, ptr %1, align 4, !dbg !9051
  %2 = getelementptr inbounds i8, ptr %_3, i32 32, !dbg !9051
  store i32 %_4, ptr %2, align 4, !dbg !9051
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %_5, i32 28, i1 false), !dbg !9051
  %3 = getelementptr inbounds i8, ptr %_3, i32 36, !dbg !9051
  store i8 1, ptr %3, align 4, !dbg !9051
  %4 = getelementptr inbounds i8, ptr %_3, i32 37, !dbg !9051
  store i8 0, ptr %4, align 1, !dbg !9051
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_3, i32 40, i1 false), !dbg !9052
  ret void, !dbg !9053
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !9054 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9056, !DIExpression(), !9057)
; call core::str::<impl str>::len
  %_2 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %self.0, i32 %self.1) #13, !dbg !9058
  %_0 = icmp eq i32 %_2, 0, !dbg !9059
  ret i1 %_0, !dbg !9060
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h02573a03cf6f1c4eE"(ptr align 4 %self) unnamed_addr #0 !dbg !9061 {
start:
  %elt.dbg.spill = alloca [8 x i8], align 4
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9068, !DIExpression(), !9076)
  %0 = getelementptr inbounds i8, ptr %self, i32 37, !dbg !9077
  %1 = load i8, ptr %0, align 1, !dbg !9077
  %_2 = trunc nuw i8 %1 to i1, !dbg !9077
  br i1 %_2, label %bb1, label %bb2, !dbg !9077

bb2:                                              ; preds = %start
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %2 = call { ptr, i32 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hdd1f51eba4824427E"(ptr align 4 %self) #13, !dbg !9078
  %haystack.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9078
  %haystack.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9078
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4, !dbg !9078
  %3 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4, !dbg !9078
  store i32 %haystack.1, ptr %3, align 4, !dbg !9078
    #dbg_declare(ptr %haystack.dbg.spill, !9069, !DIExpression(), !9079)
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4faa49d588e2b0b4E"(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %self) #13, !dbg !9080
  %_7 = load i32, ptr %_5, align 4, !dbg !9081
  %4 = trunc nuw i32 %_7 to i1, !dbg !9082
  br i1 %4, label %bb7, label %bb6, !dbg !9082

bb1:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !9083
  br label %bb9, !dbg !9084

bb7:                                              ; preds = %bb2
  %5 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !9085
  %a = load i32, ptr %5, align 4, !dbg !9085
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !9085
    #dbg_declare(ptr %a.dbg.spill, !9071, !DIExpression(), !9086)
  %6 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !9087
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !9087
  %b = load i32, ptr %7, align 4, !dbg !9087
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !9087
    #dbg_declare(ptr %b.dbg.spill, !9073, !DIExpression(), !9088)
  %8 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9089
  %_12 = load i32, ptr %8, align 4, !dbg !9089
; call core::str::<impl str>::get_unchecked
  %9 = call { ptr, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h89779cbeda97bb80E"(ptr align 1 %haystack.0, i32 %haystack.1, i32 %_12, i32 %a) #13, !dbg !9090
  %elt.0 = extractvalue { ptr, i32 } %9, 0, !dbg !9090
  %elt.1 = extractvalue { ptr, i32 } %9, 1, !dbg !9090
  store ptr %elt.0, ptr %elt.dbg.spill, align 4, !dbg !9090
  %10 = getelementptr inbounds i8, ptr %elt.dbg.spill, i32 4, !dbg !9090
  store i32 %elt.1, ptr %10, align 4, !dbg !9090
    #dbg_declare(ptr %elt.dbg.spill, !9074, !DIExpression(), !9091)
  %11 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9092
  store i32 %b, ptr %11, align 4, !dbg !9092
  store ptr %elt.0, ptr %_0, align 4, !dbg !9093
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9093
  store i32 %elt.1, ptr %12, align 4, !dbg !9093
  br label %bb9, !dbg !9094

bb6:                                              ; preds = %bb2
; call core::str::iter::SplitInternal<P>::get_end
  %13 = call { ptr, i32 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h7587ea216fbfa9bdE"(ptr align 4 %self) #13, !dbg !9095
  %14 = extractvalue { ptr, i32 } %13, 0, !dbg !9095
  %15 = extractvalue { ptr, i32 } %13, 1, !dbg !9095
  store ptr %14, ptr %_0, align 4, !dbg !9095
  %16 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9095
  store i32 %15, ptr %16, align 4, !dbg !9095
  br label %bb9, !dbg !9095

bb9:                                              ; preds = %bb1, %bb7, %bb6
  %17 = load ptr, ptr %_0, align 4, !dbg !9084
  %18 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9084
  %19 = load i32, ptr %18, align 4, !dbg !9084
  %20 = insertvalue { ptr, i32 } poison, ptr %17, 0, !dbg !9084
  %21 = insertvalue { ptr, i32 } %20, i32 %19, 1, !dbg !9084
  ret { ptr, i32 } %21, !dbg !9084

bb5:                                              ; No predecessors!
  unreachable, !dbg !9081
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3str4iter5Chars6as_str17ha220dca85a589e1fE(ptr align 4 %self) unnamed_addr #0 !dbg !9096 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9102, !DIExpression(), !9103)
; call core::slice::iter::Iter<T>::as_slice
  %0 = call { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4 %self) #13, !dbg !9104
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !9104
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !9104
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hc4c3ff2de0ba743dE(ptr align 1 %_2.0, i32 %_2.1) #13, !dbg !9105
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9105
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9105
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9106
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !9106
  ret { ptr, i32 } %3, !dbg !9106
}

; core::str::count::count_chars
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3str5count11count_chars17h26e4e8a2a60a09eaE(ptr align 1 %s.0, i32 %s.1) unnamed_addr #0 !dbg !9107 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !9111, !DIExpression(), !9112)
; call core::str::<impl str>::len
  %_3 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %s.0, i32 %s.1) #13, !dbg !9113
  %1 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 4, i32 4), !dbg !9114
  %_5.0 = extractvalue { i32, i1 } %1, 0, !dbg !9114
  %_5.1 = extractvalue { i32, i1 } %1, 1, !dbg !9114
  br i1 %_5.1, label %panic, label %bb2, !dbg !9114

bb2:                                              ; preds = %start
  %_2 = icmp ult i32 %_3, %_5.0, !dbg !9115
  br i1 %_2, label %bb3, label %bb5, !dbg !9115

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_7f7f9dfded63257f5213a5c2bf899139) #14, !dbg !9114
  unreachable, !dbg !9114

bb5:                                              ; preds = %bb2
; call core::str::count::do_count_chars
  %2 = call i32 @_ZN4core3str5count14do_count_chars17h4193aef24a2a11daE(ptr align 1 %s.0, i32 %s.1) #13, !dbg !9116
  store i32 %2, ptr %_0, align 4, !dbg !9116
  br label %bb6, !dbg !9116

bb3:                                              ; preds = %bb2
  store ptr %s.0, ptr %self.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %s.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !9117)
  %4 = insertvalue { ptr, i32 } poison, ptr %s.0, 0, !dbg !9119
  %5 = insertvalue { ptr, i32 } %4, i32 %s.1, 1, !dbg !9119
  %_6.0 = extractvalue { ptr, i32 } %5, 0, !dbg !9120
  %_6.1 = extractvalue { ptr, i32 } %5, 1, !dbg !9120
; call core::str::count::char_count_general_case
  %6 = call i32 @_ZN4core3str5count23char_count_general_case17h79b6af41235df43cE(ptr align 1 %_6.0, i32 %_6.1) #13, !dbg !9121
  store i32 %6, ptr %_0, align 4, !dbg !9121
  br label %bb6, !dbg !9121

bb6:                                              ; preds = %bb3, %bb5
  %7 = load i32, ptr %_0, align 4, !dbg !9122
  ret i32 %7, !dbg !9122
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6bc6de164eca45edE"(i32 %self.0, i32 %self.1, ptr %slice.0, i32 %slice.1, ptr align 4 %0) unnamed_addr #0 !dbg !9123 {
start:
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill1 = alloca [8 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store i32 %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !9130, !DIExpression(), !9140)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %2, align 4
    #dbg_declare(ptr %slice.dbg.spill, !9131, !DIExpression(), !9141)
  store ptr %slice.0, ptr %slice.dbg.spill1, align 4, !dbg !9142
  %3 = getelementptr inbounds i8, ptr %slice.dbg.spill1, i32 4, !dbg !9142
  store i32 %slice.1, ptr %3, align 4, !dbg !9142
    #dbg_declare(ptr %slice.dbg.spill1, !9132, !DIExpression(), !9143)
  br label %bb1, !dbg !9144

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_8 = call i32 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5431d645439ae544E"(ptr %slice.0, i32 %slice.1) #13, !dbg !9146
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked::precondition_check
  call void @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked18precondition_check17hfe47b626e72dec1eE"(i32 %self.0, i32 %self.1, i32 %_8, ptr align 4 %0) #13, !dbg !9147
  br label %bb3, !dbg !9147

bb3:                                              ; preds = %bb1
  %new_len = sub nuw i32 %self.1, %self.0, !dbg !9148
  store i32 %new_len, ptr %new_len.dbg.spill, align 4, !dbg !9148
    #dbg_declare(ptr %new_len.dbg.spill, !9138, !DIExpression(), !9149)
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_14 = call ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb314939b0b39830eE"(ptr %slice.0, i32 %slice.1) #13, !dbg !9150
  store ptr %_14, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9151, !DIExpression(), !9157)
  store i32 %self.0, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !9156, !DIExpression(), !9159)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !9160
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h502bd91a235389feE.exit", !dbg !9160

bb2.i:                                            ; preds = %bb3
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17he1a74c10ff1d520fE"(ptr %_14, i32 %self.0, i32 1, ptr align 4 %0) #13, !dbg !9162
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h502bd91a235389feE.exit", !dbg !9162

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h502bd91a235389feE.exit": ; preds = %bb3, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %_14, i32 %self.0, !dbg !9163
; call core::ptr::slice_from_raw_parts
  %4 = call { ptr, i32 } @_ZN4core3ptr20slice_from_raw_parts17h5464381f98518b74E(ptr %_0.i, i32 %new_len) #13, !dbg !9164
  %_12.0 = extractvalue { ptr, i32 } %4, 0, !dbg !9164
  %_12.1 = extractvalue { ptr, i32 } %4, 1, !dbg !9164
  %5 = insertvalue { ptr, i32 } poison, ptr %_12.0, 0, !dbg !9165
  %6 = insertvalue { ptr, i32 } %5, i32 %_12.1, 1, !dbg !9165
  ret { ptr, i32 } %6, !dbg !9165
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked18precondition_check17hfe47b626e72dec1eE"(i32 %start1, i32 %end, i32 %len, ptr align 4 %0) unnamed_addr #0 !dbg !9166 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %_7 = alloca [24 x i8], align 4
  store i32 %start1, ptr %start.dbg.spill, align 4
    #dbg_declare(ptr %start.dbg.spill, !9171, !DIExpression(), !9176)
  store i32 %end, ptr %end.dbg.spill, align 4
    #dbg_declare(ptr %end.dbg.spill, !9172, !DIExpression(), !9176)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !9173, !DIExpression(), !9176)
  store ptr @alloc_91f2a00ff2cd9cdc4bb205a66832e2bb, ptr %msg.dbg.spill, align 4, !dbg !9177
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !9177
  store i32 219, ptr %1, align 4, !dbg !9177
    #dbg_declare(ptr %msg.dbg.spill, !9174, !DIExpression(), !9177)
  %_4 = icmp uge i32 %end, %start1, !dbg !9178
  br i1 %_4, label %bb1, label %bb3, !dbg !9178

bb3:                                              ; preds = %bb1, %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_9, i32 0, !dbg !9180
  store ptr @alloc_91f2a00ff2cd9cdc4bb205a66832e2bb, ptr %2, align 4, !dbg !9180
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !9180
  store i32 219, ptr %3, align 4, !dbg !9180
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_7, ptr align 4 %_9) #13, !dbg !9181
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17ha90b816b7292deffE(ptr align 4 %_7, i1 zeroext false, ptr align 4 %0) #14, !dbg !9182
  unreachable, !dbg !9182

bb1:                                              ; preds = %start
  %_5 = icmp ule i32 %end, %len, !dbg !9183
  br i1 %_5, label %bb2, label %bb3, !dbg !9183

bb2:                                              ; preds = %bb1
  ret void, !dbg !9184
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17he20b2415b532494dE"(i32 %self.0, i32 %self.1, ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !9185 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9189, !DIExpression(), !9191)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %1, align 4
    #dbg_declare(ptr %slice.dbg.spill, !9190, !DIExpression(), !9192)
  %_3 = icmp ule i32 %self.0, %self.1, !dbg !9193
  br i1 %_3, label %bb1, label %bb7, !dbg !9193

bb7:                                              ; preds = %bb3, %bb1, %start
  store ptr null, ptr %_0, align 4, !dbg !9194
  br label %bb8, !dbg !9195

bb1:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_6 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h23cd1c400a6aaa96E"(ptr align 1 %slice.0, i32 %slice.1, i32 %self.0) #13, !dbg !9196
  br i1 %_6, label %bb3, label %bb7, !dbg !9197

bb3:                                              ; preds = %bb1
; call core::str::<impl str>::is_char_boundary
  %_8 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h23cd1c400a6aaa96E"(ptr align 1 %slice.0, i32 %slice.1, i32 %self.1) #13, !dbg !9198
  br i1 %_8, label %bb5, label %bb7, !dbg !9199

bb5:                                              ; preds = %bb3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get_unchecked
  %2 = call { ptr, i32 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6bc6de164eca45edE"(i32 %self.0, i32 %self.1, ptr %slice.0, i32 %slice.1, ptr align 4 @alloc_fcadf1bb23ad06e7cef4154b866e90d2) #13, !dbg !9200
  %_11.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9200
  %_11.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9200
  store ptr %_11.0, ptr %_0, align 4, !dbg !9201
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9201
  store i32 %_11.1, ptr %3, align 4, !dbg !9201
  br label %bb8, !dbg !9195

bb8:                                              ; preds = %bb5, %bb7
  %4 = load ptr, ptr %_0, align 4, !dbg !9202
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9202
  %6 = load i32, ptr %5, align 4, !dbg !9202
  %7 = insertvalue { ptr, i32 } poison, ptr %4, 0, !dbg !9202
  %8 = insertvalue { ptr, i32 } %7, i32 %6, 1, !dbg !9202
  ret { ptr, i32 } %8, !dbg !9202
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h1420dc6f56d8b256E"(i32 %self.0, i32 %self.1, ptr align 1 %slice.0, i32 %slice.1, ptr align 4 %0) unnamed_addr #0 !dbg !9203 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  store i32 %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !9207, !DIExpression(), !9214)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %2, align 4
    #dbg_declare(ptr %slice.dbg.spill, !9208, !DIExpression(), !9215)
  store i32 %self.0, ptr %start.dbg.spill, align 4, !dbg !9216
    #dbg_declare(ptr %start.dbg.spill, !9209, !DIExpression(), !9217)
  store i32 %self.1, ptr %end.dbg.spill, align 4, !dbg !9218
    #dbg_declare(ptr %end.dbg.spill, !9211, !DIExpression(), !9219)
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
  %3 = call { ptr, i32 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17he20b2415b532494dE"(i32 %self.0, i32 %self.1, ptr align 1 %slice.0, i32 %slice.1) #13, !dbg !9220
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !9220
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !9220
  store ptr %4, ptr %_8, align 4, !dbg !9220
  %6 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !9220
  store i32 %5, ptr %6, align 4, !dbg !9220
  %7 = load ptr, ptr %_8, align 4, !dbg !9221
  %8 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !9221
  %9 = load i32, ptr %8, align 4, !dbg !9221
  %10 = ptrtoint ptr %7 to i32, !dbg !9221
  %11 = icmp eq i32 %10, 0, !dbg !9221
  %_9 = select i1 %11, i32 0, i32 1, !dbg !9221
  %12 = trunc nuw i32 %_9 to i1, !dbg !9222
  br i1 %12, label %bb4, label %bb3, !dbg !9222

bb4:                                              ; preds = %start
  %s.0 = load ptr, ptr %_8, align 4, !dbg !9223
  %13 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !9223
  %s.1 = load i32, ptr %13, align 4, !dbg !9223
  store ptr %s.0, ptr %s.dbg.spill, align 4, !dbg !9223
  %14 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4, !dbg !9223
  store i32 %s.1, ptr %14, align 4, !dbg !9223
    #dbg_declare(ptr %s.dbg.spill, !9212, !DIExpression(), !9224)
  %15 = insertvalue { ptr, i32 } poison, ptr %s.0, 0, !dbg !9225
  %16 = insertvalue { ptr, i32 } %15, i32 %s.1, 1, !dbg !9225
  ret { ptr, i32 } %16, !dbg !9225

bb3:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17he0a9eecb50bde78cE(ptr align 1 %slice.0, i32 %slice.1, i32 %self.0, i32 %self.1) #14, !dbg !9226
  unreachable, !dbg !9226

bb2:                                              ; No predecessors!
  unreachable, !dbg !9221
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeInclusive<usize>>::index
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN4core3str6traits117_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeInclusive$LT$usize$GT$$GT$5index17hf132ba7f1588aa4bE"(ptr align 4 %self, ptr align 1 %slice.0, i32 %slice.1, ptr align 4 %0) unnamed_addr #0 !dbg !9227 {
start:
    #dbg_declare(ptr %self, !9232, !DIExpression(), !9234)
  %slice.dbg.spill = alloca [8 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %1, align 4
    #dbg_declare(ptr %slice.dbg.spill, !9233, !DIExpression(), !9235)
; call core::ops::range::RangeInclusive<Idx>::end
  %_5 = call align 4 ptr @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h7cbd12770d5221c3E"(ptr align 4 %self) #13, !dbg !9236
  %_4 = load i32, ptr %_5, align 4, !dbg !9237
  %_3 = icmp eq i32 %_4, -1, !dbg !9237
  br i1 %_3, label %bb2, label %bb3, !dbg !9237

bb3:                                              ; preds = %start
; call core::ops::range::RangeInclusive<usize>::into_slice_range
  %2 = call { i32, i32 } @"_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h0aba1386ed5fda79E"(ptr align 4 %self) #13, !dbg !9238
  %_8.0 = extractvalue { i32, i32 } %2, 0, !dbg !9238
  %_8.1 = extractvalue { i32, i32 } %2, 1, !dbg !9238
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::index
  %3 = call { ptr, i32 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h1420dc6f56d8b256E"(i32 %_8.0, i32 %_8.1, ptr align 1 %slice.0, i32 %slice.1, ptr align 4 %0) #13, !dbg !9239
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !9239
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !9239
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9240
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !9240
  ret { ptr, i32 } %5, !dbg !9240

bb2:                                              ; preds = %start
; call core::str::traits::str_index_overflow_fail
  call void @_ZN4core3str6traits23str_index_overflow_fail17hf4f5082fdefc4a38E(ptr align 4 %0) #14, !dbg !9241
  unreachable, !dbg !9241
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %self.0, i32 %self.1, ptr align 1 %other.0, i32 %other.1) unnamed_addr #0 !dbg !9242 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %other.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_6 = alloca [8 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9245, !DIExpression(), !9247)
  store ptr %other.0, ptr %other.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %other.dbg.spill, i32 4
  store i32 %other.1, ptr %1, align 4
    #dbg_declare(ptr %other.dbg.spill, !9246, !DIExpression(), !9248)
  store ptr %self.0, ptr %self.dbg.spill.i1, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %self.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !886, !DIExpression(), !9249)
  %3 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !9251
  %4 = insertvalue { ptr, i32 } %3, i32 %self.1, 1, !dbg !9251
  %5 = extractvalue { ptr, i32 } %4, 0, !dbg !9252
  %6 = extractvalue { ptr, i32 } %4, 1, !dbg !9252
  store ptr %5, ptr %_4, align 4, !dbg !9252
  %7 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !9252
  store i32 %6, ptr %7, align 4, !dbg !9252
  store ptr %other.0, ptr %self.dbg.spill.i, align 4
  %8 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %other.1, ptr %8, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !9253)
  %9 = insertvalue { ptr, i32 } poison, ptr %other.0, 0, !dbg !9255
  %10 = insertvalue { ptr, i32 } %9, i32 %other.1, 1, !dbg !9255
  %11 = extractvalue { ptr, i32 } %10, 0, !dbg !9256
  %12 = extractvalue { ptr, i32 } %10, 1, !dbg !9256
  store ptr %11, ptr %_6, align 4, !dbg !9256
  %13 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !9256
  store i32 %12, ptr %13, align 4, !dbg !9256
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_0 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h803464c53e88978eE"(ptr align 4 %_4, ptr align 4 %_6) #13, !dbg !9257
  ret i1 %_0, !dbg !9258
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h01ba9980c8bf38acE"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %index, ptr align 4 %0) unnamed_addr #0 !dbg !9259 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !9264, !DIExpression(), !9268)
    #dbg_declare(ptr %index, !9265, !DIExpression(), !9269)
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeInclusive<usize>>::index
  %2 = call { ptr, i32 } @"_ZN4core3str6traits117_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeInclusive$LT$usize$GT$$GT$5index17hf132ba7f1588aa4bE"(ptr align 4 %index, ptr align 1 %self.0, i32 %self.1, ptr align 4 %0) #13, !dbg !9270
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9270
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9270
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9271
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !9271
  ret { ptr, i32 } %4, !dbg !9271
}

; core::str::pattern::TwoWaySearcher::byteset_contains
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hf10e708e2bd744b9E(ptr align 8 %self, i8 %byte) unnamed_addr #0 !dbg !9272 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9278, !DIExpression(), !9280)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !9279, !DIExpression(), !9281)
  %_5 = load i64, ptr %self, align 8, !dbg !9282
  %_7 = and i8 %byte, 63, !dbg !9283
  %_6 = zext i8 %_7 to i32, !dbg !9284
  %_8 = icmp ult i32 %_6, 64, !dbg !9285
  br i1 %_8, label %bb1, label %panic, !dbg !9285

bb1:                                              ; preds = %start
  %0 = and i32 %_6, 63, !dbg !9285
  %1 = zext i32 %0 to i64, !dbg !9285
  %_4 = lshr i64 %_5, %1, !dbg !9285
  %_3 = and i64 %_4, 1, !dbg !9285
  %_0 = icmp ne i64 %_3, 0, !dbg !9285
  ret i1 %_0, !dbg !9286

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h660c746cd0aca9ccE(ptr align 4 @alloc_a0f1e4c5c96dda375fa3e11d96215082) #14, !dbg !9285
  unreachable, !dbg !9285
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3str7pattern14TwoWaySearcher4next17h4d4f9eaa585cdc45E(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %self, ptr align 1 %haystack.0, i32 %haystack.1, ptr align 1 %needle.0, i32 %needle.1, i1 zeroext %long_period) unnamed_addr #0 !dbg !9287 {
start:
  %i.dbg.spill14 = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %match_pos.dbg.spill = alloca [4 x i8], align 4
  %tail_byte.dbg.spill = alloca [1 x i8], align 1
  %needle_last.dbg.spill = alloca [4 x i8], align 4
  %old_pos.dbg.spill = alloca [4 x i8], align 4
  %long_period.dbg.spill = alloca [1 x i8], align 1
  %needle.dbg.spill = alloca [8 x i8], align 4
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_60 = alloca [8 x i8], align 4
  %iter3 = alloca [8 x i8], align 4
  %start2 = alloca [4 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %start1 = alloca [4 x i8], align 4
  %_9 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9311, !DIExpression(), !9343)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %0, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !9312, !DIExpression(), !9344)
  store ptr %needle.0, ptr %needle.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %needle.dbg.spill, i32 4
  store i32 %needle.1, ptr %1, align 4
    #dbg_declare(ptr %needle.dbg.spill, !9313, !DIExpression(), !9345)
  %2 = zext i1 %long_period to i8
  store i8 %2, ptr %long_period.dbg.spill, align 1
    #dbg_declare(ptr %long_period.dbg.spill, !9314, !DIExpression(), !9346)
    #dbg_declare(ptr %start1, !9323, !DIExpression(), !9347)
    #dbg_declare(ptr %iter, !9325, !DIExpression(), !9348)
    #dbg_declare(ptr %start2, !9329, !DIExpression(), !9349)
    #dbg_declare(ptr %iter3, !9331, !DIExpression(), !9350)
  %3 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9351
  %old_pos = load i32, ptr %3, align 4, !dbg !9351
  store i32 %old_pos, ptr %old_pos.dbg.spill, align 4, !dbg !9351
    #dbg_declare(ptr %old_pos.dbg.spill, !9315, !DIExpression(), !9352)
  %_8.0 = sub i32 %needle.1, 1, !dbg !9353
  %_8.1 = icmp ult i32 %needle.1, 1, !dbg !9353
  br i1 %_8.1, label %panic, label %bb1, !dbg !9353

bb1:                                              ; preds = %start
  store i32 %_8.0, ptr %needle_last.dbg.spill, align 4, !dbg !9353
    #dbg_declare(ptr %needle_last.dbg.spill, !9317, !DIExpression(), !9354)
  br label %bb2, !dbg !9355

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_049ec31d5d458ff8793c1c9238628b5c) #14, !dbg !9353
  unreachable, !dbg !9353

bb2:                                              ; preds = %bb32, %bb31, %bb48, %bb46, %bb16, %bb15, %bb1
  %4 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9356
  %_11 = load i32, ptr %4, align 4, !dbg !9356
  %_12.0 = add i32 %_11, %_8.0, !dbg !9356
  %_12.1 = icmp ult i32 %_12.0, %_11, !dbg !9356
  br i1 %_12.1, label %panic4, label %bb3, !dbg !9356

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::get
  %5 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcd563978280d65deE"(ptr align 1 %haystack.0, i32 %haystack.1, i32 %_12.0) #13, !dbg !9357
  store ptr %5, ptr %_9, align 4, !dbg !9357
  %6 = load ptr, ptr %_9, align 4, !dbg !9358
  %7 = ptrtoint ptr %6 to i32, !dbg !9358
  %8 = icmp eq i32 %7, 0, !dbg !9358
  %_13 = select i1 %8, i32 0, i32 1, !dbg !9358
  %9 = trunc nuw i32 %_13 to i1, !dbg !9359
  br i1 %9, label %bb7, label %bb6, !dbg !9359

panic4:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_c2c6f372f1b0ede55803bb0cf4d4723d) #14, !dbg !9356
  unreachable, !dbg !9356

bb7:                                              ; preds = %bb3
  %_85 = load ptr, ptr %_9, align 4, !dbg !9360
  %tail_byte = load i8, ptr %_85, align 1, !dbg !9360
  store i8 %tail_byte, ptr %tail_byte.dbg.spill, align 1, !dbg !9360
    #dbg_declare(ptr %tail_byte.dbg.spill, !9319, !DIExpression(), !9361)
    #dbg_declare(ptr %tail_byte.dbg.spill, !9321, !DIExpression(), !9362)
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_17 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hc45f832b67faeefcE"() #13, !dbg !9363
  br i1 %_17, label %bb9, label %bb11, !dbg !9363

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9364
  store i32 %haystack.1, ptr %10, align 4, !dbg !9364
  %11 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9365
  %_16 = load i32, ptr %11, align 4, !dbg !9365
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h65b9bb6d9416ffa0E"(ptr sret([12 x i8]) align 4 %_0, i32 %old_pos, i32 %_16) #13, !dbg !9366
  br label %bb53, !dbg !9366

bb53:                                             ; preds = %bb10, %bb52, %bb6
  ret void, !dbg !9367

bb11:                                             ; preds = %bb9, %bb7
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_21 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hf10e708e2bd744b9E(ptr align 8 %self, i8 %tail_byte) #13, !dbg !9368
  br i1 %_21, label %bb13, label %bb14, !dbg !9369

bb9:                                              ; preds = %bb7
  %12 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9370
  %_19 = load i32, ptr %12, align 4, !dbg !9370
  %_18 = icmp ne i32 %old_pos, %_19, !dbg !9371
  br i1 %_18, label %bb10, label %bb11, !dbg !9371

bb10:                                             ; preds = %bb9
  %13 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9372
  %_20 = load i32, ptr %13, align 4, !dbg !9372
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h65b9bb6d9416ffa0E"(ptr sret([12 x i8]) align 4 %_0, i32 %old_pos, i32 %_20) #13, !dbg !9373
  br label %bb53, !dbg !9373

bb14:                                             ; preds = %bb11
  %14 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9374
  %15 = load i32, ptr %14, align 4, !dbg !9374
  %_24.0 = add i32 %15, %needle.1, !dbg !9374
  %_24.1 = icmp ult i32 %_24.0, %15, !dbg !9374
  br i1 %_24.1, label %panic5, label %bb15, !dbg !9374

bb13:                                             ; preds = %bb11
  br i1 %long_period, label %bb17, label %bb18, !dbg !9375

bb15:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9374
  store i32 %_24.0, ptr %16, align 4, !dbg !9374
  br i1 %long_period, label %bb2, label %bb16, !dbg !9376

panic5:                                           ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_5e3d8b960a4dc41e7827fe2e971b946b) #14, !dbg !9374
  unreachable, !dbg !9374

bb16:                                             ; preds = %bb15
  %17 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9377
  store i32 0, ptr %17, align 4, !dbg !9377
  br label %bb2, !dbg !9378

bb18:                                             ; preds = %bb13
  %18 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9379
  %_26 = load i32, ptr %18, align 8, !dbg !9379
  %19 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9380
  %_27 = load i32, ptr %19, align 4, !dbg !9380
; call core::cmp::max
  %20 = call i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32 %_26, i32 %_27) #13, !dbg !9381
  store i32 %20, ptr %start1, align 4, !dbg !9381
  br label %bb19, !dbg !9381

bb17:                                             ; preds = %bb13
  %21 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9382
  %22 = load i32, ptr %21, align 8, !dbg !9382
  store i32 %22, ptr %start1, align 4, !dbg !9382
  br label %bb19, !dbg !9383

bb19:                                             ; preds = %bb17, %bb18
  %_30 = load i32, ptr %start1, align 4, !dbg !9384
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %23 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 %_30, i32 %needle.1) #13, !dbg !9384
  %_28.0 = extractvalue { i32, i32 } %23, 0, !dbg !9384
  %_28.1 = extractvalue { i32, i32 } %23, 1, !dbg !9384
  store i32 %_28.0, ptr %iter, align 4, !dbg !9384
  %24 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !9384
  store i32 %_28.1, ptr %24, align 4, !dbg !9384
  br label %bb21, !dbg !9385

bb21:                                             ; preds = %bb27, %bb19
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %25 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter) #13, !dbg !9348
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !9348
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !9348
  store i32 %26, ptr %_33, align 4, !dbg !9348
  %28 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !9348
  store i32 %27, ptr %28, align 4, !dbg !9348
  %_35 = load i32, ptr %_33, align 4, !dbg !9348
  %29 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !9348
  %30 = load i32, ptr %29, align 4, !dbg !9348
  %31 = trunc nuw i32 %_35 to i1, !dbg !9348
  br i1 %31, label %bb23, label %bb24, !dbg !9348

bb23:                                             ; preds = %bb21
  %32 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !9386
  %i13 = load i32, ptr %32, align 4, !dbg !9386
  store i32 %i13, ptr %i.dbg.spill14, align 4, !dbg !9386
    #dbg_declare(ptr %i.dbg.spill14, !9327, !DIExpression(), !9387)
  %_40 = icmp ult i32 %i13, %needle.1, !dbg !9388
  br i1 %_40, label %bb25, label %panic15, !dbg !9388

bb24:                                             ; preds = %bb21
  br i1 %long_period, label %bb33, label %bb34, !dbg !9389

bb34:                                             ; preds = %bb24
  %33 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9390
  %34 = load i32, ptr %33, align 4, !dbg !9390
  store i32 %34, ptr %start2, align 4, !dbg !9390
  br label %bb35, !dbg !9391

bb33:                                             ; preds = %bb24
  store i32 0, ptr %start2, align 4, !dbg !9392
  br label %bb35, !dbg !9391

bb35:                                             ; preds = %bb33, %bb34
  %_57 = load i32, ptr %start2, align 4, !dbg !9393
  %35 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9394
  %_58 = load i32, ptr %35, align 8, !dbg !9394
; call core::iter::traits::iterator::Iterator::rev
  %36 = call { i32, i32 } @_ZN4core4iter6traits8iterator8Iterator3rev17ha5953c0d25a6b477E(i32 %_57, i32 %_58) #13, !dbg !9395
  %_55.0 = extractvalue { i32, i32 } %36, 0, !dbg !9395
  %_55.1 = extractvalue { i32, i32 } %36, 1, !dbg !9395
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %37 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0abae64d9977c3e0E"(i32 %_55.0, i32 %_55.1) #13, !dbg !9396
  %_54.0 = extractvalue { i32, i32 } %37, 0, !dbg !9396
  %_54.1 = extractvalue { i32, i32 } %37, 1, !dbg !9396
  store i32 %_54.0, ptr %iter3, align 4, !dbg !9396
  %38 = getelementptr inbounds i8, ptr %iter3, i32 4, !dbg !9396
  store i32 %_54.1, ptr %38, align 4, !dbg !9396
  br label %bb38, !dbg !9397

bb38:                                             ; preds = %bb44, %bb35
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %39 = call { i32, i32 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h839cace58e7e4da7E"(ptr align 4 %iter3) #13, !dbg !9350
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !9350
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !9350
  store i32 %40, ptr %_60, align 4, !dbg !9350
  %42 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !9350
  store i32 %41, ptr %42, align 4, !dbg !9350
  %_62 = load i32, ptr %_60, align 4, !dbg !9350
  %43 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !9350
  %44 = load i32, ptr %43, align 4, !dbg !9350
  %45 = trunc nuw i32 %_62 to i1, !dbg !9350
  br i1 %45, label %bb40, label %bb41, !dbg !9350

bb40:                                             ; preds = %bb38
  %46 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !9398
  %i = load i32, ptr %46, align 4, !dbg !9398
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !9398
    #dbg_declare(ptr %i.dbg.spill, !9339, !DIExpression(), !9399)
  %_67 = icmp ult i32 %i, %needle.1, !dbg !9400
  br i1 %_67, label %bb42, label %panic8, !dbg !9400

bb41:                                             ; preds = %bb38
  %47 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9401
  %match_pos = load i32, ptr %47, align 4, !dbg !9401
  store i32 %match_pos, ptr %match_pos.dbg.spill, align 4, !dbg !9401
    #dbg_declare(ptr %match_pos.dbg.spill, !9341, !DIExpression(), !9402)
  %48 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9403
  %49 = load i32, ptr %48, align 4, !dbg !9403
  %_81.0 = add i32 %49, %needle.1, !dbg !9403
  %_81.1 = icmp ult i32 %_81.0, %49, !dbg !9403
  br i1 %_81.1, label %panic6, label %bb49, !dbg !9403

bb49:                                             ; preds = %bb41
  %50 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9403
  store i32 %_81.0, ptr %50, align 4, !dbg !9403
  br i1 %long_period, label %bb51, label %bb50, !dbg !9404

panic6:                                           ; preds = %bb41
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_1d512c4983281010f355d01bbfd379b4) #14, !dbg !9403
  unreachable, !dbg !9403

bb50:                                             ; preds = %bb49
  %51 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9405
  store i32 0, ptr %51, align 4, !dbg !9405
  br label %bb51, !dbg !9406

bb51:                                             ; preds = %bb50, %bb49
  %_84.0 = add i32 %match_pos, %needle.1, !dbg !9407
  %_84.1 = icmp ult i32 %_84.0, %match_pos, !dbg !9407
  br i1 %_84.1, label %panic7, label %bb52, !dbg !9407

bb52:                                             ; preds = %bb51
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hd4ee2994ec45a1b7E"(ptr sret([12 x i8]) align 4 %_0, i32 %match_pos, i32 %_84.0) #13, !dbg !9408
  br label %bb53, !dbg !9408

panic7:                                           ; preds = %bb51
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_5d904c6c374752fd5fe313d6c3b8cae6) #14, !dbg !9407
  unreachable, !dbg !9407

bb42:                                             ; preds = %bb40
  %52 = getelementptr inbounds nuw i8, ptr %needle.0, i32 %i, !dbg !9400
  %_65 = load i8, ptr %52, align 1, !dbg !9400
  %53 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9409
  %_70 = load i32, ptr %53, align 4, !dbg !9409
  %_71.0 = add i32 %_70, %i, !dbg !9409
  %_71.1 = icmp ult i32 %_71.0, %_70, !dbg !9409
  br i1 %_71.1, label %panic9, label %bb43, !dbg !9409

panic8:                                           ; preds = %bb40
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %i, i32 %needle.1, ptr align 4 @alloc_3f1759ef14ff9b98f4549fb3b8f29168) #14, !dbg !9400
  unreachable, !dbg !9400

bb43:                                             ; preds = %bb42
  %_73 = icmp ult i32 %_71.0, %haystack.1, !dbg !9410
  br i1 %_73, label %bb44, label %panic10, !dbg !9410

panic9:                                           ; preds = %bb42
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_c22e292fe12a348bd48e18ef70629fff) #14, !dbg !9409
  unreachable, !dbg !9409

bb44:                                             ; preds = %bb43
  %54 = getelementptr inbounds nuw i8, ptr %haystack.0, i32 %_71.0, !dbg !9410
  %_68 = load i8, ptr %54, align 1, !dbg !9410
  %_64 = icmp ne i8 %_65, %_68, !dbg !9400
  br i1 %_64, label %bb45, label %bb38, !dbg !9400

panic10:                                          ; preds = %bb43
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %_71.0, i32 %haystack.1, ptr align 4 @alloc_dd59d512fbc3282ec90b17661c246b10) #14, !dbg !9410
  unreachable, !dbg !9410

bb45:                                             ; preds = %bb44
  %55 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !9411
  %_74 = load i32, ptr %55, align 8, !dbg !9411
  %56 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9412
  %57 = load i32, ptr %56, align 4, !dbg !9412
  %_75.0 = add i32 %57, %_74, !dbg !9412
  %_75.1 = icmp ult i32 %_75.0, %57, !dbg !9412
  br i1 %_75.1, label %panic11, label %bb46, !dbg !9412

bb46:                                             ; preds = %bb45
  %58 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9412
  store i32 %_75.0, ptr %58, align 4, !dbg !9412
  br i1 %long_period, label %bb2, label %bb47, !dbg !9413

panic11:                                          ; preds = %bb45
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_bdd7f0c11b98e0f4250ef7fb13cd4cda) #14, !dbg !9412
  unreachable, !dbg !9412

bb47:                                             ; preds = %bb46
  %59 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !9414
  %_77 = load i32, ptr %59, align 8, !dbg !9414
  %_78.0 = sub i32 %needle.1, %_77, !dbg !9415
  %_78.1 = icmp ult i32 %needle.1, %_77, !dbg !9415
  br i1 %_78.1, label %panic12, label %bb48, !dbg !9415

bb48:                                             ; preds = %bb47
  %60 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9416
  store i32 %_78.0, ptr %60, align 4, !dbg !9416
  br label %bb2, !dbg !9417

panic12:                                          ; preds = %bb47
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_a25c359f8b0ba481f03558c2cc376352) #14, !dbg !9415
  unreachable, !dbg !9415

bb25:                                             ; preds = %bb23
  %61 = getelementptr inbounds nuw i8, ptr %needle.0, i32 %i13, !dbg !9388
  %_38 = load i8, ptr %61, align 1, !dbg !9388
  %62 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9418
  %_43 = load i32, ptr %62, align 4, !dbg !9418
  %_44.0 = add i32 %_43, %i13, !dbg !9418
  %_44.1 = icmp ult i32 %_44.0, %_43, !dbg !9418
  br i1 %_44.1, label %panic16, label %bb26, !dbg !9418

panic15:                                          ; preds = %bb23
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %i13, i32 %needle.1, ptr align 4 @alloc_b5c97c4cf9ca11e48fe7cc203c7941f0) #14, !dbg !9388
  unreachable, !dbg !9388

bb26:                                             ; preds = %bb25
  %_46 = icmp ult i32 %_44.0, %haystack.1, !dbg !9419
  br i1 %_46, label %bb27, label %panic17, !dbg !9419

panic16:                                          ; preds = %bb25
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_14499683523e9f7956a158939786e324) #14, !dbg !9418
  unreachable, !dbg !9418

bb27:                                             ; preds = %bb26
  %63 = getelementptr inbounds nuw i8, ptr %haystack.0, i32 %_44.0, !dbg !9419
  %_41 = load i8, ptr %63, align 1, !dbg !9419
  %_37 = icmp ne i8 %_38, %_41, !dbg !9388
  br i1 %_37, label %bb28, label %bb21, !dbg !9388

panic17:                                          ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %_44.0, i32 %haystack.1, ptr align 4 @alloc_df3cc7e050890dab9a01bd8b4c48f873) #14, !dbg !9419
  unreachable, !dbg !9419

bb28:                                             ; preds = %bb27
  %64 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9420
  %_49 = load i32, ptr %64, align 8, !dbg !9420
  %_50.0 = sub i32 %i13, %_49, !dbg !9421
  %_50.1 = icmp ult i32 %i13, %_49, !dbg !9421
  br i1 %_50.1, label %panic18, label %bb29, !dbg !9421

bb29:                                             ; preds = %bb28
  %_51.0 = add i32 %_50.0, 1, !dbg !9421
  %_51.1 = icmp ult i32 %_51.0, %_50.0, !dbg !9421
  br i1 %_51.1, label %panic19, label %bb30, !dbg !9421

panic18:                                          ; preds = %bb28
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_d45350cae856ebdeb5971d4e80e92b14) #14, !dbg !9421
  unreachable, !dbg !9421

bb30:                                             ; preds = %bb29
  %65 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9422
  %66 = load i32, ptr %65, align 4, !dbg !9422
  %_52.0 = add i32 %66, %_51.0, !dbg !9422
  %_52.1 = icmp ult i32 %_52.0, %66, !dbg !9422
  br i1 %_52.1, label %panic20, label %bb31, !dbg !9422

panic19:                                          ; preds = %bb29
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_d45350cae856ebdeb5971d4e80e92b14) #14, !dbg !9421
  unreachable, !dbg !9421

bb31:                                             ; preds = %bb30
  %67 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9422
  store i32 %_52.0, ptr %67, align 4, !dbg !9422
  br i1 %long_period, label %bb2, label %bb32, !dbg !9423

panic20:                                          ; preds = %bb30
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_6ffa2a68bf05aefb1506584c938a7ed8) #14, !dbg !9422
  unreachable, !dbg !9422

bb32:                                             ; preds = %bb31
  %68 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9424
  store i32 0, ptr %68, align 4, !dbg !9424
  br label %bb2, !dbg !9425

bb5:                                              ; No predecessors!
  unreachable, !dbg !9426
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3str7pattern14TwoWaySearcher4next17hfbf25a28e62a971aE(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %self, ptr align 1 %haystack.0, i32 %haystack.1, ptr align 1 %needle.0, i32 %needle.1, i1 zeroext %long_period) unnamed_addr #0 !dbg !9428 {
start:
  %i.dbg.spill14 = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %match_pos.dbg.spill = alloca [4 x i8], align 4
  %tail_byte.dbg.spill = alloca [1 x i8], align 1
  %needle_last.dbg.spill = alloca [4 x i8], align 4
  %old_pos.dbg.spill = alloca [4 x i8], align 4
  %long_period.dbg.spill = alloca [1 x i8], align 1
  %needle.dbg.spill = alloca [8 x i8], align 4
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_60 = alloca [8 x i8], align 4
  %iter3 = alloca [8 x i8], align 4
  %start2 = alloca [4 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %start1 = alloca [4 x i8], align 4
  %_9 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9455, !DIExpression(), !9481)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %0, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !9456, !DIExpression(), !9482)
  store ptr %needle.0, ptr %needle.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %needle.dbg.spill, i32 4
  store i32 %needle.1, ptr %1, align 4
    #dbg_declare(ptr %needle.dbg.spill, !9457, !DIExpression(), !9483)
  %2 = zext i1 %long_period to i8
  store i8 %2, ptr %long_period.dbg.spill, align 1
    #dbg_declare(ptr %long_period.dbg.spill, !9458, !DIExpression(), !9484)
    #dbg_declare(ptr %start1, !9467, !DIExpression(), !9485)
    #dbg_declare(ptr %iter, !9469, !DIExpression(), !9486)
    #dbg_declare(ptr %start2, !9473, !DIExpression(), !9487)
    #dbg_declare(ptr %iter3, !9475, !DIExpression(), !9488)
  %3 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9489
  %old_pos = load i32, ptr %3, align 4, !dbg !9489
  store i32 %old_pos, ptr %old_pos.dbg.spill, align 4, !dbg !9489
    #dbg_declare(ptr %old_pos.dbg.spill, !9459, !DIExpression(), !9490)
  %_8.0 = sub i32 %needle.1, 1, !dbg !9491
  %_8.1 = icmp ult i32 %needle.1, 1, !dbg !9491
  br i1 %_8.1, label %panic, label %bb1, !dbg !9491

bb1:                                              ; preds = %start
  store i32 %_8.0, ptr %needle_last.dbg.spill, align 4, !dbg !9491
    #dbg_declare(ptr %needle_last.dbg.spill, !9461, !DIExpression(), !9492)
  br label %bb2, !dbg !9493

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_049ec31d5d458ff8793c1c9238628b5c) #14, !dbg !9491
  unreachable, !dbg !9491

bb2:                                              ; preds = %bb32, %bb31, %bb48, %bb46, %bb16, %bb15, %bb1
  %4 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9494
  %_11 = load i32, ptr %4, align 4, !dbg !9494
  %_12.0 = add i32 %_11, %_8.0, !dbg !9494
  %_12.1 = icmp ult i32 %_12.0, %_11, !dbg !9494
  br i1 %_12.1, label %panic4, label %bb3, !dbg !9494

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::get
  %5 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcd563978280d65deE"(ptr align 1 %haystack.0, i32 %haystack.1, i32 %_12.0) #13, !dbg !9495
  store ptr %5, ptr %_9, align 4, !dbg !9495
  %6 = load ptr, ptr %_9, align 4, !dbg !9496
  %7 = ptrtoint ptr %6 to i32, !dbg !9496
  %8 = icmp eq i32 %7, 0, !dbg !9496
  %_13 = select i1 %8, i32 0, i32 1, !dbg !9496
  %9 = trunc nuw i32 %_13 to i1, !dbg !9497
  br i1 %9, label %bb7, label %bb6, !dbg !9497

panic4:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_c2c6f372f1b0ede55803bb0cf4d4723d) #14, !dbg !9494
  unreachable, !dbg !9494

bb7:                                              ; preds = %bb3
  %_85 = load ptr, ptr %_9, align 4, !dbg !9498
  %tail_byte = load i8, ptr %_85, align 1, !dbg !9498
  store i8 %tail_byte, ptr %tail_byte.dbg.spill, align 1, !dbg !9498
    #dbg_declare(ptr %tail_byte.dbg.spill, !9463, !DIExpression(), !9499)
    #dbg_declare(ptr %tail_byte.dbg.spill, !9465, !DIExpression(), !9500)
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_17 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h2ff111f15704fb28E"() #13, !dbg !9501
  br i1 %_17, label %bb9, label %bb11, !dbg !9501

bb6:                                              ; preds = %bb3
  %10 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9502
  store i32 %haystack.1, ptr %10, align 4, !dbg !9502
  %11 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9503
  %_16 = load i32, ptr %11, align 4, !dbg !9503
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h1ff834da66e2ec58E"(ptr sret([12 x i8]) align 4 %_0, i32 %old_pos, i32 %_16) #13, !dbg !9504
  br label %bb53, !dbg !9504

bb53:                                             ; preds = %bb10, %bb52, %bb6
  ret void, !dbg !9505

bb11:                                             ; preds = %bb9, %bb7
; call core::str::pattern::TwoWaySearcher::byteset_contains
  %_21 = call zeroext i1 @_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hf10e708e2bd744b9E(ptr align 8 %self, i8 %tail_byte) #13, !dbg !9506
  br i1 %_21, label %bb13, label %bb14, !dbg !9507

bb9:                                              ; preds = %bb7
  %12 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9508
  %_19 = load i32, ptr %12, align 4, !dbg !9508
  %_18 = icmp ne i32 %old_pos, %_19, !dbg !9509
  br i1 %_18, label %bb10, label %bb11, !dbg !9509

bb10:                                             ; preds = %bb9
  %13 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9510
  %_20 = load i32, ptr %13, align 4, !dbg !9510
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h1ff834da66e2ec58E"(ptr sret([12 x i8]) align 4 %_0, i32 %old_pos, i32 %_20) #13, !dbg !9511
  br label %bb53, !dbg !9511

bb14:                                             ; preds = %bb11
  %14 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9512
  %15 = load i32, ptr %14, align 4, !dbg !9512
  %_24.0 = add i32 %15, %needle.1, !dbg !9512
  %_24.1 = icmp ult i32 %_24.0, %15, !dbg !9512
  br i1 %_24.1, label %panic5, label %bb15, !dbg !9512

bb13:                                             ; preds = %bb11
  br i1 %long_period, label %bb17, label %bb18, !dbg !9513

bb15:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9512
  store i32 %_24.0, ptr %16, align 4, !dbg !9512
  br i1 %long_period, label %bb2, label %bb16, !dbg !9514

panic5:                                           ; preds = %bb14
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_5e3d8b960a4dc41e7827fe2e971b946b) #14, !dbg !9512
  unreachable, !dbg !9512

bb16:                                             ; preds = %bb15
  %17 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9515
  store i32 0, ptr %17, align 4, !dbg !9515
  br label %bb2, !dbg !9516

bb18:                                             ; preds = %bb13
  %18 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9517
  %_26 = load i32, ptr %18, align 8, !dbg !9517
  %19 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9518
  %_27 = load i32, ptr %19, align 4, !dbg !9518
; call core::cmp::max
  %20 = call i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32 %_26, i32 %_27) #13, !dbg !9519
  store i32 %20, ptr %start1, align 4, !dbg !9519
  br label %bb19, !dbg !9519

bb17:                                             ; preds = %bb13
  %21 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9520
  %22 = load i32, ptr %21, align 8, !dbg !9520
  store i32 %22, ptr %start1, align 4, !dbg !9520
  br label %bb19, !dbg !9521

bb19:                                             ; preds = %bb17, %bb18
  %_30 = load i32, ptr %start1, align 4, !dbg !9522
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %23 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 %_30, i32 %needle.1) #13, !dbg !9522
  %_28.0 = extractvalue { i32, i32 } %23, 0, !dbg !9522
  %_28.1 = extractvalue { i32, i32 } %23, 1, !dbg !9522
  store i32 %_28.0, ptr %iter, align 4, !dbg !9522
  %24 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !9522
  store i32 %_28.1, ptr %24, align 4, !dbg !9522
  br label %bb21, !dbg !9523

bb21:                                             ; preds = %bb27, %bb19
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %25 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter) #13, !dbg !9486
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !9486
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !9486
  store i32 %26, ptr %_33, align 4, !dbg !9486
  %28 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !9486
  store i32 %27, ptr %28, align 4, !dbg !9486
  %_35 = load i32, ptr %_33, align 4, !dbg !9486
  %29 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !9486
  %30 = load i32, ptr %29, align 4, !dbg !9486
  %31 = trunc nuw i32 %_35 to i1, !dbg !9486
  br i1 %31, label %bb23, label %bb24, !dbg !9486

bb23:                                             ; preds = %bb21
  %32 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !9524
  %i13 = load i32, ptr %32, align 4, !dbg !9524
  store i32 %i13, ptr %i.dbg.spill14, align 4, !dbg !9524
    #dbg_declare(ptr %i.dbg.spill14, !9471, !DIExpression(), !9525)
  %_40 = icmp ult i32 %i13, %needle.1, !dbg !9526
  br i1 %_40, label %bb25, label %panic15, !dbg !9526

bb24:                                             ; preds = %bb21
  br i1 %long_period, label %bb33, label %bb34, !dbg !9527

bb34:                                             ; preds = %bb24
  %33 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9528
  %34 = load i32, ptr %33, align 4, !dbg !9528
  store i32 %34, ptr %start2, align 4, !dbg !9528
  br label %bb35, !dbg !9529

bb33:                                             ; preds = %bb24
  store i32 0, ptr %start2, align 4, !dbg !9530
  br label %bb35, !dbg !9529

bb35:                                             ; preds = %bb33, %bb34
  %_57 = load i32, ptr %start2, align 4, !dbg !9531
  %35 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9532
  %_58 = load i32, ptr %35, align 8, !dbg !9532
; call core::iter::traits::iterator::Iterator::rev
  %36 = call { i32, i32 } @_ZN4core4iter6traits8iterator8Iterator3rev17ha5953c0d25a6b477E(i32 %_57, i32 %_58) #13, !dbg !9533
  %_55.0 = extractvalue { i32, i32 } %36, 0, !dbg !9533
  %_55.1 = extractvalue { i32, i32 } %36, 1, !dbg !9533
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %37 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0abae64d9977c3e0E"(i32 %_55.0, i32 %_55.1) #13, !dbg !9534
  %_54.0 = extractvalue { i32, i32 } %37, 0, !dbg !9534
  %_54.1 = extractvalue { i32, i32 } %37, 1, !dbg !9534
  store i32 %_54.0, ptr %iter3, align 4, !dbg !9534
  %38 = getelementptr inbounds i8, ptr %iter3, i32 4, !dbg !9534
  store i32 %_54.1, ptr %38, align 4, !dbg !9534
  br label %bb38, !dbg !9535

bb38:                                             ; preds = %bb44, %bb35
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
  %39 = call { i32, i32 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h839cace58e7e4da7E"(ptr align 4 %iter3) #13, !dbg !9488
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !9488
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !9488
  store i32 %40, ptr %_60, align 4, !dbg !9488
  %42 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !9488
  store i32 %41, ptr %42, align 4, !dbg !9488
  %_62 = load i32, ptr %_60, align 4, !dbg !9488
  %43 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !9488
  %44 = load i32, ptr %43, align 4, !dbg !9488
  %45 = trunc nuw i32 %_62 to i1, !dbg !9488
  br i1 %45, label %bb40, label %bb41, !dbg !9488

bb40:                                             ; preds = %bb38
  %46 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !9536
  %i = load i32, ptr %46, align 4, !dbg !9536
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !9536
    #dbg_declare(ptr %i.dbg.spill, !9477, !DIExpression(), !9537)
  %_67 = icmp ult i32 %i, %needle.1, !dbg !9538
  br i1 %_67, label %bb42, label %panic8, !dbg !9538

bb41:                                             ; preds = %bb38
  %47 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9539
  %match_pos = load i32, ptr %47, align 4, !dbg !9539
  store i32 %match_pos, ptr %match_pos.dbg.spill, align 4, !dbg !9539
    #dbg_declare(ptr %match_pos.dbg.spill, !9479, !DIExpression(), !9540)
  %48 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9541
  %49 = load i32, ptr %48, align 4, !dbg !9541
  %_81.0 = add i32 %49, %needle.1, !dbg !9541
  %_81.1 = icmp ult i32 %_81.0, %49, !dbg !9541
  br i1 %_81.1, label %panic6, label %bb49, !dbg !9541

bb49:                                             ; preds = %bb41
  %50 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9541
  store i32 %_81.0, ptr %50, align 4, !dbg !9541
  br i1 %long_period, label %bb51, label %bb50, !dbg !9542

panic6:                                           ; preds = %bb41
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_1d512c4983281010f355d01bbfd379b4) #14, !dbg !9541
  unreachable, !dbg !9541

bb50:                                             ; preds = %bb49
  %51 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9543
  store i32 0, ptr %51, align 4, !dbg !9543
  br label %bb51, !dbg !9544

bb51:                                             ; preds = %bb50, %bb49
  %_84.0 = add i32 %match_pos, %needle.1, !dbg !9545
  %_84.1 = icmp ult i32 %_84.0, %match_pos, !dbg !9545
  br i1 %_84.1, label %panic7, label %bb52, !dbg !9545

bb52:                                             ; preds = %bb51
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h4de4435520f26f01E"(ptr sret([12 x i8]) align 4 %_0, i32 %match_pos, i32 %_84.0) #13, !dbg !9546
  br label %bb53, !dbg !9546

panic7:                                           ; preds = %bb51
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_5d904c6c374752fd5fe313d6c3b8cae6) #14, !dbg !9545
  unreachable, !dbg !9545

bb42:                                             ; preds = %bb40
  %52 = getelementptr inbounds nuw i8, ptr %needle.0, i32 %i, !dbg !9538
  %_65 = load i8, ptr %52, align 1, !dbg !9538
  %53 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9547
  %_70 = load i32, ptr %53, align 4, !dbg !9547
  %_71.0 = add i32 %_70, %i, !dbg !9547
  %_71.1 = icmp ult i32 %_71.0, %_70, !dbg !9547
  br i1 %_71.1, label %panic9, label %bb43, !dbg !9547

panic8:                                           ; preds = %bb40
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %i, i32 %needle.1, ptr align 4 @alloc_3f1759ef14ff9b98f4549fb3b8f29168) #14, !dbg !9538
  unreachable, !dbg !9538

bb43:                                             ; preds = %bb42
  %_73 = icmp ult i32 %_71.0, %haystack.1, !dbg !9548
  br i1 %_73, label %bb44, label %panic10, !dbg !9548

panic9:                                           ; preds = %bb42
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_c22e292fe12a348bd48e18ef70629fff) #14, !dbg !9547
  unreachable, !dbg !9547

bb44:                                             ; preds = %bb43
  %54 = getelementptr inbounds nuw i8, ptr %haystack.0, i32 %_71.0, !dbg !9548
  %_68 = load i8, ptr %54, align 1, !dbg !9548
  %_64 = icmp ne i8 %_65, %_68, !dbg !9538
  br i1 %_64, label %bb45, label %bb38, !dbg !9538

panic10:                                          ; preds = %bb43
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %_71.0, i32 %haystack.1, ptr align 4 @alloc_dd59d512fbc3282ec90b17661c246b10) #14, !dbg !9548
  unreachable, !dbg !9548

bb45:                                             ; preds = %bb44
  %55 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !9549
  %_74 = load i32, ptr %55, align 8, !dbg !9549
  %56 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9550
  %57 = load i32, ptr %56, align 4, !dbg !9550
  %_75.0 = add i32 %57, %_74, !dbg !9550
  %_75.1 = icmp ult i32 %_75.0, %57, !dbg !9550
  br i1 %_75.1, label %panic11, label %bb46, !dbg !9550

bb46:                                             ; preds = %bb45
  %58 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9550
  store i32 %_75.0, ptr %58, align 4, !dbg !9550
  br i1 %long_period, label %bb2, label %bb47, !dbg !9551

panic11:                                          ; preds = %bb45
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_bdd7f0c11b98e0f4250ef7fb13cd4cda) #14, !dbg !9550
  unreachable, !dbg !9550

bb47:                                             ; preds = %bb46
  %59 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !9552
  %_77 = load i32, ptr %59, align 8, !dbg !9552
  %_78.0 = sub i32 %needle.1, %_77, !dbg !9553
  %_78.1 = icmp ult i32 %needle.1, %_77, !dbg !9553
  br i1 %_78.1, label %panic12, label %bb48, !dbg !9553

bb48:                                             ; preds = %bb47
  %60 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9554
  store i32 %_78.0, ptr %60, align 4, !dbg !9554
  br label %bb2, !dbg !9555

panic12:                                          ; preds = %bb47
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_a25c359f8b0ba481f03558c2cc376352) #14, !dbg !9553
  unreachable, !dbg !9553

bb25:                                             ; preds = %bb23
  %61 = getelementptr inbounds nuw i8, ptr %needle.0, i32 %i13, !dbg !9526
  %_38 = load i8, ptr %61, align 1, !dbg !9526
  %62 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9556
  %_43 = load i32, ptr %62, align 4, !dbg !9556
  %_44.0 = add i32 %_43, %i13, !dbg !9556
  %_44.1 = icmp ult i32 %_44.0, %_43, !dbg !9556
  br i1 %_44.1, label %panic16, label %bb26, !dbg !9556

panic15:                                          ; preds = %bb23
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %i13, i32 %needle.1, ptr align 4 @alloc_b5c97c4cf9ca11e48fe7cc203c7941f0) #14, !dbg !9526
  unreachable, !dbg !9526

bb26:                                             ; preds = %bb25
  %_46 = icmp ult i32 %_44.0, %haystack.1, !dbg !9557
  br i1 %_46, label %bb27, label %panic17, !dbg !9557

panic16:                                          ; preds = %bb25
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_14499683523e9f7956a158939786e324) #14, !dbg !9556
  unreachable, !dbg !9556

bb27:                                             ; preds = %bb26
  %63 = getelementptr inbounds nuw i8, ptr %haystack.0, i32 %_44.0, !dbg !9557
  %_41 = load i8, ptr %63, align 1, !dbg !9557
  %_37 = icmp ne i8 %_38, %_41, !dbg !9526
  br i1 %_37, label %bb28, label %bb21, !dbg !9526

panic17:                                          ; preds = %bb26
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %_44.0, i32 %haystack.1, ptr align 4 @alloc_df3cc7e050890dab9a01bd8b4c48f873) #14, !dbg !9557
  unreachable, !dbg !9557

bb28:                                             ; preds = %bb27
  %64 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9558
  %_49 = load i32, ptr %64, align 8, !dbg !9558
  %_50.0 = sub i32 %i13, %_49, !dbg !9559
  %_50.1 = icmp ult i32 %i13, %_49, !dbg !9559
  br i1 %_50.1, label %panic18, label %bb29, !dbg !9559

bb29:                                             ; preds = %bb28
  %_51.0 = add i32 %_50.0, 1, !dbg !9559
  %_51.1 = icmp ult i32 %_51.0, %_50.0, !dbg !9559
  br i1 %_51.1, label %panic19, label %bb30, !dbg !9559

panic18:                                          ; preds = %bb28
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_d45350cae856ebdeb5971d4e80e92b14) #14, !dbg !9559
  unreachable, !dbg !9559

bb30:                                             ; preds = %bb29
  %65 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9560
  %66 = load i32, ptr %65, align 4, !dbg !9560
  %_52.0 = add i32 %66, %_51.0, !dbg !9560
  %_52.1 = icmp ult i32 %_52.0, %66, !dbg !9560
  br i1 %_52.1, label %panic20, label %bb31, !dbg !9560

panic19:                                          ; preds = %bb29
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_d45350cae856ebdeb5971d4e80e92b14) #14, !dbg !9559
  unreachable, !dbg !9559

bb31:                                             ; preds = %bb30
  %67 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !9560
  store i32 %_52.0, ptr %67, align 4, !dbg !9560
  br i1 %long_period, label %bb2, label %bb32, !dbg !9561

panic20:                                          ; preds = %bb30
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_6ffa2a68bf05aefb1506584c938a7ed8) #14, !dbg !9560
  unreachable, !dbg !9560

bb32:                                             ; preds = %bb31
  %68 = getelementptr inbounds i8, ptr %self, i32 28, !dbg !9562
  store i32 0, ptr %68, align 4, !dbg !9562
  br label %bb2, !dbg !9563

bb5:                                              ; No predecessors!
  unreachable, !dbg !9564
}

; core::str::pattern::Searcher::next_match
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3str7pattern8Searcher10next_match17h6b839db6181e57faE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !9566 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9572, !DIExpression(), !9578)
  br label %bb1, !dbg !9579

bb1:                                              ; preds = %bb1, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h2c6485f9480b3603E"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %self) #13, !dbg !9580
  %_3 = load i32, ptr %_2, align 4, !dbg !9581
  switch i32 %_3, label %bb6 [
    i32 0, label %bb4
    i32 2, label %bb3
    i32 1, label %bb1
  ], !dbg !9582

bb6:                                              ; preds = %bb1
  unreachable, !dbg !9583

bb4:                                              ; preds = %bb1
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !9584
  %a = load i32, ptr %0, align 4, !dbg !9584
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !9584
    #dbg_declare(ptr %a.dbg.spill, !9573, !DIExpression(), !9585)
  %1 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !9586
  %b = load i32, ptr %1, align 4, !dbg !9586
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !9586
    #dbg_declare(ptr %b.dbg.spill, !9575, !DIExpression(), !9587)
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9588
  store i32 %a, ptr %2, align 4, !dbg !9588
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !9588
  store i32 %b, ptr %3, align 4, !dbg !9588
  store i32 1, ptr %_0, align 4, !dbg !9588
  br label %bb5, !dbg !9589

bb3:                                              ; preds = %bb1
  store i32 0, ptr %_0, align 4, !dbg !9591
  br label %bb5, !dbg !9592

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !9593
}

; core::str::pattern::Searcher::next_reject
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3str7pattern8Searcher11next_reject17h0423c57c9b33829aE(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !9594 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9599, !DIExpression(), !9605)
  br label %bb1, !dbg !9606

bb1:                                              ; preds = %bb1, %start
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hba2273dbc027c833E"(ptr sret([12 x i8]) align 4 %_2, ptr align 8 %self) #13, !dbg !9607
  %_3 = load i32, ptr %_2, align 4, !dbg !9608
  switch i32 %_3, label %bb6 [
    i32 1, label %bb4
    i32 2, label %bb3
    i32 0, label %bb1
  ], !dbg !9609

bb6:                                              ; preds = %bb1
  unreachable, !dbg !9610

bb4:                                              ; preds = %bb1
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !9611
  %a = load i32, ptr %0, align 4, !dbg !9611
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !9611
    #dbg_declare(ptr %a.dbg.spill, !9600, !DIExpression(), !9612)
  %1 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !9613
  %b = load i32, ptr %1, align 4, !dbg !9613
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !9613
    #dbg_declare(ptr %b.dbg.spill, !9602, !DIExpression(), !9614)
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9615
  store i32 %a, ptr %2, align 4, !dbg !9615
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !9615
  store i32 %b, ptr %3, align 4, !dbg !9615
  store i32 1, ptr %_0, align 4, !dbg !9615
  br label %bb5, !dbg !9616

bb3:                                              ; preds = %bb1
  store i32 0, ptr %_0, align 4, !dbg !9618
  br label %bb5, !dbg !9619

bb5:                                              ; preds = %bb3, %bb4
  ret void, !dbg !9620
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hc4c3ff2de0ba743dE(ptr align 1 %v.0, i32 %v.1) unnamed_addr #0 !dbg !9621 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !9627, !DIExpression(), !9628)
  %1 = insertvalue { ptr, i32 } poison, ptr %v.0, 0, !dbg !9629
  %2 = insertvalue { ptr, i32 } %1, i32 %v.1, 1, !dbg !9629
  ret { ptr, i32 } %2, !dbg !9629
}

; core::str::converts::from_utf8_unchecked_mut
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3str8converts23from_utf8_unchecked_mut17he1265542c60e145eE(ptr align 1 %v.0, i32 %v.1) unnamed_addr #0 !dbg !9630 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !9638, !DIExpression(), !9639)
  %1 = insertvalue { ptr, i32 } poison, ptr %v.0, 0, !dbg !9640
  %2 = insertvalue { ptr, i32 } %1, i32 %v.1, 1, !dbg !9640
  ret { ptr, i32 } %2, !dbg !9640
}

; core::char::EscapeDebug::unicode
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4char11EscapeDebug7unicode17h8d8319ec9b1f33c6E(ptr sret([16 x i8]) align 4 %_0, i32 %c) unnamed_addr #0 !dbg !9641 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [16 x i8], align 4
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !9647, !DIExpression(), !9648)
; call core::escape::EscapeIterInner<_,ESCAPING>::unicode
  call void @"_ZN4core6escape35EscapeIterInner$LT$_$C$ESCAPING$GT$7unicode17h5bd6fd539d2c5592E"(ptr sret([16 x i8]) align 4 %_2, i32 %c) #13, !dbg !9649
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 16, i1 false), !dbg !9650
  ret void, !dbg !9651
}

; core::char::EscapeDebug::backslash
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 %c) unnamed_addr #0 !dbg !9652 {
start:
  %c.dbg.spill = alloca [1 x i8], align 1
  %_2 = alloca [16 x i8], align 4
  store i8 %c, ptr %c.dbg.spill, align 1
    #dbg_declare(ptr %c.dbg.spill, !9657, !DIExpression(), !9658)
; call core::escape::EscapeIterInner<_,ESCAPING>::backslash
  call void @"_ZN4core6escape35EscapeIterInner$LT$_$C$ESCAPING$GT$9backslash17h2de5efabf36bd270E"(ptr sret([16 x i8]) align 4 %_2, i8 %c) #13, !dbg !9659
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 16, i1 false), !dbg !9660
  ret void, !dbg !9661
}

; core::char::EscapeDebug::printable
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4char11EscapeDebug9printable17hfc2ef56f0f49fdf3E(ptr sret([16 x i8]) align 4 %_0, i32 %chr) unnamed_addr #0 !dbg !9662 {
start:
  %chr.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [16 x i8], align 4
  store i32 %chr, ptr %chr.dbg.spill, align 4
    #dbg_declare(ptr %chr.dbg.spill, !9665, !DIExpression(), !9666)
; call core::escape::EscapeIterInner<_,core::escape::MaybeEscaped>::printable
  call void @"_ZN4core6escape53EscapeIterInner$LT$_$C$core..escape..MaybeEscaped$GT$9printable17h49006ebfaf753725E"(ptr sret([16 x i8]) align 4 %_2, i32 %chr) #13, !dbg !9667
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 16, i1 false), !dbg !9668
  ret void, !dbg !9669
}

; core::char::convert::char_try_from_u32
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char7convert17char_try_from_u3217h9bd5a88bd7ae0f7dE(i32 %i) unnamed_addr #0 !dbg !9670 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !9694, !DIExpression(), !9695)
  %_4 = xor i32 %i, 55296, !dbg !9696
  store i32 %_4, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9697, !DIExpression(), !9703)
  store i32 2048, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !9702, !DIExpression(), !9705)
  %_0.i = sub i32 %_4, 2048, !dbg !9706
  %_2 = icmp uge i32 %_0.i, 1112064, !dbg !9696
  br i1 %_2, label %bb3, label %bb4, !dbg !9696

bb4:                                              ; preds = %start
  store i32 %i, ptr %_0, align 4, !dbg !9707
  br label %bb5, !dbg !9708

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !9709
  br label %bb5, !dbg !9708

bb5:                                              ; preds = %bb3, %bb4
  %0 = load i32, ptr %_0, align 4, !dbg !9710
  ret i32 %0, !dbg !9710
}

; core::char::convert::from_u32
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char7convert8from_u3217h5f7a294437a64866E(i32 %i) unnamed_addr #0 !dbg !9711 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !9713, !DIExpression(), !9716)
; call core::char::convert::char_try_from_u32
  %0 = call i32 @_ZN4core4char7convert17char_try_from_u3217h9bd5a88bd7ae0f7dE(i32 %i) #13, !dbg !9717
  store i32 %0, ptr %_2, align 4, !dbg !9717
  %1 = load i32, ptr %_2, align 4, !dbg !9717
  %2 = icmp eq i32 %1, 1114112, !dbg !9717
  %_3 = select i1 %2, i32 1, i32 0, !dbg !9717
  %3 = trunc nuw i32 %_3 to i1, !dbg !9718
  br i1 %3, label %bb3, label %bb4, !dbg !9718

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !9719
  br label %bb5, !dbg !9719

bb4:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !9720
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !9720
    #dbg_declare(ptr %c.dbg.spill, !9714, !DIExpression(), !9721)
  store i32 %c, ptr %_0, align 4, !dbg !9722
  br label %bb5, !dbg !9723

bb5:                                              ; preds = %bb3, %bb4
  %4 = load i32, ptr %_0, align 4, !dbg !9724
  ret i32 %4, !dbg !9724

bb2:                                              ; No predecessors!
  unreachable, !dbg !9717
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core4char7methods15encode_utf8_raw17h0b0fc32424613543E(i32 %code, ptr align 1 %dst.0, i32 %dst.1) unnamed_addr #0 !dbg !9725 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %dst_len.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %code.dbg.spill.i = alloca [4 x i8], align 4
  %_4.i = alloca [12 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [8 x i8], align 4
  %code.dbg.spill = alloca [4 x i8], align 4
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !9731, !DIExpression(), !9735)
  store ptr %dst.0, ptr %dst.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %dst.dbg.spill, i32 4
  store i32 %dst.1, ptr %0, align 4
    #dbg_declare(ptr %dst.dbg.spill, !9732, !DIExpression(), !9736)
; call core::char::methods::len_utf8
  %len = call i32 @_ZN4core4char7methods8len_utf817h27ddcc7981a17719E(i32 %code) #13, !dbg !9737
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !9737
    #dbg_declare(ptr %len.dbg.spill, !9733, !DIExpression(), !9738)
  %_4 = icmp ult i32 %dst.1, %len, !dbg !9739
  br i1 %_4, label %bb2, label %bb3, !dbg !9739

bb3:                                              ; preds = %start
  store ptr %dst.0, ptr %self.dbg.spill.i1, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %dst.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !9740, !DIExpression(), !9748)
; call core::char::methods::encode_utf8_raw_unchecked
  call void @_ZN4core4char7methods25encode_utf8_raw_unchecked17h6dde6f9db2752a53E(i32 %code, ptr %dst.0) #13, !dbg !9750
  store ptr %dst.0, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %dst.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9740, !DIExpression(), !9751)
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17heacb9b45dad9f98eE(ptr %dst.0, i32 %len, ptr align 4 @alloc_bc1173620796b796ebf04091cc898ca7) #13, !dbg !9753
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !9753
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !9753
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9754
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !9754
  ret { ptr, i32 } %5, !dbg !9754

bb2:                                              ; preds = %start
  store i32 %code, ptr %code.dbg.spill.i, align 4
    #dbg_declare(ptr %code.dbg.spill.i, !9755, !DIExpression(), !9763)
  store i32 %len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !9761, !DIExpression(), !9763)
  store i32 %dst.1, ptr %dst_len.dbg.spill.i, align 4
    #dbg_declare(ptr %dst_len.dbg.spill.i, !9762, !DIExpression(), !9763)
  store i32 %code, ptr %_4.i, align 4, !dbg !9766
  %6 = getelementptr inbounds i8, ptr %_4.i, i32 4, !dbg !9766
  store i32 %len, ptr %6, align 4, !dbg !9766
  %7 = getelementptr inbounds i8, ptr %_4.i, i32 8, !dbg !9766
  store i32 %dst.1, ptr %7, align 4, !dbg !9766
  %8 = load i32, ptr %_4.i, align 4, !dbg !9768
  %9 = getelementptr inbounds i8, ptr %_4.i, i32 4, !dbg !9768
  %10 = load i32, ptr %9, align 4, !dbg !9768
  %11 = getelementptr inbounds i8, ptr %_4.i, i32 8, !dbg !9768
  %12 = load i32, ptr %11, align 4, !dbg !9768
; call core::char::methods::encode_utf8_raw::do_panic::runtime
  call void @_ZN4core4char7methods15encode_utf8_raw8do_panic7runtime17hf43c78897e0ac433E(i32 %8, i32 %10, i32 %12, ptr align 4 @alloc_7b13bce84bc30a18494a4a1a8c05d561) #14, !dbg !9768
  unreachable, !dbg !9768

_ZN4core4char7methods15encode_utf8_raw8do_panic17h579160be39dda5c0E.exit: ; No predecessors!
  unreachable, !dbg !9769
}

; core::char::methods::<impl char>::is_control
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$10is_control17h1834f75da40a1a41E"(i32 %self) unnamed_addr #0 !dbg !9770 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9773, !DIExpression(), !9774)
  %_4 = icmp ule i32 0, %self, !dbg !9775
  br i1 %_4, label %bb4, label %bb2, !dbg !9775

bb2:                                              ; preds = %bb4, %start
  %_2 = icmp ule i32 127, %self, !dbg !9776
  br i1 %_2, label %bb3, label %bb1, !dbg !9776

bb4:                                              ; preds = %start
  %_5 = icmp ule i32 %self, 31, !dbg !9775
  br i1 %_5, label %bb5, label %bb2, !dbg !9775

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1, !dbg !9777
  br label %bb6, !dbg !9777

bb1:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !9780
  br label %bb6, !dbg !9780

bb3:                                              ; preds = %bb2
  %_3 = icmp ule i32 %self, 159, !dbg !9776
  %0 = icmp ne i1 %_3, false, !dbg !9776
  %1 = zext i1 %0 to i8, !dbg !9776
  store i8 %1, ptr %_0, align 1, !dbg !9776
  br label %bb6, !dbg !9776

bb6:                                              ; preds = %bb5, %bb3, %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !9781
  %3 = trunc nuw i8 %2 to i1, !dbg !9781
  ret i1 %3, !dbg !9781
}

; core::char::methods::<impl char>::encode_utf8
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h10ba4a67745ca36cE"(i32 %self, ptr align 1 %dst.0, i32 %dst.1) unnamed_addr #0 !dbg !9782 {
start:
  %dst.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9786, !DIExpression(), !9788)
  store ptr %dst.0, ptr %dst.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %dst.dbg.spill, i32 4
  store i32 %dst.1, ptr %0, align 4
    #dbg_declare(ptr %dst.dbg.spill, !9787, !DIExpression(), !9789)
; call core::char::methods::encode_utf8_raw
  %1 = call { ptr, i32 } @_ZN4core4char7methods15encode_utf8_raw17h0b0fc32424613543E(i32 %self, ptr align 1 %dst.0, i32 %dst.1) #13, !dbg !9790
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9790
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9790
; call core::str::converts::from_utf8_unchecked_mut
  %2 = call { ptr, i32 } @_ZN4core3str8converts23from_utf8_unchecked_mut17he1265542c60e145eE(ptr align 1 %_3.0, i32 %_3.1) #13, !dbg !9791
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9791
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9791
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9792
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !9792
  ret { ptr, i32 } %4, !dbg !9792
}

; core::char::methods::<impl char>::escape_debug
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h200d0bc8cbcc76e8E"(ptr sret([16 x i8]) align 4 %_0, i32 %self) unnamed_addr #0 !dbg !9793 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [3 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9795, !DIExpression(), !9796)
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %1, ptr align 1 @anon.ee86b092133f727ec3e6ebb76d315021.0, i32 3, i1 false), !dbg !9797
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 1 %1, i32 3, i1 false), !dbg !9797
  %2 = load i24, ptr %0, align 4, !dbg !9797
; call core::char::methods::<impl char>::escape_debug_ext
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h45f84263a79231b1E"(ptr sret([16 x i8]) align 4 %_0, i32 %self, i24 %2) #13, !dbg !9798
  ret void, !dbg !9799
}

; core::char::methods::<impl char>::escape_debug_ext
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h45f84263a79231b1E"(ptr sret([16 x i8]) align 4 %_0, i32 %self, i24 %0) unnamed_addr #0 !dbg !9800 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %args = alloca [3 x i8], align 1
  store i24 %0, ptr %1, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %args, ptr align 4 %1, i32 3, i1 false)
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9809, !DIExpression(), !9811)
    #dbg_declare(ptr %args, !9810, !DIExpression(), !9812)
  switch i32 %self, label %bb2 [
    i32 0, label %bb9
    i32 9, label %bb8
    i32 13, label %bb7
    i32 10, label %bb6
    i32 92, label %bb5
    i32 34, label %bb4
    i32 39, label %bb3
  ], !dbg !9813

bb2:                                              ; preds = %bb3, %bb4, %start
  %2 = load i8, ptr %args, align 1, !dbg !9814
  %_12 = trunc nuw i8 %2 to i1, !dbg !9814
  br i1 %_12, label %bb12, label %bb1, !dbg !9814

bb9:                                              ; preds = %start
; call core::char::EscapeDebug::backslash
  call void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 48) #13, !dbg !9815
  br label %bb18, !dbg !9815

bb8:                                              ; preds = %start
; call core::char::EscapeDebug::backslash
  call void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 116) #13, !dbg !9816
  br label %bb18, !dbg !9816

bb7:                                              ; preds = %start
; call core::char::EscapeDebug::backslash
  call void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 114) #13, !dbg !9817
  br label %bb18, !dbg !9817

bb6:                                              ; preds = %start
; call core::char::EscapeDebug::backslash
  call void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 110) #13, !dbg !9818
  br label %bb18, !dbg !9818

bb5:                                              ; preds = %start
; call core::char::EscapeDebug::backslash
  call void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 92) #13, !dbg !9819
  br label %bb18, !dbg !9819

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %args, i32 2, !dbg !9820
  %4 = load i8, ptr %3, align 1, !dbg !9820
  %_8 = trunc nuw i8 %4 to i1, !dbg !9820
  br i1 %_8, label %bb10, label %bb2, !dbg !9820

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %args, i32 1, !dbg !9821
  %6 = load i8, ptr %5, align 1, !dbg !9821
  %_10 = trunc nuw i8 %6 to i1, !dbg !9821
  br i1 %_10, label %bb11, label %bb2, !dbg !9821

bb18:                                             ; preds = %bb14, %bb16, %bb17, %bb11, %bb10, %bb5, %bb6, %bb7, %bb8, %bb9
  ret void, !dbg !9822

bb10:                                             ; preds = %bb4
; call core::char::EscapeDebug::backslash
  call void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 34) #13, !dbg !9823
  br label %bb18, !dbg !9823

bb11:                                             ; preds = %bb3
; call core::char::EscapeDebug::backslash
  call void @_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E(ptr sret([16 x i8]) align 4 %_0, i8 39) #13, !dbg !9824
  br label %bb18, !dbg !9824

bb1:                                              ; preds = %bb12, %bb2
; call core::unicode::printable::is_printable
  %_14 = call zeroext i1 @_ZN4core7unicode9printable12is_printable17h376af9d97aa0b072E(i32 %self) #13, !dbg !9825
  br i1 %_14, label %bb16, label %bb17, !dbg !9825

bb12:                                             ; preds = %bb2
; call core::char::methods::<impl char>::is_grapheme_extended
  %_13 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$20is_grapheme_extended17hf1864da53287fdedE"(i32 %self) #13, !dbg !9826
  br i1 %_13, label %bb14, label %bb1, !dbg !9827

bb14:                                             ; preds = %bb12
; call core::char::EscapeDebug::unicode
  call void @_ZN4core4char11EscapeDebug7unicode17h8d8319ec9b1f33c6E(ptr sret([16 x i8]) align 4 %_0, i32 %self) #13, !dbg !9828
  br label %bb18, !dbg !9828

bb17:                                             ; preds = %bb1
; call core::char::EscapeDebug::unicode
  call void @_ZN4core4char11EscapeDebug7unicode17h8d8319ec9b1f33c6E(ptr sret([16 x i8]) align 4 %_0, i32 %self) #13, !dbg !9829
  br label %bb18, !dbg !9829

bb16:                                             ; preds = %bb1
; call core::char::EscapeDebug::printable
  call void @_ZN4core4char11EscapeDebug9printable17hfc2ef56f0f49fdf3E(ptr sret([16 x i8]) align 4 %_0, i32 %self) #13, !dbg !9830
  br label %bb18, !dbg !9830
}

; core::char::methods::<impl char>::is_grapheme_extended
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$20is_grapheme_extended17hf1864da53287fdedE"(i32 %0) unnamed_addr #0 !dbg !9831 {
start:
  %_0 = alloca [1 x i8], align 1
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !9833, !DIExpression(), !9834)
; call core::char::methods::<impl char>::is_ascii
  %_2 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h89a9b5d149c0c8f3E"(ptr align 4 %self) #13, !dbg !9835
  br i1 %_2, label %bb2, label %bb3, !dbg !9836

bb3:                                              ; preds = %start
  %1 = load i32, ptr %self, align 4, !dbg !9837
; call core::unicode::unicode_data::grapheme_extend::lookup
  %2 = call zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc73f5eb56dcfd654E(i32 %1) #13, !dbg !9837
  %3 = zext i1 %2 to i8, !dbg !9837
  store i8 %3, ptr %_0, align 1, !dbg !9837
  br label %bb4, !dbg !9837

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !9838
  br label %bb4, !dbg !9838

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i8, ptr %_0, align 1, !dbg !9839
  %5 = trunc nuw i8 %4 to i1, !dbg !9839
  ret i1 %5, !dbg !9839
}

; core::char::methods::<impl char>::is_ascii
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h89a9b5d149c0c8f3E"(ptr align 4 %self) unnamed_addr #0 !dbg !9840 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9844, !DIExpression(), !9845)
  %_3 = load i32, ptr %self, align 4, !dbg !9846
  %_0 = icmp ule i32 %_3, 127, !dbg !9846
  ret i1 %_0, !dbg !9847
}

; core::char::methods::<impl char>::is_digit
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17h29934e8c7c7783a9E"(i32 %self, i32 %radix) unnamed_addr #0 !dbg !9848 {
start:
  %radix.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9852, !DIExpression(), !9854)
  store i32 %radix, ptr %radix.dbg.spill, align 4
    #dbg_declare(ptr %radix.dbg.spill, !9853, !DIExpression(), !9855)
; call core::char::methods::<impl char>::to_digit
  %0 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %self, i32 %radix) #13, !dbg !9856
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !9856
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !9856
  store i32 %1, ptr %_4, align 4, !dbg !9856
  %3 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !9856
  store i32 %2, ptr %3, align 4, !dbg !9856
; call core::option::Option<T>::is_some
  %_0 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h9e67ffd77cd4400eE"(ptr align 4 %_4) #13, !dbg !9857
  ret i1 %_0, !dbg !9858
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hd0bbf0a5cacb66d4E"(i32 %self) unnamed_addr #0 !dbg !9859 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9863, !DIExpression(), !9864)
; call core::char::methods::len_utf8
  %_0 = call i32 @_ZN4core4char7methods8len_utf817h27ddcc7981a17719E(i32 %self) #13, !dbg !9865
  ret i32 %_0, !dbg !9866
}

; core::char::methods::<impl char>::to_digit
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E"(i32 %self, i32 %radix) unnamed_addr #0 !dbg !9867 {
start:
  %rhs.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %radix.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %value = alloca [4 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9871, !DIExpression(), !9875)
  store i32 %radix, ptr %radix.dbg.spill, align 4
    #dbg_declare(ptr %radix.dbg.spill, !9872, !DIExpression(), !9876)
    #dbg_declare(ptr %value, !9873, !DIExpression(), !9877)
  %_3 = icmp uge i32 %radix, 2, !dbg !9878
  br i1 %_3, label %bb1, label %bb3, !dbg !9878

bb3:                                              ; preds = %bb1, %start
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 @alloc_1922db85d76b51c46861d80e1af04722) #13, !dbg !9879
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_6, ptr align 4 @alloc_565c938b62997b5f0007ec4e3635adb3) #14, !dbg !9879
  unreachable, !dbg !9879

bb1:                                              ; preds = %start
  %_4 = icmp ule i32 %radix, 36, !dbg !9880
  br i1 %_4, label %bb2, label %bb3, !dbg !9880

bb2:                                              ; preds = %bb1
  %_9 = icmp ugt i32 %self, 57, !dbg !9881
  br i1 %_9, label %bb5, label %bb9, !dbg !9881

bb9:                                              ; preds = %bb5, %bb2
  store i32 %self, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !9697, !DIExpression(), !9882)
  store i32 48, ptr %rhs.dbg.spill.i1, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i1, !9702, !DIExpression(), !9884)
  %_0.i3 = sub i32 %self, 48, !dbg !9885
  store i32 %_0.i3, ptr %value, align 4, !dbg !9886
  br label %bb10, !dbg !9886

bb5:                                              ; preds = %bb2
  %_10 = icmp ugt i32 %radix, 10, !dbg !9887
  br i1 %_10, label %bb6, label %bb9, !dbg !9887

bb6:                                              ; preds = %bb5
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9697, !DIExpression(), !9888)
  store i32 65, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !9702, !DIExpression(), !9890)
  %_0.i = sub i32 %self, 65, !dbg !9891
  %_11 = and i32 %_0.i, -33, !dbg !9892
  %_15.0 = add i32 %_11, 10, !dbg !9892
  %_15.1 = icmp ult i32 %_15.0, %_11, !dbg !9892
  br i1 %_15.1, label %panic, label %bb8, !dbg !9892

bb10:                                             ; preds = %bb8, %bb9
  %_19 = load i32, ptr %value, align 4, !dbg !9893
  %_18 = icmp ult i32 %_19, %radix, !dbg !9893
  br i1 %_18, label %bb11, label %bb12, !dbg !9893

bb8:                                              ; preds = %bb6
  store i32 %_15.0, ptr %value, align 4, !dbg !9892
  br label %bb10, !dbg !9894

panic:                                            ; preds = %bb6
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_36a00076424f910f809172461effb54c) #14, !dbg !9892
  unreachable, !dbg !9892

bb12:                                             ; preds = %bb10
  store i32 0, ptr %_0, align 4, !dbg !9895
  br label %bb13, !dbg !9896

bb11:                                             ; preds = %bb10
  %_20 = load i32, ptr %value, align 4, !dbg !9897
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9898
  store i32 %_20, ptr %0, align 4, !dbg !9898
  store i32 1, ptr %_0, align 4, !dbg !9898
  br label %bb13, !dbg !9896

bb13:                                             ; preds = %bb11, %bb12
  %1 = load i32, ptr %_0, align 4, !dbg !9899
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9899
  %3 = load i32, ptr %2, align 4, !dbg !9899
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !9899
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !9899
  ret { i32, i32 } %5, !dbg !9899
}

; core::char::methods::encode_utf8_raw_unchecked
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4char7methods25encode_utf8_raw_unchecked17h6dde6f9db2752a53E(i32 %code, ptr %dst) unnamed_addr #0 !dbg !9900 {
start:
  %count.dbg.spill.i25 = alloca [4 x i8], align 4
  %self.dbg.spill.i26 = alloca [4 x i8], align 4
  %count.dbg.spill.i19 = alloca [4 x i8], align 4
  %self.dbg.spill.i20 = alloca [4 x i8], align 4
  %count.dbg.spill.i13 = alloca [4 x i8], align 4
  %self.dbg.spill.i14 = alloca [4 x i8], align 4
  %count.dbg.spill.i7 = alloca [4 x i8], align 4
  %self.dbg.spill.i8 = alloca [4 x i8], align 4
  %count.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %last4.dbg.spill = alloca [1 x i8], align 1
  %last3.dbg.spill = alloca [1 x i8], align 1
  %last2.dbg.spill = alloca [1 x i8], align 1
  %last1.dbg.spill = alloca [1 x i8], align 1
  %len.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  %code.dbg.spill = alloca [4 x i8], align 4
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !9904, !DIExpression(), !9916)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !9905, !DIExpression(), !9917)
; call core::char::methods::len_utf8
  %len = call i32 @_ZN4core4char7methods8len_utf817h27ddcc7981a17719E(i32 %code) #13, !dbg !9918
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !9918
    #dbg_declare(ptr %len.dbg.spill, !9906, !DIExpression(), !9919)
  %0 = icmp eq i32 %len, 1, !dbg !9920
  br i1 %0, label %bb2, label %bb3, !dbg !9920

bb2:                                              ; preds = %start
  %1 = trunc i32 %code to i8, !dbg !9921
  store i8 %1, ptr %dst, align 1, !dbg !9921
  br label %bb18, !dbg !9922

bb3:                                              ; preds = %start
  %_7 = lshr i32 %code, 0, !dbg !9924
  %_6 = and i32 %_7, 63, !dbg !9925
  %_5 = trunc i32 %_6 to i8, !dbg !9925
  %last1 = or i8 %_5, -128, !dbg !9925
  store i8 %last1, ptr %last1.dbg.spill, align 1, !dbg !9925
    #dbg_declare(ptr %last1.dbg.spill, !9908, !DIExpression(), !9926)
  %_13 = lshr i32 %code, 6, !dbg !9927
  %_12 = and i32 %_13, 63, !dbg !9928
  %_11 = trunc i32 %_12 to i8, !dbg !9928
  %last2 = or i8 %_11, -128, !dbg !9928
  store i8 %last2, ptr %last2.dbg.spill, align 1, !dbg !9928
    #dbg_declare(ptr %last2.dbg.spill, !9910, !DIExpression(), !9929)
  %_19 = lshr i32 %code, 12, !dbg !9930
  %_18 = and i32 %_19, 63, !dbg !9931
  %_17 = trunc i32 %_18 to i8, !dbg !9931
  %last3 = or i8 %_17, -128, !dbg !9931
  store i8 %last3, ptr %last3.dbg.spill, align 1, !dbg !9931
    #dbg_declare(ptr %last3.dbg.spill, !9912, !DIExpression(), !9932)
  %_25 = lshr i32 %code, 18, !dbg !9933
  %_24 = and i32 %_25, 63, !dbg !9934
  %_23 = trunc i32 %_24 to i8, !dbg !9934
  %last4 = or i8 %_23, -16, !dbg !9934
  store i8 %last4, ptr %last4.dbg.spill, align 1, !dbg !9934
    #dbg_declare(ptr %last4.dbg.spill, !9914, !DIExpression(), !9935)
  %2 = icmp eq i32 %len, 2, !dbg !9936
  br i1 %2, label %bb8, label %bb10, !dbg !9936

bb18:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit", %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit18", %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit30", %bb2
  ret void, !dbg !9937

bb8:                                              ; preds = %bb3
  %3 = or i8 %last2, -64, !dbg !9938
  store i8 %3, ptr %dst, align 1, !dbg !9938
  store ptr %dst, ptr %self.dbg.spill.i26, align 4
    #dbg_declare(ptr %self.dbg.spill.i26, !9939, !DIExpression(), !9945)
  store i32 1, ptr %count.dbg.spill.i25, align 4
    #dbg_declare(ptr %count.dbg.spill.i25, !9944, !DIExpression(), !9947)
; call core::ub_checks::check_language_ub
  %_3.i27 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !9948
  br i1 %_3.i27, label %bb2.i29, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit30", !dbg !9948

bb2.i29:                                          ; preds = %bb8
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %dst, i32 1, i32 1, ptr align 4 @alloc_459fdfec0fda0f1274d075bba2f2aeb4) #13, !dbg !9950
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit30", !dbg !9950

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit30": ; preds = %bb8, %bb2.i29
  %_0.i28 = getelementptr inbounds nuw i8, ptr %dst, i32 1, !dbg !9951
  store i8 %last1, ptr %_0.i28, align 1, !dbg !9952
  br label %bb18, !dbg !9953

bb10:                                             ; preds = %bb3
  %4 = icmp eq i32 %len, 3, !dbg !9955
  br i1 %4, label %bb11, label %bb12, !dbg !9955

bb11:                                             ; preds = %bb10
  %5 = or i8 %last3, -32, !dbg !9956
  store i8 %5, ptr %dst, align 1, !dbg !9956
  store ptr %dst, ptr %self.dbg.spill.i20, align 4
    #dbg_declare(ptr %self.dbg.spill.i20, !9939, !DIExpression(), !9957)
  store i32 1, ptr %count.dbg.spill.i19, align 4
    #dbg_declare(ptr %count.dbg.spill.i19, !9944, !DIExpression(), !9959)
; call core::ub_checks::check_language_ub
  %_3.i21 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !9960
  br i1 %_3.i21, label %bb2.i23, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit24", !dbg !9960

bb2.i23:                                          ; preds = %bb11
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %dst, i32 1, i32 1, ptr align 4 @alloc_4061f960675410a87b3264c715c9c2fe) #13, !dbg !9961
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit24", !dbg !9961

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit24": ; preds = %bb11, %bb2.i23
  %_0.i22 = getelementptr inbounds nuw i8, ptr %dst, i32 1, !dbg !9962
  store i8 %last2, ptr %_0.i22, align 1, !dbg !9963
  store ptr %dst, ptr %self.dbg.spill.i14, align 4
    #dbg_declare(ptr %self.dbg.spill.i14, !9939, !DIExpression(), !9964)
  store i32 2, ptr %count.dbg.spill.i13, align 4
    #dbg_declare(ptr %count.dbg.spill.i13, !9944, !DIExpression(), !9966)
; call core::ub_checks::check_language_ub
  %_3.i15 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !9967
  br i1 %_3.i15, label %bb2.i17, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit18", !dbg !9967

bb2.i17:                                          ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit24"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %dst, i32 2, i32 1, ptr align 4 @alloc_b74b59d83e83dbd98e30d4f14ff3afee) #13, !dbg !9968
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit18", !dbg !9968

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit18": ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit24", %bb2.i17
  %_0.i16 = getelementptr inbounds nuw i8, ptr %dst, i32 2, !dbg !9969
  store i8 %last1, ptr %_0.i16, align 1, !dbg !9970
  br label %bb18, !dbg !9953

bb12:                                             ; preds = %bb10
  store i8 %last4, ptr %dst, align 1, !dbg !9971
  store ptr %dst, ptr %self.dbg.spill.i8, align 4
    #dbg_declare(ptr %self.dbg.spill.i8, !9939, !DIExpression(), !9972)
  store i32 1, ptr %count.dbg.spill.i7, align 4
    #dbg_declare(ptr %count.dbg.spill.i7, !9944, !DIExpression(), !9974)
; call core::ub_checks::check_language_ub
  %_3.i9 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !9975
  br i1 %_3.i9, label %bb2.i11, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit12", !dbg !9975

bb2.i11:                                          ; preds = %bb12
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %dst, i32 1, i32 1, ptr align 4 @alloc_14c21c405a4a19bce7c56d4822ea1d1c) #13, !dbg !9976
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit12", !dbg !9976

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit12": ; preds = %bb12, %bb2.i11
  %_0.i10 = getelementptr inbounds nuw i8, ptr %dst, i32 1, !dbg !9977
  store i8 %last3, ptr %_0.i10, align 1, !dbg !9978
  store ptr %dst, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !9939, !DIExpression(), !9979)
  store i32 2, ptr %count.dbg.spill.i1, align 4
    #dbg_declare(ptr %count.dbg.spill.i1, !9944, !DIExpression(), !9981)
; call core::ub_checks::check_language_ub
  %_3.i3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !9982
  br i1 %_3.i3, label %bb2.i5, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit6", !dbg !9982

bb2.i5:                                           ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit12"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %dst, i32 2, i32 1, ptr align 4 @alloc_5c062dc56f3b8808e40e41b53dd7d023) #13, !dbg !9983
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit6", !dbg !9983

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit6": ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit12", %bb2.i5
  %_0.i4 = getelementptr inbounds nuw i8, ptr %dst, i32 2, !dbg !9984
  store i8 %last2, ptr %_0.i4, align 1, !dbg !9985
  store ptr %dst, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9939, !DIExpression(), !9986)
  store i32 3, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !9944, !DIExpression(), !9988)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !9989
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit", !dbg !9989

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit6"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %dst, i32 3, i32 1, ptr align 4 @alloc_acad745997fce1d6a376b7fe430f74c8) #13, !dbg !9990
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit", !dbg !9990

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit": ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE.exit6", %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %dst, i32 3, !dbg !9991
  store i8 %last1, ptr %_0.i, align 1, !dbg !9992
  br label %bb18, !dbg !9937
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char7methods8len_utf817h27ddcc7981a17719E(i32 %code) unnamed_addr #0 !dbg !9993 {
start:
  %code.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !9997, !DIExpression(), !9998)
  %_2 = icmp ult i32 %code, 128, !dbg !9999
  br i1 %_2, label %bb6, label %bb1, !dbg !9999

bb1:                                              ; preds = %start
  %_3 = icmp ult i32 %code, 2048, !dbg !10000
  br i1 %_3, label %bb5, label %bb2, !dbg !10000

bb6:                                              ; preds = %start
  store i32 1, ptr %_0, align 4, !dbg !10001
  br label %bb7, !dbg !10001

bb2:                                              ; preds = %bb1
  %_4 = icmp ult i32 %code, 65536, !dbg !10002
  br i1 %_4, label %bb4, label %bb3, !dbg !10002

bb5:                                              ; preds = %bb1
  store i32 2, ptr %_0, align 4, !dbg !10003
  br label %bb7, !dbg !10003

bb3:                                              ; preds = %bb2
  store i32 4, ptr %_0, align 4, !dbg !10004
  br label %bb7, !dbg !10004

bb4:                                              ; preds = %bb2
  store i32 3, ptr %_0, align 4, !dbg !10005
  br label %bb7, !dbg !10005

bb7:                                              ; preds = %bb6, %bb5, %bb4, %bb3
  %0 = load i32, ptr %_0, align 4, !dbg !10006
  ret i32 %0, !dbg !10006
}

; core::char::from_u32
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char8from_u3217h3ca732bdf05cd746E(i32 %i) unnamed_addr #0 !dbg !10007 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !10009, !DIExpression(), !10010)
; call core::char::convert::from_u32
  %_0 = call i32 @_ZN4core4char7convert8from_u3217h5f7a294437a64866E(i32 %i) #13, !dbg !10011
  ret i32 %_0, !dbg !10012
}

; core::hint::unreachable_unchecked
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core4hint21unreachable_unchecked17h7e1a5f992e546fadE(ptr align 4 %0) unnamed_addr #4 !dbg !10013 {
start:
; call core::ub_checks::check_language_ub
  %_1 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !10018
  br i1 %_1, label %bb2, label %bb3, !dbg !10018

bb3:                                              ; preds = %bb2, %start
  unreachable, !dbg !10020

bb2:                                              ; preds = %start
; call core::hint::unreachable_unchecked::precondition_check
  call void @_ZN4core4hint21unreachable_unchecked18precondition_check17h6e71f3f52ade0562E(ptr align 4 %0) #13, !dbg !10021
  br label %bb3, !dbg !10021
}

; core::hint::unreachable_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4hint21unreachable_unchecked18precondition_check17h6e71f3f52ade0562E(ptr align 4 %0) unnamed_addr #0 !dbg !10022 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  %_2 = alloca [24 x i8], align 4
  store ptr @alloc_75fb06c2453febd814e73f5f2e72ae38, ptr %msg.dbg.spill, align 4, !dbg !10027
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !10027
  store i32 199, ptr %1, align 4, !dbg !10027
    #dbg_declare(ptr %msg.dbg.spill, !10025, !DIExpression(), !10027)
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_4, i32 0, !dbg !10028
  store ptr @alloc_75fb06c2453febd814e73f5f2e72ae38, ptr %2, align 4, !dbg !10028
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !10028
  store i32 199, ptr %3, align 4, !dbg !10028
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 %_4) #13, !dbg !10029
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17ha90b816b7292deffE(ptr align 4 %_2, i1 zeroext false, ptr align 4 %0) #14, !dbg !10030
  unreachable, !dbg !10030
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5870ab742149e2dbE"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !10031 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10037, !DIExpression(), !10040)
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
  call void @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h36cb11453b8c02b3E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) #13, !dbg !10041
  ret void, !dbg !10042
}

; core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17he31cd2a88487d966E(ptr align 4 %self, i32 %init) unnamed_addr #0 !dbg !10043 {
start:
  %residual.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %init.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_5 = alloca [4 x i8], align 4
  %accum = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10055, !DIExpression(), !10069)
  store i32 %init, ptr %init.dbg.spill, align 4
    #dbg_declare(ptr %init.dbg.spill, !10056, !DIExpression(), !10070)
    #dbg_declare(ptr %f, !10057, !DIExpression(), !10071)
    #dbg_declare(ptr %accum, !10058, !DIExpression(), !10072)
  store i32 %init, ptr %accum, align 4, !dbg !10073
  br label %bb1, !dbg !10074

bb1:                                              ; preds = %bb7, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %0 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hffa724c77accbe4dE"(ptr align 4 %self) #13, !dbg !10075
  store ptr %0, ptr %_5, align 4, !dbg !10075
  %1 = load ptr, ptr %_5, align 4, !dbg !10076
  %2 = ptrtoint ptr %1 to i32, !dbg !10076
  %3 = icmp eq i32 %2, 0, !dbg !10076
  %_6 = select i1 %3, i32 0, i32 1, !dbg !10076
  %4 = trunc nuw i32 %_6 to i1, !dbg !10077
  br i1 %4, label %bb3, label %bb10, !dbg !10077

bb3:                                              ; preds = %bb1
  %x = load ptr, ptr %_5, align 4, !dbg !10078
  store ptr %x, ptr %x.dbg.spill, align 4, !dbg !10078
    #dbg_declare(ptr %x.dbg.spill, !10060, !DIExpression(), !10078)
  %_12 = load i32, ptr %accum, align 4, !dbg !10079
; call core::iter::adapters::copied::copy_try_fold::{{closure}}
  %5 = call { i32, i32 } @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h325b15c8aba8e57eE"(ptr align 1 %f, i32 %_12, ptr align 1 %x) #13, !dbg !10080
  %_9.0 = extractvalue { i32, i32 } %5, 0, !dbg !10080
  %_9.1 = extractvalue { i32, i32 } %5, 1, !dbg !10080
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %6 = call { i32, i32 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf6e34bc1042a4210E"(i32 %_9.0, i32 %_9.1) #13, !dbg !10080
  %7 = extractvalue { i32, i32 } %6, 0, !dbg !10080
  %8 = extractvalue { i32, i32 } %6, 1, !dbg !10080
  store i32 %7, ptr %_8, align 4, !dbg !10080
  %9 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !10080
  store i32 %8, ptr %9, align 4, !dbg !10080
  %_13 = load i32, ptr %_8, align 4, !dbg !10080
  %10 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !10080
  %11 = load i32, ptr %10, align 4, !dbg !10080
  %12 = trunc nuw i32 %_13 to i1, !dbg !10080
  br i1 %12, label %bb8, label %bb7, !dbg !10080

bb10:                                             ; preds = %bb1
  %_16 = load i32, ptr %accum, align 4, !dbg !10081
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %13 = call { i32, i32 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h977b8170fcb89692E"(i32 %_16) #13, !dbg !10081
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !10081
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !10081
  store i32 %14, ptr %_0, align 4, !dbg !10081
  %16 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10081
  store i32 %15, ptr %16, align 4, !dbg !10081
  br label %bb12, !dbg !10082

bb8:                                              ; preds = %bb3
  %17 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !10083
  %residual = load i32, ptr %17, align 4, !dbg !10083
  store i32 %residual, ptr %residual.dbg.spill, align 4, !dbg !10083
    #dbg_declare(ptr %residual.dbg.spill, !10062, !DIExpression(), !10084)
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %18 = call { i32, i32 } @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17had059c36733d49c0E"(i32 %residual) #13, !dbg !10085
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !10085
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !10085
  store i32 %19, ptr %_0, align 4, !dbg !10085
  %21 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10085
  store i32 %20, ptr %21, align 4, !dbg !10085
  br label %bb12, !dbg !10082

bb7:                                              ; preds = %bb3
  %22 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !10080
  %val = load i32, ptr %22, align 4, !dbg !10080
  store i32 %val, ptr %val.dbg.spill, align 4, !dbg !10080
    #dbg_declare(ptr %val.dbg.spill, !10064, !DIExpression(), !10086)
  store i32 %val, ptr %accum, align 4, !dbg !10087
  br label %bb1, !dbg !10074

bb12:                                             ; preds = %bb10, %bb8
  %23 = load i32, ptr %_0, align 4, !dbg !10088
  %24 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10088
  %25 = load i32, ptr %24, align 4, !dbg !10088
  %26 = insertvalue { i32, i32 } poison, i32 %23, 0, !dbg !10088
  %27 = insertvalue { i32, i32 } %26, i32 %25, 1, !dbg !10088
  ret { i32, i32 } %27, !dbg !10088

bb6:                                              ; No predecessors!
  unreachable, !dbg !10080
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h4a614af27c7c3388E(ptr align 4 %self) unnamed_addr #0 !dbg !10089 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10095, !DIExpression(), !10100)
    #dbg_declare(ptr %f.dbg.spill, !10096, !DIExpression(), !10101)
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h39d83deea9b7731fE() #13, !dbg !10102
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hb4003d45cef785d8E(ptr align 4 %self) #13, !dbg !10103
  %1 = zext i1 %0 to i8, !dbg !10103
  store i8 %1, ptr %_4, align 1, !dbg !10103
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %_4, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #13, !dbg !10104
  ret i1 %_0, !dbg !10105
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h717127c3919a9b93E(ptr align 4 %self) unnamed_addr #0 !dbg !10106 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10110, !DIExpression(), !10114)
    #dbg_declare(ptr %f.dbg.spill, !10111, !DIExpression(), !10115)
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h9fae99f45e7567d1E() #13, !dbg !10116
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h7ef3edd118265511E(ptr align 4 %self) #13, !dbg !10117
  %1 = zext i1 %0 to i8, !dbg !10117
  store i8 %1, ptr %_4, align 1, !dbg !10117
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %_4, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #13, !dbg !10118
  ret i1 %_0, !dbg !10119
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h85cebea358c3df93E(ptr align 4 %self) unnamed_addr #0 !dbg !10120 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10124, !DIExpression(), !10128)
    #dbg_declare(ptr %f.dbg.spill, !10125, !DIExpression(), !10129)
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h8a10046d43946b14E() #13, !dbg !10130
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h68278e83521ebc33E(ptr align 4 %self) #13, !dbg !10131
  %1 = zext i1 %0 to i8, !dbg !10131
  store i8 %1, ptr %_4, align 1, !dbg !10131
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %_4, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #13, !dbg !10132
  ret i1 %_0, !dbg !10133
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17hab7dccb05ed8594cE(ptr align 4 %self) unnamed_addr #0 !dbg !10134 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10139, !DIExpression(), !10143)
    #dbg_declare(ptr %f.dbg.spill, !10140, !DIExpression(), !10144)
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h4778218eff8c631dE() #13, !dbg !10145
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h8a0da7e4e6198897E(ptr align 4 %self) #13, !dbg !10146
  %1 = zext i1 %0 to i8, !dbg !10146
  store i8 %1, ptr %_4, align 1, !dbg !10146
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %_4, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #13, !dbg !10147
  ret i1 %_0, !dbg !10148
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3all5check17h39d83deea9b7731fE() unnamed_addr #0 !dbg !10149 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10154, !DIExpression(), !10157)
  ret void, !dbg !10158
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3all5check17h4778218eff8c631dE() unnamed_addr #0 !dbg !10159 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10163, !DIExpression(), !10166)
  ret void, !dbg !10167
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3all5check17h8a10046d43946b14E() unnamed_addr #0 !dbg !10168 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10172, !DIExpression(), !10175)
  ret void, !dbg !10176
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3all5check17h9fae99f45e7567d1E() unnamed_addr #0 !dbg !10177 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10181, !DIExpression(), !10184)
  ret void, !dbg !10185
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h07c48841d862c9d7E"(ptr align 1 %_1, i32 %x) unnamed_addr #0 !dbg !10186 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10196, !DIExpression(DW_OP_deref), !10198)
    #dbg_declare(ptr %_2.dbg.spill, !10197, !DIExpression(), !10199)
  store i32 %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !10195, !DIExpression(), !10200)
; call <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
  %_4 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h19171d52f3e553bbE"(ptr align 1 %_1, i32 %x) #13, !dbg !10201
  br i1 %_4, label %bb2, label %bb3, !dbg !10201

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !10202
  br label %bb4, !dbg !10203

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10204
  br label %bb4, !dbg !10203

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1, !dbg !10205
  %1 = trunc nuw i8 %0 to i1, !dbg !10205
  ret i1 %1, !dbg !10205
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h9a92d7e2bf6b4947E"(ptr align 1 %_1, i32 %x) unnamed_addr #0 !dbg !10206 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10215, !DIExpression(DW_OP_deref), !10217)
    #dbg_declare(ptr %_2.dbg.spill, !10216, !DIExpression(), !10218)
  store i32 %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !10214, !DIExpression(), !10219)
; call rustc_demangle::is_symbol_like::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle14is_symbol_like28_$u7b$$u7b$closure$u7d$$u7d$17h4969f401d43ad9b4E"(ptr align 1 %_1, i32 %x) #13, !dbg !10220
  br i1 %_4, label %bb2, label %bb3, !dbg !10220

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !10221
  br label %bb4, !dbg !10222

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10223
  br label %bb4, !dbg !10222

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1, !dbg !10224
  %1 = trunc nuw i8 %0 to i1, !dbg !10224
  ret i1 %1, !dbg !10224
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hc9f86becd3907194E"(ptr align 1 %_1, i32 %x) unnamed_addr #0 !dbg !10225 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10234, !DIExpression(DW_OP_deref), !10236)
    #dbg_declare(ptr %_2.dbg.spill, !10235, !DIExpression(), !10237)
  store i32 %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !10233, !DIExpression(), !10238)
; call rustc_demangle::legacy::is_rust_hash::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle6legacy12is_rust_hash28_$u7b$$u7b$closure$u7d$$u7d$17he7d4c979a7d9f479E"(ptr align 1 %_1, i32 %x) #13, !dbg !10239
  br i1 %_4, label %bb2, label %bb3, !dbg !10239

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !10240
  br label %bb4, !dbg !10241

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10242
  br label %bb4, !dbg !10241

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1, !dbg !10243
  %1 = trunc nuw i8 %0 to i1, !dbg !10243
  ret i1 %1, !dbg !10243
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hfaa840069c622cadE"(ptr align 1 %_1, i32 %x) unnamed_addr #0 !dbg !10244 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10253, !DIExpression(DW_OP_deref), !10255)
    #dbg_declare(ptr %_2.dbg.spill, !10254, !DIExpression(), !10256)
  store i32 %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !10252, !DIExpression(), !10257)
; call rustc_demangle::demangle::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h8f3f56dfdaf25207E"(ptr align 1 %_1, i32 %x) #13, !dbg !10258
  br i1 %_4, label %bb2, label %bb3, !dbg !10258

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !10259
  br label %bb4, !dbg !10260

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10261
  br label %bb4, !dbg !10260

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1, !dbg !10262
  %1 = trunc nuw i8 %0 to i1, !dbg !10262
  ret i1 %1, !dbg !10262
}

; core::iter::traits::iterator::Iterator::any
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h1076ee9e92f1b00dE(ptr align 4 %self) unnamed_addr #0 !dbg !10263 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10267, !DIExpression(), !10272)
    #dbg_declare(ptr %f.dbg.spill, !10268, !DIExpression(), !10273)
; call core::iter::traits::iterator::Iterator::any::check
  call void @_ZN4core4iter6traits8iterator8Iterator3any5check17h728ac07fbf604e96E() #13, !dbg !10274
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6252500cf65d6d8dE(ptr align 4 %self) #13, !dbg !10275
  %1 = zext i1 %0 to i8, !dbg !10275
  store i8 %1, ptr %_4, align 1, !dbg !10275
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %_4, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4) #13, !dbg !10276
  ret i1 %_0, !dbg !10277
}

; core::iter::traits::iterator::Iterator::any
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h88210251c2bb0be6E(ptr align 4 %self) unnamed_addr #0 !dbg !10278 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10282, !DIExpression(), !10287)
    #dbg_declare(ptr %f.dbg.spill, !10283, !DIExpression(), !10288)
; call core::iter::traits::iterator::Iterator::any::check
  call void @_ZN4core4iter6traits8iterator8Iterator3any5check17hb252282aea8f2929E() #13, !dbg !10289
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
  %0 = call zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17he689a934971b3877E"(ptr align 4 %self) #13, !dbg !10290
  %1 = zext i1 %0 to i8, !dbg !10290
  store i8 %1, ptr %_4, align 1, !dbg !10290
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %_4, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4) #13, !dbg !10291
  ret i1 %_0, !dbg !10292
}

; core::iter::traits::iterator::Iterator::any
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17hfbbeee719173d5bfE(ptr align 4 %self) unnamed_addr #0 !dbg !10293 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10297, !DIExpression(), !10301)
    #dbg_declare(ptr %f.dbg.spill, !10298, !DIExpression(), !10302)
; call core::iter::traits::iterator::Iterator::any::check
  call void @_ZN4core4iter6traits8iterator8Iterator3any5check17haa646e6b493d1385E() #13, !dbg !10303
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::try_fold
  %0 = call zeroext i1 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hea885580af465df8E"(ptr align 4 %self) #13, !dbg !10304
  %1 = zext i1 %0 to i8, !dbg !10304
  store i8 %1, ptr %_4, align 1, !dbg !10304
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %_4, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4) #13, !dbg !10305
  ret i1 %_0, !dbg !10306
}

; core::iter::traits::iterator::Iterator::any::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3any5check17h728ac07fbf604e96E() unnamed_addr #0 !dbg !10307 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10311, !DIExpression(), !10314)
  ret void, !dbg !10315
}

; core::iter::traits::iterator::Iterator::any::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3any5check17haa646e6b493d1385E() unnamed_addr #0 !dbg !10316 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10320, !DIExpression(), !10323)
  ret void, !dbg !10324
}

; core::iter::traits::iterator::Iterator::any::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3any5check17hb252282aea8f2929E() unnamed_addr #0 !dbg !10325 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10329, !DIExpression(), !10332)
  ret void, !dbg !10333
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h056c7ef3ed86ccd7E"(ptr align 1 %_1, i8 %x) unnamed_addr #0 !dbg !10334 {
start:
  %x.dbg.spill = alloca [1 x i8], align 1
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10340, !DIExpression(DW_OP_deref), !10342)
    #dbg_declare(ptr %_2.dbg.spill, !10341, !DIExpression(), !10343)
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !10339, !DIExpression(), !10344)
; call rustc_demangle::legacy::demangle::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17ha87e1852dc5ba981E"(ptr align 1 %_1, i8 %x) #13, !dbg !10345
  br i1 %_4, label %bb2, label %bb3, !dbg !10345

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10346
  br label %bb4, !dbg !10347

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !10348
  br label %bb4, !dbg !10347

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1, !dbg !10349
  %1 = trunc nuw i8 %0 to i1, !dbg !10349
  ret i1 %1, !dbg !10349
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h78bc04c9e16b1df6E"(ptr align 1 %_1, i8 %x) unnamed_addr #0 !dbg !10350 {
start:
  %x.dbg.spill = alloca [1 x i8], align 1
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10356, !DIExpression(DW_OP_deref), !10358)
    #dbg_declare(ptr %_2.dbg.spill, !10357, !DIExpression(), !10359)
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !10355, !DIExpression(), !10360)
; call rustc_demangle::v0::demangle::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17hc0a6af2925c9d046E"(ptr align 1 %_1, i8 %x) #13, !dbg !10361
  br i1 %_4, label %bb2, label %bb3, !dbg !10361

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10362
  br label %bb4, !dbg !10363

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !10364
  br label %bb4, !dbg !10363

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1, !dbg !10365
  %1 = trunc nuw i8 %0 to i1, !dbg !10365
  ret i1 %1, !dbg !10365
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17hbd18c2a6d47b80d9E"(ptr align 1 %_1, i32 %x) unnamed_addr #0 !dbg !10366 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10375, !DIExpression(DW_OP_deref), !10377)
    #dbg_declare(ptr %_2.dbg.spill, !10376, !DIExpression(), !10378)
  store i32 %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !10374, !DIExpression(), !10379)
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}
  %_4 = call zeroext i1 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17hc40b4541ade2d1feE"(ptr align 1 %_1, i32 %x) #13, !dbg !10380
  br i1 %_4, label %bb2, label %bb3, !dbg !10380

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10381
  br label %bb4, !dbg !10382

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !10383
  br label %bb4, !dbg !10382

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i8, ptr %_0, align 1, !dbg !10384
  %1 = trunc nuw i8 %0 to i1, !dbg !10384
  ret i1 %1, !dbg !10384
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h59a589504a54795aE(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !10385 {
start:
    #dbg_declare(ptr %self, !10389, !DIExpression(), !10393)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10390, !DIExpression(), !10394)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3d5717eeeadcf1e8E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) #13, !dbg !10395
  ret void, !dbg !10396
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17hb630c309db724195E(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !10397 {
start:
    #dbg_declare(ptr %self, !10401, !DIExpression(), !10405)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10402, !DIExpression(), !10406)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17ha79bd0e004aa18cdE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) #13, !dbg !10407
  ret void, !dbg !10408
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17hdfcd3cc677effb67E(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !10409 {
start:
    #dbg_declare(ptr %self, !10413, !DIExpression(), !10416)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10414, !DIExpression(), !10417)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he6506df65433e91cE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) #13, !dbg !10418
  ret void, !dbg !10419
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6copied17hd680b744117ee0feE(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !10420 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10424, !DIExpression(), !10426)
; call core::iter::adapters::copied::Copied<I>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h76392b9b78e37348E"(ptr %self.0, ptr %self.1) #13, !dbg !10427
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !10427
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !10427
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !10428
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !10428
  ret { ptr, ptr } %3, !dbg !10428
}

; core::iter::traits::iterator::Iterator::peekable
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8peekable17he15bde6a450c3e1cE(ptr sret([12 x i8]) align 4 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !10429 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10433, !DIExpression(), !10436)
; call core::iter::adapters::peekable::Peekable<I>::new
  call void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h4fd677906fac2a31E"(ptr sret([12 x i8]) align 4 %_0, ptr %self.0, ptr %self.1) #13, !dbg !10437
  ret void, !dbg !10438
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6252500cf65d6d8dE(ptr align 4 %self) unnamed_addr #0 !dbg !10439 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10443, !DIExpression(), !10456)
    #dbg_declare(ptr %init.dbg.spill, !10444, !DIExpression(), !10457)
    #dbg_declare(ptr %f, !10445, !DIExpression(), !10458)
    #dbg_declare(ptr %accum.dbg.spill, !10446, !DIExpression(), !10459)
    #dbg_declare(ptr %residual.dbg.spill, !10450, !DIExpression(), !10460)
    #dbg_declare(ptr %val.dbg.spill, !10452, !DIExpression(), !10461)
  br label %bb1, !dbg !10462

bb1:                                              ; preds = %bb7, %start
; call <core::iter::sources::from_fn::FromFn<F> as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h466025eecc58b398E"(ptr align 4 %self) #13, !dbg !10463
  store i32 %0, ptr %_5, align 4, !dbg !10463
  %1 = load i32, ptr %_5, align 4, !dbg !10464
  %2 = icmp eq i32 %1, 1114113, !dbg !10464
  %_6 = select i1 %2, i32 0, i32 1, !dbg !10464
  %3 = trunc nuw i32 %_6 to i1, !dbg !10465
  br i1 %3, label %bb3, label %bb10, !dbg !10465

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !10466
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !10466
    #dbg_declare(ptr %x.dbg.spill, !10448, !DIExpression(), !10466)
; call core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17hbd18c2a6d47b80d9E"(ptr align 1 %f, i32 %x) #13, !dbg !10467
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %4 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %_9) #13, !dbg !10467
  %5 = zext i1 %4 to i8, !dbg !10467
  store i8 %5, ptr %_8, align 1, !dbg !10467
  %6 = load i8, ptr %_8, align 1, !dbg !10467
  %7 = trunc nuw i8 %6 to i1, !dbg !10467
  %_13 = zext i1 %7 to i32, !dbg !10467
  %8 = trunc nuw i32 %_13 to i1, !dbg !10467
  br i1 %8, label %bb8, label %bb7, !dbg !10467

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %9 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() #13, !dbg !10468
  %10 = zext i1 %9 to i8, !dbg !10468
  store i8 %10, ptr %_0, align 1, !dbg !10468
  br label %bb12, !dbg !10469

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %11 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() #13, !dbg !10470
  %12 = zext i1 %11 to i8, !dbg !10470
  store i8 %12, ptr %_0, align 1, !dbg !10470
  br label %bb12, !dbg !10469

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !10462

bb12:                                             ; preds = %bb10, %bb8
  %13 = load i8, ptr %_0, align 1, !dbg !10471
  %14 = trunc nuw i8 %13 to i1, !dbg !10471
  ret i1 %14, !dbg !10471

bb6:                                              ; No predecessors!
  unreachable, !dbg !10467
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h6352b8cd1fa40f98E(ptr align 4 %self) unnamed_addr #0 !dbg !10472 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10479, !DIExpression(), !10492)
    #dbg_declare(ptr %init.dbg.spill, !10480, !DIExpression(), !10493)
    #dbg_declare(ptr %f, !10481, !DIExpression(), !10494)
    #dbg_declare(ptr %accum.dbg.spill, !10482, !DIExpression(), !10495)
    #dbg_declare(ptr %residual.dbg.spill, !10486, !DIExpression(), !10496)
    #dbg_declare(ptr %val.dbg.spill, !10488, !DIExpression(), !10497)
  br label %bb1, !dbg !10498

bb1:                                              ; preds = %bb7, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %self) #13, !dbg !10499
  store ptr %0, ptr %_5, align 4, !dbg !10499
  %1 = load ptr, ptr %_5, align 4, !dbg !10500
  %2 = ptrtoint ptr %1 to i32, !dbg !10500
  %3 = icmp eq i32 %2, 0, !dbg !10500
  %_6 = select i1 %3, i32 0, i32 1, !dbg !10500
  %4 = trunc nuw i32 %_6 to i1, !dbg !10501
  br i1 %4, label %bb3, label %bb10, !dbg !10501

bb3:                                              ; preds = %bb1
  %x = load ptr, ptr %_5, align 4, !dbg !10502
  store ptr %x, ptr %x.dbg.spill, align 4, !dbg !10502
    #dbg_declare(ptr %x.dbg.spill, !10484, !DIExpression(), !10502)
; call core::iter::adapters::copied::copy_try_fold::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17heba4d6bbe4472fd9E"(ptr align 1 %f, ptr align 1 %x) #13, !dbg !10503
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %5 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %_9) #13, !dbg !10503
  %6 = zext i1 %5 to i8, !dbg !10503
  store i8 %6, ptr %_8, align 1, !dbg !10503
  %7 = load i8, ptr %_8, align 1, !dbg !10503
  %8 = trunc nuw i8 %7 to i1, !dbg !10503
  %_13 = zext i1 %8 to i32, !dbg !10503
  %9 = trunc nuw i32 %_13 to i1, !dbg !10503
  br i1 %9, label %bb8, label %bb7, !dbg !10503

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %10 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() #13, !dbg !10504
  %11 = zext i1 %10 to i8, !dbg !10504
  store i8 %11, ptr %_0, align 1, !dbg !10504
  br label %bb12, !dbg !10505

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %12 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() #13, !dbg !10506
  %13 = zext i1 %12 to i8, !dbg !10506
  store i8 %13, ptr %_0, align 1, !dbg !10506
  br label %bb12, !dbg !10505

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !10498

bb12:                                             ; preds = %bb10, %bb8
  %14 = load i8, ptr %_0, align 1, !dbg !10507
  %15 = trunc nuw i8 %14 to i1, !dbg !10507
  ret i1 %15, !dbg !10507

bb6:                                              ; No predecessors!
  unreachable, !dbg !10503
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h68278e83521ebc33E(ptr align 4 %self) unnamed_addr #0 !dbg !10508 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10512, !DIExpression(), !10525)
    #dbg_declare(ptr %init.dbg.spill, !10513, !DIExpression(), !10526)
    #dbg_declare(ptr %f, !10514, !DIExpression(), !10527)
    #dbg_declare(ptr %accum.dbg.spill, !10515, !DIExpression(), !10528)
    #dbg_declare(ptr %residual.dbg.spill, !10519, !DIExpression(), !10529)
    #dbg_declare(ptr %val.dbg.spill, !10521, !DIExpression(), !10530)
  br label %bb1, !dbg !10531

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %self) #13, !dbg !10532
  store i32 %0, ptr %_5, align 4, !dbg !10532
  %1 = load i32, ptr %_5, align 4, !dbg !10533
  %2 = icmp eq i32 %1, 1114112, !dbg !10533
  %_6 = select i1 %2, i32 0, i32 1, !dbg !10533
  %3 = trunc nuw i32 %_6 to i1, !dbg !10534
  br i1 %3, label %bb3, label %bb10, !dbg !10534

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !10535
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !10535
    #dbg_declare(ptr %x.dbg.spill, !10517, !DIExpression(), !10535)
; call core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hfaa840069c622cadE"(ptr align 1 %f, i32 %x) #13, !dbg !10536
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %4 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %_9) #13, !dbg !10536
  %5 = zext i1 %4 to i8, !dbg !10536
  store i8 %5, ptr %_8, align 1, !dbg !10536
  %6 = load i8, ptr %_8, align 1, !dbg !10536
  %7 = trunc nuw i8 %6 to i1, !dbg !10536
  %_13 = zext i1 %7 to i32, !dbg !10536
  %8 = trunc nuw i32 %_13 to i1, !dbg !10536
  br i1 %8, label %bb8, label %bb7, !dbg !10536

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %9 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() #13, !dbg !10537
  %10 = zext i1 %9 to i8, !dbg !10537
  store i8 %10, ptr %_0, align 1, !dbg !10537
  br label %bb12, !dbg !10538

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %11 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() #13, !dbg !10539
  %12 = zext i1 %11 to i8, !dbg !10539
  store i8 %12, ptr %_0, align 1, !dbg !10539
  br label %bb12, !dbg !10538

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !10531

bb12:                                             ; preds = %bb10, %bb8
  %13 = load i8, ptr %_0, align 1, !dbg !10540
  %14 = trunc nuw i8 %13 to i1, !dbg !10540
  ret i1 %14, !dbg !10540

bb6:                                              ; No predecessors!
  unreachable, !dbg !10536
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h7ef3edd118265511E(ptr align 4 %self) unnamed_addr #0 !dbg !10541 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10545, !DIExpression(), !10558)
    #dbg_declare(ptr %init.dbg.spill, !10546, !DIExpression(), !10559)
    #dbg_declare(ptr %f, !10547, !DIExpression(), !10560)
    #dbg_declare(ptr %accum.dbg.spill, !10548, !DIExpression(), !10561)
    #dbg_declare(ptr %residual.dbg.spill, !10552, !DIExpression(), !10562)
    #dbg_declare(ptr %val.dbg.spill, !10554, !DIExpression(), !10563)
  br label %bb1, !dbg !10564

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %self) #13, !dbg !10565
  store i32 %0, ptr %_5, align 4, !dbg !10565
  %1 = load i32, ptr %_5, align 4, !dbg !10566
  %2 = icmp eq i32 %1, 1114112, !dbg !10566
  %_6 = select i1 %2, i32 0, i32 1, !dbg !10566
  %3 = trunc nuw i32 %_6 to i1, !dbg !10567
  br i1 %3, label %bb3, label %bb10, !dbg !10567

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !10568
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !10568
    #dbg_declare(ptr %x.dbg.spill, !10550, !DIExpression(), !10568)
; call core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h9a92d7e2bf6b4947E"(ptr align 1 %f, i32 %x) #13, !dbg !10569
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %4 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %_9) #13, !dbg !10569
  %5 = zext i1 %4 to i8, !dbg !10569
  store i8 %5, ptr %_8, align 1, !dbg !10569
  %6 = load i8, ptr %_8, align 1, !dbg !10569
  %7 = trunc nuw i8 %6 to i1, !dbg !10569
  %_13 = zext i1 %7 to i32, !dbg !10569
  %8 = trunc nuw i32 %_13 to i1, !dbg !10569
  br i1 %8, label %bb8, label %bb7, !dbg !10569

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %9 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() #13, !dbg !10570
  %10 = zext i1 %9 to i8, !dbg !10570
  store i8 %10, ptr %_0, align 1, !dbg !10570
  br label %bb12, !dbg !10571

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %11 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() #13, !dbg !10572
  %12 = zext i1 %11 to i8, !dbg !10572
  store i8 %12, ptr %_0, align 1, !dbg !10572
  br label %bb12, !dbg !10571

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !10564

bb12:                                             ; preds = %bb10, %bb8
  %13 = load i8, ptr %_0, align 1, !dbg !10573
  %14 = trunc nuw i8 %13 to i1, !dbg !10573
  ret i1 %14, !dbg !10573

bb6:                                              ; No predecessors!
  unreachable, !dbg !10569
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h8a0da7e4e6198897E(ptr align 4 %self) unnamed_addr #0 !dbg !10574 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10578, !DIExpression(), !10591)
    #dbg_declare(ptr %init.dbg.spill, !10579, !DIExpression(), !10592)
    #dbg_declare(ptr %f, !10580, !DIExpression(), !10593)
    #dbg_declare(ptr %accum.dbg.spill, !10581, !DIExpression(), !10594)
    #dbg_declare(ptr %residual.dbg.spill, !10585, !DIExpression(), !10595)
    #dbg_declare(ptr %val.dbg.spill, !10587, !DIExpression(), !10596)
  br label %bb1, !dbg !10597

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %self) #13, !dbg !10598
  store i32 %0, ptr %_5, align 4, !dbg !10598
  %1 = load i32, ptr %_5, align 4, !dbg !10599
  %2 = icmp eq i32 %1, 1114112, !dbg !10599
  %_6 = select i1 %2, i32 0, i32 1, !dbg !10599
  %3 = trunc nuw i32 %_6 to i1, !dbg !10600
  br i1 %3, label %bb3, label %bb10, !dbg !10600

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !10601
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !10601
    #dbg_declare(ptr %x.dbg.spill, !10583, !DIExpression(), !10601)
; call core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h07c48841d862c9d7E"(ptr align 1 %f, i32 %x) #13, !dbg !10602
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %4 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %_9) #13, !dbg !10602
  %5 = zext i1 %4 to i8, !dbg !10602
  store i8 %5, ptr %_8, align 1, !dbg !10602
  %6 = load i8, ptr %_8, align 1, !dbg !10602
  %7 = trunc nuw i8 %6 to i1, !dbg !10602
  %_13 = zext i1 %7 to i32, !dbg !10602
  %8 = trunc nuw i32 %_13 to i1, !dbg !10602
  br i1 %8, label %bb8, label %bb7, !dbg !10602

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %9 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() #13, !dbg !10603
  %10 = zext i1 %9 to i8, !dbg !10603
  store i8 %10, ptr %_0, align 1, !dbg !10603
  br label %bb12, !dbg !10604

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %11 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() #13, !dbg !10605
  %12 = zext i1 %11 to i8, !dbg !10605
  store i8 %12, ptr %_0, align 1, !dbg !10605
  br label %bb12, !dbg !10604

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !10597

bb12:                                             ; preds = %bb10, %bb8
  %13 = load i8, ptr %_0, align 1, !dbg !10606
  %14 = trunc nuw i8 %13 to i1, !dbg !10606
  ret i1 %14, !dbg !10606

bb6:                                              ; No predecessors!
  unreachable, !dbg !10602
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hb4003d45cef785d8E(ptr align 4 %self) unnamed_addr #0 !dbg !10607 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10611, !DIExpression(), !10624)
    #dbg_declare(ptr %init.dbg.spill, !10612, !DIExpression(), !10625)
    #dbg_declare(ptr %f, !10613, !DIExpression(), !10626)
    #dbg_declare(ptr %accum.dbg.spill, !10614, !DIExpression(), !10627)
    #dbg_declare(ptr %residual.dbg.spill, !10618, !DIExpression(), !10628)
    #dbg_declare(ptr %val.dbg.spill, !10620, !DIExpression(), !10629)
  br label %bb1, !dbg !10630

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %0 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %self) #13, !dbg !10631
  store i32 %0, ptr %_5, align 4, !dbg !10631
  %1 = load i32, ptr %_5, align 4, !dbg !10632
  %2 = icmp eq i32 %1, 1114112, !dbg !10632
  %_6 = select i1 %2, i32 0, i32 1, !dbg !10632
  %3 = trunc nuw i32 %_6 to i1, !dbg !10633
  br i1 %3, label %bb3, label %bb10, !dbg !10633

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !10634
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !10634
    #dbg_declare(ptr %x.dbg.spill, !10616, !DIExpression(), !10634)
; call core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hc9f86becd3907194E"(ptr align 1 %f, i32 %x) #13, !dbg !10635
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %4 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %_9) #13, !dbg !10635
  %5 = zext i1 %4 to i8, !dbg !10635
  store i8 %5, ptr %_8, align 1, !dbg !10635
  %6 = load i8, ptr %_8, align 1, !dbg !10635
  %7 = trunc nuw i8 %6 to i1, !dbg !10635
  %_13 = zext i1 %7 to i32, !dbg !10635
  %8 = trunc nuw i32 %_13 to i1, !dbg !10635
  br i1 %8, label %bb8, label %bb7, !dbg !10635

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %9 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() #13, !dbg !10636
  %10 = zext i1 %9 to i8, !dbg !10636
  store i8 %10, ptr %_0, align 1, !dbg !10636
  br label %bb12, !dbg !10637

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %11 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() #13, !dbg !10638
  %12 = zext i1 %11 to i8, !dbg !10638
  store i8 %12, ptr %_0, align 1, !dbg !10638
  br label %bb12, !dbg !10637

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !10630

bb12:                                             ; preds = %bb10, %bb8
  %13 = load i8, ptr %_0, align 1, !dbg !10639
  %14 = trunc nuw i8 %13 to i1, !dbg !10639
  ret i1 %14, !dbg !10639

bb6:                                              ; No predecessors!
  unreachable, !dbg !10635
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hfac8b8c112ec49a3E(ptr align 4 %self) unnamed_addr #0 !dbg !10640 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10647, !DIExpression(), !10660)
    #dbg_declare(ptr %init.dbg.spill, !10648, !DIExpression(), !10661)
    #dbg_declare(ptr %f, !10649, !DIExpression(), !10662)
    #dbg_declare(ptr %accum.dbg.spill, !10650, !DIExpression(), !10663)
    #dbg_declare(ptr %residual.dbg.spill, !10654, !DIExpression(), !10664)
    #dbg_declare(ptr %val.dbg.spill, !10656, !DIExpression(), !10665)
  br label %bb1, !dbg !10666

bb1:                                              ; preds = %bb7, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %self) #13, !dbg !10667
  store ptr %0, ptr %_5, align 4, !dbg !10667
  %1 = load ptr, ptr %_5, align 4, !dbg !10668
  %2 = ptrtoint ptr %1 to i32, !dbg !10668
  %3 = icmp eq i32 %2, 0, !dbg !10668
  %_6 = select i1 %3, i32 0, i32 1, !dbg !10668
  %4 = trunc nuw i32 %_6 to i1, !dbg !10669
  br i1 %4, label %bb3, label %bb10, !dbg !10669

bb3:                                              ; preds = %bb1
  %x = load ptr, ptr %_5, align 4, !dbg !10670
  store ptr %x, ptr %x.dbg.spill, align 4, !dbg !10670
    #dbg_declare(ptr %x.dbg.spill, !10652, !DIExpression(), !10670)
; call core::iter::adapters::copied::copy_try_fold::{{closure}}
  %_9 = call zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h34b2e7dd83f67b58E"(ptr align 1 %f, ptr align 1 %x) #13, !dbg !10671
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %5 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %_9) #13, !dbg !10671
  %6 = zext i1 %5 to i8, !dbg !10671
  store i8 %6, ptr %_8, align 1, !dbg !10671
  %7 = load i8, ptr %_8, align 1, !dbg !10671
  %8 = trunc nuw i8 %7 to i1, !dbg !10671
  %_13 = zext i1 %8 to i32, !dbg !10671
  %9 = trunc nuw i32 %_13 to i1, !dbg !10671
  br i1 %9, label %bb8, label %bb7, !dbg !10671

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %10 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() #13, !dbg !10672
  %11 = zext i1 %10 to i8, !dbg !10672
  store i8 %11, ptr %_0, align 1, !dbg !10672
  br label %bb12, !dbg !10673

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %12 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E"() #13, !dbg !10674
  %13 = zext i1 %12 to i8, !dbg !10674
  store i8 %13, ptr %_0, align 1, !dbg !10674
  br label %bb12, !dbg !10673

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !10666

bb12:                                             ; preds = %bb10, %bb8
  %14 = load i8, ptr %_0, align 1, !dbg !10675
  %15 = trunc nuw i8 %14 to i1, !dbg !10675
  ret i1 %15, !dbg !10675

bb6:                                              ; No predecessors!
  unreachable, !dbg !10671
}

; core::iter::traits::iterator::Iterator::rposition
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @_ZN4core4iter6traits8iterator8Iterator9rposition17h25d212c725042251E(ptr align 4 %0) unnamed_addr #0 !dbg !10676 {
start:
  %n.dbg.spill = alloca [4 x i8], align 4
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !10680, !DIExpression(), !10686)
    #dbg_declare(ptr %predicate.dbg.spill, !10681, !DIExpression(), !10687)
; call <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
  %n = call i32 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h77442048bee26049E"(ptr align 4 %self) #13, !dbg !10688
  store i32 %n, ptr %n.dbg.spill, align 4, !dbg !10688
    #dbg_declare(ptr %n.dbg.spill, !10682, !DIExpression(), !10689)
; call core::iter::traits::iterator::Iterator::rposition::check
  call void @_ZN4core4iter6traits8iterator8Iterator9rposition5check17h78ca243406f63838E() #13, !dbg !10690
  %1 = load ptr, ptr %self, align 4, !dbg !10691
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::double_ended::DoubleEndedIterator>::try_rfold
  %2 = call { i32, i32 } @"_ZN119_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9try_rfold17h6b37307d68fd4dc3E"(ptr align 4 %1, i32 %n) #13, !dbg !10692
  %_5.0 = extractvalue { i32, i32 } %2, 0, !dbg !10692
  %_5.1 = extractvalue { i32, i32 } %2, 1, !dbg !10692
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %3 = call { i32, i32 } @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17hf6e5f6ad675834d7E"(i32 %_5.0, i32 %_5.1) #13, !dbg !10693
  %_0.0 = extractvalue { i32, i32 } %3, 0, !dbg !10693
  %_0.1 = extractvalue { i32, i32 } %3, 1, !dbg !10693
  %4 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !10694
  %5 = insertvalue { i32, i32 } %4, i32 %_0.1, 1, !dbg !10694
  ret { i32, i32 } %5, !dbg !10694
}

; core::iter::traits::iterator::Iterator::rposition::check
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator9rposition5check17h78ca243406f63838E() unnamed_addr #0 !dbg !10695 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %predicate.dbg.spill, !10699, !DIExpression(), !10702)
  ret void, !dbg !10703
}

; core::iter::traits::iterator::Iterator::rposition::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core4iter6traits8iterator8Iterator9rposition5check28_$u7b$$u7b$closure$u7d$$u7d$17he1add6f9a295917dE"(ptr align 1 %_1, i32 %i, i8 %x) unnamed_addr #0 !dbg !10704 {
start:
  %i.dbg.spill1 = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [1 x i8], align 1
  %i.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10711, !DIExpression(DW_OP_deref), !10714)
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !10709, !DIExpression(), !10715)
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !10710, !DIExpression(), !10716)
  %_5.0 = sub i32 %i, 1, !dbg !10717
  %_5.1 = icmp ult i32 %i, 1, !dbg !10717
  br i1 %_5.1, label %panic, label %bb1, !dbg !10717

bb1:                                              ; preds = %start
  store i32 %_5.0, ptr %i.dbg.spill1, align 4, !dbg !10717
    #dbg_declare(ptr %i.dbg.spill1, !10712, !DIExpression(), !10718)
; call rustc_demangle::v0::Parser::ident::{{closure}}
  %_6 = call zeroext i1 @"_ZN14rustc_demangle2v06Parser5ident28_$u7b$$u7b$closure$u7d$$u7d$17h8359baebc66a01c7E"(ptr align 1 %_1, i8 %x) #13, !dbg !10719
  br i1 %_6, label %bb3, label %bb4, !dbg !10719

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_73b5535d862a0c29a817dc558636954a) #14, !dbg !10717
  unreachable, !dbg !10717

bb4:                                              ; preds = %bb1
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10720
  store i32 %_5.0, ptr %0, align 4, !dbg !10720
  store i32 0, ptr %_0, align 4, !dbg !10720
  br label %bb5, !dbg !10721

bb3:                                              ; preds = %bb1
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10722
  store i32 %_5.0, ptr %1, align 4, !dbg !10722
  store i32 1, ptr %_0, align 4, !dbg !10722
  br label %bb5, !dbg !10721

bb5:                                              ; preds = %bb3, %bb4
  %2 = load i32, ptr %_0, align 4, !dbg !10723
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10723
  %4 = load i32, ptr %3, align 4, !dbg !10723
  %5 = insertvalue { i32, i32 } poison, i32 %2, 0, !dbg !10723
  %6 = insertvalue { i32, i32 } %5, i32 %4, 1, !dbg !10723
  ret { i32, i32 } %6, !dbg !10723
}

; core::iter::sources::once::once
; Function Attrs: nounwind
define dso_local i32 @_ZN4core4iter7sources4once4once17h79dea27c84eede91E(i32 %value) unnamed_addr #1 !dbg !10724 {
start:
  %value.dbg.spill = alloca [4 x i8], align 4
  store i32 %value, ptr %value.dbg.spill, align 4
    #dbg_declare(ptr %value.dbg.spill, !10729, !DIExpression(), !10730)
; call <core::option::Option<T> as core::iter::traits::collect::IntoIterator>::into_iter
  %_2 = call i32 @"_ZN91_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdf5a53d414a309b3E"(i32 %value) #13, !dbg !10731
  ret i32 %_2, !dbg !10732
}

; core::iter::sources::from_fn::from_fn
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter7sources7from_fn7from_fn17h39c1256d2667268aE(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %f) unnamed_addr #0 !dbg !10733 {
start:
    #dbg_declare(ptr %f, !10737, !DIExpression(), !10738)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %f, i32 20, i1 false), !dbg !10739
  ret void, !dbg !10740
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3d5717eeeadcf1e8E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !10741 {
start:
    #dbg_declare(ptr %iter, !10744, !DIExpression(), !10746)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10745, !DIExpression(), !10747)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %iter, i32 20, i1 false), !dbg !10748
  ret void, !dbg !10749
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17ha79bd0e004aa18cdE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !10750 {
start:
    #dbg_declare(ptr %iter, !10753, !DIExpression(), !10755)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10754, !DIExpression(), !10756)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %iter, i32 20, i1 false), !dbg !10757
  ret void, !dbg !10758
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he6506df65433e91cE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !10759 {
start:
    #dbg_declare(ptr %iter, !10762, !DIExpression(), !10764)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10763, !DIExpression(), !10765)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %iter, i32 20, i1 false), !dbg !10766
  ret void, !dbg !10767
}

; core::iter::adapters::copied::copy_try_fold
; Function Attrs: nounwind
define dso_local void @_ZN4core4iter8adapters6copied13copy_try_fold17h7b7b3ea9fb2174f4E() unnamed_addr #1 !dbg !10768 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10772, !DIExpression(), !10776)
  ret void, !dbg !10777
}

; core::iter::adapters::copied::copy_try_fold
; Function Attrs: nounwind
define dso_local void @_ZN4core4iter8adapters6copied13copy_try_fold17hb0727807dd6ef137E() unnamed_addr #1 !dbg !10778 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10782, !DIExpression(), !10786)
  ret void, !dbg !10787
}

; core::iter::adapters::copied::copy_try_fold
; Function Attrs: nounwind
define dso_local void @_ZN4core4iter8adapters6copied13copy_try_fold17hc6d3acede75ec086E() unnamed_addr #1 !dbg !10788 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !10792, !DIExpression(), !10795)
  ret void, !dbg !10796
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h325b15c8aba8e57eE"(ptr align 1 %_1, i32 %acc, ptr align 1 %_3) unnamed_addr #0 !dbg !10797 {
start:
  %elt.dbg.spill = alloca [1 x i8], align 1
  %_3.dbg.spill = alloca [4 x i8], align 4
  %acc.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10803, !DIExpression(DW_OP_deref), !10807)
  store i32 %acc, ptr %acc.dbg.spill, align 4
    #dbg_declare(ptr %acc.dbg.spill, !10802, !DIExpression(), !10808)
  store ptr %_3, ptr %_3.dbg.spill, align 4
    #dbg_declare(ptr %_3.dbg.spill, !10806, !DIExpression(), !10809)
  %elt = load i8, ptr %_3, align 1, !dbg !10810
  store i8 %elt, ptr %elt.dbg.spill, align 1, !dbg !10810
    #dbg_declare(ptr %elt.dbg.spill, !10804, !DIExpression(), !10811)
; call core::iter::traits::iterator::Iterator::rposition::check::{{closure}}
  %0 = call { i32, i32 } @"_ZN4core4iter6traits8iterator8Iterator9rposition5check28_$u7b$$u7b$closure$u7d$$u7d$17he1add6f9a295917dE"(ptr align 1 %_1, i32 %acc, i8 %elt) #13, !dbg !10812
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !10812
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !10812
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !10813
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !10813
  ret { i32, i32 } %2, !dbg !10813
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h34b2e7dd83f67b58E"(ptr align 1 %_1, ptr align 1 %_3) unnamed_addr #0 !dbg !10814 {
start:
  %elt.dbg.spill = alloca [1 x i8], align 1
  %_3.dbg.spill = alloca [4 x i8], align 4
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10820, !DIExpression(DW_OP_deref), !10824)
    #dbg_declare(ptr %acc.dbg.spill, !10819, !DIExpression(), !10825)
  store ptr %_3, ptr %_3.dbg.spill, align 4
    #dbg_declare(ptr %_3.dbg.spill, !10823, !DIExpression(), !10826)
  %elt = load i8, ptr %_3, align 1, !dbg !10827
  store i8 %elt, ptr %elt.dbg.spill, align 1, !dbg !10827
    #dbg_declare(ptr %elt.dbg.spill, !10821, !DIExpression(), !10828)
; call core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %_0 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h78bc04c9e16b1df6E"(ptr align 1 %_1, i8 %elt) #13, !dbg !10829
  ret i1 %_0, !dbg !10830
}

; core::iter::adapters::copied::copy_try_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17heba4d6bbe4472fd9E"(ptr align 1 %_1, ptr align 1 %_3) unnamed_addr #0 !dbg !10831 {
start:
  %elt.dbg.spill = alloca [1 x i8], align 1
  %_3.dbg.spill = alloca [4 x i8], align 4
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10837, !DIExpression(DW_OP_deref), !10841)
    #dbg_declare(ptr %acc.dbg.spill, !10836, !DIExpression(), !10842)
  store ptr %_3, ptr %_3.dbg.spill, align 4
    #dbg_declare(ptr %_3.dbg.spill, !10840, !DIExpression(), !10843)
  %elt = load i8, ptr %_3, align 1, !dbg !10844
  store i8 %elt, ptr %elt.dbg.spill, align 1, !dbg !10844
    #dbg_declare(ptr %elt.dbg.spill, !10838, !DIExpression(), !10845)
; call core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %_0 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h056c7ef3ed86ccd7E"(ptr align 1 %_1, i8 %elt) #13, !dbg !10846
  ret i1 %_0, !dbg !10847
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h76392b9b78e37348E"(ptr %it.0, ptr %it.1) unnamed_addr #1 !dbg !10848 {
start:
  %it.dbg.spill = alloca [8 x i8], align 4
  store ptr %it.0, ptr %it.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %it.dbg.spill, i32 4
  store ptr %it.1, ptr %0, align 4
    #dbg_declare(ptr %it.dbg.spill, !10851, !DIExpression(), !10852)
  %1 = insertvalue { ptr, ptr } poison, ptr %it.0, 0, !dbg !10853
  %2 = insertvalue { ptr, ptr } %1, ptr %it.1, 1, !dbg !10853
  ret { ptr, ptr } %2, !dbg !10853
}

; core::iter::adapters::peekable::Peekable<I>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h4fd677906fac2a31E"(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !10854 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !10857, !DIExpression(), !10858)
  store ptr %iter.0, ptr %_0, align 4, !dbg !10859
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10859
  store ptr %iter.1, ptr %1, align 4, !dbg !10859
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !10859
  store i8 2, ptr %2, align 4, !dbg !10859
  %3 = getelementptr inbounds i8, ptr %2, i32 1, !dbg !10859
  store i8 undef, ptr %3, align 1, !dbg !10859
  ret void, !dbg !10860
}

; core::iter::adapters::peekable::Peekable<I>::peek
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h8d4927ab9897c6afE"(ptr align 4 %self) unnamed_addr #0 !dbg !10861 {
start:
  %iter.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10877, !DIExpression(), !10881)
  store ptr %self, ptr %iter.dbg.spill, align 4, !dbg !10882
    #dbg_declare(ptr %iter.dbg.spill, !10878, !DIExpression(), !10883)
  %_5 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10884
; call core::option::Option<T>::get_or_insert_with
  %_4 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h29a568fae5f3c471E"(ptr align 1 %_5, ptr align 4 %self) #13, !dbg !10885
; call core::option::Option<T>::as_ref
  %_0 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$6as_ref17haf6527fc23ed4c92E"(ptr align 1 %_4) #13, !dbg !10886
  ret ptr %_0, !dbg !10887
}

; core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17h71a4ea1f4f1e70a5E"(ptr align 4 %_1) unnamed_addr #0 !dbg !10888 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10897, !DIExpression(DW_OP_deref), !10898)
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
  %0 = call { i1, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h62f550c9487e9adaE"(ptr align 4 %_1) #13, !dbg !10899
  %_0.0 = extractvalue { i1, i8 } %0, 0, !dbg !10899
  %_0.1 = extractvalue { i1, i8 } %0, 1, !dbg !10899
  %1 = insertvalue { i1, i8 } poison, i1 %_0.0, 0, !dbg !10900
  %2 = insertvalue { i1, i8 } %1, i8 %_0.1, 1, !dbg !10900
  ret { i1, i8 } %2, !dbg !10900
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h9225e7b05f792766E"(ptr align 4 %self, i32 %index, ptr align 4 %0) unnamed_addr #0 !dbg !10901 {
start:
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10912, !DIExpression(), !10916)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !10913, !DIExpression(), !10917)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 128, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !10918, !DIExpression(), !10927)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !10926, !DIExpression(), !10929)
  store i32 %index, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !10930, !DIExpression(), !10937)
  store ptr %self, ptr %slice.dbg.spill.i.i, align 4
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 128, ptr %2, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !10936, !DIExpression(), !10939)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 %index, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !10940, !DIExpression(), !10948)
  store ptr %self, ptr %slice.dbg.spill.i.i.i, align 4
  %4 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 128, ptr %4, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !10946, !DIExpression(), !10950)
; call core::num::<impl usize>::checked_sub
  %5 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hf518b4cbfbcb79daE"(i32 %index, i32 0) #13, !dbg !10951
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !10951
  %7 = extractvalue { i32, i32 } %5, 1, !dbg !10951
  store i32 %6, ptr %_3.i.i.i, align 4, !dbg !10951
  %8 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !10951
  store i32 %7, ptr %8, align 4, !dbg !10951
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !10951
  %9 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !10951
  %10 = load i32, ptr %9, align 4, !dbg !10951
  %11 = trunc nuw i32 %_6.i.i.i to i1, !dbg !10952
  br i1 %11, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !10952

bb2.i.i.i:                                        ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !10953
  %new_len.i.i.i = load i32, ptr %12, align 4, !dbg !10953
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !10953
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !10947, !DIExpression(), !10953)
  %_8.i.i.i = icmp ule i32 %index, 128, !dbg !10954
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h4fed70f4a7bfaadfE.exit", label %bb5.i.i.i, !dbg !10954

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %start
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h2efc39c3975ac579E(i32 0, i32 %index, i32 128, ptr align 4 %0) #14, !dbg !10955
  unreachable, !dbg !10955

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h4fed70f4a7bfaadfE.exit": ; preds = %bb2.i.i.i
  store ptr %self, ptr %ptr.dbg.spill.i.i, align 4
  %13 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 128, ptr %13, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !10956, !DIExpression(), !10967)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !10961, !DIExpression(), !10969)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !10962, !DIExpression(), !10970)
  store ptr %self, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !10971
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !10963, !DIExpression(), !10972)
  store ptr %self, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !10973
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !10965, !DIExpression(), !10974)
  %14 = insertvalue { ptr, i32 } poison, ptr %self, 0, !dbg !10975
  %15 = insertvalue { ptr, i32 } %14, i32 %new_len.i.i.i, 1, !dbg !10975
  %16 = insertvalue { ptr, i32 } poison, ptr %self, 0, !dbg !10976
  %17 = insertvalue { ptr, i32 } %16, i32 %new_len.i.i.i, 1, !dbg !10976
  %_0.0 = extractvalue { ptr, i32 } %17, 0, !dbg !10977
  %_0.1 = extractvalue { ptr, i32 } %17, 1, !dbg !10977
  %18 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10978
  %19 = insertvalue { ptr, i32 } %18, i32 %_0.1, 1, !dbg !10978
  ret { ptr, i32 } %19, !dbg !10978
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17he9745d40019a4ad1E"(ptr align 1 %self, i32 %index, ptr align 4 %0) unnamed_addr #0 !dbg !10979 {
start:
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10985, !DIExpression(), !10988)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !10986, !DIExpression(), !10989)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 4, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !10990, !DIExpression(), !10997)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !10996, !DIExpression(), !10999)
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %2 = call { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d8d7a2c7075cea6E"(i32 %index, ptr align 1 %self, i32 4, ptr align 4 %0) #13, !dbg !11000
  %_0.0.i = extractvalue { ptr, i32 } %2, 0, !dbg !11000
  %_0.1.i = extractvalue { ptr, i32 } %2, 1, !dbg !11000
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11001
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11001
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11002
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !11002
  ret { ptr, i32 } %4, !dbg !11002
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5clone5Clone5clone17h5815a6a5a895cff2E(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %_1) unnamed_addr #0 !dbg !11003 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !11011, !DIExpression(), !11014)
; call <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
  call void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0f88fa48cf5f9b33E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %_1) #13, !dbg !11014
  ret void, !dbg !11014
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5clone5Clone5clone17h67254a32f936947fE(ptr align 1 %_1) unnamed_addr #0 !dbg !11015 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !11020, !DIExpression(), !11023)
  ret void, !dbg !11023
}

; core::clone::Clone::clone
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5clone5Clone5clone17hfb98ec0f1e3ec6d1E(ptr align 1 %_1) unnamed_addr #0 !dbg !11024 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !11029, !DIExpression(), !11032)
  ret void, !dbg !11032
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hb41f642e46021a01E"(ptr align 1 %self.0, i32 %self.1, ptr align 1 %0, i32 %1) unnamed_addr #1 !dbg !11033 {
start:
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %n.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %needle = alloca [8 x i8], align 4
  store ptr %0, ptr %needle, align 4
  %2 = getelementptr inbounds i8, ptr %needle, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill, !11037, !DIExpression(), !11041)
    #dbg_declare(ptr %needle, !11038, !DIExpression(), !11042)
  %4 = load ptr, ptr %needle, align 4, !dbg !11043
  %5 = getelementptr inbounds i8, ptr %needle, i32 4, !dbg !11043
  %n = load i32, ptr %5, align 4, !dbg !11043
  store i32 %n, ptr %n.dbg.spill, align 4, !dbg !11043
    #dbg_declare(ptr %n.dbg.spill, !11039, !DIExpression(), !11044)
  %_4 = icmp uge i32 %self.1, %n, !dbg !11045
  br i1 %_4, label %bb1, label %bb2, !dbg !11045

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !11045
  br label %bb4, !dbg !11045

bb1:                                              ; preds = %start
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %6 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %6, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !11046, !DIExpression(), !11052)
  store i32 %n, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !11051, !DIExpression(), !11054)
  store i32 %n, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !11055, !DIExpression(), !11061)
  store ptr %self.0, ptr %slice.dbg.spill.i.i, align 4
  %7 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 %self.1, ptr %7, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !11060, !DIExpression(), !11063)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %8 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 %n, ptr %8, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !11064, !DIExpression(), !11071)
  store ptr %self.0, ptr %slice.dbg.spill.i.i.i, align 4
  %9 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 %self.1, ptr %9, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !11069, !DIExpression(), !11073)
; call core::num::<impl usize>::checked_sub
  %10 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hf518b4cbfbcb79daE"(i32 %n, i32 0) #13, !dbg !11074
  %11 = extractvalue { i32, i32 } %10, 0, !dbg !11074
  %12 = extractvalue { i32, i32 } %10, 1, !dbg !11074
  store i32 %11, ptr %_3.i.i.i, align 4, !dbg !11074
  %13 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !11074
  store i32 %12, ptr %13, align 4, !dbg !11074
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !11074
  %14 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !11074
  %15 = load i32, ptr %14, align 4, !dbg !11074
  %16 = trunc nuw i32 %_6.i.i.i to i1, !dbg !11075
  br i1 %16, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !11075

bb2.i.i.i:                                        ; preds = %bb1
  %17 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !11076
  %new_len.i.i.i = load i32, ptr %17, align 4, !dbg !11076
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !11076
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !11070, !DIExpression(), !11076)
  %_8.i.i.i = icmp ule i32 %n, %self.1, !dbg !11077
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h507f15b27da79102E.exit", label %bb5.i.i.i, !dbg !11077

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %bb1
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h2efc39c3975ac579E(i32 0, i32 %n, i32 %self.1, ptr align 4 @alloc_0a2d50b8e0e351fda4016f64eb154376) #14, !dbg !11078
  unreachable, !dbg !11078

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h507f15b27da79102E.exit": ; preds = %bb2.i.i.i
  store ptr %self.0, ptr %ptr.dbg.spill.i.i, align 4
  %18 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 %self.1, ptr %18, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !11079, !DIExpression(), !11090)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !11084, !DIExpression(), !11092)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !11085, !DIExpression(), !11093)
  store ptr %self.0, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !11094
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !11086, !DIExpression(), !11095)
  store ptr %self.0, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !11096
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !11088, !DIExpression(), !11097)
  %19 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !11098
  %20 = insertvalue { ptr, i32 } %19, i32 %new_len.i.i.i, 1, !dbg !11098
  %21 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !11099
  %22 = insertvalue { ptr, i32 } %21, i32 %new_len.i.i.i, 1, !dbg !11099
  %_9.0 = extractvalue { ptr, i32 } %22, 0, !dbg !11100
  %_9.1 = extractvalue { ptr, i32 } %22, 1, !dbg !11100
  store ptr %_9.0, ptr %_8, align 4, !dbg !11101
  %23 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !11101
  store i32 %_9.1, ptr %23, align 4, !dbg !11101
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %24 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h803464c53e88978eE"(ptr align 4 %needle, ptr align 4 %_8) #13, !dbg !11102
  %25 = zext i1 %24 to i8, !dbg !11102
  store i8 %25, ptr %_0, align 1, !dbg !11102
  br label %bb4, !dbg !11102

bb4:                                              ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h507f15b27da79102E.exit", %bb2
  %26 = load i8, ptr %_0, align 1, !dbg !11103
  %27 = trunc nuw i8 %26 to i1, !dbg !11103
  ret i1 %27, !dbg !11103
}

; core::slice::<impl [T]>::chunks_exact
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12chunks_exact17haf7548331f493393E"(ptr sret([20 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1, i32 %chunk_size, ptr align 4 %0) unnamed_addr #0 !dbg !11104 {
start:
  %chunk_size.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !11108, !DIExpression(), !11110)
  store i32 %chunk_size, ptr %chunk_size.dbg.spill, align 4
    #dbg_declare(ptr %chunk_size.dbg.spill, !11109, !DIExpression(), !11111)
  %2 = icmp eq i32 %chunk_size, 0, !dbg !11112
  br i1 %2, label %bb2, label %bb1, !dbg !11112

bb2:                                              ; preds = %start
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 @alloc_52400e043e1e9b1bf2be730ef0b31a1f) #13, !dbg !11113
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_4, ptr align 4 %0) #14, !dbg !11113
  unreachable, !dbg !11113

bb1:                                              ; preds = %start
; call core::slice::iter::ChunksExact<T>::new
  call void @"_ZN4core5slice4iter20ChunksExact$LT$T$GT$3new17h7903a31b77699416E"(ptr sret([20 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1, i32 %chunk_size) #13, !dbg !11114
  ret void, !dbg !11115
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h0c2238a972157f13E"(ptr align 4 %self.0, i32 %self.1, i32 %index) unnamed_addr #0 !dbg !11116 {
start:
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11133, !DIExpression(), !11137)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !11134, !DIExpression(), !11138)
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %_0 = call align 4 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h6470ee157401c3acE"(i32 %index, ptr align 4 %self.0, i32 %self.1) #13, !dbg !11139
  ret ptr %_0, !dbg !11140
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h9d6c446509b57dfaE"(ptr align 4 %self.0, i32 %self.1) unnamed_addr #0 !dbg !11141 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11151, !DIExpression(), !11152)
; call core::slice::iter::Iter<T>::new
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hf1e0f6fecf80a711E"(ptr align 4 %self.0, i32 %self.1) #13, !dbg !11153
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !11153
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !11153
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !11154
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !11154
  ret { ptr, ptr } %3, !dbg !11154
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17hf1e0f6fecf80a711E"(ptr align 4 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !11155 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %end_or_len = alloca [4 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !11159, !DIExpression(), !11166)
    #dbg_declare(ptr %end_or_len, !11164, !DIExpression(), !11167)
  store i32 %slice.1, ptr %len.dbg.spill, align 4, !dbg !11168
    #dbg_declare(ptr %len.dbg.spill, !11160, !DIExpression(), !11169)
; call core::ptr::non_null::NonNull<T>::from_ref
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h8f8196276a973e56E"(ptr align 4 %slice.0, i32 %slice.1) #13, !dbg !11170
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11170
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11170
; call core::ptr::non_null::NonNull<T>::cast
  %ptr = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h337dfc48d9fdebecE"(ptr %_4.0, i32 %_4.1) #13, !dbg !11171
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !11171
    #dbg_declare(ptr %ptr.dbg.spill, !11162, !DIExpression(), !11172)
  br label %bb4, !dbg !11173

bb4:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !11174, !DIExpression(), !11181)
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !11183, !DIExpression(), !11189)
  store i32 %slice.1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !11188, !DIExpression(), !11191)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() #13, !dbg !11192
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha7bd4c5d64a689cbE.exit", !dbg !11192

bb2.i:                                            ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE"(ptr %ptr, i32 %slice.1, i32 4, ptr align 4 @alloc_bb23dba18f73b6eacb8962cd115e8b65) #13, !dbg !11194
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha7bd4c5d64a689cbE.exit", !dbg !11194

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha7bd4c5d64a689cbE.exit": ; preds = %bb4, %bb2.i
  %_0.i = getelementptr inbounds nuw i32, ptr %ptr, i32 %slice.1, !dbg !11195
  store ptr %_0.i, ptr %end_or_len, align 4, !dbg !11196
  br label %bb7, !dbg !11197

bb7:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha7bd4c5d64a689cbE.exit"
  %_8 = load ptr, ptr %end_or_len, align 4, !dbg !11198
  %2 = insertvalue { ptr, ptr } poison, ptr %ptr, 0, !dbg !11199
  %3 = insertvalue { ptr, ptr } %2, ptr %_8, 1, !dbg !11199
  ret { ptr, ptr } %3, !dbg !11199

bb3:                                              ; No predecessors!
  unreachable
}

; core::slice::iter::ChunksExact<T>::new
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core5slice4iter20ChunksExact$LT$T$GT$3new17h7903a31b77699416E"(ptr sret([20 x i8]) align 4 %_0, ptr align 1 %slice.0, i32 %slice.1, i32 %chunk_size) unnamed_addr #0 !dbg !11200 {
start:
  %snd.dbg.spill = alloca [8 x i8], align 4
  %fst.dbg.spill = alloca [8 x i8], align 4
  %fst_len.dbg.spill = alloca [4 x i8], align 4
  %rem.dbg.spill = alloca [4 x i8], align 4
  %chunk_size.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_11 = alloca [16 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !11205, !DIExpression(), !11214)
  store i32 %chunk_size, ptr %chunk_size.dbg.spill, align 4
    #dbg_declare(ptr %chunk_size.dbg.spill, !11206, !DIExpression(), !11215)
  %_5 = icmp eq i32 %chunk_size, 0, !dbg !11216
  br i1 %_5, label %panic, label %bb1, !dbg !11216

bb1:                                              ; preds = %start
  %rem = urem i32 %slice.1, %chunk_size, !dbg !11216
  store i32 %rem, ptr %rem.dbg.spill, align 4, !dbg !11216
    #dbg_declare(ptr %rem.dbg.spill, !11207, !DIExpression(), !11217)
  %_8.0 = sub i32 %slice.1, %rem, !dbg !11218
  %_8.1 = icmp ult i32 %slice.1, %rem, !dbg !11218
  br i1 %_8.1, label %panic1, label %bb2, !dbg !11218

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h32431b015c39caa9E(ptr align 4 @alloc_86ac038395504669b32d90cafd802417) #14, !dbg !11216
  unreachable, !dbg !11216

bb2:                                              ; preds = %bb1
  store i32 %_8.0, ptr %fst_len.dbg.spill, align 4, !dbg !11218
    #dbg_declare(ptr %fst_len.dbg.spill, !11209, !DIExpression(), !11219)
; call core::slice::<impl [T]>::split_at_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h2dab4c08f64d725cE"(ptr sret([16 x i8]) align 4 %_11, ptr align 1 %slice.0, i32 %slice.1, i32 %_8.0, ptr align 4 @alloc_3ea62aae7b47b364d4b2ad2a9b4b6a6f) #13, !dbg !11220
  %fst.0 = load ptr, ptr %_11, align 4, !dbg !11221
  %1 = getelementptr inbounds i8, ptr %_11, i32 4, !dbg !11221
  %fst.1 = load i32, ptr %1, align 4, !dbg !11221
  store ptr %fst.0, ptr %fst.dbg.spill, align 4, !dbg !11221
  %2 = getelementptr inbounds i8, ptr %fst.dbg.spill, i32 4, !dbg !11221
  store i32 %fst.1, ptr %2, align 4, !dbg !11221
    #dbg_declare(ptr %fst.dbg.spill, !11211, !DIExpression(), !11222)
  %3 = getelementptr inbounds i8, ptr %_11, i32 8, !dbg !11223
  %snd.0 = load ptr, ptr %3, align 4, !dbg !11223
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !11223
  %snd.1 = load i32, ptr %4, align 4, !dbg !11223
  store ptr %snd.0, ptr %snd.dbg.spill, align 4, !dbg !11223
  %5 = getelementptr inbounds i8, ptr %snd.dbg.spill, i32 4, !dbg !11223
  store i32 %snd.1, ptr %5, align 4, !dbg !11223
    #dbg_declare(ptr %snd.dbg.spill, !11213, !DIExpression(), !11224)
  store ptr %fst.0, ptr %_0, align 4, !dbg !11225
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11225
  store i32 %fst.1, ptr %6, align 4, !dbg !11225
  %7 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !11225
  store ptr %snd.0, ptr %7, align 4, !dbg !11225
  %8 = getelementptr inbounds i8, ptr %7, i32 4, !dbg !11225
  store i32 %snd.1, ptr %8, align 4, !dbg !11225
  %9 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !11225
  store i32 %chunk_size, ptr %9, align 4, !dbg !11225
  ret void, !dbg !11226

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_32ea7ecd5472aadad13b1af66bc6f4d7) #14, !dbg !11218
  unreachable, !dbg !11218
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h8f898a88fe006f77E"(ptr align 4 %self.0, i32 %self.1) unnamed_addr #1 !dbg !11227 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11230, !DIExpression(), !11231)
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h9d6c446509b57dfaE"(ptr align 4 %self.0, i32 %self.1) #13, !dbg !11232
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !11232
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !11232
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !11233
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !11233
  ret { ptr, ptr } %3, !dbg !11233
}

; core::slice::index::slice_index_fail
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core5slice5index16slice_index_fail17h2efc39c3975ac579E(i32 %start1, i32 %end, i32 %len, ptr align 4 %0) unnamed_addr #4 !dbg !11234 {
start:
  %end.dbg.spill.i5 = alloca [4 x i8], align 4
  %start.dbg.spill.i6 = alloca [4 x i8], align 4
  %len.dbg.spill.i3 = alloca [4 x i8], align 4
  %end.dbg.spill.i4 = alloca [4 x i8], align 4
  %len.dbg.spill.i2 = alloca [4 x i8], align 4
  %start.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  store i32 %start1, ptr %start.dbg.spill, align 4
    #dbg_declare(ptr %start.dbg.spill, !11236, !DIExpression(), !11239)
  store i32 %end, ptr %end.dbg.spill, align 4
    #dbg_declare(ptr %end.dbg.spill, !11237, !DIExpression(), !11240)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !11238, !DIExpression(), !11241)
  %_4 = icmp ugt i32 %start1, %len, !dbg !11242
  br i1 %_4, label %bb1, label %bb2, !dbg !11242

bb2:                                              ; preds = %start
  %_6 = icmp ugt i32 %end, %len, !dbg !11243
  br i1 %_6, label %bb3, label %bb4, !dbg !11243

bb1:                                              ; preds = %start
  store i32 %start1, ptr %start.dbg.spill.i, align 4
    #dbg_declare(ptr %start.dbg.spill.i, !11244, !DIExpression(), !11251)
  store i32 %len, ptr %len.dbg.spill.i2, align 4
    #dbg_declare(ptr %len.dbg.spill.i2, !11250, !DIExpression(), !11251)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h6c3d7c12f3ee175fE(i32 %start1, i32 %len, ptr align 4 %0) #14, !dbg !11254
  unreachable, !dbg !11254

_ZN4core5slice5index16slice_index_fail8do_panic17h7b5eeb3cd5064bf8E.exit: ; No predecessors!
  unreachable, !dbg !11256

bb4:                                              ; preds = %bb2
  %_8 = icmp ugt i32 %start1, %end, !dbg !11257
  br i1 %_8, label %bb5, label %bb6, !dbg !11257

bb3:                                              ; preds = %bb2
  store i32 %end, ptr %end.dbg.spill.i4, align 4
    #dbg_declare(ptr %end.dbg.spill.i4, !11258, !DIExpression(), !11262)
  store i32 %len, ptr %len.dbg.spill.i3, align 4
    #dbg_declare(ptr %len.dbg.spill.i3, !11261, !DIExpression(), !11262)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h26c13eef9ac779e8E(i32 %end, i32 %len, ptr align 4 %0) #14, !dbg !11264
  unreachable, !dbg !11264

_ZN4core5slice5index16slice_index_fail8do_panic17ha4978ed09fb396c5E.exit: ; No predecessors!
  unreachable, !dbg !11256

bb6:                                              ; preds = %bb4
  store i32 %end, ptr %end.dbg.spill.i, align 4
    #dbg_declare(ptr %end.dbg.spill.i, !11266, !DIExpression(), !11270)
  store i32 %len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !11269, !DIExpression(), !11270)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17hc2ae076305a9deb2E(i32 %end, i32 %len, ptr align 4 %0) #14, !dbg !11272
  unreachable, !dbg !11272

_ZN4core5slice5index16slice_index_fail8do_panic17h23a360d8865a5df8E.exit: ; No predecessors!
  unreachable, !dbg !11256

bb5:                                              ; preds = %bb4
  store i32 %start1, ptr %start.dbg.spill.i6, align 4
    #dbg_declare(ptr %start.dbg.spill.i6, !11274, !DIExpression(), !11278)
  store i32 %end, ptr %end.dbg.spill.i5, align 4
    #dbg_declare(ptr %end.dbg.spill.i5, !11277, !DIExpression(), !11278)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h13d72b053e4c8ae7E(i32 %start1, i32 %end, ptr align 4 %0) #14, !dbg !11280
  unreachable, !dbg !11280

_ZN4core5slice5index16slice_index_fail8do_panic17hdddde5dc9635833dE.exit: ; No predecessors!
  unreachable, !dbg !11256
}

; core::slice::memchr::memchr_naive
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5slice6memchr12memchr_naive17hab63cca88e7523a7E(i8 %x, ptr align 1 %text.0, i32 %text.1) unnamed_addr #0 !dbg !11282 {
start:
  %text.dbg.spill = alloca [8 x i8], align 4
  %x.dbg.spill = alloca [1 x i8], align 1
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !11288, !DIExpression(), !11292)
  store ptr %text.0, ptr %text.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %text.dbg.spill, i32 4
  store i32 %text.1, ptr %0, align 4
    #dbg_declare(ptr %text.dbg.spill, !11289, !DIExpression(), !11293)
    #dbg_declare(ptr %i, !11290, !DIExpression(), !11294)
  store i32 0, ptr %i, align 4, !dbg !11295
  br label %bb1, !dbg !11296

bb1:                                              ; preds = %bb6, %start
  %_5 = load i32, ptr %i, align 4, !dbg !11297
  %_4 = icmp ult i32 %_5, %text.1, !dbg !11297
  br i1 %_4, label %bb2, label %bb7, !dbg !11297

bb7:                                              ; preds = %bb1
  store i32 0, ptr %_0, align 4, !dbg !11298
  br label %bb8, !dbg !11299

bb2:                                              ; preds = %bb1
  %_9 = load i32, ptr %i, align 4, !dbg !11300
  %_11 = icmp ult i32 %_9, %text.1, !dbg !11301
  br i1 %_11, label %bb3, label %panic, !dbg !11301

bb8:                                              ; preds = %bb4, %bb7
  %1 = load i32, ptr %_0, align 4, !dbg !11299
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11299
  %3 = load i32, ptr %2, align 4, !dbg !11299
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !11299
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !11299
  ret { i32, i32 } %5, !dbg !11299

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds nuw i8, ptr %text.0, i32 %_9, !dbg !11301
  %_8 = load i8, ptr %6, align 1, !dbg !11301
  %_7 = icmp eq i8 %_8, %x, !dbg !11301
  br i1 %_7, label %bb4, label %bb5, !dbg !11301

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %_9, i32 %text.1, ptr align 4 @alloc_dc2830e6168cd7059bdfdd23c204604a) #14, !dbg !11301
  unreachable, !dbg !11301

bb5:                                              ; preds = %bb3
  %7 = load i32, ptr %i, align 4, !dbg !11302
  %_13.0 = add i32 %7, 1, !dbg !11302
  %_13.1 = icmp ult i32 %_13.0, %7, !dbg !11302
  br i1 %_13.1, label %panic1, label %bb6, !dbg !11302

bb4:                                              ; preds = %bb3
  %_12 = load i32, ptr %i, align 4, !dbg !11303
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11304
  store i32 %_12, ptr %8, align 4, !dbg !11304
  store i32 1, ptr %_0, align 4, !dbg !11304
  br label %bb8, !dbg !11299

bb6:                                              ; preds = %bb5
  store i32 %_13.0, ptr %i, align 4, !dbg !11302
  br label %bb1, !dbg !11296

panic1:                                           ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_446d6b56150b55fa180f023c26fcb951) #14, !dbg !11302
  unreachable, !dbg !11302
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5slice6memchr6memchr17h90769068d71bb576E(i8 %x, ptr align 1 %text.0, i32 %text.1) unnamed_addr #0 !dbg !11305 {
start:
  %text.dbg.spill = alloca [8 x i8], align 4
  %x.dbg.spill = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !11307, !DIExpression(), !11309)
  store ptr %text.0, ptr %text.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %text.dbg.spill, i32 4
  store i32 %text.1, ptr %0, align 4
    #dbg_declare(ptr %text.dbg.spill, !11308, !DIExpression(), !11310)
  %1 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 2, i32 4), !dbg !11311
  %_6.0 = extractvalue { i32, i1 } %1, 0, !dbg !11311
  %_6.1 = extractvalue { i32, i1 } %1, 1, !dbg !11311
  br i1 %_6.1, label %panic, label %bb1, !dbg !11311

bb1:                                              ; preds = %start
  %_3 = icmp ult i32 %text.1, %_6.0, !dbg !11312
  br i1 %_3, label %bb2, label %bb3, !dbg !11312

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 @alloc_16136c0fde075309b69bc41ca34aef15) #14, !dbg !11311
  unreachable, !dbg !11311

bb3:                                              ; preds = %bb1
; call core::slice::memchr::memchr_aligned
  %2 = call { i32, i32 } @_ZN4core5slice6memchr14memchr_aligned17hbe785d517767e361E(i8 %x, ptr align 1 %text.0, i32 %text.1) #13, !dbg !11313
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11313
  %4 = extractvalue { i32, i32 } %2, 1, !dbg !11313
  store i32 %3, ptr %_0, align 4, !dbg !11313
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11313
  store i32 %4, ptr %5, align 4, !dbg !11313
  br label %bb4, !dbg !11313

bb2:                                              ; preds = %bb1
; call core::slice::memchr::memchr_naive
  %6 = call { i32, i32 } @_ZN4core5slice6memchr12memchr_naive17hab63cca88e7523a7E(i8 %x, ptr align 1 %text.0, i32 %text.1) #13, !dbg !11314
  %7 = extractvalue { i32, i32 } %6, 0, !dbg !11314
  %8 = extractvalue { i32, i32 } %6, 1, !dbg !11314
  store i32 %7, ptr %_0, align 4, !dbg !11314
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11314
  store i32 %8, ptr %9, align 4, !dbg !11314
  br label %bb4, !dbg !11314

bb4:                                              ; preds = %bb2, %bb3
  %10 = load i32, ptr %_0, align 4, !dbg !11315
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11315
  %12 = load i32, ptr %11, align 4, !dbg !11315
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !11315
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !11315
  ret { i32, i32 } %14, !dbg !11315
}

; core::option::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
define internal void @_ZN4core6option13unwrap_failed17h87f3d65d3174ccbeE(ptr align 4 %0) unnamed_addr #3 !dbg !11316 {
start:
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hb75f2f96287725c0E(ptr align 1 @alloc_5f55955de67e57c79064b537689facea, i32 43, ptr align 4 %0) #14, !dbg !11317
  unreachable, !dbg !11317
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17he7e1992d3fe7e189E"(i8 %0, ptr align 4 %f.0, ptr align 4 %f.1, ptr align 4 %1) unnamed_addr #0 !dbg !11318 {
start:
  %x.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  store i8 %0, ptr %self, align 1
    #dbg_declare(ptr %self, !11330, !DIExpression(), !11334)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %2 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %2, align 4
    #dbg_declare(ptr %f.dbg.spill, !11331, !DIExpression(), !11335)
  store i8 0, ptr %_6, align 1, !dbg !11336
  store i8 1, ptr %_6, align 1, !dbg !11336
  %3 = load i8, ptr %self, align 1, !dbg !11336
  %4 = icmp eq i8 %3, 2, !dbg !11336
  %_3 = select i1 %4, i32 0, i32 1, !dbg !11336
  %5 = trunc nuw i32 %_3 to i1, !dbg !11337
  br i1 %5, label %bb3, label %bb2, !dbg !11337

bb3:                                              ; preds = %start
  %6 = load i8, ptr %self, align 1, !dbg !11338
  %x = trunc nuw i8 %6 to i1, !dbg !11338
  %7 = zext i1 %x to i8, !dbg !11338
  store i8 %7, ptr %x.dbg.spill, align 1, !dbg !11338
    #dbg_declare(ptr %x.dbg.spill, !11332, !DIExpression(), !11339)
  %8 = zext i1 %x to i8, !dbg !11340
  store i8 %8, ptr %_0, align 1, !dbg !11340
  br label %bb6, !dbg !11341

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11342
; call <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
  %9 = call zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hb52346c60284c7a1E"(ptr align 4 %f.0, ptr align 4 %f.1) #13, !dbg !11342
  %10 = zext i1 %9 to i8, !dbg !11342
  store i8 %10, ptr %_0, align 1, !dbg !11342
  br label %bb6, !dbg !11342

bb6:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_6, align 1, !dbg !11343
  %12 = trunc nuw i8 %11 to i1, !dbg !11343
  br i1 %12, label %bb5, label %bb4, !dbg !11343

bb4:                                              ; preds = %bb5, %bb6
  %13 = load i8, ptr %_0, align 1, !dbg !11344
  %14 = trunc nuw i8 %13 to i1, !dbg !11344
  ret i1 %14, !dbg !11344

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11343

bb1:                                              ; No predecessors!
  unreachable, !dbg !11336
}

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8cd779081db56cecE"(ptr align 1 %0, ptr align 4 %1) unnamed_addr #0 !dbg !11345 {
start:
  %val.dbg.spill = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !11364, !DIExpression(), !11367)
  %2 = load ptr, ptr %self, align 4, !dbg !11368
  %3 = ptrtoint ptr %2 to i32, !dbg !11368
  %4 = icmp eq i32 %3, 0, !dbg !11368
  %_2 = select i1 %4, i32 0, i32 1, !dbg !11368
  %5 = trunc nuw i32 %_2 to i1, !dbg !11369
  br i1 %5, label %bb3, label %bb2, !dbg !11369

bb3:                                              ; preds = %start
  %val = load ptr, ptr %self, align 4, !dbg !11370
  store ptr %val, ptr %val.dbg.spill, align 4, !dbg !11370
    #dbg_declare(ptr %val.dbg.spill, !11365, !DIExpression(), !11371)
  ret ptr %val, !dbg !11372

bb2:                                              ; preds = %start
; call core::hint::unreachable_unchecked
  call void @_ZN4core4hint21unreachable_unchecked17h7e1a5f992e546fadE(ptr align 4 %1) #14, !dbg !11373
  unreachable, !dbg !11373

bb1:                                              ; No predecessors!
  unreachable, !dbg !11368
}

; core::option::Option<T>::get_or_insert_with
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h29a568fae5f3c471E"(ptr align 1 %self, ptr align 4 %f) unnamed_addr #0 !dbg !11374 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11381, !DIExpression(), !11383)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !11382, !DIExpression(), !11384)
  store i8 0, ptr %_8, align 1, !dbg !11385
  store i8 1, ptr %_8, align 1, !dbg !11385
  %0 = load i8, ptr %self, align 1, !dbg !11386
  %1 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11386
  %2 = load i8, ptr %1, align 1, !dbg !11386
  %3 = icmp eq i8 %0, 2, !dbg !11386
  %_3 = select i1 %3, i32 0, i32 1, !dbg !11386
  %4 = trunc nuw i32 %_3 to i1, !dbg !11387
  br i1 %4, label %bb4, label %bb1, !dbg !11387

bb4:                                              ; preds = %bb1, %start
; call core::option::Option<T>::as_mut
  %_7 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$6as_mut17h576f1aa5bf998e4eE"(ptr align 1 %self) #13, !dbg !11388
; call core::option::Option<T>::unwrap_unchecked
  %_0 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8cd779081db56cecE"(ptr align 1 %_7, ptr align 4 @alloc_b3137e60f77825c6fb095fd13357a058) #13, !dbg !11389
  %5 = load i8, ptr %_8, align 1, !dbg !11390
  %6 = trunc nuw i8 %5 to i1, !dbg !11390
  br i1 %6, label %bb8, label %bb7, !dbg !11390

bb1:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !11391
; call core::iter::adapters::peekable::Peekable<I>::peek::{{closure}}
  %7 = call { i1, i8 } @"_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17h71a4ea1f4f1e70a5E"(ptr align 4 %f) #13, !dbg !11391
  %_5.0 = extractvalue { i1, i8 } %7, 0, !dbg !11391
  %_5.1 = extractvalue { i1, i8 } %7, 1, !dbg !11391
  %_4.0 = zext i1 %_5.0 to i8, !dbg !11392
  store i8 %_4.0, ptr %self, align 1, !dbg !11393
  %8 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11393
  store i8 %_5.1, ptr %8, align 1, !dbg !11393
  br label %bb4, !dbg !11394

bb7:                                              ; preds = %bb8, %bb4
  ret ptr %_0, !dbg !11395

bb8:                                              ; preds = %bb4
  br label %bb7, !dbg !11390

bb9:                                              ; No predecessors!
  unreachable, !dbg !11396
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17h6817531c2f27cd6fE"(ptr align 4 %self, ptr align 1 %f) unnamed_addr #0 !dbg !11397 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_7 = alloca [8 x i8], align 4
  %x = alloca [8 x i8], align 4
  %_0 = alloca [2 x i8], align 1
    #dbg_declare(ptr %self, !11405, !DIExpression(), !11409)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !11406, !DIExpression(), !11410)
    #dbg_declare(ptr %x, !11407, !DIExpression(), !11411)
  store i8 0, ptr %_8, align 1, !dbg !11412
  store i8 1, ptr %_8, align 1, !dbg !11412
  %0 = load ptr, ptr %self, align 4, !dbg !11412
  %1 = ptrtoint ptr %0 to i32, !dbg !11412
  %2 = icmp eq i32 %1, 0, !dbg !11412
  %_3 = select i1 %2, i32 0, i32 1, !dbg !11412
  %3 = trunc nuw i32 %_3 to i1, !dbg !11413
  br i1 %3, label %bb3, label %bb2, !dbg !11413

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %x, ptr align 4 %self, i32 8, i1 false), !dbg !11414
  store i8 0, ptr %_8, align 1, !dbg !11415
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_7, ptr align 4 %x, i32 8, i1 false), !dbg !11415
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i8 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h35f121ff29b03874E"(ptr align 1 %f, ptr align 4 %_7) #13, !dbg !11415
  %4 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11416
  store i8 %_5, ptr %4, align 1, !dbg !11416
  store i8 1, ptr %_0, align 1, !dbg !11416
  br label %bb7, !dbg !11417

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !11418
  br label %bb7, !dbg !11418

bb7:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_8, align 1, !dbg !11419
  %6 = trunc nuw i8 %5 to i1, !dbg !11419
  br i1 %6, label %bb6, label %bb5, !dbg !11419

bb5:                                              ; preds = %bb6, %bb7
  %7 = load i8, ptr %_0, align 1, !dbg !11420
  %8 = trunc nuw i8 %7 to i1, !dbg !11420
  %9 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11420
  %10 = load i8, ptr %9, align 1, !dbg !11420
  %11 = insertvalue { i1, i8 } poison, i1 %8, 0, !dbg !11420
  %12 = insertvalue { i1, i8 } %11, i8 %10, 1, !dbg !11420
  ret { i1, i8 } %12, !dbg !11420

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !11419

bb1:                                              ; No predecessors!
  unreachable, !dbg !11412
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17h6c73ccf157d4d3deE"(ptr align 4 %self) unnamed_addr #0 !dbg !11421 {
start:
  %x.dbg.spill = alloca [8 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !11429, !DIExpression(), !11433)
    #dbg_declare(ptr %f.dbg.spill, !11430, !DIExpression(), !11434)
  store i8 0, ptr %_8, align 1, !dbg !11435
  store i8 1, ptr %_8, align 1, !dbg !11435
  %_3 = load i32, ptr %self, align 4, !dbg !11435
  %0 = trunc nuw i32 %_3 to i1, !dbg !11436
  br i1 %0, label %bb3, label %bb2, !dbg !11436

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11437
  %x.0 = load i32, ptr %1, align 4, !dbg !11437
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !11437
  %x.1 = load i32, ptr %2, align 4, !dbg !11437
  store i32 %x.0, ptr %x.dbg.spill, align 4, !dbg !11437
  %3 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 4, !dbg !11437
  store i32 %x.1, ptr %3, align 4, !dbg !11437
    #dbg_declare(ptr %x.dbg.spill, !11431, !DIExpression(), !11438)
  store i8 0, ptr %_8, align 1, !dbg !11439
; call core::str::<impl str>::find::{{closure}}
  %_5 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h31d63c40ab02e035E"(i32 %x.0, i32 %x.1) #13, !dbg !11439
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11440
  store i32 %_5, ptr %4, align 4, !dbg !11440
  store i32 1, ptr %_0, align 4, !dbg !11440
  br label %bb7, !dbg !11441

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !11442
  br label %bb7, !dbg !11442

bb7:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_8, align 1, !dbg !11443
  %6 = trunc nuw i8 %5 to i1, !dbg !11443
  br i1 %6, label %bb6, label %bb5, !dbg !11443

bb5:                                              ; preds = %bb6, %bb7
  %7 = load i32, ptr %_0, align 4, !dbg !11444
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11444
  %9 = load i32, ptr %8, align 4, !dbg !11444
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !11444
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !11444
  ret { i32, i32 } %11, !dbg !11444

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !11443

bb1:                                              ; No predecessors!
  unreachable, !dbg !11435
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17hb04a75bdada3252fE"(ptr align 4 %self) unnamed_addr #0 !dbg !11445 {
start:
  %x.dbg.spill = alloca [8 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !11452, !DIExpression(), !11456)
    #dbg_declare(ptr %f.dbg.spill, !11453, !DIExpression(), !11457)
  store i8 0, ptr %_8, align 1, !dbg !11458
  store i8 1, ptr %_8, align 1, !dbg !11458
  %_3 = load i32, ptr %self, align 4, !dbg !11458
  %0 = trunc nuw i32 %_3 to i1, !dbg !11459
  br i1 %0, label %bb3, label %bb2, !dbg !11459

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11460
  %x.0 = load i32, ptr %1, align 4, !dbg !11460
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !11460
  %x.1 = load i32, ptr %2, align 4, !dbg !11460
  store i32 %x.0, ptr %x.dbg.spill, align 4, !dbg !11460
  %3 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 4, !dbg !11460
  store i32 %x.1, ptr %3, align 4, !dbg !11460
    #dbg_declare(ptr %x.dbg.spill, !11454, !DIExpression(), !11461)
  store i8 0, ptr %_8, align 1, !dbg !11462
; call core::str::<impl str>::find::{{closure}}
  %_5 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h8b1e4e775925a075E"(i32 %x.0, i32 %x.1) #13, !dbg !11462
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11463
  store i32 %_5, ptr %4, align 4, !dbg !11463
  store i32 1, ptr %_0, align 4, !dbg !11463
  br label %bb7, !dbg !11464

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !11465
  br label %bb7, !dbg !11465

bb7:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_8, align 1, !dbg !11466
  %6 = trunc nuw i8 %5 to i1, !dbg !11466
  br i1 %6, label %bb6, label %bb5, !dbg !11466

bb5:                                              ; preds = %bb6, %bb7
  %7 = load i32, ptr %_0, align 4, !dbg !11467
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11467
  %9 = load i32, ptr %8, align 4, !dbg !11467
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !11467
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !11467
  ret { i32, i32 } %11, !dbg !11467

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !11466

bb1:                                              ; No predecessors!
  unreachable, !dbg !11458
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$3map17hce424b976cc90a2aE"(ptr align 4 %self) unnamed_addr #0 !dbg !11468 {
start:
  %x.dbg.spill = alloca [8 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !11475, !DIExpression(), !11479)
    #dbg_declare(ptr %f.dbg.spill, !11476, !DIExpression(), !11480)
  store i8 0, ptr %_8, align 1, !dbg !11481
  store i8 1, ptr %_8, align 1, !dbg !11481
  %_3 = load i32, ptr %self, align 4, !dbg !11481
  %0 = trunc nuw i32 %_3 to i1, !dbg !11482
  br i1 %0, label %bb3, label %bb2, !dbg !11482

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11483
  %x.0 = load i32, ptr %1, align 4, !dbg !11483
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !11483
  %x.1 = load i32, ptr %2, align 4, !dbg !11483
  store i32 %x.0, ptr %x.dbg.spill, align 4, !dbg !11483
  %3 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 4, !dbg !11483
  store i32 %x.1, ptr %3, align 4, !dbg !11483
    #dbg_declare(ptr %x.dbg.spill, !11477, !DIExpression(), !11484)
  store i8 0, ptr %_8, align 1, !dbg !11485
; call core::str::<impl str>::find::{{closure}}
  %_5 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h6c6ffe772a22f8efE"(i32 %x.0, i32 %x.1) #13, !dbg !11485
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11486
  store i32 %_5, ptr %4, align 4, !dbg !11486
  store i32 1, ptr %_0, align 4, !dbg !11486
  br label %bb7, !dbg !11487

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !11488
  br label %bb7, !dbg !11488

bb7:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_8, align 1, !dbg !11489
  %6 = trunc nuw i8 %5 to i1, !dbg !11489
  br i1 %6, label %bb6, label %bb5, !dbg !11489

bb5:                                              ; preds = %bb6, %bb7
  %7 = load i32, ptr %_0, align 4, !dbg !11490
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11490
  %9 = load i32, ptr %8, align 4, !dbg !11490
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !11490
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !11490
  ret { i32, i32 } %11, !dbg !11490

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !11489

bb1:                                              ; No predecessors!
  unreachable, !dbg !11481
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core6option15Option$LT$T$GT$3map17hf03f6be6515e1e43E"(i1 zeroext %0, i8 %1, ptr align 4 %f) unnamed_addr #0 !dbg !11491 {
start:
  %x.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [2 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
  %3 = getelementptr inbounds i8, ptr %self, i32 1
  store i8 %1, ptr %3, align 1
    #dbg_declare(ptr %self, !11499, !DIExpression(), !11503)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !11500, !DIExpression(), !11504)
  store i8 0, ptr %_8, align 1, !dbg !11505
  store i8 1, ptr %_8, align 1, !dbg !11505
  %4 = load i8, ptr %self, align 1, !dbg !11505
  %5 = trunc nuw i8 %4 to i1, !dbg !11505
  %6 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11505
  %7 = load i8, ptr %6, align 1, !dbg !11505
  %_3 = zext i1 %5 to i32, !dbg !11505
  %8 = trunc nuw i32 %_3 to i1, !dbg !11506
  br i1 %8, label %bb3, label %bb2, !dbg !11506

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11507
  %x = load i8, ptr %9, align 1, !dbg !11507
  store i8 %x, ptr %x.dbg.spill, align 1, !dbg !11507
    #dbg_declare(ptr %x.dbg.spill, !11501, !DIExpression(), !11508)
  store i8 0, ptr %_8, align 1, !dbg !11509
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}
  %_5 = call i32 @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h68868a0497e66bacE"(ptr align 4 %f, i8 %x) #13, !dbg !11509
  store i32 %_5, ptr %_0, align 4, !dbg !11510
  br label %bb7, !dbg !11511

bb2:                                              ; preds = %start
  store i32 1114113, ptr %_0, align 4, !dbg !11512
  br label %bb7, !dbg !11512

bb7:                                              ; preds = %bb3, %bb2
  %10 = load i8, ptr %_8, align 1, !dbg !11513
  %11 = trunc nuw i8 %10 to i1, !dbg !11513
  br i1 %11, label %bb6, label %bb5, !dbg !11513

bb5:                                              ; preds = %bb6, %bb7
  %12 = load i32, ptr %_0, align 4, !dbg !11514
  ret i32 %12, !dbg !11514

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !11513

bb1:                                              ; No predecessors!
  unreachable, !dbg !11505
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core6option15Option$LT$T$GT$3map17hf1f6c34191675129E"(i32 %0, ptr align 1 %f) unnamed_addr #0 !dbg !11515 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !11522, !DIExpression(), !11526)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !11523, !DIExpression(), !11527)
  store i8 0, ptr %_8, align 1, !dbg !11528
  store i8 1, ptr %_8, align 1, !dbg !11528
  %1 = load i32, ptr %self, align 4, !dbg !11528
  %2 = icmp eq i32 %1, 1114113, !dbg !11528
  %_3 = select i1 %2, i32 0, i32 1, !dbg !11528
  %3 = trunc nuw i32 %_3 to i1, !dbg !11529
  br i1 %3, label %bb3, label %bb2, !dbg !11529

bb3:                                              ; preds = %start
  %x = load i32, ptr %self, align 4, !dbg !11530
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !11530
    #dbg_declare(ptr %x.dbg.spill, !11524, !DIExpression(), !11531)
  store i8 0, ptr %_8, align 1, !dbg !11532
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i32 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hd23666a4b9597abeE"(ptr align 1 %f, i32 %x) #13, !dbg !11532
  store i32 %_5, ptr %_0, align 4, !dbg !11533
  br label %bb7, !dbg !11534

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !11535
  br label %bb7, !dbg !11535

bb7:                                              ; preds = %bb3, %bb2
  %4 = load i8, ptr %_8, align 1, !dbg !11536
  %5 = trunc nuw i8 %4 to i1, !dbg !11536
  br i1 %5, label %bb6, label %bb5, !dbg !11536

bb5:                                              ; preds = %bb6, %bb7
  %6 = load i32, ptr %_0, align 4, !dbg !11537
  ret i32 %6, !dbg !11537

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !11536

bb1:                                              ; No predecessors!
  unreachable, !dbg !11528
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6option15Option$LT$T$GT$3map17hfe66546d634bb094E"(ptr sret([8 x i8]) align 4 %_0, ptr align 1 %0, i32 %1, ptr align 1 %f) unnamed_addr #0 !dbg !11538 {
start:
  %x.dbg.spill = alloca [8 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_5 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !11559, !DIExpression(), !11563)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !11560, !DIExpression(), !11564)
  store i8 0, ptr %_8, align 1, !dbg !11565
  store i8 1, ptr %_8, align 1, !dbg !11565
  %3 = load ptr, ptr %self, align 4, !dbg !11565
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11565
  %5 = load i32, ptr %4, align 4, !dbg !11565
  %6 = ptrtoint ptr %3 to i32, !dbg !11565
  %7 = icmp eq i32 %6, 0, !dbg !11565
  %_3 = select i1 %7, i32 0, i32 1, !dbg !11565
  %8 = trunc nuw i32 %_3 to i1, !dbg !11566
  br i1 %8, label %bb3, label %bb2, !dbg !11566

bb3:                                              ; preds = %start
  %x.0 = load ptr, ptr %self, align 4, !dbg !11567
  %9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11567
  %x.1 = load i32, ptr %9, align 4, !dbg !11567
  store ptr %x.0, ptr %x.dbg.spill, align 4, !dbg !11567
  %10 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 4, !dbg !11567
  store i32 %x.1, ptr %10, align 4, !dbg !11567
    #dbg_declare(ptr %x.dbg.spill, !11561, !DIExpression(), !11568)
  store i8 0, ptr %_8, align 1, !dbg !11569
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  call void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h92d84ce9a89a78eeE"(ptr sret([8 x i8]) align 4 %_5, ptr align 1 %f, ptr align 1 %x.0, i32 %x.1) #13, !dbg !11569
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_5, i32 8, i1 false), !dbg !11570
  br label %bb7, !dbg !11571

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !11572
  br label %bb7, !dbg !11572

bb7:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_8, align 1, !dbg !11573
  %12 = trunc nuw i8 %11 to i1, !dbg !11573
  br i1 %12, label %bb6, label %bb5, !dbg !11573

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !11574

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !11573

bb1:                                              ; No predecessors!
  unreachable, !dbg !11565
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core6option15Option$LT$T$GT$4take17h1a8617c700728f89E"(ptr align 4 %self) unnamed_addr #0 !dbg !11575 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11580, !DIExpression(), !11581)
; call core::mem::replace
  %_0 = call i32 @_ZN4core3mem7replace17he084a17bb7843eaeE(ptr align 4 %self, i32 1114112) #13, !dbg !11582
  ret i32 %_0, !dbg !11583
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN4core6option15Option$LT$T$GT$4take17h377d8dd2789ef001E"(ptr align 4 %self) unnamed_addr #0 !dbg !11584 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11589, !DIExpression(), !11590)
; call core::mem::replace
  %_0 = call align 4 ptr @_ZN4core3mem7replace17h527ec1d7ad9e7f53E(ptr align 4 %self, ptr align 4 null) #13, !dbg !11591
  ret ptr %_0, !dbg !11592
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nounwind
define dso_local { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$4take17h852553d9f7787cd7E"(ptr align 1 %self) unnamed_addr #0 !dbg !11593 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11598, !DIExpression(), !11599)
; call core::mem::replace
  %0 = call { i8, i8 } @_ZN4core3mem7replace17h4861124eed80d67bE(ptr align 1 %self, i8 2, i8 undef) #13, !dbg !11600
  %_0.0 = extractvalue { i8, i8 } %0, 0, !dbg !11600
  %_0.1 = extractvalue { i8, i8 } %0, 1, !dbg !11600
  %1 = insertvalue { i8, i8 } poison, i8 %_0.0, 0, !dbg !11601
  %2 = insertvalue { i8, i8 } %1, i8 %_0.1, 1, !dbg !11601
  ret { i8, i8 } %2, !dbg !11601
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h00599f24bf071ae6E"(ptr sret([8 x i8]) align 4 %_0, i32 %0, i32 %1, i1 zeroext %err) unnamed_addr #0 !dbg !11602 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [1 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !11621, !DIExpression(), !11625)
  %3 = zext i1 %err to i8
  store i8 %3, ptr %err.dbg.spill, align 1
    #dbg_declare(ptr %err.dbg.spill, !11622, !DIExpression(), !11626)
  store i8 0, ptr %_6, align 1, !dbg !11627
  store i8 1, ptr %_6, align 1, !dbg !11627
  %_3 = load i32, ptr %self, align 4, !dbg !11627
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11627
  %5 = load i32, ptr %4, align 4, !dbg !11627
  %6 = trunc nuw i32 %_3 to i1, !dbg !11628
  br i1 %6, label %bb3, label %bb2, !dbg !11628

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11629
  %v = load i32, ptr %7, align 4, !dbg !11629
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !11629
    #dbg_declare(ptr %v.dbg.spill, !11623, !DIExpression(), !11630)
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11631
  store i32 %v, ptr %8, align 4, !dbg !11631
  store i8 0, ptr %_0, align 4, !dbg !11631
  br label %bb6, !dbg !11632

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11633
  %9 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11634
  %10 = zext i1 %err to i8, !dbg !11634
  store i8 %10, ptr %9, align 1, !dbg !11634
  store i8 1, ptr %_0, align 4, !dbg !11634
  br label %bb6, !dbg !11635

bb6:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_6, align 1, !dbg !11636
  %12 = trunc nuw i8 %11 to i1, !dbg !11636
  br i1 %12, label %bb5, label %bb4, !dbg !11636

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !11637

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11636

bb1:                                              ; No predecessors!
  unreachable, !dbg !11627
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17h677952e0acfa512aE"(i1 zeroext %0, i8 %1) unnamed_addr #0 !dbg !11638 {
start:
  %v.dbg.spill = alloca [1 x i8], align 1
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self = alloca [2 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
  %3 = getelementptr inbounds i8, ptr %self, i32 1
  store i8 %1, ptr %3, align 1
    #dbg_declare(ptr %self, !11657, !DIExpression(), !11661)
    #dbg_declare(ptr %err.dbg.spill, !11658, !DIExpression(), !11662)
  store i8 0, ptr %_6, align 1, !dbg !11663
  store i8 1, ptr %_6, align 1, !dbg !11663
  %4 = load i8, ptr %self, align 1, !dbg !11663
  %5 = trunc nuw i8 %4 to i1, !dbg !11663
  %6 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11663
  %7 = load i8, ptr %6, align 1, !dbg !11663
  %_3 = zext i1 %5 to i32, !dbg !11663
  %8 = trunc nuw i32 %_3 to i1, !dbg !11664
  br i1 %8, label %bb3, label %bb2, !dbg !11664

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11665
  %v = load i8, ptr %9, align 1, !dbg !11665
  store i8 %v, ptr %v.dbg.spill, align 1, !dbg !11665
    #dbg_declare(ptr %v.dbg.spill, !11659, !DIExpression(), !11666)
  %10 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11667
  store i8 %v, ptr %10, align 1, !dbg !11667
  store i8 0, ptr %_0, align 1, !dbg !11667
  br label %bb6, !dbg !11668

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11669
  store i8 1, ptr %_0, align 1, !dbg !11670
  br label %bb6, !dbg !11671

bb6:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_6, align 1, !dbg !11672
  %12 = trunc nuw i8 %11 to i1, !dbg !11672
  br i1 %12, label %bb5, label %bb4, !dbg !11672

bb4:                                              ; preds = %bb5, %bb6
  %13 = load i8, ptr %_0, align 1, !dbg !11673
  %14 = trunc nuw i8 %13 to i1, !dbg !11673
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11673
  %16 = load i8, ptr %15, align 1, !dbg !11673
  %17 = insertvalue { i1, i8 } poison, i1 %14, 0, !dbg !11673
  %18 = insertvalue { i1, i8 } %17, i8 %16, 1, !dbg !11673
  ret { i1, i8 } %18, !dbg !11673

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11672

bb1:                                              ; No predecessors!
  unreachable, !dbg !11663
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6option15Option$LT$T$GT$5ok_or17hade4cfba7b663987E"(ptr sret([16 x i8]) align 8 %_0, i64 %0, i64 %1, i1 zeroext %err) unnamed_addr #0 !dbg !11674 {
start:
  %v.dbg.spill = alloca [8 x i8], align 8
  %err.dbg.spill = alloca [1 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i32 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !11679, !DIExpression(), !11683)
  %3 = zext i1 %err to i8
  store i8 %3, ptr %err.dbg.spill, align 1
    #dbg_declare(ptr %err.dbg.spill, !11680, !DIExpression(), !11684)
  store i8 0, ptr %_6, align 1, !dbg !11685
  store i8 1, ptr %_6, align 1, !dbg !11685
  %4 = load i64, ptr %self, align 8, !dbg !11685
  %5 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11685
  %6 = load i64, ptr %5, align 8, !dbg !11685
  %_3 = trunc i64 %4 to i32, !dbg !11685
  %7 = trunc nuw i32 %_3 to i1, !dbg !11686
  br i1 %7, label %bb3, label %bb2, !dbg !11686

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11687
  %v = load i64, ptr %8, align 8, !dbg !11687
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !11687
    #dbg_declare(ptr %v.dbg.spill, !11681, !DIExpression(), !11688)
  %9 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !11689
  store i64 %v, ptr %9, align 8, !dbg !11689
  store i8 0, ptr %_0, align 8, !dbg !11689
  br label %bb6, !dbg !11690

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11691
  %10 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11692
  %11 = zext i1 %err to i8, !dbg !11692
  store i8 %11, ptr %10, align 1, !dbg !11692
  store i8 1, ptr %_0, align 8, !dbg !11692
  br label %bb6, !dbg !11693

bb6:                                              ; preds = %bb3, %bb2
  %12 = load i8, ptr %_6, align 1, !dbg !11694
  %13 = trunc nuw i8 %12 to i1, !dbg !11694
  br i1 %13, label %bb5, label %bb4, !dbg !11694

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !11695

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11694

bb1:                                              ; No predecessors!
  unreachable, !dbg !11685
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hcf2fee6d0fd8baabE"(i32 %0, i32 %1) unnamed_addr #0 !dbg !11696 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !11701, !DIExpression(), !11705)
    #dbg_declare(ptr %err.dbg.spill, !11702, !DIExpression(), !11706)
  store i8 0, ptr %_6, align 1, !dbg !11707
  store i8 1, ptr %_6, align 1, !dbg !11707
  %_3 = load i32, ptr %self, align 4, !dbg !11707
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11707
  %4 = load i32, ptr %3, align 4, !dbg !11707
  %5 = trunc nuw i32 %_3 to i1, !dbg !11708
  br i1 %5, label %bb3, label %bb2, !dbg !11708

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11709
  %v = load i32, ptr %6, align 4, !dbg !11709
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !11709
    #dbg_declare(ptr %v.dbg.spill, !11703, !DIExpression(), !11710)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11711
  store i32 %v, ptr %7, align 4, !dbg !11711
  store i32 0, ptr %_0, align 4, !dbg !11711
  br label %bb6, !dbg !11712

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11713
  store i32 1, ptr %_0, align 4, !dbg !11714
  br label %bb6, !dbg !11715

bb6:                                              ; preds = %bb3, %bb2
  %8 = load i8, ptr %_6, align 1, !dbg !11716
  %9 = trunc nuw i8 %8 to i1, !dbg !11716
  br i1 %9, label %bb5, label %bb4, !dbg !11716

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i32, ptr %_0, align 4, !dbg !11717
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11717
  %12 = load i32, ptr %11, align 4, !dbg !11717
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !11717
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !11717
  ret { i32, i32 } %14, !dbg !11717

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11716

bb1:                                              ; No predecessors!
  unreachable, !dbg !11707
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hd5416943ed0b5e8cE"(ptr align 4 %0) unnamed_addr #0 !dbg !11718 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !11737, !DIExpression(), !11741)
    #dbg_declare(ptr %err.dbg.spill, !11738, !DIExpression(), !11742)
  store i8 0, ptr %_6, align 1, !dbg !11743
  store i8 1, ptr %_6, align 1, !dbg !11743
  %1 = load ptr, ptr %self, align 4, !dbg !11743
  %2 = ptrtoint ptr %1 to i32, !dbg !11743
  %3 = icmp eq i32 %2, 0, !dbg !11743
  %_3 = select i1 %3, i32 0, i32 1, !dbg !11743
  %4 = trunc nuw i32 %_3 to i1, !dbg !11744
  br i1 %4, label %bb3, label %bb2, !dbg !11744

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 4, !dbg !11745
  store ptr %v, ptr %v.dbg.spill, align 4, !dbg !11745
    #dbg_declare(ptr %v.dbg.spill, !11739, !DIExpression(), !11746)
  store ptr %v, ptr %_0, align 4, !dbg !11747
  br label %bb6, !dbg !11748

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11749
  store ptr null, ptr %_0, align 4, !dbg !11750
  br label %bb6, !dbg !11751

bb6:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_6, align 1, !dbg !11752
  %6 = trunc nuw i8 %5 to i1, !dbg !11752
  br i1 %6, label %bb5, label %bb4, !dbg !11752

bb4:                                              ; preds = %bb5, %bb6
  %7 = load ptr, ptr %_0, align 4, !dbg !11753
  ret ptr %7, !dbg !11753

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11752

bb1:                                              ; No predecessors!
  unreachable, !dbg !11743
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core6option15Option$LT$T$GT$5ok_or17he54f112823e43c6bE"(i32 %0) unnamed_addr #0 !dbg !11754 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !11759, !DIExpression(), !11763)
    #dbg_declare(ptr %err.dbg.spill, !11760, !DIExpression(), !11764)
  store i8 0, ptr %_6, align 1, !dbg !11765
  store i8 1, ptr %_6, align 1, !dbg !11765
  %1 = load i32, ptr %self, align 4, !dbg !11765
  %2 = icmp eq i32 %1, 1114112, !dbg !11765
  %_3 = select i1 %2, i32 0, i32 1, !dbg !11765
  %3 = trunc nuw i32 %_3 to i1, !dbg !11766
  br i1 %3, label %bb3, label %bb2, !dbg !11766

bb3:                                              ; preds = %start
  %v = load i32, ptr %self, align 4, !dbg !11767
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !11767
    #dbg_declare(ptr %v.dbg.spill, !11761, !DIExpression(), !11768)
  store i32 %v, ptr %_0, align 4, !dbg !11769
  br label %bb6, !dbg !11770

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11771
  store i32 1114112, ptr %_0, align 4, !dbg !11772
  br label %bb6, !dbg !11773

bb6:                                              ; preds = %bb3, %bb2
  %4 = load i8, ptr %_6, align 1, !dbg !11774
  %5 = trunc nuw i8 %4 to i1, !dbg !11774
  br i1 %5, label %bb5, label %bb4, !dbg !11774

bb4:                                              ; preds = %bb5, %bb6
  %6 = load i32, ptr %_0, align 4, !dbg !11775
  ret i32 %6, !dbg !11775

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11774

bb1:                                              ; No predecessors!
  unreachable, !dbg !11765
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !11776 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !11795, !DIExpression(), !11799)
    #dbg_declare(ptr %err.dbg.spill, !11796, !DIExpression(), !11800)
  store i8 0, ptr %_6, align 1, !dbg !11801
  store i8 1, ptr %_6, align 1, !dbg !11801
  %_3 = load i32, ptr %self, align 4, !dbg !11801
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11801
  %4 = load i32, ptr %3, align 4, !dbg !11801
  %5 = trunc nuw i32 %_3 to i1, !dbg !11802
  br i1 %5, label %bb3, label %bb2, !dbg !11802

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11803
  %v = load i32, ptr %6, align 4, !dbg !11803
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !11803
    #dbg_declare(ptr %v.dbg.spill, !11797, !DIExpression(), !11804)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11805
  store i32 %v, ptr %7, align 4, !dbg !11805
  store i32 0, ptr %_0, align 4, !dbg !11805
  br label %bb6, !dbg !11806

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11807
  store i32 1, ptr %_0, align 4, !dbg !11808
  br label %bb6, !dbg !11809

bb6:                                              ; preds = %bb3, %bb2
  %8 = load i8, ptr %_6, align 1, !dbg !11810
  %9 = trunc nuw i8 %8 to i1, !dbg !11810
  br i1 %9, label %bb5, label %bb4, !dbg !11810

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i32, ptr %_0, align 4, !dbg !11811
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11811
  %12 = load i32, ptr %11, align 4, !dbg !11811
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !11811
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !11811
  ret { i32, i32 } %14, !dbg !11811

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11810

bb1:                                              ; No predecessors!
  unreachable, !dbg !11801
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hef4aba97e8eb0582E"(i1 zeroext %0, i8 %1, i1 zeroext %err) unnamed_addr #0 !dbg !11812 {
start:
  %v.dbg.spill = alloca [1 x i8], align 1
  %err.dbg.spill = alloca [1 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self = alloca [2 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
  %3 = getelementptr inbounds i8, ptr %self, i32 1
  store i8 %1, ptr %3, align 1
    #dbg_declare(ptr %self, !11817, !DIExpression(), !11821)
  %4 = zext i1 %err to i8
  store i8 %4, ptr %err.dbg.spill, align 1
    #dbg_declare(ptr %err.dbg.spill, !11818, !DIExpression(), !11822)
  store i8 0, ptr %_6, align 1, !dbg !11823
  store i8 1, ptr %_6, align 1, !dbg !11823
  %5 = load i8, ptr %self, align 1, !dbg !11823
  %6 = trunc nuw i8 %5 to i1, !dbg !11823
  %7 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11823
  %8 = load i8, ptr %7, align 1, !dbg !11823
  %_3 = zext i1 %6 to i32, !dbg !11823
  %9 = trunc nuw i32 %_3 to i1, !dbg !11824
  br i1 %9, label %bb3, label %bb2, !dbg !11824

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11825
  %v = load i8, ptr %10, align 1, !dbg !11825
  store i8 %v, ptr %v.dbg.spill, align 1, !dbg !11825
    #dbg_declare(ptr %v.dbg.spill, !11819, !DIExpression(), !11826)
  %11 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11827
  store i8 %v, ptr %11, align 1, !dbg !11827
  store i8 0, ptr %_0, align 1, !dbg !11827
  br label %bb6, !dbg !11828

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !11829
  %12 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11830
  %13 = zext i1 %err to i8, !dbg !11830
  store i8 %13, ptr %12, align 1, !dbg !11830
  store i8 1, ptr %_0, align 1, !dbg !11830
  br label %bb6, !dbg !11831

bb6:                                              ; preds = %bb3, %bb2
  %14 = load i8, ptr %_6, align 1, !dbg !11832
  %15 = trunc nuw i8 %14 to i1, !dbg !11832
  br i1 %15, label %bb5, label %bb4, !dbg !11832

bb4:                                              ; preds = %bb5, %bb6
  %16 = load i8, ptr %_0, align 1, !dbg !11833
  %17 = trunc nuw i8 %16 to i1, !dbg !11833
  %18 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11833
  %19 = load i8, ptr %18, align 1, !dbg !11833
  %20 = insertvalue { i1, i8 } poison, i1 %17, 0, !dbg !11833
  %21 = insertvalue { i1, i8 } %20, i8 %19, 1, !dbg !11833
  ret { i1, i8 } %21, !dbg !11833

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11832

bb1:                                              ; No predecessors!
  unreachable, !dbg !11823
}

; core::option::Option<T>::as_mut
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core6option15Option$LT$T$GT$6as_mut17h576f1aa5bf998e4eE"(ptr align 1 %self) unnamed_addr #0 !dbg !11834 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11839, !DIExpression(), !11842)
  %0 = load i8, ptr %self, align 1, !dbg !11843
  %1 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11843
  %2 = load i8, ptr %1, align 1, !dbg !11843
  %3 = icmp eq i8 %0, 2, !dbg !11843
  %_2 = select i1 %3, i32 0, i32 1, !dbg !11843
  %4 = trunc nuw i32 %_2 to i1, !dbg !11844
  br i1 %4, label %bb3, label %bb2, !dbg !11844

bb3:                                              ; preds = %start
  store ptr %self, ptr %x.dbg.spill, align 4, !dbg !11845
    #dbg_declare(ptr %x.dbg.spill, !11840, !DIExpression(), !11846)
  store ptr %self, ptr %_0, align 4, !dbg !11847
  br label %bb4, !dbg !11848

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !11849
  br label %bb4, !dbg !11849

bb4:                                              ; preds = %bb3, %bb2
  %5 = load ptr, ptr %_0, align 4, !dbg !11850
  ret ptr %5, !dbg !11850

bb1:                                              ; No predecessors!
  unreachable, !dbg !11843
}

; core::option::Option<T>::as_ref
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core6option15Option$LT$T$GT$6as_ref17haf6527fc23ed4c92E"(ptr align 1 %self) unnamed_addr #0 !dbg !11851 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11857, !DIExpression(), !11860)
  %0 = load i8, ptr %self, align 1, !dbg !11861
  %1 = trunc nuw i8 %0 to i1, !dbg !11861
  %2 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11861
  %3 = load i8, ptr %2, align 1, !dbg !11861
  %_2 = zext i1 %1 to i32, !dbg !11861
  %4 = trunc nuw i32 %_2 to i1, !dbg !11862
  br i1 %4, label %bb3, label %bb2, !dbg !11862

bb3:                                              ; preds = %start
  %x = getelementptr inbounds i8, ptr %self, i32 1, !dbg !11863
  store ptr %x, ptr %x.dbg.spill, align 4, !dbg !11863
    #dbg_declare(ptr %x.dbg.spill, !11858, !DIExpression(), !11864)
  store ptr %x, ptr %_0, align 4, !dbg !11865
  br label %bb4, !dbg !11866

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !11867
  br label %bb4, !dbg !11867

bb4:                                              ; preds = %bb3, %bb2
  %5 = load ptr, ptr %_0, align 4, !dbg !11868
  ret ptr %5, !dbg !11868

bb1:                                              ; No predecessors!
  unreachable, !dbg !11861
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd4d1e8335c19c611E"(ptr align 4 %self) unnamed_addr #0 !dbg !11869 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11875, !DIExpression(), !11876)
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h8d778be9e1a85cf8E"(ptr align 4 %self) #13, !dbg !11877
  %_0 = xor i1 %_2, true, !dbg !11878
  ret i1 %_0, !dbg !11879
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E"(ptr align 4 %self) unnamed_addr #0 !dbg !11880 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11886, !DIExpression(), !11887)
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hf34a487b6900ef37E"(ptr align 4 %self) #13, !dbg !11888
  %_0 = xor i1 %_2, true, !dbg !11889
  ret i1 %_0, !dbg !11890
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h225c9ea2b583ce0fE"(ptr align 4 %self) unnamed_addr #0 !dbg !11891 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11897, !DIExpression(), !11898)
  %_2 = load i32, ptr %self, align 4, !dbg !11899
  %_0 = icmp eq i32 %_2, 1, !dbg !11900
  ret i1 %_0, !dbg !11902
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h8d778be9e1a85cf8E"(ptr align 4 %self) unnamed_addr #0 !dbg !11903 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11906, !DIExpression(), !11907)
  %0 = load ptr, ptr %self, align 4, !dbg !11908
  %1 = ptrtoint ptr %0 to i32, !dbg !11908
  %2 = icmp eq i32 %1, 0, !dbg !11908
  %_2 = select i1 %2, i32 0, i32 1, !dbg !11908
  %_0 = icmp eq i32 %_2, 1, !dbg !11909
  ret i1 %_0, !dbg !11911
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hf34a487b6900ef37E"(ptr align 4 %self) unnamed_addr #0 !dbg !11912 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11915, !DIExpression(), !11916)
  %0 = load ptr, ptr %self, align 4, !dbg !11917
  %1 = ptrtoint ptr %0 to i32, !dbg !11917
  %2 = icmp eq i32 %1, 0, !dbg !11917
  %_2 = select i1 %2, i32 0, i32 1, !dbg !11917
  %_0 = icmp eq i32 %_2, 1, !dbg !11918
  ret i1 %_0, !dbg !11920
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h53aae724df5e5824E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !11921 {
start:
  %x.dbg.spill = alloca [8 x i8], align 8
  %f.dbg.spill = alloca [0 x i8], align 1
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [16 x i8], align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i32 8
  store i64 %1, ptr %2, align 8
    #dbg_declare(ptr %self, !11929, !DIExpression(), !11933)
    #dbg_declare(ptr %f.dbg.spill, !11930, !DIExpression(), !11934)
  store i8 0, ptr %_7, align 1, !dbg !11935
  store i8 1, ptr %_7, align 1, !dbg !11935
  %3 = load i64, ptr %self, align 8, !dbg !11935
  %4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11935
  %5 = load i64, ptr %4, align 8, !dbg !11935
  %_3 = trunc i64 %3 to i32, !dbg !11935
  %6 = trunc nuw i32 %_3 to i1, !dbg !11936
  br i1 %6, label %bb3, label %bb2, !dbg !11936

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11937
  %x = load i64, ptr %7, align 8, !dbg !11937
  store i64 %x, ptr %x.dbg.spill, align 8, !dbg !11937
    #dbg_declare(ptr %x.dbg.spill, !11931, !DIExpression(), !11938)
  store i8 0, ptr %_7, align 1, !dbg !11939
; call rustc_demangle::v0::Printer::print_const::{{closure}}
  %8 = call { i32, i32 } @"_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h6fb5a04d6d462f37E"(i64 %x) #13, !dbg !11939
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !11939
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !11939
  store i32 %9, ptr %_0, align 4, !dbg !11939
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11939
  store i32 %10, ptr %11, align 4, !dbg !11939
  br label %bb6, !dbg !11939

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !11940
  br label %bb6, !dbg !11940

bb6:                                              ; preds = %bb3, %bb2
  %12 = load i8, ptr %_7, align 1, !dbg !11941
  %13 = trunc nuw i8 %12 to i1, !dbg !11941
  br i1 %13, label %bb5, label %bb4, !dbg !11941

bb4:                                              ; preds = %bb5, %bb6
  %14 = load i32, ptr %_0, align 4, !dbg !11942
  %15 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11942
  %16 = load i32, ptr %15, align 4, !dbg !11942
  %17 = insertvalue { i32, i32 } poison, i32 %14, 0, !dbg !11942
  %18 = insertvalue { i32, i32 } %17, i32 %16, 1, !dbg !11942
  ret { i32, i32 } %18, !dbg !11942

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11941

bb1:                                              ; No predecessors!
  unreachable, !dbg !11935
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core6option15Option$LT$T$GT$8and_then17h577cb2e29999f52fE"(i32 %0, i32 %1) unnamed_addr #0 !dbg !11943 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !11950, !DIExpression(), !11954)
    #dbg_declare(ptr %f.dbg.spill, !11951, !DIExpression(), !11955)
  store i8 0, ptr %_7, align 1, !dbg !11956
  store i8 1, ptr %_7, align 1, !dbg !11956
  %_3 = load i32, ptr %self, align 4, !dbg !11956
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11956
  %4 = load i32, ptr %3, align 4, !dbg !11956
  %5 = trunc nuw i32 %_3 to i1, !dbg !11957
  br i1 %5, label %bb3, label %bb2, !dbg !11957

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11958
  %x = load i32, ptr %6, align 4, !dbg !11958
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !11958
    #dbg_declare(ptr %x.dbg.spill, !11952, !DIExpression(), !11959)
  store i8 0, ptr %_7, align 1, !dbg !11960
; call core::ops::function::FnOnce::call_once
  %7 = call i32 @_ZN4core3ops8function6FnOnce9call_once17he18d56b5f027f6eaE(i32 %x) #13, !dbg !11960
  store i32 %7, ptr %_0, align 4, !dbg !11960
  br label %bb6, !dbg !11960

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !11961
  br label %bb6, !dbg !11961

bb6:                                              ; preds = %bb3, %bb2
  %8 = load i8, ptr %_7, align 1, !dbg !11962
  %9 = trunc nuw i8 %8 to i1, !dbg !11962
  br i1 %9, label %bb5, label %bb4, !dbg !11962

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i32, ptr %_0, align 4, !dbg !11963
  ret i32 %10, !dbg !11963

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11962

bb1:                                              ; No predecessors!
  unreachable, !dbg !11956
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h88ced2e301a24869E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #0 !dbg !11964 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !11971, !DIExpression(), !11975)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !11972, !DIExpression(), !11976)
  store i8 0, ptr %_7, align 1, !dbg !11977
  store i8 1, ptr %_7, align 1, !dbg !11977
  %_3 = load i32, ptr %self, align 4, !dbg !11977
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11977
  %4 = load i32, ptr %3, align 4, !dbg !11977
  %5 = trunc nuw i32 %_3 to i1, !dbg !11978
  br i1 %5, label %bb3, label %bb2, !dbg !11978

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11979
  %x = load i32, ptr %6, align 4, !dbg !11979
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !11979
    #dbg_declare(ptr %x.dbg.spill, !11973, !DIExpression(), !11980)
  store i8 0, ptr %_7, align 1, !dbg !11981
; call rustc_demangle::legacy::demangle::{{closure}}
  %7 = call { i32, i32 } @"_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17hede4034f9e44097fE"(ptr align 4 %f, i32 %x) #13, !dbg !11981
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !11981
  %9 = extractvalue { i32, i32 } %7, 1, !dbg !11981
  store i32 %8, ptr %_0, align 4, !dbg !11981
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11981
  store i32 %9, ptr %10, align 4, !dbg !11981
  br label %bb6, !dbg !11981

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !11982
  br label %bb6, !dbg !11982

bb6:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_7, align 1, !dbg !11983
  %12 = trunc nuw i8 %11 to i1, !dbg !11983
  br i1 %12, label %bb5, label %bb4, !dbg !11983

bb4:                                              ; preds = %bb5, %bb6
  %13 = load i32, ptr %_0, align 4, !dbg !11984
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11984
  %15 = load i32, ptr %14, align 4, !dbg !11984
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !11984
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !11984
  ret { i32, i32 } %17, !dbg !11984

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !11983

bb1:                                              ; No predecessors!
  unreachable, !dbg !11977
}

; core::option::Option<&T>::copied
; Function Attrs: nounwind
define dso_local { i1, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h09d9dcc23ede58a2E"(ptr align 1 %0) unnamed_addr #1 !dbg !11985 {
start:
  %v.dbg.spill = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !11990, !DIExpression(), !11993)
  %1 = load ptr, ptr %self, align 4, !dbg !11994
  %2 = ptrtoint ptr %1 to i32, !dbg !11994
  %3 = icmp eq i32 %2, 0, !dbg !11994
  %_2 = select i1 %3, i32 0, i32 1, !dbg !11994
  %4 = trunc nuw i32 %_2 to i1, !dbg !11995
  br i1 %4, label %bb3, label %bb2, !dbg !11995

bb3:                                              ; preds = %start
  %_4 = load ptr, ptr %self, align 4, !dbg !11996
  %v = load i8, ptr %_4, align 1, !dbg !11996
  store i8 %v, ptr %v.dbg.spill, align 1, !dbg !11996
    #dbg_declare(ptr %v.dbg.spill, !11991, !DIExpression(), !11997)
  %5 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11998
  store i8 %v, ptr %5, align 1, !dbg !11998
  store i8 1, ptr %_0, align 1, !dbg !11998
  br label %bb4, !dbg !11999

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !12000
  br label %bb4, !dbg !12000

bb4:                                              ; preds = %bb3, %bb2
  %6 = load i8, ptr %_0, align 1, !dbg !12001
  %7 = trunc nuw i8 %6 to i1, !dbg !12001
  %8 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !12001
  %9 = load i8, ptr %8, align 1, !dbg !12001
  %10 = insertvalue { i1, i8 } poison, i1 %7, 0, !dbg !12001
  %11 = insertvalue { i1, i8 } %10, i8 %9, 1, !dbg !12001
  ret { i1, i8 } %11, !dbg !12001

bb1:                                              ; No predecessors!
  unreachable, !dbg !11994
}

; core::result::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
define dso_local void @_ZN4core6result13unwrap_failed17h0e0ed4031502a6aaE(ptr align 1 %_msg.0, i32 %_msg.1, ptr align 1 %_error, ptr align 4 %0) unnamed_addr #3 !dbg !12002 {
start:
  %_error.dbg.spill = alloca [4 x i8], align 4
  %_msg.dbg.spill = alloca [8 x i8], align 4
  store ptr %_msg.0, ptr %_msg.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %_msg.dbg.spill, i32 4
  store i32 %_msg.1, ptr %1, align 4
    #dbg_declare(ptr %_msg.dbg.spill, !12006, !DIExpression(), !12008)
  store ptr %_error, ptr %_error.dbg.spill, align 4
    #dbg_declare(ptr %_error.dbg.spill, !12007, !DIExpression(), !12009)
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hb75f2f96287725c0E(ptr align 1 @alloc_476509aa7047bd805d630c6546685797, i32 14, ptr align 4 %0) #14, !dbg !12010
  unreachable, !dbg !12010
}

; core::result::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
define dso_local void @_ZN4core6result13unwrap_failed17hc345c55d2e5c7935E(ptr align 1 %_msg.0, i32 %_msg.1, ptr align 1 %_error, ptr align 4 %0) unnamed_addr #3 !dbg !12011 {
start:
  %_error.dbg.spill = alloca [4 x i8], align 4
  %_msg.dbg.spill = alloca [8 x i8], align 4
  store ptr %_msg.0, ptr %_msg.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %_msg.dbg.spill, i32 4
  store i32 %_msg.1, ptr %1, align 4
    #dbg_declare(ptr %_msg.dbg.spill, !12016, !DIExpression(), !12020)
  store ptr %_error, ptr %_error.dbg.spill, align 4
    #dbg_declare(ptr %_error.dbg.spill, !12017, !DIExpression(), !12021)
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hb75f2f96287725c0E(ptr align 1 @alloc_476509aa7047bd805d630c6546685797, i32 14, ptr align 4 %0) #14, !dbg !12022
  unreachable, !dbg !12022
}

; core::result::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
define dso_local void @_ZN4core6result13unwrap_failed17he611b33774b0aad1E(ptr align 1 %_msg.0, i32 %_msg.1, ptr align 1 %_error, ptr align 4 %0) unnamed_addr #3 !dbg !12023 {
start:
  %_error.dbg.spill = alloca [4 x i8], align 4
  %_msg.dbg.spill = alloca [8 x i8], align 4
  store ptr %_msg.0, ptr %_msg.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %_msg.dbg.spill, i32 4
  store i32 %_msg.1, ptr %1, align 4
    #dbg_declare(ptr %_msg.dbg.spill, !12028, !DIExpression(), !12032)
  store ptr %_error, ptr %_error.dbg.spill, align 4
    #dbg_declare(ptr %_error.dbg.spill, !12029, !DIExpression(), !12033)
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hb75f2f96287725c0E(ptr align 1 @alloc_476509aa7047bd805d630c6546685797, i32 14, ptr align 4 %0) #14, !dbg !12034
  unreachable, !dbg !12034
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h026ca7f6f03c9c84E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !12035 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !12058, !DIExpression(), !12061)
  %_2 = load i32, ptr %self, align 4, !dbg !12062
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12062
  %4 = load i32, ptr %3, align 4, !dbg !12062
  %5 = trunc nuw i32 %_2 to i1, !dbg !12063
  br i1 %5, label %bb2, label %bb3, !dbg !12063

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !12064
  br label %bb6, !dbg !12064

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12065
  %x = load i32, ptr %6, align 4, !dbg !12065
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !12065
    #dbg_declare(ptr %x.dbg.spill, !12059, !DIExpression(), !12066)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12067
  store i32 %x, ptr %7, align 4, !dbg !12067
  store i32 1, ptr %_0, align 4, !dbg !12067
  br label %bb6, !dbg !12068

bb6:                                              ; preds = %bb2, %bb3
  %_4 = load i32, ptr %self, align 4, !dbg !12069
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12069
  %9 = load i32, ptr %8, align 4, !dbg !12069
  %10 = trunc nuw i32 %_4 to i1, !dbg !12069
  br i1 %10, label %bb5, label %bb4, !dbg !12069

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !12069

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i32, ptr %_0, align 4, !dbg !12070
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12070
  %13 = load i32, ptr %12, align 4, !dbg !12070
  %14 = insertvalue { i32, i32 } poison, i32 %11, 0, !dbg !12070
  %15 = insertvalue { i32, i32 } %14, i32 %13, 1, !dbg !12070
  ret { i32, i32 } %15, !dbg !12070

bb1:                                              ; No predecessors!
  unreachable, !dbg !12062
}

; core::result::Result<T,E>::ok
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h4ef62c8721f928a9E"(ptr align 4 %self) unnamed_addr #0 !dbg !12071 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !12076, !DIExpression(), !12079)
  %0 = load i8, ptr %self, align 4, !dbg !12080
  %1 = trunc nuw i8 %0 to i1, !dbg !12080
  %_2 = zext i1 %1 to i32, !dbg !12080
  %2 = trunc nuw i32 %_2 to i1, !dbg !12081
  br i1 %2, label %bb2, label %bb3, !dbg !12081

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !12082
  br label %bb6, !dbg !12082

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12083
  %x = load i32, ptr %3, align 4, !dbg !12083
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !12083
    #dbg_declare(ptr %x.dbg.spill, !12077, !DIExpression(), !12084)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12085
  store i32 %x, ptr %4, align 4, !dbg !12085
  store i32 1, ptr %_0, align 4, !dbg !12085
  br label %bb6, !dbg !12086

bb6:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %self, align 4, !dbg !12087
  %6 = trunc nuw i8 %5 to i1, !dbg !12087
  %_4 = zext i1 %6 to i32, !dbg !12087
  %7 = trunc nuw i32 %_4 to i1, !dbg !12087
  br i1 %7, label %bb5, label %bb4, !dbg !12087

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !12087

bb4:                                              ; preds = %bb5, %bb6
  %8 = load i32, ptr %_0, align 4, !dbg !12088
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12088
  %10 = load i32, ptr %9, align 4, !dbg !12088
  %11 = insertvalue { i32, i32 } poison, i32 %8, 0, !dbg !12088
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1, !dbg !12088
  ret { i32, i32 } %12, !dbg !12088

bb1:                                              ; No predecessors!
  unreachable, !dbg !12080
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h3823fcfadbccdb7eE"(i32 %0, ptr %1) unnamed_addr #0 !dbg !12089 {
start:
  %e.dbg.spill = alloca [4 x i8], align 4
  %t.dbg.spill = alloca [4 x i8], align 4
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store ptr %1, ptr %2, align 4
    #dbg_declare(ptr %self, !12126, !DIExpression(), !12132)
    #dbg_declare(ptr %op.dbg.spill, !12127, !DIExpression(), !12133)
  store i8 0, ptr %_9, align 1, !dbg !12134
  store i8 1, ptr %_9, align 1, !dbg !12134
  %_3 = load i32, ptr %self, align 4, !dbg !12134
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12134
  %4 = load ptr, ptr %3, align 4, !dbg !12134
  %5 = trunc nuw i32 %_3 to i1, !dbg !12135
  br i1 %5, label %bb2, label %bb3, !dbg !12135

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12136
  %e = load ptr, ptr %6, align 4, !dbg !12136
  store ptr %e, ptr %e.dbg.spill, align 4, !dbg !12136
    #dbg_declare(ptr %e.dbg.spill, !12130, !DIExpression(), !12137)
  store ptr %e, ptr %_0, align 4, !dbg !12138
  br label %bb7, !dbg !12139

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12140
  %t = load ptr, ptr %7, align 4, !dbg !12140
  store ptr %t, ptr %t.dbg.spill, align 4, !dbg !12140
    #dbg_declare(ptr %t.dbg.spill, !12128, !DIExpression(), !12141)
  store i8 0, ptr %_9, align 1, !dbg !12142
; call rustc_demangle::v0::Printer::print_type::{{closure}}
  call void @"_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h75617aadb88e893eE"(ptr align 4 %t) #13, !dbg !12142
  store ptr null, ptr %_0, align 4, !dbg !12143
  br label %bb7, !dbg !12144

bb7:                                              ; preds = %bb2, %bb3
  %8 = load i8, ptr %_9, align 1, !dbg !12145
  %9 = trunc nuw i8 %8 to i1, !dbg !12145
  br i1 %9, label %bb6, label %bb5, !dbg !12145

bb5:                                              ; preds = %bb6, %bb7
  %10 = load ptr, ptr %_0, align 4, !dbg !12146
  ret ptr %10, !dbg !12146

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !12145

bb1:                                              ; No predecessors!
  unreachable, !dbg !12134
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h46ab6131e9df3958E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !12147 {
start:
  %t.dbg.spill = alloca [4 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !12171, !DIExpression(), !12177)
    #dbg_declare(ptr %op.dbg.spill, !12172, !DIExpression(), !12178)
    #dbg_declare(ptr %e.dbg.spill, !12175, !DIExpression(), !12179)
  store i8 0, ptr %_9, align 1, !dbg !12180
  store i8 1, ptr %_9, align 1, !dbg !12180
  %_3 = load i32, ptr %self, align 4, !dbg !12180
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12180
  %4 = load i32, ptr %3, align 4, !dbg !12180
  %5 = trunc nuw i32 %_3 to i1, !dbg !12181
  br i1 %5, label %bb2, label %bb3, !dbg !12181

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !12182
  br label %bb7, !dbg !12183

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12184
  %t = load i32, ptr %6, align 4, !dbg !12184
  store i32 %t, ptr %t.dbg.spill, align 4, !dbg !12184
    #dbg_declare(ptr %t.dbg.spill, !12173, !DIExpression(), !12185)
  store i8 0, ptr %_9, align 1, !dbg !12186
; call <rustc_demangle::Demangle as core::fmt::Display>::fmt::{{closure}}
  call void @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h7b51386fbdadce49E"(i32 %t) #13, !dbg !12186
  store i8 0, ptr %_0, align 1, !dbg !12187
  br label %bb7, !dbg !12188

bb7:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_9, align 1, !dbg !12189
  %8 = trunc nuw i8 %7 to i1, !dbg !12189
  br i1 %8, label %bb6, label %bb5, !dbg !12189

bb5:                                              ; preds = %bb6, %bb7
  %9 = load i8, ptr %_0, align 1, !dbg !12190
  %10 = trunc nuw i8 %9 to i1, !dbg !12190
  ret i1 %10, !dbg !12190

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !12189

bb1:                                              ; No predecessors!
  unreachable, !dbg !12180
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hbebfe392bb886fbcE"(ptr sret([8 x i8]) align 4 %_0, i32 %0, ptr %1, ptr align 1 %op) unnamed_addr #0 !dbg !12191 {
start:
  %e.dbg.spill = alloca [4 x i8], align 4
  %t.dbg.spill = alloca [4 x i8], align 4
  %op.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store ptr %1, ptr %2, align 4
    #dbg_declare(ptr %self, !12213, !DIExpression(), !12219)
  store ptr %op, ptr %op.dbg.spill, align 4
    #dbg_declare(ptr %op.dbg.spill, !12214, !DIExpression(), !12220)
  store i8 0, ptr %_9, align 1, !dbg !12221
  store i8 1, ptr %_9, align 1, !dbg !12221
  %_3 = load i32, ptr %self, align 4, !dbg !12221
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12221
  %4 = load ptr, ptr %3, align 4, !dbg !12221
  %5 = trunc nuw i32 %_3 to i1, !dbg !12222
  br i1 %5, label %bb2, label %bb3, !dbg !12222

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12223
  %e = load ptr, ptr %6, align 4, !dbg !12223
  store ptr %e, ptr %e.dbg.spill, align 4, !dbg !12223
    #dbg_declare(ptr %e.dbg.spill, !12217, !DIExpression(), !12224)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12225
  store ptr %e, ptr %7, align 4, !dbg !12225
  store i8 1, ptr %_0, align 4, !dbg !12225
  br label %bb7, !dbg !12226

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12227
  %t = load ptr, ptr %8, align 4, !dbg !12227
  store ptr %t, ptr %t.dbg.spill, align 4, !dbg !12227
    #dbg_declare(ptr %t.dbg.spill, !12215, !DIExpression(), !12228)
  store i8 0, ptr %_9, align 1, !dbg !12229
; call rustc_demangle::v0::Printer::eat::{{closure}}
  %_5 = call zeroext i1 @"_ZN14rustc_demangle2v07Printer3eat28_$u7b$$u7b$closure$u7d$$u7d$17h1c94e0b0cbbd40e4E"(ptr align 1 %op, ptr align 4 %t) #13, !dbg !12229
  %9 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !12230
  %10 = zext i1 %_5 to i8, !dbg !12230
  store i8 %10, ptr %9, align 1, !dbg !12230
  store i8 0, ptr %_0, align 4, !dbg !12230
  br label %bb7, !dbg !12231

bb7:                                              ; preds = %bb2, %bb3
  %11 = load i8, ptr %_9, align 1, !dbg !12232
  %12 = trunc nuw i8 %11 to i1, !dbg !12232
  br i1 %12, label %bb6, label %bb5, !dbg !12232

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !12233

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !12232

bb1:                                              ; No predecessors!
  unreachable, !dbg !12221
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1d584052583a1287E"(ptr align 1 %self) unnamed_addr #0 !dbg !12234 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12240, !DIExpression(), !12241)
  %0 = load i8, ptr %self, align 1, !dbg !12242
  %1 = trunc nuw i8 %0 to i1, !dbg !12242
  %_2 = zext i1 %1 to i32, !dbg !12242
  %_0 = icmp eq i32 %_2, 0, !dbg !12243
  ret i1 %_0, !dbg !12245
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) unnamed_addr #0 !dbg !12246 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12252, !DIExpression(), !12253)
  %0 = load ptr, ptr %self, align 4, !dbg !12254
  %1 = ptrtoint ptr %0 to i32, !dbg !12254
  %2 = icmp eq i32 %1, 0, !dbg !12254
  %_2 = select i1 %2, i32 1, i32 0, !dbg !12254
  %_0 = icmp eq i32 %_2, 0, !dbg !12255
  ret i1 %_0, !dbg !12257
}

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h92d2212bb452f8fdE"(ptr align 4 %self) unnamed_addr #0 !dbg !12258 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12264, !DIExpression(), !12265)
  %0 = load i32, ptr %self, align 4, !dbg !12266
  %1 = icmp eq i32 %0, 1114112, !dbg !12266
  %_2 = select i1 %1, i32 1, i32 0, !dbg !12266
  %_0 = icmp eq i32 %_2, 0, !dbg !12267
  ret i1 %_0, !dbg !12269
}

; core::result::Result<T,E>::as_mut
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17h801a85e9aa54c889E"(ptr align 4 %self) unnamed_addr #0 !dbg !12270 {
start:
  %x.dbg.spill1 = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12275, !DIExpression(), !12280)
  %0 = load ptr, ptr %self, align 4, !dbg !12281
  %1 = ptrtoint ptr %0 to i32, !dbg !12281
  %2 = icmp eq i32 %1, 0, !dbg !12281
  %_2 = select i1 %2, i32 1, i32 0, !dbg !12281
  %3 = trunc nuw i32 %_2 to i1, !dbg !12282
  br i1 %3, label %bb2, label %bb3, !dbg !12282

bb2:                                              ; preds = %start
  %x = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12283
  store ptr %x, ptr %x.dbg.spill1, align 4, !dbg !12283
    #dbg_declare(ptr %x.dbg.spill1, !12278, !DIExpression(), !12284)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12285
  store ptr %x, ptr %4, align 4, !dbg !12285
  store i32 1, ptr %_0, align 4, !dbg !12285
  br label %bb4, !dbg !12286

bb3:                                              ; preds = %start
  store ptr %self, ptr %x.dbg.spill, align 4, !dbg !12287
    #dbg_declare(ptr %x.dbg.spill, !12276, !DIExpression(), !12288)
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12289
  store ptr %self, ptr %5, align 4, !dbg !12289
  store i32 0, ptr %_0, align 4, !dbg !12289
  br label %bb4, !dbg !12290

bb4:                                              ; preds = %bb2, %bb3
  %6 = load i32, ptr %_0, align 4, !dbg !12291
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12291
  %8 = load ptr, ptr %7, align 4, !dbg !12291
  %9 = insertvalue { i32, ptr } poison, i32 %6, 0, !dbg !12291
  %10 = insertvalue { i32, ptr } %9, ptr %8, 1, !dbg !12291
  ret { i32, ptr } %10, !dbg !12291

bb1:                                              ; No predecessors!
  unreachable, !dbg !12281
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1764e143a7407ec9E"(i1 zeroext %0, ptr align 1 %msg.0, i32 %msg.1, ptr align 4 %1) unnamed_addr #0 !dbg !12292 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %t.dbg.spill = alloca [0 x i8], align 1
  %e = alloca [0 x i8], align 1
  %self = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
    #dbg_declare(ptr %t.dbg.spill, !12299, !DIExpression(), !12303)
    #dbg_declare(ptr %self, !12297, !DIExpression(), !12304)
  store ptr %msg.0, ptr %msg.dbg.spill, align 4
  %3 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4
  store i32 %msg.1, ptr %3, align 4
    #dbg_declare(ptr %msg.dbg.spill, !12298, !DIExpression(), !12305)
    #dbg_declare(ptr %e, !12301, !DIExpression(), !12306)
  %4 = load i8, ptr %self, align 1, !dbg !12307
  %5 = trunc nuw i8 %4 to i1, !dbg !12307
  %_3 = zext i1 %5 to i32, !dbg !12307
  %6 = trunc nuw i32 %_3 to i1, !dbg !12308
  br i1 %6, label %bb2, label %bb3, !dbg !12308

bb2:                                              ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17hbb00ed45a9f740bcE(ptr align 1 %msg.0, i32 %msg.1, ptr align 1 %e, ptr align 4 %1) #14, !dbg !12309
  unreachable, !dbg !12309

bb3:                                              ; preds = %start
  ret void, !dbg !12310

bb1:                                              ; No predecessors!
  unreachable, !dbg !12307
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hff1b4d75a7d9669bE"(i1 zeroext %0, ptr align 1 %msg.0, i32 %msg.1, ptr align 4 %1) unnamed_addr #0 !dbg !12311 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %t.dbg.spill = alloca [0 x i8], align 1
  %e = alloca [0 x i8], align 1
  %self = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
    #dbg_declare(ptr %t.dbg.spill, !12318, !DIExpression(), !12322)
    #dbg_declare(ptr %self, !12316, !DIExpression(), !12323)
  store ptr %msg.0, ptr %msg.dbg.spill, align 4
  %3 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4
  store i32 %msg.1, ptr %3, align 4
    #dbg_declare(ptr %msg.dbg.spill, !12317, !DIExpression(), !12324)
    #dbg_declare(ptr %e, !12320, !DIExpression(), !12325)
  %4 = load i8, ptr %self, align 1, !dbg !12326
  %5 = trunc nuw i8 %4 to i1, !dbg !12326
  %_3 = zext i1 %5 to i32, !dbg !12326
  %6 = trunc nuw i32 %_3 to i1, !dbg !12327
  br i1 %6, label %bb2, label %bb3, !dbg !12327

bb2:                                              ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17hc345c55d2e5c7935E(ptr align 1 %msg.0, i32 %msg.1, ptr align 1 %e, ptr align 4 %1) #14, !dbg !12328
  unreachable, !dbg !12328

bb3:                                              ; preds = %start
  ret void, !dbg !12329

bb1:                                              ; No predecessors!
  unreachable, !dbg !12326
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h08009cbfc403c79aE"(ptr align 4 %self) unnamed_addr #0 !dbg !12330 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12333, !DIExpression(), !12334)
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h92d2212bb452f8fdE"(ptr align 4 %self) #13, !dbg !12335
  %_0 = xor i1 %_2, true, !dbg !12336
  ret i1 %_0, !dbg !12337
}

; core::result::Result<T,E>::is_err
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h9015cb0eb6f1c0cbE"(ptr align 4 %self) unnamed_addr #0 !dbg !12338 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12341, !DIExpression(), !12342)
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E"(ptr align 4 %self) #13, !dbg !12343
  %_0 = xor i1 %_2, true, !dbg !12344
  ret i1 %_0, !dbg !12345
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha7b751e6c61210daE"(ptr align 4 %self) unnamed_addr #0 !dbg !12346 {
start:
  %e.dbg.spill = alloca [1 x i8], align 1
  %t.dbg.spill = alloca [4 x i8], align 4
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !12353, !DIExpression(), !12359)
    #dbg_declare(ptr %op.dbg.spill, !12354, !DIExpression(), !12360)
  store i8 0, ptr %_9, align 1, !dbg !12361
  store i8 1, ptr %_9, align 1, !dbg !12361
  %0 = load i8, ptr %self, align 4, !dbg !12361
  %1 = trunc nuw i8 %0 to i1, !dbg !12361
  %_3 = zext i1 %1 to i32, !dbg !12361
  %2 = trunc nuw i32 %_3 to i1, !dbg !12362
  br i1 %2, label %bb2, label %bb3, !dbg !12362

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !12363
  %4 = load i8, ptr %3, align 1, !dbg !12363
  %e = trunc nuw i8 %4 to i1, !dbg !12363
  %5 = zext i1 %e to i8, !dbg !12363
  store i8 %5, ptr %e.dbg.spill, align 1, !dbg !12363
    #dbg_declare(ptr %e.dbg.spill, !12357, !DIExpression(), !12364)
  store i8 0, ptr %_9, align 1, !dbg !12365
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
  call void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h7fa4d04787a81524E"(i1 zeroext %e) #13, !dbg !12365
  store i32 1, ptr %_0, align 4, !dbg !12366
  br label %bb7, !dbg !12367

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12368
  %t = load i32, ptr %6, align 4, !dbg !12368
  store i32 %t, ptr %t.dbg.spill, align 4, !dbg !12368
    #dbg_declare(ptr %t.dbg.spill, !12355, !DIExpression(), !12369)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12370
  store i32 %t, ptr %7, align 4, !dbg !12370
  store i32 0, ptr %_0, align 4, !dbg !12370
  br label %bb7, !dbg !12371

bb7:                                              ; preds = %bb2, %bb3
  %8 = load i8, ptr %_9, align 1, !dbg !12372
  %9 = trunc nuw i8 %8 to i1, !dbg !12372
  br i1 %9, label %bb6, label %bb5, !dbg !12372

bb5:                                              ; preds = %bb6, %bb7
  %10 = load i32, ptr %_0, align 4, !dbg !12373
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12373
  %12 = load i32, ptr %11, align 4, !dbg !12373
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !12373
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !12373
  ret { i32, i32 } %14, !dbg !12373

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !12372

bb1:                                              ; No predecessors!
  unreachable, !dbg !12361
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hef79f9295a042496E"(ptr align 4 %self) unnamed_addr #0 !dbg !12374 {
start:
  %t.dbg.spill = alloca [8 x i8], align 4
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_8 = alloca [8 x i8], align 4
  %e = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !12410, !DIExpression(), !12416)
    #dbg_declare(ptr %op.dbg.spill, !12411, !DIExpression(), !12417)
    #dbg_declare(ptr %e, !12414, !DIExpression(), !12418)
  store i8 0, ptr %_9, align 1, !dbg !12419
  store i8 1, ptr %_9, align 1, !dbg !12419
  %_3 = load i32, ptr %self, align 4, !dbg !12419
  %0 = trunc nuw i32 %_3 to i1, !dbg !12420
  br i1 %0, label %bb2, label %bb3, !dbg !12420

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12421
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %e, ptr align 4 %1, i32 8, i1 false), !dbg !12421
  store i8 0, ptr %_9, align 1, !dbg !12422
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %e, i32 8, i1 false), !dbg !12422
; call rustc_demangle::v0::HexNibbles::try_parse_str_chars::{{closure}}::{{closure}}::{{closure}}
  call void @"_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2238ed468dd3edbfE"(ptr align 4 %_8) #13, !dbg !12422
  store ptr null, ptr %_0, align 4, !dbg !12423
  br label %bb7, !dbg !12424

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12425
  %t.0 = load ptr, ptr %2, align 4, !dbg !12425
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !12425
  %t.1 = load i32, ptr %3, align 4, !dbg !12425
  store ptr %t.0, ptr %t.dbg.spill, align 4, !dbg !12425
  %4 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4, !dbg !12425
  store i32 %t.1, ptr %4, align 4, !dbg !12425
    #dbg_declare(ptr %t.dbg.spill, !12412, !DIExpression(), !12426)
  store ptr %t.0, ptr %_0, align 4, !dbg !12427
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12427
  store i32 %t.1, ptr %5, align 4, !dbg !12427
  br label %bb7, !dbg !12428

bb7:                                              ; preds = %bb2, %bb3
  %6 = load i8, ptr %_9, align 1, !dbg !12429
  %7 = trunc nuw i8 %6 to i1, !dbg !12429
  br i1 %7, label %bb6, label %bb5, !dbg !12429

bb5:                                              ; preds = %bb6, %bb7
  %8 = load ptr, ptr %_0, align 4, !dbg !12430
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12430
  %10 = load i32, ptr %9, align 4, !dbg !12430
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0, !dbg !12430
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1, !dbg !12430
  ret { ptr, i32 } %12, !dbg !12430

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !12429

bb1:                                              ; No predecessors!
  unreachable, !dbg !12419
}

; core::result::Result<T,E>::and_then
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h5d5c9f7ff2b56ee6E"(i32 %0, i32 %1, ptr align 4 %op) unnamed_addr #0 !dbg !12431 {
start:
  %t.dbg.spill = alloca [4 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !12443, !DIExpression(), !12449)
  store ptr %op, ptr %op.dbg.spill, align 4
    #dbg_declare(ptr %op.dbg.spill, !12444, !DIExpression(), !12450)
    #dbg_declare(ptr %e.dbg.spill, !12447, !DIExpression(), !12451)
  store i8 0, ptr %_8, align 1, !dbg !12452
  store i8 1, ptr %_8, align 1, !dbg !12452
  %_3 = load i32, ptr %self, align 4, !dbg !12452
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12452
  %4 = load i32, ptr %3, align 4, !dbg !12452
  %5 = trunc nuw i32 %_3 to i1, !dbg !12453
  br i1 %5, label %bb2, label %bb3, !dbg !12453

bb2:                                              ; preds = %start
  store i32 1, ptr %_0, align 4, !dbg !12454
  br label %bb6, !dbg !12455

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12456
  %t = load i32, ptr %6, align 4, !dbg !12456
  store i32 %t, ptr %t.dbg.spill, align 4, !dbg !12456
    #dbg_declare(ptr %t.dbg.spill, !12445, !DIExpression(), !12457)
  store i8 0, ptr %_8, align 1, !dbg !12458
; call <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str::{{closure}}
  %7 = call { i32, i32 } @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str28_$u7b$$u7b$closure$u7d$$u7d$17h6a74e2e22fa31566E"(ptr align 4 %op, i32 %t) #13, !dbg !12458
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !12458
  %9 = extractvalue { i32, i32 } %7, 1, !dbg !12458
  store i32 %8, ptr %_0, align 4, !dbg !12458
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12458
  store i32 %9, ptr %10, align 4, !dbg !12458
  br label %bb6, !dbg !12458

bb6:                                              ; preds = %bb2, %bb3
  %11 = load i8, ptr %_8, align 1, !dbg !12459
  %12 = trunc nuw i8 %11 to i1, !dbg !12459
  br i1 %12, label %bb5, label %bb4, !dbg !12459

bb4:                                              ; preds = %bb5, %bb6
  %13 = load i32, ptr %_0, align 4, !dbg !12460
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12460
  %15 = load i32, ptr %14, align 4, !dbg !12460
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !12460
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !12460
  ret { i32, i32 } %17, !dbg !12460

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !12459

bb1:                                              ; No predecessors!
  unreachable, !dbg !12452
}

; core::convert::num::<impl core::convert::TryFrom<u64> for u32>::try_from
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$u64$GT$$u20$for$u20$u32$GT$8try_from17h27b367f8cbb39d61E"(i64 %u) unnamed_addr #0 !dbg !12461 {
start:
  %u.dbg.spill = alloca [8 x i8], align 8
  %_0 = alloca [8 x i8], align 4
  store i64 %u, ptr %u.dbg.spill, align 8
    #dbg_declare(ptr %u.dbg.spill, !12468, !DIExpression(), !12469)
  %_2 = icmp ugt i64 %u, 4294967295, !dbg !12470
  br i1 %_2, label %bb1, label %bb2, !dbg !12470

bb2:                                              ; preds = %start
  %_4 = trunc i64 %u to i32, !dbg !12471
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12472
  store i32 %_4, ptr %0, align 4, !dbg !12472
  store i32 0, ptr %_0, align 4, !dbg !12472
  br label %bb3, !dbg !12473

bb1:                                              ; preds = %start
  store i32 1, ptr %_0, align 4, !dbg !12474
  br label %bb3, !dbg !12473

bb3:                                              ; preds = %bb1, %bb2
  %1 = load i32, ptr %_0, align 4, !dbg !12475
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12475
  %3 = load i32, ptr %2, align 4, !dbg !12475
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !12475
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !12475
  ret { i32, i32 } %5, !dbg !12475
}

; core::unicode::unicode_data::grapheme_extend::lookup
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc73f5eb56dcfd654E(i32 %0) unnamed_addr #0 !dbg !12476 {
start:
  %_0 = alloca [1 x i8], align 1
  %c = alloca [4 x i8], align 4
  store i32 %0, ptr %c, align 4
    #dbg_declare(ptr %c, !12482, !DIExpression(), !12483)
; call core::char::methods::<impl char>::is_ascii
  %_2 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h89a9b5d149c0c8f3E"(ptr align 4 %c) #13, !dbg !12484
  br i1 %_2, label %bb2, label %bb3, !dbg !12485

bb3:                                              ; preds = %start
  %_6 = load i32, ptr %c, align 4, !dbg !12486
  %_5 = icmp uge i32 %_6, 768, !dbg !12486
  br i1 %_5, label %bb4, label %bb5, !dbg !12486

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hb75f2f96287725c0E(ptr align 1 @alloc_62bb002bf8ca4b98cdd2b6cd0b17aa10, i32 31, ptr align 4 @alloc_86b983d6d39cb7735b01eb539ca09c4d) #14, !dbg !12487
  unreachable, !dbg !12487

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1, !dbg !12486
  br label %bb6, !dbg !12486

bb4:                                              ; preds = %bb3
  %1 = load i32, ptr %c, align 4, !dbg !12489
; call core::unicode::unicode_data::grapheme_extend::lookup_slow
  %2 = call zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend11lookup_slow17h2ce393a82cbd33bfE(i32 %1) #13, !dbg !12489
  %3 = zext i1 %2 to i8, !dbg !12489
  store i8 %3, ptr %_0, align 1, !dbg !12489
  br label %bb6, !dbg !12489

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_0, align 1, !dbg !12490
  %5 = trunc nuw i8 %4 to i1, !dbg !12490
  ret i1 %5, !dbg !12490
}

; core::panicking::panic_const::panic_const_div_by_zero
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h88371ca7b8e6cda6E(ptr align 4 %0) unnamed_addr #4 !dbg !12491 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_2ca80fe829e7dcbb4661228c202cce92) #13, !dbg !12495
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_2, ptr align 4 %0) #14, !dbg !12496
  unreachable, !dbg !12496
}

; core::panicking::panic_const::panic_const_rem_by_zero
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h32431b015c39caa9E(ptr align 4 %0) unnamed_addr #4 !dbg !12497 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_4a5d1f504800cbe61e09126ad8023985) #13, !dbg !12498
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_2, ptr align 4 %0) #14, !dbg !12499
  unreachable, !dbg !12499
}

; core::panicking::panic_const::panic_const_add_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 %0) unnamed_addr #4 !dbg !12500 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_491fd71eacc9ac6df50464189817658a) #13, !dbg !12501
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_2, ptr align 4 %0) #14, !dbg !12502
  unreachable, !dbg !12502
}

; core::panicking::panic_const::panic_const_mul_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE(ptr align 4 %0) unnamed_addr #4 !dbg !12503 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_3a541098c7af55f2d1b57c8374ee944e) #13, !dbg !12504
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_2, ptr align 4 %0) #14, !dbg !12505
  unreachable, !dbg !12505
}

; core::panicking::panic_const::panic_const_shl_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17h89fbc0eddd2d8f9cE(ptr align 4 %0) unnamed_addr #4 !dbg !12506 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_26eab6319fe0d02af8105663e6a2ea8b) #13, !dbg !12507
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_2, ptr align 4 %0) #14, !dbg !12508
  unreachable, !dbg !12508
}

; core::panicking::panic_const::panic_const_shr_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h660c746cd0aca9ccE(ptr align 4 %0) unnamed_addr #4 !dbg !12509 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_0f75c28593fb3281511a86ba9b3adf6f) #13, !dbg !12510
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_2, ptr align 4 %0) #14, !dbg !12511
  unreachable, !dbg !12511
}

; core::panicking::panic_const::panic_const_sub_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 %0) unnamed_addr #4 !dbg !12512 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_7daa13c2a11e2a3dbea9e2a29716d6f6) #13, !dbg !12513
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_2, ptr align 4 %0) #14, !dbg !12514
  unreachable, !dbg !12514
}

; core::panicking::panic_bounds_check
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E(i32 %index, i32 %len, ptr align 4 %0) unnamed_addr #4 !dbg !12515 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !12517, !DIExpression(), !12530)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !12518, !DIExpression(), !12531)
  call void @llvm.trap(), !dbg !12532
  unreachable, !dbg !12532
}

; core::panicking::panic_nounwind_fmt
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_nounwind_fmt17ha90b816b7292deffE(ptr align 4 %fmt, i1 zeroext %force_no_backtrace, ptr align 4 %0) unnamed_addr #4 !dbg !12533 {
start:
  %force_no_backtrace.dbg.spill = alloca [1 x i8], align 1
  %_3 = alloca [28 x i8], align 4
    #dbg_declare(ptr %fmt, !12537, !DIExpression(), !12539)
  %1 = zext i1 %force_no_backtrace to i8
  store i8 %1, ptr %force_no_backtrace.dbg.spill, align 1
    #dbg_declare(ptr %force_no_backtrace.dbg.spill, !12538, !DIExpression(), !12540)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %fmt, i32 24, i1 false), !dbg !12541
  %2 = getelementptr inbounds i8, ptr %_3, i32 24, !dbg !12541
  %3 = zext i1 %force_no_backtrace to i8, !dbg !12541
  store i8 %3, ptr %2, align 4, !dbg !12541
  %4 = getelementptr inbounds i8, ptr %_3, i32 24, !dbg !12543
  %5 = load i8, ptr %4, align 4, !dbg !12543
  %6 = trunc nuw i8 %5 to i1, !dbg !12543
; call core::panicking::panic_nounwind_fmt::runtime
  call void @_ZN4core9panicking18panic_nounwind_fmt7runtime17h35f83eea345343c8E(ptr align 4 %_3, i1 zeroext %6, ptr align 4 %0) #14, !dbg !12543
  unreachable, !dbg !12543
}

; core::panicking::panic_nounwind_fmt::runtime
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_nounwind_fmt7runtime17h35f83eea345343c8E(ptr align 4 %fmt, i1 zeroext %force_no_backtrace, ptr align 4 %0) unnamed_addr #4 !dbg !12544 {
start:
    #dbg_declare(ptr %fmt, !12547, !DIExpression(), !12558)
  %force_no_backtrace.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %force_no_backtrace to i8
  store i8 %1, ptr %force_no_backtrace.dbg.spill, align 1
    #dbg_declare(ptr %force_no_backtrace.dbg.spill, !12548, !DIExpression(), !12558)
  call void @llvm.trap(), !dbg !12559
  unreachable, !dbg !12559
}

; core::panicking::panic
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking5panic17hb75f2f96287725c0E(ptr align 1 %expr.0, i32 %expr.1, ptr align 4 %0) unnamed_addr #4 !dbg !12561 {
start:
  %expr.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  store ptr %expr.0, ptr %expr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %expr.dbg.spill, i32 4
  store i32 %expr.1, ptr %1, align 4
    #dbg_declare(ptr %expr.dbg.spill, !12565, !DIExpression(), !12566)
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_5, i32 0, !dbg !12567
  store ptr %expr.0, ptr %2, align 4, !dbg !12567
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !12567
  store i32 %expr.1, ptr %3, align 4, !dbg !12567
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 %_5) #13, !dbg !12568
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %_3, ptr align 4 %0) #14, !dbg !12569
  unreachable, !dbg !12569
}

; core::panicking::panic_fmt
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E(ptr align 4 %fmt, ptr align 4 %0) unnamed_addr #4 !dbg !12570 {
start:
    #dbg_declare(ptr %fmt, !12574, !DIExpression(), !12577)
  call void @llvm.trap(), !dbg !12578
  unreachable, !dbg !12578
}

; core::ub_checks::check_language_ub
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E() unnamed_addr #0 !dbg !12579 {
start:
  %_0 = alloca [1 x i8], align 1
  br label %bb1, !dbg !12583

bb1:                                              ; preds = %start
; call core::ub_checks::check_language_ub::runtime
  %0 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17h225159b3a0177380E() #13, !dbg !12584
  %1 = zext i1 %0 to i8, !dbg !12584
  store i8 %1, ptr %_0, align 1, !dbg !12584
  br label %bb3, !dbg !12584

bb3:                                              ; preds = %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !12586
  %3 = trunc nuw i8 %2 to i1, !dbg !12586
  ret i1 %3, !dbg !12586

bb2:                                              ; No predecessors!
  unreachable
}

; core::ub_checks::check_language_ub::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17h225159b3a0177380E() unnamed_addr #0 !dbg !12587 {
start:
  ret i1 true, !dbg !12589
}

; <&mut T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hffb09e4c131fa7cbE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !12590 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12593, !DIExpression(), !12595)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !12594, !DIExpression(), !12596)
  %_4.0 = load ptr, ptr %self, align 4, !dbg !12597
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12597
  %_4.1 = load i32, ptr %0, align 4, !dbg !12597
; call <[T] as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h80c722eaa0e19ab2E"(ptr align 1 %_4.0, i32 %_4.1, ptr align 4 %f) #13, !dbg !12598
  ret i1 %_0, !dbg !12599
}

; <&mut W as core::fmt::Write>::write_char
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E"(ptr align 4 %self, i32 %c) unnamed_addr #1 !dbg !12600 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12605, !DIExpression(), !12609)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !12606, !DIExpression(), !12610)
  %_3 = load ptr, ptr %self, align 4, !dbg !12611
; call <core::fmt::Formatter as core::fmt::Write>::write_char
  %_0 = call zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h5e29c1f2a6d66b9eE"(ptr align 4 %_3, i32 %c) #13, !dbg !12612
  ret i1 %_0, !dbg !12613
}

; <&mut W as core::fmt::Write>::write_str
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17he5558864c878b325E"(ptr align 4 %self, ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !12614 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12618, !DIExpression(), !12620)
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !12619, !DIExpression(), !12621)
  %_3 = load ptr, ptr %self, align 4, !dbg !12622
; call <core::fmt::Formatter as core::fmt::Write>::write_str
  %_0 = call zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h48b0fc9e06ffa4d1E"(ptr align 4 %_3, ptr align 1 %s.0, i32 %s.1) #13, !dbg !12623
  ret i1 %_0, !dbg !12624
}

; <char as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h01fd2c4c1501c2c1E"(i32 %self, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #0 !dbg !12625 {
start:
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [4 x i8], align 1
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12630, !DIExpression(), !12632)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %0, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !12631, !DIExpression(), !12633)
  call void @llvm.memset.p0.i32(ptr align 1 %_7, i8 0, i32 4, i1 false), !dbg !12634
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { ptr, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h10ba4a67745ca36cE"(i32 %self, ptr align 1 %_7, i32 4) #13, !dbg !12635
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12635
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12635
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h33657c4616047b53E"(ptr align 1 %_4.0, i32 %_4.1, ptr align 1 %haystack.0, i32 %haystack.1) #13, !dbg !12636
  ret i1 %_0, !dbg !12637
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nounwind
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h6479824b8c3f3205E"(ptr sret([28 x i8]) align 4 %_0, i32 %self, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #0 !dbg !12638 {
start:
  %utf8_size.dbg.spill = alloca [1 x i8], align 1
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_13 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12642, !DIExpression(), !12648)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %0, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !12643, !DIExpression(), !12649)
    #dbg_declare(ptr %utf8_encoded, !12644, !DIExpression(), !12650)
  call void @llvm.memset.p0.i32(ptr align 1 %utf8_encoded, i8 0, i32 4, i1 false), !dbg !12651
; call core::char::methods::<impl char>::encode_utf8
  %1 = call { ptr, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h10ba4a67745ca36cE"(i32 %self, ptr align 1 %utf8_encoded, i32 4) #13, !dbg !12652
  %_8.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12652
  %_8.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12652
; call core::str::<impl str>::len
  %_6 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %_8.0, i32 %_8.1) #13, !dbg !12653
; call <T as core::convert::TryInto<U>>::try_into
  %2 = call { i1, i8 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h94507e8e38261fb3E"(i32 %_6) #13, !dbg !12654
  %_5.0 = extractvalue { i1, i8 } %2, 0, !dbg !12654
  %_5.1 = extractvalue { i1, i8 } %2, 1, !dbg !12654
; call core::result::Result<T,E>::expect
  %utf8_size = call i8 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h25a284e1b3e4ad91E"(i1 zeroext %_5.0, i8 %_5.1, ptr align 1 @alloc_611ea47e56fe111765d49cc77e8ab451, i32 32, ptr align 4 @alloc_17214026076f72c4c7a8147b1ebab094) #13, !dbg !12655
  store i8 %utf8_size, ptr %utf8_size.dbg.spill, align 1, !dbg !12655
    #dbg_declare(ptr %utf8_size.dbg.spill, !12646, !DIExpression(), !12656)
; call core::str::<impl str>::len
  %_12 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %haystack.0, i32 %haystack.1) #13, !dbg !12657
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_13, ptr align 1 %utf8_encoded, i32 4, i1 false), !dbg !12658
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12659
  store ptr %haystack.0, ptr %3, align 4, !dbg !12659
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !12659
  store i32 %haystack.1, ptr %4, align 4, !dbg !12659
  %5 = getelementptr inbounds i8, ptr %_0, i32 12, !dbg !12659
  store i32 0, ptr %5, align 4, !dbg !12659
  %6 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !12659
  store i32 %_12, ptr %6, align 4, !dbg !12659
  store i32 %self, ptr %_0, align 4, !dbg !12659
  %7 = getelementptr inbounds i8, ptr %_0, i32 24, !dbg !12659
  store i8 %utf8_size, ptr %7, align 4, !dbg !12659
  %8 = getelementptr inbounds i8, ptr %_0, i32 20, !dbg !12659
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %8, ptr align 1 %_13, i32 4, i1 false), !dbg !12659
  ret void, !dbg !12660
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h532dcb3b1a459bc2E"(ptr align 1 %self, i32 %c) unnamed_addr #0 !dbg !12661 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12667, !DIExpression(), !12669)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !12668, !DIExpression(), !12670)
; call <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
  %_0 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h1803cecbaa853338E"(ptr align 1 %self, i32 %c) #13, !dbg !12671
  ret i1 %_0, !dbg !12672
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h33657c4616047b53E"(ptr align 1 %self.0, i32 %self.1, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #0 !dbg !12673 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12676, !DIExpression(), !12678)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %1, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !12677, !DIExpression(), !12679)
  store ptr %haystack.0, ptr %self.dbg.spill.i1, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %haystack.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !886, !DIExpression(), !12680)
  %3 = insertvalue { ptr, i32 } poison, ptr %haystack.0, 0, !dbg !12682
  %4 = insertvalue { ptr, i32 } %3, i32 %haystack.1, 1, !dbg !12682
  %_3.0 = extractvalue { ptr, i32 } %4, 0, !dbg !12683
  %_3.1 = extractvalue { ptr, i32 } %4, 1, !dbg !12683
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %5 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %5, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !12684)
  %6 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !12686
  %7 = insertvalue { ptr, i32 } %6, i32 %self.1, 1, !dbg !12686
  %_4.0 = extractvalue { ptr, i32 } %7, 0, !dbg !12687
  %_4.1 = extractvalue { ptr, i32 } %7, 1, !dbg !12687
; call core::slice::<impl [T]>::starts_with
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hb41f642e46021a01E"(ptr align 1 %_3.0, i32 %_3.1, ptr align 1 %_4.0, i32 %_4.1) #13, !dbg !12688
  ret i1 %_0, !dbg !12689
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nounwind
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h95307f884c112c16E"(ptr sret([64 x i8]) align 8 %_0, ptr align 1 %self.0, i32 %self.1, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #0 !dbg !12690 {
start:
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12694, !DIExpression(), !12696)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %1, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !12695, !DIExpression(), !12697)
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17hd72aa41e5ff4ca63E(ptr sret([64 x i8]) align 8 %_0, ptr align 1 %haystack.0, i32 %haystack.1, ptr align 1 %self.0, i32 %self.1) #13, !dbg !12698
  ret void, !dbg !12699
}

; <rustc_demangle::Demangle as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN61_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Debug$GT$3fmt17h01a431cad0884dfaE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !12700 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12705, !DIExpression(), !12707)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !12706, !DIExpression(), !12708)
; call <rustc_demangle::Demangle as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17ha772d1b5471cef65E"(ptr align 4 %self, ptr align 4 %f) #13, !dbg !12709
  ret i1 %_0, !dbg !12710
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1f5cac5415d8f7fdE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !12711 {
start:
    #dbg_declare(ptr %self, !12718, !DIExpression(), !12721)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 20, i1 false), !dbg !12722
  ret void, !dbg !12723
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h987fd98d61476583E"(i32 %self) unnamed_addr #0 !dbg !12724 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12728, !DIExpression(), !12731)
  ret i32 %self, !dbg !12732
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf3ad8c8bcc5e89e6E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !12733 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12737, !DIExpression(), !12738)
  %1 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !12739
  %2 = insertvalue { ptr, ptr } %1, ptr %self.1, 1, !dbg !12739
  ret { ptr, ptr } %2, !dbg !12739
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf8b66e604df8019dE"(ptr sret([40 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !12740 {
start:
    #dbg_declare(ptr %self, !12744, !DIExpression(), !12747)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 40, i1 false), !dbg !12748
  ret void, !dbg !12749
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfb0e42ba33413543E"(ptr sret([16 x i8]) align 8 %_0, i64 %self.0, i64 %self.1) unnamed_addr #0 !dbg !12750 {
start:
  %self.dbg.spill = alloca [16 x i8], align 8
  store i64 %self.0, ptr %self.dbg.spill, align 8
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 8
  store i64 %self.1, ptr %0, align 8
    #dbg_declare(ptr %self.dbg.spill, !12754, !DIExpression(), !12757)
  store i64 %self.0, ptr %_0, align 8, !dbg !12758
  %1 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !12758
  store i64 %self.1, ptr %1, align 8, !dbg !12758
  ret void, !dbg !12759
}

; <rustc_demangle::Demangle as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17ha772d1b5471cef65E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !12760 {
start:
  %size_limit_result.dbg.spill = alloca [1 x i8], align 1
  %args.dbg.spill6 = alloca [4 x i8], align 4
  %args.dbg.spill = alloca [4 x i8], align 4
  %alternate.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill5 = alloca [0 x i8], align 1
  %residual.dbg.spill4 = alloca [0 x i8], align 1
  %val.dbg.spill3 = alloca [0 x i8], align 1
  %residual.dbg.spill2 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_30 = alloca [8 x i8], align 4
  %args1 = alloca [8 x i8], align 4
  %_26 = alloca [24 x i8], align 4
  %_18 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_14 = alloca [24 x i8], align 4
  %fmt_result = alloca [1 x i8], align 1
  %size_limited_fmt = alloca [12 x i8], align 4
  %d = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12762, !DIExpression(), !12804)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !12763, !DIExpression(), !12805)
    #dbg_declare(ptr %d, !12768, !DIExpression(), !12806)
    #dbg_declare(ptr %size_limited_fmt, !12772, !DIExpression(), !12807)
    #dbg_declare(ptr %fmt_result, !12774, !DIExpression(), !12808)
    #dbg_declare(ptr %args, !12782, !DIExpression(), !12809)
    #dbg_declare(ptr %args1, !12791, !DIExpression(), !12810)
    #dbg_declare(ptr %residual.dbg.spill, !12764, !DIExpression(), !12811)
    #dbg_declare(ptr %val.dbg.spill, !12766, !DIExpression(), !12812)
    #dbg_declare(ptr %residual.dbg.spill2, !12796, !DIExpression(), !12813)
    #dbg_declare(ptr %val.dbg.spill3, !12798, !DIExpression(), !12814)
    #dbg_declare(ptr %residual.dbg.spill4, !12800, !DIExpression(), !12815)
    #dbg_declare(ptr %val.dbg.spill5, !12802, !DIExpression(), !12816)
  %_3 = load i32, ptr %self, align 4, !dbg !12817
  %0 = trunc nuw i32 %_3 to i1, !dbg !12818
  br i1 %0, label %bb2, label %bb3, !dbg !12818

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12819
  store ptr %1, ptr %d, align 4, !dbg !12819
; call core::fmt::Formatter::alternate
  %alternate = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h47450e30007958d8E(ptr align 4 %f) #13, !dbg !12820
  %2 = zext i1 %alternate to i8, !dbg !12820
  store i8 %2, ptr %alternate.dbg.spill, align 1, !dbg !12820
    #dbg_declare(ptr %alternate.dbg.spill, !12770, !DIExpression(), !12821)
  store i32 0, ptr %size_limited_fmt, align 4, !dbg !12822
  %3 = getelementptr inbounds i8, ptr %size_limited_fmt, i32 4, !dbg !12822
  store i32 1000000, ptr %3, align 4, !dbg !12822
  %4 = getelementptr inbounds i8, ptr %size_limited_fmt, i32 8, !dbg !12822
  store ptr %f, ptr %4, align 4, !dbg !12822
  br i1 %alternate, label %bb8, label %bb11, !dbg !12823

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !12824
  %_48.0 = load ptr, ptr %5, align 4, !dbg !12824
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !12824
  %_48.1 = load i32, ptr %6, align 4, !dbg !12824
; call core::fmt::Formatter::write_str
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 %_48.0, i32 %_48.1) #13, !dbg !12825
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_4 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_5) #13, !dbg !12826
  %_6 = zext i1 %_4 to i32, !dbg !12826
  %7 = trunc nuw i32 %_6 to i1, !dbg !12826
  br i1 %7, label %bb6, label %bb25, !dbg !12826

bb6:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %8 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6f5f220822aff22df4b7160b0c716d02) #13, !dbg !12827
  %9 = zext i1 %8 to i8, !dbg !12827
  store i8 %9, ptr %_0, align 1, !dbg !12827
  br label %bb26, !dbg !12827

bb25:                                             ; preds = %bb23, %bb18, %bb3
  %10 = getelementptr inbounds i8, ptr %self, i32 24, !dbg !12828
  %_51.0 = load ptr, ptr %10, align 4, !dbg !12828
  %11 = getelementptr inbounds i8, ptr %10, i32 4, !dbg !12828
  %_51.1 = load i32, ptr %11, align 4, !dbg !12828
; call core::fmt::Formatter::write_str
  %12 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 %_51.0, i32 %_51.1) #13, !dbg !12829
  %13 = zext i1 %12 to i8, !dbg !12829
  store i8 %13, ptr %_0, align 1, !dbg !12829
  br label %bb26, !dbg !12829

bb26:                                             ; preds = %bb24, %bb25, %bb21, %bb6
  %14 = load i8, ptr %_0, align 1, !dbg !12830
  %15 = trunc nuw i8 %14 to i1, !dbg !12830
  ret i1 %15, !dbg !12830

bb11:                                             ; preds = %bb2
  store ptr %d, ptr %args.dbg.spill, align 4, !dbg !12831
    #dbg_declare(ptr %args.dbg.spill, !12788, !DIExpression(), !12832)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17ha32fa88f3dd46c3bE(ptr sret([8 x i8]) align 4 %_30, ptr align 4 %d) #13, !dbg !12832
  %16 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args1, i32 0, !dbg !12832
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %16, ptr align 4 %_30, i32 8, i1 false), !dbg !12832
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_26, ptr align 4 @alloc_4b9523bd3933225a2ba132a1dcbebd94, ptr align 4 %args1) #13, !dbg !12810
; call core::fmt::Write::write_fmt
  %17 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h61407c8efb4119f8E(ptr align 4 %size_limited_fmt, ptr align 4 %_26) #13, !dbg !12831
  %18 = zext i1 %17 to i8, !dbg !12831
  store i8 %18, ptr %fmt_result, align 1, !dbg !12831
  br label %bb14, !dbg !12831

bb8:                                              ; preds = %bb2
  store ptr %d, ptr %args.dbg.spill6, align 4, !dbg !12833
    #dbg_declare(ptr %args.dbg.spill6, !12776, !DIExpression(), !12834)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17ha32fa88f3dd46c3bE(ptr sret([8 x i8]) align 4 %_18, ptr align 4 %d) #13, !dbg !12834
  %19 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !12834
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %19, ptr align 4 %_18, i32 8, i1 false), !dbg !12834
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1_formatted
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$16new_v1_formatted17h59f0ab9a669843b2E"(ptr sret([24 x i8]) align 4 %_14, ptr align 4 @alloc_4b9523bd3933225a2ba132a1dcbebd94, i32 1, ptr align 4 %args, i32 1, ptr align 4 @alloc_16e75092f5486e1166f3ee4e2e074cd2, i32 1) #13, !dbg !12809
; call core::fmt::Write::write_fmt
  %20 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17h61407c8efb4119f8E(ptr align 4 %size_limited_fmt, ptr align 4 %_14) #13, !dbg !12833
  %21 = zext i1 %20 to i8, !dbg !12833
  store i8 %21, ptr %fmt_result, align 1, !dbg !12833
  br label %bb14, !dbg !12833

bb14:                                             ; preds = %bb8, %bb11
  %_34.0 = load i32, ptr %size_limited_fmt, align 4, !dbg !12835
  %22 = getelementptr inbounds i8, ptr %size_limited_fmt, i32 4, !dbg !12835
  %_34.1 = load i32, ptr %22, align 4, !dbg !12835
; call core::result::Result<T,E>::map
  %size_limit_result = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h46ab6131e9df3958E"(i32 %_34.0, i32 %_34.1) #13, !dbg !12836
  %23 = zext i1 %size_limit_result to i8, !dbg !12836
  store i8 %23, ptr %size_limit_result.dbg.spill, align 1, !dbg !12836
    #dbg_declare(ptr %size_limit_result.dbg.spill, !12794, !DIExpression(), !12837)
  %24 = load i8, ptr %fmt_result, align 1, !dbg !12838
  %_36 = trunc nuw i8 %24 to i1, !dbg !12838
  %_38 = zext i1 %_36 to i32, !dbg !12839
  %25 = trunc nuw i32 %_38 to i1, !dbg !12840
  br i1 %25, label %bb17, label %bb16, !dbg !12840

bb17:                                             ; preds = %bb14
  %_37 = zext i1 %size_limit_result to i32, !dbg !12839
  %26 = trunc nuw i32 %_37 to i1, !dbg !12840
  br i1 %26, label %bb18, label %bb16, !dbg !12840

bb16:                                             ; preds = %bb17, %bb14
  %27 = load i8, ptr %fmt_result, align 1, !dbg !12841
  %_44 = trunc nuw i8 %27 to i1, !dbg !12841
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_43 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_44) #13, !dbg !12841
  %_45 = zext i1 %_43 to i32, !dbg !12841
  %28 = trunc nuw i32 %_45 to i1, !dbg !12841
  br i1 %28, label %bb24, label %bb23, !dbg !12841

bb18:                                             ; preds = %bb17
; call core::fmt::Formatter::write_str
  %_40 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 @alloc_27ffacb4abde6c4c830c0e3ca0ed6df1, i32 20) #13, !dbg !12842
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_39 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_40) #13, !dbg !12843
  %_42 = zext i1 %_39 to i32, !dbg !12843
  %29 = trunc nuw i32 %_42 to i1, !dbg !12843
  br i1 %29, label %bb21, label %bb25, !dbg !12843

bb21:                                             ; preds = %bb18
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %30 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f1952bfb31e00707305f4e64a422b95c) #13, !dbg !12844
  %31 = zext i1 %30 to i8, !dbg !12844
  store i8 %31, ptr %_0, align 1, !dbg !12844
  br label %bb26, !dbg !12844

bb24:                                             ; preds = %bb16
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %32 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_83ad38895c11908d68bf2f563ca774ff) #13, !dbg !12845
  %33 = zext i1 %32 to i8, !dbg !12845
  store i8 %33, ptr %_0, align 1, !dbg !12845
  br label %bb26, !dbg !12845

bb23:                                             ; preds = %bb16
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hff1b4d75a7d9669bE"(i1 zeroext %size_limit_result, ptr align 1 @alloc_d69701ad1f1a3d5f782a154cef3d422d, i32 55, ptr align 4 @alloc_f98e220ab508ba3b63016e55f3577ab1) #13, !dbg !12846
  br label %bb25, !dbg !12846

bb1:                                              ; No predecessors!
  unreachable, !dbg !12847
}

; <rustc_demangle::Demangle as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nounwind
define internal void @"_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h7b51386fbdadce49E"(i32 %_2) unnamed_addr #0 !dbg !12848 {
start:
  %_2.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !12852, !DIExpression(), !12854)
  store i32 %_2, ptr %_2.dbg.spill, align 4
    #dbg_declare(ptr %_2.dbg.spill, !12853, !DIExpression(), !12855)
  ret void, !dbg !12856
}

; <rustc_demangle::v0::Ident as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h20c03d2c4c158525E"(ptr align 4 %0, ptr align 4 %1) unnamed_addr #1 !dbg !12857 {
start:
  %f = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
  store ptr %1, ptr %f, align 4
    #dbg_declare(ptr %self, !12861, !DIExpression(), !12863)
    #dbg_declare(ptr %f, !12862, !DIExpression(), !12864)
  %2 = load ptr, ptr %self, align 4, !dbg !12865
; call rustc_demangle::v0::Ident::try_small_punycode_decode
  %_3 = call i8 @_ZN14rustc_demangle2v05Ident25try_small_punycode_decode17hbf78d80208464757E(ptr align 4 %2, ptr align 4 %f) #13, !dbg !12866
; call core::option::Option<T>::unwrap_or_else
  %_0 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17he7e1992d3fe7e189E"(i8 %_3, ptr align 4 %self, ptr align 4 %f, ptr align 4 @alloc_677f668e3a9503abedaddd46af61aee7) #13, !dbg !12867
  ret i1 %_0, !dbg !12868
}

; <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hb52346c60284c7a1E"(ptr align 4 %_1.0, ptr align 4 %_1.1) unnamed_addr #0 !dbg !12869 {
start:
  %val.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !12873, !DIExpression(DW_OP_deref), !12891)
    #dbg_declare(ptr %_1.dbg.spill, !12874, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !12892)
    #dbg_declare(ptr %residual.dbg.spill, !12875, !DIExpression(), !12893)
    #dbg_declare(ptr %val.dbg.spill, !12877, !DIExpression(), !12894)
    #dbg_declare(ptr %residual.dbg.spill1, !12879, !DIExpression(), !12895)
    #dbg_declare(ptr %val.dbg.spill2, !12881, !DIExpression(), !12896)
    #dbg_declare(ptr %residual.dbg.spill3, !12883, !DIExpression(), !12897)
    #dbg_declare(ptr %val.dbg.spill4, !12885, !DIExpression(), !12898)
    #dbg_declare(ptr %residual.dbg.spill5, !12887, !DIExpression(), !12899)
    #dbg_declare(ptr %val.dbg.spill6, !12889, !DIExpression(), !12900)
  %_20 = load ptr, ptr %_1.0, align 4, !dbg !12901
  %1 = getelementptr inbounds i8, ptr %_20, i32 8, !dbg !12901
  %_21.0 = load ptr, ptr %1, align 4, !dbg !12901
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !12901
  %_21.1 = load i32, ptr %2, align 4, !dbg !12901
; call core::str::<impl str>::is_empty
  %_2 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_21.0, i32 %_21.1) #13, !dbg !12902
  br i1 %_2, label %bb2, label %bb3, !dbg !12901

bb3:                                              ; preds = %start
  %_28 = load ptr, ptr %_1.1, align 4, !dbg !12903
; call core::fmt::Formatter::write_str
  %_4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_28, ptr align 1 @alloc_88ce7b92c6aafc569d4a4777274d809e, i32 9) #13, !dbg !12904
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_3 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_4) #13, !dbg !12903
  %_6 = zext i1 %_3 to i32, !dbg !12903
  %3 = trunc nuw i32 %_6 to i1, !dbg !12903
  br i1 %3, label %bb8, label %bb7, !dbg !12903

bb2:                                              ; preds = %start
  %_23 = load ptr, ptr %_1.1, align 4, !dbg !12905
  %_25 = load ptr, ptr %_1.0, align 4, !dbg !12906
  %_26.0 = load ptr, ptr %_25, align 4, !dbg !12906
  %4 = getelementptr inbounds i8, ptr %_25, i32 4, !dbg !12906
  %_26.1 = load i32, ptr %4, align 4, !dbg !12906
; call core::fmt::Formatter::write_str
  %5 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_23, ptr align 1 %_26.0, i32 %_26.1) #13, !dbg !12907
  %6 = zext i1 %5 to i8, !dbg !12907
  store i8 %6, ptr %_0, align 1, !dbg !12907
  br label %bb23, !dbg !12907

bb8:                                              ; preds = %bb3
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %7 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_37d9e268e28339e37fe0111861dca409) #13, !dbg !12908
  %8 = zext i1 %7 to i8, !dbg !12908
  store i8 %8, ptr %_0, align 1, !dbg !12908
  br label %bb23, !dbg !12908

bb7:                                              ; preds = %bb3
  %_30 = load ptr, ptr %_1.0, align 4, !dbg !12909
  %_31.0 = load ptr, ptr %_30, align 4, !dbg !12909
  %9 = getelementptr inbounds i8, ptr %_30, i32 4, !dbg !12909
  %_31.1 = load i32, ptr %9, align 4, !dbg !12909
; call core::str::<impl str>::is_empty
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E"(ptr align 1 %_31.0, i32 %_31.1) #13, !dbg !12910
  br i1 %_7, label %bb18, label %bb10, !dbg !12909

bb10:                                             ; preds = %bb7
  %_33 = load ptr, ptr %_1.1, align 4, !dbg !12911
  %_35 = load ptr, ptr %_1.0, align 4, !dbg !12912
  %_36.0 = load ptr, ptr %_35, align 4, !dbg !12912
  %10 = getelementptr inbounds i8, ptr %_35, i32 4, !dbg !12912
  %_36.1 = load i32, ptr %10, align 4, !dbg !12912
; call core::fmt::Formatter::write_str
  %_9 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_33, ptr align 1 %_36.0, i32 %_36.1) #13, !dbg !12913
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_8 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_9) #13, !dbg !12911
  %_10 = zext i1 %_8 to i32, !dbg !12911
  %11 = trunc nuw i32 %_10 to i1, !dbg !12911
  br i1 %11, label %bb14, label %bb13, !dbg !12911

bb18:                                             ; preds = %bb13, %bb7
  %_40 = load ptr, ptr %_1.1, align 4, !dbg !12914
  %_42 = load ptr, ptr %_1.0, align 4, !dbg !12915
  %12 = getelementptr inbounds i8, ptr %_42, i32 8, !dbg !12915
  %_43.0 = load ptr, ptr %12, align 4, !dbg !12915
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !12915
  %_43.1 = load i32, ptr %13, align 4, !dbg !12915
; call core::fmt::Formatter::write_str
  %_16 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_40, ptr align 1 %_43.0, i32 %_43.1) #13, !dbg !12916
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_15 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_16) #13, !dbg !12914
  %_17 = zext i1 %_15 to i32, !dbg !12914
  %14 = trunc nuw i32 %_17 to i1, !dbg !12914
  br i1 %14, label %bb22, label %bb21, !dbg !12914

bb14:                                             ; preds = %bb10
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %15 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_26bf217fdaad2408bdf1d219b6a30245) #13, !dbg !12917
  %16 = zext i1 %15 to i8, !dbg !12917
  store i8 %16, ptr %_0, align 1, !dbg !12917
  br label %bb23, !dbg !12917

bb13:                                             ; preds = %bb10
  %_38 = load ptr, ptr %_1.1, align 4, !dbg !12918
; call core::fmt::Formatter::write_str
  %_12 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_38, ptr align 1 @alloc_3bb2650aa074fcfb8c10a9c40791bfbc, i32 1) #13, !dbg !12919
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_11 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_12) #13, !dbg !12918
  %_14 = zext i1 %_11 to i32, !dbg !12918
  %17 = trunc nuw i32 %_14 to i1, !dbg !12918
  br i1 %17, label %bb17, label %bb18, !dbg !12918

bb17:                                             ; preds = %bb13
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %18 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ccea59e639831cff4c0dbfcb555f239a) #13, !dbg !12920
  %19 = zext i1 %18 to i8, !dbg !12920
  store i8 %19, ptr %_0, align 1, !dbg !12920
  br label %bb23, !dbg !12920

bb23:                                             ; preds = %bb2, %bb8, %bb22, %bb21, %bb14, %bb17
  %20 = load i8, ptr %_0, align 1, !dbg !12921
  %21 = trunc nuw i8 %20 to i1, !dbg !12921
  ret i1 %21, !dbg !12921

bb22:                                             ; preds = %bb18
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %22 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_293e1ae52fc2307e97f6de12faaf2236) #13, !dbg !12922
  %23 = zext i1 %22 to i8, !dbg !12922
  store i8 %23, ptr %_0, align 1, !dbg !12922
  br label %bb23, !dbg !12922

bb21:                                             ; preds = %bb18
  %_45 = load ptr, ptr %_1.1, align 4, !dbg !12923
; call core::fmt::Formatter::write_str
  %24 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %_45, ptr align 1 @alloc_fcd552ca5ffc948e1053f652f94fed71, i32 1) #13, !dbg !12924
  %25 = zext i1 %24 to i8, !dbg !12924
  store i8 %25, ptr %_0, align 1, !dbg !12924
  br label %bb23, !dbg !12924

bb6:                                              ; No predecessors!
  unreachable, !dbg !12925
}

; <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hf073745dc36faa3aE"(ptr align 4 %_1, ptr align 4 %chars.0, i32 %chars.1) unnamed_addr #0 !dbg !12927 {
start:
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %chars.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %c = alloca [4 x i8], align 4
  %_5 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !12932, !DIExpression(DW_OP_deref), !12941)
  store ptr %chars.0, ptr %chars.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %chars.dbg.spill, i32 4
  store i32 %chars.1, ptr %0, align 4
    #dbg_declare(ptr %chars.dbg.spill, !12931, !DIExpression(), !12942)
    #dbg_declare(ptr %iter, !12933, !DIExpression(), !12943)
    #dbg_declare(ptr %c, !12935, !DIExpression(), !12944)
    #dbg_declare(ptr %residual.dbg.spill, !12937, !DIExpression(), !12945)
    #dbg_declare(ptr %val.dbg.spill, !12939, !DIExpression(), !12946)
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h8f898a88fe006f77E"(ptr align 4 %chars.0, i32 %chars.1) #13, !dbg !12947
  %_3.0 = extractvalue { ptr, ptr } %1, 0, !dbg !12947
  %_3.1 = extractvalue { ptr, ptr } %1, 1, !dbg !12947
  store ptr %_3.0, ptr %iter, align 4, !dbg !12947
  %2 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !12947
  store ptr %_3.1, ptr %2, align 4, !dbg !12947
  br label %bb2, !dbg !12948

bb2:                                              ; preds = %bb5, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = call align 4 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hec7f0231dba8ce77E"(ptr align 4 %iter) #13, !dbg !12943
  store ptr %3, ptr %_5, align 4, !dbg !12943
  %4 = load ptr, ptr %_5, align 4, !dbg !12943
  %5 = ptrtoint ptr %4 to i32, !dbg !12943
  %6 = icmp eq i32 %5, 0, !dbg !12943
  %_7 = select i1 %6, i32 0, i32 1, !dbg !12943
  %7 = trunc nuw i32 %_7 to i1, !dbg !12943
  br i1 %7, label %bb5, label %bb6, !dbg !12943

bb5:                                              ; preds = %bb2
  %_13 = load ptr, ptr %_5, align 4, !dbg !12949
  %8 = load i32, ptr %_13, align 4, !dbg !12949
  store i32 %8, ptr %c, align 4, !dbg !12949
  %_15 = load ptr, ptr %_1, align 4, !dbg !12950
; call <char as core::fmt::Display>::fmt
  %_10 = call zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17he0e2483a667679bfE"(ptr align 4 %c, ptr align 4 %_15) #13, !dbg !12951
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_9 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_10) #13, !dbg !12952
  %_12 = zext i1 %_9 to i32, !dbg !12952
  %9 = trunc nuw i32 %_12 to i1, !dbg !12952
  br i1 %9, label %bb9, label %bb2, !dbg !12952

bb6:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !12953
  br label %bb10, !dbg !12954

bb10:                                             ; preds = %bb9, %bb6
  %10 = load i8, ptr %_0, align 1, !dbg !12954
  %11 = trunc nuw i8 %10 to i1, !dbg !12954
  ret i1 %11, !dbg !12954

bb9:                                              ; preds = %bb5
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %12 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f388cad9ad2c46079edbe88ef20a157f) #13, !dbg !12955
  %13 = zext i1 %12 to i8, !dbg !12955
  store i8 %13, ptr %_0, align 1, !dbg !12955
  br label %bb10, !dbg !12955

bb4:                                              ; No predecessors!
  unreachable, !dbg !12956
}

; <rustc_demangle::v0::Demangle as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN67_$LT$rustc_demangle..v0..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h39c2b6a802f41d5fE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !12958 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [16 x i8], align 4
  %_4 = alloca [16 x i8], align 4
  %printer = alloca [24 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12964, !DIExpression(), !12968)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !12965, !DIExpression(), !12969)
    #dbg_declare(ptr %printer, !12966, !DIExpression(), !12970)
  %_8.0 = load ptr, ptr %self, align 4, !dbg !12971
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12971
  %_8.1 = load i32, ptr %0, align 4, !dbg !12971
  store ptr %_8.0, ptr %_5, align 4, !dbg !12972
  %1 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !12972
  store i32 %_8.1, ptr %1, align 4, !dbg !12972
  %2 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !12972
  store i32 0, ptr %2, align 4, !dbg !12972
  %3 = getelementptr inbounds i8, ptr %_5, i32 12, !dbg !12972
  store i32 0, ptr %3, align 4, !dbg !12972
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_4, ptr align 4 %_5, i32 16, i1 false), !dbg !12973
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %printer, ptr align 4 %_4, i32 16, i1 false), !dbg !12974
  %4 = getelementptr inbounds i8, ptr %printer, i32 16, !dbg !12974
  store ptr %f, ptr %4, align 4, !dbg !12974
  %5 = getelementptr inbounds i8, ptr %printer, i32 20, !dbg !12974
  store i32 0, ptr %5, align 4, !dbg !12974
; call rustc_demangle::v0::Printer::print_path
  %_0 = call zeroext i1 @_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E(ptr align 4 %printer, i1 zeroext true) #13, !dbg !12975
  ret i1 %_0, !dbg !12976
}

; <rustc_demangle::DemangleStyle as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN68_$LT$rustc_demangle..DemangleStyle$u20$as$u20$core..fmt..Display$GT$3fmt17hc56a78af5d178756E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !12977 {
start:
  %d.dbg.spill1 = alloca [4 x i8], align 4
  %d.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12982, !DIExpression(), !12989)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !12983, !DIExpression(), !12990)
  %0 = load ptr, ptr %self, align 4, !dbg !12991
  %1 = ptrtoint ptr %0 to i32, !dbg !12991
  %2 = icmp eq i32 %1, 0, !dbg !12991
  %_3 = select i1 %2, i32 1, i32 0, !dbg !12991
  %3 = trunc nuw i32 %_3 to i1, !dbg !12992
  br i1 %3, label %bb2, label %bb3, !dbg !12992

bb2:                                              ; preds = %start
  %d = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12993
  store ptr %d, ptr %d.dbg.spill1, align 4, !dbg !12993
    #dbg_declare(ptr %d.dbg.spill1, !12987, !DIExpression(), !12994)
; call <rustc_demangle::v0::Demangle as core::fmt::Display>::fmt
  %4 = call zeroext i1 @"_ZN67_$LT$rustc_demangle..v0..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h39c2b6a802f41d5fE"(ptr align 4 %d, ptr align 4 %f) #13, !dbg !12995
  %5 = zext i1 %4 to i8, !dbg !12995
  store i8 %5, ptr %_0, align 1, !dbg !12995
  br label %bb4, !dbg !12995

bb3:                                              ; preds = %start
  store ptr %self, ptr %d.dbg.spill, align 4, !dbg !12996
    #dbg_declare(ptr %d.dbg.spill, !12984, !DIExpression(), !12997)
; call <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt
  %6 = call zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17hd5533434e0634126E"(ptr align 4 %self, ptr align 4 %f) #13, !dbg !12998
  %7 = zext i1 %6 to i8, !dbg !12998
  store i8 %7, ptr %_0, align 1, !dbg !12998
  br label %bb4, !dbg !12998

bb4:                                              ; preds = %bb2, %bb3
  %8 = load i8, ptr %_0, align 1, !dbg !12999
  %9 = trunc nuw i8 %8 to i1, !dbg !12999
  ret i1 %9, !dbg !12999

bb1:                                              ; No predecessors!
  unreachable, !dbg !12991
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17he857b0b19bc801f1E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !13000 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13005, !DIExpression(), !13010)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !13006, !DIExpression(), !13011)
  %0 = load i8, ptr %self, align 1, !dbg !13012
  %1 = trunc nuw i8 %0 to i1, !dbg !13012
  %2 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13012
  %3 = load i8, ptr %2, align 1, !dbg !13012
  %_6 = zext i1 %1 to i32, !dbg !13012
  %4 = trunc nuw i32 %_6 to i1, !dbg !13013
  br i1 %4, label %bb2, label %bb3, !dbg !13013

bb2:                                              ; preds = %start
  %5 = load i8, ptr %other, align 1, !dbg !13012
  %6 = trunc nuw i8 %5 to i1, !dbg !13012
  %7 = getelementptr inbounds i8, ptr %other, i32 1, !dbg !13012
  %8 = load i8, ptr %7, align 1, !dbg !13012
  %_4 = zext i1 %6 to i32, !dbg !13012
  %9 = trunc nuw i32 %_4 to i1, !dbg !13013
  br i1 %9, label %bb5, label %bb4, !dbg !13013

bb3:                                              ; preds = %start
  %10 = load i8, ptr %other, align 1, !dbg !13012
  %11 = trunc nuw i8 %10 to i1, !dbg !13012
  %12 = getelementptr inbounds i8, ptr %other, i32 1, !dbg !13012
  %13 = load i8, ptr %12, align 1, !dbg !13012
  %_5 = zext i1 %11 to i32, !dbg !13012
  %14 = icmp eq i32 %_5, 0, !dbg !13013
  %15 = zext i1 %14 to i8, !dbg !13013
  store i8 %15, ptr %_0, align 1, !dbg !13013
  br label %bb6, !dbg !13013

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %16 = load i8, ptr %_0, align 1, !dbg !13014
  %17 = trunc nuw i8 %16 to i1, !dbg !13014
  ret i1 %17, !dbg !13014

bb5:                                              ; preds = %bb2
  %l = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13015
  store ptr %l, ptr %l.dbg.spill, align 4, !dbg !13015
    #dbg_declare(ptr %l.dbg.spill, !13007, !DIExpression(), !13016)
  %r = getelementptr inbounds i8, ptr %other, i32 1, !dbg !13017
  store ptr %r, ptr %r.dbg.spill, align 4, !dbg !13017
    #dbg_declare(ptr %r.dbg.spill, !13009, !DIExpression(), !13018)
; call core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
  %18 = call zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h60e79f921649fd3dE"(ptr align 1 %l, ptr align 1 %r) #13, !dbg !13019
  %19 = zext i1 %18 to i8, !dbg !13019
  store i8 %19, ptr %_0, align 1, !dbg !13019
  br label %bb6, !dbg !13019

bb4:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !13020
  br label %bb6, !dbg !13020

bb1:                                              ; No predecessors!
  unreachable, !dbg !13012
}

; <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17hd5533434e0634126E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !13021 {
start:
  %t.dbg.spill.i = alloca [4 x i8], align 4
  %e.i = alloca [1 x i8], align 1
  %val.dbg.spill.i = alloca [4 x i8], align 4
  %self.i = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %all_lower_hex.dbg.spill = alloca [1 x i8], align 1
  %digits.dbg.spill = alloca [8 x i8], align 4
  %after_escape.dbg.spill = alloca [8 x i8], align 4
  %escape.dbg.spill = alloca [8 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %i.dbg.spill15 = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %element.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill12 = alloca [0 x i8], align 1
  %residual.dbg.spill11 = alloca [0 x i8], align 1
  %val.dbg.spill10 = alloca [0 x i8], align 1
  %residual.dbg.spill9 = alloca [0 x i8], align 1
  %val.dbg.spill8 = alloca [0 x i8], align 1
  %residual.dbg.spill7 = alloca [0 x i8], align 1
  %val.dbg.spill6 = alloca [0 x i8], align 1
  %residual.dbg.spill5 = alloca [0 x i8], align 1
  %val.dbg.spill4 = alloca [0 x i8], align 1
  %residual.dbg.spill3 = alloca [0 x i8], align 1
  %val.dbg.spill2 = alloca [0 x i8], align 1
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_128 = alloca [8 x i8], align 4
  %c = alloca [4 x i8], align 4
  %_116 = alloca [8 x i8], align 4
  %_115 = alloca [8 x i8], align 4
  %_112 = alloca [8 x i8], align 4
  %unescaped = alloca [8 x i8], align 4
  %_92 = alloca [12 x i8], align 4
  %_84 = alloca [8 x i8], align 4
  %_83 = alloca [16 x i8], align 4
  %_60 = alloca [8 x i8], align 4
  %_58 = alloca [4 x i8], align 4
  %_23 = alloca [8 x i8], align 4
  %_17 = alloca [8 x i8], align 4
  %rest = alloca [8 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %inner = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13025, !DIExpression(), !13082)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !13026, !DIExpression(), !13083)
    #dbg_declare(ptr %inner, !13027, !DIExpression(), !13084)
    #dbg_declare(ptr %iter, !13029, !DIExpression(), !13085)
    #dbg_declare(ptr %rest, !13033, !DIExpression(), !13086)
    #dbg_declare(ptr %unescaped, !13054, !DIExpression(), !13087)
    #dbg_declare(ptr %c, !13062, !DIExpression(), !13088)
    #dbg_declare(ptr %residual.dbg.spill, !13037, !DIExpression(), !13089)
    #dbg_declare(ptr %val.dbg.spill, !13039, !DIExpression(), !13090)
    #dbg_declare(ptr %residual.dbg.spill1, !13041, !DIExpression(), !13091)
    #dbg_declare(ptr %val.dbg.spill2, !13043, !DIExpression(), !13092)
    #dbg_declare(ptr %residual.dbg.spill3, !13045, !DIExpression(), !13093)
    #dbg_declare(ptr %val.dbg.spill4, !13047, !DIExpression(), !13094)
    #dbg_declare(ptr %residual.dbg.spill5, !13064, !DIExpression(), !13095)
    #dbg_declare(ptr %val.dbg.spill6, !13066, !DIExpression(), !13096)
    #dbg_declare(ptr %residual.dbg.spill7, !13068, !DIExpression(), !13097)
    #dbg_declare(ptr %val.dbg.spill8, !13070, !DIExpression(), !13098)
    #dbg_declare(ptr %residual.dbg.spill9, !13074, !DIExpression(), !13099)
    #dbg_declare(ptr %val.dbg.spill10, !13076, !DIExpression(), !13100)
    #dbg_declare(ptr %residual.dbg.spill11, !13078, !DIExpression(), !13101)
    #dbg_declare(ptr %val.dbg.spill12, !13080, !DIExpression(), !13102)
  %0 = load ptr, ptr %self, align 4, !dbg !13103
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13103
  %2 = load i32, ptr %1, align 4, !dbg !13103
  store ptr %0, ptr %inner, align 4, !dbg !13103
  %3 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !13103
  store i32 %2, ptr %3, align 4, !dbg !13103
  %4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13104
  %_6 = load i32, ptr %4, align 4, !dbg !13104
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %5 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 0, i32 %_6) #13, !dbg !13105
  %_4.0 = extractvalue { i32, i32 } %5, 0, !dbg !13105
  %_4.1 = extractvalue { i32, i32 } %5, 1, !dbg !13105
  store i32 %_4.0, ptr %iter, align 4, !dbg !13105
  %6 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !13105
  store i32 %_4.1, ptr %6, align 4, !dbg !13105
  br label %bb2, !dbg !13106

bb2:                                              ; preds = %bb119, %start
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %7 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter) #13, !dbg !13085
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13085
  %9 = extractvalue { i32, i32 } %7, 1, !dbg !13085
  store i32 %8, ptr %_8, align 4, !dbg !13085
  %10 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !13085
  store i32 %9, ptr %10, align 4, !dbg !13085
  %_10 = load i32, ptr %_8, align 4, !dbg !13085
  %11 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !13085
  %12 = load i32, ptr %11, align 4, !dbg !13085
  %13 = trunc nuw i32 %_10 to i1, !dbg !13085
  br i1 %13, label %bb5, label %bb123, !dbg !13085

bb5:                                              ; preds = %bb2
  %14 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !13107
  %element = load i32, ptr %14, align 4, !dbg !13107
  store i32 %element, ptr %element.dbg.spill, align 4, !dbg !13107
    #dbg_declare(ptr %element.dbg.spill, !13031, !DIExpression(), !13108)
  %15 = load ptr, ptr %inner, align 4, !dbg !13109
  %16 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !13109
  %17 = load i32, ptr %16, align 4, !dbg !13109
  store ptr %15, ptr %rest, align 4, !dbg !13109
  %18 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13109
  store i32 %17, ptr %18, align 4, !dbg !13109
  br label %bb6, !dbg !13110

bb123:                                            ; preds = %bb25, %bb2
  store i8 0, ptr %_0, align 1, !dbg !13111
  br label %bb124, !dbg !13112

bb6:                                              ; preds = %bb11, %bb5
  %_18.0 = load ptr, ptr %rest, align 4, !dbg !13113
  %19 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13113
  %_18.1 = load i32, ptr %19, align 4, !dbg !13113
; call core::str::<impl str>::chars
  %20 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %_18.0, i32 %_18.1) #13, !dbg !13114
  %21 = extractvalue { ptr, ptr } %20, 0, !dbg !13114
  %22 = extractvalue { ptr, ptr } %20, 1, !dbg !13114
  store ptr %21, ptr %_17, align 4, !dbg !13114
  %23 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !13114
  store ptr %22, ptr %23, align 4, !dbg !13114
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_15 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %_17) #13, !dbg !13115
  store i32 %_15, ptr %self.i, align 4
    #dbg_declare(ptr %self.i, !13116, !DIExpression(), !13124)
  %24 = load i32, ptr %self.i, align 4, !dbg !13126
  %25 = icmp eq i32 %24, 1114112, !dbg !13126
  %_2.i = select i1 %25, i32 0, i32 1, !dbg !13126
  %26 = trunc nuw i32 %_2.i to i1, !dbg !13127
  br i1 %26, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17hce77689b1fcd0bdcE.exit", label %bb2.i, !dbg !13127

bb2.i:                                            ; preds = %bb6
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h87f3d65d3174ccbeE(ptr align 4 @alloc_2c67e7787ff147837ab1e4920c513016) #14, !dbg !13128
  unreachable, !dbg !13128

"_ZN4core6option15Option$LT$T$GT$6unwrap17hce77689b1fcd0bdcE.exit": ; preds = %bb6
  %val.i = load i32, ptr %self.i, align 4, !dbg !13129
  store i32 %val.i, ptr %val.dbg.spill.i, align 4, !dbg !13129
    #dbg_declare(ptr %val.dbg.spill.i, !13122, !DIExpression(), !13130)
; call core::char::methods::<impl char>::is_digit
  %_13 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17h29934e8c7c7783a9E"(i32 %val.i, i32 10) #13, !dbg !13131
  br i1 %_13, label %bb11, label %bb13, !dbg !13113

bb13:                                             ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17hce77689b1fcd0bdcE.exit"
  %_25.0 = load ptr, ptr %inner, align 4, !dbg !13132
  %27 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !13132
  %_25.1 = load i32, ptr %27, align 4, !dbg !13132
  %_29.0 = load ptr, ptr %inner, align 4, !dbg !13133
  %28 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !13133
  %_29.1 = load i32, ptr %28, align 4, !dbg !13133
; call core::str::<impl str>::len
  %_28 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %_29.0, i32 %_29.1) #13, !dbg !13134
  %_31.0 = load ptr, ptr %rest, align 4, !dbg !13135
  %29 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13135
  %_31.1 = load i32, ptr %29, align 4, !dbg !13135
; call core::str::<impl str>::len
  %_30 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %_31.0, i32 %_31.1) #13, !dbg !13136
  %_32.0 = sub i32 %_28, %_30, !dbg !13137
  %_32.1 = icmp ult i32 %_28, %_30, !dbg !13137
  br i1 %_32.1, label %panic, label %bb16, !dbg !13137

bb11:                                             ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17hce77689b1fcd0bdcE.exit"
  %_20.0 = load ptr, ptr %rest, align 4, !dbg !13138
  %30 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13138
  %_20.1 = load i32, ptr %30, align 4, !dbg !13138
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %31 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_20.0, i32 %_20.1, i32 1, ptr align 4 @alloc_cf4340fa65f82461473ec4e4fcd65082) #13, !dbg !13139
  %_19.0 = extractvalue { ptr, i32 } %31, 0, !dbg !13139
  %_19.1 = extractvalue { ptr, i32 } %31, 1, !dbg !13139
  store ptr %_19.0, ptr %rest, align 4, !dbg !13140
  %32 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13140
  store i32 %_19.1, ptr %32, align 4, !dbg !13140
  br label %bb6, !dbg !13110

bb16:                                             ; preds = %bb13
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %33 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1 %_25.0, i32 %_25.1, i32 %_32.0, ptr align 4 @alloc_3a6e44e4d11de5ff03f4892394d6d3f2) #13, !dbg !13141
  %_24.0 = extractvalue { ptr, i32 } %33, 0, !dbg !13141
  %_24.1 = extractvalue { ptr, i32 } %33, 1, !dbg !13141
; call core::str::<impl str>::parse
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17he147b8d5c70730b2E"(ptr sret([8 x i8]) align 4 %_23, ptr align 1 %_24.0, i32 %_24.1) #13, !dbg !13142
    #dbg_declare(ptr %_23, !13143, !DIExpression(), !13153)
    #dbg_declare(ptr %e.i, !13151, !DIExpression(), !13155)
  %34 = load i8, ptr %_23, align 4, !dbg !13156
  %35 = trunc nuw i8 %34 to i1, !dbg !13156
  %_2.i18 = zext i1 %35 to i32, !dbg !13156
  br i1 %35, label %bb2.i19, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf838b8a2abb31d56E.exit", !dbg !13157

bb2.i19:                                          ; preds = %bb16
  %36 = getelementptr inbounds i8, ptr %_23, i32 1, !dbg !13158
  %37 = load i8, ptr %36, align 1, !dbg !13158
  store i8 %37, ptr %e.i, align 1, !dbg !13158
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17he611b33774b0aad1E(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i32 43, ptr align 1 %e.i, ptr align 4 @alloc_d75c2f4d6928e83478942dc919625b6d) #14, !dbg !13159
  unreachable, !dbg !13159

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf838b8a2abb31d56E.exit": ; preds = %bb16
  %38 = getelementptr inbounds i8, ptr %_23, i32 4, !dbg !13160
  %t.i = load i32, ptr %38, align 4, !dbg !13160
  store i32 %t.i, ptr %t.dbg.spill.i, align 4, !dbg !13160
    #dbg_declare(ptr %t.dbg.spill.i, !13149, !DIExpression(), !13161)
  store i32 %t.i, ptr %i.dbg.spill, align 4, !dbg !13162
    #dbg_declare(ptr %i.dbg.spill, !13035, !DIExpression(), !13163)
  %_34.0 = load ptr, ptr %rest, align 4, !dbg !13164
  %39 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13164
  %_34.1 = load i32, ptr %39, align 4, !dbg !13164
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %40 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_34.0, i32 %_34.1, i32 %t.i, ptr align 4 @alloc_400f6dfbe7df26add2272910550c5a55) #13, !dbg !13165
  %_33.0 = extractvalue { ptr, i32 } %40, 0, !dbg !13165
  %_33.1 = extractvalue { ptr, i32 } %40, 1, !dbg !13165
  store ptr %_33.0, ptr %inner, align 4, !dbg !13166
  %41 = getelementptr inbounds i8, ptr %inner, i32 4, !dbg !13166
  store i32 %_33.1, ptr %41, align 4, !dbg !13166
  %_37.0 = load ptr, ptr %rest, align 4, !dbg !13167
  %42 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13167
  %_37.1 = load i32, ptr %42, align 4, !dbg !13167
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %43 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1 %_37.0, i32 %_37.1, i32 %t.i, ptr align 4 @alloc_5ac800b90c06f80bcb4dd34e37cb7c04) #13, !dbg !13168
  %_36.0 = extractvalue { ptr, i32 } %43, 0, !dbg !13168
  %_36.1 = extractvalue { ptr, i32 } %43, 1, !dbg !13168
  store ptr %_36.0, ptr %rest, align 4, !dbg !13169
  %44 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13169
  store i32 %_36.1, ptr %44, align 4, !dbg !13169
; call core::fmt::Formatter::alternate
  %_39 = call zeroext i1 @_ZN4core3fmt9Formatter9alternate17h47450e30007958d8E(ptr align 4 %f) #13, !dbg !13170
  br i1 %_39, label %bb23, label %bb27, !dbg !13171

panic:                                            ; preds = %bb13
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_f94f14b23a1fc2ef6892d561ec2a0ccb) #14, !dbg !13137
  unreachable, !dbg !13137

bb27:                                             ; preds = %bb25, %bb24, %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf838b8a2abb31d56E.exit"
  %45 = icmp eq i32 %element, 0, !dbg !13172
  br i1 %45, label %bb32, label %bb28, !dbg !13172

bb23:                                             ; preds = %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf838b8a2abb31d56E.exit"
  %_43.0 = add i32 %element, 1, !dbg !13173
  %_43.1 = icmp ult i32 %_43.0, %element, !dbg !13173
  br i1 %_43.1, label %panic13, label %bb24, !dbg !13173

bb24:                                             ; preds = %bb23
  %46 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13174
  %_44 = load i32, ptr %46, align 4, !dbg !13174
  %_41 = icmp eq i32 %_43.0, %_44, !dbg !13173
  br i1 %_41, label %bb25, label %bb27, !dbg !13173

panic13:                                          ; preds = %bb23
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_16016884d996c020b518e7911de2113c) #14, !dbg !13173
  unreachable, !dbg !13173

bb25:                                             ; preds = %bb24
  %_145.0 = load ptr, ptr %rest, align 4, !dbg !13175
  %47 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13175
  %_145.1 = load i32, ptr %47, align 4, !dbg !13175
; call rustc_demangle::legacy::is_rust_hash
  %_45 = call zeroext i1 @_ZN14rustc_demangle6legacy12is_rust_hash17hb40e9be59fc7970bE(ptr align 1 %_145.0, i32 %_145.1) #13, !dbg !13176
  br i1 %_45, label %bb123, label %bb27, !dbg !13176

bb32:                                             ; preds = %bb28, %bb27
  %_52.0 = load ptr, ptr %rest, align 4, !dbg !13177
  %48 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13177
  %_52.1 = load i32, ptr %48, align 4, !dbg !13177
; call core::str::<impl str>::starts_with
  %_51 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E"(ptr align 1 %_52.0, i32 %_52.1, ptr align 1 @alloc_8544a4f2d44fd3e383615fa06a5b8f0c, i32 2) #13, !dbg !13178
  br i1 %_51, label %bb34, label %bb36, !dbg !13177

bb28:                                             ; preds = %bb27
; call core::fmt::Formatter::write_str
  %_48 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 @alloc_0078f96ecbe246c9d8cda3cf01c437ac, i32 2) #13, !dbg !13179
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_47 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_48) #13, !dbg !13180
  %_50 = zext i1 %_47 to i32, !dbg !13180
  %49 = trunc nuw i32 %_50 to i1, !dbg !13180
  br i1 %49, label %bb31, label %bb32, !dbg !13180

bb31:                                             ; preds = %bb28
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %50 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_51c8ce62660825ac2fdd1bfd75e52598) #13, !dbg !13181
  %51 = zext i1 %50 to i8, !dbg !13181
  store i8 %51, ptr %_0, align 1, !dbg !13181
  br label %bb124, !dbg !13181

bb36:                                             ; preds = %bb52, %bb46, %bb108, %bb103, %bb116, %bb34, %bb32
  %_57.0 = load ptr, ptr %rest, align 4, !dbg !13182
  %52 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13182
  %_57.1 = load i32, ptr %52, align 4, !dbg !13182
; call core::str::<impl str>::starts_with
  %_56 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E"(ptr align 1 %_57.0, i32 %_57.1, i32 46) #13, !dbg !13183
  br i1 %_56, label %bb38, label %bb55, !dbg !13182

bb34:                                             ; preds = %bb32
  %_54.0 = load ptr, ptr %rest, align 4, !dbg !13184
  %53 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13184
  %_54.1 = load i32, ptr %53, align 4, !dbg !13184
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %54 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_54.0, i32 %_54.1, i32 1, ptr align 4 @alloc_d7399961d0adc85370d864c3570549cc) #13, !dbg !13185
  %_53.0 = extractvalue { ptr, i32 } %54, 0, !dbg !13185
  %_53.1 = extractvalue { ptr, i32 } %54, 1, !dbg !13185
  store ptr %_53.0, ptr %rest, align 4, !dbg !13186
  %55 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13186
  store i32 %_53.1, ptr %55, align 4, !dbg !13186
  br label %bb36, !dbg !13187

bb55:                                             ; preds = %bb36
  %_80.0 = load ptr, ptr %rest, align 4, !dbg !13188
  %56 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13188
  %_80.1 = load i32, ptr %56, align 4, !dbg !13188
; call core::str::<impl str>::starts_with
  %_79 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E"(ptr align 1 %_80.0, i32 %_80.1, i32 36) #13, !dbg !13189
  br i1 %_79, label %bb57, label %bb110, !dbg !13188

bb38:                                             ; preds = %bb36
  %_62.0 = load ptr, ptr %rest, align 4, !dbg !13190
  %57 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13190
  %_62.1 = load i32, ptr %57, align 4, !dbg !13190
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %58 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_62.0, i32 %_62.1, i32 1, ptr align 4 @alloc_b9d3a0eb7ad892bf3a8146366d322fcd) #13, !dbg !13191
  %_61.0 = extractvalue { ptr, i32 } %58, 0, !dbg !13191
  %_61.1 = extractvalue { ptr, i32 } %58, 1, !dbg !13191
; call core::str::<impl str>::chars
  %59 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %_61.0, i32 %_61.1) #13, !dbg !13192
  %60 = extractvalue { ptr, ptr } %59, 0, !dbg !13192
  %61 = extractvalue { ptr, ptr } %59, 1, !dbg !13192
  store ptr %60, ptr %_60, align 4, !dbg !13192
  %62 = getelementptr inbounds i8, ptr %_60, i32 4, !dbg !13192
  store ptr %61, ptr %62, align 4, !dbg !13192
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %63 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %_60) #13, !dbg !13193
  store i32 %63, ptr %_58, align 4, !dbg !13193
  %64 = load i32, ptr %_58, align 4, !dbg !13190
  %65 = icmp eq i32 %64, 1114112, !dbg !13190
  %_64 = select i1 %65, i32 0, i32 1, !dbg !13190
  %66 = trunc nuw i32 %_64 to i1, !dbg !13194
  br i1 %66, label %bb42, label %bb49, !dbg !13194

bb110:                                            ; preds = %bb55
  %_129.0 = load ptr, ptr %rest, align 4, !dbg !13195
  %67 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13195
  %_129.1 = load i32, ptr %67, align 4, !dbg !13195
; call core::str::<impl str>::find
  %68 = call { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hfa4cba738df6c1b8E"(ptr align 1 %_129.0, i32 %_129.1) #13, !dbg !13196
  %69 = extractvalue { i32, i32 } %68, 0, !dbg !13196
  %70 = extractvalue { i32, i32 } %68, 1, !dbg !13196
  store i32 %69, ptr %_128, align 4, !dbg !13196
  %71 = getelementptr inbounds i8, ptr %_128, i32 4, !dbg !13196
  store i32 %70, ptr %71, align 4, !dbg !13196
  %_130 = load i32, ptr %_128, align 4, !dbg !13195
  %72 = getelementptr inbounds i8, ptr %_128, i32 4, !dbg !13195
  %73 = load i32, ptr %72, align 4, !dbg !13195
  %74 = trunc nuw i32 %_130 to i1, !dbg !13197
  br i1 %74, label %bb112, label %bb119, !dbg !13197

bb57:                                             ; preds = %bb55
  %_86.0 = load ptr, ptr %rest, align 4, !dbg !13198
  %75 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13198
  %_86.1 = load i32, ptr %75, align 4, !dbg !13198
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %76 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_86.0, i32 %_86.1, i32 1, ptr align 4 @alloc_bf16bea2cef4cb22c98046d34047ad09) #13, !dbg !13199
  %_85.0 = extractvalue { ptr, i32 } %76, 0, !dbg !13199
  %_85.1 = extractvalue { ptr, i32 } %76, 1, !dbg !13199
; call core::str::<impl str>::find
  %77 = call { i32, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4find17hce650607de5fdb51E"(ptr align 1 %_85.0, i32 %_85.1, i32 36) #13, !dbg !13200
  %78 = extractvalue { i32, i32 } %77, 0, !dbg !13200
  %79 = extractvalue { i32, i32 } %77, 1, !dbg !13200
  store i32 %78, ptr %_84, align 4, !dbg !13200
  %80 = getelementptr inbounds i8, ptr %_84, i32 4, !dbg !13200
  store i32 %79, ptr %80, align 4, !dbg !13200
  %_88 = load i32, ptr %_84, align 4, !dbg !13198
  %81 = getelementptr inbounds i8, ptr %_84, i32 4, !dbg !13198
  %82 = load i32, ptr %81, align 4, !dbg !13198
  %83 = trunc nuw i32 %_88 to i1, !dbg !13201
  br i1 %83, label %bb60, label %bb119, !dbg !13201

bb112:                                            ; preds = %bb110
  %84 = getelementptr inbounds i8, ptr %_128, i32 4, !dbg !13202
  %i14 = load i32, ptr %84, align 4, !dbg !13202
  store i32 %i14, ptr %i.dbg.spill15, align 4, !dbg !13202
    #dbg_declare(ptr %i.dbg.spill15, !13072, !DIExpression(), !13202)
  %_135.0 = load ptr, ptr %rest, align 4, !dbg !13203
  %85 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13203
  %_135.1 = load i32, ptr %85, align 4, !dbg !13203
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %86 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1 %_135.0, i32 %_135.1, i32 %i14, ptr align 4 @alloc_1b243fe54ba5b640071102c8b5265832) #13, !dbg !13204
  %_134.0 = extractvalue { ptr, i32 } %86, 0, !dbg !13204
  %_134.1 = extractvalue { ptr, i32 } %86, 1, !dbg !13204
; call core::fmt::Formatter::write_str
  %_133 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 %_134.0, i32 %_134.1) #13, !dbg !13205
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_132 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_133) #13, !dbg !13206
  %_137 = zext i1 %_132 to i32, !dbg !13206
  %87 = trunc nuw i32 %_137 to i1, !dbg !13206
  br i1 %87, label %bb117, label %bb116, !dbg !13206

bb119:                                            ; preds = %bb98, %bb97, %bb90, %bb65, %bb57, %bb110
  %_143.0 = load ptr, ptr %rest, align 4, !dbg !13207
  %88 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13207
  %_143.1 = load i32, ptr %88, align 4, !dbg !13207
; call core::fmt::Formatter::write_str
  %_142 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 %_143.0, i32 %_143.1) #13, !dbg !13208
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_141 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_142) #13, !dbg !13209
  %_144 = zext i1 %_141 to i32, !dbg !13209
  %89 = trunc nuw i32 %_144 to i1, !dbg !13209
  br i1 %89, label %bb122, label %bb2, !dbg !13209

bb117:                                            ; preds = %bb112
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %90 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_6686f5215d8a8bce53ac0bb42642faca) #13, !dbg !13210
  %91 = zext i1 %90 to i8, !dbg !13210
  store i8 %91, ptr %_0, align 1, !dbg !13210
  br label %bb124, !dbg !13210

bb116:                                            ; preds = %bb112
  %_139.0 = load ptr, ptr %rest, align 4, !dbg !13211
  %92 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13211
  %_139.1 = load i32, ptr %92, align 4, !dbg !13211
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %93 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_139.0, i32 %_139.1, i32 %i14, ptr align 4 @alloc_fa3f58532c65c48d7b9e8b89c47a840a) #13, !dbg !13212
  %_138.0 = extractvalue { ptr, i32 } %93, 0, !dbg !13212
  %_138.1 = extractvalue { ptr, i32 } %93, 1, !dbg !13212
  store ptr %_138.0, ptr %rest, align 4, !dbg !13213
  %94 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13213
  store i32 %_138.1, ptr %94, align 4, !dbg !13213
  br label %bb36, !dbg !13214

bb124:                                            ; preds = %bb123, %bb31, %bb53, %bb47, %bb122, %bb109, %bb104, %bb117
  %95 = load i8, ptr %_0, align 1, !dbg !13112
  %96 = trunc nuw i8 %95 to i1, !dbg !13112
  ret i1 %96, !dbg !13112

bb60:                                             ; preds = %bb57
  %97 = getelementptr inbounds i8, ptr %_84, i32 4, !dbg !13215
  %end = load i32, ptr %97, align 4, !dbg !13215
  store i32 %end, ptr %end.dbg.spill, align 4, !dbg !13215
    #dbg_declare(ptr %end.dbg.spill, !13052, !DIExpression(), !13215)
  %_91.0 = load ptr, ptr %rest, align 4, !dbg !13216
  %98 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13216
  %_91.1 = load i32, ptr %98, align 4, !dbg !13216
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h53fd2a5488ac6380E"(ptr sret([12 x i8]) align 4 %_92, i32 1, i32 %end) #13, !dbg !13217
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %99 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h01ba9980c8bf38acE"(ptr align 1 %_91.0, i32 %_91.1, ptr align 4 %_92, ptr align 4 @alloc_059f6a666acedab2d13eb6d85cb3ffd4) #13, !dbg !13218
  %_90.0 = extractvalue { ptr, i32 } %99, 0, !dbg !13218
  %_90.1 = extractvalue { ptr, i32 } %99, 1, !dbg !13218
  %_94.0 = load ptr, ptr %rest, align 4, !dbg !13219
  %100 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13219
  %_94.1 = load i32, ptr %100, align 4, !dbg !13219
  %_97.0 = add i32 %end, 2, !dbg !13220
  %_97.1 = icmp ult i32 %_97.0, %end, !dbg !13220
  br i1 %_97.1, label %panic16, label %bb63, !dbg !13220

bb63:                                             ; preds = %bb60
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %101 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_94.0, i32 %_94.1, i32 %_97.0, ptr align 4 @alloc_8ceffa69b888ba953dba1717e0ee2efc) #13, !dbg !13221
  %_93.0 = extractvalue { ptr, i32 } %101, 0, !dbg !13221
  %_93.1 = extractvalue { ptr, i32 } %101, 1, !dbg !13221
  store ptr %_90.0, ptr %_83, align 4, !dbg !13222
  %102 = getelementptr inbounds i8, ptr %_83, i32 4, !dbg !13222
  store i32 %_90.1, ptr %102, align 4, !dbg !13222
  %103 = getelementptr inbounds i8, ptr %_83, i32 8, !dbg !13222
  store ptr %_93.0, ptr %103, align 4, !dbg !13222
  %104 = getelementptr inbounds i8, ptr %103, i32 4, !dbg !13222
  store i32 %_93.1, ptr %104, align 4, !dbg !13222
  %escape.0 = load ptr, ptr %_83, align 4, !dbg !13223
  %105 = getelementptr inbounds i8, ptr %_83, i32 4, !dbg !13223
  %escape.1 = load i32, ptr %105, align 4, !dbg !13223
  store ptr %escape.0, ptr %escape.dbg.spill, align 4, !dbg !13223
  %106 = getelementptr inbounds i8, ptr %escape.dbg.spill, i32 4, !dbg !13223
  store i32 %escape.1, ptr %106, align 4, !dbg !13223
    #dbg_declare(ptr %escape.dbg.spill, !13049, !DIExpression(), !13224)
  %107 = getelementptr inbounds i8, ptr %_83, i32 8, !dbg !13225
  %after_escape.0 = load ptr, ptr %107, align 4, !dbg !13225
  %108 = getelementptr inbounds i8, ptr %107, i32 4, !dbg !13225
  %after_escape.1 = load i32, ptr %108, align 4, !dbg !13225
  store ptr %after_escape.0, ptr %after_escape.dbg.spill, align 4, !dbg !13225
  %109 = getelementptr inbounds i8, ptr %after_escape.dbg.spill, i32 4, !dbg !13225
  store i32 %after_escape.1, ptr %109, align 4, !dbg !13225
    #dbg_declare(ptr %after_escape.dbg.spill, !13051, !DIExpression(), !13226)
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_106 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_b07400b063106d66d727ea8b42360c07, i32 2) #13, !dbg !13227
  br i1 %_106, label %bb66, label %bb67, !dbg !13227

panic16:                                          ; preds = %bb60
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_285baa8a279c4e81a1b5bb370cf127a6) #14, !dbg !13220
  unreachable, !dbg !13220

bb67:                                             ; preds = %bb63
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_105 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_a05a8addff0dd0f9a55cfac42d3445f0, i32 2) #13, !dbg !13228
  br i1 %_105, label %bb68, label %bb69, !dbg !13228

bb66:                                             ; preds = %bb63
  store ptr @alloc_efb6e0532e6eba689eb318f4f2a27eb4, ptr %unescaped, align 4, !dbg !13229
  %110 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13229
  store i32 1, ptr %110, align 4, !dbg !13229
  br label %bb105, !dbg !13229

bb69:                                             ; preds = %bb67
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_104 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_98ee5ebaa85bed64049c424f3f670f0b, i32 2) #13, !dbg !13230
  br i1 %_104, label %bb70, label %bb71, !dbg !13230

bb68:                                             ; preds = %bb67
  store ptr @alloc_09f68c7ae2e79d4408ae53b7c9133001, ptr %unescaped, align 4, !dbg !13231
  %111 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13231
  store i32 1, ptr %111, align 4, !dbg !13231
  br label %bb105, !dbg !13232

bb71:                                             ; preds = %bb69
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_103 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_2f246504aa99eaedeef1625727126dc9, i32 2) #13, !dbg !13233
  br i1 %_103, label %bb72, label %bb73, !dbg !13233

bb70:                                             ; preds = %bb69
  store ptr @alloc_90406cad91539dd86ffc765a92ace5f1, ptr %unescaped, align 4, !dbg !13234
  %112 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13234
  store i32 1, ptr %112, align 4, !dbg !13234
  br label %bb105, !dbg !13235

bb73:                                             ; preds = %bb71
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_102 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_472233e3a97d7cbe3d756975aa813314, i32 2) #13, !dbg !13236
  br i1 %_102, label %bb74, label %bb75, !dbg !13236

bb72:                                             ; preds = %bb71
  store ptr @alloc_069739ecb4f78035aca324a6dc5131a2, ptr %unescaped, align 4, !dbg !13237
  %113 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13237
  store i32 1, ptr %113, align 4, !dbg !13237
  br label %bb105, !dbg !13238

bb75:                                             ; preds = %bb73
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_101 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_188de2f57e9076ce6ca98e40244fa8e2, i32 2) #13, !dbg !13239
  br i1 %_101, label %bb76, label %bb77, !dbg !13239

bb74:                                             ; preds = %bb73
  store ptr @alloc_b0f75d2f000046282f87eeb3267426fe, ptr %unescaped, align 4, !dbg !13240
  %114 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13240
  store i32 1, ptr %114, align 4, !dbg !13240
  br label %bb105, !dbg !13241

bb77:                                             ; preds = %bb75
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_100 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_b6548055efc46bed391599c8fe0adb46, i32 2) #13, !dbg !13242
  br i1 %_100, label %bb78, label %bb79, !dbg !13242

bb76:                                             ; preds = %bb75
  store ptr @alloc_1ff25e6ad58d770003043bae3c4113bf, ptr %unescaped, align 4, !dbg !13243
  %115 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13243
  store i32 1, ptr %115, align 4, !dbg !13243
  br label %bb105, !dbg !13244

bb79:                                             ; preds = %bb77
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_99 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE"(ptr align 1 %escape.0, i32 %escape.1, ptr align 1 @alloc_e57470275a219d8492d489e56910499e, i32 1) #13, !dbg !13245
  br i1 %_99, label %bb80, label %bb65, !dbg !13245

bb78:                                             ; preds = %bb77
  store ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, ptr %unescaped, align 4, !dbg !13246
  %116 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13246
  store i32 1, ptr %116, align 4, !dbg !13246
  br label %bb105, !dbg !13247

bb65:                                             ; preds = %bb79
; call core::str::<impl str>::starts_with
  %_107 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E"(ptr align 1 %escape.0, i32 %escape.1, i32 117) #13, !dbg !13248
  br i1 %_107, label %bb90, label %bb119, !dbg !13249

bb80:                                             ; preds = %bb79
  store ptr @alloc_41a776d8d06dc2b9b0480e88fa257ffe, ptr %unescaped, align 4, !dbg !13250
  %117 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13250
  store i32 1, ptr %117, align 4, !dbg !13250
  br label %bb105, !dbg !13251

bb90:                                             ; preds = %bb65
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %118 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %escape.0, i32 %escape.1, i32 1, ptr align 4 @alloc_bf49c2ac31e4ccf04b1b63e6969a8809) #13, !dbg !13252
  %digits.0 = extractvalue { ptr, i32 } %118, 0, !dbg !13252
  %digits.1 = extractvalue { ptr, i32 } %118, 1, !dbg !13252
  store ptr %digits.0, ptr %digits.dbg.spill, align 4, !dbg !13252
  %119 = getelementptr inbounds i8, ptr %digits.dbg.spill, i32 4, !dbg !13252
  store i32 %digits.1, ptr %119, align 4, !dbg !13252
    #dbg_declare(ptr %digits.dbg.spill, !13056, !DIExpression(), !13253)
; call core::str::<impl str>::chars
  %120 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %digits.0, i32 %digits.1) #13, !dbg !13254
  %121 = extractvalue { ptr, ptr } %120, 0, !dbg !13254
  %122 = extractvalue { ptr, ptr } %120, 1, !dbg !13254
  store ptr %121, ptr %_112, align 4, !dbg !13254
  %123 = getelementptr inbounds i8, ptr %_112, i32 4, !dbg !13254
  store ptr %122, ptr %123, align 4, !dbg !13254
; call core::iter::traits::iterator::Iterator::all
  %all_lower_hex = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17hab7dccb05ed8594cE(ptr align 4 %_112) #13, !dbg !13255
  %124 = zext i1 %all_lower_hex to i8, !dbg !13255
  store i8 %124, ptr %all_lower_hex.dbg.spill, align 1, !dbg !13255
    #dbg_declare(ptr %all_lower_hex.dbg.spill, !13058, !DIExpression(), !13256)
; call core::num::<impl u32>::from_str_radix
  call void @"_ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17hc82f8ed412042f79E"(ptr sret([8 x i8]) align 4 %_115, ptr align 1 %digits.0, i32 %digits.1, i32 16) #13, !dbg !13257
; call core::result::Result<T,E>::ok
  %125 = call { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$2ok17h4ef62c8721f928a9E"(ptr align 4 %_115) #13, !dbg !13258
  %_114.0 = extractvalue { i32, i32 } %125, 0, !dbg !13258
  %_114.1 = extractvalue { i32, i32 } %125, 1, !dbg !13258
; call core::option::Option<T>::and_then
  %c17 = call i32 @"_ZN4core6option15Option$LT$T$GT$8and_then17h577cb2e29999f52fE"(i32 %_114.0, i32 %_114.1) #13, !dbg !13259
  store i32 %c17, ptr %c.dbg.spill, align 4, !dbg !13259
    #dbg_declare(ptr %c.dbg.spill, !13060, !DIExpression(), !13260)
  %126 = zext i1 %all_lower_hex to i8, !dbg !13261
  store i8 %126, ptr %_116, align 4, !dbg !13261
  %127 = getelementptr inbounds i8, ptr %_116, i32 4, !dbg !13261
  store i32 %c17, ptr %127, align 4, !dbg !13261
  %128 = load i8, ptr %_116, align 4, !dbg !13262
  %129 = trunc nuw i8 %128 to i1, !dbg !13262
  br i1 %129, label %bb97, label %bb119, !dbg !13262

bb97:                                             ; preds = %bb90
  %130 = getelementptr inbounds i8, ptr %_116, i32 4, !dbg !13261
  %131 = load i32, ptr %130, align 4, !dbg !13261
  %132 = icmp eq i32 %131, 1114112, !dbg !13261
  %_117 = select i1 %132, i32 0, i32 1, !dbg !13261
  %133 = trunc nuw i32 %_117 to i1, !dbg !13262
  br i1 %133, label %bb98, label %bb119, !dbg !13262

bb98:                                             ; preds = %bb97
  %134 = getelementptr inbounds i8, ptr %_116, i32 4, !dbg !13088
  %135 = load i32, ptr %134, align 4, !dbg !13088
  store i32 %135, ptr %c, align 4, !dbg !13088
  %136 = load i32, ptr %c, align 4, !dbg !13263
; call core::char::methods::<impl char>::is_control
  %_119 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$10is_control17h1834f75da40a1a41E"(i32 %136) #13, !dbg !13264
  br i1 %_119, label %bb119, label %bb100, !dbg !13263

bb100:                                            ; preds = %bb98
; call <char as core::fmt::Display>::fmt
  %_121 = call zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17he0e2483a667679bfE"(ptr align 4 %c, ptr align 4 %f) #13, !dbg !13265
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_120 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_121) #13, !dbg !13266
  %_123 = zext i1 %_120 to i32, !dbg !13266
  %137 = trunc nuw i32 %_123 to i1, !dbg !13266
  br i1 %137, label %bb104, label %bb103, !dbg !13266

bb104:                                            ; preds = %bb100
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %138 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_fde1b21fcdbc805531325d0507f3fe57) #13, !dbg !13267
  %139 = zext i1 %138 to i8, !dbg !13267
  store i8 %139, ptr %_0, align 1, !dbg !13267
  br label %bb124, !dbg !13267

bb103:                                            ; preds = %bb100
  store ptr %after_escape.0, ptr %rest, align 4, !dbg !13268
  %140 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13268
  store i32 %after_escape.1, ptr %140, align 4, !dbg !13268
  br label %bb36, !dbg !13269

bb105:                                            ; preds = %bb66, %bb68, %bb70, %bb72, %bb74, %bb76, %bb78, %bb80
  %_126.0 = load ptr, ptr %unescaped, align 4, !dbg !13271
  %141 = getelementptr inbounds i8, ptr %unescaped, i32 4, !dbg !13271
  %_126.1 = load i32, ptr %141, align 4, !dbg !13271
; call core::fmt::Formatter::write_str
  %_125 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 %_126.0, i32 %_126.1) #13, !dbg !13272
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_124 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_125) #13, !dbg !13273
  %_127 = zext i1 %_124 to i32, !dbg !13273
  %142 = trunc nuw i32 %_127 to i1, !dbg !13273
  br i1 %142, label %bb109, label %bb108, !dbg !13273

bb109:                                            ; preds = %bb105
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %143 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_3cd5175c6bf9e74ed5ed918e7615245e) #13, !dbg !13274
  %144 = zext i1 %143 to i8, !dbg !13274
  store i8 %144, ptr %_0, align 1, !dbg !13274
  br label %bb124, !dbg !13274

bb108:                                            ; preds = %bb105
  store ptr %after_escape.0, ptr %rest, align 4, !dbg !13275
  %145 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13275
  store i32 %after_escape.1, ptr %145, align 4, !dbg !13275
  br label %bb36, !dbg !13214

bb122:                                            ; preds = %bb119
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %146 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_e500fde2e006978d04c15282e7e3f7b7) #13, !dbg !13276
  %147 = zext i1 %146 to i8, !dbg !13276
  store i8 %147, ptr %_0, align 1, !dbg !13276
  br label %bb124, !dbg !13276

bb42:                                             ; preds = %bb38
  %148 = load i32, ptr %_58, align 4, !dbg !13194
  %149 = icmp eq i32 %148, 46, !dbg !13194
  br i1 %149, label %bb43, label %bb49, !dbg !13194

bb49:                                             ; preds = %bb42, %bb38
; call core::fmt::Formatter::write_str
  %_73 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 @alloc_0f52f98e9fa44caf6668aeb0b1c94ca5, i32 1) #13, !dbg !13277
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_72 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_73) #13, !dbg !13278
  %_75 = zext i1 %_72 to i32, !dbg !13278
  %150 = trunc nuw i32 %_75 to i1, !dbg !13278
  br i1 %150, label %bb53, label %bb52, !dbg !13278

bb43:                                             ; preds = %bb42
; call core::fmt::Formatter::write_str
  %_66 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 @alloc_0078f96ecbe246c9d8cda3cf01c437ac, i32 2) #13, !dbg !13279
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_65 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_66) #13, !dbg !13280
  %_68 = zext i1 %_65 to i32, !dbg !13280
  %151 = trunc nuw i32 %_68 to i1, !dbg !13280
  br i1 %151, label %bb47, label %bb46, !dbg !13280

bb47:                                             ; preds = %bb43
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %152 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_ecaad7bfe86d5ca91e75d4aff4d035e0) #13, !dbg !13281
  %153 = zext i1 %152 to i8, !dbg !13281
  store i8 %153, ptr %_0, align 1, !dbg !13281
  br label %bb124, !dbg !13281

bb46:                                             ; preds = %bb43
  %_70.0 = load ptr, ptr %rest, align 4, !dbg !13282
  %154 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13282
  %_70.1 = load i32, ptr %154, align 4, !dbg !13282
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %155 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_70.0, i32 %_70.1, i32 2, ptr align 4 @alloc_4b23fb7731410d41b230c7559822ca74) #13, !dbg !13283
  %_69.0 = extractvalue { ptr, i32 } %155, 0, !dbg !13283
  %_69.1 = extractvalue { ptr, i32 } %155, 1, !dbg !13283
  store ptr %_69.0, ptr %rest, align 4, !dbg !13284
  %156 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13284
  store i32 %_69.1, ptr %156, align 4, !dbg !13284
  br label %bb36, !dbg !13285

bb53:                                             ; preds = %bb49
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %157 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f4743a68badfdd527cdd39aa99892d2e) #13, !dbg !13286
  %158 = zext i1 %157 to i8, !dbg !13286
  store i8 %158, ptr %_0, align 1, !dbg !13286
  br label %bb124, !dbg !13286

bb52:                                             ; preds = %bb49
  %_77.0 = load ptr, ptr %rest, align 4, !dbg !13287
  %159 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13287
  %_77.1 = load i32, ptr %159, align 4, !dbg !13287
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %160 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_77.0, i32 %_77.1, i32 1, ptr align 4 @alloc_346348a1988a187d6ee81609da1ff80a) #13, !dbg !13288
  %_76.0 = extractvalue { ptr, i32 } %160, 0, !dbg !13288
  %_76.1 = extractvalue { ptr, i32 } %160, 1, !dbg !13288
  store ptr %_76.0, ptr %rest, align 4, !dbg !13289
  %161 = getelementptr inbounds i8, ptr %rest, i32 4, !dbg !13289
  store i32 %_76.1, ptr %161, align 4, !dbg !13289
  br label %bb36, !dbg !13285

bb4:                                              ; No predecessors!
  unreachable, !dbg !13290
}

; <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h1803cecbaa853338E"(ptr align 1 %_1, i32 %c) unnamed_addr #0 !dbg !13292 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !13298, !DIExpression(), !13299)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !13297, !DIExpression(), !13300)
  %0 = icmp eq i32 %c, 36, !dbg !13301
  br i1 %0, label %bb1, label %bb2, !dbg !13301

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !13301
  br label %bb3, !dbg !13301

bb2:                                              ; preds = %start
  %1 = icmp eq i32 %c, 46, !dbg !13302
  %2 = zext i1 %1 to i8, !dbg !13302
  store i8 %2, ptr %_0, align 1, !dbg !13302
  br label %bb3, !dbg !13301

bb3:                                              ; preds = %bb2, %bb1
  %3 = load i8, ptr %_0, align 1, !dbg !13303
  %4 = trunc nuw i8 %3 to i1, !dbg !13303
  ret i1 %4, !dbg !13303
}

; <rustc_demangle::legacy::Demangle as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h19171d52f3e553bbE"(ptr align 1 %_1, i32 %c) unnamed_addr #0 !dbg !13304 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !13310, !DIExpression(), !13311)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !13309, !DIExpression(), !13312)
  %_5 = icmp ule i32 48, %c, !dbg !13313
  br i1 %_5, label %bb4, label %bb2, !dbg !13313

bb2:                                              ; preds = %bb4, %start
  %_3 = icmp ule i32 97, %c, !dbg !13314
  br i1 %_3, label %bb3, label %bb1, !dbg !13314

bb4:                                              ; preds = %start
  %_6 = icmp ule i32 %c, 57, !dbg !13313
  br i1 %_6, label %bb5, label %bb2, !dbg !13313

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1, !dbg !13315
  br label %bb6, !dbg !13315

bb1:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !13316
  br label %bb6, !dbg !13316

bb3:                                              ; preds = %bb2
  %_4 = icmp ule i32 %c, 102, !dbg !13314
  %0 = icmp ne i1 %_4, false, !dbg !13314
  %1 = zext i1 %0 to i8, !dbg !13314
  store i8 %1, ptr %_0, align 1, !dbg !13314
  br label %bb6, !dbg !13314

bb6:                                              ; preds = %bb5, %bb3, %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !13317
  %3 = trunc nuw i8 %2 to i1, !dbg !13317
  ret i1 %3, !dbg !13317
}

; <rustc_demangle::v0::ParseError as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN71_$LT$rustc_demangle..v0..ParseError$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf189bb8e1965f47dE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !13318 {
start:
  %__arg1_discr.dbg.spill = alloca [4 x i8], align 4
  %__self_discr.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13323, !DIExpression(), !13330)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !13324, !DIExpression(), !13330)
  %0 = load i8, ptr %self, align 1, !dbg !13330
  %1 = trunc nuw i8 %0 to i1, !dbg !13330
  %__self_discr = zext i1 %1 to i32, !dbg !13330
  store i32 %__self_discr, ptr %__self_discr.dbg.spill, align 4, !dbg !13330
    #dbg_declare(ptr %__self_discr.dbg.spill, !13325, !DIExpression(), !13331)
  %2 = load i8, ptr %other, align 1, !dbg !13331
  %3 = trunc nuw i8 %2 to i1, !dbg !13331
  %__arg1_discr = zext i1 %3 to i32, !dbg !13331
  store i32 %__arg1_discr, ptr %__arg1_discr.dbg.spill, align 4, !dbg !13331
    #dbg_declare(ptr %__arg1_discr.dbg.spill, !13328, !DIExpression(), !13332)
  %_0 = icmp eq i32 %__self_discr, %__arg1_discr, !dbg !13332
  ret i1 %_0, !dbg !13333
}

; <core::result::Result<T,E> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN74_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d07ca84956e9dfaE"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #0 !dbg !13334 {
start:
  %__arg1_discr.dbg.spill = alloca [4 x i8], align 4
  %__self_discr.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %__arg1_02 = alloca [4 x i8], align 4
  %__self_01 = alloca [4 x i8], align 4
  %__arg1_0 = alloca [4 x i8], align 4
  %__self_0 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13340, !DIExpression(), !13352)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !13341, !DIExpression(), !13352)
    #dbg_declare(ptr %__self_0, !13346, !DIExpression(), !13353)
    #dbg_declare(ptr %__arg1_0, !13348, !DIExpression(), !13353)
    #dbg_declare(ptr %__self_01, !13349, !DIExpression(), !13354)
    #dbg_declare(ptr %__arg1_02, !13351, !DIExpression(), !13354)
  %0 = load i8, ptr %self, align 4, !dbg !13352
  %1 = trunc nuw i8 %0 to i1, !dbg !13352
  %__self_discr = zext i1 %1 to i32, !dbg !13352
  store i32 %__self_discr, ptr %__self_discr.dbg.spill, align 4, !dbg !13352
    #dbg_declare(ptr %__self_discr.dbg.spill, !13342, !DIExpression(), !13355)
  %2 = load i8, ptr %other, align 4, !dbg !13355
  %3 = trunc nuw i8 %2 to i1, !dbg !13355
  %__arg1_discr = zext i1 %3 to i32, !dbg !13355
  store i32 %__arg1_discr, ptr %__arg1_discr.dbg.spill, align 4, !dbg !13355
    #dbg_declare(ptr %__arg1_discr.dbg.spill, !13344, !DIExpression(), !13356)
  %_5 = icmp eq i32 %__self_discr, %__arg1_discr, !dbg !13356
  br i1 %_5, label %bb1, label %bb2, !dbg !13356

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !13356
  br label %bb8, !dbg !13356

bb1:                                              ; preds = %start
  %4 = load i8, ptr %self, align 4, !dbg !13356
  %5 = trunc nuw i8 %4 to i1, !dbg !13356
  %_9 = zext i1 %5 to i32, !dbg !13356
  %6 = trunc nuw i32 %_9 to i1, !dbg !13356
  br i1 %6, label %bb5, label %bb4, !dbg !13356

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %7 = load i8, ptr %_0, align 1, !dbg !13357
  %8 = trunc nuw i8 %7 to i1, !dbg !13357
  ret i1 %8, !dbg !13357

bb5:                                              ; preds = %bb1
  %9 = load i8, ptr %other, align 4, !dbg !13356
  %10 = trunc nuw i8 %9 to i1, !dbg !13356
  %_8 = zext i1 %10 to i32, !dbg !13356
  %11 = icmp eq i32 %_8, 1, !dbg !13356
  br i1 %11, label %bb6, label %bb3, !dbg !13356

bb4:                                              ; preds = %bb1
  %12 = load i8, ptr %other, align 4, !dbg !13356
  %13 = trunc nuw i8 %12 to i1, !dbg !13356
  %_7 = zext i1 %13 to i32, !dbg !13356
  %14 = icmp eq i32 %_7, 0, !dbg !13356
  br i1 %14, label %bb7, label %bb3, !dbg !13356

bb7:                                              ; preds = %bb4
  %15 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13358
  store ptr %15, ptr %__self_0, align 4, !dbg !13358
  %16 = getelementptr inbounds i8, ptr %other, i32 1, !dbg !13358
  store ptr %16, ptr %__arg1_0, align 4, !dbg !13358
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %17 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h0c76c58be8d3cc8aE"(ptr align 4 %__self_0, ptr align 4 %__arg1_0) #13, !dbg !13353
  %18 = zext i1 %17 to i8, !dbg !13353
  store i8 %18, ptr %_0, align 1, !dbg !13353
  br label %bb8, !dbg !13353

bb3:                                              ; preds = %bb5, %bb4
  unreachable, !dbg !13356

bb6:                                              ; preds = %bb5
  %19 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13359
  store ptr %19, ptr %__self_01, align 4, !dbg !13359
  %20 = getelementptr inbounds i8, ptr %other, i32 4, !dbg !13359
  store ptr %20, ptr %__arg1_02, align 4, !dbg !13359
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %21 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hc5171afe0a09d45aE"(ptr align 4 %__self_01, ptr align 4 %__arg1_02) #13, !dbg !13354
  %22 = zext i1 %21 to i8, !dbg !13354
  store i8 %22, ptr %_0, align 1, !dbg !13354
  br label %bb8, !dbg !13354
}

; <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h6358aa247e5ddb59E"(ptr align 4 %self, ptr align 4 %args) unnamed_addr #0 !dbg !13360 {
start:
  %0 = alloca [24 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13364, !DIExpression(), !13370)
    #dbg_declare(ptr %args, !13365, !DIExpression(), !13371)
; call core::fmt::Arguments::as_statically_known_str
  %1 = call { ptr, i32 } @_ZN4core3fmt9Arguments23as_statically_known_str17hc982a5d21bdfbd93E(ptr align 4 %args) #13, !dbg !13372
  %2 = extractvalue { ptr, i32 } %1, 0, !dbg !13372
  %3 = extractvalue { ptr, i32 } %1, 1, !dbg !13372
  store ptr %2, ptr %_3, align 4, !dbg !13372
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13372
  store i32 %3, ptr %4, align 4, !dbg !13372
  %5 = load ptr, ptr %_3, align 4, !dbg !13373
  %6 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13373
  %7 = load i32, ptr %6, align 4, !dbg !13373
  %8 = ptrtoint ptr %5 to i32, !dbg !13373
  %9 = icmp eq i32 %8, 0, !dbg !13373
  %_5 = select i1 %9, i32 0, i32 1, !dbg !13373
  %10 = trunc nuw i32 %_5 to i1, !dbg !13374
  br i1 %10, label %bb2, label %bb3, !dbg !13374

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 4, !dbg !13375
  %11 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13375
  %s.1 = load i32, ptr %11, align 4, !dbg !13375
  store ptr %s.0, ptr %s.dbg.spill, align 4, !dbg !13375
  %12 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4, !dbg !13375
  store i32 %s.1, ptr %12, align 4, !dbg !13375
    #dbg_declare(ptr %s.dbg.spill, !13366, !DIExpression(), !13375)
; call <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str
  %13 = call zeroext i1 @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h15d60bbff95f40b2E"(ptr align 4 %self, ptr align 1 %s.0, i32 %s.1) #13, !dbg !13376
  %14 = zext i1 %13 to i8, !dbg !13376
  store i8 %14, ptr %_0, align 1, !dbg !13376
  br label %bb4, !dbg !13376

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 4 %args, i32 24, i1 false), !dbg !13377
; call core::fmt::write
  %15 = call zeroext i1 @_ZN4core3fmt5write17hc2899684fc6bf93bE(ptr align 1 %self, ptr align 4 @vtable.1, ptr align 4 %0) #13, !dbg !13377
  %16 = zext i1 %15 to i8, !dbg !13377
  store i8 %16, ptr %_0, align 1, !dbg !13377
  br label %bb4, !dbg !13377

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8, ptr %_0, align 1, !dbg !13378
  %18 = trunc nuw i8 %17 to i1, !dbg !13378
  ret i1 %18, !dbg !13378

bb5:                                              ; No predecessors!
  unreachable, !dbg !13379
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h6470ee157401c3acE"(i32 %self, ptr align 4 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !13380 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13385, !DIExpression(), !13387)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !13386, !DIExpression(), !13388)
  %_3 = icmp ult i32 %self, %slice.1, !dbg !13389
  br i1 %_3, label %bb1, label %bb2, !dbg !13389

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !13390
  br label %bb3, !dbg !13391

bb1:                                              ; preds = %start
  %_5 = getelementptr inbounds nuw i32, ptr %slice.0, i32 %self, !dbg !13392
  store ptr %_5, ptr %_0, align 4, !dbg !13393
  br label %bb3, !dbg !13391

bb3:                                              ; preds = %bb1, %bb2
  %1 = load ptr, ptr %_0, align 4, !dbg !13394
  ret ptr %1, !dbg !13394
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4c47f3b4d9feadd7E"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #0 !dbg !13395 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13401, !DIExpression(), !13403)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !13402, !DIExpression(), !13404)
  %_4 = load ptr, ptr %self, align 4, !dbg !13405
  store ptr %_4, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !11174, !DIExpression(), !13406)
  %_6 = load ptr, ptr %other, align 4, !dbg !13408
  store ptr %_6, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !11174, !DIExpression(), !13409)
  %_0 = icmp eq ptr %_4, %_6, !dbg !13405
  ret i1 %_0, !dbg !13411
}

; <core::slice::iter::ChunksExact<T> as core::clone::Clone>::clone
; Function Attrs: nounwind
define dso_local void @"_ZN78_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h68f7622df89ab444E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !13412 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13418, !DIExpression(), !13419)
  %_3.0 = load ptr, ptr %self, align 4, !dbg !13420
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13420
  %_3.1 = load i32, ptr %0, align 4, !dbg !13420
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13421
  %_4.0 = load ptr, ptr %1, align 4, !dbg !13421
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !13421
  %_4.1 = load i32, ptr %2, align 4, !dbg !13421
  %3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !13422
  %_2 = load i32, ptr %3, align 4, !dbg !13422
  store ptr %_3.0, ptr %_0, align 4, !dbg !13423
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13423
  store i32 %_3.1, ptr %4, align 4, !dbg !13423
  %5 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !13423
  store ptr %_4.0, ptr %5, align 4, !dbg !13423
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !13423
  store i32 %_4.1, ptr %6, align 4, !dbg !13423
  %7 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !13423
  store i32 %_2, ptr %7, align 4, !dbg !13423
  ret void, !dbg !13424
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2dc0dbf01439ce47E"(i1 zeroext %0) unnamed_addr #0 !dbg !13425 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %v.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
    #dbg_declare(ptr %self, !13445, !DIExpression(), !13450)
    #dbg_declare(ptr %v.dbg.spill, !13446, !DIExpression(), !13451)
    #dbg_declare(ptr %e.dbg.spill, !13448, !DIExpression(), !13452)
  %2 = load i8, ptr %self, align 1, !dbg !13453
  %3 = trunc nuw i8 %2 to i1, !dbg !13453
  %_2 = zext i1 %3 to i32, !dbg !13453
  %4 = trunc nuw i32 %_2 to i1, !dbg !13454
  br i1 %4, label %bb2, label %bb3, !dbg !13454

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !13455
  br label %bb4, !dbg !13456

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !13457
  br label %bb4, !dbg !13458

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_0, align 1, !dbg !13459
  %6 = trunc nuw i8 %5 to i1, !dbg !13459
  ret i1 %6, !dbg !13459

bb1:                                              ; No predecessors!
  unreachable, !dbg !13453
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4bbc9c93858d8ae3E"(i8 %0) unnamed_addr #0 !dbg !13460 {
start:
  %v.dbg.spill = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  store i8 %0, ptr %self, align 1
    #dbg_declare(ptr %self, !13480, !DIExpression(), !13485)
    #dbg_declare(ptr %e.dbg.spill, !13483, !DIExpression(), !13486)
  %1 = load i8, ptr %self, align 1, !dbg !13487
  %2 = icmp eq i8 %1, 2, !dbg !13487
  %_2 = select i1 %2, i32 1, i32 0, !dbg !13487
  %3 = trunc nuw i32 %_2 to i1, !dbg !13488
  br i1 %3, label %bb2, label %bb3, !dbg !13488

bb2:                                              ; preds = %start
  store i8 2, ptr %_0, align 1, !dbg !13489
  br label %bb4, !dbg !13490

bb3:                                              ; preds = %start
  %4 = load i8, ptr %self, align 1, !dbg !13491
  %v = trunc nuw i8 %4 to i1, !dbg !13491
  %5 = zext i1 %v to i8, !dbg !13491
  store i8 %5, ptr %v.dbg.spill, align 1, !dbg !13491
    #dbg_declare(ptr %v.dbg.spill, !13481, !DIExpression(), !13492)
  %6 = zext i1 %v to i8, !dbg !13493
  store i8 %6, ptr %_0, align 1, !dbg !13493
  br label %bb4, !dbg !13494

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1, !dbg !13495
  ret i8 %7, !dbg !13495

bb1:                                              ; No predecessors!
  unreachable, !dbg !13487
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h59995904f982420dE"(ptr align 4 %0) unnamed_addr #0 !dbg !13496 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !13515, !DIExpression(), !13520)
    #dbg_declare(ptr %e.dbg.spill, !13518, !DIExpression(), !13521)
  %1 = load ptr, ptr %self, align 4, !dbg !13522
  %2 = ptrtoint ptr %1 to i32, !dbg !13522
  %3 = icmp eq i32 %2, 0, !dbg !13522
  %_2 = select i1 %3, i32 1, i32 0, !dbg !13522
  %4 = trunc nuw i32 %_2 to i1, !dbg !13523
  br i1 %4, label %bb2, label %bb3, !dbg !13523

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !13524
  br label %bb4, !dbg !13525

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 4, !dbg !13526
  store ptr %v, ptr %v.dbg.spill, align 4, !dbg !13526
    #dbg_declare(ptr %v.dbg.spill, !13516, !DIExpression(), !13527)
  store ptr %v, ptr %_0, align 4, !dbg !13528
  br label %bb4, !dbg !13529

bb4:                                              ; preds = %bb2, %bb3
  %5 = load ptr, ptr %_0, align 4, !dbg !13530
  ret ptr %5, !dbg !13530

bb1:                                              ; No predecessors!
  unreachable, !dbg !13522
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c277fdd97e17c06E"(i8 %0) unnamed_addr #0 !dbg !13531 {
start:
  %e.dbg.spill = alloca [1 x i8], align 1
  %v.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  store i8 %0, ptr %self, align 1
    #dbg_declare(ptr %self, !13550, !DIExpression(), !13555)
    #dbg_declare(ptr %v.dbg.spill, !13551, !DIExpression(), !13556)
  %1 = load i8, ptr %self, align 1, !dbg !13557
  %2 = icmp eq i8 %1, 2, !dbg !13557
  %_2 = select i1 %2, i32 0, i32 1, !dbg !13557
  %3 = trunc nuw i32 %_2 to i1, !dbg !13558
  br i1 %3, label %bb2, label %bb3, !dbg !13558

bb2:                                              ; preds = %start
  %4 = load i8, ptr %self, align 1, !dbg !13559
  %e = trunc nuw i8 %4 to i1, !dbg !13559
  %5 = zext i1 %e to i8, !dbg !13559
  store i8 %5, ptr %e.dbg.spill, align 1, !dbg !13559
    #dbg_declare(ptr %e.dbg.spill, !13553, !DIExpression(), !13560)
  %6 = zext i1 %e to i8, !dbg !13561
  store i8 %6, ptr %_0, align 1, !dbg !13561
  br label %bb4, !dbg !13562

bb3:                                              ; preds = %start
  store i8 2, ptr %_0, align 1, !dbg !13563
  br label %bb4, !dbg !13564

bb4:                                              ; preds = %bb2, %bb3
  %7 = load i8, ptr %_0, align 1, !dbg !13565
  ret i8 %7, !dbg !13565

bb1:                                              ; No predecessors!
  unreachable, !dbg !13557
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h966c9f231d7bc266E"(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !13566 {
start:
  %e.dbg.spill = alloca [1 x i8], align 1, !dbg !13589
  %v.dbg.spill = alloca [4 x i8], align 4, !dbg !13589
    #dbg_declare(ptr %self, !13584, !DIExpression(), !13590)
  %0 = load i8, ptr %self, align 4, !dbg !13589
  %1 = trunc nuw i8 %0 to i1, !dbg !13589
  %_2 = zext i1 %1 to i32, !dbg !13589
  %2 = trunc nuw i32 %_2 to i1, !dbg !13591
  br i1 %2, label %bb2, label %bb3, !dbg !13591

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13592
  %4 = load i8, ptr %3, align 1, !dbg !13592
  %e = trunc nuw i8 %4 to i1, !dbg !13592
  %5 = zext i1 %e to i8, !dbg !13592
  store i8 %5, ptr %e.dbg.spill, align 1, !dbg !13592
    #dbg_declare(ptr %e.dbg.spill, !13587, !DIExpression(), !13593)
  %6 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !13594
  %7 = zext i1 %e to i8, !dbg !13594
  store i8 %7, ptr %6, align 1, !dbg !13594
  store i8 1, ptr %_0, align 4, !dbg !13594
  br label %bb4, !dbg !13595

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13596
  %v = load i32, ptr %8, align 4, !dbg !13596
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !13596
    #dbg_declare(ptr %v.dbg.spill, !13585, !DIExpression(), !13597)
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13598
  store i32 %v, ptr %9, align 4, !dbg !13598
  store i8 0, ptr %_0, align 4, !dbg !13598
  br label %bb4, !dbg !13599

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !13600

bb1:                                              ; No predecessors!
  unreachable, !dbg !13589
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9c3d6ae00637452fE"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !13601 {
start:
  %e.dbg.spill = alloca [1 x i8], align 1, !dbg !13625
  %v.dbg.spill = alloca [8 x i8], align 8, !dbg !13625
    #dbg_declare(ptr %self, !13620, !DIExpression(), !13626)
  %0 = load i8, ptr %self, align 8, !dbg !13625
  %1 = trunc nuw i8 %0 to i1, !dbg !13625
  %_2 = zext i1 %1 to i32, !dbg !13625
  %2 = trunc nuw i32 %_2 to i1, !dbg !13627
  br i1 %2, label %bb2, label %bb3, !dbg !13627

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13628
  %4 = load i8, ptr %3, align 1, !dbg !13628
  %e = trunc nuw i8 %4 to i1, !dbg !13628
  %5 = zext i1 %e to i8, !dbg !13628
  store i8 %5, ptr %e.dbg.spill, align 1, !dbg !13628
    #dbg_declare(ptr %e.dbg.spill, !13623, !DIExpression(), !13629)
  %6 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !13630
  %7 = zext i1 %e to i8, !dbg !13630
  store i8 %7, ptr %6, align 1, !dbg !13630
  store i8 1, ptr %_0, align 8, !dbg !13630
  br label %bb4, !dbg !13631

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13632
  %v = load i64, ptr %8, align 8, !dbg !13632
  store i64 %v, ptr %v.dbg.spill, align 8, !dbg !13632
    #dbg_declare(ptr %v.dbg.spill, !13621, !DIExpression(), !13633)
  %9 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !13634
  store i64 %v, ptr %9, align 8, !dbg !13634
  store i8 0, ptr %_0, align 8, !dbg !13634
  br label %bb4, !dbg !13635

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !13636

bb1:                                              ; No predecessors!
  unreachable, !dbg !13625
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha925cae9aa8519f6E"(i1 zeroext %0, i8 %1) unnamed_addr #0 !dbg !13637 {
start:
  %v.dbg.spill = alloca [1 x i8], align 1
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self = alloca [2 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
  %3 = getelementptr inbounds i8, ptr %self, i32 1
  store i8 %1, ptr %3, align 1
    #dbg_declare(ptr %self, !13656, !DIExpression(), !13661)
    #dbg_declare(ptr %e.dbg.spill, !13659, !DIExpression(), !13662)
  %4 = load i8, ptr %self, align 1, !dbg !13663
  %5 = trunc nuw i8 %4 to i1, !dbg !13663
  %6 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13663
  %7 = load i8, ptr %6, align 1, !dbg !13663
  %_2 = zext i1 %5 to i32, !dbg !13663
  %8 = trunc nuw i32 %_2 to i1, !dbg !13664
  br i1 %8, label %bb2, label %bb3, !dbg !13664

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !13665
  br label %bb4, !dbg !13666

bb3:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13667
  %v = load i8, ptr %9, align 1, !dbg !13667
  store i8 %v, ptr %v.dbg.spill, align 1, !dbg !13667
    #dbg_declare(ptr %v.dbg.spill, !13657, !DIExpression(), !13668)
  %10 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !13669
  store i8 %v, ptr %10, align 1, !dbg !13669
  store i8 0, ptr %_0, align 1, !dbg !13669
  br label %bb4, !dbg !13670

bb4:                                              ; preds = %bb2, %bb3
  %11 = load i8, ptr %_0, align 1, !dbg !13671
  %12 = trunc nuw i8 %11 to i1, !dbg !13671
  %13 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !13671
  %14 = load i8, ptr %13, align 1, !dbg !13671
  %15 = insertvalue { i1, i8 } poison, i1 %12, 0, !dbg !13671
  %16 = insertvalue { i1, i8 } %15, i8 %14, 1, !dbg !13671
  ret { i1, i8 } %16, !dbg !13671

bb1:                                              ; No predecessors!
  unreachable, !dbg !13663
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb265c32027c10ef6E"(i1 zeroext %0, i8 %1) unnamed_addr #0 !dbg !13672 {
start:
  %e.dbg.spill = alloca [1 x i8], align 1
  %v.dbg.spill = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self = alloca [2 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
  %3 = getelementptr inbounds i8, ptr %self, i32 1
  store i8 %1, ptr %3, align 1
    #dbg_declare(ptr %self, !13690, !DIExpression(), !13695)
  %4 = load i8, ptr %self, align 1, !dbg !13696
  %5 = trunc nuw i8 %4 to i1, !dbg !13696
  %6 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13696
  %7 = load i8, ptr %6, align 1, !dbg !13696
  %_2 = zext i1 %5 to i32, !dbg !13696
  %8 = trunc nuw i32 %_2 to i1, !dbg !13697
  br i1 %8, label %bb2, label %bb3, !dbg !13697

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13698
  %10 = load i8, ptr %9, align 1, !dbg !13698
  %e = trunc nuw i8 %10 to i1, !dbg !13698
  %11 = zext i1 %e to i8, !dbg !13698
  store i8 %11, ptr %e.dbg.spill, align 1, !dbg !13698
    #dbg_declare(ptr %e.dbg.spill, !13693, !DIExpression(), !13699)
  %12 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !13700
  %13 = zext i1 %e to i8, !dbg !13700
  store i8 %13, ptr %12, align 1, !dbg !13700
  store i8 1, ptr %_0, align 1, !dbg !13700
  br label %bb4, !dbg !13701

bb3:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !13702
  %v = load i8, ptr %14, align 1, !dbg !13702
  store i8 %v, ptr %v.dbg.spill, align 1, !dbg !13702
    #dbg_declare(ptr %v.dbg.spill, !13691, !DIExpression(), !13703)
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !13704
  store i8 %v, ptr %15, align 1, !dbg !13704
  store i8 0, ptr %_0, align 1, !dbg !13704
  br label %bb4, !dbg !13705

bb4:                                              ; preds = %bb2, %bb3
  %16 = load i8, ptr %_0, align 1, !dbg !13706
  %17 = trunc nuw i8 %16 to i1, !dbg !13706
  %18 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !13706
  %19 = load i8, ptr %18, align 1, !dbg !13706
  %20 = insertvalue { i1, i8 } poison, i1 %17, 0, !dbg !13706
  %21 = insertvalue { i1, i8 } %20, i8 %19, 1, !dbg !13706
  ret { i1, i8 } %21, !dbg !13706

bb1:                                              ; No predecessors!
  unreachable, !dbg !13696
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE"(i32 %0, i32 %1) unnamed_addr #0 !dbg !13707 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !13725, !DIExpression(), !13730)
    #dbg_declare(ptr %e.dbg.spill, !13728, !DIExpression(), !13731)
  %_2 = load i32, ptr %self, align 4, !dbg !13732
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13732
  %4 = load i32, ptr %3, align 4, !dbg !13732
  %5 = trunc nuw i32 %_2 to i1, !dbg !13733
  br i1 %5, label %bb2, label %bb3, !dbg !13733

bb2:                                              ; preds = %start
  store i32 1, ptr %_0, align 4, !dbg !13734
  br label %bb4, !dbg !13735

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13736
  %v = load i32, ptr %6, align 4, !dbg !13736
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !13736
    #dbg_declare(ptr %v.dbg.spill, !13726, !DIExpression(), !13737)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13738
  store i32 %v, ptr %7, align 4, !dbg !13738
  store i32 0, ptr %_0, align 4, !dbg !13738
  br label %bb4, !dbg !13739

bb4:                                              ; preds = %bb2, %bb3
  %8 = load i32, ptr %_0, align 4, !dbg !13740
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13740
  %10 = load i32, ptr %9, align 4, !dbg !13740
  %11 = insertvalue { i32, i32 } poison, i32 %8, 0, !dbg !13740
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1, !dbg !13740
  ret { i32, i32 } %12, !dbg !13740

bb1:                                              ; No predecessors!
  unreachable, !dbg !13732
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcc4ddfcdc731c1bbE"(ptr align 1 %0, i32 %1) unnamed_addr #0 !dbg !13741 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !13760, !DIExpression(), !13765)
    #dbg_declare(ptr %e.dbg.spill, !13763, !DIExpression(), !13766)
  %3 = load ptr, ptr %self, align 4, !dbg !13767
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13767
  %5 = load i32, ptr %4, align 4, !dbg !13767
  %6 = ptrtoint ptr %3 to i32, !dbg !13767
  %7 = icmp eq i32 %6, 0, !dbg !13767
  %_2 = select i1 %7, i32 1, i32 0, !dbg !13767
  %8 = trunc nuw i32 %_2 to i1, !dbg !13768
  br i1 %8, label %bb2, label %bb3, !dbg !13768

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !13769
  br label %bb4, !dbg !13770

bb3:                                              ; preds = %start
  %v.0 = load ptr, ptr %self, align 4, !dbg !13771
  %9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13771
  %v.1 = load i32, ptr %9, align 4, !dbg !13771
  store ptr %v.0, ptr %v.dbg.spill, align 4, !dbg !13771
  %10 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4, !dbg !13771
  store i32 %v.1, ptr %10, align 4, !dbg !13771
    #dbg_declare(ptr %v.dbg.spill, !13761, !DIExpression(), !13772)
  store ptr %v.0, ptr %_0, align 4, !dbg !13773
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13773
  store i32 %v.1, ptr %11, align 4, !dbg !13773
  br label %bb4, !dbg !13774

bb4:                                              ; preds = %bb2, %bb3
  %12 = load ptr, ptr %_0, align 4, !dbg !13775
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13775
  %14 = load i32, ptr %13, align 4, !dbg !13775
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0, !dbg !13775
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1, !dbg !13775
  ret { ptr, i32 } %16, !dbg !13775

bb1:                                              ; No predecessors!
  unreachable, !dbg !13767
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd5164492adef2e3cE"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !13776 {
start:
  %e.dbg.spill = alloca [1 x i8], align 1
  %v = alloca [16 x i8], align 4
    #dbg_declare(ptr %self, !13795, !DIExpression(), !13800)
    #dbg_declare(ptr %v, !13796, !DIExpression(), !13801)
  %0 = load ptr, ptr %self, align 4, !dbg !13802
  %1 = ptrtoint ptr %0 to i32, !dbg !13802
  %2 = icmp eq i32 %1, 0, !dbg !13802
  %_2 = select i1 %2, i32 1, i32 0, !dbg !13802
  %3 = trunc nuw i32 %_2 to i1, !dbg !13803
  br i1 %3, label %bb2, label %bb3, !dbg !13803

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13804
  %5 = load i8, ptr %4, align 4, !dbg !13804
  %e = trunc nuw i8 %5 to i1, !dbg !13804
  %6 = zext i1 %e to i8, !dbg !13804
  store i8 %6, ptr %e.dbg.spill, align 1, !dbg !13804
    #dbg_declare(ptr %e.dbg.spill, !13798, !DIExpression(), !13805)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13806
  %8 = zext i1 %e to i8, !dbg !13806
  store i8 %8, ptr %7, align 4, !dbg !13806
  store ptr null, ptr %_0, align 4, !dbg !13806
  br label %bb4, !dbg !13807

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %v, ptr align 4 %self, i32 16, i1 false), !dbg !13808
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %v, i32 16, i1 false), !dbg !13809
  br label %bb4, !dbg !13810

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !13811

bb1:                                              ; No predecessors!
  unreachable, !dbg !13802
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd57a36708ee5cf11E"(i32 %0) unnamed_addr #0 !dbg !13812 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !13831, !DIExpression(), !13836)
    #dbg_declare(ptr %e.dbg.spill, !13834, !DIExpression(), !13837)
  %1 = load i32, ptr %self, align 4, !dbg !13838
  %2 = icmp eq i32 %1, 1114112, !dbg !13838
  %_2 = select i1 %2, i32 1, i32 0, !dbg !13838
  %3 = trunc nuw i32 %_2 to i1, !dbg !13839
  br i1 %3, label %bb2, label %bb3, !dbg !13839

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !13840
  br label %bb4, !dbg !13841

bb3:                                              ; preds = %start
  %v = load i32, ptr %self, align 4, !dbg !13842
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !13842
    #dbg_declare(ptr %v.dbg.spill, !13832, !DIExpression(), !13843)
  store i32 %v, ptr %_0, align 4, !dbg !13844
  br label %bb4, !dbg !13845

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4, !dbg !13846
  ret i32 %4, !dbg !13846

bb1:                                              ; No predecessors!
  unreachable, !dbg !13838
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE"(i32 %0, i32 %1) unnamed_addr #0 !dbg !13847 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !13865, !DIExpression(), !13870)
    #dbg_declare(ptr %e.dbg.spill, !13868, !DIExpression(), !13871)
  %_2 = load i32, ptr %self, align 4, !dbg !13872
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13872
  %4 = load i32, ptr %3, align 4, !dbg !13872
  %5 = trunc nuw i32 %_2 to i1, !dbg !13873
  br i1 %5, label %bb2, label %bb3, !dbg !13873

bb2:                                              ; preds = %start
  store i32 1, ptr %_0, align 4, !dbg !13874
  br label %bb4, !dbg !13875

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13876
  %v = load i32, ptr %6, align 4, !dbg !13876
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !13876
    #dbg_declare(ptr %v.dbg.spill, !13866, !DIExpression(), !13877)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13878
  store i32 %v, ptr %7, align 4, !dbg !13878
  store i32 0, ptr %_0, align 4, !dbg !13878
  br label %bb4, !dbg !13879

bb4:                                              ; preds = %bb2, %bb3
  %8 = load i32, ptr %_0, align 4, !dbg !13880
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13880
  %10 = load i32, ptr %9, align 4, !dbg !13880
  %11 = insertvalue { i32, i32 } poison, i32 %8, 0, !dbg !13880
  %12 = insertvalue { i32, i32 } %11, i32 %10, 1, !dbg !13880
  ret { i32, i32 } %12, !dbg !13880

bb1:                                              ; No predecessors!
  unreachable, !dbg !13872
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nounwind
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h9249f5fe1de63aecE"(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !13881 {
start:
  %self.dbg.spill.i3 = alloca [8 x i8], align 4
  %self.dbg.spill.i2 = alloca [8 x i8], align 4
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %is_long.dbg.spill = alloca [1 x i8], align 1
  %searcher.dbg.spill = alloca [4 x i8], align 4
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13884, !DIExpression(), !13892)
  %_2 = load i32, ptr %self, align 8, !dbg !13893
  %0 = trunc nuw i32 %_2 to i1, !dbg !13894
  br i1 %0, label %bb2, label %bb3, !dbg !13894

bb2:                                              ; preds = %start
  %searcher = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13895
  store ptr %searcher, ptr %searcher.dbg.spill, align 4, !dbg !13895
    #dbg_declare(ptr %searcher.dbg.spill, !13888, !DIExpression(), !13896)
  %1 = getelementptr inbounds i8, ptr %searcher, i32 28, !dbg !13897
  %_10 = load i32, ptr %1, align 4, !dbg !13897
  %is_long = icmp eq i32 %_10, -1, !dbg !13897
  %2 = zext i1 %is_long to i8, !dbg !13897
  store i8 %2, ptr %is_long.dbg.spill, align 1, !dbg !13897
    #dbg_declare(ptr %is_long.dbg.spill, !13890, !DIExpression(), !13898)
  br i1 %is_long, label %bb7, label %bb10, !dbg !13899

bb3:                                              ; preds = %bb3, %start
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hba2273dbc027c833E"(ptr sret([12 x i8]) align 4 %_3, ptr align 8 %self) #13, !dbg !13900
  %_4 = load i32, ptr %_3, align 4, !dbg !13901
  switch i32 %_4, label %bb1 [
    i32 0, label %bb6
    i32 1, label %bb3
    i32 2, label %bb5
  ], !dbg !13902

bb1:                                              ; preds = %bb3
  unreachable, !dbg !13903

bb6:                                              ; preds = %bb3
  %3 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13905
  %a = load i32, ptr %3, align 4, !dbg !13905
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !13905
    #dbg_declare(ptr %a.dbg.spill, !13885, !DIExpression(), !13906)
  %4 = getelementptr inbounds i8, ptr %_3, i32 8, !dbg !13907
  %b = load i32, ptr %4, align 4, !dbg !13907
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !13907
    #dbg_declare(ptr %b.dbg.spill, !13887, !DIExpression(), !13908)
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13909
  store i32 %a, ptr %5, align 4, !dbg !13909
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !13909
  store i32 %b, ptr %6, align 4, !dbg !13909
  store i32 1, ptr %_0, align 4, !dbg !13909
  br label %bb13, !dbg !13903

bb5:                                              ; preds = %bb3
  store i32 0, ptr %_0, align 4, !dbg !13910
  br label %bb13, !dbg !13911

bb13:                                             ; preds = %bb7, %bb10, %bb5, %bb6
  ret void, !dbg !13912

bb10:                                             ; preds = %bb2
  %7 = getelementptr inbounds i8, ptr %self, i32 48, !dbg !13913
  %_17.0 = load ptr, ptr %7, align 8, !dbg !13913
  %8 = getelementptr inbounds i8, ptr %7, i32 4, !dbg !13913
  %_17.1 = load i32, ptr %8, align 4, !dbg !13913
  store ptr %_17.0, ptr %self.dbg.spill.i3, align 4
  %9 = getelementptr inbounds i8, ptr %self.dbg.spill.i3, i32 4
  store i32 %_17.1, ptr %9, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !886, !DIExpression(), !13914)
  %10 = insertvalue { ptr, i32 } poison, ptr %_17.0, 0, !dbg !13916
  %11 = insertvalue { ptr, i32 } %10, i32 %_17.1, 1, !dbg !13916
  %_13.0 = extractvalue { ptr, i32 } %11, 0, !dbg !13917
  %_13.1 = extractvalue { ptr, i32 } %11, 1, !dbg !13917
  %12 = getelementptr inbounds i8, ptr %self, i32 56, !dbg !13918
  %_18.0 = load ptr, ptr %12, align 8, !dbg !13918
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !13918
  %_18.1 = load i32, ptr %13, align 4, !dbg !13918
  store ptr %_18.0, ptr %self.dbg.spill.i2, align 4
  %14 = getelementptr inbounds i8, ptr %self.dbg.spill.i2, i32 4
  store i32 %_18.1, ptr %14, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !886, !DIExpression(), !13919)
  %15 = insertvalue { ptr, i32 } poison, ptr %_18.0, 0, !dbg !13921
  %16 = insertvalue { ptr, i32 } %15, i32 %_18.1, 1, !dbg !13921
  %_14.0 = extractvalue { ptr, i32 } %16, 0, !dbg !13922
  %_14.1 = extractvalue { ptr, i32 } %16, 1, !dbg !13922
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h4d4f9eaa585cdc45E(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %searcher, ptr align 1 %_13.0, i32 %_13.1, ptr align 1 %_14.0, i32 %_14.1, i1 zeroext false) #13, !dbg !13923
  br label %bb13, !dbg !13923

bb7:                                              ; preds = %bb2
  %17 = getelementptr inbounds i8, ptr %self, i32 48, !dbg !13924
  %_15.0 = load ptr, ptr %17, align 8, !dbg !13924
  %18 = getelementptr inbounds i8, ptr %17, i32 4, !dbg !13924
  %_15.1 = load i32, ptr %18, align 4, !dbg !13924
  store ptr %_15.0, ptr %self.dbg.spill.i1, align 4
  %19 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %_15.1, ptr %19, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !886, !DIExpression(), !13925)
  %20 = insertvalue { ptr, i32 } poison, ptr %_15.0, 0, !dbg !13927
  %21 = insertvalue { ptr, i32 } %20, i32 %_15.1, 1, !dbg !13927
  %_11.0 = extractvalue { ptr, i32 } %21, 0, !dbg !13928
  %_11.1 = extractvalue { ptr, i32 } %21, 1, !dbg !13928
  %22 = getelementptr inbounds i8, ptr %self, i32 56, !dbg !13929
  %_16.0 = load ptr, ptr %22, align 8, !dbg !13929
  %23 = getelementptr inbounds i8, ptr %22, i32 4, !dbg !13929
  %_16.1 = load i32, ptr %23, align 4, !dbg !13929
  store ptr %_16.0, ptr %self.dbg.spill.i, align 4
  %24 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_16.1, ptr %24, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !13930)
  %25 = insertvalue { ptr, i32 } poison, ptr %_16.0, 0, !dbg !13932
  %26 = insertvalue { ptr, i32 } %25, i32 %_16.1, 1, !dbg !13932
  %_12.0 = extractvalue { ptr, i32 } %26, 0, !dbg !13933
  %_12.1 = extractvalue { ptr, i32 } %26, 1, !dbg !13933
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h4d4f9eaa585cdc45E(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %searcher, ptr align 1 %_11.0, i32 %_11.1, ptr align 1 %_12.0, i32 %_12.1, i1 zeroext true) #13, !dbg !13934
  br label %bb13, !dbg !13934
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nounwind
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hba2273dbc027c833E"(ptr sret([12 x i8]) align 4 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !13935 {
start:
  %self.dbg.spill.i4 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %is_long.dbg.spill = alloca [1 x i8], align 1
  %searcher.dbg.spill2 = alloca [4 x i8], align 4
  %ch.dbg.spill = alloca [4 x i8], align 4
  %pos.dbg.spill = alloca [4 x i8], align 4
  %is_match.dbg.spill = alloca [1 x i8], align 1
  %searcher.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %b = alloca [4 x i8], align 4
  %otherwise = alloca [12 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %_8 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13939, !DIExpression(), !13958)
    #dbg_declare(ptr %otherwise, !13956, !DIExpression(), !13959)
    #dbg_declare(ptr %b, !13955, !DIExpression(), !13960)
  %_2 = load i32, ptr %self, align 8, !dbg !13961
  %0 = trunc nuw i32 %_2 to i1, !dbg !13962
  br i1 %0, label %bb2, label %bb3, !dbg !13962

bb2:                                              ; preds = %start
  %searcher1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13963
  store ptr %searcher1, ptr %searcher.dbg.spill2, align 4, !dbg !13963
    #dbg_declare(ptr %searcher.dbg.spill2, !13949, !DIExpression(), !13964)
  %1 = getelementptr inbounds i8, ptr %searcher1, i32 20, !dbg !13965
  %_20 = load i32, ptr %1, align 4, !dbg !13965
  %2 = getelementptr inbounds i8, ptr %self, i32 48, !dbg !13966
  %_37.0 = load ptr, ptr %2, align 8, !dbg !13966
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !13966
  %_37.1 = load i32, ptr %3, align 4, !dbg !13966
; call core::str::<impl str>::len
  %_21 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %_37.0, i32 %_37.1) #13, !dbg !13967
  %_19 = icmp eq i32 %_20, %_21, !dbg !13965
  br i1 %_19, label %bb16, label %bb17, !dbg !13965

bb3:                                              ; preds = %start
  %searcher = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13968
  store ptr %searcher, ptr %searcher.dbg.spill, align 4, !dbg !13968
    #dbg_declare(ptr %searcher.dbg.spill, !13940, !DIExpression(), !13969)
  %4 = getelementptr inbounds i8, ptr %searcher, i32 10, !dbg !13970
  %5 = load i8, ptr %4, align 2, !dbg !13970
  %_4 = trunc nuw i8 %5 to i1, !dbg !13970
  br i1 %_4, label %bb4, label %bb5, !dbg !13970

bb5:                                              ; preds = %bb3
  %6 = getelementptr inbounds i8, ptr %searcher, i32 8, !dbg !13971
  %7 = load i8, ptr %6, align 4, !dbg !13971
  %is_match = trunc nuw i8 %7 to i1, !dbg !13971
  %8 = zext i1 %is_match to i8, !dbg !13971
  store i8 %8, ptr %is_match.dbg.spill, align 1, !dbg !13971
    #dbg_declare(ptr %is_match.dbg.spill, !13943, !DIExpression(), !13972)
  %9 = getelementptr inbounds i8, ptr %searcher, i32 8, !dbg !13973
  %10 = load i8, ptr %9, align 4, !dbg !13973
  %_6 = trunc nuw i8 %10 to i1, !dbg !13973
  %11 = getelementptr inbounds i8, ptr %searcher, i32 8, !dbg !13974
  %12 = xor i1 %_6, true, !dbg !13974
  %13 = zext i1 %12 to i8, !dbg !13974
  store i8 %13, ptr %11, align 4, !dbg !13974
  %pos = load i32, ptr %searcher, align 4, !dbg !13975
  store i32 %pos, ptr %pos.dbg.spill, align 4, !dbg !13975
    #dbg_declare(ptr %pos.dbg.spill, !13945, !DIExpression(), !13976)
  %14 = getelementptr inbounds i8, ptr %self, i32 48, !dbg !13977
  %_38.0 = load ptr, ptr %14, align 8, !dbg !13977
  %15 = getelementptr inbounds i8, ptr %14, i32 4, !dbg !13977
  %_38.1 = load i32, ptr %15, align 4, !dbg !13977
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %16 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %_38.0, i32 %_38.1, i32 %pos, ptr align 4 @alloc_c5bd19d24cd02a5fc6ca5f7699177812) #13, !dbg !13978
  %_11.0 = extractvalue { ptr, i32 } %16, 0, !dbg !13978
  %_11.1 = extractvalue { ptr, i32 } %16, 1, !dbg !13978
; call core::str::<impl str>::chars
  %17 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E"(ptr align 1 %_11.0, i32 %_11.1) #13, !dbg !13979
  %18 = extractvalue { ptr, ptr } %17, 0, !dbg !13979
  %19 = extractvalue { ptr, ptr } %17, 1, !dbg !13979
  store ptr %18, ptr %_10, align 4, !dbg !13979
  %20 = getelementptr inbounds i8, ptr %_10, i32 4, !dbg !13979
  store ptr %19, ptr %20, align 4, !dbg !13979
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %21 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %_10) #13, !dbg !13980
  store i32 %21, ptr %_8, align 4, !dbg !13980
  br i1 %is_match, label %bb11, label %bb12, !dbg !13981

bb4:                                              ; preds = %bb3
  store i32 2, ptr %_0, align 4, !dbg !13982
  br label %bb29, !dbg !13983

bb12:                                             ; preds = %bb5
  %22 = load i32, ptr %_8, align 4, !dbg !13977
  %23 = icmp eq i32 %22, 1114112, !dbg !13977
  %_13 = select i1 %23, i32 0, i32 1, !dbg !13977
  %24 = trunc nuw i32 %_13 to i1, !dbg !13985
  br i1 %24, label %bb9, label %bb10, !dbg !13985

bb11:                                             ; preds = %bb5
  %25 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13986
  store i32 %pos, ptr %25, align 4, !dbg !13986
  %26 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !13986
  store i32 %pos, ptr %26, align 4, !dbg !13986
  store i32 0, ptr %_0, align 4, !dbg !13986
  br label %bb29, !dbg !13987

bb9:                                              ; preds = %bb12
  %ch = load i32, ptr %_8, align 4, !dbg !13988
  store i32 %ch, ptr %ch.dbg.spill, align 4, !dbg !13988
    #dbg_declare(ptr %ch.dbg.spill, !13947, !DIExpression(), !13989)
; call core::char::methods::<impl char>::len_utf8
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hd0bbf0a5cacb66d4E"(i32 %ch) #13, !dbg !13990
  %27 = load i32, ptr %searcher, align 4, !dbg !13991
  %_16.0 = add i32 %27, %_15, !dbg !13991
  %_16.1 = icmp ult i32 %_16.0, %27, !dbg !13991
  br i1 %_16.1, label %panic, label %bb14, !dbg !13991

bb10:                                             ; preds = %bb12
  %28 = getelementptr inbounds i8, ptr %searcher, i32 10, !dbg !13992
  store i8 1, ptr %28, align 2, !dbg !13992
  store i32 2, ptr %_0, align 4, !dbg !13993
  br label %bb29, !dbg !13993

bb29:                                             ; preds = %bb16, %bb21, %bb25, %bb4, %bb11, %bb14, %bb10
  ret void, !dbg !13994

bb14:                                             ; preds = %bb9
  store i32 %_16.0, ptr %searcher, align 4, !dbg !13991
  %_17 = load i32, ptr %searcher, align 4, !dbg !13995
  %29 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13996
  store i32 %pos, ptr %29, align 4, !dbg !13996
  %30 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !13996
  store i32 %_17, ptr %30, align 4, !dbg !13996
  store i32 1, ptr %_0, align 4, !dbg !13996
  br label %bb29, !dbg !13997

panic:                                            ; preds = %bb9
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_cf7d4dd73d1fc3da4dbfc4e115a0b183) #14, !dbg !13991
  unreachable, !dbg !13991

bb17:                                             ; preds = %bb2
  %31 = getelementptr inbounds i8, ptr %searcher1, i32 28, !dbg !13998
  %_23 = load i32, ptr %31, align 4, !dbg !13998
  %is_long = icmp eq i32 %_23, -1, !dbg !13998
  %32 = zext i1 %is_long to i8, !dbg !13998
  store i8 %32, ptr %is_long.dbg.spill, align 1, !dbg !13998
    #dbg_declare(ptr %is_long.dbg.spill, !13951, !DIExpression(), !13999)
  %33 = getelementptr inbounds i8, ptr %self, i32 48, !dbg !14000
  %_39.0 = load ptr, ptr %33, align 8, !dbg !14000
  %34 = getelementptr inbounds i8, ptr %33, i32 4, !dbg !14000
  %_39.1 = load i32, ptr %34, align 4, !dbg !14000
  store ptr %_39.0, ptr %self.dbg.spill.i4, align 4
  %35 = getelementptr inbounds i8, ptr %self.dbg.spill.i4, i32 4
  store i32 %_39.1, ptr %35, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !886, !DIExpression(), !14001)
  %36 = insertvalue { ptr, i32 } poison, ptr %_39.0, 0, !dbg !14003
  %37 = insertvalue { ptr, i32 } %36, i32 %_39.1, 1, !dbg !14003
  %_25.0 = extractvalue { ptr, i32 } %37, 0, !dbg !14004
  %_25.1 = extractvalue { ptr, i32 } %37, 1, !dbg !14004
  %38 = getelementptr inbounds i8, ptr %self, i32 56, !dbg !14005
  %_40.0 = load ptr, ptr %38, align 8, !dbg !14005
  %39 = getelementptr inbounds i8, ptr %38, i32 4, !dbg !14005
  %_40.1 = load i32, ptr %39, align 4, !dbg !14005
  store ptr %_40.0, ptr %self.dbg.spill.i, align 4
  %40 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_40.1, ptr %40, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !14006)
  %41 = insertvalue { ptr, i32 } poison, ptr %_40.0, 0, !dbg !14008
  %42 = insertvalue { ptr, i32 } %41, i32 %_40.1, 1, !dbg !14008
  %_26.0 = extractvalue { ptr, i32 } %42, 0, !dbg !14009
  %_26.1 = extractvalue { ptr, i32 } %42, 1, !dbg !14009
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17hfbf25a28e62a971aE(ptr sret([12 x i8]) align 4 %otherwise, ptr align 8 %searcher1, ptr align 1 %_25.0, i32 %_25.1, ptr align 1 %_26.0, i32 %_26.1, i1 zeroext %is_long) #13, !dbg !14010
  %_27 = load i32, ptr %otherwise, align 4, !dbg !14011
  %43 = icmp eq i32 %_27, 1, !dbg !14012
  br i1 %43, label %bb22, label %bb21, !dbg !14012

bb16:                                             ; preds = %bb2
  store i32 2, ptr %_0, align 4, !dbg !14013
  br label %bb29, !dbg !13983

bb22:                                             ; preds = %bb17
  %44 = getelementptr inbounds i8, ptr %otherwise, i32 4, !dbg !14014
  %a = load i32, ptr %44, align 4, !dbg !14014
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !14014
    #dbg_declare(ptr %a.dbg.spill, !13953, !DIExpression(), !14015)
  %45 = getelementptr inbounds i8, ptr %otherwise, i32 8, !dbg !14016
  %46 = load i32, ptr %45, align 4, !dbg !14016
  store i32 %46, ptr %b, align 4, !dbg !14016
  br label %bb23, !dbg !14017

bb21:                                             ; preds = %bb17
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %otherwise, i32 12, i1 false), !dbg !14018
  br label %bb29, !dbg !14019

bb23:                                             ; preds = %bb27, %bb22
  %47 = getelementptr inbounds i8, ptr %self, i32 48, !dbg !14020
  %_41.0 = load ptr, ptr %47, align 8, !dbg !14020
  %48 = getelementptr inbounds i8, ptr %47, i32 4, !dbg !14020
  %_41.1 = load i32, ptr %48, align 4, !dbg !14020
  %_31 = load i32, ptr %b, align 4, !dbg !14021
; call core::str::<impl str>::is_char_boundary
  %_30 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h23cd1c400a6aaa96E"(ptr align 1 %_41.0, i32 %_41.1, i32 %_31) #13, !dbg !14022
  br i1 %_30, label %bb25, label %bb26, !dbg !14020

bb26:                                             ; preds = %bb23
  %49 = load i32, ptr %b, align 4, !dbg !14023
  %_32.0 = add i32 %49, 1, !dbg !14023
  %_32.1 = icmp ult i32 %_32.0, %49, !dbg !14023
  br i1 %_32.1, label %panic3, label %bb27, !dbg !14023

bb25:                                             ; preds = %bb23
  %_34 = load i32, ptr %b, align 4, !dbg !14024
  %50 = getelementptr inbounds i8, ptr %searcher1, i32 20, !dbg !14025
  %_35 = load i32, ptr %50, align 4, !dbg !14025
; call core::cmp::max
  %_33 = call i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32 %_34, i32 %_35) #13, !dbg !14026
  %51 = getelementptr inbounds i8, ptr %searcher1, i32 20, !dbg !14027
  store i32 %_33, ptr %51, align 4, !dbg !14027
  %_36 = load i32, ptr %b, align 4, !dbg !14028
  %52 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14029
  store i32 %a, ptr %52, align 4, !dbg !14029
  %53 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !14029
  store i32 %_36, ptr %53, align 4, !dbg !14029
  store i32 1, ptr %_0, align 4, !dbg !14029
  br label %bb29, !dbg !14030

bb27:                                             ; preds = %bb26
  store i32 %_32.0, ptr %b, align 4, !dbg !14023
  br label %bb23, !dbg !14017

panic3:                                           ; preds = %bb26
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_60e890c0bc135a4c99ea73851717ee03) #14, !dbg !14023
  unreachable, !dbg !14023

bb1:                                              ; No predecessors!
  unreachable, !dbg !13983
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h4dec297513eb01a7E"(ptr align 4 %self) unnamed_addr #0 !dbg !14031 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14036, !DIExpression(), !14039)
    #dbg_declare(ptr %f.dbg.spill, !14037, !DIExpression(), !14040)
; call core::iter::traits::iterator::Iterator::any
  %_0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17h88210251c2bb0be6E(ptr align 4 %self) #13, !dbg !14041
  ret i1 %_0, !dbg !14042
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17ha7ff31e633c9850aE"(ptr align 4 %self) unnamed_addr #0 !dbg !14043 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14047, !DIExpression(), !14050)
    #dbg_declare(ptr %f.dbg.spill, !14048, !DIExpression(), !14051)
; call core::iter::traits::iterator::Iterator::any
  %_0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3any17hfbbeee719173d5bfE(ptr align 4 %self) #13, !dbg !14052
  ret i1 %_0, !dbg !14053
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define internal { i1, i8 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h62f550c9487e9adaE"(ptr align 4 %self) unnamed_addr #0 !dbg !14054 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14058, !DIExpression(), !14059)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i1, i8 } @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e108c95f602196cE"(ptr align 4 %self) #13, !dbg !14060
  %_0.0 = extractvalue { i1, i8 } %0, 0, !dbg !14060
  %_0.1 = extractvalue { i1, i8 } %0, 1, !dbg !14060
  %1 = insertvalue { i1, i8 } poison, i1 %_0.0, 0, !dbg !14061
  %2 = insertvalue { i1, i8 } %1, i8 %_0.1, 1, !dbg !14061
  ret { i1, i8 } %2, !dbg !14061
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::rposition
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9rposition17hc3e37590b7f78529E"(ptr align 4 %self) unnamed_addr #0 !dbg !14062 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14066, !DIExpression(), !14069)
    #dbg_declare(ptr %predicate.dbg.spill, !14067, !DIExpression(), !14070)
; call core::iter::traits::iterator::Iterator::rposition
  %0 = call { i32, i32 } @_ZN4core4iter6traits8iterator8Iterator9rposition17h25d212c725042251E(ptr align 4 %self) #13, !dbg !14071
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !14071
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !14071
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !14072
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !14072
  ret { i32, i32 } %2, !dbg !14072
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %self) unnamed_addr #0 !dbg !14073 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14078, !DIExpression(), !14079)
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h8b0e6294ab36d6b3E(ptr align 4 %self) #13, !dbg !14080
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !14080
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !14080
; call core::option::Option<T>::map
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hef2f88899c9c3935E"(i32 %_2.0, i32 %_2.1) #13, !dbg !14081
  ret i32 %_0, !dbg !14082
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h065e5dce4b5782bfE"(ptr %0, ptr %1) unnamed_addr #0 !dbg !14083 {
start:
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store ptr %1, ptr %2, align 4
    #dbg_declare(ptr %self, !14087, !DIExpression(), !14088)
; call core::str::iter::Chars::as_str
  %3 = call { ptr, i32 } @_ZN4core3str4iter5Chars6as_str17ha220dca85a589e1fE(ptr align 4 %self) #13, !dbg !14089
  %_2.0 = extractvalue { ptr, i32 } %3, 0, !dbg !14089
  %_2.1 = extractvalue { ptr, i32 } %3, 1, !dbg !14089
; call core::str::count::count_chars
  %_0 = call i32 @_ZN4core3str5count11count_chars17h26e4e8a2a60a09eaE(ptr align 1 %_2.0, i32 %_2.1) #13, !dbg !14090
  ret i32 %_0, !dbg !14091
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nounwind
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4faa49d588e2b0b4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !14092 {
start:
  %self.dbg.spill.i4 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %found_char.dbg.spill = alloca [4 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %last_byte.dbg.spill = alloca [1 x i8], align 1
  %bytes.dbg.spill = alloca [8 x i8], align 4
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_42 = alloca [8 x i8], align 4
  %slice = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_18 = alloca [8 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14098, !DIExpression(), !14124)
    #dbg_declare(ptr %slice, !14122, !DIExpression(), !14125)
    #dbg_declare(ptr %residual.dbg.spill, !14101, !DIExpression(), !14126)
  br label %bb1, !dbg !14127

bb1:                                              ; preds = %bb21, %bb18, %bb14, %start
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14128
  %_51.0 = load ptr, ptr %0, align 4, !dbg !14128
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !14128
  %_51.1 = load i32, ptr %1, align 4, !dbg !14128
  store ptr %_51.0, ptr %self.dbg.spill.i4, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i4, i32 4
  store i32 %_51.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !886, !DIExpression(), !14129)
  %3 = insertvalue { ptr, i32 } poison, ptr %_51.0, 0, !dbg !14131
  %4 = insertvalue { ptr, i32 } %3, i32 %_51.1, 1, !dbg !14131
  %_4.0 = extractvalue { ptr, i32 } %4, 0, !dbg !14132
  %_4.1 = extractvalue { ptr, i32 } %4, 1, !dbg !14132
  %5 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14133
  %_6 = load i32, ptr %5, align 4, !dbg !14133
  %6 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !14134
  %_7 = load i32, ptr %6, align 4, !dbg !14134
; call core::slice::<impl [T]>::get
  %7 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hbd1cafab9ccc6558E"(ptr align 1 %_4.0, i32 %_4.1, i32 %_6, i32 %_7) #13, !dbg !14135
  %_3.0 = extractvalue { ptr, i32 } %7, 0, !dbg !14135
  %_3.1 = extractvalue { ptr, i32 } %7, 1, !dbg !14135
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = call { ptr, i32 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6a8f8ba29e36df99E"(ptr align 1 %_3.0, i32 %_3.1) #13, !dbg !14128
  %9 = extractvalue { ptr, i32 } %8, 0, !dbg !14128
  %10 = extractvalue { ptr, i32 } %8, 1, !dbg !14128
  store ptr %9, ptr %_2, align 4, !dbg !14128
  %11 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !14128
  store i32 %10, ptr %11, align 4, !dbg !14128
  %12 = load ptr, ptr %_2, align 4, !dbg !14128
  %13 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !14128
  %14 = load i32, ptr %13, align 4, !dbg !14128
  %15 = ptrtoint ptr %12 to i32, !dbg !14128
  %16 = icmp eq i32 %15, 0, !dbg !14128
  %_8 = select i1 %16, i32 1, i32 0, !dbg !14128
  %17 = trunc nuw i32 %_8 to i1, !dbg !14128
  br i1 %17, label %bb7, label %bb6, !dbg !14128

bb7:                                              ; preds = %bb1
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  call void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h3f867460551c17dfE"(ptr sret([12 x i8]) align 4 %_0) #13, !dbg !14136
  br label %bb27, !dbg !14136

bb6:                                              ; preds = %bb1
  %bytes.0 = load ptr, ptr %_2, align 4, !dbg !14128
  %18 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !14128
  %bytes.1 = load i32, ptr %18, align 4, !dbg !14128
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 4, !dbg !14128
  %19 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i32 4, !dbg !14128
  store i32 %bytes.1, ptr %19, align 4, !dbg !14128
    #dbg_declare(ptr %bytes.dbg.spill, !14099, !DIExpression(), !14137)
    #dbg_declare(ptr %bytes.dbg.spill, !14114, !DIExpression(), !14138)
  %_13 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !14139
; call core::str::pattern::CharSearcher::utf8_size
  %_15 = call i32 @_ZN4core3str7pattern12CharSearcher9utf8_size17ha5c2f94032d1c978E(ptr align 4 %self) #13, !dbg !14140
  %_17.0 = sub i32 %_15, 1, !dbg !14141
  %_17.1 = icmp ult i32 %_15, 1, !dbg !14141
  br i1 %_17.1, label %panic, label %bb9, !dbg !14141

bb9:                                              ; preds = %bb6
; call core::slice::<impl [T]>::get_unchecked
  %_11 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfd0d6820511bc9acE"(ptr align 1 %_13, i32 4, i32 %_17.0, ptr align 4 @alloc_4ae71ff8f7ebb931e6d576230c5bd8dc) #13, !dbg !14142
  %last_byte = load i8, ptr %_11, align 1, !dbg !14143
  store i8 %last_byte, ptr %last_byte.dbg.spill, align 1, !dbg !14143
    #dbg_declare(ptr %last_byte.dbg.spill, !14116, !DIExpression(), !14144)
; call core::slice::memchr::memchr
  %20 = call { i32, i32 } @_ZN4core5slice6memchr6memchr17h90769068d71bb576E(i8 %last_byte, ptr align 1 %bytes.0, i32 %bytes.1) #13, !dbg !14145
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !14145
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !14145
  store i32 %21, ptr %_18, align 4, !dbg !14145
  %23 = getelementptr inbounds i8, ptr %_18, i32 4, !dbg !14145
  store i32 %22, ptr %23, align 4, !dbg !14145
  %_19 = load i32, ptr %_18, align 4, !dbg !14145
  %24 = getelementptr inbounds i8, ptr %_18, i32 4, !dbg !14145
  %25 = load i32, ptr %24, align 4, !dbg !14145
  %26 = trunc nuw i32 %_19 to i1, !dbg !14146
  br i1 %26, label %bb12, label %bb26, !dbg !14146

panic:                                            ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_69d81e4ea8d7bf152741d828bff053cb) #14, !dbg !14141
  unreachable, !dbg !14141

bb12:                                             ; preds = %bb9
  %27 = getelementptr inbounds i8, ptr %_18, i32 4, !dbg !14147
  %index = load i32, ptr %27, align 4, !dbg !14147
  store i32 %index, ptr %index.dbg.spill, align 4, !dbg !14147
    #dbg_declare(ptr %index.dbg.spill, !14118, !DIExpression(), !14147)
  %_22.0 = add i32 %index, 1, !dbg !14148
  %_22.1 = icmp ult i32 %_22.0, %index, !dbg !14148
  br i1 %_22.1, label %panic1, label %bb13, !dbg !14148

bb26:                                             ; preds = %bb9
  %28 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !14149
  %_50 = load i32, ptr %28, align 4, !dbg !14149
  %29 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14150
  store i32 %_50, ptr %29, align 4, !dbg !14150
  store i32 0, ptr %_0, align 4, !dbg !14151
  br label %bb27, !dbg !14152

bb13:                                             ; preds = %bb12
  %30 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14153
  %31 = load i32, ptr %30, align 4, !dbg !14153
  %_23.0 = add i32 %31, %_22.0, !dbg !14153
  %_23.1 = icmp ult i32 %_23.0, %31, !dbg !14153
  br i1 %_23.1, label %panic2, label %bb14, !dbg !14153

panic1:                                           ; preds = %bb12
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_4e411d4f3d19f521b484797a6129e1f9) #14, !dbg !14148
  unreachable, !dbg !14148

bb14:                                             ; preds = %bb13
  %32 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14153
  store i32 %_23.0, ptr %32, align 4, !dbg !14153
  %33 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14154
  %_25 = load i32, ptr %33, align 4, !dbg !14154
; call core::str::pattern::CharSearcher::utf8_size
  %_26 = call i32 @_ZN4core3str7pattern12CharSearcher9utf8_size17ha5c2f94032d1c978E(ptr align 4 %self) #13, !dbg !14155
  %_24 = icmp uge i32 %_25, %_26, !dbg !14154
  br i1 %_24, label %bb16, label %bb1, !dbg !14154

panic2:                                           ; preds = %bb13
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_10fdff352e96f10029a1c934347131ee) #14, !dbg !14153
  unreachable, !dbg !14153

bb16:                                             ; preds = %bb14
  %34 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14156
  %_29 = load i32, ptr %34, align 4, !dbg !14156
; call core::str::pattern::CharSearcher::utf8_size
  %_30 = call i32 @_ZN4core3str7pattern12CharSearcher9utf8_size17ha5c2f94032d1c978E(ptr align 4 %self) #13, !dbg !14157
  %_32.0 = sub i32 %_29, %_30, !dbg !14156
  %_32.1 = icmp ult i32 %_29, %_30, !dbg !14156
  br i1 %_32.1, label %panic3, label %bb18, !dbg !14156

bb18:                                             ; preds = %bb16
  store i32 %_32.0, ptr %found_char.dbg.spill, align 4, !dbg !14156
    #dbg_declare(ptr %found_char.dbg.spill, !14120, !DIExpression(), !14158)
  %35 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14159
  %_52.0 = load ptr, ptr %35, align 4, !dbg !14159
  %36 = getelementptr inbounds i8, ptr %35, i32 4, !dbg !14159
  %_52.1 = load i32, ptr %36, align 4, !dbg !14159
  store ptr %_52.0, ptr %self.dbg.spill.i, align 4
  %37 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_52.1, ptr %37, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !886, !DIExpression(), !14160)
  %38 = insertvalue { ptr, i32 } poison, ptr %_52.0, 0, !dbg !14162
  %39 = insertvalue { ptr, i32 } %38, i32 %_52.1, 1, !dbg !14162
  %_34.0 = extractvalue { ptr, i32 } %39, 0, !dbg !14163
  %_34.1 = extractvalue { ptr, i32 } %39, 1, !dbg !14163
  %40 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14164
  %_36 = load i32, ptr %40, align 4, !dbg !14164
; call core::slice::<impl [T]>::get
  %41 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hbd1cafab9ccc6558E"(ptr align 1 %_34.0, i32 %_34.1, i32 %_32.0, i32 %_36) #13, !dbg !14165
  %42 = extractvalue { ptr, i32 } %41, 0, !dbg !14165
  %43 = extractvalue { ptr, i32 } %41, 1, !dbg !14165
  store ptr %42, ptr %_33, align 4, !dbg !14165
  %44 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !14165
  store i32 %43, ptr %44, align 4, !dbg !14165
  %45 = load ptr, ptr %_33, align 4, !dbg !14159
  %46 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !14159
  %47 = load i32, ptr %46, align 4, !dbg !14159
  %48 = ptrtoint ptr %45 to i32, !dbg !14159
  %49 = icmp eq i32 %48, 0, !dbg !14159
  %_37 = select i1 %49, i32 0, i32 1, !dbg !14159
  %50 = trunc nuw i32 %_37 to i1, !dbg !14166
  br i1 %50, label %bb21, label %bb1, !dbg !14166

panic3:                                           ; preds = %bb16
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_a5e5388120af2d07701d6f3583b8d243) #14, !dbg !14156
  unreachable, !dbg !14156

bb21:                                             ; preds = %bb18
  %51 = load ptr, ptr %_33, align 4, !dbg !14125
  %52 = getelementptr inbounds i8, ptr %_33, i32 4, !dbg !14125
  %53 = load i32, ptr %52, align 4, !dbg !14125
  store ptr %51, ptr %slice, align 4, !dbg !14125
  %54 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !14125
  store i32 %53, ptr %54, align 4, !dbg !14125
  %_44 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !14167
; call core::str::pattern::CharSearcher::utf8_size
  %_46 = call i32 @_ZN4core3str7pattern12CharSearcher9utf8_size17ha5c2f94032d1c978E(ptr align 4 %self) #13, !dbg !14168
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %55 = call { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h6ffd0947d0518ff5E"(ptr align 1 %_44, i32 0, i32 %_46, ptr align 4 @alloc_d16a303c11d14d09a9daae8ee946957c) #13, !dbg !14169
  %_43.0 = extractvalue { ptr, i32 } %55, 0, !dbg !14169
  %_43.1 = extractvalue { ptr, i32 } %55, 1, !dbg !14169
  store ptr %_43.0, ptr %_42, align 4, !dbg !14170
  %56 = getelementptr inbounds i8, ptr %_42, i32 4, !dbg !14170
  store i32 %_43.1, ptr %56, align 4, !dbg !14170
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_39 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h803464c53e88978eE"(ptr align 4 %slice, ptr align 4 %_42) #13, !dbg !14171
  br i1 %_39, label %bb25, label %bb1, !dbg !14171

bb25:                                             ; preds = %bb21
  %57 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14172
  %_49 = load i32, ptr %57, align 4, !dbg !14172
  %58 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14173
  store i32 %_32.0, ptr %58, align 4, !dbg !14173
  %59 = getelementptr inbounds i8, ptr %58, i32 4, !dbg !14173
  store i32 %_49, ptr %59, align 4, !dbg !14173
  store i32 1, ptr %_0, align 4, !dbg !14173
  br label %bb27, !dbg !14174

bb27:                                             ; preds = %bb7, %bb26, %bb25
  ret void, !dbg !14176

bb5:                                              ; No predecessors!
  unreachable, !dbg !14128
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hdd1f51eba4824427E"(ptr align 4 %self) unnamed_addr #0 !dbg !14177 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14182, !DIExpression(), !14183)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14184
  %_0.0 = load ptr, ptr %0, align 4, !dbg !14184
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !14184
  %_0.1 = load i32, ptr %1, align 4, !dbg !14184
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !14185
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !14185
  ret { ptr, i32 } %3, !dbg !14185
}

; <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb25337508d5d68c8E"(ptr align 4 %self) unnamed_addr #0 !dbg !14186 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14192, !DIExpression(), !14193)
; call core::escape::EscapeIterInner<_,core::escape::MaybeEscaped>::next
  %_0 = call i32 @"_ZN4core6escape53EscapeIterInner$LT$_$C$core..escape..MaybeEscaped$GT$4next17hf61699f7037f99f7E"(ptr align 4 %self) #13, !dbg !14194
  ret i32 %_0, !dbg !14195
}

; <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0f88fa48cf5f9b33E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !14196 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [20 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14202, !DIExpression(), !14203)
; call <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
  call void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6bc1593a6e92bfc8E"(ptr sret([20 x i8]) align 4 %_2, ptr align 4 %self) #13, !dbg !14204
  %_5 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !14205
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17hfb98ec0f1e3ec6d1E(ptr align 1 %_5) #13, !dbg !14205
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 20, i1 false), !dbg !14203
  ret void, !dbg !14206
}

; <core::iter::adapters::map::Map<I,F> as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6bc1593a6e92bfc8E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !14207 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [20 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14212, !DIExpression(), !14213)
; call <core::slice::iter::ChunksExact<T> as core::clone::Clone>::clone
  call void @"_ZN78_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h68f7622df89ab444E"(ptr sret([20 x i8]) align 4 %_2, ptr align 4 %self) #13, !dbg !14214
  %_5 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !14215
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17h67254a32f936947fE(ptr align 1 %_5) #13, !dbg !14215
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 20, i1 false), !dbg !14213
  ret void, !dbg !14216
}

; <&mut I as core::iter::traits::exact_size::ExactSizeIterator>::len
; Function Attrs: nounwind
define dso_local i32 @"_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h77442048bee26049E"(ptr align 4 %self) unnamed_addr #1 !dbg !14217 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14225, !DIExpression(), !14228)
  %_3 = load ptr, ptr %self, align 4, !dbg !14229
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::exact_size::ExactSizeIterator>::len
  %_0 = call i32 @"_ZN115_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb7ba9df55e1e2126E"(ptr align 4 %_3) #13, !dbg !14230
  ret i32 %_0, !dbg !14231
}

; <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h15d60bbff95f40b2E"(ptr align 4 %self, ptr align 1 %0, i32 %1) unnamed_addr #1 !dbg !14232 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %s = alloca [8 x i8], align 4
  store ptr %0, ptr %s, align 4
  %2 = getelementptr inbounds i8, ptr %s, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14236, !DIExpression(), !14238)
    #dbg_declare(ptr %s, !14237, !DIExpression(), !14239)
  %_4.0 = load i32, ptr %self, align 4, !dbg !14240
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14240
  %_4.1 = load i32, ptr %3, align 4, !dbg !14240
; call core::result::Result<T,E>::and_then
  %4 = call { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h5d5c9f7ff2b56ee6E"(i32 %_4.0, i32 %_4.1, ptr align 4 %s) #13, !dbg !14241
  %_3.0 = extractvalue { i32, i32 } %4, 0, !dbg !14241
  %_3.1 = extractvalue { i32, i32 } %4, 1, !dbg !14241
  store i32 %_3.0, ptr %self, align 4, !dbg !14242
  %5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14242
  store i32 %_3.1, ptr %5, align 4, !dbg !14242
  %_7 = load i32, ptr %self, align 4, !dbg !14243
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14243
  %7 = load i32, ptr %6, align 4, !dbg !14243
  %8 = trunc nuw i32 %_7 to i1, !dbg !14244
  br i1 %8, label %bb3, label %bb4, !dbg !14244

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !14245
  br label %bb5, !dbg !14246

bb4:                                              ; preds = %start
  %_8 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14247
  %9 = load ptr, ptr %s, align 4, !dbg !14247
  %10 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !14247
  %11 = load i32, ptr %10, align 4, !dbg !14247
; call <&mut W as core::fmt::Write>::write_str
  %12 = call zeroext i1 @"_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17he5558864c878b325E"(ptr align 4 %_8, ptr align 1 %9, i32 %11) #13, !dbg !14248
  %13 = zext i1 %12 to i8, !dbg !14248
  store i8 %13, ptr %_0, align 1, !dbg !14248
  br label %bb5, !dbg !14248

bb5:                                              ; preds = %bb3, %bb4
  %14 = load i8, ptr %_0, align 1, !dbg !14249
  %15 = trunc nuw i8 %14 to i1, !dbg !14249
  ret i1 %15, !dbg !14249

bb2:                                              ; No predecessors!
  unreachable, !dbg !14243
}

; <rustc_demangle::SizeLimitedFmtAdapter<F> as core::fmt::Write>::write_str::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str28_$u7b$$u7b$closure$u7d$$u7d$17h6a74e2e22fa31566E"(ptr align 4 %_1, i32 %r) unnamed_addr #0 !dbg !14250 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !14255, !DIExpression(DW_OP_deref), !14256)
  store i32 %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !14254, !DIExpression(), !14257)
  %_6.0 = load ptr, ptr %_1, align 4, !dbg !14258
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !14258
  %_6.1 = load i32, ptr %0, align 4, !dbg !14258
; call core::str::<impl str>::len
  %_4 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E"(ptr align 1 %_6.0, i32 %_6.1) #13, !dbg !14259
; call core::num::<impl usize>::checked_sub
  %1 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hf518b4cbfbcb79daE"(i32 %r, i32 %_4) #13, !dbg !14260
  %_3.0 = extractvalue { i32, i32 } %1, 0, !dbg !14260
  %_3.1 = extractvalue { i32, i32 } %1, 1, !dbg !14260
; call core::option::Option<T>::ok_or
  %2 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$5ok_or17hcf2fee6d0fd8baabE"(i32 %_3.0, i32 %_3.1) #13, !dbg !14261
  %_0.0 = extractvalue { i32, i32 } %2, 0, !dbg !14261
  %_0.1 = extractvalue { i32, i32 } %2, 1, !dbg !14261
  %3 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !14262
  %4 = insertvalue { i32, i32 } %3, i32 %_0.1, 1, !dbg !14262
  ret { i32, i32 } %4, !dbg !14262
}

; <core::iter::sources::from_fn::FromFn<F> as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN84_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h316aad9d6a4fa6c9E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !14263 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [20 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14269, !DIExpression(), !14270)
; call core::clone::Clone::clone
  call void @_ZN4core5clone5Clone5clone17h5815a6a5a895cff2E(ptr sret([20 x i8]) align 4 %_2, ptr align 4 %self) #13, !dbg !14271
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 20, i1 false), !dbg !14270
  ret void, !dbg !14272
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hc45f832b67faeefcE"() unnamed_addr #0 !dbg !14273 {
start:
  ret i1 false, !dbg !14275
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nounwind
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hd4ee2994ec45a1b7E"(ptr sret([12 x i8]) align 4 %_0, i32 %a, i32 %b) unnamed_addr #0 !dbg !14276 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  store i32 %a, ptr %a.dbg.spill, align 4
    #dbg_declare(ptr %a.dbg.spill, !14280, !DIExpression(), !14282)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !14281, !DIExpression(), !14283)
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14284
  store i32 %a, ptr %0, align 4, !dbg !14284
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !14284
  store i32 %b, ptr %1, align 4, !dbg !14284
  store i32 1, ptr %_0, align 4, !dbg !14284
  ret void, !dbg !14285
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nounwind
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h65b9bb6d9416ffa0E"(ptr sret([12 x i8]) align 4 %_0, i32 %_a, i32 %_b) unnamed_addr #0 !dbg !14286 {
start:
  %_b.dbg.spill = alloca [4 x i8], align 4
  %_a.dbg.spill = alloca [4 x i8], align 4
  store i32 %_a, ptr %_a.dbg.spill, align 4
    #dbg_declare(ptr %_a.dbg.spill, !14288, !DIExpression(), !14290)
  store i32 %_b, ptr %_b.dbg.spill, align 4
    #dbg_declare(ptr %_b.dbg.spill, !14289, !DIExpression(), !14291)
  store i32 0, ptr %_0, align 4, !dbg !14292
  ret void, !dbg !14293
}

; <core::option::Item<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN86_$LT$core..option..Item$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha5a296364cec88a3E"(ptr align 4 %self) unnamed_addr #0 !dbg !14294 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14300, !DIExpression(), !14301)
; call core::option::Option<T>::take
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$4take17h1a8617c700728f89E"(ptr align 4 %self) #13, !dbg !14302
  ret i32 %_0, !dbg !14303
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8bc538c53a8f8d4E"(ptr align 4 %self) unnamed_addr #0 !dbg !14304 {
start:
  %end.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %_0.i4 = alloca [4 x i8], align 4
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %ch.dbg.spill = alloca [4 x i8], align 4
  %pre_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14327, !DIExpression(), !14336)
  store ptr %self, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !563, !DIExpression(), !14337)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14339
  %_5.i5 = load ptr, ptr %0, align 4, !dbg !14339
  store ptr %_5.i5, ptr %end.dbg.spill.i2, align 4, !dbg !14340
    #dbg_declare(ptr %end.dbg.spill.i2, !573, !DIExpression(), !14341)
  %_6.i6 = load ptr, ptr %self, align 4, !dbg !14342
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i5, ptr %_6.i6) #13, !dbg !14343
  store i32 %1, ptr %_0.i4, align 4, !dbg !14343
  %2 = load i32, ptr %_0.i4, align 4, !dbg !14344
  store i32 %2, ptr %pre_len.dbg.spill, align 4, !dbg !14345
    #dbg_declare(ptr %pre_len.dbg.spill, !14328, !DIExpression(), !14346)
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %3 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE"(ptr align 4 %self) #13, !dbg !14347
  store i32 %3, ptr %_4, align 4, !dbg !14347
  %4 = load i32, ptr %_4, align 4, !dbg !14348
  %5 = icmp eq i32 %4, 1114112, !dbg !14348
  %_6 = select i1 %5, i32 0, i32 1, !dbg !14348
  %6 = trunc nuw i32 %_6 to i1, !dbg !14349
  br i1 %6, label %bb4, label %bb5, !dbg !14349

bb4:                                              ; preds = %start
  %ch = load i32, ptr %_4, align 4, !dbg !14350
  store i32 %ch, ptr %ch.dbg.spill, align 4, !dbg !14350
    #dbg_declare(ptr %ch.dbg.spill, !14330, !DIExpression(), !14351)
  %7 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14352
  %index = load i32, ptr %7, align 4, !dbg !14352
  store i32 %index, ptr %index.dbg.spill, align 4, !dbg !14352
    #dbg_declare(ptr %index.dbg.spill, !14332, !DIExpression(), !14353)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !563, !DIExpression(), !14354)
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14356
  %_5.i = load ptr, ptr %8, align 4, !dbg !14356
  store ptr %_5.i, ptr %end.dbg.spill.i, align 4, !dbg !14357
    #dbg_declare(ptr %end.dbg.spill.i, !573, !DIExpression(), !14358)
  %_6.i = load ptr, ptr %self, align 4, !dbg !14359
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %9 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i, ptr %_6.i) #13, !dbg !14360
  store i32 %9, ptr %_0.i, align 4, !dbg !14360
  %10 = load i32, ptr %_0.i, align 4, !dbg !14361
  store i32 %10, ptr %len.dbg.spill, align 4, !dbg !14362
    #dbg_declare(ptr %len.dbg.spill, !14334, !DIExpression(), !14363)
  %_12.0 = sub i32 %2, %10, !dbg !14364
  %_12.1 = icmp ult i32 %2, %10, !dbg !14364
  br i1 %_12.1, label %panic, label %bb7, !dbg !14364

bb5:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14365
  store i32 1114112, ptr %11, align 4, !dbg !14365
  br label %bb9, !dbg !14365

bb9:                                              ; preds = %bb8, %bb5
  %12 = load i32, ptr %_0, align 4, !dbg !14366
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14366
  %14 = load i32, ptr %13, align 4, !dbg !14366
  %15 = insertvalue { i32, i32 } poison, i32 %12, 0, !dbg !14366
  %16 = insertvalue { i32, i32 } %15, i32 %14, 1, !dbg !14366
  ret { i32, i32 } %16, !dbg !14366

bb7:                                              ; preds = %bb4
  %17 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14367
  %18 = load i32, ptr %17, align 4, !dbg !14367
  %_13.0 = add i32 %18, %_12.0, !dbg !14367
  %_13.1 = icmp ult i32 %_13.0, %18, !dbg !14367
  br i1 %_13.1, label %panic1, label %bb8, !dbg !14367

panic:                                            ; preds = %bb4
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_134ead117cdd9054461fa95e16eba5da) #14, !dbg !14364
  unreachable, !dbg !14364

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14367
  store i32 %_13.0, ptr %19, align 4, !dbg !14367
  store i32 %index, ptr %_0, align 4, !dbg !14368
  %20 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14368
  store i32 %ch, ptr %20, align 4, !dbg !14368
  br label %bb9, !dbg !14369

panic1:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_383483fe6d8fc70f0bd38bbd0780906e) #14, !dbg !14367
  unreachable, !dbg !14367

bb3:                                              ; No predecessors!
  unreachable, !dbg !14348
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h36cb11453b8c02b3E"(ptr sret([16 x i8]) align 8 %_0, ptr align 8 %self) unnamed_addr #0 !dbg !14370 {
start:
  %other.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %old.dbg.spill = alloca [8 x i8], align 8
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14373, !DIExpression(), !14376)
  %_4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14377
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !14378, !DIExpression(), !14386)
  store ptr %_4, ptr %other.dbg.spill.i, align 4
    #dbg_declare(ptr %other.dbg.spill.i, !14385, !DIExpression(), !14388)
  %_3.i = load i64, ptr %self, align 8, !dbg !14389
  %_4.i = load i64, ptr %_4, align 8, !dbg !14390
  %_0.i = icmp ult i64 %_3.i, %_4.i, !dbg !14389
  br i1 %_0.i, label %bb2, label %bb4, !dbg !14391

bb4:                                              ; preds = %start
  store i64 0, ptr %_0, align 8, !dbg !14392
  br label %bb5, !dbg !14393

bb2:                                              ; preds = %start
  %old = load i64, ptr %self, align 8, !dbg !14394
  store i64 %old, ptr %old.dbg.spill, align 8, !dbg !14394
    #dbg_declare(ptr %old.dbg.spill, !14374, !DIExpression(), !14395)
; call <u64 as core::iter::range::Step>::forward_unchecked
  %_6 = call i64 @"_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h3fa6b670e2a56253E"(i64 %old, i32 1) #13, !dbg !14396
  store i64 %_6, ptr %self, align 8, !dbg !14397
  %0 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !14398
  store i64 %old, ptr %0, align 8, !dbg !14398
  store i64 1, ptr %_0, align 8, !dbg !14398
  br label %bb5, !dbg !14393

bb5:                                              ; preds = %bb2, %bb4
  ret void, !dbg !14399
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h2ff111f15704fb28E"() unnamed_addr #0 !dbg !14400 {
start:
  ret i1 true, !dbg !14402
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nounwind
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h4de4435520f26f01E"(ptr sret([12 x i8]) align 4 %_0, i32 %a, i32 %b) unnamed_addr #0 !dbg !14403 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  store i32 %a, ptr %a.dbg.spill, align 4
    #dbg_declare(ptr %a.dbg.spill, !14407, !DIExpression(), !14409)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !14408, !DIExpression(), !14410)
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14411
  store i32 %a, ptr %0, align 4, !dbg !14411
  %1 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !14411
  store i32 %b, ptr %1, align 4, !dbg !14411
  store i32 0, ptr %_0, align 4, !dbg !14411
  ret void, !dbg !14412
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nounwind
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h1ff834da66e2ec58E"(ptr sret([12 x i8]) align 4 %_0, i32 %a, i32 %b) unnamed_addr #0 !dbg !14413 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  store i32 %a, ptr %a.dbg.spill, align 4
    #dbg_declare(ptr %a.dbg.spill, !14415, !DIExpression(), !14417)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !14416, !DIExpression(), !14418)
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14419
  store i32 %a, ptr %0, align 4, !dbg !14419
  %1 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !14419
  store i32 %b, ptr %1, align 4, !dbg !14419
  store i32 1, ptr %_0, align 4, !dbg !14419
  ret void, !dbg !14420
}

; <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !14421 {
start:
  %__arg1_discr.dbg.spill = alloca [4 x i8], align 4
  %__self_discr.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %__arg1_02 = alloca [4 x i8], align 4
  %__self_01 = alloca [4 x i8], align 4
  %__arg1_0 = alloca [4 x i8], align 4
  %__self_0 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14427, !DIExpression(), !14439)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !14428, !DIExpression(), !14439)
    #dbg_declare(ptr %__self_0, !14433, !DIExpression(), !14440)
    #dbg_declare(ptr %__arg1_0, !14435, !DIExpression(), !14440)
    #dbg_declare(ptr %__self_01, !14436, !DIExpression(), !14441)
    #dbg_declare(ptr %__arg1_02, !14438, !DIExpression(), !14441)
  %0 = load i8, ptr %self, align 1, !dbg !14439
  %1 = trunc nuw i8 %0 to i1, !dbg !14439
  %__self_discr = zext i1 %1 to i32, !dbg !14439
  store i32 %__self_discr, ptr %__self_discr.dbg.spill, align 4, !dbg !14439
    #dbg_declare(ptr %__self_discr.dbg.spill, !14429, !DIExpression(), !14442)
  %2 = load i8, ptr %other, align 1, !dbg !14442
  %3 = trunc nuw i8 %2 to i1, !dbg !14442
  %__arg1_discr = zext i1 %3 to i32, !dbg !14442
  store i32 %__arg1_discr, ptr %__arg1_discr.dbg.spill, align 4, !dbg !14442
    #dbg_declare(ptr %__arg1_discr.dbg.spill, !14431, !DIExpression(), !14443)
  %_5 = icmp eq i32 %__self_discr, %__arg1_discr, !dbg !14443
  br i1 %_5, label %bb1, label %bb2, !dbg !14443

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !14443
  br label %bb8, !dbg !14443

bb1:                                              ; preds = %start
  %4 = load i8, ptr %self, align 1, !dbg !14443
  %5 = trunc nuw i8 %4 to i1, !dbg !14443
  %_9 = zext i1 %5 to i32, !dbg !14443
  %6 = trunc nuw i32 %_9 to i1, !dbg !14443
  br i1 %6, label %bb5, label %bb4, !dbg !14443

bb8:                                              ; preds = %bb6, %bb7, %bb2
  %7 = load i8, ptr %_0, align 1, !dbg !14444
  %8 = trunc nuw i8 %7 to i1, !dbg !14444
  ret i1 %8, !dbg !14444

bb5:                                              ; preds = %bb1
  %9 = load i8, ptr %other, align 1, !dbg !14443
  %10 = trunc nuw i8 %9 to i1, !dbg !14443
  %_8 = zext i1 %10 to i32, !dbg !14443
  %11 = icmp eq i32 %_8, 1, !dbg !14443
  br i1 %11, label %bb6, label %bb3, !dbg !14443

bb4:                                              ; preds = %bb1
  %12 = load i8, ptr %other, align 1, !dbg !14443
  %13 = trunc nuw i8 %12 to i1, !dbg !14443
  %_7 = zext i1 %13 to i32, !dbg !14443
  %14 = icmp eq i32 %_7, 0, !dbg !14443
  br i1 %14, label %bb7, label %bb3, !dbg !14443

bb7:                                              ; preds = %bb4
  %15 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !14445
  store ptr %15, ptr %__self_0, align 4, !dbg !14445
  %16 = getelementptr inbounds i8, ptr %other, i32 1, !dbg !14445
  store ptr %16, ptr %__arg1_0, align 4, !dbg !14445
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %17 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h4c994e93616ba6c2E"(ptr align 4 %__self_0, ptr align 4 %__arg1_0) #13, !dbg !14440
  %18 = zext i1 %17 to i8, !dbg !14440
  store i8 %18, ptr %_0, align 1, !dbg !14440
  br label %bb8, !dbg !14440

bb3:                                              ; preds = %bb5, %bb4
  unreachable, !dbg !14443

bb6:                                              ; preds = %bb5
  %19 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !14446
  store ptr %19, ptr %__self_01, align 4, !dbg !14446
  %20 = getelementptr inbounds i8, ptr %other, i32 1, !dbg !14446
  store ptr %20, ptr %__arg1_02, align 4, !dbg !14446
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %21 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h4c994e93616ba6c2E"(ptr align 4 %__self_01, ptr align 4 %__arg1_02) #13, !dbg !14441
  %22 = zext i1 %21 to i8, !dbg !14441
  store i8 %22, ptr %_0, align 1, !dbg !14441
  br label %bb8, !dbg !14441
}

; <core::option::IntoIter<A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN90_$LT$core..option..IntoIter$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h64485ab535097cafE"(ptr align 4 %self) unnamed_addr #0 !dbg !14447 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14453, !DIExpression(), !14454)
; call <core::option::Item<A> as core::iter::traits::iterator::Iterator>::next
  %_0 = call i32 @"_ZN86_$LT$core..option..Item$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha5a296364cec88a3E"(ptr align 4 %self) #13, !dbg !14455
  ret i32 %_0, !dbg !14456
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbf3248bfa90064b9E"(ptr align 4 %self) unnamed_addr #0 !dbg !14457 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14463, !DIExpression(), !14464)
; call core::str::iter::SplitInternal<P>::next
  %0 = call { ptr, i32 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h02573a03cf6f1c4eE"(ptr align 4 %self) #13, !dbg !14465
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !14465
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !14465
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !14466
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !14466
  ret { ptr, i32 } %2, !dbg !14466
}

; <core::option::Option<T> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN91_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdf5a53d414a309b3E"(i32 %self) unnamed_addr #0 !dbg !14467 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14472, !DIExpression(), !14473)
  ret i32 %self, !dbg !14474
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hec7f0231dba8ce77E"(ptr align 4 %self) unnamed_addr #0 !dbg !14475 {
start:
  %self.dbg.spill.i1.i = alloca [4 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %end_or_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_14 = alloca [4 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  %ptr = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14481, !DIExpression(), !14488)
    #dbg_declare(ptr %ptr, !14482, !DIExpression(), !14489)
  %0 = load ptr, ptr %self, align 4, !dbg !14490
  store ptr %0, ptr %ptr, align 4, !dbg !14490
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14491
  %end_or_len = load ptr, ptr %1, align 4, !dbg !14491
  store ptr %end_or_len, ptr %end_or_len.dbg.spill, align 4, !dbg !14491
    #dbg_declare(ptr %end_or_len.dbg.spill, !14484, !DIExpression(), !14492)
  br label %bb7, !dbg !14493

bb7:                                              ; preds = %start
  store ptr %end_or_len, ptr %_10, align 4, !dbg !14494
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %_7 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4c47f3b4d9feadd7E"(ptr align 4 %ptr, ptr align 4 %_10) #13, !dbg !14495
  br i1 %_7, label %bb9, label %bb10, !dbg !14495

bb10:                                             ; preds = %bb7
  %2 = load ptr, ptr %ptr, align 4, !dbg !14496
  store ptr %2, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !14497, !DIExpression(), !14504)
  store i32 1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !14503, !DIExpression(), !14506)
  store ptr %2, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !11174, !DIExpression(), !14507)
  %_3.i = getelementptr inbounds nuw i32, ptr %2, i32 1, !dbg !14509
  store ptr %_3.i, ptr %self, align 4, !dbg !14510
  br label %bb12, !dbg !14511

bb9:                                              ; preds = %bb7
  store ptr null, ptr %_0, align 4, !dbg !14512
  br label %bb14, !dbg !14513

bb12:                                             ; preds = %bb10
  %3 = load ptr, ptr %ptr, align 4, !dbg !14515
  store ptr %3, ptr %_14, align 4, !dbg !14515
  store ptr %_14, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !14516, !DIExpression(), !14522)
  %_4.i = load ptr, ptr %_14, align 4, !dbg !14524
  store ptr %_4.i, ptr %self.dbg.spill.i1.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i1.i, !11174, !DIExpression(), !14525)
  store ptr %_4.i, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !14527, !DIExpression(), !14532)
  store ptr %_4.i, ptr %_0, align 4, !dbg !14534
  br label %bb14, !dbg !14535

bb14:                                             ; preds = %bb9, %bb12
  %4 = load ptr, ptr %_0, align 4, !dbg !14535
  ret ptr %4, !dbg !14535

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE"() unnamed_addr #0 !dbg !14536 {
start:
  %output.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %output.dbg.spill, !14541, !DIExpression(), !14542)
  ret i1 false, !dbg !14543
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h977b8170fcb89692E"(i32 %output) unnamed_addr #0 !dbg !14544 {
start:
  %output.dbg.spill = alloca [4 x i8], align 4
  store i32 %output, ptr %output.dbg.spill, align 4
    #dbg_declare(ptr %output.dbg.spill, !14548, !DIExpression(), !14549)
  %0 = insertvalue { i32, i32 } { i32 0, i32 poison }, i32 %output, 1, !dbg !14550
  ret { i32, i32 } %0, !dbg !14550
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE"(i1 zeroext %0) unnamed_addr #0 !dbg !14551 {
start:
  %b.dbg.spill = alloca [0 x i8], align 1
  %c.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
    #dbg_declare(ptr %self, !14570, !DIExpression(), !14575)
    #dbg_declare(ptr %c.dbg.spill, !14571, !DIExpression(), !14576)
    #dbg_declare(ptr %b.dbg.spill, !14573, !DIExpression(), !14577)
  %2 = load i8, ptr %self, align 1, !dbg !14578
  %3 = trunc nuw i8 %2 to i1, !dbg !14578
  %_2 = zext i1 %3 to i32, !dbg !14578
  %4 = trunc nuw i32 %_2 to i1, !dbg !14579
  br i1 %4, label %bb2, label %bb3, !dbg !14579

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !14580
  br label %bb4, !dbg !14581

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !14582
  br label %bb4, !dbg !14583

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_0, align 1, !dbg !14584
  %6 = trunc nuw i8 %5 to i1, !dbg !14584
  ret i1 %6, !dbg !14584

bb1:                                              ; No predecessors!
  unreachable, !dbg !14578
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf6e34bc1042a4210E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !14585 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !14604, !DIExpression(), !14609)
  %_2 = load i32, ptr %self, align 4, !dbg !14610
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14610
  %4 = load i32, ptr %3, align 4, !dbg !14610
  %5 = trunc nuw i32 %_2 to i1, !dbg !14611
  br i1 %5, label %bb2, label %bb3, !dbg !14611

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14612
  %b = load i32, ptr %6, align 4, !dbg !14612
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !14612
    #dbg_declare(ptr %b.dbg.spill, !14607, !DIExpression(), !14613)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14614
  store i32 %b, ptr %7, align 4, !dbg !14614
  store i32 1, ptr %_0, align 4, !dbg !14614
  br label %bb4, !dbg !14615

bb3:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14616
  %c = load i32, ptr %8, align 4, !dbg !14616
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !14616
    #dbg_declare(ptr %c.dbg.spill, !14605, !DIExpression(), !14617)
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14618
  store i32 %c, ptr %9, align 4, !dbg !14618
  store i32 0, ptr %_0, align 4, !dbg !14618
  br label %bb4, !dbg !14619

bb4:                                              ; preds = %bb2, %bb3
  %10 = load i32, ptr %_0, align 4, !dbg !14620
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14620
  %12 = load i32, ptr %11, align 4, !dbg !14620
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !14620
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !14620
  ret { i32, i32 } %14, !dbg !14620

bb1:                                              ; No predecessors!
  unreachable, !dbg !14610
}

; <core::str::pattern::MultiCharEqPattern<C> as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17heb499a14c747ce7fE"(ptr sret([20 x i8]) align 4 %_0, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #0 !dbg !14621 {
start:
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [0 x i8], align 1
  %_4 = alloca [12 x i8], align 4
    #dbg_declare(ptr %self.dbg.spill, !14629, !DIExpression(), !14631)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %0, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !14630, !DIExpression(), !14632)
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h835445ad7a164e2fE"(ptr sret([12 x i8]) align 4 %_4, ptr align 1 %haystack.0, i32 %haystack.1) #13, !dbg !14633
  store ptr %haystack.0, ptr %_0, align 4, !dbg !14634
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14634
  store i32 %haystack.1, ptr %1, align 4, !dbg !14634
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !14634
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_4, i32 12, i1 false), !dbg !14634
  ret void, !dbg !14635
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h2c6485f9480b3603E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !14636 {
start:
  %end.dbg.spill.i3 = alloca [4 x i8], align 4
  %self.dbg.spill.i4 = alloca [4 x i8], align 4
  %_0.i5 = alloca [4 x i8], align 4
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [4 x i8], align 4
  %char_len.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %pre_len.dbg.spill = alloca [4 x i8], align 4
  %s.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14641, !DIExpression(), !14653)
  %s = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14654
  store ptr %s, ptr %s.dbg.spill, align 4, !dbg !14654
    #dbg_declare(ptr %s.dbg.spill, !14642, !DIExpression(), !14655)
  store ptr %s, ptr %self.dbg.spill.i4, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !563, !DIExpression(), !14656)
  %0 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !14658
  %_5.i6 = load ptr, ptr %0, align 4, !dbg !14658
  store ptr %_5.i6, ptr %end.dbg.spill.i3, align 4, !dbg !14659
    #dbg_declare(ptr %end.dbg.spill.i3, !573, !DIExpression(), !14660)
  %_6.i7 = load ptr, ptr %s, align 4, !dbg !14661
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i6, ptr %_6.i7) #13, !dbg !14662
  store i32 %1, ptr %_0.i5, align 4, !dbg !14662
  %2 = load i32, ptr %_0.i5, align 4, !dbg !14663
  store i32 %2, ptr %pre_len.dbg.spill, align 4, !dbg !14664
    #dbg_declare(ptr %pre_len.dbg.spill, !14644, !DIExpression(), !14665)
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %3 = call { i32, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8bc538c53a8f8d4E"(ptr align 4 %s) #13, !dbg !14666
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14666
  %5 = extractvalue { i32, i32 } %3, 1, !dbg !14666
  store i32 %4, ptr %_5, align 4, !dbg !14666
  %6 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14666
  store i32 %5, ptr %6, align 4, !dbg !14666
  %7 = load i32, ptr %_5, align 4, !dbg !14667
  %8 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14667
  %9 = load i32, ptr %8, align 4, !dbg !14667
  %10 = icmp eq i32 %9, 1114112, !dbg !14667
  %_6 = select i1 %10, i32 0, i32 1, !dbg !14667
  %11 = trunc nuw i32 %_6 to i1, !dbg !14668
  br i1 %11, label %bb3, label %bb11, !dbg !14668

bb3:                                              ; preds = %start
  %i = load i32, ptr %_5, align 4, !dbg !14669
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !14669
    #dbg_declare(ptr %i.dbg.spill, !14646, !DIExpression(), !14669)
  %12 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14670
  %c = load i32, ptr %12, align 4, !dbg !14670
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !14670
    #dbg_declare(ptr %c.dbg.spill, !14648, !DIExpression(), !14670)
  store ptr %s, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !563, !DIExpression(), !14671)
  %13 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !14673
  %_5.i = load ptr, ptr %13, align 4, !dbg !14673
  store ptr %_5.i, ptr %end.dbg.spill.i, align 4, !dbg !14674
    #dbg_declare(ptr %end.dbg.spill.i, !573, !DIExpression(), !14675)
  %_6.i = load ptr, ptr %s, align 4, !dbg !14676
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %14 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i, ptr %_6.i) #13, !dbg !14677
  store i32 %14, ptr %_0.i, align 4, !dbg !14677
  %15 = load i32, ptr %_0.i, align 4, !dbg !14678
  store i32 %15, ptr %len.dbg.spill, align 4, !dbg !14679
    #dbg_declare(ptr %len.dbg.spill, !14649, !DIExpression(), !14680)
  %_12.0 = sub i32 %2, %15, !dbg !14681
  %_12.1 = icmp ult i32 %2, %15, !dbg !14681
  br i1 %_12.1, label %panic, label %bb5, !dbg !14681

bb11:                                             ; preds = %start
  store i32 2, ptr %_0, align 4, !dbg !14682
  br label %bb12, !dbg !14683

bb5:                                              ; preds = %bb3
  store i32 %_12.0, ptr %char_len.dbg.spill, align 4, !dbg !14681
    #dbg_declare(ptr %char_len.dbg.spill, !14651, !DIExpression(), !14684)
  %_14 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !14685
; call <F as core::str::pattern::MultiCharEq>::matches
  %_13 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h532dcb3b1a459bc2E"(ptr align 1 %_14, i32 %c) #13, !dbg !14686
  br i1 %_13, label %bb7, label %bb9, !dbg !14685

panic:                                            ; preds = %bb3
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE(ptr align 4 @alloc_b1caa4ed37351f4cf850c25fcadd17e4) #14, !dbg !14681
  unreachable, !dbg !14681

bb9:                                              ; preds = %bb5
  %_18.0 = add i32 %i, %_12.0, !dbg !14687
  %_18.1 = icmp ult i32 %_18.0, %i, !dbg !14687
  br i1 %_18.1, label %panic1, label %bb10, !dbg !14687

bb7:                                              ; preds = %bb5
  %_16.0 = add i32 %i, %_12.0, !dbg !14688
  %_16.1 = icmp ult i32 %_16.0, %i, !dbg !14688
  br i1 %_16.1, label %panic2, label %bb8, !dbg !14688

bb10:                                             ; preds = %bb9
  %16 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14689
  store i32 %i, ptr %16, align 4, !dbg !14689
  %17 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !14689
  store i32 %_18.0, ptr %17, align 4, !dbg !14689
  store i32 1, ptr %_0, align 4, !dbg !14689
  br label %bb12, !dbg !14690

panic1:                                           ; preds = %bb9
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_5c23c5d7fe8a0bb232923465bc7b28cd) #14, !dbg !14687
  unreachable, !dbg !14687

bb12:                                             ; preds = %bb11, %bb8, %bb10
  ret void, !dbg !14683

bb8:                                              ; preds = %bb7
  %18 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14691
  store i32 %i, ptr %18, align 4, !dbg !14691
  %19 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !14691
  store i32 %_16.0, ptr %19, align 4, !dbg !14691
  store i32 0, ptr %_0, align 4, !dbg !14691
  br label %bb12, !dbg !14692

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE(ptr align 4 @alloc_857f9ef46cba96783c42d4beae65b6a9) #14, !dbg !14688
  unreachable, !dbg !14688

bb13:                                             ; No predecessors!
  unreachable, !dbg !14693
}

; <core::slice::iter::ChunksExact<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN98_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haca5222bd32edfbcE"(ptr align 4 %self) unnamed_addr #0 !dbg !14694 {
start:
  %snd.dbg.spill = alloca [8 x i8], align 4
  %fst.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [16 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14700, !DIExpression(), !14704)
  %_9.0 = load ptr, ptr %self, align 4, !dbg !14705
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14705
  %_9.1 = load i32, ptr %0, align 4, !dbg !14705
  %1 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !14706
  %_4 = load i32, ptr %1, align 4, !dbg !14706
  %_2 = icmp ult i32 %_9.1, %_4, !dbg !14705
  br i1 %_2, label %bb1, label %bb2, !dbg !14705

bb2:                                              ; preds = %start
  %_10.0 = load ptr, ptr %self, align 4, !dbg !14707
  %2 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14707
  %_10.1 = load i32, ptr %2, align 4, !dbg !14707
  %3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !14708
  %_8 = load i32, ptr %3, align 4, !dbg !14708
; call core::slice::<impl [T]>::split_at
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h15cdf9799531bd5dE"(ptr sret([16 x i8]) align 4 %_7, ptr align 1 %_10.0, i32 %_10.1, i32 %_8, ptr align 4 @alloc_ca17cd43af3110a9099714c81e49f946) #13, !dbg !14709
  %fst.0 = load ptr, ptr %_7, align 4, !dbg !14710
  %4 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !14710
  %fst.1 = load i32, ptr %4, align 4, !dbg !14710
  store ptr %fst.0, ptr %fst.dbg.spill, align 4, !dbg !14710
  %5 = getelementptr inbounds i8, ptr %fst.dbg.spill, i32 4, !dbg !14710
  store i32 %fst.1, ptr %5, align 4, !dbg !14710
    #dbg_declare(ptr %fst.dbg.spill, !14701, !DIExpression(), !14711)
  %6 = getelementptr inbounds i8, ptr %_7, i32 8, !dbg !14712
  %snd.0 = load ptr, ptr %6, align 4, !dbg !14712
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !14712
  %snd.1 = load i32, ptr %7, align 4, !dbg !14712
  store ptr %snd.0, ptr %snd.dbg.spill, align 4, !dbg !14712
  %8 = getelementptr inbounds i8, ptr %snd.dbg.spill, i32 4, !dbg !14712
  store i32 %snd.1, ptr %8, align 4, !dbg !14712
    #dbg_declare(ptr %snd.dbg.spill, !14703, !DIExpression(), !14713)
  store ptr %snd.0, ptr %self, align 4, !dbg !14714
  %9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14714
  store i32 %snd.1, ptr %9, align 4, !dbg !14714
  store ptr %fst.0, ptr %_0, align 4, !dbg !14715
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14715
  store i32 %fst.1, ptr %10, align 4, !dbg !14715
  br label %bb4, !dbg !14716

bb1:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !14717
  br label %bb4, !dbg !14716

bb4:                                              ; preds = %bb1, %bb2
  %11 = load ptr, ptr %_0, align 4, !dbg !14718
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14718
  %13 = load i32, ptr %12, align 4, !dbg !14718
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0, !dbg !14718
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1, !dbg !14718
  ret { ptr, i32 } %15, !dbg !14718
}

; <core::iter::sources::once::Once<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define dso_local i32 @"_ZN99_$LT$core..iter..sources..once..Once$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he963aa5e8a4a6250E"(ptr align 4 %self) unnamed_addr #1 !dbg !14719 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14725, !DIExpression(), !14726)
; call <core::option::IntoIter<A> as core::iter::traits::iterator::Iterator>::next
  %_0 = call i32 @"_ZN90_$LT$core..option..IntoIter$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h64485ab535097cafE"(ptr align 4 %self) #13, !dbg !14727
  ret i32 %_0, !dbg !14728
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4182eb60dfa4f812E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !14729 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14735, !DIExpression(), !14736)
; call core::str::pattern::Searcher::next_match
  call void @_ZN4core3str7pattern8Searcher10next_match17h6b839db6181e57faE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #13, !dbg !14737
  ret void, !dbg !14738
}

; core::ptr::non_null::NonNull<T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr, ptr) unnamed_addr #0

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4) unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias writeonly captures(none), ptr noalias readonly captures(none), i32, i1 immarg) #5

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf08d3cb0f782247dE"(ptr, ptr) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32, i32) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4) unnamed_addr #0

; core::str::converts::from_utf8
; Function Attrs: nounwind
declare dso_local void @_ZN4core3str8converts9from_utf817hbba37fe7cad0f284E(ptr sret([12 x i8]) align 4, ptr align 1, i32) unnamed_addr #1

; core::fmt::rt::Argument::new_display
; Function Attrs: inlinehint nounwind
declare dso_local void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4, ptr align 4) unnamed_addr #0

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h74121451eb134369E"(ptr sret([24 x i8]) align 4, ptr align 4, ptr align 4) unnamed_addr #0

; core::cmp::max
; Function Attrs: inlinehint nounwind
declare dso_local i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32, i32) unnamed_addr #0

; core::cmp::min
; Function Attrs: inlinehint nounwind
declare dso_local i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32, i32) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #6

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr writeonly captures(none), i8, i32, i1 immarg) #7

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h5f4fd688f129b44dE"(ptr align 1, i32, i32, i32, ptr align 4) unnamed_addr #0

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hcd563978280d65deE"(ptr align 1, i32, i32) unnamed_addr #0

; core::option::Option<&T>::cloned
; Function Attrs: nounwind
declare dso_local { i1, i8 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17h749117ec4a4e929fE"(ptr align 1) unnamed_addr #1

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #0

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #0

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext) unnamed_addr #0

; core::fmt::Formatter::alternate
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter9alternate17h47450e30007958d8E(ptr align 4) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4, ptr align 1, i32) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u64>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u64$GT$3fmt17h99459a52d221e4d5E"(ptr align 8, ptr align 4) unnamed_addr #1

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h76029def0fb2ddbcE"(ptr sret([16 x i8]) align 4, ptr align 4) unnamed_addr #0

; core::fmt::num::imp::<impl core::fmt::Display for u64>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u64$GT$3fmt17h1e0156a411964040E"(ptr align 8, ptr align 4) unnamed_addr #1

; <&T as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h0d6be1c96a81b327E"(ptr align 4, ptr align 4) unnamed_addr #1

; <char as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN43_$LT$char$u20$as$u20$core..fmt..Display$GT$3fmt17he0e2483a667679bfE"(ptr align 4, ptr align 4) unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nounwind
declare dso_local void @_ZN4core3fmt9Formatter10debug_list17h3d7f8458381edc22E(ptr sret([8 x i8]) align 4, ptr align 4) unnamed_addr #1

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1, i32) unnamed_addr #0

; core::fmt::builders::DebugList::finish
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h33dc0bd1778972c3E(ptr align 4) unnamed_addr #1

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint nounwind
declare dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17heaa798669a37b198E"(ptr align 4) unnamed_addr #0

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
declare dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h116c3c49f5237742E"(ptr) unnamed_addr #0

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbffdc5d01bf5408bE"(ptr align 4, ptr align 4) unnamed_addr #1

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72b54bf2b5971ea0E(ptr align 4) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hda8089ad17629515E(ptr align 4) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hf2721191f040b59aE"(ptr align 1, ptr align 4) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h3a28df7a448ec4e8E"(ptr align 1, ptr align 4) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17hf19d67508dd58d4aE"(ptr align 1, ptr align 4) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: nounwind
declare dso_local align 4 ptr @_ZN4core3fmt8builders9DebugList5entry17h12e33360041c77efE(ptr align 4, ptr align 1, ptr align 4) unnamed_addr #1

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h59be6c2f34b18cc5E"(ptr align 4) unnamed_addr #0

; Function Attrs: convergent nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.is.constant.i1(i1) #8

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1, i32) unnamed_addr #0

; core::fmt::rt::<impl core::fmt::Arguments>::new_const
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4, ptr align 4) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; core::num::from_ascii_radix_panic::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core3num22from_ascii_radix_panic8do_panic7runtime17h38c05a34dd2fcef2E(i32, ptr align 4) unnamed_addr #9

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.usub.sat.i32(i32, i32) #6

; core::str::<impl str>::get_unchecked
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str21_$LT$impl$u20$str$GT$13get_unchecked17h89779cbeda97bb80E"(ptr align 1, i32, i32, i32) unnamed_addr #0

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h7587ea216fbfa9bdE"(ptr align 4) unnamed_addr #0

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4) unnamed_addr #0

; core::str::count::do_count_chars
; Function Attrs: nounwind
declare dso_local i32 @_ZN4core3str5count14do_count_chars17h4193aef24a2a11daE(ptr align 1, i32) unnamed_addr #1

; core::str::count::char_count_general_case
; Function Attrs: nounwind
declare dso_local i32 @_ZN4core3str5count23char_count_general_case17h79b6af41235df43cE(ptr align 1, i32) unnamed_addr #1

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5431d645439ae544E"(ptr, i32) unnamed_addr #0

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nounwind
declare dso_local ptr @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17hb314939b0b39830eE"(ptr, i32) unnamed_addr #0

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @_ZN4core3ptr20slice_from_raw_parts17h5464381f98518b74E(ptr, i32) unnamed_addr #0

; core::str::slice_error_fail
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core3str16slice_error_fail17he0a9eecb50bde78cE(ptr align 1, i32, i32, i32) unnamed_addr #9

; core::str::traits::str_index_overflow_fail
; Function Attrs: cold noinline noreturn nounwind
declare dso_local void @_ZN4core3str6traits23str_index_overflow_fail17hf4f5082fdefc4a38E(ptr align 4) unnamed_addr #10

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h803464c53e88978eE"(ptr align 4, ptr align 4) unnamed_addr #0

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @_ZN4core4iter6traits8iterator8Iterator3rev17ha5953c0d25a6b477E(i32, i32) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h0abae64d9977c3e0E"(i32, i32) unnamed_addr #0

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h839cace58e7e4da7E"(ptr align 4) unnamed_addr #0

; core::escape::EscapeIterInner<_,ESCAPING>::unicode
; Function Attrs: nounwind
declare dso_local void @"_ZN4core6escape35EscapeIterInner$LT$_$C$ESCAPING$GT$7unicode17h5bd6fd539d2c5592E"(ptr sret([16 x i8]) align 4, i32) unnamed_addr #1

; core::escape::EscapeIterInner<_,ESCAPING>::backslash
; Function Attrs: nounwind
declare dso_local void @"_ZN4core6escape35EscapeIterInner$LT$_$C$ESCAPING$GT$9backslash17h2de5efabf36bd270E"(ptr sret([16 x i8]) align 4, i8) unnamed_addr #1

; core::escape::EscapeIterInner<_,core::escape::MaybeEscaped>::printable
; Function Attrs: nounwind
declare dso_local void @"_ZN4core6escape53EscapeIterInner$LT$_$C$core..escape..MaybeEscaped$GT$9printable17h49006ebfaf753725E"(ptr sret([16 x i8]) align 4, i32) unnamed_addr #1

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17heacb9b45dad9f98eE(ptr, i32, ptr align 4) unnamed_addr #0

; core::char::methods::encode_utf8_raw::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core4char7methods15encode_utf8_raw8do_panic7runtime17hf43c78897e0ac433E(i32, i32, i32, ptr align 4) unnamed_addr #9

; core::unicode::printable::is_printable
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core7unicode9printable12is_printable17h376af9d97aa0b072E(i32) unnamed_addr #1

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h9e67ffd77cd4400eE"(ptr align 4) unnamed_addr #0

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hffa724c77accbe4dE"(ptr align 4) unnamed_addr #0

; core::slice::<impl [T]>::split_at_unchecked
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h2dab4c08f64d725cE"(ptr sret([16 x i8]) align 4, ptr align 1, i32, i32, ptr align 4) unnamed_addr #0

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17hc2ae076305a9deb2E(i32, i32, ptr align 4) unnamed_addr #9

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h6c3d7c12f3ee175fE(i32, i32, ptr align 4) unnamed_addr #9

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h26c13eef9ac779e8E(i32, i32, ptr align 4) unnamed_addr #9

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h13d72b053e4c8ae7E(i32, i32, ptr align 4) unnamed_addr #9

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d8d7a2c7075cea6E"(i32, ptr align 1, i32, ptr align 4) unnamed_addr #0

; core::slice::memchr::memchr_aligned
; Function Attrs: nounwind
declare dso_local { i32, i32 } @_ZN4core5slice6memchr14memchr_aligned17hbe785d517767e361E(i8, ptr align 1, i32) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
declare dso_local void @_ZN4core6result13unwrap_failed17hbb00ed45a9f740bcE(ptr align 1, i32, ptr align 1, ptr align 4) unnamed_addr #3

; core::unicode::unicode_data::grapheme_extend::lookup_slow
; Function Attrs: noinline nounwind
declare dso_local zeroext i1 @_ZN4core7unicode12unicode_data15grapheme_extend11lookup_slow17h2ce393a82cbd33bfE(i32) unnamed_addr #11

; Function Attrs: cold noreturn nounwind memory(inaccessiblemem: write)
declare void @llvm.trap() #12

; <core::fmt::Formatter as core::fmt::Write>::write_char
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$10write_char17h5e29c1f2a6d66b9eE"(ptr align 4, i32) unnamed_addr #1

; <core::fmt::Formatter as core::fmt::Write>::write_str
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN57_$LT$core..fmt..Formatter$u20$as$u20$core..fmt..Write$GT$9write_str17h48b0fc9e06ffa4d1E"(ptr align 4, ptr align 1, i32) unnamed_addr #1

; <T as core::convert::TryInto<U>>::try_into
; Function Attrs: inlinehint nounwind
declare dso_local { i1, i8 } @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h94507e8e38261fb3E"(i32) unnamed_addr #0

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nounwind
declare dso_local i8 @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h25a284e1b3e4ad91E"(i1 zeroext, i8, ptr align 1, i32, ptr align 4) unnamed_addr #0

; core::str::pattern::StrSearcher::new
; Function Attrs: nounwind
declare dso_local void @_ZN4core3str7pattern11StrSearcher3new17hd72aa41e5ff4ca63E(ptr sret([64 x i8]) align 8, ptr align 1, i32, ptr align 1, i32) unnamed_addr #1

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4, ptr align 4, ptr align 4) unnamed_addr #0

; core::fmt::write
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt5write17hc2899684fc6bf93bE(ptr align 1, ptr align 4, ptr align 4) unnamed_addr #1

; core::str::validations::next_code_point
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @_ZN4core3str11validations15next_code_point17h8b0e6294ab36d6b3E(ptr align 4) unnamed_addr #0

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core6option15Option$LT$T$GT$3map17hef2f88899c9c3935E"(i32, i32) unnamed_addr #0

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hbd1cafab9ccc6558E"(ptr align 1, i32, i32, i32) unnamed_addr #0

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6a8f8ba29e36df99E"(ptr align 1, i32) unnamed_addr #0

; core::str::pattern::CharSearcher::utf8_size
; Function Attrs: nounwind
declare dso_local i32 @_ZN4core3str7pattern12CharSearcher9utf8_size17ha5c2f94032d1c978E(ptr align 4) unnamed_addr #1

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17hfd0d6820511bc9acE"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #0

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h6ffd0947d0518ff5E"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #0

; <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h3f867460551c17dfE"(ptr sret([12 x i8]) align 4) unnamed_addr #0

; core::escape::EscapeIterInner<_,core::escape::MaybeEscaped>::next
; Function Attrs: nounwind
declare dso_local i32 @"_ZN4core6escape53EscapeIterInner$LT$_$C$core..escape..MaybeEscaped$GT$4next17hf61699f7037f99f7E"(ptr align 4) unnamed_addr #1

; core::slice::<impl [T]>::split_at
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h15cdf9799531bd5dE"(ptr sret([16 x i8]) align 4, ptr align 1, i32, i32, ptr align 4) unnamed_addr #0

attributes #0 = { inlinehint nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #1 = { nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #2 = { cold nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #3 = { cold inlinehint noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #4 = { inlinehint noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #8 = { convergent nocallback nofree nosync nounwind willreturn memory(none) }
attributes #9 = { noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #10 = { cold noinline noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #11 = { noinline nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #12 = { cold noreturn nounwind memory(inaccessiblemem: write) }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.ident = !{!74}
!llvm.dbg.cu = !{!75}
!llvm.module.flags = !{!233, !234}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !14, identifier: "8ebe3e780ae6181d77c3deff7c4cc1e2")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 32, align: 32)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 32, align: 32, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!9 = !DIBasicType(name: "usize", size: 32, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !13, size: 32, align: 32, dwarfAddressSpace: 0)
!13 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!14 = !{}
!15 = !DIGlobalVariableExpression(var: !16, expr: !DIExpression())
!16 = distinct !DIGlobalVariable(name: "<rustc_demangle::SizeLimitedFmtAdapter<&mut core::fmt::Formatter> as core::fmt::Write>::{vtable}", scope: null, file: !2, type: !17, isLocal: true, isDefinition: true)
!17 = !DICompositeType(tag: DW_TAG_structure_type, name: "<rustc_demangle::SizeLimitedFmtAdapter<&mut core::fmt::Formatter> as core::fmt::Write>::{vtable_type}", file: !2, size: 192, align: 32, flags: DIFlagArtificial, elements: !18, vtableHolder: !25, templateParams: !14, identifier: "211f87e2c27edb6477ebb875af8687be")
!18 = !{!19, !20, !21, !22, !23, !24}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !17, file: !2, baseType: !6, size: 32, align: 32)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !17, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !17, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !17, file: !2, baseType: !6, size: 32, align: 32, offset: 128)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !17, file: !2, baseType: !6, size: 32, align: 32, offset: 160)
!25 = !DICompositeType(tag: DW_TAG_structure_type, name: "SizeLimitedFmtAdapter<&mut core::fmt::Formatter>", scope: !26, file: !2, size: 96, align: 32, flags: DIFlagPrivate, elements: !27, templateParams: !72, identifier: "7c87c0279c9ebc4c98e14206aef74442")
!26 = !DINamespace(name: "rustc_demangle", scope: null)
!27 = !{!28, !49}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "remaining", scope: !25, file: !2, baseType: !29, size: 64, align: 32, flags: DIFlagPrivate)
!29 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, rustc_demangle::SizeLimitExhausted>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !32, templateParams: !14, identifier: "547666331c7c0251d0f611e549e0a159")
!30 = !DINamespace(name: "result", scope: !31)
!31 = !DINamespace(name: "core", scope: null)
!32 = !{!33}
!33 = !DICompositeType(tag: DW_TAG_variant_part, scope: !29, file: !2, size: 64, align: 32, elements: !34, templateParams: !14, identifier: "8128b2ad20edbb8e7ff6e8b7e60dbef0", discriminator: !47)
!34 = !{!35, !43}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !33, file: !2, baseType: !36, size: 64, align: 32, extraData: i32 0)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !29, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !37, templateParams: !39, identifier: "44e47d16c639f0fcc7b37072251ed740")
!37 = !{!38}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !36, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!39 = !{!40, !41}
!40 = !DITemplateTypeParameter(name: "T", type: !9)
!41 = !DITemplateTypeParameter(name: "E", type: !42)
!42 = !DICompositeType(tag: DW_TAG_structure_type, name: "SizeLimitExhausted", scope: !26, file: !2, align: 8, flags: DIFlagPrivate, elements: !14, identifier: "2ab08bbe49553c0f529a11ae74461ff0")
!43 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !33, file: !2, baseType: !44, size: 64, align: 32, extraData: i32 1)
!44 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !29, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !45, templateParams: !39, identifier: "2c51739d205f0f6c65613d63df6254e5")
!45 = !{!46}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !44, file: !2, baseType: !42, align: 8, offset: 32, flags: DIFlagPublic)
!47 = !DIDerivedType(tag: DW_TAG_member, scope: !29, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!48 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !25, file: !2, baseType: !50, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !51, size: 32, align: 32, dwarfAddressSpace: 0)
!51 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !52, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !53, templateParams: !14, identifier: "9c19c8ef0b5ae3cad350e741e841742c")
!52 = !DINamespace(name: "fmt", scope: !31)
!53 = !{!54, !61}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !51, file: !2, baseType: !55, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormattingOptions", scope: !52, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !56, templateParams: !14, identifier: "8e7d20540a73fe2190308d0618721e3e")
!56 = !{!57, !58, !60}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !55, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagPrivate)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !55, file: !2, baseType: !59, size: 16, align: 16, offset: 32, flags: DIFlagPrivate)
!59 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !55, file: !2, baseType: !59, size: 16, align: 16, offset: 48, flags: DIFlagPrivate)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !51, file: !2, baseType: !62, size: 64, align: 32, flags: DIFlagPrivate)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 64, align: 32, elements: !63, templateParams: !14, identifier: "ed1fc41b72305de4afb5dbb44887680d")
!63 = !{!64, !67}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !62, file: !2, baseType: !65, size: 32, align: 32)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 32, align: 32, dwarfAddressSpace: 0)
!66 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !14, identifier: "3bd7022d6bc7a1bba9386a42dfa7db9d")
!67 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !62, file: !2, baseType: !68, size: 32, align: 32, offset: 32)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 6]", baseType: !69, size: 32, align: 32, dwarfAddressSpace: 0)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 32, elements: !70)
!70 = !{!71}
!71 = !DISubrange(count: 6, lowerBound: 0)
!72 = !{!73}
!73 = !DITemplateTypeParameter(name: "F", type: !50)
!74 = !{!"rustc version 1.92.0-nightly (6380899f3 2025-10-18)"}
!75 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !76, producer: "clang LLVM (rustc version 1.92.0-nightly (6380899f3 2025-10-18))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !77, globals: !232, splitDebugInlining: false, nameTableKind: None)
!76 = !DIFile(filename: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs/@/rustc_demangle.53c9c653b021c8d4-cgu.0", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26")
!77 = !{!78, !87, !91, !223}
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Utf8FirstByteError", scope: !79, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagEnumClass, elements: !84)
!79 = !DINamespace(name: "{closure#0}", scope: !80)
!80 = !DINamespace(name: "{closure#2}", scope: !81)
!81 = !DINamespace(name: "try_parse_str_chars", scope: !82)
!82 = !DINamespace(name: "{impl#3}", scope: !83)
!83 = !DINamespace(name: "v0", scope: !26)
!84 = !{!85, !86}
!85 = !DIEnumerator(name: "ContinuationByte", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "TooLong", value: 1, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ParseError", scope: !83, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagEnumClass, elements: !88)
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RecursedTooDeep", value: 1, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AsciiChar", scope: !92, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagEnumClass, elements: !94)
!92 = !DINamespace(name: "ascii_char", scope: !93)
!93 = !DINamespace(name: "ascii", scope: !31)
!94 = !{!95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222}
!95 = !DIEnumerator(name: "Null", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "StartOfHeading", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "StartOfText", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "EndOfText", value: 3, isUnsigned: true)
!99 = !DIEnumerator(name: "EndOfTransmission", value: 4, isUnsigned: true)
!100 = !DIEnumerator(name: "Enquiry", value: 5, isUnsigned: true)
!101 = !DIEnumerator(name: "Acknowledge", value: 6, isUnsigned: true)
!102 = !DIEnumerator(name: "Bell", value: 7, isUnsigned: true)
!103 = !DIEnumerator(name: "Backspace", value: 8, isUnsigned: true)
!104 = !DIEnumerator(name: "CharacterTabulation", value: 9, isUnsigned: true)
!105 = !DIEnumerator(name: "LineFeed", value: 10, isUnsigned: true)
!106 = !DIEnumerator(name: "LineTabulation", value: 11, isUnsigned: true)
!107 = !DIEnumerator(name: "FormFeed", value: 12, isUnsigned: true)
!108 = !DIEnumerator(name: "CarriageReturn", value: 13, isUnsigned: true)
!109 = !DIEnumerator(name: "ShiftOut", value: 14, isUnsigned: true)
!110 = !DIEnumerator(name: "ShiftIn", value: 15, isUnsigned: true)
!111 = !DIEnumerator(name: "DataLinkEscape", value: 16, isUnsigned: true)
!112 = !DIEnumerator(name: "DeviceControlOne", value: 17, isUnsigned: true)
!113 = !DIEnumerator(name: "DeviceControlTwo", value: 18, isUnsigned: true)
!114 = !DIEnumerator(name: "DeviceControlThree", value: 19, isUnsigned: true)
!115 = !DIEnumerator(name: "DeviceControlFour", value: 20, isUnsigned: true)
!116 = !DIEnumerator(name: "NegativeAcknowledge", value: 21, isUnsigned: true)
!117 = !DIEnumerator(name: "SynchronousIdle", value: 22, isUnsigned: true)
!118 = !DIEnumerator(name: "EndOfTransmissionBlock", value: 23, isUnsigned: true)
!119 = !DIEnumerator(name: "Cancel", value: 24, isUnsigned: true)
!120 = !DIEnumerator(name: "EndOfMedium", value: 25, isUnsigned: true)
!121 = !DIEnumerator(name: "Substitute", value: 26, isUnsigned: true)
!122 = !DIEnumerator(name: "Escape", value: 27, isUnsigned: true)
!123 = !DIEnumerator(name: "InformationSeparatorFour", value: 28, isUnsigned: true)
!124 = !DIEnumerator(name: "InformationSeparatorThree", value: 29, isUnsigned: true)
!125 = !DIEnumerator(name: "InformationSeparatorTwo", value: 30, isUnsigned: true)
!126 = !DIEnumerator(name: "InformationSeparatorOne", value: 31, isUnsigned: true)
!127 = !DIEnumerator(name: "Space", value: 32, isUnsigned: true)
!128 = !DIEnumerator(name: "ExclamationMark", value: 33, isUnsigned: true)
!129 = !DIEnumerator(name: "QuotationMark", value: 34, isUnsigned: true)
!130 = !DIEnumerator(name: "NumberSign", value: 35, isUnsigned: true)
!131 = !DIEnumerator(name: "DollarSign", value: 36, isUnsigned: true)
!132 = !DIEnumerator(name: "PercentSign", value: 37, isUnsigned: true)
!133 = !DIEnumerator(name: "Ampersand", value: 38, isUnsigned: true)
!134 = !DIEnumerator(name: "Apostrophe", value: 39, isUnsigned: true)
!135 = !DIEnumerator(name: "LeftParenthesis", value: 40, isUnsigned: true)
!136 = !DIEnumerator(name: "RightParenthesis", value: 41, isUnsigned: true)
!137 = !DIEnumerator(name: "Asterisk", value: 42, isUnsigned: true)
!138 = !DIEnumerator(name: "PlusSign", value: 43, isUnsigned: true)
!139 = !DIEnumerator(name: "Comma", value: 44, isUnsigned: true)
!140 = !DIEnumerator(name: "HyphenMinus", value: 45, isUnsigned: true)
!141 = !DIEnumerator(name: "FullStop", value: 46, isUnsigned: true)
!142 = !DIEnumerator(name: "Solidus", value: 47, isUnsigned: true)
!143 = !DIEnumerator(name: "Digit0", value: 48, isUnsigned: true)
!144 = !DIEnumerator(name: "Digit1", value: 49, isUnsigned: true)
!145 = !DIEnumerator(name: "Digit2", value: 50, isUnsigned: true)
!146 = !DIEnumerator(name: "Digit3", value: 51, isUnsigned: true)
!147 = !DIEnumerator(name: "Digit4", value: 52, isUnsigned: true)
!148 = !DIEnumerator(name: "Digit5", value: 53, isUnsigned: true)
!149 = !DIEnumerator(name: "Digit6", value: 54, isUnsigned: true)
!150 = !DIEnumerator(name: "Digit7", value: 55, isUnsigned: true)
!151 = !DIEnumerator(name: "Digit8", value: 56, isUnsigned: true)
!152 = !DIEnumerator(name: "Digit9", value: 57, isUnsigned: true)
!153 = !DIEnumerator(name: "Colon", value: 58, isUnsigned: true)
!154 = !DIEnumerator(name: "Semicolon", value: 59, isUnsigned: true)
!155 = !DIEnumerator(name: "LessThanSign", value: 60, isUnsigned: true)
!156 = !DIEnumerator(name: "EqualsSign", value: 61, isUnsigned: true)
!157 = !DIEnumerator(name: "GreaterThanSign", value: 62, isUnsigned: true)
!158 = !DIEnumerator(name: "QuestionMark", value: 63, isUnsigned: true)
!159 = !DIEnumerator(name: "CommercialAt", value: 64, isUnsigned: true)
!160 = !DIEnumerator(name: "CapitalA", value: 65, isUnsigned: true)
!161 = !DIEnumerator(name: "CapitalB", value: 66, isUnsigned: true)
!162 = !DIEnumerator(name: "CapitalC", value: 67, isUnsigned: true)
!163 = !DIEnumerator(name: "CapitalD", value: 68, isUnsigned: true)
!164 = !DIEnumerator(name: "CapitalE", value: 69, isUnsigned: true)
!165 = !DIEnumerator(name: "CapitalF", value: 70, isUnsigned: true)
!166 = !DIEnumerator(name: "CapitalG", value: 71, isUnsigned: true)
!167 = !DIEnumerator(name: "CapitalH", value: 72, isUnsigned: true)
!168 = !DIEnumerator(name: "CapitalI", value: 73, isUnsigned: true)
!169 = !DIEnumerator(name: "CapitalJ", value: 74, isUnsigned: true)
!170 = !DIEnumerator(name: "CapitalK", value: 75, isUnsigned: true)
!171 = !DIEnumerator(name: "CapitalL", value: 76, isUnsigned: true)
!172 = !DIEnumerator(name: "CapitalM", value: 77, isUnsigned: true)
!173 = !DIEnumerator(name: "CapitalN", value: 78, isUnsigned: true)
!174 = !DIEnumerator(name: "CapitalO", value: 79, isUnsigned: true)
!175 = !DIEnumerator(name: "CapitalP", value: 80, isUnsigned: true)
!176 = !DIEnumerator(name: "CapitalQ", value: 81, isUnsigned: true)
!177 = !DIEnumerator(name: "CapitalR", value: 82, isUnsigned: true)
!178 = !DIEnumerator(name: "CapitalS", value: 83, isUnsigned: true)
!179 = !DIEnumerator(name: "CapitalT", value: 84, isUnsigned: true)
!180 = !DIEnumerator(name: "CapitalU", value: 85, isUnsigned: true)
!181 = !DIEnumerator(name: "CapitalV", value: 86, isUnsigned: true)
!182 = !DIEnumerator(name: "CapitalW", value: 87, isUnsigned: true)
!183 = !DIEnumerator(name: "CapitalX", value: 88, isUnsigned: true)
!184 = !DIEnumerator(name: "CapitalY", value: 89, isUnsigned: true)
!185 = !DIEnumerator(name: "CapitalZ", value: 90, isUnsigned: true)
!186 = !DIEnumerator(name: "LeftSquareBracket", value: 91, isUnsigned: true)
!187 = !DIEnumerator(name: "ReverseSolidus", value: 92, isUnsigned: true)
!188 = !DIEnumerator(name: "RightSquareBracket", value: 93, isUnsigned: true)
!189 = !DIEnumerator(name: "CircumflexAccent", value: 94, isUnsigned: true)
!190 = !DIEnumerator(name: "LowLine", value: 95, isUnsigned: true)
!191 = !DIEnumerator(name: "GraveAccent", value: 96, isUnsigned: true)
!192 = !DIEnumerator(name: "SmallA", value: 97, isUnsigned: true)
!193 = !DIEnumerator(name: "SmallB", value: 98, isUnsigned: true)
!194 = !DIEnumerator(name: "SmallC", value: 99, isUnsigned: true)
!195 = !DIEnumerator(name: "SmallD", value: 100, isUnsigned: true)
!196 = !DIEnumerator(name: "SmallE", value: 101, isUnsigned: true)
!197 = !DIEnumerator(name: "SmallF", value: 102, isUnsigned: true)
!198 = !DIEnumerator(name: "SmallG", value: 103, isUnsigned: true)
!199 = !DIEnumerator(name: "SmallH", value: 104, isUnsigned: true)
!200 = !DIEnumerator(name: "SmallI", value: 105, isUnsigned: true)
!201 = !DIEnumerator(name: "SmallJ", value: 106, isUnsigned: true)
!202 = !DIEnumerator(name: "SmallK", value: 107, isUnsigned: true)
!203 = !DIEnumerator(name: "SmallL", value: 108, isUnsigned: true)
!204 = !DIEnumerator(name: "SmallM", value: 109, isUnsigned: true)
!205 = !DIEnumerator(name: "SmallN", value: 110, isUnsigned: true)
!206 = !DIEnumerator(name: "SmallO", value: 111, isUnsigned: true)
!207 = !DIEnumerator(name: "SmallP", value: 112, isUnsigned: true)
!208 = !DIEnumerator(name: "SmallQ", value: 113, isUnsigned: true)
!209 = !DIEnumerator(name: "SmallR", value: 114, isUnsigned: true)
!210 = !DIEnumerator(name: "SmallS", value: 115, isUnsigned: true)
!211 = !DIEnumerator(name: "SmallT", value: 116, isUnsigned: true)
!212 = !DIEnumerator(name: "SmallU", value: 117, isUnsigned: true)
!213 = !DIEnumerator(name: "SmallV", value: 118, isUnsigned: true)
!214 = !DIEnumerator(name: "SmallW", value: 119, isUnsigned: true)
!215 = !DIEnumerator(name: "SmallX", value: 120, isUnsigned: true)
!216 = !DIEnumerator(name: "SmallY", value: 121, isUnsigned: true)
!217 = !DIEnumerator(name: "SmallZ", value: 122, isUnsigned: true)
!218 = !DIEnumerator(name: "LeftCurlyBracket", value: 123, isUnsigned: true)
!219 = !DIEnumerator(name: "VerticalLine", value: 124, isUnsigned: true)
!220 = !DIEnumerator(name: "RightCurlyBracket", value: 125, isUnsigned: true)
!221 = !DIEnumerator(name: "Tilde", value: 126, isUnsigned: true)
!222 = !DIEnumerator(name: "Delete", value: 127, isUnsigned: true)
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IntErrorKind", scope: !224, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagEnumClass, elements: !226)
!224 = !DINamespace(name: "error", scope: !225)
!225 = !DINamespace(name: "num", scope: !31)
!226 = !{!227, !228, !229, !230, !231}
!227 = !DIEnumerator(name: "Empty", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "InvalidDigit", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "PosOverflow", value: 2, isUnsigned: true)
!230 = !DIEnumerator(name: "NegOverflow", value: 3, isUnsigned: true)
!231 = !DIEnumerator(name: "Zero", value: 4, isUnsigned: true)
!232 = !{!0, !15}
!233 = !{i32 7, !"Dwarf Version", i32 4}
!234 = !{i32 2, !"Debug Info Version", i32 3}
!235 = distinct !DISubprogram(name: "next<char, core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h7ed85dc997dbfcb8E", scope: !237, file: !236, line: 106, type: !241, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !326, retainedNodes: !324)
!236 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "47fd4c3c8424e034238ec6bb5a169812")
!237 = !DINamespace(name: "{impl#2}", scope: !238)
!238 = !DINamespace(name: "map", scope: !239)
!239 = !DINamespace(name: "adapters", scope: !240)
!240 = !DINamespace(name: "iter", scope: !31)
!241 = !DISubroutineType(types: !242)
!242 = !{!243, !258}
!243 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !245, templateParams: !14, identifier: "56e9035a859870076aa6ae6c34e3b130")
!244 = !DINamespace(name: "option", scope: !31)
!245 = !{!246}
!246 = !DICompositeType(tag: DW_TAG_variant_part, scope: !243, file: !2, size: 32, align: 32, elements: !247, templateParams: !14, identifier: "53095437fa9ceb8478a77bca669c0a48", discriminator: !257)
!247 = !{!248, !253}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !246, file: !2, baseType: !249, size: 32, align: 32, extraData: i32 1114112)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !243, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !250, identifier: "b8a2cec9e3df8432b4514f7a7ab20f3")
!250 = !{!251}
!251 = !DITemplateTypeParameter(name: "T", type: !252)
!252 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !246, file: !2, baseType: !254, size: 32, align: 32)
!254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !243, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !255, templateParams: !250, identifier: "ef438d4768aff7fd9f59923c07e2428e")
!255 = !{!256}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !254, file: !2, baseType: !252, size: 32, align: 32, flags: DIFlagPublic)
!257 = !DIDerivedType(tag: DW_TAG_member, scope: !243, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>", baseType: !259, size: 32, align: 32, dwarfAddressSpace: 0)
!259 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>", scope: !238, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !260, templateParams: !321, identifier: "9c0d7df5285dcd4f521c0922394132ff")
!260 = !{!261, !302}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !259, file: !2, baseType: !262, size: 160, align: 32, flags: DIFlagProtected)
!262 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>", scope: !263, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !265, templateParams: !300, identifier: "8619fb0bb5c19d4d6a0f9107be0b4539")
!263 = !DINamespace(name: "from_fn", scope: !264)
!264 = !DINamespace(name: "sources", scope: !240)
!265 = !{!266}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !262, file: !2, baseType: !267, size: 160, align: 32, flags: DIFlagPrivate)
!267 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}", scope: !81, file: !2, size: 160, align: 32, elements: !268, templateParams: !14, identifier: "8d0695422cd08734b86082835315c0fd")
!268 = !{!269}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !267, file: !2, baseType: !270, size: 160, align: 32)
!270 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", scope: !238, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !271, templateParams: !297, identifier: "be6c870591ff56dedd490c4639e9abe7")
!271 = !{!272, !295}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !270, file: !2, baseType: !273, size: 160, align: 32, flags: DIFlagProtected)
!273 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", scope: !238, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !274, templateParams: !292, identifier: "a139377d161bcafe18ac2649ced71915")
!274 = !{!275, !290}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !273, file: !2, baseType: !276, size: 160, align: 32, flags: DIFlagProtected)
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: "ChunksExact<u8>", scope: !277, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !279, templateParams: !288, identifier: "a4106b262cfe1f6763d6b035828bf62f")
!277 = !DINamespace(name: "iter", scope: !278)
!278 = !DINamespace(name: "slice", scope: !31)
!279 = !{!280, !286, !287}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !276, file: !2, baseType: !281, size: 64, align: 32, flags: DIFlagPrivate)
!281 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 64, align: 32, elements: !282, templateParams: !14, identifier: "31681e0c10b314f1f33e38b2779acbb4")
!282 = !{!283, !285}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !281, file: !2, baseType: !284, size: 32, align: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 32, align: 32, dwarfAddressSpace: 0)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !281, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !276, file: !2, baseType: !281, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !276, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!288 = !{!289}
!289 = !DITemplateTypeParameter(name: "T", type: !13)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !273, file: !2, baseType: !291, align: 8, offset: 160, flags: DIFlagPrivate)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !81, file: !2, align: 8, elements: !14, identifier: "edf3691c3dcac38796086c2f5881b91a")
!292 = !{!293, !294}
!293 = !DITemplateTypeParameter(name: "I", type: !276)
!294 = !DITemplateTypeParameter(name: "F", type: !291)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !270, file: !2, baseType: !296, align: 8, offset: 160, flags: DIFlagPrivate)
!296 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !81, file: !2, align: 8, elements: !14, identifier: "9889bf83aa9ee748b040e4a7353453dd")
!297 = !{!298, !299}
!298 = !DITemplateTypeParameter(name: "I", type: !273)
!299 = !DITemplateTypeParameter(name: "F", type: !296)
!300 = !{!301}
!301 = !DITemplateTypeParameter(name: "F", type: !267)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !259, file: !2, baseType: !303, align: 8, offset: 160, flags: DIFlagPrivate)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(core::result::Result<char, ()>) -> char", baseType: !304, align: 8, dwarfAddressSpace: 0)
!304 = !DISubroutineType(types: !305)
!305 = !{!252, !306}
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, ()>", scope: !30, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !307, templateParams: !14, identifier: "f7b6c61f3030ae55b99d191f699eb124")
!307 = !{!308}
!308 = !DICompositeType(tag: DW_TAG_variant_part, scope: !306, file: !2, size: 32, align: 32, elements: !309, templateParams: !14, identifier: "eab856db24608922e1b94b630c4b74f8", discriminator: !320)
!309 = !{!310, !316}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !308, file: !2, baseType: !311, size: 32, align: 32)
!311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !306, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !312, templateParams: !314, identifier: "21cdaecd7b05b2849cabfce09eb817d1")
!312 = !{!313}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !311, file: !2, baseType: !252, size: 32, align: 32, flags: DIFlagPublic)
!314 = !{!251, !315}
!315 = !DITemplateTypeParameter(name: "E", type: !7)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !308, file: !2, baseType: !317, size: 32, align: 32, extraData: i32 1114112)
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !306, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !318, templateParams: !314, identifier: "82b778ff844be4bd3cb2500f4477af30")
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !317, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!320 = !DIDerivedType(tag: DW_TAG_member, scope: !306, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!321 = !{!322, !323}
!322 = !DITemplateTypeParameter(name: "I", type: !262)
!323 = !DITemplateTypeParameter(name: "F", type: !303)
!324 = !{!325}
!325 = !DILocalVariable(name: "self", arg: 1, scope: !235, file: !236, line: 106, type: !258)
!326 = !{!327, !322, !323}
!327 = !DITemplateTypeParameter(name: "B", type: !252)
!328 = !DILocation(line: 106, column: 13, scope: !235)
!329 = !DILocation(line: 107, column: 19, scope: !235)
!330 = !DILocation(line: 107, column: 30, scope: !235)
!331 = !DILocation(line: 107, column: 26, scope: !235)
!332 = !DILocation(line: 108, column: 6, scope: !235)
!333 = distinct !DISubprogram(name: "next<[&u8; 2], core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h830f1e4139d36221E", scope: !237, file: !236, line: 106, type: !334, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !355, retainedNodes: !353)
!334 = !DISubroutineType(types: !335)
!335 = !{!336, !352}
!336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<[&u8; 2]>", scope: !244, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !337, templateParams: !14, identifier: "f7ed936ee382e16356cb9118df855827")
!337 = !{!338}
!338 = !DICompositeType(tag: DW_TAG_variant_part, scope: !336, file: !2, size: 64, align: 32, elements: !339, templateParams: !14, identifier: "7c201a0f3f44acb6c0d61db1ef7f3b9d", discriminator: !351)
!339 = !{!340, !347}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !338, file: !2, baseType: !341, size: 64, align: 32, extraData: i32 0)
!341 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !336, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !342, identifier: "5d95eeaa9db924f26ef2005b654272c0")
!342 = !{!343}
!343 = !DITemplateTypeParameter(name: "T", type: !344)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 64, align: 32, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 2, lowerBound: 0)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !338, file: !2, baseType: !348, size: 64, align: 32)
!348 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !336, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !349, templateParams: !342, identifier: "39d01f00a7127872874bddbf05dca108")
!349 = !{!350}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !348, file: !2, baseType: !344, size: 64, align: 32, flags: DIFlagPublic)
!351 = !DIDerivedType(tag: DW_TAG_member, scope: !336, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", baseType: !273, size: 32, align: 32, dwarfAddressSpace: 0)
!353 = !{!354}
!354 = !DILocalVariable(name: "self", arg: 1, scope: !333, file: !236, line: 106, type: !352)
!355 = !{!356, !293, !294}
!356 = !DITemplateTypeParameter(name: "B", type: !344)
!357 = !DILocation(line: 106, column: 13, scope: !333)
!358 = !DILocation(line: 107, column: 19, scope: !333)
!359 = !DILocation(line: 107, column: 30, scope: !333)
!360 = !DILocation(line: 107, column: 26, scope: !333)
!361 = !DILocation(line: 108, column: 6, scope: !333)
!362 = distinct !DISubprogram(name: "next<u8, core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfebd28b335ac4229E", scope: !237, file: !236, line: 106, type: !363, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !379, retainedNodes: !377)
!363 = !DISubroutineType(types: !364)
!364 = !{!365, !376}
!365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !244, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !366, templateParams: !14, identifier: "774a7bc235a763e0d0602fde53630227")
!366 = !{!367}
!367 = !DICompositeType(tag: DW_TAG_variant_part, scope: !365, file: !2, size: 16, align: 8, elements: !368, templateParams: !14, identifier: "d47ebcdec53ff1e1fc7d394cf5e1672d", discriminator: !375)
!368 = !{!369, !371}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !367, file: !2, baseType: !370, size: 16, align: 8, extraData: i8 0)
!370 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !365, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !288, identifier: "84a45d26f79ed4caa31bc5af2c53fbf4")
!371 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !367, file: !2, baseType: !372, size: 16, align: 8, extraData: i8 1)
!372 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !365, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !373, templateParams: !288, identifier: "9d7bb1b003ae84b64da48c86aa454b4")
!373 = !{!374}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !372, file: !2, baseType: !13, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!375 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", baseType: !270, size: 32, align: 32, dwarfAddressSpace: 0)
!377 = !{!378}
!378 = !DILocalVariable(name: "self", arg: 1, scope: !362, file: !236, line: 106, type: !376)
!379 = !{!380, !298, !299}
!380 = !DITemplateTypeParameter(name: "B", type: !13)
!381 = !DILocation(line: 106, column: 13, scope: !362)
!382 = !DILocation(line: 107, column: 19, scope: !362)
!383 = !DILocation(line: 107, column: 30, scope: !362)
!384 = !DILocation(line: 107, column: 26, scope: !362)
!385 = !DILocation(line: 108, column: 6, scope: !362)
!386 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h6e108c95f602196cE", scope: !388, file: !387, line: 45, type: !390, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !415, retainedNodes: !413)
!387 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/copied.rs", directory: "", checksumkind: CSK_MD5, checksum: "8a783814f88d0c75358355976aa6c8a1")
!388 = !DINamespace(name: "{impl#1}", scope: !389)
!389 = !DINamespace(name: "copied", scope: !239)
!390 = !DISubroutineType(types: !391)
!391 = !{!365, !392}
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>", baseType: !393, size: 32, align: 32, dwarfAddressSpace: 0)
!393 = !DICompositeType(tag: DW_TAG_structure_type, name: "Copied<core::slice::iter::Iter<u8>>", scope: !389, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !394, templateParams: !411, identifier: "8c36fcd0acb2b99bfffa7f4b7de6d9bd")
!394 = !{!395}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !393, file: !2, baseType: !396, size: 64, align: 32, flags: DIFlagPrivate)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !277, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !397, templateParams: !288, identifier: "fddf2df4e8c08ec9e4dd47bfe6f746c6")
!397 = !{!398, !405, !406}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !396, file: !2, baseType: !399, size: 32, align: 32, flags: DIFlagPrivate)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !400, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !402, templateParams: !288, identifier: "bfbed5a29c49721772982c8bebfc3819")
!400 = !DINamespace(name: "non_null", scope: !401)
!401 = !DINamespace(name: "ptr", scope: !31)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !399, file: !2, baseType: !404, size: 32, align: 32, flags: DIFlagPrivate)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !13, size: 32, align: 32, dwarfAddressSpace: 0)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !396, file: !2, baseType: !404, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !396, file: !2, baseType: !407, align: 8, offset: 64, flags: DIFlagPrivate)
!407 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !408, file: !2, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !409, identifier: "bfaa7d2d884b3deea70e5af93aa50e2b")
!408 = !DINamespace(name: "marker", scope: !31)
!409 = !{!410}
!410 = !DITemplateTypeParameter(name: "T", type: !12)
!411 = !{!412}
!412 = !DITemplateTypeParameter(name: "I", type: !396)
!413 = !{!414}
!414 = !DILocalVariable(name: "self", arg: 1, scope: !386, file: !387, line: 45, type: !392)
!415 = !{!412, !289}
!416 = !DILocation(line: 45, column: 13, scope: !386)
!417 = !DILocation(line: 46, column: 17, scope: !386)
!418 = !DILocation(line: 46, column: 24, scope: !386)
!419 = !DILocation(line: 47, column: 6, scope: !386)
!420 = distinct !DISubprogram(name: "try_fold<core::slice::iter::Iter<u8>, u8, (), core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17he689a934971b3877E", scope: !388, file: !387, line: 62, type: !421, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !456, retainedNodes: !452)
!421 = !DISubroutineType(types: !422)
!422 = !{!423, !392, !7, !441}
!423 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<(), ()>", scope: !424, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !426, templateParams: !14, identifier: "306b9abc5bbb91f885bcbebb6f89fedd")
!424 = !DINamespace(name: "control_flow", scope: !425)
!425 = !DINamespace(name: "ops", scope: !31)
!426 = !{!427}
!427 = !DICompositeType(tag: DW_TAG_variant_part, scope: !423, file: !2, size: 8, align: 8, elements: !428, templateParams: !14, identifier: "9acc3741968b967f1d14292222a7baa7", discriminator: !440)
!428 = !{!429, !436}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !427, file: !2, baseType: !430, size: 8, align: 8, extraData: i8 0)
!430 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !423, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !431, templateParams: !433, identifier: "c87cd5716c37f2d1d5c9731d6f8fa74")
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !430, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!433 = !{!434, !435}
!434 = !DITemplateTypeParameter(name: "B", type: !7)
!435 = !DITemplateTypeParameter(name: "C", type: !7)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !427, file: !2, baseType: !437, size: 8, align: 8, extraData: i8 1)
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !423, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !438, templateParams: !433, identifier: "60508fba6f3da50a90c7c1d53cfb316e")
!438 = !{!439}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !437, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!440 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!441 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>", scope: !442, file: !2, align: 8, elements: !447, templateParams: !14, identifier: "d9a45ea636eed2a3aabd7455ad9c42d2")
!442 = !DINamespace(name: "check", scope: !443)
!443 = !DINamespace(name: "any", scope: !444)
!444 = !DINamespace(name: "Iterator", scope: !445)
!445 = !DINamespace(name: "iterator", scope: !446)
!446 = !DINamespace(name: "traits", scope: !240)
!447 = !{!448}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !441, file: !2, baseType: !449, align: 8)
!449 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !450, file: !2, align: 8, elements: !14, identifier: "e49ddbe004c57576c960711d032063f1")
!450 = !DINamespace(name: "demangle", scope: !451)
!451 = !DINamespace(name: "legacy", scope: !26)
!452 = !{!453, !454, !455}
!453 = !DILocalVariable(name: "self", arg: 1, scope: !420, file: !387, line: 62, type: !392)
!454 = !DILocalVariable(name: "init", arg: 2, scope: !420, file: !387, line: 62, type: !7)
!455 = !DILocalVariable(name: "f", arg: 3, scope: !420, file: !387, line: 62, type: !441)
!456 = !{!412, !289, !434, !457, !458}
!457 = !DITemplateTypeParameter(name: "F", type: !441)
!458 = !DITemplateTypeParameter(name: "R", type: !423)
!459 = !DILocation(line: 62, column: 26, scope: !420)
!460 = !DILocation(line: 62, column: 37, scope: !420)
!461 = !DILocation(line: 62, column: 46, scope: !420)
!462 = !DILocation(line: 68, column: 32, scope: !420)
!463 = !DILocation(line: 68, column: 17, scope: !420)
!464 = !DILocation(line: 69, column: 6, scope: !420)
!465 = distinct !DISubprogram(name: "try_fold<core::slice::iter::Iter<u8>, u8, (), core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17hea885580af465df8E", scope: !388, file: !387, line: 62, type: !466, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !477, retainedNodes: !473)
!466 = !DISubroutineType(types: !467)
!467 = !{!423, !392, !7, !468}
!468 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>", scope: !442, file: !2, align: 8, elements: !469, templateParams: !14, identifier: "e37b4be6e82c6357d0e38abfb0e1cf26")
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !468, file: !2, baseType: !471, align: 8)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !472, file: !2, align: 8, elements: !14, identifier: "f977677c8c96c713199b4b23b20b9eda")
!472 = !DINamespace(name: "demangle", scope: !83)
!473 = !{!474, !475, !476}
!474 = !DILocalVariable(name: "self", arg: 1, scope: !465, file: !387, line: 62, type: !392)
!475 = !DILocalVariable(name: "init", arg: 2, scope: !465, file: !387, line: 62, type: !7)
!476 = !DILocalVariable(name: "f", arg: 3, scope: !465, file: !387, line: 62, type: !468)
!477 = !{!412, !289, !434, !478, !458}
!478 = !DITemplateTypeParameter(name: "F", type: !468)
!479 = !DILocation(line: 62, column: 26, scope: !465)
!480 = !DILocation(line: 62, column: 37, scope: !465)
!481 = !DILocation(line: 62, column: 46, scope: !465)
!482 = !DILocation(line: 68, column: 32, scope: !465)
!483 = !DILocation(line: 68, column: 17, scope: !465)
!484 = !DILocation(line: 69, column: 6, scope: !465)
!485 = distinct !DISubprogram(name: "next<core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>", linkageName: "_ZN104_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h466025eecc58b398E", scope: !487, file: !486, line: 70, type: !488, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !506, retainedNodes: !504)
!486 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/sources/from_fn.rs", directory: "", checksumkind: CSK_MD5, checksum: "00d25dbc5e439d87dde67be56e759ad6")
!487 = !DINamespace(name: "{impl#0}", scope: !263)
!488 = !DISubroutineType(types: !489)
!489 = !{!490, !503}
!490 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<char, ()>>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !491, templateParams: !14, identifier: "d07e60c0a677da1dd2f14dfeef32819e")
!491 = !{!492}
!492 = !DICompositeType(tag: DW_TAG_variant_part, scope: !490, file: !2, size: 32, align: 32, elements: !493, templateParams: !14, identifier: "8b6599938ae859788e69c6acca83c60b", discriminator: !502)
!493 = !{!494, !498}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !492, file: !2, baseType: !495, size: 32, align: 32, extraData: i32 1114113)
!495 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !490, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !496, identifier: "1990fadb621471831108ac956692fd9f")
!496 = !{!497}
!497 = !DITemplateTypeParameter(name: "T", type: !306)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !492, file: !2, baseType: !499, size: 32, align: 32)
!499 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !490, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !500, templateParams: !496, identifier: "15b1465833f4b2398eb262de35aac9b6")
!500 = !{!501}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !499, file: !2, baseType: !306, size: 32, align: 32, flags: DIFlagPublic)
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !490, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>", baseType: !262, size: 32, align: 32, dwarfAddressSpace: 0)
!504 = !{!505}
!505 = !DILocalVariable(name: "self", arg: 1, scope: !485, file: !486, line: 70, type: !503)
!506 = !{!497, !301}
!507 = !DILocation(line: 70, column: 13, scope: !485)
!508 = !DILocation(line: 71, column: 9, scope: !485)
!509 = !DILocation(line: 72, column: 6, scope: !485)
!510 = distinct !DISubprogram(name: "next<core::str::iter::Bytes>", linkageName: "_ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h83484fc40dfb0c0fE", scope: !512, file: !511, line: 38, type: !514, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !539, retainedNodes: !541)
!511 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/peekable.rs", directory: "", checksumkind: CSK_MD5, checksum: "43a0e412f875b0c368c58a78ce9354c2")
!512 = !DINamespace(name: "{impl#1}", scope: !513)
!513 = !DINamespace(name: "peekable", scope: !239)
!514 = !DISubroutineType(types: !515)
!515 = !{!365, !516}
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::peekable::Peekable<core::str::iter::Bytes>", baseType: !517, size: 32, align: 32, dwarfAddressSpace: 0)
!517 = !DICompositeType(tag: DW_TAG_structure_type, name: "Peekable<core::str::iter::Bytes>", scope: !513, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !518, templateParams: !539, identifier: "3d32b884836eca1484cc9e31dccdc616")
!518 = !{!519, !525}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !517, file: !2, baseType: !520, size: 64, align: 32, flags: DIFlagPrivate)
!520 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bytes", scope: !521, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !523, templateParams: !14, identifier: "2dd2e723f7c458fad2349a7d13d646c")
!521 = !DINamespace(name: "iter", scope: !522)
!522 = !DINamespace(name: "str", scope: !31)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !520, file: !2, baseType: !393, size: 64, align: 32, flags: DIFlagProtected)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !517, file: !2, baseType: !526, size: 16, align: 8, offset: 64, flags: DIFlagPrivate)
!526 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::option::Option<u8>>", scope: !244, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !527, templateParams: !14, identifier: "9ea6547581405786cd1316bd994d5e83")
!527 = !{!528}
!528 = !DICompositeType(tag: DW_TAG_variant_part, scope: !526, file: !2, size: 16, align: 8, elements: !529, templateParams: !14, identifier: "ebc207eb6b9cc3c429013f910b22b6d6", discriminator: !538)
!529 = !{!530, !534}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !528, file: !2, baseType: !531, size: 16, align: 8, extraData: i8 2)
!531 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !526, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !532, identifier: "c1e598248fa4bc5ff6037ccf8ac1fb32")
!532 = !{!533}
!533 = !DITemplateTypeParameter(name: "T", type: !365)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !528, file: !2, baseType: !535, size: 16, align: 8)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !526, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !536, templateParams: !532, identifier: "7dd7f144a47f75e68d03ef61ab2b0b97")
!536 = !{!537}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !535, file: !2, baseType: !365, size: 16, align: 8, flags: DIFlagPublic)
!538 = !DIDerivedType(tag: DW_TAG_member, scope: !526, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!539 = !{!540}
!540 = !DITemplateTypeParameter(name: "I", type: !520)
!541 = !{!542, !543}
!542 = !DILocalVariable(name: "self", arg: 1, scope: !510, file: !511, line: 38, type: !516)
!543 = !DILocalVariable(name: "v", scope: !544, file: !511, line: 40, type: !365, align: 8)
!544 = distinct !DILexicalBlock(scope: !510, file: !511, line: 40, column: 13)
!545 = !DILocation(line: 38, column: 13, scope: !510)
!546 = !DILocation(line: 39, column: 15, scope: !510)
!547 = !DILocation(line: 39, column: 27, scope: !510)
!548 = !DILocation(line: 39, column: 9, scope: !510)
!549 = !DILocation(line: 40, column: 18, scope: !510)
!550 = !DILocation(line: 40, column: 18, scope: !544)
!551 = !DILocation(line: 40, column: 24, scope: !544)
!552 = !DILocation(line: 40, column: 24, scope: !510)
!553 = !DILocation(line: 41, column: 31, scope: !510)
!554 = !DILocation(line: 43, column: 6, scope: !510)
!555 = distinct !DISubprogram(name: "len<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN115_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17hb7ba9df55e1e2126E", scope: !556, file: !387, line: 143, type: !557, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !415, retainedNodes: !560)
!556 = !DINamespace(name: "{impl#3}", scope: !389)
!557 = !DISubroutineType(types: !558)
!558 = !{!9, !559}
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>", baseType: !393, size: 32, align: 32, dwarfAddressSpace: 0)
!560 = !{!561}
!561 = !DILocalVariable(name: "self", arg: 1, scope: !555, file: !387, line: 143, type: !559)
!562 = !DILocation(line: 143, column: 12, scope: !555)
!563 = !DILocalVariable(name: "self", arg: 1, scope: !564, file: !565, line: 141, type: !569)
!564 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h39c4b9ecca9c3f58E", scope: !566, file: !565, line: 141, type: !567, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !570)
!565 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "330935a329cc74f5254abe12d5a6c8e3")
!566 = !DINamespace(name: "{impl#165}", scope: !277)
!567 = !DISubroutineType(types: !568)
!568 = !{!9, !569}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !396, size: 32, align: 32, dwarfAddressSpace: 0)
!570 = !{!563, !571, !573}
!571 = !DILocalVariable(name: "len", scope: !572, file: !565, line: 29, type: !9, align: 32)
!572 = distinct !DILexicalBlock(scope: !564, file: !565, line: 29, column: 13)
!573 = !DILocalVariable(name: "end", scope: !574, file: !565, line: 33, type: !399, align: 32)
!574 = distinct !DILexicalBlock(scope: !564, file: !565, line: 33, column: 13)
!575 = !DILocation(line: 141, column: 20, scope: !564, inlinedAt: !576)
!576 = distinct !DILocation(line: 144, column: 17, scope: !555)
!577 = !DILocation(line: 33, column: 72, scope: !564, inlinedAt: !576)
!578 = !DILocation(line: 33, column: 33, scope: !564, inlinedAt: !576)
!579 = !DILocation(line: 33, column: 17, scope: !574, inlinedAt: !576)
!580 = !DILocation(line: 57, column: 51, scope: !574, inlinedAt: !576)
!581 = !DILocation(line: 57, column: 30, scope: !574, inlinedAt: !576)
!582 = !DILocation(line: 143, column: 14, scope: !564, inlinedAt: !576)
!583 = !DILocation(line: 145, column: 6, scope: !555)
!584 = distinct !DISubprogram(name: "try_rfold<core::slice::iter::Iter<u8>, u8, usize, core::iter::traits::iterator::Iterator::rposition::check::{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>, core::ops::control_flow::ControlFlow<usize, usize>>", linkageName: "_ZN119_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9try_rfold17h6b37307d68fd4dc3E", scope: !585, file: !387, line: 115, type: !586, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !616, retainedNodes: !612)
!585 = !DINamespace(name: "{impl#2}", scope: !389)
!586 = !DISubroutineType(types: !587)
!587 = !{!588, !392, !9, !604}
!588 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<usize, usize>", scope: !424, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !589, templateParams: !14, identifier: "f4540d59510238f8e3fe50c0ad47d347")
!589 = !{!590}
!590 = !DICompositeType(tag: DW_TAG_variant_part, scope: !588, file: !2, size: 64, align: 32, elements: !591, templateParams: !14, identifier: "18fad742d04cfc0075f445b24b3155ac", discriminator: !603)
!591 = !{!592, !599}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !590, file: !2, baseType: !593, size: 64, align: 32, extraData: i32 0)
!593 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !588, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !594, templateParams: !596, identifier: "a8b5b3d365569dd3813cf65d154debfd")
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !593, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!596 = !{!597, !598}
!597 = !DITemplateTypeParameter(name: "B", type: !9)
!598 = !DITemplateTypeParameter(name: "C", type: !9)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !590, file: !2, baseType: !600, size: 64, align: 32, extraData: i32 1)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !588, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !601, templateParams: !596, identifier: "c3a85f0560620205d184b7d4f4c19acc")
!601 = !{!602}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !600, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!603 = !DIDerivedType(tag: DW_TAG_member, scope: !588, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!604 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>", scope: !605, file: !2, align: 8, elements: !607, templateParams: !14, identifier: "2aeafbf5528cacf926025b78071627da")
!605 = !DINamespace(name: "check", scope: !606)
!606 = !DINamespace(name: "rposition", scope: !444)
!607 = !{!608}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !604, file: !2, baseType: !609, align: 8)
!609 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !610, file: !2, align: 8, elements: !14, identifier: "354bb326082d77b8dbddc945170abaaf")
!610 = !DINamespace(name: "ident", scope: !611)
!611 = !DINamespace(name: "{impl#4}", scope: !83)
!612 = !{!613, !614, !615}
!613 = !DILocalVariable(name: "self", arg: 1, scope: !584, file: !387, line: 115, type: !392)
!614 = !DILocalVariable(name: "init", arg: 2, scope: !584, file: !387, line: 115, type: !9)
!615 = !DILocalVariable(name: "f", arg: 3, scope: !584, file: !387, line: 115, type: !604)
!616 = !{!412, !289, !597, !617, !618}
!617 = !DITemplateTypeParameter(name: "F", type: !604)
!618 = !DITemplateTypeParameter(name: "R", type: !588)
!619 = !DILocation(line: 115, column: 27, scope: !584)
!620 = !DILocation(line: 115, column: 38, scope: !584)
!621 = !DILocation(line: 115, column: 47, scope: !584)
!622 = !DILocation(line: 121, column: 33, scope: !584)
!623 = !DILocation(line: 121, column: 17, scope: !584)
!624 = !DILocation(line: 122, column: 6, scope: !584)
!625 = distinct !DISubprogram(name: "try_demangle", linkageName: "_ZN14rustc_demangle12try_demangle17ha4e77b578672c97dE", scope: !26, file: !626, line: 237, type: !627, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !690)
!626 = !DIFile(filename: "src/lib.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26", checksumkind: CSK_MD5, checksum: "d80ed225a352929d107c09a373104947")
!627 = !DISubroutineType(types: !628)
!628 = !{!629, !659}
!629 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<rustc_demangle::Demangle, rustc_demangle::TryDemangleError>", scope: !30, file: !2, size: 256, align: 32, flags: DIFlagPublic, elements: !630, templateParams: !14, identifier: "17019e49799fa98a238b34180c1343aa")
!630 = !{!631}
!631 = !DICompositeType(tag: DW_TAG_variant_part, scope: !629, file: !2, size: 256, align: 32, elements: !632, templateParams: !14, identifier: "aed625eb73e1b0bd3c9ce7f554d04d97", discriminator: !689)
!632 = !{!633, !685}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !631, file: !2, baseType: !634, size: 256, align: 32)
!634 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !629, file: !2, size: 256, align: 32, flags: DIFlagPublic, elements: !635, templateParams: !679, identifier: "5360fe6efe4cbea829e8fb308db8ddb1")
!635 = !{!636}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !634, file: !2, baseType: !637, size: 256, align: 32, flags: DIFlagPublic)
!637 = !DICompositeType(tag: DW_TAG_structure_type, name: "Demangle", scope: !26, file: !2, size: 256, align: 32, flags: DIFlagPublic, elements: !638, templateParams: !14, identifier: "5c8441b300a5c0a264a98059eefbec00")
!638 = !{!639, !677, !678}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !637, file: !2, baseType: !640, size: 128, align: 32, flags: DIFlagPrivate)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<rustc_demangle::DemangleStyle>", scope: !244, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !641, templateParams: !14, identifier: "7a2eea59b05c48175f999e66e0e69023")
!641 = !{!642}
!642 = !DICompositeType(tag: DW_TAG_variant_part, scope: !640, file: !2, size: 128, align: 32, elements: !643, templateParams: !14, identifier: "411a9e4f553bff804cb2b7b145b24e1d", discriminator: !676)
!643 = !{!644, !672}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !642, file: !2, baseType: !645, size: 128, align: 32, extraData: i32 0)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !640, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !646, identifier: "ea4428bc061cac826768133977b36139")
!646 = !{!647}
!647 = !DITemplateTypeParameter(name: "T", type: !648)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "DemangleStyle", scope: !26, file: !2, size: 96, align: 32, flags: DIFlagPrivate, elements: !649, templateParams: !14, identifier: "198f54be7f9f7366a054b7b7647dc0d2")
!649 = !{!650}
!650 = !DICompositeType(tag: DW_TAG_variant_part, scope: !648, file: !2, size: 96, align: 32, elements: !651, templateParams: !14, identifier: "3195f2b362a7572e32b403e415ab17b2", discriminator: !671)
!651 = !{!652, !664}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "Legacy", scope: !650, file: !2, baseType: !653, size: 96, align: 32)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "Legacy", scope: !648, file: !2, size: 96, align: 32, flags: DIFlagPrivate, elements: !654, templateParams: !14, identifier: "a5f7625adb1e966cdbdb455bcec34bb")
!654 = !{!655}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !653, file: !2, baseType: !656, size: 96, align: 32, flags: DIFlagPrivate)
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "Demangle", scope: !451, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !657, templateParams: !14, identifier: "96dbda734083298767014dc8fe945e9")
!657 = !{!658, !663}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !656, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPrivate)
!659 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 64, align: 32, elements: !660, templateParams: !14, identifier: "9277eecd40495f85161460476aacc992")
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !659, file: !2, baseType: !284, size: 32, align: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !659, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !656, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "V0", scope: !650, file: !2, baseType: !665, size: 96, align: 32, extraData: i32 0)
!665 = !DICompositeType(tag: DW_TAG_structure_type, name: "V0", scope: !648, file: !2, size: 96, align: 32, flags: DIFlagPrivate, elements: !666, templateParams: !14, identifier: "32ca8e06e509cd24ee5dd9942ba7e624")
!666 = !{!667}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !665, file: !2, baseType: !668, size: 64, align: 32, offset: 32, flags: DIFlagPrivate)
!668 = !DICompositeType(tag: DW_TAG_structure_type, name: "Demangle", scope: !83, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !669, templateParams: !14, identifier: "25fb939ec614a8ee61f1ecf5cccfde0b")
!669 = !{!670}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !668, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPrivate)
!671 = !DIDerivedType(tag: DW_TAG_member, scope: !648, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !642, file: !2, baseType: !673, size: 128, align: 32, extraData: i32 1)
!673 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !640, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !674, templateParams: !646, identifier: "eb0371a5aebeea77ca0695f331ce4012")
!674 = !{!675}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !673, file: !2, baseType: !648, size: 96, align: 32, offset: 32, flags: DIFlagPublic)
!676 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !637, file: !2, baseType: !659, size: 64, align: 32, offset: 128, flags: DIFlagPrivate)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "suffix", scope: !637, file: !2, baseType: !659, size: 64, align: 32, offset: 192, flags: DIFlagPrivate)
!679 = !{!680, !681}
!680 = !DITemplateTypeParameter(name: "T", type: !637)
!681 = !DITemplateTypeParameter(name: "E", type: !682)
!682 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryDemangleError", scope: !26, file: !2, align: 8, flags: DIFlagPublic, elements: !683, templateParams: !14, identifier: "aed233842fe5e86581c5f5b92a1572d5")
!683 = !{!684}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "_priv", scope: !682, file: !2, baseType: !7, align: 8, flags: DIFlagPrivate)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !631, file: !2, baseType: !686, size: 256, align: 32, extraData: i32 2)
!686 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !629, file: !2, size: 256, align: 32, flags: DIFlagPublic, elements: !687, templateParams: !679, identifier: "86b69f4718be7970c150820d105e3e5d")
!687 = !{!688}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !686, file: !2, baseType: !682, align: 8, flags: DIFlagPublic)
!689 = !DIDerivedType(tag: DW_TAG_member, scope: !629, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!690 = !{!691, !692}
!691 = !DILocalVariable(name: "s", arg: 1, scope: !625, file: !626, line: 237, type: !659)
!692 = !DILocalVariable(name: "sym", scope: !693, file: !626, line: 238, type: !637, align: 32)
!693 = distinct !DILexicalBlock(scope: !625, file: !626, line: 238, column: 5)
!694 = !DILocation(line: 237, column: 21, scope: !625)
!695 = !DILocation(line: 238, column: 9, scope: !693)
!696 = !DILocation(line: 238, column: 15, scope: !625)
!697 = !DILocation(line: 239, column: 18, scope: !693)
!698 = !DILocation(line: 239, column: 8, scope: !693)
!699 = !DILocation(line: 242, column: 9, scope: !693)
!700 = !DILocation(line: 239, column: 5, scope: !693)
!701 = !DILocation(line: 240, column: 9, scope: !693)
!702 = !DILocation(line: 244, column: 2, scope: !625)
!703 = distinct !DISubprogram(name: "is_symbol_like", linkageName: "_ZN14rustc_demangle14is_symbol_like17h5659f9504ee70352E", scope: !26, file: !626, line: 253, type: !704, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !707)
!704 = !DISubroutineType(types: !705)
!705 = !{!706, !659}
!706 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!707 = !{!708}
!708 = !DILocalVariable(name: "s", arg: 1, scope: !703, file: !626, line: 253, type: !659)
!709 = !DILocation(line: 253, column: 19, scope: !703)
!710 = !DILocation(line: 254, column: 7, scope: !703)
!711 = !DILocation(line: 254, column: 15, scope: !703)
!712 = !DILocation(line: 259, column: 2, scope: !703)
!713 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle14is_symbol_like28_$u7b$$u7b$closure$u7d$$u7d$17h4969f401d43ad9b4E", scope: !714, file: !626, line: 254, type: !715, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !719)
!714 = !DINamespace(name: "is_symbol_like", scope: !26)
!715 = !DISubroutineType(types: !716)
!716 = !{!706, !717, !252}
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::is_symbol_like::{closure_env#0}", baseType: !718, size: 32, align: 32, dwarfAddressSpace: 0)
!718 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !714, file: !2, align: 8, elements: !14, identifier: "de3c8fe23673864318cb0af9430e749")
!719 = !{!720, !721}
!720 = !DILocalVariable(name: "c", arg: 2, scope: !713, file: !626, line: 254, type: !252)
!721 = !DILocalVariable(arg: 1, scope: !713, file: !626, line: 254, type: !717)
!722 = !DILocation(line: 254, column: 19, scope: !713)
!723 = !DILocation(line: 254, column: 20, scope: !713)
!724 = !DILocation(line: 257, column: 9, scope: !713)
!725 = !DILocation(line: 257, column: 37, scope: !713)
!726 = !DILocation(line: 258, column: 6, scope: !713)
!727 = distinct !DISubprogram(name: "is_ascii_punctuation", linkageName: "_ZN14rustc_demangle20is_ascii_punctuation17hc111bb0144696b4aE", scope: !26, file: !626, line: 270, type: !728, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !730)
!728 = !DISubroutineType(types: !729)
!729 = !{!706, !252}
!730 = !{!731}
!731 = !DILocalVariable(name: "c", arg: 1, scope: !727, file: !626, line: 270, type: !252)
!732 = !DILocation(line: 270, column: 25, scope: !727)
!733 = !DILocation(line: 272, column: 9, scope: !727)
!734 = !DILocation(line: 273, column: 11, scope: !727)
!735 = !DILocation(line: 275, column: 38, scope: !727)
!736 = !DILocation(line: 274, column: 11, scope: !727)
!737 = !DILocation(line: 275, column: 11, scope: !727)
!738 = !DILocation(line: 276, column: 14, scope: !727)
!739 = !DILocation(line: 278, column: 2, scope: !727)
!740 = distinct !DISubprogram(name: "is_ascii_alphanumeric", linkageName: "_ZN14rustc_demangle21is_ascii_alphanumeric17h63e3240c294e32f6E", scope: !26, file: !626, line: 262, type: !728, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !741)
!741 = !{!742}
!742 = !DILocalVariable(name: "c", arg: 1, scope: !740, file: !626, line: 262, type: !252)
!743 = !DILocation(line: 262, column: 26, scope: !740)
!744 = !DILocation(line: 264, column: 9, scope: !740)
!745 = !DILocation(line: 264, column: 35, scope: !740)
!746 = !DILocation(line: 264, column: 88, scope: !740)
!747 = !DILocation(line: 264, column: 61, scope: !740)
!748 = !DILocation(line: 265, column: 14, scope: !740)
!749 = !DILocation(line: 267, column: 2, scope: !740)
!750 = distinct !DISubprogram(name: "try_parse_uint", linkageName: "_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h1ef6a10dcba92f07E", scope: !752, file: !751, line: 277, type: !755, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !772, retainedNodes: !773)
!751 = !DIFile(filename: "src/v0.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26", checksumkind: CSK_MD5, checksum: "adb94b63d4d711dbdabdefc402d9c8ea")
!752 = !DICompositeType(tag: DW_TAG_structure_type, name: "HexNibbles", scope: !83, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !753, templateParams: !14, identifier: "df36da1d755347807833b2bec90c2fef")
!753 = !{!754}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "nibbles", scope: !752, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPrivate)
!755 = !DISubroutineType(types: !756)
!756 = !{!757, !771}
!757 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u64>", scope: !244, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !758, templateParams: !14, identifier: "803d5190a49cd9cbb0e1b7f047b2a02")
!758 = !{!759}
!759 = !DICompositeType(tag: DW_TAG_variant_part, scope: !757, file: !2, size: 128, align: 64, elements: !760, templateParams: !14, identifier: "3a0a4da66e6a8535785eed9ce3f6c756", discriminator: !770)
!760 = !{!761, !766}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !759, file: !2, baseType: !762, size: 128, align: 64, extraData: i64 0)
!762 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !757, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !14, templateParams: !763, identifier: "d3b4c274a8542a3f1a77a901ebbeee24")
!763 = !{!764}
!764 = !DITemplateTypeParameter(name: "T", type: !765)
!765 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !759, file: !2, baseType: !767, size: 128, align: 64, extraData: i64 1)
!767 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !757, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !768, templateParams: !763, identifier: "8ac6478f2cf64a6ce593e135d995e4fe")
!768 = !{!769}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !767, file: !2, baseType: !765, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!770 = !DIDerivedType(tag: DW_TAG_member, scope: !757, file: !2, baseType: !765, size: 64, align: 64, flags: DIFlagArtificial)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::HexNibbles", baseType: !752, size: 32, align: 32, dwarfAddressSpace: 0)
!772 = !DISubprogram(name: "try_parse_uint", linkageName: "_ZN14rustc_demangle2v010HexNibbles14try_parse_uint17h1ef6a10dcba92f07E", scope: !752, file: !751, line: 277, type: !755, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!773 = !{!774, !775, !777, !779, !784}
!774 = !DILocalVariable(name: "self", arg: 1, scope: !750, file: !751, line: 277, type: !771)
!775 = !DILocalVariable(name: "nibbles", scope: !776, file: !751, line: 278, type: !659, align: 32)
!776 = distinct !DILexicalBlock(scope: !750, file: !751, line: 278, column: 9)
!777 = !DILocalVariable(name: "v", scope: !778, file: !751, line: 284, type: !765, align: 64)
!778 = distinct !DILexicalBlock(scope: !776, file: !751, line: 284, column: 9)
!779 = !DILocalVariable(name: "iter", scope: !780, file: !751, line: 285, type: !781, align: 32)
!780 = distinct !DILexicalBlock(scope: !778, file: !751, line: 285, column: 9)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !521, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !782, templateParams: !14, identifier: "79ab7ee412abf907891c807fe4b41821")
!782 = !{!783}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !781, file: !2, baseType: !396, size: 64, align: 32, flags: DIFlagProtected)
!784 = !DILocalVariable(name: "nibble", scope: !785, file: !751, line: 285, type: !252, align: 32)
!785 = distinct !DILexicalBlock(scope: !780, file: !751, line: 285, column: 39)
!786 = !DILocation(line: 277, column: 23, scope: !750)
!787 = !DILocation(line: 284, column: 13, scope: !778)
!788 = !DILocation(line: 285, column: 23, scope: !780)
!789 = !DILocation(line: 278, column: 23, scope: !750)
!790 = !DILocation(line: 278, column: 36, scope: !750)
!791 = !DILocation(line: 278, column: 13, scope: !776)
!792 = !DILocation(line: 280, column: 20, scope: !776)
!793 = !DILocation(line: 280, column: 12, scope: !776)
!794 = !DILocation(line: 284, column: 21, scope: !776)
!795 = !DILocation(line: 285, column: 31, scope: !778)
!796 = !DILocation(line: 285, column: 23, scope: !778)
!797 = !DILocation(line: 285, column: 9, scope: !780)
!798 = !DILocation(line: 281, column: 20, scope: !776)
!799 = !DILocation(line: 289, column: 6, scope: !750)
!800 = !DILocation(line: 285, column: 13, scope: !780)
!801 = !DILocation(line: 285, column: 13, scope: !785)
!802 = !DILocation(line: 286, column: 18, scope: !785)
!803 = !DILocation(line: 286, column: 17, scope: !785)
!804 = !DILocation(line: 286, column: 36, scope: !785)
!805 = !DILocalVariable(name: "self", arg: 1, scope: !806, file: !807, line: 1012, type: !808)
!806 = distinct !DISubprogram(name: "unwrap<u32>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17he2879523de7c6a7eE", scope: !808, file: !807, line: 1012, type: !821, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !814, declaration: !842, retainedNodes: !843)
!807 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "8e84075e2ccbbe34be511c8d1355506d")
!808 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !244, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !809, templateParams: !14, identifier: "579007fbdd9ea110599ff25fd2866f3e")
!809 = !{!810}
!810 = !DICompositeType(tag: DW_TAG_variant_part, scope: !808, file: !2, size: 64, align: 32, elements: !811, templateParams: !14, identifier: "651cc50a16f8f71ee0bf6d9c39946cb2", discriminator: !820)
!811 = !{!812, !816}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !810, file: !2, baseType: !813, size: 64, align: 32, extraData: i32 0)
!813 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !808, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !814, identifier: "7020278afee02926c8932797fcde8eee")
!814 = !{!815}
!815 = !DITemplateTypeParameter(name: "T", type: !48)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !810, file: !2, baseType: !817, size: 64, align: 32, extraData: i32 1)
!817 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !808, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !818, templateParams: !814, identifier: "d812b4673db9d3d0c577f4c8931ce3c7")
!818 = !{!819}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !817, file: !2, baseType: !48, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!820 = !DIDerivedType(tag: DW_TAG_member, scope: !808, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!821 = !DISubroutineType(types: !822)
!822 = !{!48, !808, !823}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !824, size: 32, align: 32, dwarfAddressSpace: 0)
!824 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !825, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !827, templateParams: !14, identifier: "7c34cafe8ea1dcad4032b9360816105f")
!825 = !DINamespace(name: "location", scope: !826)
!826 = !DINamespace(name: "panic", scope: !31)
!827 = !{!828, !836, !837, !838}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !824, file: !2, baseType: !829, size: 64, align: 32, flags: DIFlagPrivate)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<str>", scope: !400, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !830, templateParams: !288, identifier: "88212fc410c4399fd5095990cc8304ca")
!830 = !{!831}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !829, file: !2, baseType: !832, size: 64, align: 32, flags: DIFlagPrivate)
!832 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 64, align: 32, elements: !833, templateParams: !14, identifier: "238a44609877474087c05adf26cd41fa")
!833 = !{!834, !835}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !832, file: !2, baseType: !284, size: 32, align: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !832, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !824, file: !2, baseType: !48, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !824, file: !2, baseType: !48, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "_filename", scope: !824, file: !2, baseType: !839, align: 8, offset: 128, flags: DIFlagPrivate)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&str>", scope: !408, file: !2, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !840, identifier: "4cfc3eea77dd95eabd59051b67bd7e66")
!840 = !{!841}
!841 = !DITemplateTypeParameter(name: "T", type: !659)
!842 = !DISubprogram(name: "unwrap<u32>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17he2879523de7c6a7eE", scope: !808, file: !807, line: 1012, type: !821, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !814)
!843 = !{!805, !844}
!844 = !DILocalVariable(name: "val", scope: !845, file: !807, line: 1014, type: !48, align: 32)
!845 = distinct !DILexicalBlock(scope: !806, file: !807, line: 1014, column: 13)
!846 = !DILocation(line: 1012, column: 25, scope: !806, inlinedAt: !847)
!847 = distinct !DILocation(line: 286, column: 49, scope: !785)
!848 = !DILocation(line: 1013, column: 15, scope: !806, inlinedAt: !847)
!849 = !DILocation(line: 1013, column: 9, scope: !806, inlinedAt: !847)
!850 = !DILocation(line: 1015, column: 21, scope: !806, inlinedAt: !847)
!851 = !DILocation(line: 1014, column: 18, scope: !806, inlinedAt: !847)
!852 = !DILocation(line: 1014, column: 18, scope: !845, inlinedAt: !847)
!853 = !DILocation(line: 286, column: 28, scope: !785)
!854 = !DILocation(line: 286, column: 13, scope: !785)
!855 = !DILocation(line: 288, column: 14, scope: !778)
!856 = !DILocation(line: 288, column: 9, scope: !778)
!857 = distinct !DISubprogram(name: "try_parse_str_chars", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars17h19864841f71ddfdfE", scope: !752, file: !751, line: 293, type: !858, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !873, retainedNodes: !874)
!858 = !DISubroutineType(types: !859)
!859 = !{!860, !771}
!860 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>>", scope: !244, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !861, templateParams: !14, identifier: "8d0ffc4ed977c2fd7304e65568a81b85")
!861 = !{!862}
!862 = !DICompositeType(tag: DW_TAG_variant_part, scope: !860, file: !2, size: 160, align: 32, elements: !863, templateParams: !14, identifier: "ffc41adefca5911cae7c800dff89ec26", discriminator: !872)
!863 = !{!864, !868}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !862, file: !2, baseType: !865, size: 160, align: 32, extraData: i32 0)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !860, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !866, identifier: "3b807424233468624367cadcf3a253a9")
!866 = !{!867}
!867 = !DITemplateTypeParameter(name: "T", type: !259)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !862, file: !2, baseType: !869, size: 160, align: 32)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !860, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !870, templateParams: !866, identifier: "7792a268e7d91b56219b701081f742f2")
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !869, file: !2, baseType: !259, size: 160, align: 32, flags: DIFlagPublic)
!872 = !DIDerivedType(tag: DW_TAG_member, scope: !860, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!873 = !DISubprogram(name: "try_parse_str_chars", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars17h19864841f71ddfdfE", scope: !752, file: !751, line: 293, type: !858, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!874 = !{!875, !876, !878}
!875 = !DILocalVariable(name: "self", arg: 1, scope: !857, file: !751, line: 293, type: !771)
!876 = !DILocalVariable(name: "bytes", scope: !877, file: !751, line: 299, type: !270, align: 32)
!877 = distinct !DILexicalBlock(scope: !857, file: !751, line: 299, column: 9)
!878 = !DILocalVariable(name: "chars", scope: !879, file: !751, line: 312, type: !262, align: 32)
!879 = distinct !DILexicalBlock(scope: !877, file: !751, line: 312, column: 9)
!880 = !DILocation(line: 293, column: 28, scope: !857)
!881 = !DILocation(line: 299, column: 13, scope: !877)
!882 = !DILocation(line: 312, column: 13, scope: !879)
!883 = !DILocation(line: 294, column: 12, scope: !857)
!884 = !DILocation(line: 294, column: 25, scope: !857)
!885 = !DILocation(line: 299, column: 25, scope: !857)
!886 = !DILocalVariable(name: "self", arg: 1, scope: !887, file: !888, line: 486, type: !659)
!887 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h9707b0eb27d72843E", scope: !889, file: !888, line: 486, type: !890, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !892)
!888 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "361734e74e585b99fb3835c9168d18d7")
!889 = !DINamespace(name: "{impl#0}", scope: !522)
!890 = !DISubroutineType(types: !891)
!891 = !{!281, !659}
!892 = !{!886}
!893 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !894)
!894 = distinct !DILocation(line: 301, column: 14, scope: !857)
!895 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !894)
!896 = !DILocation(line: 301, column: 14, scope: !857)
!897 = !DILocation(line: 302, column: 14, scope: !857)
!898 = !DILocation(line: 303, column: 14, scope: !857)
!899 = !DILocation(line: 307, column: 14, scope: !857)
!900 = !DILocation(line: 312, column: 35, scope: !877)
!901 = !DILocation(line: 312, column: 21, scope: !877)
!902 = !DILocation(line: 362, column: 18, scope: !879)
!903 = !DILocation(line: 362, column: 26, scope: !879)
!904 = !DILocation(line: 362, column: 12, scope: !879)
!905 = !DILocation(line: 295, column: 20, scope: !857)
!906 = !DILocation(line: 367, column: 6, scope: !857)
!907 = !DILocation(line: 365, column: 24, scope: !879)
!908 = !DILocation(line: 365, column: 13, scope: !879)
!909 = !DILocation(line: 362, column: 9, scope: !879)
!910 = !DILocation(line: 363, column: 13, scope: !879)
!911 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h0a07fb9b653d1643E", scope: !81, file: !751, line: 307, type: !912, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !915)
!912 = !DISubroutineType(types: !913)
!913 = !{!13, !914, !344}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}", baseType: !296, size: 32, align: 32, dwarfAddressSpace: 0)
!915 = !{!916, !918, !919, !923, !924}
!916 = !DILocalVariable(name: "hi", scope: !917, file: !751, line: 307, type: !13, align: 8)
!917 = distinct !DILexicalBlock(scope: !911, file: !751, line: 307, column: 31)
!918 = !DILocalVariable(name: "lo", scope: !917, file: !751, line: 307, type: !13, align: 8)
!919 = !DILocalVariable(name: "half", scope: !920, file: !751, line: 308, type: !921, align: 8)
!920 = distinct !DILexicalBlock(scope: !917, file: !751, line: 308, column: 17)
!921 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !922, file: !2, align: 8, elements: !14, identifier: "e2122939f760c983418add972451ffbb")
!922 = !DINamespace(name: "{closure#1}", scope: !81)
!923 = !DILocalVariable(arg: 1, scope: !911, file: !751, line: 307, type: !914)
!924 = !DILocalVariable(arg: 2, scope: !911, file: !751, line: 307, type: !344)
!925 = !DILocation(line: 307, column: 18, scope: !911)
!926 = !DILocation(line: 307, column: 19, scope: !911)
!927 = !DILocation(line: 308, column: 21, scope: !920)
!928 = !DILocation(line: 307, column: 21, scope: !911)
!929 = !DILocation(line: 307, column: 21, scope: !917)
!930 = !DILocation(line: 307, column: 26, scope: !911)
!931 = !DILocation(line: 307, column: 26, scope: !917)
!932 = !DILocation(line: 309, column: 18, scope: !920)
!933 = !DILocation(line: 309, column: 17, scope: !920)
!934 = !DILocation(line: 309, column: 35, scope: !920)
!935 = !DILocation(line: 310, column: 14, scope: !911)
!936 = distinct !DISubprogram(name: "{closure#2}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17h8e3be2663a30ac95E", scope: !81, file: !751, line: 312, type: !937, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !940)
!937 = !DISubroutineType(types: !938)
!938 = !{!490, !939}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}", baseType: !267, size: 32, align: 32, dwarfAddressSpace: 0)
!940 = !{!941}
!941 = !DILocalVariable(name: "bytes", scope: !936, file: !751, line: 299, type: !270, align: 32)
!942 = !DILocation(line: 299, column: 17, scope: !936)
!943 = !DILocation(line: 315, column: 19, scope: !936)
!944 = !DILocation(line: 315, column: 26, scope: !936)
!945 = !DILocation(line: 357, column: 10, scope: !936)
!946 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17ha29bdf3d74e4c4aaE", scope: !81, file: !751, line: 303, type: !947, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !950)
!947 = !DISubroutineType(types: !948)
!948 = !{!344, !949, !281}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}", baseType: !291, size: 32, align: 32, dwarfAddressSpace: 0)
!950 = !{!951, !952, !954, !955}
!951 = !DILocalVariable(name: "slice", arg: 2, scope: !946, file: !751, line: 303, type: !281)
!952 = !DILocalVariable(name: "a", scope: !953, file: !751, line: 304, type: !12, align: 32)
!953 = distinct !DILexicalBlock(scope: !946, file: !751, line: 304, column: 17)
!954 = !DILocalVariable(name: "b", scope: !953, file: !751, line: 304, type: !12, align: 32)
!955 = !DILocalVariable(arg: 1, scope: !946, file: !751, line: 303, type: !949)
!956 = !DILocation(line: 303, column: 18, scope: !946)
!957 = !DILocation(line: 303, column: 19, scope: !946)
!958 = !DILocation(line: 304, column: 17, scope: !946)
!959 = !DILocation(line: 304, column: 18, scope: !946)
!960 = !DILocation(line: 304, column: 18, scope: !953)
!961 = !DILocation(line: 304, column: 21, scope: !946)
!962 = !DILocation(line: 304, column: 21, scope: !953)
!963 = !DILocation(line: 304, column: 27, scope: !953)
!964 = !DILocation(line: 306, column: 14, scope: !946)
!965 = !DILocation(line: 305, column: 22, scope: !946)
!966 = distinct !DISubprogram(name: "{closure#3}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$17hc40b4541ade2d1feE", scope: !81, file: !751, line: 362, type: !967, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !971)
!967 = !DISubroutineType(types: !968)
!968 = !{!706, !969, !306}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#3}", baseType: !970, size: 32, align: 32, dwarfAddressSpace: 0)
!970 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#3}", scope: !81, file: !2, align: 8, elements: !14, identifier: "596f351c862274b5d711ac8c0d010a55")
!971 = !{!972, !973}
!972 = !DILocalVariable(name: "r", arg: 2, scope: !966, file: !751, line: 362, type: !306)
!973 = !DILocalVariable(arg: 1, scope: !966, file: !751, line: 362, type: !969)
!974 = !DILocation(line: 362, column: 30, scope: !966)
!975 = !DILocation(line: 362, column: 31, scope: !966)
!976 = !DILocation(line: 362, column: 36, scope: !966)
!977 = !DILocation(line: 362, column: 44, scope: !966)
!978 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h68868a0497e66bacE", scope: !80, file: !751, line: 315, type: !979, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !984)
!979 = !DISubroutineType(types: !980)
!980 = !{!306, !981, !13}
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !80, file: !2, size: 32, align: 32, elements: !982, templateParams: !14, identifier: "407c0de9556161ccd4637b8024ec5e27")
!982 = !{!983}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__bytes", scope: !981, file: !2, baseType: !376, size: 32, align: 32)
!984 = !{!985, !986, !987, !989, !1009, !1011, !1017, !1026, !1028, !1030, !1032, !1034, !1036, !1038, !1040, !1042, !1054}
!985 = !DILocalVariable(name: "first_byte", arg: 2, scope: !978, file: !751, line: 315, type: !13)
!986 = !DILocalVariable(name: "bytes", scope: !978, file: !751, line: 299, type: !270, align: 32)
!987 = !DILocalVariable(name: "utf8_len", scope: !988, file: !751, line: 334, type: !9, align: 32)
!988 = distinct !DILexicalBlock(scope: !978, file: !751, line: 334, column: 17)
!989 = !DILocalVariable(name: "residual", scope: !990, file: !751, line: 334, type: !991, align: 8)
!990 = distinct !DILexicalBlock(scope: !978, file: !751, line: 334, column: 84)
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, ()>", scope: !30, file: !2, align: 8, flags: DIFlagPublic, elements: !992, templateParams: !14, identifier: "79d6408a830462dc50c52f26616fb801")
!992 = !{!993}
!993 = !DICompositeType(tag: DW_TAG_variant_part, scope: !991, file: !2, align: 8, elements: !994, templateParams: !14, identifier: "858782937f22c4845d124456de60a6bb")
!994 = !{!995, !1005}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !993, file: !2, baseType: !996, align: 8)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !991, file: !2, align: 8, flags: DIFlagPublic, elements: !997, templateParams: !1003, identifier: "f4f23c304504b3666e63568a16e51cc9")
!997 = !{!998}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !996, file: !2, baseType: !999, align: 8, flags: DIFlagPublic)
!999 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !1000, file: !2, align: 8, flags: DIFlagPublic, elements: !1001, templateParams: !14, identifier: "bbec56e295cb17a3c6590c058bc34564")
!1000 = !DINamespace(name: "convert", scope: !31)
!1001 = !{!1002}
!1002 = !DICompositeType(tag: DW_TAG_variant_part, scope: !999, file: !2, align: 8, elements: !14, identifier: "54bd9ba32f82ed48b888ad889b266af3")
!1003 = !{!1004, !315}
!1004 = !DITemplateTypeParameter(name: "T", type: !999)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !993, file: !2, baseType: !1006, align: 8)
!1006 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !991, file: !2, align: 8, flags: DIFlagPublic, elements: !1007, templateParams: !1003, identifier: "441aa773e54177128e6e39a0f7fdd908")
!1007 = !{!1008}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1006, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!1009 = !DILocalVariable(name: "val", scope: !1010, file: !751, line: 334, type: !9, align: 32)
!1010 = distinct !DILexicalBlock(scope: !978, file: !751, line: 334, column: 32)
!1011 = !DILocalVariable(name: "utf8", scope: !1012, file: !751, line: 335, type: !1013, align: 32)
!1012 = distinct !DILexicalBlock(scope: !988, file: !751, line: 335, column: 17)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 64, align: 32, elements: !1014, templateParams: !14, identifier: "bdfeb4840e2373d8742974745efe30b6")
!1014 = !{!1015, !1016}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1013, file: !2, baseType: !284, size: 32, align: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1013, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!1017 = !DILocalVariable(name: "iter", scope: !1018, file: !751, line: 336, type: !1019, align: 32)
!1018 = distinct !DILexicalBlock(scope: !1012, file: !751, line: 336, column: 17)
!1019 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !1020, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1021, templateParams: !1024, identifier: "163ec5cb5e1648a8f47c0fd85be167c6")
!1020 = !DINamespace(name: "range", scope: !425)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1019, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPublic)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1019, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!1024 = !{!1025}
!1025 = !DITemplateTypeParameter(name: "Idx", type: !9)
!1026 = !DILocalVariable(name: "i", scope: !1027, file: !751, line: 336, type: !9, align: 32)
!1027 = distinct !DILexicalBlock(scope: !1018, file: !751, line: 336, column: 38)
!1028 = !DILocalVariable(name: "residual", scope: !1029, file: !751, line: 337, type: !991, align: 8)
!1029 = distinct !DILexicalBlock(scope: !1027, file: !751, line: 337, column: 53)
!1030 = !DILocalVariable(name: "val", scope: !1031, file: !751, line: 337, type: !13, align: 8)
!1031 = distinct !DILexicalBlock(scope: !1027, file: !751, line: 337, column: 31)
!1032 = !DILocalVariable(name: "s", scope: !1033, file: !751, line: 341, type: !659, align: 32)
!1033 = distinct !DILexicalBlock(scope: !1012, file: !751, line: 341, column: 17)
!1034 = !DILocalVariable(name: "residual", scope: !1035, file: !751, line: 341, type: !991, align: 8)
!1035 = distinct !DILexicalBlock(scope: !1012, file: !751, line: 341, column: 61)
!1036 = !DILocalVariable(name: "val", scope: !1037, file: !751, line: 341, type: !659, align: 32)
!1037 = distinct !DILexicalBlock(scope: !1012, file: !751, line: 341, column: 25)
!1038 = !DILocalVariable(name: "chars", scope: !1039, file: !751, line: 345, type: !781, align: 32)
!1039 = distinct !DILexicalBlock(scope: !1033, file: !751, line: 345, column: 17)
!1040 = !DILocalVariable(name: "c", scope: !1041, file: !751, line: 347, type: !252, align: 32)
!1041 = distinct !DILexicalBlock(scope: !1039, file: !751, line: 347, column: 21)
!1042 = !DILocalVariable(name: "args", scope: !1043, file: !751, line: 348, type: !1046, align: 32)
!1043 = !DILexicalBlockFile(scope: !1044, file: !751, discriminator: 0)
!1044 = distinct !DILexicalBlock(scope: !1039, file: !1045, line: 62, column: 38)
!1045 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "af6d9dd47250bbbd0daf63956ba674ac")
!1046 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&&mut [u8], &&str, &usize)", file: !2, size: 96, align: 32, elements: !1047, templateParams: !14, identifier: "10b69142d2918b5ad300382f2add7c1a")
!1047 = !{!1048, !1050, !1052}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1046, file: !2, baseType: !1049, size: 32, align: 32)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&mut [u8]", baseType: !1013, size: 32, align: 32, dwarfAddressSpace: 0)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1046, file: !2, baseType: !1051, size: 32, align: 32, offset: 32)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !659, size: 32, align: 32, dwarfAddressSpace: 0)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !1046, file: !2, baseType: !1053, size: 32, align: 32, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 32, align: 32, dwarfAddressSpace: 0)
!1054 = !DILocalVariable(name: "args", scope: !1055, file: !751, line: 348, type: !1057, align: 32)
!1055 = !DILexicalBlockFile(scope: !1056, file: !751, discriminator: 0)
!1056 = distinct !DILexicalBlock(scope: !1044, file: !1045, line: 62, column: 38)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 192, align: 32, elements: !1105)
!1058 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !1059, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1060, templateParams: !14, identifier: "14dca3c1b1040cd8e8db0eaa112c8216")
!1059 = !DINamespace(name: "rt", scope: !52)
!1060 = !{!1061}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !1058, file: !2, baseType: !1062, size: 64, align: 32, flags: DIFlagPrivate)
!1062 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentType", scope: !1059, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !1063, templateParams: !14, identifier: "fb1492950c21086074bab206592842dc")
!1063 = !{!1064}
!1064 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1062, file: !2, size: 64, align: 32, elements: !1065, templateParams: !14, identifier: "478e018ae6e38e2110d0d424641ab18", discriminator: !1104)
!1065 = !{!1066, !1100}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "Placeholder", scope: !1064, file: !2, baseType: !1067, size: 64, align: 32)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !1062, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !1068, templateParams: !14, identifier: "59bc7f5c5a99ab4be3c3f06b9190c327")
!1068 = !{!1069, !1075, !1095}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1067, file: !2, baseType: !1070, size: 32, align: 32, flags: DIFlagPrivate)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !400, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1071, templateParams: !1073, identifier: "d9f2bcb64deb934daba9b509aea4a83e")
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1070, file: !2, baseType: !6, size: 32, align: 32, flags: DIFlagPrivate)
!1073 = !{!1074}
!1074 = !DITemplateTypeParameter(name: "T", type: !7)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !1067, file: !2, baseType: !1076, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe fn(core::ptr::non_null::NonNull<()>, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !1077, size: 32, align: 32, dwarfAddressSpace: 0)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!1079, !1070, !50}
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !30, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1080, templateParams: !14, identifier: "613ace46ae0c395d39c31f05d3934750")
!1080 = !{!1081}
!1081 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1079, file: !2, size: 8, align: 8, elements: !1082, templateParams: !14, identifier: "2bd67c77928327a5a86e1d970227dbc3", discriminator: !1094)
!1082 = !{!1083, !1090}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1081, file: !2, baseType: !1084, size: 8, align: 8, extraData: i8 0)
!1084 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1079, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1085, templateParams: !1087, identifier: "8e1fa5ea2cd8f77479a16f216aa53a42")
!1085 = !{!1086}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1084, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!1087 = !{!1074, !1088}
!1088 = !DITemplateTypeParameter(name: "E", type: !1089)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !52, file: !2, align: 8, flags: DIFlagPublic, elements: !14, identifier: "cac4d2a6635a122844ffbe3b52a15933")
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1081, file: !2, baseType: !1091, size: 8, align: 8, extraData: i8 1)
!1091 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1079, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1092, templateParams: !1087, identifier: "bd8eb8fbb58ca24e2467a7f35c864471")
!1092 = !{!1093}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1091, file: !2, baseType: !1089, align: 8, offset: 8, flags: DIFlagPublic)
!1094 = !DIDerivedType(tag: DW_TAG_member, scope: !1079, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_lifetime", scope: !1067, file: !2, baseType: !1096, align: 8, offset: 64, flags: DIFlagPrivate)
!1096 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&()>", scope: !408, file: !2, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !1097, identifier: "e71ee38df7dbfccdae82d3411c10d5bc")
!1097 = !{!1098}
!1098 = !DITemplateTypeParameter(name: "T", type: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 32, align: 32, dwarfAddressSpace: 0)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1064, file: !2, baseType: !1101, size: 64, align: 32, extraData: i32 0)
!1101 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !1062, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !1102, templateParams: !14, identifier: "bcc61db69ea5777ac138ac099ea396b2")
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1101, file: !2, baseType: !59, size: 16, align: 16, offset: 32, flags: DIFlagPrivate)
!1104 = !DIDerivedType(tag: DW_TAG_member, scope: !1062, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!1105 = !{!1106}
!1106 = !DISubrange(count: 3, lowerBound: 0)
!1107 = !DILocation(line: 299, column: 17, scope: !978)
!1108 = !DILocation(line: 315, column: 31, scope: !978)
!1109 = !DILocation(line: 335, column: 21, scope: !1012)
!1110 = !DILocation(line: 336, column: 26, scope: !1018)
!1111 = !DILocation(line: 341, column: 21, scope: !1033)
!1112 = !DILocation(line: 345, column: 21, scope: !1039)
!1113 = !DILocation(line: 348, column: 26, scope: !1043)
!1114 = !DILocation(line: 348, column: 26, scope: !1055)
!1115 = !DILocation(line: 334, column: 84, scope: !990)
!1116 = !DILocation(line: 337, column: 53, scope: !1029)
!1117 = !DILocation(line: 341, column: 61, scope: !1035)
!1118 = !DILocation(line: 334, column: 32, scope: !978)
!1119 = !DILocation(line: 334, column: 69, scope: !978)
!1120 = !DILocation(line: 334, column: 32, scope: !990)
!1121 = !DILocation(line: 334, column: 21, scope: !988)
!1122 = !DILocation(line: 334, column: 32, scope: !1010)
!1123 = !DILocation(line: 335, column: 33, scope: !988)
!1124 = !DILocation(line: 335, column: 54, scope: !988)
!1125 = !DILocation(line: 335, column: 28, scope: !988)
!1126 = !DILocation(line: 336, column: 26, scope: !1012)
!1127 = !DILocation(line: 336, column: 17, scope: !1018)
!1128 = !DILocation(line: 336, column: 21, scope: !1018)
!1129 = !DILocation(line: 336, column: 21, scope: !1027)
!1130 = !DILocation(line: 337, column: 37, scope: !1027)
!1131 = !DILocation(line: 337, column: 44, scope: !1027)
!1132 = !DILocation(line: 337, column: 31, scope: !1027)
!1133 = !DILocation(line: 341, column: 40, scope: !1012)
!1134 = !DILocation(line: 341, column: 25, scope: !1012)
!1135 = !DILocation(line: 341, column: 46, scope: !1012)
!1136 = !DILocation(line: 341, column: 25, scope: !1035)
!1137 = !DILocation(line: 341, column: 25, scope: !1037)
!1138 = !DILocation(line: 345, column: 33, scope: !1033)
!1139 = !DILocation(line: 345, column: 35, scope: !1033)
!1140 = !DILocation(line: 346, column: 30, scope: !1039)
!1141 = !DILocation(line: 346, column: 44, scope: !1039)
!1142 = !DILocation(line: 346, column: 23, scope: !1039)
!1143 = !DILocation(line: 346, column: 17, scope: !1039)
!1144 = !DILocation(line: 353, column: 25, scope: !1039)
!1145 = !DILocation(line: 353, column: 27, scope: !1039)
!1146 = !DILocation(line: 353, column: 35, scope: !1039)
!1147 = !DILocation(line: 348, column: 26, scope: !1039)
!1148 = !DILocation(line: 347, column: 27, scope: !1039)
!1149 = !DILocation(line: 347, column: 27, scope: !1041)
!1150 = !DILocation(line: 347, column: 40, scope: !1041)
!1151 = !DILocation(line: 356, column: 14, scope: !978)
!1152 = !DILocation(line: 337, column: 31, scope: !1029)
!1153 = !DILocation(line: 337, column: 31, scope: !1031)
!1154 = !DILocation(line: 337, column: 21, scope: !1027)
!1155 = !DILocation(line: 0, scope: !1156)
!1156 = !DILexicalBlockFile(scope: !978, file: !626, discriminator: 0)
!1157 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h7fc3446f4b9afaa9E", scope: !922, file: !751, line: 308, type: !1158, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !1161)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!13, !1160, !13}
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#1}::{closure_env#0}", baseType: !921, size: 32, align: 32, dwarfAddressSpace: 0)
!1161 = !{!1162, !1163}
!1162 = !DILocalVariable(name: "nibble", arg: 2, scope: !1157, file: !751, line: 308, type: !13)
!1163 = !DILocalVariable(arg: 1, scope: !1157, file: !751, line: 308, type: !1160)
!1164 = !DILocation(line: 308, column: 28, scope: !1157)
!1165 = !DILocation(line: 308, column: 29, scope: !1157)
!1166 = !DILocation(line: 308, column: 41, scope: !1157)
!1167 = !DILocation(line: 308, column: 58, scope: !1157)
!1168 = !DILocation(line: 1012, column: 25, scope: !806, inlinedAt: !1169)
!1169 = distinct !DILocation(line: 308, column: 71, scope: !1157)
!1170 = !DILocation(line: 1013, column: 15, scope: !806, inlinedAt: !1169)
!1171 = !DILocation(line: 1013, column: 9, scope: !806, inlinedAt: !1169)
!1172 = !DILocation(line: 1015, column: 21, scope: !806, inlinedAt: !1169)
!1173 = !DILocation(line: 1014, column: 18, scope: !806, inlinedAt: !1169)
!1174 = !DILocation(line: 1014, column: 18, scope: !845, inlinedAt: !1169)
!1175 = !DILocation(line: 308, column: 85, scope: !1157)
!1176 = distinct !DISubprogram(name: "utf8_len_from_first_byte", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$24utf8_len_from_first_byte17h8f85f680a3237dd5E", scope: !79, file: !751, line: 321, type: !1177, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !1194)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!1179, !13}
!1179 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1180, templateParams: !14, identifier: "9eb13396f78b5836a47aa262f4ebb49b")
!1180 = !{!1181}
!1181 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1179, file: !2, size: 64, align: 32, elements: !1182, templateParams: !14, identifier: "2dd52e23a4a10a64807ac72881d1374a", discriminator: !1193)
!1182 = !{!1183, !1189}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1181, file: !2, baseType: !1184, size: 64, align: 32, extraData: i8 0)
!1184 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1179, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1185, templateParams: !1187, identifier: "72be1244fe426b3792697818702d76ba")
!1185 = !{!1186}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1184, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!1187 = !{!40, !1188}
!1188 = !DITemplateTypeParameter(name: "E", type: !78)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1181, file: !2, baseType: !1190, size: 64, align: 32, extraData: i8 1)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1179, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1191, templateParams: !1187, identifier: "aa974b342f69babfdc55862f4913c600")
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1190, file: !2, baseType: !78, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!1193 = !DIDerivedType(tag: DW_TAG_member, scope: !1179, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!1194 = !{!1195}
!1195 = !DILocalVariable(name: "byte", arg: 1, scope: !1176, file: !751, line: 321, type: !13)
!1196 = !DILocation(line: 321, column: 45, scope: !1176)
!1197 = !DILocation(line: 323, column: 25, scope: !1176)
!1198 = !DILocation(line: 324, column: 25, scope: !1176)
!1199 = !DILocation(line: 323, column: 40, scope: !1176)
!1200 = !DILocation(line: 325, column: 25, scope: !1176)
!1201 = !DILocation(line: 324, column: 40, scope: !1176)
!1202 = !DILocation(line: 324, column: 80, scope: !1176)
!1203 = !DILocation(line: 326, column: 25, scope: !1176)
!1204 = !DILocation(line: 325, column: 40, scope: !1176)
!1205 = !DILocation(line: 327, column: 25, scope: !1176)
!1206 = !DILocation(line: 326, column: 40, scope: !1176)
!1207 = !DILocation(line: 328, column: 25, scope: !1176)
!1208 = !DILocation(line: 327, column: 40, scope: !1176)
!1209 = !DILocation(line: 322, column: 27, scope: !1176)
!1210 = !DILocation(line: 328, column: 40, scope: !1176)
!1211 = !DILocation(line: 328, column: 71, scope: !1176)
!1212 = !DILocation(line: 330, column: 18, scope: !1176)
!1213 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h2238ed468dd3edbfE", scope: !79, file: !751, line: 341, type: !1214, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !1222)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{null, !1216, !1217}
!1216 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !79, file: !2, align: 8, elements: !14, identifier: "d11e6065d3bb3c8182543399a19e7d33")
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !1218, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1219, templateParams: !14, identifier: "4b4a5f597602ec9f4778ad8670e72da9")
!1218 = !DINamespace(name: "error", scope: !522)
!1219 = !{!1220, !1221}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !1217, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagProtected)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !1217, file: !2, baseType: !365, size: 16, align: 8, offset: 32, flags: DIFlagProtected)
!1222 = !{!1223, !1224}
!1223 = !DILocalVariable(arg: 1, scope: !1213, file: !751, line: 341, type: !1216)
!1224 = !DILocalVariable(arg: 2, scope: !1213, file: !751, line: 341, type: !1217)
!1225 = !DILocation(line: 341, column: 54, scope: !1213)
!1226 = !DILocation(line: 341, column: 55, scope: !1213)
!1227 = !DILocation(line: 341, column: 60, scope: !1213)
!1228 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v010HexNibbles19try_parse_str_chars28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h7fa4d04787a81524E", scope: !79, file: !751, line: 334, type: !1229, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !1232)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{null, !1231, !78}
!1231 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !79, file: !2, align: 8, elements: !14, identifier: "f2eb1485c77b8a1833e2caf7246b714b")
!1232 = !{!1233, !1234}
!1233 = !DILocalVariable(arg: 1, scope: !1228, file: !751, line: 334, type: !1231)
!1234 = !DILocalVariable(arg: 2, scope: !1228, file: !751, line: 334, type: !78)
!1235 = !DILocation(line: 334, column: 77, scope: !1228)
!1236 = !DILocation(line: 334, column: 78, scope: !1228)
!1237 = !DILocation(line: 334, column: 83, scope: !1228)
!1238 = distinct !DISubprogram(name: "message", linkageName: "_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E", scope: !87, file: !751, line: 588, type: !1239, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1242, retainedNodes: !1243)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!659, !1241}
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::ParseError", baseType: !87, size: 32, align: 32, dwarfAddressSpace: 0)
!1242 = !DISubprogram(name: "message", linkageName: "_ZN14rustc_demangle2v010ParseError7message17h936fb4eba5631b80E", scope: !87, file: !751, line: 588, type: !1239, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1243 = !{!1244}
!1244 = !DILocalVariable(name: "self", arg: 1, scope: !1238, file: !751, line: 588, type: !1241)
!1245 = !DILocation(line: 588, column: 16, scope: !1238)
!1246 = !DILocation(line: 589, column: 15, scope: !1238)
!1247 = !DILocation(line: 589, column: 9, scope: !1238)
!1248 = !DILocation(line: 591, column: 44, scope: !1238)
!1249 = !DILocation(line: 591, column: 70, scope: !1238)
!1250 = !DILocation(line: 590, column: 36, scope: !1238)
!1251 = !DILocation(line: 590, column: 53, scope: !1238)
!1252 = !DILocation(line: 593, column: 6, scope: !1238)
!1253 = distinct !DISubprogram(name: "basic_type", linkageName: "_ZN14rustc_demangle2v010basic_type17h156aa3e3723135c9E", scope: !83, file: !751, line: 370, type: !1254, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !1267)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!1256, !13}
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !244, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1257, templateParams: !14, identifier: "70526b74386e3ab1af24a4552995aad0")
!1257 = !{!1258}
!1258 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1256, file: !2, size: 64, align: 32, elements: !1259, templateParams: !14, identifier: "8075e3d3cbf81a82fddc7ee972736375", discriminator: !1266)
!1259 = !{!1260, !1262}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1258, file: !2, baseType: !1261, size: 64, align: 32, extraData: i32 0)
!1261 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1256, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !840, identifier: "a2c8c52cbf664b15e04ba33a9d1fb455")
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1258, file: !2, baseType: !1263, size: 64, align: 32)
!1263 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1256, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1264, templateParams: !840, identifier: "b664394454dbb74539919442d1cb2e90")
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1263, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPublic)
!1266 = !DIDerivedType(tag: DW_TAG_member, scope: !1256, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!1267 = !{!1268}
!1268 = !DILocalVariable(name: "tag", arg: 1, scope: !1253, file: !751, line: 370, type: !13)
!1269 = !DILocation(line: 370, column: 15, scope: !1253)
!1270 = !DILocation(line: 371, column: 10, scope: !1253)
!1271 = !DILocation(line: 394, column: 21, scope: !1253)
!1272 = !DILocation(line: 396, column: 2, scope: !1253)
!1273 = !DILocation(line: 372, column: 17, scope: !1253)
!1274 = !DILocation(line: 372, column: 22, scope: !1253)
!1275 = !DILocation(line: 373, column: 17, scope: !1253)
!1276 = !DILocation(line: 373, column: 22, scope: !1253)
!1277 = !DILocation(line: 374, column: 17, scope: !1253)
!1278 = !DILocation(line: 374, column: 21, scope: !1253)
!1279 = !DILocation(line: 375, column: 17, scope: !1253)
!1280 = !DILocation(line: 375, column: 20, scope: !1253)
!1281 = !DILocation(line: 376, column: 17, scope: !1253)
!1282 = !DILocation(line: 376, column: 20, scope: !1253)
!1283 = !DILocation(line: 377, column: 17, scope: !1253)
!1284 = !DILocation(line: 377, column: 21, scope: !1253)
!1285 = !DILocation(line: 378, column: 17, scope: !1253)
!1286 = !DILocation(line: 378, column: 21, scope: !1253)
!1287 = !DILocation(line: 379, column: 17, scope: !1253)
!1288 = !DILocation(line: 379, column: 21, scope: !1253)
!1289 = !DILocation(line: 380, column: 17, scope: !1253)
!1290 = !DILocation(line: 380, column: 22, scope: !1253)
!1291 = !DILocation(line: 381, column: 17, scope: !1253)
!1292 = !DILocation(line: 381, column: 23, scope: !1253)
!1293 = !DILocation(line: 382, column: 17, scope: !1253)
!1294 = !DILocation(line: 382, column: 20, scope: !1253)
!1295 = !DILocation(line: 383, column: 17, scope: !1253)
!1296 = !DILocation(line: 383, column: 21, scope: !1253)
!1297 = !DILocation(line: 384, column: 17, scope: !1253)
!1298 = !DILocation(line: 384, column: 21, scope: !1253)
!1299 = !DILocation(line: 385, column: 17, scope: !1253)
!1300 = !DILocation(line: 385, column: 21, scope: !1253)
!1301 = !DILocation(line: 386, column: 17, scope: !1253)
!1302 = !DILocation(line: 386, column: 22, scope: !1253)
!1303 = !DILocation(line: 387, column: 17, scope: !1253)
!1304 = !DILocation(line: 387, column: 23, scope: !1253)
!1305 = !DILocation(line: 388, column: 17, scope: !1253)
!1306 = !DILocation(line: 388, column: 21, scope: !1253)
!1307 = !DILocation(line: 389, column: 17, scope: !1253)
!1308 = !DILocation(line: 389, column: 21, scope: !1253)
!1309 = !DILocation(line: 390, column: 17, scope: !1253)
!1310 = !DILocation(line: 390, column: 19, scope: !1253)
!1311 = !DILocation(line: 391, column: 17, scope: !1253)
!1312 = !DILocation(line: 391, column: 19, scope: !1253)
!1313 = !DILocation(line: 392, column: 17, scope: !1253)
!1314 = !DILocation(line: 392, column: 21, scope: !1253)
!1315 = !DILocation(line: 371, column: 5, scope: !1253)
!1316 = distinct !DISubprogram(name: "punycode_decode<rustc_demangle::v0::{impl#1}::try_small_punycode_decode::{closure_env#0}<rustc_demangle::v0::{impl#2}::fmt::{closure_env#0}, core::result::Result<(), core::fmt::Error>>>", linkageName: "_ZN14rustc_demangle2v05Ident15punycode_decode17h54cfdbd5b2bb8d4aE", scope: !1317, file: !751, line: 152, type: !1321, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1350, declaration: !1349, retainedNodes: !1352)
!1317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ident", scope: !83, file: !2, size: 128, align: 32, flags: DIFlagPrivate, elements: !1318, templateParams: !14, identifier: "5bb9402f9712e0aeebbfc651acd9cabe")
!1318 = !{!1319, !1320}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !1317, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPrivate)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "punycode", scope: !1317, file: !2, baseType: !659, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!1323, !1337, !1338}
!1323 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), ()>", scope: !30, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1324, templateParams: !14, identifier: "8b97b8e8abfb043818a5dd03d6455862")
!1324 = !{!1325}
!1325 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1323, file: !2, size: 8, align: 8, elements: !1326, templateParams: !14, identifier: "bc35396053385a85eef88a7d9127547", discriminator: !1336)
!1326 = !{!1327, !1332}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1325, file: !2, baseType: !1328, size: 8, align: 8, extraData: i8 0)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1323, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1329, templateParams: !1331, identifier: "d27790abe9f852f66c5b37fa434eec8f")
!1329 = !{!1330}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1328, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!1331 = !{!1074, !315}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1325, file: !2, baseType: !1333, size: 8, align: 8, extraData: i8 1)
!1333 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1323, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1334, templateParams: !1331, identifier: "924d3e4a6e37beba80ab7389c82666b")
!1334 = !{!1335}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1333, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!1336 = !DIDerivedType(tag: DW_TAG_member, scope: !1323, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::Ident", baseType: !1317, size: 32, align: 32, dwarfAddressSpace: 0)
!1338 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<rustc_demangle::v0::{impl#2}::fmt::{closure_env#0}, core::result::Result<(), core::fmt::Error>>", scope: !1339, file: !2, size: 64, align: 32, elements: !1341, templateParams: !14, identifier: "eeb73f5d628f72b2acff03223dbed38")
!1339 = !DINamespace(name: "try_small_punycode_decode", scope: !1340)
!1340 = !DINamespace(name: "{impl#1}", scope: !83)
!1341 = !{!1342, !1347}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__out", scope: !1338, file: !2, baseType: !1343, size: 32, align: 32)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [char; 128]", baseType: !1344, size: 32, align: 32, dwarfAddressSpace: 0)
!1344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 4096, align: 32, elements: !1345)
!1345 = !{!1346}
!1346 = !DISubrange(count: 128, lowerBound: 0)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__out_len", scope: !1338, file: !2, baseType: !1348, size: 32, align: 32, offset: 32)
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !9, size: 32, align: 32, dwarfAddressSpace: 0)
!1349 = !DISubprogram(name: "punycode_decode<rustc_demangle::v0::{impl#1}::try_small_punycode_decode::{closure_env#0}<rustc_demangle::v0::{impl#2}::fmt::{closure_env#0}, core::result::Result<(), core::fmt::Error>>>", linkageName: "_ZN14rustc_demangle2v05Ident15punycode_decode17h54cfdbd5b2bb8d4aE", scope: !1317, file: !751, line: 152, type: !1321, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1350)
!1350 = !{!1351}
!1351 = !DITemplateTypeParameter(name: "F", type: !1338)
!1352 = !{!1353, !1354, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1389, !1391, !1393, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1425, !1427, !1429, !1431}
!1353 = !DILocalVariable(name: "self", arg: 1, scope: !1316, file: !751, line: 153, type: !1337)
!1354 = !DILocalVariable(name: "insert", arg: 2, scope: !1316, file: !751, line: 154, type: !1338)
!1355 = !DILocalVariable(name: "punycode_bytes", scope: !1356, file: !751, line: 156, type: !517, align: 32)
!1356 = distinct !DILexicalBlock(scope: !1316, file: !751, line: 156, column: 9)
!1357 = !DILocalVariable(name: "len", scope: !1358, file: !751, line: 161, type: !9, align: 32)
!1358 = distinct !DILexicalBlock(scope: !1356, file: !751, line: 161, column: 9)
!1359 = !DILocalVariable(name: "iter", scope: !1360, file: !751, line: 164, type: !781, align: 32)
!1360 = distinct !DILexicalBlock(scope: !1358, file: !751, line: 164, column: 9)
!1361 = !DILocalVariable(name: "c", scope: !1362, file: !751, line: 164, type: !252, align: 32)
!1362 = distinct !DILexicalBlock(scope: !1360, file: !751, line: 164, column: 37)
!1363 = !DILocalVariable(name: "residual", scope: !1364, file: !751, line: 165, type: !991, align: 8)
!1364 = distinct !DILexicalBlock(scope: !1362, file: !751, line: 165, column: 27)
!1365 = !DILocalVariable(name: "val", scope: !1366, file: !751, line: 165, type: !7, align: 8)
!1366 = distinct !DILexicalBlock(scope: !1362, file: !751, line: 165, column: 13)
!1367 = !DILocalVariable(name: "base", scope: !1368, file: !751, line: 170, type: !9, align: 32)
!1368 = distinct !DILexicalBlock(scope: !1358, file: !751, line: 170, column: 9)
!1369 = !DILocalVariable(name: "t_min", scope: !1370, file: !751, line: 171, type: !9, align: 32)
!1370 = distinct !DILexicalBlock(scope: !1368, file: !751, line: 171, column: 9)
!1371 = !DILocalVariable(name: "t_max", scope: !1372, file: !751, line: 172, type: !9, align: 32)
!1372 = distinct !DILexicalBlock(scope: !1370, file: !751, line: 172, column: 9)
!1373 = !DILocalVariable(name: "skew", scope: !1374, file: !751, line: 173, type: !9, align: 32)
!1374 = distinct !DILexicalBlock(scope: !1372, file: !751, line: 173, column: 9)
!1375 = !DILocalVariable(name: "damp", scope: !1376, file: !751, line: 174, type: !9, align: 32)
!1376 = distinct !DILexicalBlock(scope: !1374, file: !751, line: 174, column: 9)
!1377 = !DILocalVariable(name: "bias", scope: !1378, file: !751, line: 175, type: !9, align: 32)
!1378 = distinct !DILexicalBlock(scope: !1376, file: !751, line: 175, column: 9)
!1379 = !DILocalVariable(name: "i", scope: !1380, file: !751, line: 176, type: !9, align: 32)
!1380 = distinct !DILexicalBlock(scope: !1378, file: !751, line: 176, column: 9)
!1381 = !DILocalVariable(name: "n", scope: !1382, file: !751, line: 177, type: !9, align: 32)
!1382 = distinct !DILexicalBlock(scope: !1380, file: !751, line: 177, column: 9)
!1383 = !DILocalVariable(name: "delta", scope: !1384, file: !751, line: 181, type: !9, align: 32)
!1384 = distinct !DILexicalBlock(scope: !1382, file: !751, line: 181, column: 13)
!1385 = !DILocalVariable(name: "w", scope: !1386, file: !751, line: 182, type: !9, align: 32)
!1386 = distinct !DILexicalBlock(scope: !1384, file: !751, line: 182, column: 13)
!1387 = !DILocalVariable(name: "k", scope: !1388, file: !751, line: 183, type: !9, align: 32)
!1388 = distinct !DILexicalBlock(scope: !1386, file: !751, line: 183, column: 13)
!1389 = !DILocalVariable(name: "t", scope: !1390, file: !751, line: 188, type: !9, align: 32)
!1390 = distinct !DILexicalBlock(scope: !1388, file: !751, line: 188, column: 17)
!1391 = !DILocalVariable(name: "d", scope: !1392, file: !751, line: 190, type: !13, align: 8)
!1392 = distinct !DILexicalBlock(scope: !1390, file: !751, line: 190, column: 17)
!1393 = !DILocalVariable(name: "d", scope: !1394, file: !751, line: 191, type: !13, align: 8)
!1394 = distinct !DILexicalBlock(scope: !1390, file: !751, line: 191, column: 21)
!1395 = !DILocalVariable(name: "d", scope: !1396, file: !751, line: 192, type: !13, align: 8)
!1396 = distinct !DILexicalBlock(scope: !1390, file: !751, line: 192, column: 21)
!1397 = !DILocalVariable(name: "d", scope: !1398, file: !751, line: 195, type: !9, align: 32)
!1398 = distinct !DILexicalBlock(scope: !1392, file: !751, line: 195, column: 17)
!1399 = !DILocalVariable(name: "residual", scope: !1400, file: !751, line: 196, type: !991, align: 8)
!1400 = distinct !DILexicalBlock(scope: !1398, file: !751, line: 196, column: 69)
!1401 = !DILocalVariable(name: "val", scope: !1402, file: !751, line: 196, type: !9, align: 32)
!1402 = distinct !DILexicalBlock(scope: !1398, file: !751, line: 196, column: 43)
!1403 = !DILocalVariable(name: "residual", scope: !1404, file: !751, line: 196, type: !991, align: 8)
!1404 = distinct !DILexicalBlock(scope: !1398, file: !751, line: 196, column: 81)
!1405 = !DILocalVariable(name: "val", scope: !1406, file: !751, line: 196, type: !9, align: 32)
!1406 = distinct !DILexicalBlock(scope: !1398, file: !751, line: 196, column: 25)
!1407 = !DILocalVariable(name: "residual", scope: !1408, file: !751, line: 200, type: !991, align: 8)
!1408 = distinct !DILexicalBlock(scope: !1398, file: !751, line: 200, column: 54)
!1409 = !DILocalVariable(name: "val", scope: !1410, file: !751, line: 200, type: !9, align: 32)
!1410 = distinct !DILexicalBlock(scope: !1398, file: !751, line: 200, column: 21)
!1411 = !DILocalVariable(name: "residual", scope: !1412, file: !751, line: 205, type: !991, align: 8)
!1412 = distinct !DILexicalBlock(scope: !1388, file: !751, line: 205, column: 47)
!1413 = !DILocalVariable(name: "val", scope: !1414, file: !751, line: 205, type: !9, align: 32)
!1414 = distinct !DILexicalBlock(scope: !1388, file: !751, line: 205, column: 17)
!1415 = !DILocalVariable(name: "residual", scope: !1416, file: !751, line: 206, type: !991, align: 8)
!1416 = distinct !DILexicalBlock(scope: !1388, file: !751, line: 206, column: 49)
!1417 = !DILocalVariable(name: "val", scope: !1418, file: !751, line: 206, type: !9, align: 32)
!1418 = distinct !DILexicalBlock(scope: !1388, file: !751, line: 206, column: 17)
!1419 = !DILocalVariable(name: "n_u32", scope: !1420, file: !751, line: 209, type: !48, align: 32)
!1420 = distinct !DILexicalBlock(scope: !1388, file: !751, line: 209, column: 13)
!1421 = !DILocalVariable(name: "c", scope: !1422, file: !751, line: 210, type: !252, align: 32)
!1422 = distinct !DILexicalBlock(scope: !1420, file: !751, line: 210, column: 13)
!1423 = !DILocalVariable(name: "residual", scope: !1424, file: !751, line: 211, type: !991, align: 8)
!1424 = distinct !DILexicalBlock(scope: !1420, file: !751, line: 211, column: 48)
!1425 = !DILocalVariable(name: "val", scope: !1426, file: !751, line: 211, type: !252, align: 32)
!1426 = distinct !DILexicalBlock(scope: !1420, file: !751, line: 211, column: 17)
!1427 = !DILocalVariable(name: "residual", scope: !1428, file: !751, line: 217, type: !991, align: 8)
!1428 = distinct !DILexicalBlock(scope: !1422, file: !751, line: 217, column: 25)
!1429 = !DILocalVariable(name: "val", scope: !1430, file: !751, line: 217, type: !7, align: 8)
!1430 = distinct !DILexicalBlock(scope: !1422, file: !751, line: 217, column: 13)
!1431 = !DILocalVariable(name: "k", scope: !1432, file: !751, line: 230, type: !9, align: 32)
!1432 = distinct !DILexicalBlock(scope: !1422, file: !751, line: 230, column: 13)
!1433 = !DILocation(line: 153, column: 9, scope: !1316)
!1434 = !DILocation(line: 154, column: 9, scope: !1316)
!1435 = !DILocation(line: 156, column: 13, scope: !1356)
!1436 = !DILocation(line: 161, column: 13, scope: !1358)
!1437 = !DILocation(line: 164, column: 18, scope: !1360)
!1438 = !DILocation(line: 174, column: 13, scope: !1376)
!1439 = !DILocation(line: 175, column: 13, scope: !1378)
!1440 = !DILocation(line: 176, column: 13, scope: !1380)
!1441 = !DILocation(line: 177, column: 13, scope: !1382)
!1442 = !DILocation(line: 181, column: 17, scope: !1384)
!1443 = !DILocation(line: 182, column: 17, scope: !1386)
!1444 = !DILocation(line: 183, column: 17, scope: !1388)
!1445 = !DILocation(line: 190, column: 21, scope: !1392)
!1446 = !DILocation(line: 230, column: 17, scope: !1432)
!1447 = !DILocation(line: 165, column: 27, scope: !1364)
!1448 = !DILocation(line: 165, column: 13, scope: !1366)
!1449 = !DILocation(line: 173, column: 13, scope: !1374)
!1450 = !DILocation(line: 196, column: 69, scope: !1400)
!1451 = !DILocation(line: 196, column: 81, scope: !1404)
!1452 = !DILocation(line: 200, column: 54, scope: !1408)
!1453 = !DILocation(line: 205, column: 47, scope: !1412)
!1454 = !DILocation(line: 206, column: 49, scope: !1416)
!1455 = !DILocation(line: 211, column: 48, scope: !1424)
!1456 = !DILocation(line: 217, column: 25, scope: !1428)
!1457 = !DILocation(line: 217, column: 13, scope: !1430)
!1458 = !DILocation(line: 156, column: 34, scope: !1316)
!1459 = !DILocation(line: 156, column: 48, scope: !1316)
!1460 = !DILocation(line: 156, column: 56, scope: !1316)
!1461 = !DILocation(line: 157, column: 27, scope: !1356)
!1462 = !DILocation(line: 157, column: 34, scope: !1356)
!1463 = !DILocation(line: 157, column: 12, scope: !1356)
!1464 = !DILocation(line: 161, column: 23, scope: !1356)
!1465 = !DILocation(line: 164, column: 18, scope: !1358)
!1466 = !DILocation(line: 164, column: 29, scope: !1358)
!1467 = !DILocation(line: 164, column: 9, scope: !1360)
!1468 = !DILocation(line: 158, column: 20, scope: !1356)
!1469 = !DILocation(line: 0, scope: !1470)
!1470 = !DILexicalBlockFile(scope: !1356, file: !626, discriminator: 0)
!1471 = !DILocation(line: 164, column: 13, scope: !1360)
!1472 = !DILocation(line: 164, column: 13, scope: !1362)
!1473 = !DILocation(line: 165, column: 20, scope: !1362)
!1474 = !DILocation(line: 165, column: 13, scope: !1362)
!1475 = !DILocation(line: 170, column: 20, scope: !1358)
!1476 = !DILocation(line: 170, column: 13, scope: !1368)
!1477 = !DILocation(line: 171, column: 21, scope: !1368)
!1478 = !DILocation(line: 171, column: 13, scope: !1370)
!1479 = !DILocation(line: 172, column: 21, scope: !1370)
!1480 = !DILocation(line: 172, column: 13, scope: !1372)
!1481 = !DILocation(line: 174, column: 24, scope: !1374)
!1482 = !DILocation(line: 175, column: 24, scope: !1376)
!1483 = !DILocation(line: 176, column: 28, scope: !1378)
!1484 = !DILocation(line: 177, column: 28, scope: !1380)
!1485 = !DILocation(line: 179, column: 9, scope: !1382)
!1486 = !DILocation(line: 181, column: 36, scope: !1382)
!1487 = !DILocation(line: 182, column: 25, scope: !1384)
!1488 = !DILocation(line: 183, column: 32, scope: !1386)
!1489 = !DILocation(line: 184, column: 13, scope: !1388)
!1490 = !DILocation(line: 187, column: 17, scope: !1388)
!1491 = !DILocation(line: 188, column: 33, scope: !1388)
!1492 = !DILocation(line: 188, column: 50, scope: !1388)
!1493 = !DILocalVariable(name: "self", arg: 1, scope: !1494, file: !1495, line: 2191, type: !9)
!1494 = distinct !DISubprogram(name: "saturating_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_sub17h2d08798150a08418E", scope: !1496, file: !1495, line: 2191, type: !1497, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !1499)
!1495 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "5be88be11ad076a5d1229d10f045d3e0")
!1496 = !DINamespace(name: "{impl#11}", scope: !225)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!9, !9, !9}
!1499 = !{!1493, !1500}
!1500 = !DILocalVariable(name: "rhs", arg: 2, scope: !1494, file: !1495, line: 2191, type: !9)
!1501 = !DILocation(line: 2191, column: 37, scope: !1494, inlinedAt: !1502)
!1502 = distinct !DILocation(line: 188, column: 35, scope: !1388)
!1503 = !DILocation(line: 2191, column: 43, scope: !1494, inlinedAt: !1502)
!1504 = !DILocation(line: 2192, column: 13, scope: !1494, inlinedAt: !1502)
!1505 = !DILocation(line: 188, column: 29, scope: !1388)
!1506 = !DILocation(line: 188, column: 25, scope: !1388)
!1507 = !DILocation(line: 188, column: 21, scope: !1390)
!1508 = !DILocation(line: 190, column: 46, scope: !1390)
!1509 = !DILocation(line: 190, column: 31, scope: !1390)
!1510 = !DILocation(line: 190, column: 25, scope: !1390)
!1511 = !DILocation(line: 191, column: 30, scope: !1390)
!1512 = !DILocation(line: 193, column: 33, scope: !1390)
!1513 = !DILocation(line: 0, scope: !1514)
!1514 = !DILexicalBlockFile(scope: !1390, file: !626, discriminator: 0)
!1515 = !DILocation(line: 192, column: 30, scope: !1390)
!1516 = !DILocation(line: 191, column: 26, scope: !1390)
!1517 = !DILocation(line: 191, column: 26, scope: !1394)
!1518 = !DILocation(line: 191, column: 46, scope: !1394)
!1519 = !DILocation(line: 192, column: 26, scope: !1390)
!1520 = !DILocation(line: 192, column: 26, scope: !1396)
!1521 = !DILocation(line: 192, column: 51, scope: !1396)
!1522 = !DILocation(line: 192, column: 46, scope: !1396)
!1523 = !DILocation(line: 192, column: 60, scope: !1390)
!1524 = !DILocation(line: 195, column: 25, scope: !1392)
!1525 = !DILocation(line: 195, column: 21, scope: !1398)
!1526 = !DILocation(line: 196, column: 25, scope: !1398)
!1527 = !DILocation(line: 196, column: 57, scope: !1398)
!1528 = !DILocation(line: 196, column: 45, scope: !1398)
!1529 = !DILocation(line: 196, column: 60, scope: !1398)
!1530 = !DILocation(line: 196, column: 43, scope: !1398)
!1531 = !DILocation(line: 191, column: 53, scope: !1390)
!1532 = !DILocation(line: 196, column: 43, scope: !1400)
!1533 = !DILocation(line: 196, column: 43, scope: !1402)
!1534 = !DILocation(line: 196, column: 31, scope: !1398)
!1535 = !DILocation(line: 196, column: 72, scope: !1398)
!1536 = !DILocation(line: 196, column: 25, scope: !1404)
!1537 = !DILocation(line: 196, column: 25, scope: !1406)
!1538 = !DILocation(line: 196, column: 17, scope: !1398)
!1539 = !DILocation(line: 197, column: 20, scope: !1398)
!1540 = !DILocation(line: 200, column: 21, scope: !1398)
!1541 = !DILocation(line: 200, column: 35, scope: !1398)
!1542 = !DILocation(line: 204, column: 13, scope: !1388)
!1543 = !DILocation(line: 200, column: 23, scope: !1398)
!1544 = !DILocation(line: 200, column: 45, scope: !1398)
!1545 = !DILocation(line: 200, column: 21, scope: !1408)
!1546 = !DILocation(line: 200, column: 21, scope: !1410)
!1547 = !DILocation(line: 200, column: 17, scope: !1398)
!1548 = !DILocation(line: 237, column: 6, scope: !1316)
!1549 = !DILocation(line: 205, column: 17, scope: !1388)
!1550 = !DILocation(line: 205, column: 31, scope: !1388)
!1551 = !DILocation(line: 205, column: 19, scope: !1388)
!1552 = !DILocation(line: 205, column: 38, scope: !1388)
!1553 = !DILocation(line: 205, column: 17, scope: !1412)
!1554 = !DILocation(line: 205, column: 17, scope: !1414)
!1555 = !DILocation(line: 205, column: 13, scope: !1388)
!1556 = !DILocation(line: 206, column: 17, scope: !1388)
!1557 = !DILocation(line: 206, column: 31, scope: !1388)
!1558 = !DILocation(line: 206, column: 35, scope: !1388)
!1559 = !DILocation(line: 206, column: 19, scope: !1388)
!1560 = !DILocation(line: 206, column: 40, scope: !1388)
!1561 = !DILocation(line: 206, column: 17, scope: !1416)
!1562 = !DILocation(line: 206, column: 17, scope: !1418)
!1563 = !DILocation(line: 206, column: 13, scope: !1388)
!1564 = !DILocation(line: 207, column: 18, scope: !1388)
!1565 = !DILocation(line: 207, column: 13, scope: !1388)
!1566 = !DILocation(line: 209, column: 25, scope: !1388)
!1567 = !DILocation(line: 209, column: 17, scope: !1420)
!1568 = !DILocation(line: 210, column: 42, scope: !1420)
!1569 = !DILocation(line: 210, column: 24, scope: !1420)
!1570 = !DILocation(line: 213, column: 24, scope: !1420)
!1571 = !DILocation(line: 213, column: 17, scope: !1420)
!1572 = !DILocation(line: 211, column: 17, scope: !1420)
!1573 = !DILocation(line: 211, column: 39, scope: !1420)
!1574 = !DILocation(line: 211, column: 17, scope: !1424)
!1575 = !DILocation(line: 210, column: 17, scope: !1422)
!1576 = !DILocation(line: 211, column: 17, scope: !1426)
!1577 = !DILocation(line: 217, column: 20, scope: !1422)
!1578 = !DILocation(line: 217, column: 13, scope: !1422)
!1579 = !DILocation(line: 217, column: 13, scope: !1428)
!1580 = !DILocation(line: 218, column: 13, scope: !1422)
!1581 = !DILocation(line: 221, column: 31, scope: !1422)
!1582 = !DILocation(line: 221, column: 38, scope: !1422)
!1583 = !DILocation(line: 221, column: 16, scope: !1422)
!1584 = !DILocation(line: 226, column: 22, scope: !1422)
!1585 = !DILocation(line: 226, column: 13, scope: !1422)
!1586 = !DILocation(line: 222, column: 24, scope: !1422)
!1587 = !DILocation(line: 0, scope: !1588)
!1588 = !DILexicalBlockFile(scope: !1422, file: !626, discriminator: 0)
!1589 = !DILocation(line: 227, column: 13, scope: !1422)
!1590 = !DILocation(line: 229, column: 22, scope: !1422)
!1591 = !DILocation(line: 229, column: 30, scope: !1422)
!1592 = !DILocation(line: 229, column: 13, scope: !1422)
!1593 = !DILocation(line: 230, column: 25, scope: !1422)
!1594 = !DILocation(line: 231, column: 13, scope: !1432)
!1595 = !DILocation(line: 231, column: 19, scope: !1432)
!1596 = !DILocation(line: 231, column: 27, scope: !1432)
!1597 = !DILocation(line: 235, column: 20, scope: !1432)
!1598 = !DILocation(line: 235, column: 46, scope: !1432)
!1599 = !DILocation(line: 235, column: 24, scope: !1432)
!1600 = !DILocation(line: 232, column: 17, scope: !1432)
!1601 = !DILocation(line: 233, column: 17, scope: !1432)
!1602 = !DILocation(line: 235, column: 56, scope: !1432)
!1603 = !DILocation(line: 235, column: 55, scope: !1432)
!1604 = !DILocation(line: 235, column: 13, scope: !1432)
!1605 = !DILocation(line: 165, column: 13, scope: !1364)
!1606 = !DILocation(line: 166, column: 13, scope: !1362)
!1607 = !DILocation(line: 0, scope: !1608)
!1608 = !DILexicalBlockFile(scope: !1316, file: !626, discriminator: 0)
!1609 = distinct !DISubprogram(name: "try_small_punycode_decode<rustc_demangle::v0::{impl#2}::fmt::{closure_env#0}, core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v05Ident25try_small_punycode_decode17hbf78d80208464757E", scope: !1317, file: !751, line: 121, type: !1610, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1632, declaration: !1631, retainedNodes: !1635)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!1612, !1337, !1625}
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<(), core::fmt::Error>>", scope: !244, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1613, templateParams: !14, identifier: "9cdbe2360feafa3b4f0deac3442ed613")
!1613 = !{!1614}
!1614 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1612, file: !2, size: 8, align: 8, elements: !1615, templateParams: !14, identifier: "7752f93b055fed7b62e783c3cffbeb86", discriminator: !1624)
!1615 = !{!1616, !1620}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1614, file: !2, baseType: !1617, size: 8, align: 8, extraData: i8 2)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1612, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !1618, identifier: "e8478ec02f9c128980777dbe518eb3b4")
!1618 = !{!1619}
!1619 = !DITemplateTypeParameter(name: "T", type: !1079)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1614, file: !2, baseType: !1621, size: 8, align: 8)
!1621 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1612, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1622, templateParams: !1618, identifier: "b0532a5c7d601c5940d4a136be1774a6")
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1621, file: !2, baseType: !1079, size: 8, align: 8, flags: DIFlagPublic)
!1624 = !DIDerivedType(tag: DW_TAG_member, scope: !1612, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!1625 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1626, file: !2, size: 32, align: 32, elements: !1628, templateParams: !14, identifier: "6329a46d52fe435ccf7b4dc440e00dc6")
!1626 = !DINamespace(name: "fmt", scope: !1627)
!1627 = !DINamespace(name: "{impl#2}", scope: !83)
!1628 = !{!1629}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__f", scope: !1625, file: !2, baseType: !1630, size: 32, align: 32)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut core::fmt::Formatter", baseType: !50, size: 32, align: 32, dwarfAddressSpace: 0)
!1631 = !DISubprogram(name: "try_small_punycode_decode<rustc_demangle::v0::{impl#2}::fmt::{closure_env#0}, core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v05Ident25try_small_punycode_decode17hbf78d80208464757E", scope: !1317, file: !751, line: 121, type: !1610, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1632)
!1632 = !{!1633, !1634}
!1633 = !DITemplateTypeParameter(name: "F", type: !1625)
!1634 = !DITemplateTypeParameter(name: "R", type: !1079)
!1635 = !{!1636, !1637, !1638, !1640, !1642}
!1636 = !DILocalVariable(name: "self", arg: 1, scope: !1609, file: !751, line: 121, type: !1337)
!1637 = !DILocalVariable(name: "f", arg: 2, scope: !1609, file: !751, line: 121, type: !1625)
!1638 = !DILocalVariable(name: "out", scope: !1639, file: !751, line: 122, type: !1344, align: 32)
!1639 = distinct !DILexicalBlock(scope: !1609, file: !751, line: 122, column: 9)
!1640 = !DILocalVariable(name: "out_len", scope: !1641, file: !751, line: 123, type: !9, align: 32)
!1641 = distinct !DILexicalBlock(scope: !1639, file: !751, line: 123, column: 9)
!1642 = !DILocalVariable(name: "r", scope: !1643, file: !751, line: 124, type: !1323, align: 8)
!1643 = distinct !DILexicalBlock(scope: !1641, file: !751, line: 124, column: 9)
!1644 = !DILocation(line: 121, column: 62, scope: !1609)
!1645 = !DILocation(line: 121, column: 69, scope: !1609)
!1646 = !DILocation(line: 122, column: 13, scope: !1639)
!1647 = !DILocation(line: 123, column: 13, scope: !1641)
!1648 = !DILocation(line: 124, column: 13, scope: !1643)
!1649 = !DILocation(line: 122, column: 13, scope: !1609)
!1650 = !DILocation(line: 122, column: 23, scope: !1609)
!1651 = !DILocation(line: 123, column: 27, scope: !1639)
!1652 = !DILocation(line: 124, column: 22, scope: !1641)
!1653 = !DILocation(line: 142, column: 14, scope: !1643)
!1654 = !DILocation(line: 142, column: 12, scope: !1643)
!1655 = !DILocation(line: 145, column: 13, scope: !1643)
!1656 = !DILocation(line: 142, column: 9, scope: !1643)
!1657 = !DILocation(line: 143, column: 18, scope: !1643)
!1658 = !DILocation(line: 143, column: 27, scope: !1643)
!1659 = !DILocation(line: 143, column: 24, scope: !1643)
!1660 = !DILocation(line: 143, column: 13, scope: !1643)
!1661 = !DILocation(line: 147, column: 5, scope: !1609)
!1662 = !DILocation(line: 147, column: 6, scope: !1609)
!1663 = distinct !DISubprogram(name: "{closure#0}<rustc_demangle::v0::{impl#2}::fmt::{closure_env#0}, core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v05Ident25try_small_punycode_decode28_$u7b$$u7b$closure$u7d$$u7d$17ha0cb616fadb1ad53E", scope: !1339, file: !751, line: 124, type: !1664, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1632, retainedNodes: !1667)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!1323, !1666, !9, !252}
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::{impl#1}::try_small_punycode_decode::{closure_env#0}<rustc_demangle::v0::{impl#2}::fmt::{closure_env#0}, core::result::Result<(), core::fmt::Error>>", baseType: !1338, size: 32, align: 32, dwarfAddressSpace: 0)
!1667 = !{!1668, !1669, !1670, !1671, !1672, !1674, !1677}
!1668 = !DILocalVariable(name: "i", arg: 2, scope: !1663, file: !751, line: 124, type: !9)
!1669 = !DILocalVariable(name: "c", arg: 3, scope: !1663, file: !751, line: 124, type: !252)
!1670 = !DILocalVariable(name: "out", scope: !1663, file: !751, line: 122, type: !1344, align: 32)
!1671 = !DILocalVariable(name: "out_len", scope: !1663, file: !751, line: 123, type: !9, align: 32)
!1672 = !DILocalVariable(name: "residual", scope: !1673, file: !751, line: 126, type: !991, align: 8)
!1673 = distinct !DILexicalBlock(scope: !1663, file: !751, line: 126, column: 39)
!1674 = !DILocalVariable(name: "val", scope: !1675, file: !751, line: 126, type: !1676, align: 32)
!1675 = distinct !DILexicalBlock(scope: !1663, file: !751, line: 126, column: 13)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&char", baseType: !252, size: 32, align: 32, dwarfAddressSpace: 0)
!1677 = !DILocalVariable(name: "j", scope: !1678, file: !751, line: 129, type: !9, align: 32)
!1678 = distinct !DILexicalBlock(scope: !1663, file: !751, line: 129, column: 13)
!1679 = !DILocation(line: 122, column: 17, scope: !1663)
!1680 = !DILocation(line: 123, column: 17, scope: !1663)
!1681 = !DILocation(line: 124, column: 39, scope: !1663)
!1682 = !DILocation(line: 124, column: 42, scope: !1663)
!1683 = !DILocation(line: 129, column: 17, scope: !1678)
!1684 = !DILocation(line: 126, column: 39, scope: !1673)
!1685 = !DILocation(line: 126, column: 13, scope: !1663)
!1686 = !DILocation(line: 126, column: 21, scope: !1663)
!1687 = !DILocation(line: 126, column: 17, scope: !1663)
!1688 = !DILocation(line: 126, column: 30, scope: !1663)
!1689 = !DILocation(line: 126, column: 13, scope: !1673)
!1690 = !DILocation(line: 126, column: 13, scope: !1675)
!1691 = !DILocation(line: 129, column: 25, scope: !1663)
!1692 = !DILocation(line: 130, column: 13, scope: !1678)
!1693 = !DILocation(line: 132, column: 13, scope: !1678)
!1694 = !DILocation(line: 132, column: 19, scope: !1678)
!1695 = !DILocation(line: 138, column: 13, scope: !1678)
!1696 = !DILocation(line: 133, column: 30, scope: !1678)
!1697 = !DILocation(line: 140, column: 13, scope: !1678)
!1698 = !DILocation(line: 141, column: 10, scope: !1663)
!1699 = !DILocation(line: 133, column: 26, scope: !1678)
!1700 = !DILocation(line: 133, column: 21, scope: !1678)
!1701 = !DILocation(line: 133, column: 17, scope: !1678)
!1702 = !DILocation(line: 134, column: 17, scope: !1678)
!1703 = distinct !DISubprogram(name: "integer_62", linkageName: "_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE", scope: !1704, file: !751, line: 471, type: !1709, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1727, retainedNodes: !1728)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "Parser", scope: !83, file: !2, size: 128, align: 32, flags: DIFlagPrivate, elements: !1705, templateParams: !14, identifier: "86b2436f6ca52483d17346dce944de0")
!1705 = !{!1706, !1707, !1708}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "sym", scope: !1704, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPrivate)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1704, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1704, file: !2, baseType: !48, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!1711, !1726}
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u64, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1712, templateParams: !14, identifier: "596bca7a1ad4f849d31004bde4a83d70")
!1712 = !{!1713}
!1713 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1711, file: !2, size: 128, align: 64, elements: !1714, templateParams: !14, identifier: "fd84fe4aa43980204d97f26b47d022bb", discriminator: !1725)
!1714 = !{!1715, !1721}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1713, file: !2, baseType: !1716, size: 128, align: 64, extraData: i8 0)
!1716 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1711, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1717, templateParams: !1719, identifier: "7f67eb281a106a23c49ba2fae331a8a2")
!1717 = !{!1718}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1716, file: !2, baseType: !765, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!1719 = !{!764, !1720}
!1720 = !DITemplateTypeParameter(name: "E", type: !87)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1713, file: !2, baseType: !1722, size: 128, align: 64, extraData: i8 1)
!1722 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1711, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !1723, templateParams: !1719, identifier: "a6c54c8c769ed761e46538365ec2c2dc")
!1723 = !{!1724}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1722, file: !2, baseType: !87, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!1725 = !DIDerivedType(tag: DW_TAG_member, scope: !1711, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::Parser", baseType: !1704, size: 32, align: 32, dwarfAddressSpace: 0)
!1727 = !DISubprogram(name: "integer_62", linkageName: "_ZN14rustc_demangle2v06Parser10integer_6217h993af9003852714eE", scope: !1704, file: !751, line: 471, type: !1709, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1728 = !{!1729, !1730, !1732, !1734, !1749, !1751, !1753, !1755, !1757}
!1729 = !DILocalVariable(name: "self", arg: 1, scope: !1703, file: !751, line: 471, type: !1726)
!1730 = !DILocalVariable(name: "x", scope: !1731, file: !751, line: 476, type: !765, align: 64)
!1731 = distinct !DILexicalBlock(scope: !1703, file: !751, line: 476, column: 9)
!1732 = !DILocalVariable(name: "d", scope: !1733, file: !751, line: 478, type: !765, align: 64)
!1733 = distinct !DILexicalBlock(scope: !1731, file: !751, line: 478, column: 13)
!1734 = !DILocalVariable(name: "residual", scope: !1735, file: !751, line: 478, type: !1736, align: 8)
!1735 = distinct !DILexicalBlock(scope: !1731, file: !751, line: 478, column: 36)
!1736 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1737, templateParams: !14, identifier: "a263bdf4f667f12cd7c9145577327a36")
!1737 = !{!1738}
!1738 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1736, file: !2, size: 8, align: 8, elements: !1739, templateParams: !14, identifier: "2bfab197681e23d1850c0a70309c934e")
!1739 = !{!1740, !1745}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1738, file: !2, baseType: !1741, size: 8, align: 8)
!1741 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1736, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1742, templateParams: !1744, identifier: "b9ac06f39e28ab8c44245cd9924ac61d")
!1742 = !{!1743}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1741, file: !2, baseType: !999, align: 8, flags: DIFlagPublic)
!1744 = !{!1004, !1720}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1738, file: !2, baseType: !1746, size: 8, align: 8)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1736, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1747, templateParams: !1744, identifier: "91a633cadd6fe7c23a6204c97980fc6f")
!1747 = !{!1748}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1746, file: !2, baseType: !87, size: 8, align: 8, flags: DIFlagPublic)
!1749 = !DILocalVariable(name: "val", scope: !1750, file: !751, line: 478, type: !13, align: 8)
!1750 = distinct !DILexicalBlock(scope: !1731, file: !751, line: 478, column: 21)
!1751 = !DILocalVariable(name: "residual", scope: !1752, file: !751, line: 479, type: !1736, align: 8)
!1752 = distinct !DILexicalBlock(scope: !1733, file: !751, line: 479, column: 61)
!1753 = !DILocalVariable(name: "val", scope: !1754, file: !751, line: 479, type: !765, align: 64)
!1754 = distinct !DILexicalBlock(scope: !1733, file: !751, line: 479, column: 17)
!1755 = !DILocalVariable(name: "residual", scope: !1756, file: !751, line: 480, type: !1736, align: 8)
!1756 = distinct !DILexicalBlock(scope: !1733, file: !751, line: 480, column: 60)
!1757 = !DILocalVariable(name: "val", scope: !1758, file: !751, line: 480, type: !765, align: 64)
!1758 = distinct !DILexicalBlock(scope: !1733, file: !751, line: 480, column: 17)
!1759 = !DILocation(line: 471, column: 19, scope: !1703)
!1760 = !DILocation(line: 476, column: 13, scope: !1731)
!1761 = !DILocation(line: 472, column: 17, scope: !1703)
!1762 = !DILocation(line: 472, column: 12, scope: !1703)
!1763 = !DILocation(line: 476, column: 26, scope: !1703)
!1764 = !DILocation(line: 477, column: 9, scope: !1731)
!1765 = !DILocation(line: 473, column: 20, scope: !1703)
!1766 = !DILocation(line: 0, scope: !1767)
!1767 = !DILexicalBlockFile(scope: !1703, file: !626, discriminator: 0)
!1768 = !DILocation(line: 477, column: 21, scope: !1731)
!1769 = !DILocation(line: 477, column: 16, scope: !1731)
!1770 = !DILocation(line: 478, column: 26, scope: !1731)
!1771 = !DILocation(line: 478, column: 21, scope: !1731)
!1772 = !DILocation(line: 482, column: 9, scope: !1731)
!1773 = !DILocation(line: 482, column: 11, scope: !1731)
!1774 = !DILocation(line: 482, column: 26, scope: !1731)
!1775 = !DILocation(line: 478, column: 36, scope: !1731)
!1776 = !DILocation(line: 478, column: 36, scope: !1735)
!1777 = !DILocation(line: 478, column: 21, scope: !1735)
!1778 = !DILocation(line: 478, column: 21, scope: !1750)
!1779 = !DILocation(line: 478, column: 17, scope: !1733)
!1780 = !DILocation(line: 479, column: 17, scope: !1733)
!1781 = !DILocation(line: 479, column: 19, scope: !1733)
!1782 = !DILocation(line: 479, column: 35, scope: !1733)
!1783 = !DILocation(line: 479, column: 61, scope: !1733)
!1784 = !DILocation(line: 479, column: 61, scope: !1752)
!1785 = !DILocation(line: 479, column: 17, scope: !1752)
!1786 = !DILocation(line: 479, column: 17, scope: !1754)
!1787 = !DILocation(line: 479, column: 13, scope: !1733)
!1788 = !DILocation(line: 480, column: 17, scope: !1733)
!1789 = !DILocation(line: 480, column: 19, scope: !1733)
!1790 = !DILocation(line: 480, column: 34, scope: !1733)
!1791 = !DILocation(line: 480, column: 60, scope: !1733)
!1792 = !DILocation(line: 480, column: 60, scope: !1756)
!1793 = !DILocation(line: 480, column: 17, scope: !1756)
!1794 = !DILocation(line: 480, column: 17, scope: !1758)
!1795 = !DILocation(line: 480, column: 13, scope: !1733)
!1796 = !DILocation(line: 483, column: 6, scope: !1703)
!1797 = distinct !DISubprogram(name: "push_depth", linkageName: "_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE", scope: !1704, file: !751, line: 405, type: !1798, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1814, retainedNodes: !1815)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!1800, !1726}
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1801, templateParams: !14, identifier: "742a1a206f62f0445a67fc325aa9021f")
!1801 = !{!1802}
!1802 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1800, file: !2, size: 8, align: 8, elements: !1803, templateParams: !14, identifier: "3d3d846de9fb8bef76ba36af9478569a", discriminator: !1813)
!1803 = !{!1804, !1809}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1802, file: !2, baseType: !1805, size: 8, align: 8, extraData: i8 2)
!1805 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1800, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1806, templateParams: !1808, identifier: "1c4a137ffe9141f6f25a396b100d7fc2")
!1806 = !{!1807}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1805, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!1808 = !{!1074, !1720}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1802, file: !2, baseType: !1810, size: 8, align: 8)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1800, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1811, templateParams: !1808, identifier: "2b6ef206f9a545fd92751b86468268f0")
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1810, file: !2, baseType: !87, size: 8, align: 8, flags: DIFlagPublic)
!1813 = !DIDerivedType(tag: DW_TAG_member, scope: !1800, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!1814 = !DISubprogram(name: "push_depth", linkageName: "_ZN14rustc_demangle2v06Parser10push_depth17h59a5a93a919f45afE", scope: !1704, file: !751, line: 405, type: !1798, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1815 = !{!1816}
!1816 = !DILocalVariable(name: "self", arg: 1, scope: !1797, file: !751, line: 405, type: !1726)
!1817 = !DILocation(line: 405, column: 19, scope: !1797)
!1818 = !DILocation(line: 406, column: 9, scope: !1797)
!1819 = !DILocation(line: 407, column: 12, scope: !1797)
!1820 = !DILocation(line: 410, column: 13, scope: !1797)
!1821 = !DILocation(line: 407, column: 9, scope: !1797)
!1822 = !DILocation(line: 408, column: 13, scope: !1797)
!1823 = !DILocation(line: 412, column: 6, scope: !1797)
!1824 = distinct !DISubprogram(name: "hex_nibbles", linkageName: "_ZN14rustc_demangle2v06Parser11hex_nibbles17h2dcdab77a1a24703E", scope: !1704, file: !751, line: 437, type: !1825, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1842, retainedNodes: !1843)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!1827, !1726}
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<rustc_demangle::v0::HexNibbles, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1828, templateParams: !14, identifier: "3c97695ead82c221526511a71104fbc")
!1828 = !{!1829}
!1829 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1827, file: !2, size: 64, align: 32, elements: !1830, templateParams: !14, identifier: "5bb25932cf08f70e57aa5b6f632dfe29", discriminator: !1841)
!1830 = !{!1831, !1837}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1829, file: !2, baseType: !1832, size: 64, align: 32)
!1832 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1827, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1833, templateParams: !1835, identifier: "5630ee80335c1933bb994ea32f79fba")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1832, file: !2, baseType: !752, size: 64, align: 32, flags: DIFlagPublic)
!1835 = !{!1836, !1720}
!1836 = !DITemplateTypeParameter(name: "T", type: !752)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1829, file: !2, baseType: !1838, size: 64, align: 32, extraData: i32 0)
!1838 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1827, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1839, templateParams: !1835, identifier: "26b29ee82e03decbba30e30a7ec0f8e6")
!1839 = !{!1840}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1838, file: !2, baseType: !87, size: 8, align: 8, offset: 32, flags: DIFlagPublic)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1827, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!1842 = !DISubprogram(name: "hex_nibbles", linkageName: "_ZN14rustc_demangle2v06Parser11hex_nibbles17h2dcdab77a1a24703E", scope: !1704, file: !751, line: 437, type: !1825, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1843 = !{!1844, !1845, !1847, !1849}
!1844 = !DILocalVariable(name: "self", arg: 1, scope: !1824, file: !751, line: 437, type: !1726)
!1845 = !DILocalVariable(name: "start", scope: !1846, file: !751, line: 438, type: !9, align: 32)
!1846 = distinct !DILexicalBlock(scope: !1824, file: !751, line: 438, column: 9)
!1847 = !DILocalVariable(name: "residual", scope: !1848, file: !751, line: 440, type: !1736, align: 8)
!1848 = distinct !DILexicalBlock(scope: !1846, file: !751, line: 440, column: 30)
!1849 = !DILocalVariable(name: "val", scope: !1850, file: !751, line: 440, type: !13, align: 8)
!1850 = distinct !DILexicalBlock(scope: !1846, file: !751, line: 440, column: 19)
!1851 = !DILocation(line: 437, column: 20, scope: !1824)
!1852 = !DILocation(line: 438, column: 21, scope: !1824)
!1853 = !DILocation(line: 438, column: 13, scope: !1846)
!1854 = !DILocation(line: 439, column: 9, scope: !1846)
!1855 = !DILocation(line: 440, column: 24, scope: !1846)
!1856 = !DILocation(line: 440, column: 19, scope: !1846)
!1857 = !DILocation(line: 440, column: 30, scope: !1846)
!1858 = !DILocation(line: 440, column: 30, scope: !1848)
!1859 = !DILocation(line: 440, column: 19, scope: !1848)
!1860 = !DILocation(line: 440, column: 19, scope: !1850)
!1861 = !DILocation(line: 441, column: 17, scope: !1846)
!1862 = !DILocation(line: 441, column: 31, scope: !1846)
!1863 = !DILocation(line: 440, column: 13, scope: !1846)
!1864 = !DILocation(line: 447, column: 23, scope: !1846)
!1865 = !DILocation(line: 447, column: 39, scope: !1846)
!1866 = !DILocation(line: 443, column: 29, scope: !1846)
!1867 = !DILocation(line: 443, column: 22, scope: !1846)
!1868 = !DILocation(line: 447, column: 31, scope: !1846)
!1869 = !DILocation(line: 446, column: 9, scope: !1846)
!1870 = !DILocation(line: 449, column: 6, scope: !1824)
!1871 = distinct !DISubprogram(name: "disambiguator", linkageName: "_ZN14rustc_demangle2v06Parser13disambiguator17hb8f2bd207c519d1dE", scope: !1704, file: !751, line: 492, type: !1709, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1872, retainedNodes: !1873)
!1872 = !DISubprogram(name: "disambiguator", linkageName: "_ZN14rustc_demangle2v06Parser13disambiguator17hb8f2bd207c519d1dE", scope: !1704, file: !751, line: 492, type: !1709, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1873 = !{!1874}
!1874 = !DILocalVariable(name: "self", arg: 1, scope: !1871, file: !751, line: 492, type: !1726)
!1875 = !DILocation(line: 492, column: 22, scope: !1871)
!1876 = !DILocation(line: 493, column: 14, scope: !1871)
!1877 = !DILocation(line: 494, column: 6, scope: !1871)
!1878 = distinct !DISubprogram(name: "opt_integer_62", linkageName: "_ZN14rustc_demangle2v06Parser14opt_integer_6217hc782639caf15959dE", scope: !1704, file: !751, line: 485, type: !1879, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1881, retainedNodes: !1882)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!1711, !1726, !13}
!1881 = !DISubprogram(name: "opt_integer_62", linkageName: "_ZN14rustc_demangle2v06Parser14opt_integer_6217hc782639caf15959dE", scope: !1704, file: !751, line: 485, type: !1879, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1882 = !{!1883, !1884, !1885, !1887}
!1883 = !DILocalVariable(name: "self", arg: 1, scope: !1878, file: !751, line: 485, type: !1726)
!1884 = !DILocalVariable(name: "tag", arg: 2, scope: !1878, file: !751, line: 485, type: !13)
!1885 = !DILocalVariable(name: "residual", scope: !1886, file: !751, line: 489, type: !1736, align: 8)
!1886 = distinct !DILexicalBlock(scope: !1878, file: !751, line: 489, column: 26)
!1887 = !DILocalVariable(name: "val", scope: !1888, file: !751, line: 489, type: !765, align: 64)
!1888 = distinct !DILexicalBlock(scope: !1878, file: !751, line: 489, column: 9)
!1889 = !DILocation(line: 485, column: 23, scope: !1878)
!1890 = !DILocation(line: 485, column: 34, scope: !1878)
!1891 = !DILocation(line: 486, column: 18, scope: !1878)
!1892 = !DILocation(line: 486, column: 13, scope: !1878)
!1893 = !DILocation(line: 487, column: 20, scope: !1878)
!1894 = !DILocation(line: 0, scope: !1895)
!1895 = !DILexicalBlockFile(scope: !1878, file: !626, discriminator: 0)
!1896 = !DILocation(line: 489, column: 14, scope: !1878)
!1897 = !DILocation(line: 489, column: 9, scope: !1878)
!1898 = !DILocation(line: 490, column: 6, scope: !1878)
!1899 = !DILocation(line: 489, column: 26, scope: !1878)
!1900 = !DILocation(line: 489, column: 26, scope: !1886)
!1901 = !DILocation(line: 489, column: 9, scope: !1886)
!1902 = !DILocation(line: 489, column: 9, scope: !1888)
!1903 = !DILocation(line: 489, column: 28, scope: !1878)
!1904 = !DILocation(line: 489, column: 43, scope: !1878)
!1905 = distinct !DISubprogram(name: "eat", linkageName: "_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E", scope: !1704, file: !751, line: 422, type: !1906, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1908, retainedNodes: !1909)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!706, !1726, !13}
!1908 = !DISubprogram(name: "eat", linkageName: "_ZN14rustc_demangle2v06Parser3eat17h99622afbaec29a89E", scope: !1704, file: !751, line: 422, type: !1906, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1909 = !{!1910, !1911}
!1910 = !DILocalVariable(name: "self", arg: 1, scope: !1905, file: !751, line: 422, type: !1726)
!1911 = !DILocalVariable(name: "b", arg: 2, scope: !1905, file: !751, line: 422, type: !13)
!1912 = !DILocation(line: 422, column: 12, scope: !1905)
!1913 = !DILocation(line: 422, column: 23, scope: !1905)
!1914 = !DILocation(line: 423, column: 17, scope: !1905)
!1915 = !DILocation(line: 423, column: 27, scope: !1905)
!1916 = !DILocation(line: 423, column: 12, scope: !1905)
!1917 = !DILocation(line: 427, column: 13, scope: !1905)
!1918 = !DILocation(line: 423, column: 9, scope: !1905)
!1919 = !DILocation(line: 424, column: 13, scope: !1905)
!1920 = !DILocation(line: 429, column: 6, scope: !1905)
!1921 = !DILocation(line: 425, column: 13, scope: !1905)
!1922 = distinct !DISubprogram(name: "next", linkageName: "_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E", scope: !1704, file: !751, line: 431, type: !1923, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1939, retainedNodes: !1940)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!1925, !1726}
!1925 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u8, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !1926, templateParams: !14, identifier: "cd180e23ffcf811e78e8e62e07791bb")
!1926 = !{!1927}
!1927 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1925, file: !2, size: 16, align: 8, elements: !1928, templateParams: !14, identifier: "71f27982aef2a3eebdc78e518cbaf7b7", discriminator: !1938)
!1928 = !{!1929, !1934}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1927, file: !2, baseType: !1930, size: 16, align: 8, extraData: i8 0)
!1930 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1925, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !1931, templateParams: !1933, identifier: "e249066fd17d6a33740237c7c3806279")
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1930, file: !2, baseType: !13, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!1933 = !{!289, !1720}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1927, file: !2, baseType: !1935, size: 16, align: 8, extraData: i8 1)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1925, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !1936, templateParams: !1933, identifier: "ca656969f450ed386e2f441221bdd03c")
!1936 = !{!1937}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1935, file: !2, baseType: !87, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!1938 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!1939 = !DISubprogram(name: "next", linkageName: "_ZN14rustc_demangle2v06Parser4next17h78255b1c667c8762E", scope: !1704, file: !751, line: 431, type: !1923, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1940 = !{!1941, !1942, !1944, !1946}
!1941 = !DILocalVariable(name: "self", arg: 1, scope: !1922, file: !751, line: 431, type: !1726)
!1942 = !DILocalVariable(name: "b", scope: !1943, file: !751, line: 432, type: !13, align: 8)
!1943 = distinct !DILexicalBlock(scope: !1922, file: !751, line: 432, column: 9)
!1944 = !DILocalVariable(name: "residual", scope: !1945, file: !751, line: 432, type: !1736, align: 8)
!1945 = distinct !DILexicalBlock(scope: !1922, file: !751, line: 432, column: 55)
!1946 = !DILocalVariable(name: "val", scope: !1947, file: !751, line: 432, type: !13, align: 8)
!1947 = distinct !DILexicalBlock(scope: !1922, file: !751, line: 432, column: 17)
!1948 = !DILocation(line: 431, column: 13, scope: !1922)
!1949 = !DILocation(line: 432, column: 22, scope: !1922)
!1950 = !DILocation(line: 432, column: 29, scope: !1922)
!1951 = !DILocation(line: 432, column: 17, scope: !1922)
!1952 = !DILocation(line: 432, column: 55, scope: !1922)
!1953 = !DILocation(line: 432, column: 55, scope: !1945)
!1954 = !DILocation(line: 432, column: 17, scope: !1945)
!1955 = !DILocation(line: 432, column: 13, scope: !1943)
!1956 = !DILocation(line: 432, column: 17, scope: !1947)
!1957 = !DILocation(line: 433, column: 9, scope: !1943)
!1958 = !DILocation(line: 434, column: 9, scope: !1943)
!1959 = !DILocation(line: 435, column: 6, scope: !1922)
!1960 = distinct !DISubprogram(name: "peek", linkageName: "_ZN14rustc_demangle2v06Parser4peek17h3a50a27221fc9b1eE", scope: !1704, file: !751, line: 418, type: !1961, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1964, retainedNodes: !1965)
!1961 = !DISubroutineType(types: !1962)
!1962 = !{!365, !1963}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::Parser", baseType: !1704, size: 32, align: 32, dwarfAddressSpace: 0)
!1964 = !DISubprogram(name: "peek", linkageName: "_ZN14rustc_demangle2v06Parser4peek17h3a50a27221fc9b1eE", scope: !1704, file: !751, line: 418, type: !1961, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1965 = !{!1966}
!1966 = !DILocalVariable(name: "self", arg: 1, scope: !1960, file: !751, line: 418, type: !1963)
!1967 = !DILocation(line: 418, column: 13, scope: !1960)
!1968 = !DILocation(line: 419, column: 9, scope: !1960)
!1969 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !1970)
!1970 = distinct !DILocation(line: 419, column: 18, scope: !1960)
!1971 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !1970)
!1972 = !DILocation(line: 419, column: 18, scope: !1960)
!1973 = !DILocation(line: 419, column: 33, scope: !1960)
!1974 = !DILocation(line: 419, column: 29, scope: !1960)
!1975 = !DILocation(line: 419, column: 44, scope: !1960)
!1976 = !DILocation(line: 420, column: 6, scope: !1960)
!1977 = distinct !DISubprogram(name: "ident", linkageName: "_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E", scope: !1704, file: !751, line: 523, type: !1978, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !1995, retainedNodes: !1996)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!1980, !1726}
!1980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<rustc_demangle::v0::Ident, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !1981, templateParams: !14, identifier: "787da6719f45e408796b421453187d26")
!1981 = !{!1982}
!1982 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1980, file: !2, size: 128, align: 32, elements: !1983, templateParams: !14, identifier: "67ea23e52080e27aa4ad75f4abdf1714", discriminator: !1994)
!1983 = !{!1984, !1990}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1982, file: !2, baseType: !1985, size: 128, align: 32)
!1985 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1980, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !1986, templateParams: !1988, identifier: "c4ee6bbc82173ba88cc3979970c7cbd")
!1986 = !{!1987}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1985, file: !2, baseType: !1317, size: 128, align: 32, flags: DIFlagPublic)
!1988 = !{!1989, !1720}
!1989 = !DITemplateTypeParameter(name: "T", type: !1317)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1982, file: !2, baseType: !1991, size: 128, align: 32, extraData: i32 0)
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1980, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !1992, templateParams: !1988, identifier: "3c52250a6870630e65345db54e8507ef")
!1992 = !{!1993}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1991, file: !2, baseType: !87, size: 8, align: 8, offset: 32, flags: DIFlagPublic)
!1994 = !DIDerivedType(tag: DW_TAG_member, scope: !1980, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!1995 = !DISubprogram(name: "ident", linkageName: "_ZN14rustc_demangle2v06Parser5ident17h9d15230d5348b0b1E", scope: !1704, file: !751, line: 523, type: !1978, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!1996 = !{!1997, !1998, !2000, !2002, !2004, !2006, !2008, !2010, !2012, !2014, !2016, !2018, !2020, !2022, !2024, !2026}
!1997 = !DILocalVariable(name: "self", arg: 1, scope: !1977, file: !751, line: 523, type: !1726)
!1998 = !DILocalVariable(name: "is_punycode", scope: !1999, file: !751, line: 524, type: !706, align: 8)
!1999 = distinct !DILexicalBlock(scope: !1977, file: !751, line: 524, column: 9)
!2000 = !DILocalVariable(name: "len", scope: !2001, file: !751, line: 525, type: !9, align: 32)
!2001 = distinct !DILexicalBlock(scope: !1999, file: !751, line: 525, column: 9)
!2002 = !DILocalVariable(name: "residual", scope: !2003, file: !751, line: 525, type: !1736, align: 8)
!2003 = distinct !DILexicalBlock(scope: !1999, file: !751, line: 525, column: 38)
!2004 = !DILocalVariable(name: "val", scope: !2005, file: !751, line: 525, type: !13, align: 8)
!2005 = distinct !DILexicalBlock(scope: !1999, file: !751, line: 525, column: 23)
!2006 = !DILocalVariable(name: "d", scope: !2007, file: !751, line: 527, type: !13, align: 8)
!2007 = distinct !DILexicalBlock(scope: !2001, file: !751, line: 527, column: 47)
!2008 = !DILocalVariable(name: "residual", scope: !2009, file: !751, line: 528, type: !1736, align: 8)
!2009 = distinct !DILexicalBlock(scope: !2007, file: !751, line: 528, column: 69)
!2010 = !DILocalVariable(name: "val", scope: !2011, file: !751, line: 528, type: !9, align: 32)
!2011 = distinct !DILexicalBlock(scope: !2007, file: !751, line: 528, column: 23)
!2012 = !DILocalVariable(name: "residual", scope: !2013, file: !751, line: 529, type: !1736, align: 8)
!2013 = distinct !DILexicalBlock(scope: !2007, file: !751, line: 529, column: 77)
!2014 = !DILocalVariable(name: "val", scope: !2015, file: !751, line: 529, type: !9, align: 32)
!2015 = distinct !DILexicalBlock(scope: !2007, file: !751, line: 529, column: 23)
!2016 = !DILocalVariable(name: "start", scope: !2017, file: !751, line: 536, type: !9, align: 32)
!2017 = distinct !DILexicalBlock(scope: !2001, file: !751, line: 536, column: 9)
!2018 = !DILocalVariable(name: "residual", scope: !2019, file: !751, line: 537, type: !1736, align: 8)
!2019 = distinct !DILexicalBlock(scope: !2017, file: !751, line: 537, column: 74)
!2020 = !DILocalVariable(name: "val", scope: !2021, file: !751, line: 537, type: !9, align: 32)
!2021 = distinct !DILexicalBlock(scope: !2017, file: !751, line: 537, column: 21)
!2022 = !DILocalVariable(name: "ident", scope: !2023, file: !751, line: 542, type: !659, align: 32)
!2023 = distinct !DILexicalBlock(scope: !2017, file: !751, line: 542, column: 9)
!2024 = !DILocalVariable(name: "ident", scope: !2025, file: !751, line: 545, type: !1317, align: 32)
!2025 = distinct !DILexicalBlock(scope: !2023, file: !751, line: 545, column: 13)
!2026 = !DILocalVariable(name: "i", scope: !2027, file: !751, line: 546, type: !9, align: 32)
!2027 = distinct !DILexicalBlock(scope: !2023, file: !751, line: 546, column: 17)
!2028 = !DILocation(line: 523, column: 14, scope: !1977)
!2029 = !DILocation(line: 525, column: 13, scope: !2001)
!2030 = !DILocation(line: 545, column: 17, scope: !2025)
!2031 = !DILocation(line: 524, column: 32, scope: !1977)
!2032 = !DILocation(line: 524, column: 13, scope: !1999)
!2033 = !DILocation(line: 525, column: 28, scope: !1999)
!2034 = !DILocation(line: 525, column: 23, scope: !1999)
!2035 = !DILocation(line: 525, column: 38, scope: !1999)
!2036 = !DILocation(line: 525, column: 38, scope: !2003)
!2037 = !DILocation(line: 525, column: 23, scope: !2003)
!2038 = !DILocation(line: 525, column: 23, scope: !2005)
!2039 = !DILocation(line: 526, column: 12, scope: !2001)
!2040 = !DILocation(line: 534, column: 14, scope: !2001)
!2041 = !DILocation(line: 536, column: 21, scope: !2001)
!2042 = !DILocation(line: 536, column: 13, scope: !2017)
!2043 = !DILocation(line: 537, column: 21, scope: !2017)
!2044 = !DILocation(line: 537, column: 43, scope: !2017)
!2045 = !DILocation(line: 537, column: 31, scope: !2017)
!2046 = !DILocation(line: 537, column: 48, scope: !2017)
!2047 = !DILocation(line: 527, column: 36, scope: !2007)
!2048 = !DILocation(line: 527, column: 31, scope: !2007)
!2049 = !DILocation(line: 527, column: 23, scope: !2007)
!2050 = !DILocation(line: 527, column: 26, scope: !2007)
!2051 = !DILocation(line: 528, column: 23, scope: !2007)
!2052 = !DILocation(line: 528, column: 27, scope: !2007)
!2053 = !DILocation(line: 528, column: 43, scope: !2007)
!2054 = !DILocation(line: 528, column: 69, scope: !2007)
!2055 = !DILocation(line: 528, column: 69, scope: !2009)
!2056 = !DILocation(line: 528, column: 23, scope: !2009)
!2057 = !DILocation(line: 528, column: 23, scope: !2011)
!2058 = !DILocation(line: 528, column: 17, scope: !2007)
!2059 = !DILocation(line: 529, column: 23, scope: !2007)
!2060 = !DILocation(line: 529, column: 39, scope: !2007)
!2061 = !DILocation(line: 529, column: 27, scope: !2007)
!2062 = !DILocation(line: 529, column: 51, scope: !2007)
!2063 = !DILocation(line: 529, column: 77, scope: !2007)
!2064 = !DILocation(line: 529, column: 77, scope: !2013)
!2065 = !DILocation(line: 529, column: 23, scope: !2013)
!2066 = !DILocation(line: 529, column: 23, scope: !2015)
!2067 = !DILocation(line: 529, column: 17, scope: !2007)
!2068 = !DILocation(line: 527, column: 13, scope: !2001)
!2069 = !DILocation(line: 565, column: 6, scope: !1977)
!2070 = !DILocation(line: 537, column: 74, scope: !2017)
!2071 = !DILocation(line: 537, column: 74, scope: !2019)
!2072 = !DILocation(line: 537, column: 21, scope: !2019)
!2073 = !DILocation(line: 537, column: 21, scope: !2021)
!2074 = !DILocation(line: 537, column: 9, scope: !2017)
!2075 = !DILocation(line: 538, column: 12, scope: !2017)
!2076 = !DILocation(line: 538, column: 24, scope: !2017)
!2077 = !DILocation(line: 538, column: 33, scope: !2017)
!2078 = !DILocation(line: 542, column: 22, scope: !2017)
!2079 = !DILocation(line: 542, column: 38, scope: !2017)
!2080 = !DILocation(line: 542, column: 30, scope: !2017)
!2081 = !DILocation(line: 542, column: 13, scope: !2023)
!2082 = !DILocation(line: 544, column: 12, scope: !2023)
!2083 = !DILocation(line: 539, column: 20, scope: !2017)
!2084 = !DILocation(line: 0, scope: !2085)
!2085 = !DILexicalBlockFile(scope: !2017, file: !626, discriminator: 0)
!2086 = !DILocation(line: 560, column: 16, scope: !2023)
!2087 = !DILocation(line: 560, column: 13, scope: !2023)
!2088 = !DILocation(line: 544, column: 9, scope: !2023)
!2089 = !DILocation(line: 545, column: 37, scope: !2023)
!2090 = !DILocation(line: 545, column: 45, scope: !2023)
!2091 = !DILocation(line: 545, column: 31, scope: !2023)
!2092 = !DILocation(line: 545, column: 25, scope: !2023)
!2093 = !DILocation(line: 546, column: 22, scope: !2023)
!2094 = !DILocation(line: 546, column: 22, scope: !2027)
!2095 = !DILocation(line: 547, column: 34, scope: !2027)
!2096 = !DILocation(line: 548, column: 38, scope: !2027)
!2097 = !DILocation(line: 550, column: 25, scope: !2023)
!2098 = !DILocation(line: 553, column: 17, scope: !2023)
!2099 = !DILocation(line: 555, column: 16, scope: !2025)
!2100 = !DILocation(line: 555, column: 31, scope: !2025)
!2101 = !DILocation(line: 548, column: 37, scope: !2027)
!2102 = !DILocation(line: 546, column: 28, scope: !2027)
!2103 = !DILocation(line: 549, column: 17, scope: !2023)
!2104 = !DILocation(line: 558, column: 16, scope: !2025)
!2105 = !DILocation(line: 558, column: 13, scope: !2025)
!2106 = !DILocation(line: 556, column: 24, scope: !2025)
!2107 = !DILocation(line: 0, scope: !2108)
!2108 = !DILexicalBlockFile(scope: !1977, file: !626, discriminator: 0)
!2109 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v06Parser5ident28_$u7b$$u7b$closure$u7d$$u7d$17h8359baebc66a01c7E", scope: !610, file: !751, line: 545, type: !2110, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !2113)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!706, !2112, !13}
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::{impl#4}::ident::{closure_env#0}", baseType: !609, size: 32, align: 32, dwarfAddressSpace: 0)
!2113 = !{!2114, !2115}
!2114 = !DILocalVariable(name: "b", arg: 2, scope: !2109, file: !751, line: 545, type: !13)
!2115 = !DILocalVariable(arg: 1, scope: !2109, file: !751, line: 545, type: !2112)
!2116 = !DILocation(line: 545, column: 55, scope: !2109)
!2117 = !DILocation(line: 545, column: 56, scope: !2109)
!2118 = !DILocation(line: 545, column: 59, scope: !2109)
!2119 = !DILocation(line: 545, column: 68, scope: !2109)
!2120 = distinct !DISubprogram(name: "backref", linkageName: "_ZN14rustc_demangle2v06Parser7backref17h9112f87c50388295E", scope: !1704, file: !751, line: 508, type: !2121, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !2138, retainedNodes: !2139)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{!2123, !1726}
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !2124, templateParams: !14, identifier: "e2343a8587780c2540a4bc33c7ce552a")
!2124 = !{!2125}
!2125 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2123, file: !2, size: 128, align: 32, elements: !2126, templateParams: !14, identifier: "c56b9cfd0065b54dfcf6c2abb7f31d9", discriminator: !2137)
!2126 = !{!2127, !2133}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2125, file: !2, baseType: !2128, size: 128, align: 32)
!2128 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2123, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !2129, templateParams: !2131, identifier: "a96ea7cd2cbbfd01a37cd9873c9895fc")
!2129 = !{!2130}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2128, file: !2, baseType: !1704, size: 128, align: 32, flags: DIFlagPublic)
!2131 = !{!2132, !1720}
!2132 = !DITemplateTypeParameter(name: "T", type: !1704)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2125, file: !2, baseType: !2134, size: 128, align: 32, extraData: i32 0)
!2134 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2123, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !2135, templateParams: !2131, identifier: "da53f1793559f2b4071ec87a060e032")
!2135 = !{!2136}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2134, file: !2, baseType: !87, size: 8, align: 8, offset: 32, flags: DIFlagPublic)
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !2123, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!2138 = !DISubprogram(name: "backref", linkageName: "_ZN14rustc_demangle2v06Parser7backref17h9112f87c50388295E", scope: !1704, file: !751, line: 508, type: !2121, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!2139 = !{!2140, !2141, !2143, !2145, !2147, !2149, !2151, !2153}
!2140 = !DILocalVariable(name: "self", arg: 1, scope: !2120, file: !751, line: 508, type: !1726)
!2141 = !DILocalVariable(name: "s_start", scope: !2142, file: !751, line: 509, type: !9, align: 32)
!2142 = distinct !DILexicalBlock(scope: !2120, file: !751, line: 509, column: 9)
!2143 = !DILocalVariable(name: "i", scope: !2144, file: !751, line: 510, type: !765, align: 64)
!2144 = distinct !DILexicalBlock(scope: !2142, file: !751, line: 510, column: 9)
!2145 = !DILocalVariable(name: "residual", scope: !2146, file: !751, line: 510, type: !1736, align: 8)
!2146 = distinct !DILexicalBlock(scope: !2142, file: !751, line: 510, column: 34)
!2147 = !DILocalVariable(name: "val", scope: !2148, file: !751, line: 510, type: !765, align: 64)
!2148 = distinct !DILexicalBlock(scope: !2142, file: !751, line: 510, column: 17)
!2149 = !DILocalVariable(name: "new_parser", scope: !2150, file: !751, line: 514, type: !1704, align: 32)
!2150 = distinct !DILexicalBlock(scope: !2144, file: !751, line: 514, column: 9)
!2151 = !DILocalVariable(name: "residual", scope: !2152, file: !751, line: 519, type: !1736, align: 8)
!2152 = distinct !DILexicalBlock(scope: !2150, file: !751, line: 519, column: 32)
!2153 = !DILocalVariable(name: "val", scope: !2154, file: !751, line: 519, type: !7, align: 8)
!2154 = distinct !DILexicalBlock(scope: !2150, file: !751, line: 519, column: 9)
!2155 = !DILocation(line: 508, column: 16, scope: !2120)
!2156 = !DILocation(line: 514, column: 13, scope: !2150)
!2157 = !DILocation(line: 519, column: 9, scope: !2154)
!2158 = !DILocation(line: 509, column: 23, scope: !2120)
!2159 = !DILocation(line: 509, column: 13, scope: !2142)
!2160 = !DILocation(line: 510, column: 22, scope: !2142)
!2161 = !DILocation(line: 510, column: 17, scope: !2142)
!2162 = !DILocation(line: 510, column: 34, scope: !2142)
!2163 = !DILocation(line: 510, column: 34, scope: !2146)
!2164 = !DILocation(line: 510, column: 17, scope: !2146)
!2165 = !DILocation(line: 510, column: 13, scope: !2144)
!2166 = !DILocation(line: 510, column: 17, scope: !2148)
!2167 = !DILocation(line: 511, column: 17, scope: !2144)
!2168 = !DILocation(line: 511, column: 12, scope: !2144)
!2169 = !DILocation(line: 515, column: 18, scope: !2144)
!2170 = !DILocation(line: 516, column: 19, scope: !2144)
!2171 = !DILocation(line: 517, column: 20, scope: !2144)
!2172 = !DILocation(line: 514, column: 30, scope: !2144)
!2173 = !DILocation(line: 519, column: 20, scope: !2150)
!2174 = !DILocation(line: 519, column: 9, scope: !2150)
!2175 = !DILocation(line: 512, column: 20, scope: !2144)
!2176 = !DILocation(line: 0, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !2144, file: !626, discriminator: 0)
!2178 = !DILocation(line: 519, column: 32, scope: !2150)
!2179 = !DILocation(line: 519, column: 32, scope: !2152)
!2180 = !DILocation(line: 519, column: 9, scope: !2152)
!2181 = !DILocation(line: 520, column: 12, scope: !2150)
!2182 = !DILocation(line: 520, column: 9, scope: !2150)
!2183 = !DILocation(line: 521, column: 6, scope: !2120)
!2184 = !DILocation(line: 0, scope: !2185)
!2185 = !DILexicalBlockFile(scope: !2120, file: !626, discriminator: 0)
!2186 = distinct !DISubprogram(name: "digit_10", linkageName: "_ZN14rustc_demangle2v06Parser8digit_1017h4b0363688e4a0269E", scope: !1704, file: !751, line: 451, type: !1923, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !2187, retainedNodes: !2188)
!2187 = !DISubprogram(name: "digit_10", linkageName: "_ZN14rustc_demangle2v06Parser8digit_1017h4b0363688e4a0269E", scope: !1704, file: !751, line: 451, type: !1923, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!2188 = !{!2189, !2190, !2192}
!2189 = !DILocalVariable(name: "self", arg: 1, scope: !2186, file: !751, line: 451, type: !1726)
!2190 = !DILocalVariable(name: "d", scope: !2191, file: !751, line: 452, type: !13, align: 8)
!2191 = distinct !DILexicalBlock(scope: !2186, file: !751, line: 452, column: 9)
!2192 = !DILocalVariable(name: "d", scope: !2193, file: !751, line: 453, type: !13, align: 8)
!2193 = distinct !DILexicalBlock(scope: !2186, file: !751, line: 453, column: 13)
!2194 = !DILocation(line: 451, column: 17, scope: !2186)
!2195 = !DILocation(line: 452, column: 28, scope: !2186)
!2196 = !DILocation(line: 452, column: 23, scope: !2186)
!2197 = !DILocation(line: 452, column: 17, scope: !2186)
!2198 = !DILocation(line: 453, column: 22, scope: !2186)
!2199 = !DILocation(line: 454, column: 25, scope: !2186)
!2200 = !DILocation(line: 458, column: 6, scope: !2186)
!2201 = !DILocation(line: 453, column: 18, scope: !2186)
!2202 = !DILocation(line: 453, column: 18, scope: !2193)
!2203 = !DILocation(line: 453, column: 38, scope: !2193)
!2204 = !DILocation(line: 452, column: 13, scope: !2191)
!2205 = !DILocation(line: 456, column: 9, scope: !2191)
!2206 = !DILocation(line: 457, column: 9, scope: !2191)
!2207 = !DILocation(line: 451, column: 5, scope: !2186)
!2208 = distinct !DISubprogram(name: "digit_62", linkageName: "_ZN14rustc_demangle2v06Parser8digit_6217hab58233d9a93a2f5E", scope: !1704, file: !751, line: 460, type: !1923, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !2209, retainedNodes: !2210)
!2209 = !DISubprogram(name: "digit_62", linkageName: "_ZN14rustc_demangle2v06Parser8digit_6217hab58233d9a93a2f5E", scope: !1704, file: !751, line: 460, type: !1923, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!2210 = !{!2211, !2212, !2214, !2216, !2218}
!2211 = !DILocalVariable(name: "self", arg: 1, scope: !2208, file: !751, line: 460, type: !1726)
!2212 = !DILocalVariable(name: "d", scope: !2213, file: !751, line: 461, type: !13, align: 8)
!2213 = distinct !DILexicalBlock(scope: !2208, file: !751, line: 461, column: 9)
!2214 = !DILocalVariable(name: "d", scope: !2215, file: !751, line: 462, type: !13, align: 8)
!2215 = distinct !DILexicalBlock(scope: !2208, file: !751, line: 462, column: 13)
!2216 = !DILocalVariable(name: "d", scope: !2217, file: !751, line: 463, type: !13, align: 8)
!2217 = distinct !DILexicalBlock(scope: !2208, file: !751, line: 463, column: 13)
!2218 = !DILocalVariable(name: "d", scope: !2219, file: !751, line: 464, type: !13, align: 8)
!2219 = distinct !DILexicalBlock(scope: !2208, file: !751, line: 464, column: 13)
!2220 = !DILocation(line: 460, column: 17, scope: !2208)
!2221 = !DILocation(line: 461, column: 13, scope: !2213)
!2222 = !DILocation(line: 461, column: 28, scope: !2208)
!2223 = !DILocation(line: 461, column: 23, scope: !2208)
!2224 = !DILocation(line: 461, column: 17, scope: !2208)
!2225 = !DILocation(line: 462, column: 22, scope: !2208)
!2226 = !DILocation(line: 465, column: 25, scope: !2208)
!2227 = !DILocation(line: 469, column: 6, scope: !2208)
!2228 = !DILocation(line: 463, column: 22, scope: !2208)
!2229 = !DILocation(line: 462, column: 18, scope: !2208)
!2230 = !DILocation(line: 462, column: 18, scope: !2215)
!2231 = !DILocation(line: 462, column: 38, scope: !2215)
!2232 = !DILocation(line: 464, column: 22, scope: !2208)
!2233 = !DILocation(line: 463, column: 18, scope: !2208)
!2234 = !DILocation(line: 463, column: 18, scope: !2217)
!2235 = !DILocation(line: 463, column: 43, scope: !2217)
!2236 = !DILocation(line: 464, column: 18, scope: !2208)
!2237 = !DILocation(line: 464, column: 18, scope: !2219)
!2238 = !DILocation(line: 464, column: 48, scope: !2219)
!2239 = !DILocation(line: 464, column: 38, scope: !2219)
!2240 = !DILocation(line: 464, column: 57, scope: !2208)
!2241 = !DILocation(line: 467, column: 9, scope: !2213)
!2242 = !DILocation(line: 463, column: 38, scope: !2217)
!2243 = !DILocation(line: 463, column: 52, scope: !2208)
!2244 = !DILocation(line: 462, column: 45, scope: !2208)
!2245 = !DILocation(line: 468, column: 12, scope: !2213)
!2246 = !DILocation(line: 468, column: 9, scope: !2213)
!2247 = !DILocation(line: 460, column: 5, scope: !2208)
!2248 = distinct !DISubprogram(name: "namespace", linkageName: "_ZN14rustc_demangle2v06Parser9namespace17ha9e17375c4f7a2edE", scope: !1704, file: !751, line: 496, type: !2249, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !2266, retainedNodes: !2267)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!2251, !1726}
!2251 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::option::Option<char>, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2252, templateParams: !14, identifier: "7ae8859ef04961c695de097d7bb4ba7e")
!2252 = !{!2253}
!2253 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2251, file: !2, size: 64, align: 32, elements: !2254, templateParams: !14, identifier: "a643645779a050fe44820a9a4e3f6a03", discriminator: !2265)
!2254 = !{!2255, !2261}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2253, file: !2, baseType: !2256, size: 64, align: 32, extraData: i8 0)
!2256 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2251, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2257, templateParams: !2259, identifier: "c48fc0bc188e5ce6f1f531fa0cced64d")
!2257 = !{!2258}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2256, file: !2, baseType: !243, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!2259 = !{!2260, !1720}
!2260 = !DITemplateTypeParameter(name: "T", type: !243)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2253, file: !2, baseType: !2262, size: 64, align: 32, extraData: i8 1)
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2251, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2263, templateParams: !2259, identifier: "4c03a9e7a90be5f9a71a6902447b1095")
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2262, file: !2, baseType: !87, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!2265 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!2266 = !DISubprogram(name: "namespace", linkageName: "_ZN14rustc_demangle2v06Parser9namespace17ha9e17375c4f7a2edE", scope: !1704, file: !751, line: 496, type: !2249, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!2267 = !{!2268, !2269, !2271, !2273}
!2268 = !DILocalVariable(name: "self", arg: 1, scope: !2248, file: !751, line: 496, type: !1726)
!2269 = !DILocalVariable(name: "residual", scope: !2270, file: !751, line: 497, type: !1736, align: 8)
!2270 = distinct !DILexicalBlock(scope: !2248, file: !751, line: 497, column: 26)
!2271 = !DILocalVariable(name: "val", scope: !2272, file: !751, line: 497, type: !13, align: 8)
!2272 = distinct !DILexicalBlock(scope: !2248, file: !751, line: 497, column: 15)
!2273 = !DILocalVariable(name: "ns", scope: !2274, file: !751, line: 499, type: !13, align: 8)
!2274 = distinct !DILexicalBlock(scope: !2248, file: !751, line: 499, column: 13)
!2275 = !DILocation(line: 496, column: 18, scope: !2248)
!2276 = !DILocation(line: 497, column: 20, scope: !2248)
!2277 = !DILocation(line: 497, column: 15, scope: !2248)
!2278 = !DILocation(line: 497, column: 26, scope: !2248)
!2279 = !DILocation(line: 497, column: 26, scope: !2270)
!2280 = !DILocation(line: 497, column: 15, scope: !2270)
!2281 = !DILocation(line: 497, column: 15, scope: !2272)
!2282 = !DILocation(line: 499, column: 13, scope: !2274)
!2283 = !DILocation(line: 499, column: 18, scope: !2248)
!2284 = !DILocation(line: 502, column: 13, scope: !2248)
!2285 = !DILocation(line: 499, column: 41, scope: !2274)
!2286 = !DILocation(line: 499, column: 33, scope: !2274)
!2287 = !DILocation(line: 499, column: 52, scope: !2248)
!2288 = !DILocation(line: 504, column: 18, scope: !2248)
!2289 = !DILocation(line: 504, column: 41, scope: !2248)
!2290 = !DILocation(line: 502, column: 28, scope: !2248)
!2291 = !DILocation(line: 502, column: 35, scope: !2248)
!2292 = !DILocation(line: 506, column: 6, scope: !2248)
!2293 = distinct !DISubprogram(name: "pop_depth", linkageName: "_ZN14rustc_demangle2v06Parser9pop_depth17h8a2b94e2ef028f8dE", scope: !1704, file: !751, line: 414, type: !2294, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !2296, retainedNodes: !2297)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !1726}
!2296 = !DISubprogram(name: "pop_depth", linkageName: "_ZN14rustc_demangle2v06Parser9pop_depth17h8a2b94e2ef028f8dE", scope: !1704, file: !751, line: 414, type: !2294, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!2297 = !{!2298}
!2298 = !DILocalVariable(name: "self", arg: 1, scope: !2293, file: !751, line: 414, type: !1726)
!2299 = !DILocation(line: 414, column: 18, scope: !2293)
!2300 = !DILocation(line: 415, column: 9, scope: !2293)
!2301 = !DILocation(line: 416, column: 6, scope: !2293)
!2302 = distinct !DISubprogram(name: "print_path", linkageName: "_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E", scope: !2303, file: !751, line: 795, type: !2321, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !2324, retainedNodes: !2325)
!2303 = !DICompositeType(tag: DW_TAG_structure_type, name: "Printer", scope: !83, file: !2, size: 192, align: 32, flags: DIFlagPrivate, elements: !2304, templateParams: !14, identifier: "fedc23c2825a55ef3f0b885e4f5ab69")
!2304 = !{!2305, !2306, !2320}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "parser", scope: !2303, file: !2, baseType: !2123, size: 128, align: 32, flags: DIFlagPrivate)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2303, file: !2, baseType: !2307, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!2307 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut core::fmt::Formatter>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2308, templateParams: !14, identifier: "62df658f721989f434c1fb4b878e00a0")
!2308 = !{!2309}
!2309 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2307, file: !2, size: 32, align: 32, elements: !2310, templateParams: !14, identifier: "e5539af93e4b41fdd042057e2dd2ec87", discriminator: !2319)
!2310 = !{!2311, !2315}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2309, file: !2, baseType: !2312, size: 32, align: 32, extraData: i32 0)
!2312 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2307, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !2313, identifier: "2b4536eaf4b6f379eec9fc35b24a5f78")
!2313 = !{!2314}
!2314 = !DITemplateTypeParameter(name: "T", type: !50)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2309, file: !2, baseType: !2316, size: 32, align: 32)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2307, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2317, templateParams: !2313, identifier: "e50a2050487aa3b671b4d80ee4125299")
!2317 = !{!2318}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2316, file: !2, baseType: !50, size: 32, align: 32, flags: DIFlagPublic)
!2319 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "bound_lifetime_depth", scope: !2303, file: !2, baseType: !48, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!1079, !2323, !706}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::Printer", baseType: !2303, size: 32, align: 32, dwarfAddressSpace: 0)
!2324 = !DISubprogram(name: "print_path", linkageName: "_ZN14rustc_demangle2v07Printer10print_path17h470ebc0241534789E", scope: !2303, file: !751, line: 795, type: !2321, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!2325 = !{!2326, !2327, !2328, !2330, !2332, !2334, !2349, !2351, !2353, !2355, !2357, !2359, !2361, !2363, !2365, !2367, !2369, !2371, !2373, !2375, !2377, !2379, !2381, !2383, !2385, !2387, !2389, !2391, !2393, !2395, !2397, !2399, !2401, !2403, !2405, !2407, !2409, !2411, !2413, !2415, !2417, !2419, !2421, !2423, !2425, !2427, !2429, !2431, !2433, !2435, !2437, !2439, !2441, !2443, !2445, !2447, !2449, !2451, !2453, !2455, !2457, !2459, !2461, !2463, !2465, !2467, !2469, !2471, !2473, !2475, !2477, !2479, !2481, !2483, !2485, !2487, !2489, !2491, !2493, !2495, !2497, !2499, !2501, !2503, !2505, !2507, !2509, !2511, !2513, !2515, !2517, !2519, !2521, !2523, !2525, !2527, !2529, !2531, !2533, !2535, !2537, !2539, !2541, !2543, !2545, !2547, !2549, !2551, !2553}
!2326 = !DILocalVariable(name: "self", arg: 1, scope: !2302, file: !751, line: 795, type: !2323)
!2327 = !DILocalVariable(name: "in_value", arg: 2, scope: !2302, file: !751, line: 795, type: !706)
!2328 = !DILocalVariable(name: "parser", scope: !2329, file: !751, line: 619, type: !1726, align: 32)
!2329 = distinct !DILexicalBlock(scope: !2302, file: !751, line: 619, column: 13)
!2330 = !DILocalVariable(name: "x", scope: !2331, file: !751, line: 620, type: !7, align: 8)
!2331 = distinct !DILexicalBlock(scope: !2329, file: !751, line: 620, column: 17)
!2332 = !DILocalVariable(name: "err", scope: !2333, file: !751, line: 621, type: !87, align: 8)
!2333 = distinct !DILexicalBlock(scope: !2329, file: !751, line: 621, column: 17)
!2334 = !DILocalVariable(name: "residual", scope: !2335, file: !751, line: 622, type: !2336, align: 8)
!2335 = distinct !DILexicalBlock(scope: !2333, file: !751, line: 622, column: 50)
!2336 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::fmt::Error>", scope: !30, file: !2, align: 8, flags: DIFlagPublic, elements: !2337, templateParams: !14, identifier: "5896b5b00a3a746f65fcbfc91a17bd96")
!2337 = !{!2338}
!2338 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2336, file: !2, align: 8, elements: !2339, templateParams: !14, identifier: "afebf2a40c1a304b8b74cfde7e7294e9")
!2339 = !{!2340, !2345}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2338, file: !2, baseType: !2341, align: 8)
!2341 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2336, file: !2, align: 8, flags: DIFlagPublic, elements: !2342, templateParams: !2344, identifier: "baf8385ab2a4a5981bf4a13c8bf5ccc4")
!2342 = !{!2343}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2341, file: !2, baseType: !999, align: 8, flags: DIFlagPublic)
!2344 = !{!1004, !1088}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2338, file: !2, baseType: !2346, align: 8)
!2346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2336, file: !2, align: 8, flags: DIFlagPublic, elements: !2347, templateParams: !2344, identifier: "9caa33db57153cab1df75edd0352b22d")
!2347 = !{!2348}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2346, file: !2, baseType: !1089, align: 8, flags: DIFlagPublic)
!2349 = !DILocalVariable(name: "val", scope: !2350, file: !751, line: 622, type: !7, align: 8)
!2350 = distinct !DILexicalBlock(scope: !2333, file: !751, line: 622, column: 21)
!2351 = !DILocalVariable(name: "tag", scope: !2352, file: !751, line: 798, type: !13, align: 8)
!2352 = distinct !DILexicalBlock(scope: !2302, file: !751, line: 798, column: 9)
!2353 = !DILocalVariable(name: "parser", scope: !2354, file: !751, line: 619, type: !1726, align: 32)
!2354 = distinct !DILexicalBlock(scope: !2302, file: !751, line: 619, column: 13)
!2355 = !DILocalVariable(name: "x", scope: !2356, file: !751, line: 620, type: !13, align: 8)
!2356 = distinct !DILexicalBlock(scope: !2354, file: !751, line: 620, column: 17)
!2357 = !DILocalVariable(name: "err", scope: !2358, file: !751, line: 621, type: !87, align: 8)
!2358 = distinct !DILexicalBlock(scope: !2354, file: !751, line: 621, column: 17)
!2359 = !DILocalVariable(name: "residual", scope: !2360, file: !751, line: 622, type: !2336, align: 8)
!2360 = distinct !DILexicalBlock(scope: !2358, file: !751, line: 622, column: 50)
!2361 = !DILocalVariable(name: "val", scope: !2362, file: !751, line: 622, type: !7, align: 8)
!2362 = distinct !DILexicalBlock(scope: !2358, file: !751, line: 622, column: 21)
!2363 = !DILocalVariable(name: "dis", scope: !2364, file: !751, line: 801, type: !765, align: 64)
!2364 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 801, column: 17)
!2365 = !DILocalVariable(name: "parser", scope: !2366, file: !751, line: 619, type: !1726, align: 32)
!2366 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 619, column: 13)
!2367 = !DILocalVariable(name: "x", scope: !2368, file: !751, line: 620, type: !765, align: 64)
!2368 = distinct !DILexicalBlock(scope: !2366, file: !751, line: 620, column: 17)
!2369 = !DILocalVariable(name: "err", scope: !2370, file: !751, line: 621, type: !87, align: 8)
!2370 = distinct !DILexicalBlock(scope: !2366, file: !751, line: 621, column: 17)
!2371 = !DILocalVariable(name: "residual", scope: !2372, file: !751, line: 622, type: !2336, align: 8)
!2372 = distinct !DILexicalBlock(scope: !2370, file: !751, line: 622, column: 50)
!2373 = !DILocalVariable(name: "val", scope: !2374, file: !751, line: 622, type: !7, align: 8)
!2374 = distinct !DILexicalBlock(scope: !2370, file: !751, line: 622, column: 21)
!2375 = !DILocalVariable(name: "name", scope: !2376, file: !751, line: 802, type: !1317, align: 32)
!2376 = distinct !DILexicalBlock(scope: !2364, file: !751, line: 802, column: 17)
!2377 = !DILocalVariable(name: "parser", scope: !2378, file: !751, line: 619, type: !1726, align: 32)
!2378 = distinct !DILexicalBlock(scope: !2364, file: !751, line: 619, column: 13)
!2379 = !DILocalVariable(name: "x", scope: !2380, file: !751, line: 620, type: !1317, align: 32)
!2380 = distinct !DILexicalBlock(scope: !2378, file: !751, line: 620, column: 17)
!2381 = !DILocalVariable(name: "err", scope: !2382, file: !751, line: 621, type: !87, align: 8)
!2382 = distinct !DILexicalBlock(scope: !2378, file: !751, line: 621, column: 17)
!2383 = !DILocalVariable(name: "residual", scope: !2384, file: !751, line: 622, type: !2336, align: 8)
!2384 = distinct !DILexicalBlock(scope: !2382, file: !751, line: 622, column: 50)
!2385 = !DILocalVariable(name: "val", scope: !2386, file: !751, line: 622, type: !7, align: 8)
!2386 = distinct !DILexicalBlock(scope: !2382, file: !751, line: 622, column: 21)
!2387 = !DILocalVariable(name: "residual", scope: !2388, file: !751, line: 804, type: !2336, align: 8)
!2388 = distinct !DILexicalBlock(scope: !2376, file: !751, line: 804, column: 33)
!2389 = !DILocalVariable(name: "val", scope: !2390, file: !751, line: 804, type: !7, align: 8)
!2390 = distinct !DILexicalBlock(scope: !2376, file: !751, line: 804, column: 17)
!2391 = !DILocalVariable(name: "out", scope: !2392, file: !751, line: 805, type: !1630, align: 32)
!2392 = distinct !DILexicalBlock(scope: !2376, file: !751, line: 805, column: 50)
!2393 = !DILocalVariable(name: "residual", scope: !2394, file: !751, line: 807, type: !2336, align: 8)
!2394 = distinct !DILexicalBlock(scope: !2392, file: !751, line: 807, column: 43)
!2395 = !DILocalVariable(name: "val", scope: !2396, file: !751, line: 807, type: !7, align: 8)
!2396 = distinct !DILexicalBlock(scope: !2392, file: !751, line: 807, column: 25)
!2397 = !DILocalVariable(name: "residual", scope: !2398, file: !751, line: 808, type: !2336, align: 8)
!2398 = distinct !DILexicalBlock(scope: !2392, file: !751, line: 808, column: 54)
!2399 = !DILocalVariable(name: "val", scope: !2400, file: !751, line: 808, type: !7, align: 8)
!2400 = distinct !DILexicalBlock(scope: !2392, file: !751, line: 808, column: 25)
!2401 = !DILocalVariable(name: "residual", scope: !2402, file: !751, line: 809, type: !2336, align: 8)
!2402 = distinct !DILexicalBlock(scope: !2392, file: !751, line: 809, column: 43)
!2403 = !DILocalVariable(name: "val", scope: !2404, file: !751, line: 809, type: !7, align: 8)
!2404 = distinct !DILexicalBlock(scope: !2392, file: !751, line: 809, column: 25)
!2405 = !DILocalVariable(name: "ns", scope: !2406, file: !751, line: 814, type: !243, align: 32)
!2406 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 814, column: 17)
!2407 = !DILocalVariable(name: "parser", scope: !2408, file: !751, line: 619, type: !1726, align: 32)
!2408 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 619, column: 13)
!2409 = !DILocalVariable(name: "x", scope: !2410, file: !751, line: 620, type: !243, align: 32)
!2410 = distinct !DILexicalBlock(scope: !2408, file: !751, line: 620, column: 17)
!2411 = !DILocalVariable(name: "err", scope: !2412, file: !751, line: 621, type: !87, align: 8)
!2412 = distinct !DILexicalBlock(scope: !2408, file: !751, line: 621, column: 17)
!2413 = !DILocalVariable(name: "residual", scope: !2414, file: !751, line: 622, type: !2336, align: 8)
!2414 = distinct !DILexicalBlock(scope: !2412, file: !751, line: 622, column: 50)
!2415 = !DILocalVariable(name: "val", scope: !2416, file: !751, line: 622, type: !7, align: 8)
!2416 = distinct !DILexicalBlock(scope: !2412, file: !751, line: 622, column: 21)
!2417 = !DILocalVariable(name: "residual", scope: !2418, file: !751, line: 816, type: !2336, align: 8)
!2418 = distinct !DILexicalBlock(scope: !2406, file: !751, line: 816, column: 42)
!2419 = !DILocalVariable(name: "val", scope: !2420, file: !751, line: 816, type: !7, align: 8)
!2420 = distinct !DILexicalBlock(scope: !2406, file: !751, line: 816, column: 17)
!2421 = !DILocalVariable(name: "residual", scope: !2422, file: !751, line: 824, type: !2336, align: 8)
!2422 = distinct !DILexicalBlock(scope: !2406, file: !751, line: 824, column: 37)
!2423 = !DILocalVariable(name: "val", scope: !2424, file: !751, line: 824, type: !7, align: 8)
!2424 = distinct !DILexicalBlock(scope: !2406, file: !751, line: 824, column: 21)
!2425 = !DILocalVariable(name: "dis", scope: !2426, file: !751, line: 827, type: !765, align: 64)
!2426 = distinct !DILexicalBlock(scope: !2406, file: !751, line: 827, column: 17)
!2427 = !DILocalVariable(name: "parser", scope: !2428, file: !751, line: 619, type: !1726, align: 32)
!2428 = distinct !DILexicalBlock(scope: !2406, file: !751, line: 619, column: 13)
!2429 = !DILocalVariable(name: "x", scope: !2430, file: !751, line: 620, type: !765, align: 64)
!2430 = distinct !DILexicalBlock(scope: !2428, file: !751, line: 620, column: 17)
!2431 = !DILocalVariable(name: "err", scope: !2432, file: !751, line: 621, type: !87, align: 8)
!2432 = distinct !DILexicalBlock(scope: !2428, file: !751, line: 621, column: 17)
!2433 = !DILocalVariable(name: "residual", scope: !2434, file: !751, line: 622, type: !2336, align: 8)
!2434 = distinct !DILexicalBlock(scope: !2432, file: !751, line: 622, column: 50)
!2435 = !DILocalVariable(name: "val", scope: !2436, file: !751, line: 622, type: !7, align: 8)
!2436 = distinct !DILexicalBlock(scope: !2432, file: !751, line: 622, column: 21)
!2437 = !DILocalVariable(name: "name", scope: !2438, file: !751, line: 828, type: !1317, align: 32)
!2438 = distinct !DILexicalBlock(scope: !2426, file: !751, line: 828, column: 17)
!2439 = !DILocalVariable(name: "parser", scope: !2440, file: !751, line: 619, type: !1726, align: 32)
!2440 = distinct !DILexicalBlock(scope: !2426, file: !751, line: 619, column: 13)
!2441 = !DILocalVariable(name: "x", scope: !2442, file: !751, line: 620, type: !1317, align: 32)
!2442 = distinct !DILexicalBlock(scope: !2440, file: !751, line: 620, column: 17)
!2443 = !DILocalVariable(name: "err", scope: !2444, file: !751, line: 621, type: !87, align: 8)
!2444 = distinct !DILexicalBlock(scope: !2440, file: !751, line: 621, column: 17)
!2445 = !DILocalVariable(name: "residual", scope: !2446, file: !751, line: 622, type: !2336, align: 8)
!2446 = distinct !DILexicalBlock(scope: !2444, file: !751, line: 622, column: 50)
!2447 = !DILocalVariable(name: "val", scope: !2448, file: !751, line: 622, type: !7, align: 8)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !751, line: 622, column: 21)
!2449 = !DILocalVariable(name: "ns", scope: !2450, file: !751, line: 832, type: !252, align: 32)
!2450 = distinct !DILexicalBlock(scope: !2438, file: !751, line: 832, column: 21)
!2451 = !DILocalVariable(name: "residual", scope: !2452, file: !751, line: 833, type: !2336, align: 8)
!2452 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 833, column: 42)
!2453 = !DILocalVariable(name: "val", scope: !2454, file: !751, line: 833, type: !7, align: 8)
!2454 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 833, column: 25)
!2455 = !DILocalVariable(name: "residual", scope: !2456, file: !751, line: 835, type: !2336, align: 8)
!2456 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 835, column: 57)
!2457 = !DILocalVariable(name: "val", scope: !2458, file: !751, line: 835, type: !7, align: 8)
!2458 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 835, column: 36)
!2459 = !DILocalVariable(name: "residual", scope: !2460, file: !751, line: 836, type: !2336, align: 8)
!2460 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 836, column: 54)
!2461 = !DILocalVariable(name: "val", scope: !2462, file: !751, line: 836, type: !7, align: 8)
!2462 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 836, column: 36)
!2463 = !DILocalVariable(name: "residual", scope: !2464, file: !751, line: 837, type: !2336, align: 8)
!2464 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 837, column: 48)
!2465 = !DILocalVariable(name: "val", scope: !2466, file: !751, line: 837, type: !7, align: 8)
!2466 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 837, column: 34)
!2467 = !DILocalVariable(name: "residual", scope: !2468, file: !751, line: 840, type: !2336, align: 8)
!2468 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 840, column: 44)
!2469 = !DILocalVariable(name: "val", scope: !2470, file: !751, line: 840, type: !7, align: 8)
!2470 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 840, column: 29)
!2471 = !DILocalVariable(name: "residual", scope: !2472, file: !751, line: 841, type: !2336, align: 8)
!2472 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 841, column: 45)
!2473 = !DILocalVariable(name: "val", scope: !2474, file: !751, line: 841, type: !7, align: 8)
!2474 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 841, column: 29)
!2475 = !DILocalVariable(name: "residual", scope: !2476, file: !751, line: 843, type: !2336, align: 8)
!2476 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 843, column: 40)
!2477 = !DILocalVariable(name: "val", scope: !2478, file: !751, line: 843, type: !7, align: 8)
!2478 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 843, column: 25)
!2479 = !DILocalVariable(name: "residual", scope: !2480, file: !751, line: 844, type: !2336, align: 8)
!2480 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 844, column: 40)
!2481 = !DILocalVariable(name: "val", scope: !2482, file: !751, line: 844, type: !7, align: 8)
!2482 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 844, column: 25)
!2483 = !DILocalVariable(name: "residual", scope: !2484, file: !751, line: 845, type: !2336, align: 8)
!2484 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 845, column: 40)
!2485 = !DILocalVariable(name: "val", scope: !2486, file: !751, line: 845, type: !7, align: 8)
!2486 = distinct !DILexicalBlock(scope: !2450, file: !751, line: 845, column: 25)
!2487 = !DILocalVariable(name: "residual", scope: !2488, file: !751, line: 851, type: !2336, align: 8)
!2488 = distinct !DILexicalBlock(scope: !2438, file: !751, line: 851, column: 45)
!2489 = !DILocalVariable(name: "val", scope: !2490, file: !751, line: 851, type: !7, align: 8)
!2490 = distinct !DILexicalBlock(scope: !2438, file: !751, line: 851, column: 29)
!2491 = !DILocalVariable(name: "residual", scope: !2492, file: !751, line: 852, type: !2336, align: 8)
!2492 = distinct !DILexicalBlock(scope: !2438, file: !751, line: 852, column: 45)
!2493 = !DILocalVariable(name: "val", scope: !2494, file: !751, line: 852, type: !7, align: 8)
!2494 = distinct !DILexicalBlock(scope: !2438, file: !751, line: 852, column: 29)
!2495 = !DILocalVariable(name: "parser", scope: !2496, file: !751, line: 619, type: !1726, align: 32)
!2496 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 619, column: 13)
!2497 = !DILocalVariable(name: "x", scope: !2498, file: !751, line: 620, type: !765, align: 64)
!2498 = distinct !DILexicalBlock(scope: !2496, file: !751, line: 620, column: 17)
!2499 = !DILocalVariable(name: "err", scope: !2500, file: !751, line: 621, type: !87, align: 8)
!2500 = distinct !DILexicalBlock(scope: !2496, file: !751, line: 621, column: 17)
!2501 = !DILocalVariable(name: "residual", scope: !2502, file: !751, line: 622, type: !2336, align: 8)
!2502 = distinct !DILexicalBlock(scope: !2500, file: !751, line: 622, column: 50)
!2503 = !DILocalVariable(name: "val", scope: !2504, file: !751, line: 622, type: !7, align: 8)
!2504 = distinct !DILexicalBlock(scope: !2500, file: !751, line: 622, column: 21)
!2505 = !DILocalVariable(name: "residual", scope: !2506, file: !751, line: 864, type: !2336, align: 8)
!2506 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 864, column: 32)
!2507 = !DILocalVariable(name: "val", scope: !2508, file: !751, line: 864, type: !7, align: 8)
!2508 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 864, column: 17)
!2509 = !DILocalVariable(name: "residual", scope: !2510, file: !751, line: 865, type: !2336, align: 8)
!2510 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 865, column: 34)
!2511 = !DILocalVariable(name: "val", scope: !2512, file: !751, line: 865, type: !7, align: 8)
!2512 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 865, column: 17)
!2513 = !DILocalVariable(name: "residual", scope: !2514, file: !751, line: 867, type: !2336, align: 8)
!2514 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 867, column: 39)
!2515 = !DILocalVariable(name: "val", scope: !2516, file: !751, line: 867, type: !7, align: 8)
!2516 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 867, column: 21)
!2517 = !DILocalVariable(name: "residual", scope: !2518, file: !751, line: 868, type: !2336, align: 8)
!2518 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 868, column: 43)
!2519 = !DILocalVariable(name: "val", scope: !2520, file: !751, line: 868, type: !7, align: 8)
!2520 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 868, column: 21)
!2521 = !DILocalVariable(name: "residual", scope: !2522, file: !751, line: 870, type: !2336, align: 8)
!2522 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 870, column: 32)
!2523 = !DILocalVariable(name: "val", scope: !2524, file: !751, line: 870, type: !7, align: 8)
!2524 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 870, column: 17)
!2525 = !DILocalVariable(name: "residual", scope: !2526, file: !751, line: 873, type: !2336, align: 8)
!2526 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 873, column: 42)
!2527 = !DILocalVariable(name: "val", scope: !2528, file: !751, line: 873, type: !7, align: 8)
!2528 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 873, column: 17)
!2529 = !DILocalVariable(name: "residual", scope: !2530, file: !751, line: 875, type: !2336, align: 8)
!2530 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 875, column: 37)
!2531 = !DILocalVariable(name: "val", scope: !2532, file: !751, line: 875, type: !7, align: 8)
!2532 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 875, column: 21)
!2533 = !DILocalVariable(name: "residual", scope: !2534, file: !751, line: 877, type: !2336, align: 8)
!2534 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 877, column: 32)
!2535 = !DILocalVariable(name: "val", scope: !2536, file: !751, line: 877, type: !7, align: 8)
!2536 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 877, column: 17)
!2537 = !DILocalVariable(name: "residual", scope: !2538, file: !751, line: 878, type: !2336, align: 8)
!2538 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 878, column: 67)
!2539 = !DILocalVariable(name: "val", scope: !2540, file: !751, line: 878, type: !9, align: 32)
!2540 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 878, column: 17)
!2541 = !DILocalVariable(name: "residual", scope: !2542, file: !751, line: 879, type: !2336, align: 8)
!2542 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 879, column: 32)
!2543 = !DILocalVariable(name: "val", scope: !2544, file: !751, line: 879, type: !7, align: 8)
!2544 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 879, column: 17)
!2545 = !DILocalVariable(name: "residual", scope: !2546, file: !751, line: 882, type: !2336, align: 8)
!2546 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 882, column: 69)
!2547 = !DILocalVariable(name: "val", scope: !2548, file: !751, line: 882, type: !7, align: 8)
!2548 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 882, column: 17)
!2549 = !DILocalVariable(name: "err", scope: !2550, file: !751, line: 600, type: !87, align: 8)
!2550 = distinct !DILexicalBlock(scope: !2352, file: !751, line: 600, column: 9)
!2551 = !DILocalVariable(name: "residual", scope: !2552, file: !751, line: 601, type: !2336, align: 8)
!2552 = distinct !DILexicalBlock(scope: !2550, file: !751, line: 601, column: 38)
!2553 = !DILocalVariable(name: "val", scope: !2554, file: !751, line: 601, type: !7, align: 8)
!2554 = distinct !DILexicalBlock(scope: !2550, file: !751, line: 601, column: 9)
!2555 = !DILocation(line: 795, column: 19, scope: !2302)
!2556 = !DILocation(line: 795, column: 30, scope: !2302)
!2557 = !DILocation(line: 621, column: 21, scope: !2333)
!2558 = !DILocation(line: 621, column: 21, scope: !2358)
!2559 = !DILocation(line: 801, column: 21, scope: !2364)
!2560 = !DILocation(line: 621, column: 21, scope: !2370)
!2561 = !DILocation(line: 802, column: 21, scope: !2376)
!2562 = !DILocation(line: 620, column: 20, scope: !2380)
!2563 = !DILocation(line: 621, column: 21, scope: !2382)
!2564 = !DILocation(line: 814, column: 21, scope: !2406)
!2565 = !DILocation(line: 620, column: 20, scope: !2410)
!2566 = !DILocation(line: 621, column: 21, scope: !2412)
!2567 = !DILocation(line: 621, column: 21, scope: !2432)
!2568 = !DILocation(line: 828, column: 21, scope: !2438)
!2569 = !DILocation(line: 620, column: 20, scope: !2442)
!2570 = !DILocation(line: 621, column: 21, scope: !2444)
!2571 = !DILocation(line: 621, column: 21, scope: !2500)
!2572 = !DILocation(line: 600, column: 13, scope: !2550)
!2573 = !DILocation(line: 620, column: 20, scope: !2331)
!2574 = !DILocation(line: 622, column: 50, scope: !2335)
!2575 = !DILocation(line: 622, column: 21, scope: !2350)
!2576 = !DILocation(line: 622, column: 50, scope: !2360)
!2577 = !DILocation(line: 622, column: 21, scope: !2362)
!2578 = !DILocation(line: 622, column: 50, scope: !2372)
!2579 = !DILocation(line: 622, column: 21, scope: !2374)
!2580 = !DILocation(line: 622, column: 50, scope: !2384)
!2581 = !DILocation(line: 622, column: 21, scope: !2386)
!2582 = !DILocation(line: 804, column: 33, scope: !2388)
!2583 = !DILocation(line: 804, column: 17, scope: !2390)
!2584 = !DILocation(line: 807, column: 43, scope: !2394)
!2585 = !DILocation(line: 807, column: 25, scope: !2396)
!2586 = !DILocation(line: 808, column: 54, scope: !2398)
!2587 = !DILocation(line: 808, column: 25, scope: !2400)
!2588 = !DILocation(line: 809, column: 43, scope: !2402)
!2589 = !DILocation(line: 809, column: 25, scope: !2404)
!2590 = !DILocation(line: 622, column: 50, scope: !2414)
!2591 = !DILocation(line: 622, column: 21, scope: !2416)
!2592 = !DILocation(line: 816, column: 42, scope: !2418)
!2593 = !DILocation(line: 816, column: 17, scope: !2420)
!2594 = !DILocation(line: 824, column: 37, scope: !2422)
!2595 = !DILocation(line: 824, column: 21, scope: !2424)
!2596 = !DILocation(line: 622, column: 50, scope: !2434)
!2597 = !DILocation(line: 622, column: 21, scope: !2436)
!2598 = !DILocation(line: 622, column: 50, scope: !2446)
!2599 = !DILocation(line: 622, column: 21, scope: !2448)
!2600 = !DILocation(line: 833, column: 42, scope: !2452)
!2601 = !DILocation(line: 833, column: 25, scope: !2454)
!2602 = !DILocation(line: 835, column: 57, scope: !2456)
!2603 = !DILocation(line: 835, column: 36, scope: !2458)
!2604 = !DILocation(line: 836, column: 54, scope: !2460)
!2605 = !DILocation(line: 836, column: 36, scope: !2462)
!2606 = !DILocation(line: 837, column: 48, scope: !2464)
!2607 = !DILocation(line: 837, column: 34, scope: !2466)
!2608 = !DILocation(line: 840, column: 44, scope: !2468)
!2609 = !DILocation(line: 840, column: 29, scope: !2470)
!2610 = !DILocation(line: 841, column: 45, scope: !2472)
!2611 = !DILocation(line: 841, column: 29, scope: !2474)
!2612 = !DILocation(line: 843, column: 40, scope: !2476)
!2613 = !DILocation(line: 843, column: 25, scope: !2478)
!2614 = !DILocation(line: 844, column: 40, scope: !2480)
!2615 = !DILocation(line: 844, column: 25, scope: !2482)
!2616 = !DILocation(line: 845, column: 40, scope: !2484)
!2617 = !DILocation(line: 845, column: 25, scope: !2486)
!2618 = !DILocation(line: 851, column: 45, scope: !2488)
!2619 = !DILocation(line: 851, column: 29, scope: !2490)
!2620 = !DILocation(line: 852, column: 45, scope: !2492)
!2621 = !DILocation(line: 852, column: 29, scope: !2494)
!2622 = !DILocation(line: 622, column: 50, scope: !2502)
!2623 = !DILocation(line: 622, column: 21, scope: !2504)
!2624 = !DILocation(line: 864, column: 32, scope: !2506)
!2625 = !DILocation(line: 864, column: 17, scope: !2508)
!2626 = !DILocation(line: 865, column: 34, scope: !2510)
!2627 = !DILocation(line: 865, column: 17, scope: !2512)
!2628 = !DILocation(line: 867, column: 39, scope: !2514)
!2629 = !DILocation(line: 867, column: 21, scope: !2516)
!2630 = !DILocation(line: 868, column: 43, scope: !2518)
!2631 = !DILocation(line: 868, column: 21, scope: !2520)
!2632 = !DILocation(line: 870, column: 32, scope: !2522)
!2633 = !DILocation(line: 870, column: 17, scope: !2524)
!2634 = !DILocation(line: 873, column: 42, scope: !2526)
!2635 = !DILocation(line: 873, column: 17, scope: !2528)
!2636 = !DILocation(line: 875, column: 37, scope: !2530)
!2637 = !DILocation(line: 875, column: 21, scope: !2532)
!2638 = !DILocation(line: 877, column: 32, scope: !2534)
!2639 = !DILocation(line: 877, column: 17, scope: !2536)
!2640 = !DILocation(line: 878, column: 67, scope: !2538)
!2641 = !DILocation(line: 879, column: 32, scope: !2542)
!2642 = !DILocation(line: 879, column: 17, scope: !2544)
!2643 = !DILocation(line: 882, column: 69, scope: !2546)
!2644 = !DILocation(line: 882, column: 17, scope: !2548)
!2645 = !DILocation(line: 601, column: 38, scope: !2552)
!2646 = !DILocation(line: 601, column: 9, scope: !2554)
!2647 = !DILocation(line: 618, column: 15, scope: !2302)
!2648 = !DILocation(line: 618, column: 9, scope: !2302)
!2649 = !DILocation(line: 627, column: 39, scope: !2302)
!2650 = !DILocation(line: 619, column: 16, scope: !2302)
!2651 = !DILocation(line: 619, column: 16, scope: !2329)
!2652 = !DILocation(line: 619, column: 48, scope: !2329)
!2653 = !DILocation(line: 619, column: 41, scope: !2329)
!2654 = !DILocation(line: 619, column: 35, scope: !2329)
!2655 = !DILocation(line: 621, column: 21, scope: !2329)
!2656 = !DILocation(line: 622, column: 40, scope: !2333)
!2657 = !DILocation(line: 622, column: 30, scope: !2333)
!2658 = !DILocation(line: 622, column: 21, scope: !2333)
!2659 = !DILocation(line: 619, column: 16, scope: !2354)
!2660 = !DILocation(line: 619, column: 48, scope: !2354)
!2661 = !DILocation(line: 619, column: 41, scope: !2354)
!2662 = !DILocation(line: 619, column: 35, scope: !2354)
!2663 = !DILocation(line: 621, column: 21, scope: !2354)
!2664 = !DILocation(line: 622, column: 40, scope: !2358)
!2665 = !DILocation(line: 622, column: 30, scope: !2358)
!2666 = !DILocation(line: 622, column: 21, scope: !2358)
!2667 = !DILocation(line: 620, column: 20, scope: !2354)
!2668 = !DILocation(line: 798, column: 13, scope: !2352)
!2669 = !DILocation(line: 620, column: 20, scope: !2356)
!2670 = !DILocation(line: 799, column: 9, scope: !2352)
!2671 = !DILocation(line: 600, column: 19, scope: !2352)
!2672 = !DILocation(line: 601, column: 28, scope: !2550)
!2673 = !DILocation(line: 601, column: 18, scope: !2550)
!2674 = !DILocation(line: 601, column: 9, scope: !2550)
!2675 = !DILocation(line: 618, column: 15, scope: !2352)
!2676 = !DILocation(line: 618, column: 9, scope: !2352)
!2677 = !DILocation(line: 858, column: 20, scope: !2352)
!2678 = !DILocation(line: 873, column: 17, scope: !2352)
!2679 = !DILocation(line: 873, column: 22, scope: !2352)
!2680 = !DILocation(line: 882, column: 22, scope: !2352)
!2681 = !DILocation(line: 882, column: 17, scope: !2352)
!2682 = !DILocation(line: 627, column: 39, scope: !2352)
!2683 = !DILocation(line: 619, column: 16, scope: !2352)
!2684 = !DILocation(line: 619, column: 16, scope: !2366)
!2685 = !DILocation(line: 619, column: 48, scope: !2366)
!2686 = !DILocation(line: 619, column: 41, scope: !2366)
!2687 = !DILocation(line: 619, column: 35, scope: !2366)
!2688 = !DILocation(line: 621, column: 21, scope: !2366)
!2689 = !DILocation(line: 622, column: 40, scope: !2370)
!2690 = !DILocation(line: 622, column: 30, scope: !2370)
!2691 = !DILocation(line: 622, column: 21, scope: !2370)
!2692 = !DILocation(line: 620, column: 20, scope: !2366)
!2693 = !DILocation(line: 620, column: 20, scope: !2368)
!2694 = !DILocation(line: 620, column: 26, scope: !2368)
!2695 = !DILocation(line: 618, column: 15, scope: !2364)
!2696 = !DILocation(line: 618, column: 9, scope: !2364)
!2697 = !DILocation(line: 627, column: 39, scope: !2364)
!2698 = !DILocation(line: 619, column: 16, scope: !2364)
!2699 = !DILocation(line: 619, column: 16, scope: !2378)
!2700 = !DILocation(line: 619, column: 48, scope: !2378)
!2701 = !DILocation(line: 619, column: 41, scope: !2378)
!2702 = !DILocation(line: 619, column: 35, scope: !2378)
!2703 = !DILocation(line: 621, column: 21, scope: !2378)
!2704 = !DILocation(line: 622, column: 40, scope: !2382)
!2705 = !DILocation(line: 622, column: 30, scope: !2382)
!2706 = !DILocation(line: 622, column: 21, scope: !2382)
!2707 = !DILocation(line: 620, column: 20, scope: !2378)
!2708 = !DILocation(line: 804, column: 22, scope: !2376)
!2709 = !DILocation(line: 804, column: 17, scope: !2376)
!2710 = !DILocation(line: 804, column: 17, scope: !2388)
!2711 = !DILocation(line: 805, column: 36, scope: !2392)
!2712 = !DILocation(line: 805, column: 24, scope: !2392)
!2713 = !DILocation(line: 805, column: 29, scope: !2392)
!2714 = !DILocation(line: 806, column: 25, scope: !2392)
!2715 = !DILocation(line: 806, column: 29, scope: !2392)
!2716 = !DILocation(line: 887, column: 14, scope: !2352)
!2717 = !DILocation(line: 888, column: 9, scope: !2352)
!2718 = !DILocation(line: 889, column: 6, scope: !2302)
!2719 = !DILocation(line: 806, column: 44, scope: !2392)
!2720 = !DILocation(line: 807, column: 25, scope: !2392)
!2721 = !DILocation(line: 807, column: 29, scope: !2392)
!2722 = !DILocation(line: 807, column: 25, scope: !2394)
!2723 = !DILocation(line: 808, column: 50, scope: !2392)
!2724 = !DILocation(line: 808, column: 25, scope: !2392)
!2725 = !DILocation(line: 808, column: 25, scope: !2398)
!2726 = !DILocation(line: 809, column: 25, scope: !2392)
!2727 = !DILocation(line: 809, column: 29, scope: !2392)
!2728 = !DILocation(line: 809, column: 25, scope: !2402)
!2729 = !DILocation(line: 622, column: 21, scope: !2384)
!2730 = !DILocation(line: 623, column: 39, scope: !2382)
!2731 = !DILocation(line: 623, column: 21, scope: !2382)
!2732 = !DILocation(line: 624, column: 28, scope: !2382)
!2733 = !DILocation(line: 624, column: 21, scope: !2382)
!2734 = !DILocation(line: 622, column: 21, scope: !2372)
!2735 = !DILocation(line: 623, column: 39, scope: !2370)
!2736 = !DILocation(line: 623, column: 21, scope: !2370)
!2737 = !DILocation(line: 624, column: 28, scope: !2370)
!2738 = !DILocation(line: 624, column: 21, scope: !2370)
!2739 = !DILocation(line: 619, column: 16, scope: !2408)
!2740 = !DILocation(line: 619, column: 48, scope: !2408)
!2741 = !DILocation(line: 619, column: 41, scope: !2408)
!2742 = !DILocation(line: 619, column: 35, scope: !2408)
!2743 = !DILocation(line: 621, column: 21, scope: !2408)
!2744 = !DILocation(line: 622, column: 40, scope: !2412)
!2745 = !DILocation(line: 622, column: 30, scope: !2412)
!2746 = !DILocation(line: 622, column: 21, scope: !2412)
!2747 = !DILocation(line: 620, column: 20, scope: !2408)
!2748 = !DILocation(line: 816, column: 17, scope: !2406)
!2749 = !DILocation(line: 816, column: 22, scope: !2406)
!2750 = !DILocation(line: 816, column: 17, scope: !2418)
!2751 = !DILocation(line: 823, column: 32, scope: !2406)
!2752 = !DILocation(line: 823, column: 20, scope: !2406)
!2753 = !DILocation(line: 618, column: 15, scope: !2406)
!2754 = !DILocation(line: 618, column: 9, scope: !2406)
!2755 = !DILocation(line: 824, column: 26, scope: !2406)
!2756 = !DILocation(line: 824, column: 21, scope: !2406)
!2757 = !DILocation(line: 824, column: 21, scope: !2422)
!2758 = !DILocation(line: 627, column: 39, scope: !2406)
!2759 = !DILocation(line: 619, column: 16, scope: !2406)
!2760 = !DILocation(line: 619, column: 16, scope: !2428)
!2761 = !DILocation(line: 619, column: 48, scope: !2428)
!2762 = !DILocation(line: 619, column: 41, scope: !2428)
!2763 = !DILocation(line: 619, column: 35, scope: !2428)
!2764 = !DILocation(line: 621, column: 21, scope: !2428)
!2765 = !DILocation(line: 622, column: 40, scope: !2432)
!2766 = !DILocation(line: 622, column: 30, scope: !2432)
!2767 = !DILocation(line: 622, column: 21, scope: !2432)
!2768 = !DILocation(line: 620, column: 20, scope: !2428)
!2769 = !DILocation(line: 827, column: 21, scope: !2426)
!2770 = !DILocation(line: 620, column: 20, scope: !2430)
!2771 = !DILocation(line: 618, column: 15, scope: !2426)
!2772 = !DILocation(line: 618, column: 9, scope: !2426)
!2773 = !DILocation(line: 627, column: 39, scope: !2426)
!2774 = !DILocation(line: 619, column: 16, scope: !2426)
!2775 = !DILocation(line: 619, column: 16, scope: !2440)
!2776 = !DILocation(line: 619, column: 48, scope: !2440)
!2777 = !DILocation(line: 619, column: 41, scope: !2440)
!2778 = !DILocation(line: 619, column: 35, scope: !2440)
!2779 = !DILocation(line: 621, column: 21, scope: !2440)
!2780 = !DILocation(line: 622, column: 40, scope: !2444)
!2781 = !DILocation(line: 622, column: 30, scope: !2444)
!2782 = !DILocation(line: 622, column: 21, scope: !2444)
!2783 = !DILocation(line: 620, column: 20, scope: !2440)
!2784 = !DILocation(line: 830, column: 23, scope: !2438)
!2785 = !DILocation(line: 830, column: 17, scope: !2438)
!2786 = !DILocation(line: 832, column: 26, scope: !2438)
!2787 = !DILocation(line: 832, column: 26, scope: !2450)
!2788 = !DILocation(line: 833, column: 30, scope: !2450)
!2789 = !DILocation(line: 833, column: 25, scope: !2450)
!2790 = !DILocation(line: 850, column: 29, scope: !2438)
!2791 = !DILocation(line: 850, column: 40, scope: !2438)
!2792 = !DILocation(line: 851, column: 34, scope: !2438)
!2793 = !DILocation(line: 851, column: 29, scope: !2438)
!2794 = !DILocation(line: 850, column: 55, scope: !2438)
!2795 = !DILocation(line: 850, column: 69, scope: !2438)
!2796 = !DILocation(line: 851, column: 29, scope: !2488)
!2797 = !DILocation(line: 852, column: 34, scope: !2438)
!2798 = !DILocation(line: 852, column: 29, scope: !2438)
!2799 = !DILocation(line: 852, column: 29, scope: !2492)
!2800 = !DILocation(line: 833, column: 25, scope: !2452)
!2801 = !DILocation(line: 834, column: 25, scope: !2450)
!2802 = !DILocation(line: 837, column: 39, scope: !2450)
!2803 = !DILocation(line: 837, column: 34, scope: !2450)
!2804 = !DILocation(line: 835, column: 41, scope: !2450)
!2805 = !DILocation(line: 835, column: 36, scope: !2450)
!2806 = !DILocation(line: 836, column: 41, scope: !2450)
!2807 = !DILocation(line: 836, column: 36, scope: !2450)
!2808 = !DILocation(line: 835, column: 36, scope: !2456)
!2809 = !DILocation(line: 839, column: 29, scope: !2450)
!2810 = !DILocation(line: 839, column: 40, scope: !2450)
!2811 = !DILocation(line: 836, column: 36, scope: !2460)
!2812 = !DILocation(line: 837, column: 34, scope: !2464)
!2813 = !DILocation(line: 840, column: 34, scope: !2450)
!2814 = !DILocation(line: 840, column: 29, scope: !2450)
!2815 = !DILocation(line: 839, column: 55, scope: !2450)
!2816 = !DILocation(line: 839, column: 69, scope: !2450)
!2817 = !DILocation(line: 843, column: 30, scope: !2450)
!2818 = !DILocation(line: 843, column: 25, scope: !2450)
!2819 = !DILocation(line: 840, column: 29, scope: !2468)
!2820 = !DILocation(line: 841, column: 34, scope: !2450)
!2821 = !DILocation(line: 841, column: 29, scope: !2450)
!2822 = !DILocation(line: 841, column: 29, scope: !2472)
!2823 = !DILocation(line: 843, column: 25, scope: !2476)
!2824 = !DILocation(line: 844, column: 30, scope: !2450)
!2825 = !DILocation(line: 844, column: 25, scope: !2450)
!2826 = !DILocation(line: 844, column: 25, scope: !2480)
!2827 = !DILocation(line: 845, column: 30, scope: !2450)
!2828 = !DILocation(line: 845, column: 25, scope: !2450)
!2829 = !DILocation(line: 845, column: 25, scope: !2484)
!2830 = !DILocation(line: 622, column: 21, scope: !2446)
!2831 = !DILocation(line: 623, column: 39, scope: !2444)
!2832 = !DILocation(line: 623, column: 21, scope: !2444)
!2833 = !DILocation(line: 624, column: 28, scope: !2444)
!2834 = !DILocation(line: 624, column: 21, scope: !2444)
!2835 = !DILocation(line: 622, column: 21, scope: !2434)
!2836 = !DILocation(line: 623, column: 39, scope: !2432)
!2837 = !DILocation(line: 623, column: 21, scope: !2432)
!2838 = !DILocation(line: 624, column: 28, scope: !2432)
!2839 = !DILocation(line: 624, column: 21, scope: !2432)
!2840 = !DILocation(line: 622, column: 21, scope: !2414)
!2841 = !DILocation(line: 623, column: 39, scope: !2412)
!2842 = !DILocation(line: 623, column: 21, scope: !2412)
!2843 = !DILocation(line: 624, column: 28, scope: !2412)
!2844 = !DILocation(line: 624, column: 21, scope: !2412)
!2845 = !DILocation(line: 864, column: 22, scope: !2352)
!2846 = !DILocation(line: 864, column: 17, scope: !2352)
!2847 = !DILocation(line: 619, column: 16, scope: !2496)
!2848 = !DILocation(line: 619, column: 48, scope: !2496)
!2849 = !DILocation(line: 619, column: 41, scope: !2496)
!2850 = !DILocation(line: 619, column: 35, scope: !2496)
!2851 = !DILocation(line: 621, column: 21, scope: !2496)
!2852 = !DILocation(line: 622, column: 40, scope: !2500)
!2853 = !DILocation(line: 622, column: 30, scope: !2500)
!2854 = !DILocation(line: 622, column: 21, scope: !2500)
!2855 = !DILocation(line: 620, column: 20, scope: !2496)
!2856 = !DILocation(line: 620, column: 20, scope: !2498)
!2857 = !DILocation(line: 861, column: 26, scope: !2352)
!2858 = !DILocation(line: 864, column: 17, scope: !2506)
!2859 = !DILocation(line: 865, column: 22, scope: !2352)
!2860 = !DILocation(line: 865, column: 17, scope: !2352)
!2861 = !DILocation(line: 865, column: 17, scope: !2510)
!2862 = !DILocation(line: 866, column: 20, scope: !2352)
!2863 = !DILocation(line: 870, column: 22, scope: !2352)
!2864 = !DILocation(line: 870, column: 17, scope: !2352)
!2865 = !DILocation(line: 867, column: 26, scope: !2352)
!2866 = !DILocation(line: 867, column: 21, scope: !2352)
!2867 = !DILocation(line: 867, column: 21, scope: !2514)
!2868 = !DILocation(line: 868, column: 26, scope: !2352)
!2869 = !DILocation(line: 868, column: 21, scope: !2352)
!2870 = !DILocation(line: 868, column: 21, scope: !2518)
!2871 = !DILocation(line: 870, column: 17, scope: !2522)
!2872 = !DILocation(line: 622, column: 21, scope: !2502)
!2873 = !DILocation(line: 623, column: 39, scope: !2500)
!2874 = !DILocation(line: 623, column: 21, scope: !2500)
!2875 = !DILocation(line: 624, column: 28, scope: !2500)
!2876 = !DILocation(line: 624, column: 21, scope: !2500)
!2877 = !DILocation(line: 873, column: 17, scope: !2526)
!2878 = !DILocation(line: 874, column: 20, scope: !2352)
!2879 = !DILocation(line: 877, column: 22, scope: !2352)
!2880 = !DILocation(line: 877, column: 17, scope: !2352)
!2881 = !DILocation(line: 875, column: 26, scope: !2352)
!2882 = !DILocation(line: 875, column: 21, scope: !2352)
!2883 = !DILocation(line: 875, column: 21, scope: !2530)
!2884 = !DILocation(line: 877, column: 17, scope: !2534)
!2885 = !DILocation(line: 878, column: 22, scope: !2352)
!2886 = !DILocation(line: 878, column: 17, scope: !2352)
!2887 = !DILocation(line: 878, column: 17, scope: !2538)
!2888 = !DILocation(line: 878, column: 17, scope: !2540)
!2889 = !DILocation(line: 879, column: 22, scope: !2352)
!2890 = !DILocation(line: 879, column: 17, scope: !2352)
!2891 = !DILocation(line: 879, column: 17, scope: !2542)
!2892 = !DILocation(line: 882, column: 17, scope: !2546)
!2893 = !DILocation(line: 601, column: 9, scope: !2552)
!2894 = !DILocation(line: 602, column: 27, scope: !2550)
!2895 = !DILocation(line: 602, column: 9, scope: !2550)
!2896 = !DILocation(line: 603, column: 16, scope: !2550)
!2897 = !DILocation(line: 603, column: 9, scope: !2550)
!2898 = !DILocation(line: 622, column: 21, scope: !2360)
!2899 = !DILocation(line: 623, column: 39, scope: !2358)
!2900 = !DILocation(line: 623, column: 21, scope: !2358)
!2901 = !DILocation(line: 624, column: 28, scope: !2358)
!2902 = !DILocation(line: 624, column: 21, scope: !2358)
!2903 = !DILocation(line: 622, column: 21, scope: !2335)
!2904 = !DILocation(line: 623, column: 39, scope: !2333)
!2905 = !DILocation(line: 623, column: 21, scope: !2333)
!2906 = !DILocation(line: 624, column: 28, scope: !2333)
!2907 = !DILocation(line: 624, column: 21, scope: !2333)
!2908 = !DILocation(line: 0, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !2302, file: !626, discriminator: 0)
!2910 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h1b23fdaaa8245f44E", scope: !2911, file: !751, line: 882, type: !2913, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !2919)
!2911 = !DINamespace(name: "print_path", scope: !2912)
!2912 = !DINamespace(name: "{impl#6}", scope: !83)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!1079, !2915, !2323}
!2915 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !2911, file: !2, size: 32, align: 32, elements: !2916, templateParams: !14, identifier: "568079d366595cc75643b31dda341f4c")
!2916 = !{!2917}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__in_value", scope: !2915, file: !2, baseType: !2918, size: 32, align: 32)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !706, size: 32, align: 32, dwarfAddressSpace: 0)
!2919 = !{!2920, !2921}
!2920 = !DILocalVariable(name: "this", arg: 2, scope: !2910, file: !751, line: 882, type: !2323)
!2921 = !DILocalVariable(name: "in_value", scope: !2910, file: !751, line: 795, type: !706, align: 8)
!2922 = !DILocation(line: 795, column: 30, scope: !2910)
!2923 = !DILocation(line: 882, column: 37, scope: !2910)
!2924 = !DILocation(line: 882, column: 59, scope: !2910)
!2925 = !DILocation(line: 882, column: 48, scope: !2910)
!2926 = !DILocation(line: 882, column: 68, scope: !2910)
!2927 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v07Printer10print_path28_$u7b$$u7b$closure$u7d$$u7d$17h4812f5845730f013E", scope: !2911, file: !751, line: 861, type: !2928, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !2931)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!1079, !2930, !2323}
!2930 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !2911, file: !2, align: 8, elements: !14, identifier: "336b4128ec4a300975f242c56eb4f550")
!2931 = !{!2932, !2933}
!2932 = !DILocalVariable(name: "this", arg: 2, scope: !2927, file: !751, line: 861, type: !2323)
!2933 = !DILocalVariable(arg: 1, scope: !2927, file: !751, line: 861, type: !2930)
!2934 = !DILocation(line: 861, column: 44, scope: !2927)
!2935 = !DILocation(line: 861, column: 45, scope: !2927)
!2936 = !DILocation(line: 861, column: 56, scope: !2927)
!2937 = !DILocation(line: 861, column: 73, scope: !2927)
!2938 = distinct !DISubprogram(name: "print_type", linkageName: "_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E", scope: !2303, file: !751, line: 902, type: !2939, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !2941, retainedNodes: !2942)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!1079, !2323}
!2941 = !DISubprogram(name: "print_type", linkageName: "_ZN14rustc_demangle2v07Printer10print_type17h94e78f0336f45698E", scope: !2303, file: !751, line: 902, type: !2939, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!2942 = !{!2943, !2944, !2946, !2948, !2950, !2952, !2954, !2956, !2958, !2960, !2962, !2964, !2966, !2968, !2970, !2972, !2974, !2976, !2978, !2980, !2982, !2984, !2986, !2988, !2990, !2992, !2994, !2996, !2998, !3000, !3002, !3004, !3006, !3008, !3010, !3012, !3014, !3016, !3018, !3020, !3022, !3024, !3026, !3028, !3030, !3032, !3034, !3036, !3038, !3040, !3042, !3044, !3046, !3048, !3050, !3052, !3054, !3056, !3058, !3060, !3062, !3064, !3066, !3068, !3070, !3072, !3074, !3076, !3078, !3080, !3082, !3084, !3086, !3088, !3090, !3092, !3094, !3096, !3098, !3100, !3102, !3104, !3106, !3108, !3110}
!2943 = !DILocalVariable(name: "self", arg: 1, scope: !2938, file: !751, line: 902, type: !2323)
!2944 = !DILocalVariable(name: "tag", scope: !2945, file: !751, line: 903, type: !13, align: 8)
!2945 = distinct !DILexicalBlock(scope: !2938, file: !751, line: 903, column: 9)
!2946 = !DILocalVariable(name: "parser", scope: !2947, file: !751, line: 619, type: !1726, align: 32)
!2947 = distinct !DILexicalBlock(scope: !2938, file: !751, line: 619, column: 13)
!2948 = !DILocalVariable(name: "x", scope: !2949, file: !751, line: 620, type: !13, align: 8)
!2949 = distinct !DILexicalBlock(scope: !2947, file: !751, line: 620, column: 17)
!2950 = !DILocalVariable(name: "err", scope: !2951, file: !751, line: 621, type: !87, align: 8)
!2951 = distinct !DILexicalBlock(scope: !2947, file: !751, line: 621, column: 17)
!2952 = !DILocalVariable(name: "residual", scope: !2953, file: !751, line: 622, type: !2336, align: 8)
!2953 = distinct !DILexicalBlock(scope: !2951, file: !751, line: 622, column: 50)
!2954 = !DILocalVariable(name: "val", scope: !2955, file: !751, line: 622, type: !7, align: 8)
!2955 = distinct !DILexicalBlock(scope: !2951, file: !751, line: 622, column: 21)
!2956 = !DILocalVariable(name: "ty", scope: !2957, file: !751, line: 905, type: !659, align: 32)
!2957 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 905, column: 43)
!2958 = !DILocalVariable(name: "parser", scope: !2959, file: !751, line: 619, type: !1726, align: 32)
!2959 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 619, column: 13)
!2960 = !DILocalVariable(name: "x", scope: !2961, file: !751, line: 620, type: !7, align: 8)
!2961 = distinct !DILexicalBlock(scope: !2959, file: !751, line: 620, column: 17)
!2962 = !DILocalVariable(name: "err", scope: !2963, file: !751, line: 621, type: !87, align: 8)
!2963 = distinct !DILexicalBlock(scope: !2959, file: !751, line: 621, column: 17)
!2964 = !DILocalVariable(name: "residual", scope: !2965, file: !751, line: 622, type: !2336, align: 8)
!2965 = distinct !DILexicalBlock(scope: !2963, file: !751, line: 622, column: 50)
!2966 = !DILocalVariable(name: "val", scope: !2967, file: !751, line: 622, type: !7, align: 8)
!2967 = distinct !DILexicalBlock(scope: !2963, file: !751, line: 622, column: 21)
!2968 = !DILocalVariable(name: "residual", scope: !2969, file: !751, line: 913, type: !2336, align: 8)
!2969 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 913, column: 32)
!2970 = !DILocalVariable(name: "val", scope: !2971, file: !751, line: 913, type: !7, align: 8)
!2971 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 913, column: 17)
!2972 = !DILocalVariable(name: "lt", scope: !2973, file: !751, line: 915, type: !765, align: 64)
!2973 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 915, column: 21)
!2974 = !DILocalVariable(name: "parser", scope: !2975, file: !751, line: 619, type: !1726, align: 32)
!2975 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 619, column: 13)
!2976 = !DILocalVariable(name: "x", scope: !2977, file: !751, line: 620, type: !765, align: 64)
!2977 = distinct !DILexicalBlock(scope: !2975, file: !751, line: 620, column: 17)
!2978 = !DILocalVariable(name: "err", scope: !2979, file: !751, line: 621, type: !87, align: 8)
!2979 = distinct !DILexicalBlock(scope: !2975, file: !751, line: 621, column: 17)
!2980 = !DILocalVariable(name: "residual", scope: !2981, file: !751, line: 622, type: !2336, align: 8)
!2981 = distinct !DILexicalBlock(scope: !2979, file: !751, line: 622, column: 50)
!2982 = !DILocalVariable(name: "val", scope: !2983, file: !751, line: 622, type: !7, align: 8)
!2983 = distinct !DILexicalBlock(scope: !2979, file: !751, line: 622, column: 21)
!2984 = !DILocalVariable(name: "residual", scope: !2985, file: !751, line: 917, type: !2336, align: 8)
!2985 = distinct !DILexicalBlock(scope: !2973, file: !751, line: 917, column: 59)
!2986 = !DILocalVariable(name: "val", scope: !2987, file: !751, line: 917, type: !7, align: 8)
!2987 = distinct !DILexicalBlock(scope: !2973, file: !751, line: 917, column: 25)
!2988 = !DILocalVariable(name: "residual", scope: !2989, file: !751, line: 918, type: !2336, align: 8)
!2989 = distinct !DILexicalBlock(scope: !2973, file: !751, line: 918, column: 40)
!2990 = !DILocalVariable(name: "val", scope: !2991, file: !751, line: 918, type: !7, align: 8)
!2991 = distinct !DILexicalBlock(scope: !2973, file: !751, line: 918, column: 25)
!2992 = !DILocalVariable(name: "residual", scope: !2993, file: !751, line: 922, type: !2336, align: 8)
!2993 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 922, column: 39)
!2994 = !DILocalVariable(name: "val", scope: !2995, file: !751, line: 922, type: !7, align: 8)
!2995 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 922, column: 21)
!2996 = !DILocalVariable(name: "residual", scope: !2997, file: !751, line: 924, type: !2336, align: 8)
!2997 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 924, column: 34)
!2998 = !DILocalVariable(name: "val", scope: !2999, file: !751, line: 924, type: !7, align: 8)
!2999 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 924, column: 17)
!3000 = !DILocalVariable(name: "residual", scope: !3001, file: !751, line: 928, type: !2336, align: 8)
!3001 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 928, column: 32)
!3002 = !DILocalVariable(name: "val", scope: !3003, file: !751, line: 928, type: !7, align: 8)
!3003 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 928, column: 17)
!3004 = !DILocalVariable(name: "residual", scope: !3005, file: !751, line: 930, type: !2336, align: 8)
!3005 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 930, column: 39)
!3006 = !DILocalVariable(name: "val", scope: !3007, file: !751, line: 930, type: !7, align: 8)
!3007 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 930, column: 21)
!3008 = !DILocalVariable(name: "residual", scope: !3009, file: !751, line: 932, type: !2336, align: 8)
!3009 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 932, column: 41)
!3010 = !DILocalVariable(name: "val", scope: !3011, file: !751, line: 932, type: !7, align: 8)
!3011 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 932, column: 21)
!3012 = !DILocalVariable(name: "residual", scope: !3013, file: !751, line: 934, type: !2336, align: 8)
!3013 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 934, column: 34)
!3014 = !DILocalVariable(name: "val", scope: !3015, file: !751, line: 934, type: !7, align: 8)
!3015 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 934, column: 17)
!3016 = !DILocalVariable(name: "residual", scope: !3017, file: !751, line: 938, type: !2336, align: 8)
!3017 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 938, column: 32)
!3018 = !DILocalVariable(name: "val", scope: !3019, file: !751, line: 938, type: !7, align: 8)
!3019 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 938, column: 17)
!3020 = !DILocalVariable(name: "residual", scope: !3021, file: !751, line: 939, type: !2336, align: 8)
!3021 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 939, column: 34)
!3022 = !DILocalVariable(name: "val", scope: !3023, file: !751, line: 939, type: !7, align: 8)
!3023 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 939, column: 17)
!3024 = !DILocalVariable(name: "residual", scope: !3025, file: !751, line: 941, type: !2336, align: 8)
!3025 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 941, column: 37)
!3026 = !DILocalVariable(name: "val", scope: !3027, file: !751, line: 941, type: !7, align: 8)
!3027 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 941, column: 21)
!3028 = !DILocalVariable(name: "residual", scope: !3029, file: !751, line: 942, type: !2336, align: 8)
!3029 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 942, column: 43)
!3030 = !DILocalVariable(name: "val", scope: !3031, file: !751, line: 942, type: !7, align: 8)
!3031 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 942, column: 21)
!3032 = !DILocalVariable(name: "residual", scope: !3033, file: !751, line: 944, type: !2336, align: 8)
!3033 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 944, column: 32)
!3034 = !DILocalVariable(name: "val", scope: !3035, file: !751, line: 944, type: !7, align: 8)
!3035 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 944, column: 17)
!3036 = !DILocalVariable(name: "residual", scope: !3037, file: !751, line: 947, type: !2336, align: 8)
!3037 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 947, column: 32)
!3038 = !DILocalVariable(name: "val", scope: !3039, file: !751, line: 947, type: !7, align: 8)
!3039 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 947, column: 17)
!3040 = !DILocalVariable(name: "count", scope: !3041, file: !751, line: 948, type: !9, align: 32)
!3041 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 948, column: 17)
!3042 = !DILocalVariable(name: "residual", scope: !3043, file: !751, line: 948, type: !2336, align: 8)
!3043 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 948, column: 72)
!3044 = !DILocalVariable(name: "val", scope: !3045, file: !751, line: 948, type: !9, align: 32)
!3045 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 948, column: 29)
!3046 = !DILocalVariable(name: "residual", scope: !3047, file: !751, line: 950, type: !2336, align: 8)
!3047 = distinct !DILexicalBlock(scope: !3041, file: !751, line: 950, column: 36)
!3048 = !DILocalVariable(name: "val", scope: !3049, file: !751, line: 950, type: !7, align: 8)
!3049 = distinct !DILexicalBlock(scope: !3041, file: !751, line: 950, column: 21)
!3050 = !DILocalVariable(name: "residual", scope: !3051, file: !751, line: 952, type: !2336, align: 8)
!3051 = distinct !DILexicalBlock(scope: !3041, file: !751, line: 952, column: 32)
!3052 = !DILocalVariable(name: "val", scope: !3053, file: !751, line: 952, type: !7, align: 8)
!3053 = distinct !DILexicalBlock(scope: !3041, file: !751, line: 952, column: 17)
!3054 = !DILocalVariable(name: "residual", scope: !3055, file: !751, line: 1001, type: !2336, align: 8)
!3055 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1001, column: 15)
!3056 = !DILocalVariable(name: "val", scope: !3057, file: !751, line: 954, type: !7, align: 8)
!3057 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 954, column: 21)
!3058 = !DILocalVariable(name: "residual", scope: !3059, file: !751, line: 1003, type: !2336, align: 8)
!3059 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1003, column: 35)
!3060 = !DILocalVariable(name: "val", scope: !3061, file: !751, line: 1003, type: !7, align: 8)
!3061 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1003, column: 17)
!3062 = !DILocalVariable(name: "residual", scope: !3063, file: !751, line: 1007, type: !2336, align: 8)
!3063 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1007, column: 19)
!3064 = !DILocalVariable(name: "val", scope: !3065, file: !751, line: 1004, type: !7, align: 8)
!3065 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1004, column: 17)
!3066 = !DILocalVariable(name: "err", scope: !3067, file: !751, line: 600, type: !87, align: 8)
!3067 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 600, column: 9)
!3068 = !DILocalVariable(name: "residual", scope: !3069, file: !751, line: 601, type: !2336, align: 8)
!3069 = distinct !DILexicalBlock(scope: !3067, file: !751, line: 601, column: 38)
!3070 = !DILocalVariable(name: "val", scope: !3071, file: !751, line: 601, type: !7, align: 8)
!3071 = distinct !DILexicalBlock(scope: !3067, file: !751, line: 601, column: 9)
!3072 = !DILocalVariable(name: "lt", scope: !3073, file: !751, line: 1012, type: !765, align: 64)
!3073 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1012, column: 17)
!3074 = !DILocalVariable(name: "parser", scope: !3075, file: !751, line: 619, type: !1726, align: 32)
!3075 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 619, column: 13)
!3076 = !DILocalVariable(name: "x", scope: !3077, file: !751, line: 620, type: !765, align: 64)
!3077 = distinct !DILexicalBlock(scope: !3075, file: !751, line: 620, column: 17)
!3078 = !DILocalVariable(name: "err", scope: !3079, file: !751, line: 621, type: !87, align: 8)
!3079 = distinct !DILexicalBlock(scope: !3075, file: !751, line: 621, column: 17)
!3080 = !DILocalVariable(name: "residual", scope: !3081, file: !751, line: 622, type: !2336, align: 8)
!3081 = distinct !DILexicalBlock(scope: !3079, file: !751, line: 622, column: 50)
!3082 = !DILocalVariable(name: "val", scope: !3083, file: !751, line: 622, type: !7, align: 8)
!3083 = distinct !DILexicalBlock(scope: !3079, file: !751, line: 622, column: 21)
!3084 = !DILocalVariable(name: "residual", scope: !3085, file: !751, line: 1014, type: !2336, align: 8)
!3085 = distinct !DILexicalBlock(scope: !3073, file: !751, line: 1014, column: 38)
!3086 = !DILocalVariable(name: "val", scope: !3087, file: !751, line: 1014, type: !7, align: 8)
!3087 = distinct !DILexicalBlock(scope: !3073, file: !751, line: 1014, column: 21)
!3088 = !DILocalVariable(name: "residual", scope: !3089, file: !751, line: 1015, type: !2336, align: 8)
!3089 = distinct !DILexicalBlock(scope: !3073, file: !751, line: 1015, column: 55)
!3090 = !DILocalVariable(name: "val", scope: !3091, file: !751, line: 1015, type: !7, align: 8)
!3091 = distinct !DILexicalBlock(scope: !3073, file: !751, line: 1015, column: 21)
!3092 = !DILocalVariable(name: "residual", scope: !3093, file: !751, line: 1019, type: !2336, align: 8)
!3093 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1019, column: 53)
!3094 = !DILocalVariable(name: "val", scope: !3095, file: !751, line: 1019, type: !7, align: 8)
!3095 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1019, column: 17)
!3096 = !DILocalVariable(name: "residual", scope: !3097, file: !751, line: 1022, type: !2336, align: 8)
!3097 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1022, column: 34)
!3098 = !DILocalVariable(name: "val", scope: !3099, file: !751, line: 1022, type: !7, align: 8)
!3099 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1022, column: 17)
!3100 = !DILocalVariable(name: "residual", scope: !3101, file: !751, line: 1023, type: !2336, align: 8)
!3101 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1023, column: 35)
!3102 = !DILocalVariable(name: "val", scope: !3103, file: !751, line: 1023, type: !7, align: 8)
!3103 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1023, column: 17)
!3104 = !DILocalVariable(name: "residual", scope: !3105, file: !751, line: 1024, type: !2336, align: 8)
!3105 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1024, column: 33)
!3106 = !DILocalVariable(name: "val", scope: !3107, file: !751, line: 1024, type: !7, align: 8)
!3107 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1024, column: 17)
!3108 = !DILocalVariable(name: "residual", scope: !3109, file: !751, line: 1029, type: !2336, align: 8)
!3109 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1029, column: 39)
!3110 = !DILocalVariable(name: "val", scope: !3111, file: !751, line: 1029, type: !7, align: 8)
!3111 = distinct !DILexicalBlock(scope: !2945, file: !751, line: 1029, column: 17)
!3112 = !DILocation(line: 902, column: 19, scope: !2938)
!3113 = !DILocation(line: 621, column: 21, scope: !2951)
!3114 = !DILocation(line: 621, column: 21, scope: !2963)
!3115 = !DILocation(line: 621, column: 21, scope: !2979)
!3116 = !DILocation(line: 600, column: 13, scope: !3067)
!3117 = !DILocation(line: 621, column: 21, scope: !3079)
!3118 = !DILocation(line: 622, column: 50, scope: !2953)
!3119 = !DILocation(line: 622, column: 21, scope: !2955)
!3120 = !DILocation(line: 620, column: 20, scope: !2961)
!3121 = !DILocation(line: 622, column: 50, scope: !2965)
!3122 = !DILocation(line: 622, column: 21, scope: !2967)
!3123 = !DILocation(line: 913, column: 32, scope: !2969)
!3124 = !DILocation(line: 913, column: 17, scope: !2971)
!3125 = !DILocation(line: 622, column: 50, scope: !2981)
!3126 = !DILocation(line: 622, column: 21, scope: !2983)
!3127 = !DILocation(line: 917, column: 59, scope: !2985)
!3128 = !DILocation(line: 917, column: 25, scope: !2987)
!3129 = !DILocation(line: 918, column: 40, scope: !2989)
!3130 = !DILocation(line: 918, column: 25, scope: !2991)
!3131 = !DILocation(line: 922, column: 39, scope: !2993)
!3132 = !DILocation(line: 922, column: 21, scope: !2995)
!3133 = !DILocation(line: 924, column: 34, scope: !2997)
!3134 = !DILocation(line: 924, column: 17, scope: !2999)
!3135 = !DILocation(line: 928, column: 32, scope: !3001)
!3136 = !DILocation(line: 928, column: 17, scope: !3003)
!3137 = !DILocation(line: 930, column: 39, scope: !3005)
!3138 = !DILocation(line: 930, column: 21, scope: !3007)
!3139 = !DILocation(line: 932, column: 41, scope: !3009)
!3140 = !DILocation(line: 932, column: 21, scope: !3011)
!3141 = !DILocation(line: 934, column: 34, scope: !3013)
!3142 = !DILocation(line: 934, column: 17, scope: !3015)
!3143 = !DILocation(line: 938, column: 32, scope: !3017)
!3144 = !DILocation(line: 938, column: 17, scope: !3019)
!3145 = !DILocation(line: 939, column: 34, scope: !3021)
!3146 = !DILocation(line: 939, column: 17, scope: !3023)
!3147 = !DILocation(line: 941, column: 37, scope: !3025)
!3148 = !DILocation(line: 941, column: 21, scope: !3027)
!3149 = !DILocation(line: 942, column: 43, scope: !3029)
!3150 = !DILocation(line: 942, column: 21, scope: !3031)
!3151 = !DILocation(line: 944, column: 32, scope: !3033)
!3152 = !DILocation(line: 944, column: 17, scope: !3035)
!3153 = !DILocation(line: 947, column: 32, scope: !3037)
!3154 = !DILocation(line: 947, column: 17, scope: !3039)
!3155 = !DILocation(line: 948, column: 72, scope: !3043)
!3156 = !DILocation(line: 950, column: 36, scope: !3047)
!3157 = !DILocation(line: 950, column: 21, scope: !3049)
!3158 = !DILocation(line: 952, column: 32, scope: !3051)
!3159 = !DILocation(line: 952, column: 17, scope: !3053)
!3160 = !DILocation(line: 1001, column: 15, scope: !3055)
!3161 = !DILocation(line: 954, column: 21, scope: !3057)
!3162 = !DILocation(line: 1003, column: 35, scope: !3059)
!3163 = !DILocation(line: 1003, column: 17, scope: !3061)
!3164 = !DILocation(line: 1007, column: 19, scope: !3063)
!3165 = !DILocation(line: 1004, column: 17, scope: !3065)
!3166 = !DILocation(line: 601, column: 38, scope: !3069)
!3167 = !DILocation(line: 601, column: 9, scope: !3071)
!3168 = !DILocation(line: 622, column: 50, scope: !3081)
!3169 = !DILocation(line: 622, column: 21, scope: !3083)
!3170 = !DILocation(line: 1014, column: 38, scope: !3085)
!3171 = !DILocation(line: 1014, column: 21, scope: !3087)
!3172 = !DILocation(line: 1015, column: 55, scope: !3089)
!3173 = !DILocation(line: 1015, column: 21, scope: !3091)
!3174 = !DILocation(line: 1019, column: 53, scope: !3093)
!3175 = !DILocation(line: 1019, column: 17, scope: !3095)
!3176 = !DILocation(line: 1022, column: 34, scope: !3097)
!3177 = !DILocation(line: 1022, column: 17, scope: !3099)
!3178 = !DILocation(line: 1023, column: 35, scope: !3101)
!3179 = !DILocation(line: 1023, column: 17, scope: !3103)
!3180 = !DILocation(line: 1024, column: 33, scope: !3105)
!3181 = !DILocation(line: 1024, column: 17, scope: !3107)
!3182 = !DILocation(line: 1029, column: 39, scope: !3109)
!3183 = !DILocation(line: 1029, column: 17, scope: !3111)
!3184 = !DILocation(line: 618, column: 15, scope: !2938)
!3185 = !DILocation(line: 618, column: 9, scope: !2938)
!3186 = !DILocation(line: 627, column: 39, scope: !2938)
!3187 = !DILocation(line: 619, column: 16, scope: !2938)
!3188 = !DILocation(line: 619, column: 16, scope: !2947)
!3189 = !DILocation(line: 619, column: 48, scope: !2947)
!3190 = !DILocation(line: 619, column: 41, scope: !2947)
!3191 = !DILocation(line: 619, column: 35, scope: !2947)
!3192 = !DILocation(line: 621, column: 21, scope: !2947)
!3193 = !DILocation(line: 622, column: 40, scope: !2951)
!3194 = !DILocation(line: 622, column: 30, scope: !2951)
!3195 = !DILocation(line: 622, column: 21, scope: !2951)
!3196 = !DILocation(line: 620, column: 20, scope: !2947)
!3197 = !DILocation(line: 903, column: 13, scope: !2945)
!3198 = !DILocation(line: 620, column: 20, scope: !2949)
!3199 = !DILocation(line: 905, column: 27, scope: !2957)
!3200 = !DILocation(line: 905, column: 16, scope: !2957)
!3201 = !DILocation(line: 905, column: 21, scope: !2957)
!3202 = !DILocation(line: 906, column: 25, scope: !2957)
!3203 = !DILocation(line: 618, column: 15, scope: !2945)
!3204 = !DILocation(line: 618, column: 9, scope: !2945)
!3205 = !DILocation(line: 1035, column: 6, scope: !2938)
!3206 = !DILocation(line: 627, column: 39, scope: !2945)
!3207 = !DILocation(line: 619, column: 16, scope: !2945)
!3208 = !DILocation(line: 619, column: 16, scope: !2959)
!3209 = !DILocation(line: 619, column: 48, scope: !2959)
!3210 = !DILocation(line: 619, column: 41, scope: !2959)
!3211 = !DILocation(line: 619, column: 35, scope: !2959)
!3212 = !DILocation(line: 621, column: 21, scope: !2959)
!3213 = !DILocation(line: 622, column: 40, scope: !2963)
!3214 = !DILocation(line: 622, column: 30, scope: !2963)
!3215 = !DILocation(line: 622, column: 21, scope: !2963)
!3216 = !DILocation(line: 911, column: 9, scope: !2945)
!3217 = !DILocation(line: 1028, column: 37, scope: !2945)
!3218 = !DILocation(line: 1028, column: 46, scope: !2945)
!3219 = !DILocation(line: 1029, column: 22, scope: !2945)
!3220 = !DILocation(line: 1029, column: 17, scope: !2945)
!3221 = !DILocation(line: 913, column: 22, scope: !2945)
!3222 = !DILocation(line: 913, column: 17, scope: !2945)
!3223 = !DILocation(line: 928, column: 22, scope: !2945)
!3224 = !DILocation(line: 928, column: 17, scope: !2945)
!3225 = !DILocation(line: 938, column: 22, scope: !2945)
!3226 = !DILocation(line: 938, column: 17, scope: !2945)
!3227 = !DILocation(line: 947, column: 22, scope: !2945)
!3228 = !DILocation(line: 947, column: 17, scope: !2945)
!3229 = !DILocation(line: 954, column: 26, scope: !2945)
!3230 = !DILocation(line: 954, column: 21, scope: !2945)
!3231 = !DILocation(line: 1003, column: 22, scope: !2945)
!3232 = !DILocation(line: 1003, column: 17, scope: !2945)
!3233 = !DILocation(line: 1019, column: 22, scope: !2945)
!3234 = !DILocation(line: 1019, column: 17, scope: !2945)
!3235 = !DILocation(line: 1022, column: 22, scope: !2945)
!3236 = !DILocation(line: 1022, column: 17, scope: !2945)
!3237 = !DILocation(line: 913, column: 17, scope: !2969)
!3238 = !DILocation(line: 914, column: 25, scope: !2945)
!3239 = !DILocation(line: 914, column: 20, scope: !2945)
!3240 = !DILocation(line: 921, column: 20, scope: !2945)
!3241 = !DILocation(line: 619, column: 16, scope: !2975)
!3242 = !DILocation(line: 619, column: 48, scope: !2975)
!3243 = !DILocation(line: 619, column: 41, scope: !2975)
!3244 = !DILocation(line: 619, column: 35, scope: !2975)
!3245 = !DILocation(line: 621, column: 21, scope: !2975)
!3246 = !DILocation(line: 622, column: 40, scope: !2979)
!3247 = !DILocation(line: 622, column: 30, scope: !2979)
!3248 = !DILocation(line: 622, column: 21, scope: !2979)
!3249 = !DILocation(line: 620, column: 20, scope: !2975)
!3250 = !DILocation(line: 915, column: 25, scope: !2973)
!3251 = !DILocation(line: 620, column: 20, scope: !2977)
!3252 = !DILocation(line: 916, column: 24, scope: !2973)
!3253 = !DILocation(line: 917, column: 30, scope: !2973)
!3254 = !DILocation(line: 917, column: 25, scope: !2973)
!3255 = !DILocation(line: 917, column: 25, scope: !2985)
!3256 = !DILocation(line: 918, column: 30, scope: !2973)
!3257 = !DILocation(line: 918, column: 25, scope: !2973)
!3258 = !DILocation(line: 918, column: 25, scope: !2989)
!3259 = !DILocation(line: 924, column: 22, scope: !2945)
!3260 = !DILocation(line: 924, column: 17, scope: !2945)
!3261 = !DILocation(line: 922, column: 26, scope: !2945)
!3262 = !DILocation(line: 922, column: 21, scope: !2945)
!3263 = !DILocation(line: 922, column: 21, scope: !2993)
!3264 = !DILocation(line: 924, column: 17, scope: !2997)
!3265 = !DILocation(line: 1033, column: 14, scope: !2945)
!3266 = !DILocation(line: 1034, column: 9, scope: !2945)
!3267 = !DILocation(line: 622, column: 21, scope: !2981)
!3268 = !DILocation(line: 623, column: 39, scope: !2979)
!3269 = !DILocation(line: 623, column: 21, scope: !2979)
!3270 = !DILocation(line: 624, column: 28, scope: !2979)
!3271 = !DILocation(line: 624, column: 21, scope: !2979)
!3272 = !DILocation(line: 928, column: 17, scope: !3001)
!3273 = !DILocation(line: 929, column: 20, scope: !2945)
!3274 = !DILocation(line: 932, column: 26, scope: !2945)
!3275 = !DILocation(line: 932, column: 21, scope: !2945)
!3276 = !DILocation(line: 930, column: 26, scope: !2945)
!3277 = !DILocation(line: 930, column: 21, scope: !2945)
!3278 = !DILocation(line: 932, column: 21, scope: !3009)
!3279 = !DILocation(line: 934, column: 22, scope: !2945)
!3280 = !DILocation(line: 934, column: 17, scope: !2945)
!3281 = !DILocation(line: 930, column: 21, scope: !3005)
!3282 = !DILocation(line: 934, column: 17, scope: !3013)
!3283 = !DILocation(line: 938, column: 17, scope: !3017)
!3284 = !DILocation(line: 939, column: 22, scope: !2945)
!3285 = !DILocation(line: 939, column: 17, scope: !2945)
!3286 = !DILocation(line: 939, column: 17, scope: !3021)
!3287 = !DILocation(line: 940, column: 20, scope: !2945)
!3288 = !DILocation(line: 941, column: 26, scope: !2945)
!3289 = !DILocation(line: 941, column: 21, scope: !2945)
!3290 = !DILocation(line: 944, column: 22, scope: !2945)
!3291 = !DILocation(line: 944, column: 17, scope: !2945)
!3292 = !DILocation(line: 941, column: 21, scope: !3025)
!3293 = !DILocation(line: 942, column: 26, scope: !2945)
!3294 = !DILocation(line: 942, column: 21, scope: !2945)
!3295 = !DILocation(line: 942, column: 21, scope: !3029)
!3296 = !DILocation(line: 944, column: 17, scope: !3033)
!3297 = !DILocation(line: 947, column: 17, scope: !3037)
!3298 = !DILocation(line: 948, column: 34, scope: !2945)
!3299 = !DILocation(line: 948, column: 29, scope: !2945)
!3300 = !DILocation(line: 948, column: 29, scope: !3043)
!3301 = !DILocation(line: 948, column: 21, scope: !3041)
!3302 = !DILocation(line: 948, column: 29, scope: !3045)
!3303 = !DILocation(line: 949, column: 20, scope: !3041)
!3304 = !DILocation(line: 950, column: 26, scope: !3041)
!3305 = !DILocation(line: 950, column: 21, scope: !3041)
!3306 = !DILocation(line: 952, column: 22, scope: !3041)
!3307 = !DILocation(line: 952, column: 17, scope: !3041)
!3308 = !DILocation(line: 950, column: 21, scope: !3047)
!3309 = !DILocation(line: 952, column: 17, scope: !3051)
!3310 = !DILocation(line: 954, column: 21, scope: !3055)
!3311 = !DILocation(line: 1003, column: 17, scope: !3059)
!3312 = !DILocation(line: 1004, column: 22, scope: !2945)
!3313 = !DILocation(line: 1004, column: 17, scope: !2945)
!3314 = !DILocation(line: 1004, column: 17, scope: !3063)
!3315 = !DILocation(line: 1009, column: 26, scope: !2945)
!3316 = !DILocation(line: 1009, column: 21, scope: !2945)
!3317 = !DILocation(line: 600, column: 19, scope: !2945)
!3318 = !DILocation(line: 601, column: 28, scope: !3067)
!3319 = !DILocation(line: 601, column: 18, scope: !3067)
!3320 = !DILocation(line: 601, column: 9, scope: !3067)
!3321 = !DILocation(line: 601, column: 9, scope: !3069)
!3322 = !DILocation(line: 602, column: 27, scope: !3067)
!3323 = !DILocation(line: 602, column: 9, scope: !3067)
!3324 = !DILocation(line: 603, column: 16, scope: !3067)
!3325 = !DILocation(line: 603, column: 9, scope: !3067)
!3326 = !DILocation(line: 619, column: 16, scope: !3075)
!3327 = !DILocation(line: 619, column: 48, scope: !3075)
!3328 = !DILocation(line: 619, column: 41, scope: !3075)
!3329 = !DILocation(line: 619, column: 35, scope: !3075)
!3330 = !DILocation(line: 621, column: 21, scope: !3075)
!3331 = !DILocation(line: 622, column: 40, scope: !3079)
!3332 = !DILocation(line: 622, column: 30, scope: !3079)
!3333 = !DILocation(line: 622, column: 21, scope: !3079)
!3334 = !DILocation(line: 620, column: 20, scope: !3075)
!3335 = !DILocation(line: 1012, column: 21, scope: !3073)
!3336 = !DILocation(line: 620, column: 20, scope: !3077)
!3337 = !DILocation(line: 1013, column: 20, scope: !3073)
!3338 = !DILocation(line: 1014, column: 26, scope: !3073)
!3339 = !DILocation(line: 1014, column: 21, scope: !3073)
!3340 = !DILocation(line: 1014, column: 21, scope: !3085)
!3341 = !DILocation(line: 1015, column: 26, scope: !3073)
!3342 = !DILocation(line: 1015, column: 21, scope: !3073)
!3343 = !DILocation(line: 1015, column: 21, scope: !3089)
!3344 = !DILocation(line: 622, column: 21, scope: !3081)
!3345 = !DILocation(line: 623, column: 39, scope: !3079)
!3346 = !DILocation(line: 623, column: 21, scope: !3079)
!3347 = !DILocation(line: 624, column: 28, scope: !3079)
!3348 = !DILocation(line: 624, column: 21, scope: !3079)
!3349 = !DILocation(line: 1019, column: 17, scope: !3093)
!3350 = !DILocation(line: 1022, column: 17, scope: !3097)
!3351 = !DILocation(line: 1023, column: 22, scope: !2945)
!3352 = !DILocation(line: 1023, column: 17, scope: !2945)
!3353 = !DILocation(line: 1023, column: 17, scope: !3101)
!3354 = !DILocation(line: 1024, column: 22, scope: !2945)
!3355 = !DILocation(line: 1024, column: 17, scope: !2945)
!3356 = !DILocation(line: 1024, column: 17, scope: !3105)
!3357 = !DILocation(line: 1029, column: 17, scope: !3109)
!3358 = !DILocation(line: 622, column: 21, scope: !2965)
!3359 = !DILocation(line: 623, column: 39, scope: !2963)
!3360 = !DILocation(line: 623, column: 21, scope: !2963)
!3361 = !DILocation(line: 624, column: 28, scope: !2963)
!3362 = !DILocation(line: 624, column: 21, scope: !2963)
!3363 = !DILocation(line: 622, column: 21, scope: !2953)
!3364 = !DILocation(line: 623, column: 39, scope: !2951)
!3365 = !DILocation(line: 623, column: 21, scope: !2951)
!3366 = !DILocation(line: 624, column: 28, scope: !2951)
!3367 = !DILocation(line: 624, column: 21, scope: !2951)
!3368 = !DILocation(line: 0, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !2938, file: !626, discriminator: 0)
!3370 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h220257e452c6950fE", scope: !3371, file: !751, line: 1004, type: !3372, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !3375)
!3371 = !DINamespace(name: "print_type", scope: !2912)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{!1079, !3374, !2323}
!3374 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !3371, file: !2, align: 8, elements: !14, identifier: "b6a67e070a2bc137fce0e743af6d848")
!3375 = !{!3376, !3377, !3379, !3381}
!3376 = !DILocalVariable(name: "this", arg: 2, scope: !3370, file: !751, line: 1004, type: !2323)
!3377 = !DILocalVariable(name: "residual", scope: !3378, file: !751, line: 1005, type: !2336, align: 8)
!3378 = distinct !DILexicalBlock(scope: !3370, file: !751, line: 1005, column: 70)
!3379 = !DILocalVariable(name: "val", scope: !3380, file: !751, line: 1005, type: !9, align: 32)
!3380 = distinct !DILexicalBlock(scope: !3370, file: !751, line: 1005, column: 21)
!3381 = !DILocalVariable(arg: 1, scope: !3370, file: !751, line: 1004, type: !3374)
!3382 = !DILocation(line: 1004, column: 32, scope: !3370)
!3383 = !DILocation(line: 1004, column: 33, scope: !3370)
!3384 = !DILocation(line: 1005, column: 70, scope: !3378)
!3385 = !DILocation(line: 1005, column: 26, scope: !3370)
!3386 = !DILocation(line: 1005, column: 21, scope: !3370)
!3387 = !DILocation(line: 1005, column: 21, scope: !3378)
!3388 = !DILocation(line: 1005, column: 21, scope: !3380)
!3389 = !DILocation(line: 1006, column: 21, scope: !3370)
!3390 = !DILocation(line: 1007, column: 18, scope: !3370)
!3391 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h6f6409beafbd7d6dE", scope: !3371, file: !751, line: 954, type: !3392, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !3395)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{!1079, !3394, !2323}
!3394 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !3371, file: !2, align: 8, elements: !14, identifier: "9d4dcabecb00c7ede1f7d7e37871afdb")
!3395 = !{!3396, !3397, !3399, !3401, !3403, !3405, !3407, !3409, !3411, !3413, !3415, !3417, !3419, !3421, !3423, !3425, !3427, !3429, !3455, !3457, !3459, !3461, !3463, !3465, !3467, !3469, !3471, !3473, !3475, !3477, !3479, !3481, !3483, !3485, !3487, !3489, !3491, !3493, !3495}
!3396 = !DILocalVariable(name: "this", arg: 2, scope: !3391, file: !751, line: 954, type: !2323)
!3397 = !DILocalVariable(name: "is_unsafe", scope: !3398, file: !751, line: 955, type: !706, align: 8)
!3398 = distinct !DILexicalBlock(scope: !3391, file: !751, line: 955, column: 17)
!3399 = !DILocalVariable(name: "abi", scope: !3400, file: !751, line: 956, type: !1256, align: 32)
!3400 = distinct !DILexicalBlock(scope: !3398, file: !751, line: 956, column: 17)
!3401 = !DILocalVariable(name: "abi", scope: !3402, file: !751, line: 960, type: !1317, align: 32)
!3402 = distinct !DILexicalBlock(scope: !3398, file: !751, line: 960, column: 25)
!3403 = !DILocalVariable(name: "parser", scope: !3404, file: !751, line: 619, type: !1726, align: 32)
!3404 = distinct !DILexicalBlock(scope: !3398, file: !751, line: 619, column: 13)
!3405 = !DILocalVariable(name: "x", scope: !3406, file: !751, line: 620, type: !1317, align: 32)
!3406 = distinct !DILexicalBlock(scope: !3404, file: !751, line: 620, column: 17)
!3407 = !DILocalVariable(name: "err", scope: !3408, file: !751, line: 621, type: !87, align: 8)
!3408 = distinct !DILexicalBlock(scope: !3404, file: !751, line: 621, column: 17)
!3409 = !DILocalVariable(name: "residual", scope: !3410, file: !751, line: 622, type: !2336, align: 8)
!3410 = distinct !DILexicalBlock(scope: !3408, file: !751, line: 622, column: 50)
!3411 = !DILocalVariable(name: "val", scope: !3412, file: !751, line: 622, type: !7, align: 8)
!3412 = distinct !DILexicalBlock(scope: !3408, file: !751, line: 622, column: 21)
!3413 = !DILocalVariable(name: "err", scope: !3414, file: !751, line: 600, type: !87, align: 8)
!3414 = distinct !DILexicalBlock(scope: !3402, file: !751, line: 600, column: 9)
!3415 = !DILocalVariable(name: "residual", scope: !3416, file: !751, line: 601, type: !2336, align: 8)
!3416 = distinct !DILexicalBlock(scope: !3414, file: !751, line: 601, column: 38)
!3417 = !DILocalVariable(name: "val", scope: !3418, file: !751, line: 601, type: !7, align: 8)
!3418 = distinct !DILexicalBlock(scope: !3414, file: !751, line: 601, column: 9)
!3419 = !DILocalVariable(name: "residual", scope: !3420, file: !751, line: 971, type: !2336, align: 8)
!3420 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 971, column: 42)
!3421 = !DILocalVariable(name: "val", scope: !3422, file: !751, line: 971, type: !7, align: 8)
!3422 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 971, column: 21)
!3423 = !DILocalVariable(name: "abi", scope: !3424, file: !751, line: 974, type: !659, align: 32)
!3424 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 974, column: 40)
!3425 = !DILocalVariable(name: "residual", scope: !3426, file: !751, line: 975, type: !2336, align: 8)
!3426 = distinct !DILexicalBlock(scope: !3424, file: !751, line: 975, column: 44)
!3427 = !DILocalVariable(name: "val", scope: !3428, file: !751, line: 975, type: !7, align: 8)
!3428 = distinct !DILexicalBlock(scope: !3424, file: !751, line: 975, column: 21)
!3429 = !DILocalVariable(name: "parts", scope: !3430, file: !751, line: 979, type: !3431, align: 32)
!3430 = distinct !DILexicalBlock(scope: !3424, file: !751, line: 979, column: 21)
!3431 = !DICompositeType(tag: DW_TAG_structure_type, name: "Split<char>", scope: !521, file: !2, size: 320, align: 32, flags: DIFlagPublic, elements: !3432, templateParams: !3453, identifier: "d5444b488bf72d8a60de92c6f79dcae")
!3432 = !{!3433}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3431, file: !2, baseType: !3434, size: 320, align: 32, flags: DIFlagProtected)
!3434 = !DICompositeType(tag: DW_TAG_structure_type, name: "SplitInternal<char>", scope: !521, file: !2, size: 320, align: 32, flags: DIFlagProtected, elements: !3435, templateParams: !3453, identifier: "c7b5b531c07ff0b130eb07b56624c9ef")
!3435 = !{!3436, !3437, !3438, !3451, !3452}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3434, file: !2, baseType: !9, size: 32, align: 32, offset: 224, flags: DIFlagProtected)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3434, file: !2, baseType: !9, size: 32, align: 32, offset: 256, flags: DIFlagProtected)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "matcher", scope: !3434, file: !2, baseType: !3439, size: 224, align: 32, flags: DIFlagProtected)
!3439 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharSearcher", scope: !3440, file: !2, size: 224, align: 32, flags: DIFlagPublic, elements: !3441, templateParams: !14, identifier: "c181ce04ce2038d46577bc318d72ccd3")
!3440 = !DINamespace(name: "pattern", scope: !522)
!3441 = !{!3442, !3443, !3444, !3445, !3446, !3447}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !3439, file: !2, baseType: !659, size: 64, align: 32, offset: 32, flags: DIFlagPrivate)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "finger", scope: !3439, file: !2, baseType: !9, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "finger_back", scope: !3439, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !3439, file: !2, baseType: !252, size: 32, align: 32, flags: DIFlagPrivate)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_size", scope: !3439, file: !2, baseType: !13, size: 8, align: 8, offset: 192, flags: DIFlagPrivate)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_encoded", scope: !3439, file: !2, baseType: !3448, size: 32, align: 8, offset: 160, flags: DIFlagPrivate)
!3448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 32, align: 8, elements: !3449)
!3449 = !{!3450}
!3450 = !DISubrange(count: 4, lowerBound: 0)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "allow_trailing_empty", scope: !3434, file: !2, baseType: !706, size: 8, align: 8, offset: 288, flags: DIFlagProtected)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !3434, file: !2, baseType: !706, size: 8, align: 8, offset: 296, flags: DIFlagProtected)
!3453 = !{!3454}
!3454 = !DITemplateTypeParameter(name: "P", type: !252)
!3455 = !DILocalVariable(name: "residual", scope: !3456, file: !751, line: 980, type: !2336, align: 8)
!3456 = distinct !DILexicalBlock(scope: !3430, file: !751, line: 980, column: 54)
!3457 = !DILocalVariable(name: "val", scope: !3458, file: !751, line: 980, type: !7, align: 8)
!3458 = distinct !DILexicalBlock(scope: !3430, file: !751, line: 980, column: 21)
!3459 = !DILocalVariable(name: "iter", scope: !3460, file: !751, line: 981, type: !3431, align: 32)
!3460 = distinct !DILexicalBlock(scope: !3430, file: !751, line: 981, column: 21)
!3461 = !DILocalVariable(name: "part", scope: !3462, file: !751, line: 981, type: !659, align: 32)
!3462 = distinct !DILexicalBlock(scope: !3460, file: !751, line: 981, column: 39)
!3463 = !DILocalVariable(name: "residual", scope: !3464, file: !751, line: 982, type: !2336, align: 8)
!3464 = distinct !DILexicalBlock(scope: !3462, file: !751, line: 982, column: 40)
!3465 = !DILocalVariable(name: "val", scope: !3466, file: !751, line: 982, type: !7, align: 8)
!3466 = distinct !DILexicalBlock(scope: !3462, file: !751, line: 982, column: 25)
!3467 = !DILocalVariable(name: "residual", scope: !3468, file: !751, line: 983, type: !2336, align: 8)
!3468 = distinct !DILexicalBlock(scope: !3462, file: !751, line: 983, column: 41)
!3469 = !DILocalVariable(name: "val", scope: !3470, file: !751, line: 983, type: !7, align: 8)
!3470 = distinct !DILexicalBlock(scope: !3462, file: !751, line: 983, column: 25)
!3471 = !DILocalVariable(name: "residual", scope: !3472, file: !751, line: 986, type: !2336, align: 8)
!3472 = distinct !DILexicalBlock(scope: !3430, file: !751, line: 986, column: 38)
!3473 = !DILocalVariable(name: "val", scope: !3474, file: !751, line: 986, type: !7, align: 8)
!3474 = distinct !DILexicalBlock(scope: !3430, file: !751, line: 986, column: 21)
!3475 = !DILocalVariable(name: "residual", scope: !3476, file: !751, line: 989, type: !2336, align: 8)
!3476 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 989, column: 34)
!3477 = !DILocalVariable(name: "val", scope: !3478, file: !751, line: 989, type: !7, align: 8)
!3478 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 989, column: 17)
!3479 = !DILocalVariable(name: "residual", scope: !3480, file: !751, line: 990, type: !2336, align: 8)
!3480 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 990, column: 60)
!3481 = !DILocalVariable(name: "val", scope: !3482, file: !751, line: 990, type: !9, align: 32)
!3482 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 990, column: 17)
!3483 = !DILocalVariable(name: "residual", scope: !3484, file: !751, line: 991, type: !2336, align: 8)
!3484 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 991, column: 32)
!3485 = !DILocalVariable(name: "val", scope: !3486, file: !751, line: 991, type: !7, align: 8)
!3486 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 991, column: 17)
!3487 = !DILocalVariable(name: "residual", scope: !3488, file: !751, line: 996, type: !2336, align: 8)
!3488 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 996, column: 39)
!3489 = !DILocalVariable(name: "val", scope: !3490, file: !751, line: 996, type: !7, align: 8)
!3490 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 996, column: 21)
!3491 = !DILocalVariable(name: "residual", scope: !3492, file: !751, line: 997, type: !2336, align: 8)
!3492 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 997, column: 38)
!3493 = !DILocalVariable(name: "val", scope: !3494, file: !751, line: 997, type: !7, align: 8)
!3494 = distinct !DILexicalBlock(scope: !3400, file: !751, line: 997, column: 21)
!3495 = !DILocalVariable(arg: 1, scope: !3391, file: !751, line: 954, type: !3394)
!3496 = !DILocation(line: 954, column: 36, scope: !3391)
!3497 = !DILocation(line: 954, column: 37, scope: !3391)
!3498 = !DILocation(line: 956, column: 21, scope: !3400)
!3499 = !DILocation(line: 960, column: 29, scope: !3402)
!3500 = !DILocation(line: 620, column: 20, scope: !3406)
!3501 = !DILocation(line: 621, column: 21, scope: !3408)
!3502 = !DILocation(line: 600, column: 13, scope: !3414)
!3503 = !DILocation(line: 979, column: 25, scope: !3430)
!3504 = !DILocation(line: 981, column: 33, scope: !3460)
!3505 = !DILocation(line: 622, column: 50, scope: !3410)
!3506 = !DILocation(line: 622, column: 21, scope: !3412)
!3507 = !DILocation(line: 601, column: 38, scope: !3416)
!3508 = !DILocation(line: 601, column: 9, scope: !3418)
!3509 = !DILocation(line: 971, column: 42, scope: !3420)
!3510 = !DILocation(line: 971, column: 21, scope: !3422)
!3511 = !DILocation(line: 975, column: 44, scope: !3426)
!3512 = !DILocation(line: 975, column: 21, scope: !3428)
!3513 = !DILocation(line: 980, column: 54, scope: !3456)
!3514 = !DILocation(line: 980, column: 21, scope: !3458)
!3515 = !DILocation(line: 982, column: 40, scope: !3464)
!3516 = !DILocation(line: 982, column: 25, scope: !3466)
!3517 = !DILocation(line: 983, column: 41, scope: !3468)
!3518 = !DILocation(line: 983, column: 25, scope: !3470)
!3519 = !DILocation(line: 986, column: 38, scope: !3472)
!3520 = !DILocation(line: 986, column: 21, scope: !3474)
!3521 = !DILocation(line: 989, column: 34, scope: !3476)
!3522 = !DILocation(line: 989, column: 17, scope: !3478)
!3523 = !DILocation(line: 990, column: 60, scope: !3480)
!3524 = !DILocation(line: 991, column: 32, scope: !3484)
!3525 = !DILocation(line: 991, column: 17, scope: !3486)
!3526 = !DILocation(line: 996, column: 39, scope: !3488)
!3527 = !DILocation(line: 996, column: 21, scope: !3490)
!3528 = !DILocation(line: 997, column: 38, scope: !3492)
!3529 = !DILocation(line: 997, column: 21, scope: !3494)
!3530 = !DILocation(line: 955, column: 38, scope: !3391)
!3531 = !DILocation(line: 955, column: 21, scope: !3398)
!3532 = !DILocation(line: 956, column: 35, scope: !3398)
!3533 = !DILocation(line: 956, column: 30, scope: !3398)
!3534 = !DILocation(line: 967, column: 21, scope: !3398)
!3535 = !DILocation(line: 956, column: 27, scope: !3398)
!3536 = !DILocation(line: 957, column: 29, scope: !3398)
!3537 = !DILocation(line: 957, column: 24, scope: !3398)
!3538 = !DILocation(line: 970, column: 20, scope: !3400)
!3539 = !DILocation(line: 618, column: 15, scope: !3398)
!3540 = !DILocation(line: 618, column: 9, scope: !3398)
!3541 = !DILocation(line: 958, column: 25, scope: !3398)
!3542 = !DILocation(line: 957, column: 21, scope: !3398)
!3543 = !DILocation(line: 627, column: 39, scope: !3398)
!3544 = !DILocation(line: 619, column: 16, scope: !3398)
!3545 = !DILocation(line: 619, column: 16, scope: !3404)
!3546 = !DILocation(line: 619, column: 48, scope: !3404)
!3547 = !DILocation(line: 619, column: 41, scope: !3404)
!3548 = !DILocation(line: 619, column: 35, scope: !3404)
!3549 = !DILocation(line: 621, column: 21, scope: !3404)
!3550 = !DILocation(line: 622, column: 40, scope: !3408)
!3551 = !DILocation(line: 622, column: 30, scope: !3408)
!3552 = !DILocation(line: 622, column: 21, scope: !3408)
!3553 = !DILocation(line: 620, column: 20, scope: !3404)
!3554 = !DILocation(line: 961, column: 28, scope: !3402)
!3555 = !DILocation(line: 961, column: 38, scope: !3402)
!3556 = !DILocation(line: 961, column: 53, scope: !3402)
!3557 = !DILocation(line: 961, column: 66, scope: !3402)
!3558 = !DILocation(line: 600, column: 19, scope: !3402)
!3559 = !DILocation(line: 601, column: 28, scope: !3414)
!3560 = !DILocation(line: 601, column: 18, scope: !3414)
!3561 = !DILocation(line: 601, column: 9, scope: !3414)
!3562 = !DILocation(line: 964, column: 30, scope: !3402)
!3563 = !DILocation(line: 964, column: 25, scope: !3402)
!3564 = !DILocation(line: 601, column: 9, scope: !3416)
!3565 = !DILocation(line: 602, column: 27, scope: !3414)
!3566 = !DILocation(line: 602, column: 9, scope: !3414)
!3567 = !DILocation(line: 603, column: 16, scope: !3414)
!3568 = !DILocation(line: 603, column: 9, scope: !3414)
!3569 = !DILocation(line: 1001, column: 14, scope: !3391)
!3570 = !DILocation(line: 622, column: 21, scope: !3410)
!3571 = !DILocation(line: 623, column: 39, scope: !3408)
!3572 = !DILocation(line: 623, column: 21, scope: !3408)
!3573 = !DILocation(line: 624, column: 28, scope: !3408)
!3574 = !DILocation(line: 624, column: 21, scope: !3408)
!3575 = !DILocation(line: 974, column: 36, scope: !3424)
!3576 = !DILocation(line: 974, column: 24, scope: !3424)
!3577 = !DILocation(line: 971, column: 26, scope: !3400)
!3578 = !DILocation(line: 971, column: 21, scope: !3400)
!3579 = !DILocation(line: 971, column: 21, scope: !3420)
!3580 = !DILocation(line: 974, column: 29, scope: !3424)
!3581 = !DILocation(line: 975, column: 26, scope: !3424)
!3582 = !DILocation(line: 975, column: 21, scope: !3424)
!3583 = !DILocation(line: 989, column: 22, scope: !3400)
!3584 = !DILocation(line: 989, column: 17, scope: !3400)
!3585 = !DILocation(line: 975, column: 21, scope: !3426)
!3586 = !DILocation(line: 979, column: 41, scope: !3424)
!3587 = !DILocation(line: 980, column: 38, scope: !3430)
!3588 = !DILocalVariable(name: "self", arg: 1, scope: !3589, file: !807, line: 1012, type: !1256)
!3589 = distinct !DISubprogram(name: "unwrap<&str>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE", scope: !1256, file: !807, line: 1012, type: !3590, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !840, declaration: !3592, retainedNodes: !3593)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!659, !1256, !823}
!3592 = !DISubprogram(name: "unwrap<&str>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h49ce1089e40006cbE", scope: !1256, file: !807, line: 1012, type: !3590, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !840)
!3593 = !{!3588, !3594}
!3594 = !DILocalVariable(name: "val", scope: !3595, file: !807, line: 1014, type: !659, align: 32)
!3595 = distinct !DILexicalBlock(scope: !3589, file: !807, line: 1014, column: 13)
!3596 = !DILocation(line: 1012, column: 25, scope: !3589, inlinedAt: !3597)
!3597 = distinct !DILocation(line: 980, column: 45, scope: !3430)
!3598 = !DILocation(line: 1013, column: 15, scope: !3589, inlinedAt: !3597)
!3599 = !DILocation(line: 1013, column: 9, scope: !3589, inlinedAt: !3597)
!3600 = !DILocation(line: 1015, column: 21, scope: !3589, inlinedAt: !3597)
!3601 = !DILocation(line: 1014, column: 18, scope: !3589, inlinedAt: !3597)
!3602 = !DILocation(line: 1014, column: 18, scope: !3595, inlinedAt: !3597)
!3603 = !DILocation(line: 1017, column: 6, scope: !3589, inlinedAt: !3597)
!3604 = !DILocation(line: 980, column: 45, scope: !3430)
!3605 = !DILocation(line: 980, column: 26, scope: !3430)
!3606 = !DILocation(line: 980, column: 21, scope: !3430)
!3607 = !DILocation(line: 980, column: 21, scope: !3456)
!3608 = !DILocation(line: 981, column: 33, scope: !3430)
!3609 = !DILocation(line: 981, column: 21, scope: !3460)
!3610 = !DILocation(line: 981, column: 25, scope: !3460)
!3611 = !DILocation(line: 981, column: 25, scope: !3462)
!3612 = !DILocation(line: 982, column: 30, scope: !3462)
!3613 = !DILocation(line: 982, column: 25, scope: !3462)
!3614 = !DILocation(line: 986, column: 26, scope: !3430)
!3615 = !DILocation(line: 986, column: 21, scope: !3430)
!3616 = !DILocation(line: 986, column: 21, scope: !3472)
!3617 = !DILocation(line: 982, column: 25, scope: !3464)
!3618 = !DILocation(line: 983, column: 30, scope: !3462)
!3619 = !DILocation(line: 983, column: 25, scope: !3462)
!3620 = !DILocation(line: 983, column: 25, scope: !3468)
!3621 = !DILocation(line: 989, column: 17, scope: !3476)
!3622 = !DILocation(line: 990, column: 22, scope: !3400)
!3623 = !DILocation(line: 990, column: 17, scope: !3400)
!3624 = !DILocation(line: 990, column: 17, scope: !3480)
!3625 = !DILocation(line: 990, column: 17, scope: !3482)
!3626 = !DILocation(line: 991, column: 22, scope: !3400)
!3627 = !DILocation(line: 991, column: 17, scope: !3400)
!3628 = !DILocation(line: 991, column: 17, scope: !3484)
!3629 = !DILocation(line: 993, column: 25, scope: !3400)
!3630 = !DILocation(line: 993, column: 20, scope: !3400)
!3631 = !DILocation(line: 996, column: 26, scope: !3400)
!3632 = !DILocation(line: 996, column: 21, scope: !3400)
!3633 = !DILocation(line: 1000, column: 17, scope: !3400)
!3634 = !DILocation(line: 996, column: 21, scope: !3488)
!3635 = !DILocation(line: 997, column: 26, scope: !3400)
!3636 = !DILocation(line: 997, column: 21, scope: !3400)
!3637 = !DILocation(line: 997, column: 21, scope: !3492)
!3638 = !DILocation(line: 0, scope: !3639)
!3639 = !DILexicalBlockFile(scope: !3391, file: !626, discriminator: 0)
!3640 = distinct !DISubprogram(name: "{closure#2}", linkageName: "_ZN14rustc_demangle2v07Printer10print_type28_$u7b$$u7b$closure$u7d$$u7d$17h75617aadb88e893eE", scope: !3371, file: !751, line: 1028, type: !3641, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !3644)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{null, !3643, !1726}
!3643 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}", scope: !3371, file: !2, align: 8, elements: !14, identifier: "cd2db772262ec3266de322d3121fca47")
!3644 = !{!3645, !3646}
!3645 = !DILocalVariable(name: "p", arg: 2, scope: !3640, file: !751, line: 1028, type: !1726)
!3646 = !DILocalVariable(arg: 1, scope: !3640, file: !751, line: 1028, type: !3643)
!3647 = !DILocation(line: 1028, column: 50, scope: !3640)
!3648 = !DILocation(line: 1028, column: 51, scope: !3640)
!3649 = !DILocation(line: 1028, column: 54, scope: !3640)
!3650 = !DILocation(line: 1028, column: 65, scope: !3640)
!3651 = distinct !DISubprogram(name: "print_const", linkageName: "_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE", scope: !2303, file: !751, line: 1117, type: !2321, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !3652, retainedNodes: !3653)
!3652 = !DISubprogram(name: "print_const", linkageName: "_ZN14rustc_demangle2v07Printer11print_const17h280692eaad221a9fE", scope: !2303, file: !751, line: 1117, type: !2321, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!3653 = !{!3654, !3655, !3656, !3658, !3660, !3662, !3664, !3666, !3668, !3670, !3672, !3674, !3676, !3678, !3680, !3688, !3690, !3692, !3694, !3696, !3698, !3700, !3702, !3704, !3706, !3708, !3710, !3712, !3714, !3716, !3718, !3720, !3722, !3724, !3726, !3728, !3730, !3732, !3734, !3736, !3738, !3740, !3742, !3744, !3746, !3748, !3750, !3752, !3754, !3756, !3758, !3760, !3762, !3764, !3766, !3768, !3770, !3772, !3774, !3776, !3778, !3780, !3782, !3784, !3786, !3788, !3790, !3792, !3794, !3796, !3798, !3800, !3802, !3804, !3806, !3808, !3810, !3812, !3814, !3816, !3818, !3820, !3822, !3824, !3826, !3828, !3830, !3832, !3834, !3836, !3838, !3840, !3842, !3844, !3846, !3848, !3850, !3852, !3854, !3856, !3858, !3860, !3862, !3864, !3866, !3868, !3870, !3872, !3874, !3876, !3878, !3880, !3882}
!3654 = !DILocalVariable(name: "self", arg: 1, scope: !3651, file: !751, line: 1117, type: !2323)
!3655 = !DILocalVariable(name: "in_value", arg: 2, scope: !3651, file: !751, line: 1117, type: !706)
!3656 = !DILocalVariable(name: "tag", scope: !3657, file: !751, line: 1118, type: !13, align: 8)
!3657 = distinct !DILexicalBlock(scope: !3651, file: !751, line: 1118, column: 9)
!3658 = !DILocalVariable(name: "parser", scope: !3659, file: !751, line: 619, type: !1726, align: 32)
!3659 = distinct !DILexicalBlock(scope: !3651, file: !751, line: 619, column: 13)
!3660 = !DILocalVariable(name: "x", scope: !3661, file: !751, line: 620, type: !13, align: 8)
!3661 = distinct !DILexicalBlock(scope: !3659, file: !751, line: 620, column: 17)
!3662 = !DILocalVariable(name: "err", scope: !3663, file: !751, line: 621, type: !87, align: 8)
!3663 = distinct !DILexicalBlock(scope: !3659, file: !751, line: 621, column: 17)
!3664 = !DILocalVariable(name: "residual", scope: !3665, file: !751, line: 622, type: !2336, align: 8)
!3665 = distinct !DILexicalBlock(scope: !3663, file: !751, line: 622, column: 50)
!3666 = !DILocalVariable(name: "val", scope: !3667, file: !751, line: 622, type: !7, align: 8)
!3667 = distinct !DILexicalBlock(scope: !3663, file: !751, line: 622, column: 21)
!3668 = !DILocalVariable(name: "parser", scope: !3669, file: !751, line: 619, type: !1726, align: 32)
!3669 = distinct !DILexicalBlock(scope: !3657, file: !751, line: 619, column: 13)
!3670 = !DILocalVariable(name: "x", scope: !3671, file: !751, line: 620, type: !7, align: 8)
!3671 = distinct !DILexicalBlock(scope: !3669, file: !751, line: 620, column: 17)
!3672 = !DILocalVariable(name: "err", scope: !3673, file: !751, line: 621, type: !87, align: 8)
!3673 = distinct !DILexicalBlock(scope: !3669, file: !751, line: 621, column: 17)
!3674 = !DILocalVariable(name: "residual", scope: !3675, file: !751, line: 622, type: !2336, align: 8)
!3675 = distinct !DILexicalBlock(scope: !3673, file: !751, line: 622, column: 50)
!3676 = !DILocalVariable(name: "val", scope: !3677, file: !751, line: 622, type: !7, align: 8)
!3677 = distinct !DILexicalBlock(scope: !3673, file: !751, line: 622, column: 21)
!3678 = !DILocalVariable(name: "opened_brace", scope: !3679, file: !751, line: 1128, type: !706, align: 8)
!3679 = distinct !DILexicalBlock(scope: !3657, file: !751, line: 1128, column: 9)
!3680 = !DILocalVariable(name: "open_brace_if_outside_expr", scope: !3681, file: !751, line: 1129, type: !3682, align: 32)
!3681 = distinct !DILexicalBlock(scope: !3679, file: !751, line: 1129, column: 9)
!3682 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !3683, file: !2, size: 64, align: 32, elements: !3684, templateParams: !14, identifier: "3e222856da2b39bafd3bb7aebcbbd66f")
!3683 = !DINamespace(name: "print_const", scope: !2912)
!3684 = !{!3685, !3686}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__in_value", scope: !3682, file: !2, baseType: !2918, size: 32, align: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__opened_brace", scope: !3682, file: !2, baseType: !3687, size: 32, align: 32, offset: 32)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bool", baseType: !706, size: 32, align: 32, dwarfAddressSpace: 0)
!3688 = !DILocalVariable(name: "residual", scope: !3689, file: !751, line: 1140, type: !2336, align: 8)
!3689 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1140, column: 36)
!3690 = !DILocalVariable(name: "val", scope: !3691, file: !751, line: 1140, type: !7, align: 8)
!3691 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1140, column: 21)
!3692 = !DILocalVariable(name: "residual", scope: !3693, file: !751, line: 1143, type: !2336, align: 8)
!3693 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1143, column: 82)
!3694 = !DILocalVariable(name: "val", scope: !3695, file: !751, line: 1143, type: !7, align: 8)
!3695 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1143, column: 56)
!3696 = !DILocalVariable(name: "residual", scope: !3697, file: !751, line: 1146, type: !2336, align: 8)
!3697 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1146, column: 36)
!3698 = !DILocalVariable(name: "val", scope: !3699, file: !751, line: 1146, type: !7, align: 8)
!3699 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1146, column: 21)
!3700 = !DILocalVariable(name: "residual", scope: !3701, file: !751, line: 1149, type: !2336, align: 8)
!3701 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1149, column: 43)
!3702 = !DILocalVariable(name: "val", scope: !3703, file: !751, line: 1149, type: !7, align: 8)
!3703 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1149, column: 17)
!3704 = !DILocalVariable(name: "parser", scope: !3705, file: !751, line: 619, type: !1726, align: 32)
!3705 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 619, column: 13)
!3706 = !DILocalVariable(name: "x", scope: !3707, file: !751, line: 620, type: !752, align: 32)
!3707 = distinct !DILexicalBlock(scope: !3705, file: !751, line: 620, column: 17)
!3708 = !DILocalVariable(name: "err", scope: !3709, file: !751, line: 621, type: !87, align: 8)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !751, line: 621, column: 17)
!3710 = !DILocalVariable(name: "residual", scope: !3711, file: !751, line: 622, type: !2336, align: 8)
!3711 = distinct !DILexicalBlock(scope: !3709, file: !751, line: 622, column: 50)
!3712 = !DILocalVariable(name: "val", scope: !3713, file: !751, line: 622, type: !7, align: 8)
!3713 = distinct !DILexicalBlock(scope: !3709, file: !751, line: 622, column: 21)
!3714 = !DILocalVariable(name: "residual", scope: !3715, file: !751, line: 1152, type: !2336, align: 8)
!3715 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1152, column: 47)
!3716 = !DILocalVariable(name: "val", scope: !3717, file: !751, line: 1152, type: !7, align: 8)
!3717 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1152, column: 28)
!3718 = !DILocalVariable(name: "residual", scope: !3719, file: !751, line: 1153, type: !2336, align: 8)
!3719 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1153, column: 46)
!3720 = !DILocalVariable(name: "val", scope: !3721, file: !751, line: 1153, type: !7, align: 8)
!3721 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1153, column: 28)
!3722 = !DILocalVariable(name: "err", scope: !3723, file: !751, line: 600, type: !87, align: 8)
!3723 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 600, column: 9)
!3724 = !DILocalVariable(name: "residual", scope: !3725, file: !751, line: 601, type: !2336, align: 8)
!3725 = distinct !DILexicalBlock(scope: !3723, file: !751, line: 601, column: 38)
!3726 = !DILocalVariable(name: "val", scope: !3727, file: !751, line: 601, type: !7, align: 8)
!3727 = distinct !DILexicalBlock(scope: !3723, file: !751, line: 601, column: 9)
!3728 = !DILocalVariable(name: "valid_char", scope: !3729, file: !751, line: 1157, type: !243, align: 32)
!3729 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1157, column: 17)
!3730 = !DILocalVariable(name: "parser", scope: !3731, file: !751, line: 619, type: !1726, align: 32)
!3731 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 619, column: 13)
!3732 = !DILocalVariable(name: "x", scope: !3733, file: !751, line: 620, type: !752, align: 32)
!3733 = distinct !DILexicalBlock(scope: !3731, file: !751, line: 620, column: 17)
!3734 = !DILocalVariable(name: "err", scope: !3735, file: !751, line: 621, type: !87, align: 8)
!3735 = distinct !DILexicalBlock(scope: !3731, file: !751, line: 621, column: 17)
!3736 = !DILocalVariable(name: "residual", scope: !3737, file: !751, line: 622, type: !2336, align: 8)
!3737 = distinct !DILexicalBlock(scope: !3735, file: !751, line: 622, column: 50)
!3738 = !DILocalVariable(name: "val", scope: !3739, file: !751, line: 622, type: !7, align: 8)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !751, line: 622, column: 21)
!3740 = !DILocalVariable(name: "c", scope: !3741, file: !751, line: 1162, type: !252, align: 32)
!3741 = distinct !DILexicalBlock(scope: !3729, file: !751, line: 1162, column: 21)
!3742 = !DILocalVariable(name: "residual", scope: !3743, file: !751, line: 1162, type: !2336, align: 8)
!3743 = distinct !DILexicalBlock(scope: !3741, file: !751, line: 1162, column: 84)
!3744 = !DILocalVariable(name: "val", scope: !3745, file: !751, line: 1162, type: !7, align: 8)
!3745 = distinct !DILexicalBlock(scope: !3741, file: !751, line: 1162, column: 32)
!3746 = !DILocalVariable(name: "err", scope: !3747, file: !751, line: 600, type: !87, align: 8)
!3747 = distinct !DILexicalBlock(scope: !3729, file: !751, line: 600, column: 9)
!3748 = !DILocalVariable(name: "residual", scope: !3749, file: !751, line: 601, type: !2336, align: 8)
!3749 = distinct !DILexicalBlock(scope: !3747, file: !751, line: 601, column: 38)
!3750 = !DILocalVariable(name: "val", scope: !3751, file: !751, line: 601, type: !7, align: 8)
!3751 = distinct !DILexicalBlock(scope: !3747, file: !751, line: 601, column: 9)
!3752 = !DILocalVariable(name: "residual", scope: !3753, file: !751, line: 1170, type: !2336, align: 8)
!3753 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1170, column: 49)
!3754 = !DILocalVariable(name: "val", scope: !3755, file: !751, line: 1170, type: !7, align: 8)
!3755 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1170, column: 17)
!3756 = !DILocalVariable(name: "residual", scope: !3757, file: !751, line: 1171, type: !2336, align: 8)
!3757 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1171, column: 32)
!3758 = !DILocalVariable(name: "val", scope: !3759, file: !751, line: 1171, type: !7, align: 8)
!3759 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1171, column: 17)
!3760 = !DILocalVariable(name: "residual", scope: !3761, file: !751, line: 1173, type: !2336, align: 8)
!3761 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1173, column: 47)
!3762 = !DILocalVariable(name: "val", scope: !3763, file: !751, line: 1173, type: !7, align: 8)
!3763 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1173, column: 17)
!3764 = !DILocalVariable(name: "residual", scope: !3765, file: !751, line: 1180, type: !2336, align: 8)
!3765 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1180, column: 51)
!3766 = !DILocalVariable(name: "val", scope: !3767, file: !751, line: 1180, type: !7, align: 8)
!3767 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1180, column: 21)
!3768 = !DILocalVariable(name: "residual", scope: !3769, file: !751, line: 1182, type: !2336, align: 8)
!3769 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1182, column: 53)
!3770 = !DILocalVariable(name: "val", scope: !3771, file: !751, line: 1182, type: !7, align: 8)
!3771 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1182, column: 21)
!3772 = !DILocalVariable(name: "residual", scope: !3773, file: !751, line: 1183, type: !2336, align: 8)
!3773 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1183, column: 36)
!3774 = !DILocalVariable(name: "val", scope: !3775, file: !751, line: 1183, type: !7, align: 8)
!3775 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1183, column: 21)
!3776 = !DILocalVariable(name: "residual", scope: !3777, file: !751, line: 1185, type: !2336, align: 8)
!3777 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1185, column: 43)
!3778 = !DILocalVariable(name: "val", scope: !3779, file: !751, line: 1185, type: !7, align: 8)
!3779 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1185, column: 25)
!3780 = !DILocalVariable(name: "residual", scope: !3781, file: !751, line: 1187, type: !2336, align: 8)
!3781 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1187, column: 43)
!3782 = !DILocalVariable(name: "val", scope: !3783, file: !751, line: 1187, type: !7, align: 8)
!3783 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1187, column: 21)
!3784 = !DILocalVariable(name: "residual", scope: !3785, file: !751, line: 1191, type: !2336, align: 8)
!3785 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1191, column: 49)
!3786 = !DILocalVariable(name: "val", scope: !3787, file: !751, line: 1191, type: !7, align: 8)
!3787 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1191, column: 17)
!3788 = !DILocalVariable(name: "residual", scope: !3789, file: !751, line: 1192, type: !2336, align: 8)
!3789 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1192, column: 32)
!3790 = !DILocalVariable(name: "val", scope: !3791, file: !751, line: 1192, type: !7, align: 8)
!3791 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1192, column: 17)
!3792 = !DILocalVariable(name: "residual", scope: !3793, file: !751, line: 1193, type: !2336, align: 8)
!3793 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1193, column: 73)
!3794 = !DILocalVariable(name: "val", scope: !3795, file: !751, line: 1193, type: !9, align: 32)
!3795 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1193, column: 17)
!3796 = !DILocalVariable(name: "residual", scope: !3797, file: !751, line: 1194, type: !2336, align: 8)
!3797 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1194, column: 32)
!3798 = !DILocalVariable(name: "val", scope: !3799, file: !751, line: 1194, type: !7, align: 8)
!3799 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1194, column: 17)
!3800 = !DILocalVariable(name: "residual", scope: !3801, file: !751, line: 1197, type: !2336, align: 8)
!3801 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1197, column: 49)
!3802 = !DILocalVariable(name: "val", scope: !3803, file: !751, line: 1197, type: !7, align: 8)
!3803 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1197, column: 17)
!3804 = !DILocalVariable(name: "residual", scope: !3805, file: !751, line: 1198, type: !2336, align: 8)
!3805 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1198, column: 32)
!3806 = !DILocalVariable(name: "val", scope: !3807, file: !751, line: 1198, type: !7, align: 8)
!3807 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1198, column: 17)
!3808 = !DILocalVariable(name: "count", scope: !3809, file: !751, line: 1199, type: !9, align: 32)
!3809 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1199, column: 17)
!3810 = !DILocalVariable(name: "residual", scope: !3811, file: !751, line: 1199, type: !2336, align: 8)
!3811 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1199, column: 85)
!3812 = !DILocalVariable(name: "val", scope: !3813, file: !751, line: 1199, type: !9, align: 32)
!3813 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1199, column: 29)
!3814 = !DILocalVariable(name: "residual", scope: !3815, file: !751, line: 1201, type: !2336, align: 8)
!3815 = distinct !DILexicalBlock(scope: !3809, file: !751, line: 1201, column: 36)
!3816 = !DILocalVariable(name: "val", scope: !3817, file: !751, line: 1201, type: !7, align: 8)
!3817 = distinct !DILexicalBlock(scope: !3809, file: !751, line: 1201, column: 21)
!3818 = !DILocalVariable(name: "residual", scope: !3819, file: !751, line: 1203, type: !2336, align: 8)
!3819 = distinct !DILexicalBlock(scope: !3809, file: !751, line: 1203, column: 32)
!3820 = !DILocalVariable(name: "val", scope: !3821, file: !751, line: 1203, type: !7, align: 8)
!3821 = distinct !DILexicalBlock(scope: !3809, file: !751, line: 1203, column: 17)
!3822 = !DILocalVariable(name: "residual", scope: !3823, file: !751, line: 1206, type: !2336, align: 8)
!3823 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1206, column: 49)
!3824 = !DILocalVariable(name: "val", scope: !3825, file: !751, line: 1206, type: !7, align: 8)
!3825 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1206, column: 17)
!3826 = !DILocalVariable(name: "residual", scope: !3827, file: !751, line: 1207, type: !2336, align: 8)
!3827 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1207, column: 38)
!3828 = !DILocalVariable(name: "val", scope: !3829, file: !751, line: 1207, type: !7, align: 8)
!3829 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1207, column: 17)
!3830 = !DILocalVariable(name: "parser", scope: !3831, file: !751, line: 619, type: !1726, align: 32)
!3831 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 619, column: 13)
!3832 = !DILocalVariable(name: "x", scope: !3833, file: !751, line: 620, type: !13, align: 8)
!3833 = distinct !DILexicalBlock(scope: !3831, file: !751, line: 620, column: 17)
!3834 = !DILocalVariable(name: "err", scope: !3835, file: !751, line: 621, type: !87, align: 8)
!3835 = distinct !DILexicalBlock(scope: !3831, file: !751, line: 621, column: 17)
!3836 = !DILocalVariable(name: "residual", scope: !3837, file: !751, line: 622, type: !2336, align: 8)
!3837 = distinct !DILexicalBlock(scope: !3835, file: !751, line: 622, column: 50)
!3838 = !DILocalVariable(name: "val", scope: !3839, file: !751, line: 622, type: !7, align: 8)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !751, line: 622, column: 21)
!3840 = !DILocalVariable(name: "residual", scope: !3841, file: !751, line: 1211, type: !2336, align: 8)
!3841 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1211, column: 40)
!3842 = !DILocalVariable(name: "val", scope: !3843, file: !751, line: 1211, type: !7, align: 8)
!3843 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1211, column: 25)
!3844 = !DILocalVariable(name: "residual", scope: !3845, file: !751, line: 1212, type: !2336, align: 8)
!3845 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1212, column: 81)
!3846 = !DILocalVariable(name: "val", scope: !3847, file: !751, line: 1212, type: !9, align: 32)
!3847 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1212, column: 25)
!3848 = !DILocalVariable(name: "residual", scope: !3849, file: !751, line: 1213, type: !2336, align: 8)
!3849 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1213, column: 40)
!3850 = !DILocalVariable(name: "val", scope: !3851, file: !751, line: 1213, type: !7, align: 8)
!3851 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1213, column: 25)
!3852 = !DILocalVariable(name: "residual", scope: !3853, file: !751, line: 1216, type: !2336, align: 8)
!3853 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1216, column: 42)
!3854 = !DILocalVariable(name: "val", scope: !3855, file: !751, line: 1216, type: !7, align: 8)
!3855 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1216, column: 25)
!3856 = !DILocalVariable(name: "residual", scope: !3857, file: !751, line: 1226, type: !2336, align: 8)
!3857 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1226, column: 26)
!3858 = !DILocalVariable(name: "val", scope: !3859, file: !751, line: 1217, type: !9, align: 32)
!3859 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1217, column: 25)
!3860 = !DILocalVariable(name: "residual", scope: !3861, file: !751, line: 1227, type: !2336, align: 8)
!3861 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1227, column: 41)
!3862 = !DILocalVariable(name: "val", scope: !3863, file: !751, line: 1227, type: !7, align: 8)
!3863 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1227, column: 25)
!3864 = !DILocalVariable(name: "err", scope: !3865, file: !751, line: 600, type: !87, align: 8)
!3865 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 600, column: 9)
!3866 = !DILocalVariable(name: "residual", scope: !3867, file: !751, line: 601, type: !2336, align: 8)
!3867 = distinct !DILexicalBlock(scope: !3865, file: !751, line: 601, column: 38)
!3868 = !DILocalVariable(name: "val", scope: !3869, file: !751, line: 601, type: !7, align: 8)
!3869 = distinct !DILexicalBlock(scope: !3865, file: !751, line: 601, column: 9)
!3870 = !DILocalVariable(name: "residual", scope: !3871, file: !751, line: 1233, type: !2336, align: 8)
!3871 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1233, column: 70)
!3872 = !DILocalVariable(name: "val", scope: !3873, file: !751, line: 1233, type: !7, align: 8)
!3873 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1233, column: 17)
!3874 = !DILocalVariable(name: "err", scope: !3875, file: !751, line: 600, type: !87, align: 8)
!3875 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 600, column: 9)
!3876 = !DILocalVariable(name: "residual", scope: !3877, file: !751, line: 601, type: !2336, align: 8)
!3877 = distinct !DILexicalBlock(scope: !3875, file: !751, line: 601, column: 38)
!3878 = !DILocalVariable(name: "val", scope: !3879, file: !751, line: 601, type: !7, align: 8)
!3879 = distinct !DILexicalBlock(scope: !3875, file: !751, line: 601, column: 9)
!3880 = !DILocalVariable(name: "residual", scope: !3881, file: !751, line: 1239, type: !2336, align: 8)
!3881 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1239, column: 28)
!3882 = !DILocalVariable(name: "val", scope: !3883, file: !751, line: 1239, type: !7, align: 8)
!3883 = distinct !DILexicalBlock(scope: !3681, file: !751, line: 1239, column: 13)
!3884 = !DILocation(line: 1117, column: 20, scope: !3651)
!3885 = !DILocation(line: 1117, column: 31, scope: !3651)
!3886 = !DILocation(line: 621, column: 21, scope: !3663)
!3887 = !DILocation(line: 621, column: 21, scope: !3673)
!3888 = !DILocation(line: 1128, column: 13, scope: !3679)
!3889 = !DILocation(line: 1129, column: 13, scope: !3681)
!3890 = !DILocation(line: 621, column: 21, scope: !3709)
!3891 = !DILocation(line: 600, column: 13, scope: !3723)
!3892 = !DILocation(line: 1157, column: 21, scope: !3729)
!3893 = !DILocation(line: 621, column: 21, scope: !3735)
!3894 = !DILocation(line: 600, column: 13, scope: !3747)
!3895 = !DILocation(line: 621, column: 21, scope: !3835)
!3896 = !DILocation(line: 600, column: 13, scope: !3865)
!3897 = !DILocation(line: 600, column: 13, scope: !3875)
!3898 = !DILocation(line: 622, column: 50, scope: !3665)
!3899 = !DILocation(line: 622, column: 21, scope: !3667)
!3900 = !DILocation(line: 620, column: 20, scope: !3671)
!3901 = !DILocation(line: 622, column: 50, scope: !3675)
!3902 = !DILocation(line: 622, column: 21, scope: !3677)
!3903 = !DILocation(line: 1140, column: 36, scope: !3689)
!3904 = !DILocation(line: 1140, column: 21, scope: !3691)
!3905 = !DILocation(line: 1143, column: 82, scope: !3693)
!3906 = !DILocation(line: 1143, column: 56, scope: !3695)
!3907 = !DILocation(line: 1146, column: 36, scope: !3697)
!3908 = !DILocation(line: 1146, column: 21, scope: !3699)
!3909 = !DILocation(line: 1149, column: 43, scope: !3701)
!3910 = !DILocation(line: 1149, column: 17, scope: !3703)
!3911 = !DILocation(line: 622, column: 50, scope: !3711)
!3912 = !DILocation(line: 622, column: 21, scope: !3713)
!3913 = !DILocation(line: 1152, column: 47, scope: !3715)
!3914 = !DILocation(line: 1152, column: 28, scope: !3717)
!3915 = !DILocation(line: 1153, column: 46, scope: !3719)
!3916 = !DILocation(line: 1153, column: 28, scope: !3721)
!3917 = !DILocation(line: 601, column: 38, scope: !3725)
!3918 = !DILocation(line: 601, column: 9, scope: !3727)
!3919 = !DILocation(line: 622, column: 50, scope: !3737)
!3920 = !DILocation(line: 622, column: 21, scope: !3739)
!3921 = !DILocation(line: 1162, column: 84, scope: !3743)
!3922 = !DILocation(line: 1162, column: 32, scope: !3745)
!3923 = !DILocation(line: 601, column: 38, scope: !3749)
!3924 = !DILocation(line: 601, column: 9, scope: !3751)
!3925 = !DILocation(line: 1170, column: 49, scope: !3753)
!3926 = !DILocation(line: 1170, column: 17, scope: !3755)
!3927 = !DILocation(line: 1171, column: 32, scope: !3757)
!3928 = !DILocation(line: 1171, column: 17, scope: !3759)
!3929 = !DILocation(line: 1173, column: 47, scope: !3761)
!3930 = !DILocation(line: 1173, column: 17, scope: !3763)
!3931 = !DILocation(line: 1180, column: 51, scope: !3765)
!3932 = !DILocation(line: 1180, column: 21, scope: !3767)
!3933 = !DILocation(line: 1182, column: 53, scope: !3769)
!3934 = !DILocation(line: 1182, column: 21, scope: !3771)
!3935 = !DILocation(line: 1183, column: 36, scope: !3773)
!3936 = !DILocation(line: 1183, column: 21, scope: !3775)
!3937 = !DILocation(line: 1185, column: 43, scope: !3777)
!3938 = !DILocation(line: 1185, column: 25, scope: !3779)
!3939 = !DILocation(line: 1187, column: 43, scope: !3781)
!3940 = !DILocation(line: 1187, column: 21, scope: !3783)
!3941 = !DILocation(line: 1191, column: 49, scope: !3785)
!3942 = !DILocation(line: 1191, column: 17, scope: !3787)
!3943 = !DILocation(line: 1192, column: 32, scope: !3789)
!3944 = !DILocation(line: 1192, column: 17, scope: !3791)
!3945 = !DILocation(line: 1193, column: 73, scope: !3793)
!3946 = !DILocation(line: 1194, column: 32, scope: !3797)
!3947 = !DILocation(line: 1194, column: 17, scope: !3799)
!3948 = !DILocation(line: 1197, column: 49, scope: !3801)
!3949 = !DILocation(line: 1197, column: 17, scope: !3803)
!3950 = !DILocation(line: 1198, column: 32, scope: !3805)
!3951 = !DILocation(line: 1198, column: 17, scope: !3807)
!3952 = !DILocation(line: 1199, column: 85, scope: !3811)
!3953 = !DILocation(line: 1201, column: 36, scope: !3815)
!3954 = !DILocation(line: 1201, column: 21, scope: !3817)
!3955 = !DILocation(line: 1203, column: 32, scope: !3819)
!3956 = !DILocation(line: 1203, column: 17, scope: !3821)
!3957 = !DILocation(line: 1206, column: 49, scope: !3823)
!3958 = !DILocation(line: 1206, column: 17, scope: !3825)
!3959 = !DILocation(line: 1207, column: 38, scope: !3827)
!3960 = !DILocation(line: 1207, column: 17, scope: !3829)
!3961 = !DILocation(line: 622, column: 50, scope: !3837)
!3962 = !DILocation(line: 622, column: 21, scope: !3839)
!3963 = !DILocation(line: 1211, column: 40, scope: !3841)
!3964 = !DILocation(line: 1211, column: 25, scope: !3843)
!3965 = !DILocation(line: 1212, column: 81, scope: !3845)
!3966 = !DILocation(line: 1213, column: 40, scope: !3849)
!3967 = !DILocation(line: 1213, column: 25, scope: !3851)
!3968 = !DILocation(line: 1216, column: 42, scope: !3853)
!3969 = !DILocation(line: 1216, column: 25, scope: !3855)
!3970 = !DILocation(line: 1226, column: 26, scope: !3857)
!3971 = !DILocation(line: 1227, column: 41, scope: !3861)
!3972 = !DILocation(line: 1227, column: 25, scope: !3863)
!3973 = !DILocation(line: 601, column: 38, scope: !3867)
!3974 = !DILocation(line: 601, column: 9, scope: !3869)
!3975 = !DILocation(line: 1233, column: 70, scope: !3871)
!3976 = !DILocation(line: 1233, column: 17, scope: !3873)
!3977 = !DILocation(line: 601, column: 38, scope: !3877)
!3978 = !DILocation(line: 601, column: 9, scope: !3879)
!3979 = !DILocation(line: 1239, column: 28, scope: !3881)
!3980 = !DILocation(line: 1239, column: 13, scope: !3883)
!3981 = !DILocation(line: 618, column: 15, scope: !3651)
!3982 = !DILocation(line: 618, column: 9, scope: !3651)
!3983 = !DILocation(line: 627, column: 39, scope: !3651)
!3984 = !DILocation(line: 619, column: 16, scope: !3651)
!3985 = !DILocation(line: 619, column: 16, scope: !3659)
!3986 = !DILocation(line: 619, column: 48, scope: !3659)
!3987 = !DILocation(line: 619, column: 41, scope: !3659)
!3988 = !DILocation(line: 619, column: 35, scope: !3659)
!3989 = !DILocation(line: 621, column: 21, scope: !3659)
!3990 = !DILocation(line: 622, column: 40, scope: !3663)
!3991 = !DILocation(line: 622, column: 30, scope: !3663)
!3992 = !DILocation(line: 622, column: 21, scope: !3663)
!3993 = !DILocation(line: 620, column: 20, scope: !3659)
!3994 = !DILocation(line: 1118, column: 13, scope: !3657)
!3995 = !DILocation(line: 620, column: 20, scope: !3661)
!3996 = !DILocation(line: 618, column: 15, scope: !3657)
!3997 = !DILocation(line: 618, column: 9, scope: !3657)
!3998 = !DILocation(line: 627, column: 39, scope: !3657)
!3999 = !DILocation(line: 619, column: 16, scope: !3657)
!4000 = !DILocation(line: 619, column: 16, scope: !3669)
!4001 = !DILocation(line: 619, column: 48, scope: !3669)
!4002 = !DILocation(line: 619, column: 41, scope: !3669)
!4003 = !DILocation(line: 619, column: 35, scope: !3669)
!4004 = !DILocation(line: 621, column: 21, scope: !3669)
!4005 = !DILocation(line: 622, column: 40, scope: !3673)
!4006 = !DILocation(line: 622, column: 30, scope: !3673)
!4007 = !DILocation(line: 622, column: 21, scope: !3673)
!4008 = !DILocation(line: 1128, column: 32, scope: !3657)
!4009 = !DILocation(line: 1129, column: 46, scope: !3679)
!4010 = !DILocation(line: 1139, column: 9, scope: !3681)
!4011 = !DILocation(line: 600, column: 19, scope: !3681)
!4012 = !DILocation(line: 601, column: 28, scope: !3875)
!4013 = !DILocation(line: 601, column: 18, scope: !3875)
!4014 = !DILocation(line: 601, column: 9, scope: !3875)
!4015 = !DILocation(line: 1140, column: 26, scope: !3681)
!4016 = !DILocation(line: 1140, column: 21, scope: !3681)
!4017 = !DILocation(line: 1143, column: 61, scope: !3681)
!4018 = !DILocation(line: 1143, column: 56, scope: !3681)
!4019 = !DILocation(line: 1145, column: 25, scope: !3681)
!4020 = !DILocation(line: 1145, column: 20, scope: !3681)
!4021 = !DILocation(line: 618, column: 15, scope: !3681)
!4022 = !DILocation(line: 618, column: 9, scope: !3681)
!4023 = !DILocation(line: 1170, column: 17, scope: !3681)
!4024 = !DILocation(line: 1179, column: 20, scope: !3681)
!4025 = !DILocation(line: 1191, column: 17, scope: !3681)
!4026 = !DILocation(line: 1197, column: 17, scope: !3681)
!4027 = !DILocation(line: 1206, column: 17, scope: !3681)
!4028 = !DILocation(line: 1233, column: 22, scope: !3681)
!4029 = !DILocation(line: 1233, column: 17, scope: !3681)
!4030 = !DILocation(line: 1140, column: 21, scope: !3689)
!4031 = !DILocation(line: 1238, column: 12, scope: !3681)
!4032 = !DILocation(line: 1244, column: 6, scope: !3651)
!4033 = !DILocation(line: 1143, column: 56, scope: !3693)
!4034 = !DILocation(line: 1149, column: 22, scope: !3681)
!4035 = !DILocation(line: 1149, column: 17, scope: !3681)
!4036 = !DILocation(line: 1146, column: 26, scope: !3681)
!4037 = !DILocation(line: 1146, column: 21, scope: !3681)
!4038 = !DILocation(line: 1146, column: 21, scope: !3697)
!4039 = !DILocation(line: 1149, column: 17, scope: !3701)
!4040 = !DILocation(line: 627, column: 39, scope: !3681)
!4041 = !DILocation(line: 619, column: 16, scope: !3681)
!4042 = !DILocation(line: 619, column: 16, scope: !3705)
!4043 = !DILocation(line: 619, column: 48, scope: !3705)
!4044 = !DILocation(line: 619, column: 41, scope: !3705)
!4045 = !DILocation(line: 619, column: 35, scope: !3705)
!4046 = !DILocation(line: 621, column: 21, scope: !3705)
!4047 = !DILocation(line: 622, column: 40, scope: !3709)
!4048 = !DILocation(line: 622, column: 30, scope: !3709)
!4049 = !DILocation(line: 622, column: 21, scope: !3709)
!4050 = !DILocation(line: 620, column: 20, scope: !3705)
!4051 = !DILocation(line: 620, column: 20, scope: !3707)
!4052 = !DILocation(line: 620, column: 26, scope: !3707)
!4053 = !DILocation(line: 1151, column: 53, scope: !3681)
!4054 = !DILocation(line: 1151, column: 27, scope: !3681)
!4055 = !DILocation(line: 1151, column: 21, scope: !3681)
!4056 = !DILocation(line: 601, column: 28, scope: !3723)
!4057 = !DILocation(line: 601, column: 18, scope: !3723)
!4058 = !DILocation(line: 601, column: 9, scope: !3723)
!4059 = !DILocation(line: 1152, column: 33, scope: !3681)
!4060 = !DILocation(line: 1152, column: 28, scope: !3681)
!4061 = !DILocation(line: 1153, column: 33, scope: !3681)
!4062 = !DILocation(line: 1153, column: 28, scope: !3681)
!4063 = !DILocation(line: 1152, column: 28, scope: !3715)
!4064 = !DILocation(line: 1153, column: 28, scope: !3719)
!4065 = !DILocation(line: 601, column: 9, scope: !3725)
!4066 = !DILocation(line: 602, column: 27, scope: !3723)
!4067 = !DILocation(line: 602, column: 9, scope: !3723)
!4068 = !DILocation(line: 603, column: 16, scope: !3723)
!4069 = !DILocation(line: 603, column: 9, scope: !3723)
!4070 = !DILocation(line: 622, column: 21, scope: !3711)
!4071 = !DILocation(line: 623, column: 39, scope: !3709)
!4072 = !DILocation(line: 623, column: 21, scope: !3709)
!4073 = !DILocation(line: 624, column: 28, scope: !3709)
!4074 = !DILocation(line: 624, column: 21, scope: !3709)
!4075 = !DILocation(line: 619, column: 16, scope: !3731)
!4076 = !DILocation(line: 619, column: 48, scope: !3731)
!4077 = !DILocation(line: 619, column: 41, scope: !3731)
!4078 = !DILocation(line: 619, column: 35, scope: !3731)
!4079 = !DILocation(line: 621, column: 21, scope: !3731)
!4080 = !DILocation(line: 622, column: 40, scope: !3735)
!4081 = !DILocation(line: 622, column: 30, scope: !3735)
!4082 = !DILocation(line: 622, column: 21, scope: !3735)
!4083 = !DILocation(line: 620, column: 20, scope: !3731)
!4084 = !DILocation(line: 620, column: 20, scope: !3733)
!4085 = !DILocation(line: 620, column: 26, scope: !3733)
!4086 = !DILocation(line: 1158, column: 22, scope: !3681)
!4087 = !DILocation(line: 1159, column: 22, scope: !3681)
!4088 = !DILocation(line: 1160, column: 22, scope: !3681)
!4089 = !DILocation(line: 1161, column: 23, scope: !3729)
!4090 = !DILocation(line: 1161, column: 17, scope: !3729)
!4091 = !DILocation(line: 1162, column: 26, scope: !3729)
!4092 = !DILocation(line: 1162, column: 26, scope: !3741)
!4093 = !DILocation(line: 1162, column: 70, scope: !3741)
!4094 = !DILocation(line: 1162, column: 37, scope: !3741)
!4095 = !DILocation(line: 1162, column: 32, scope: !3741)
!4096 = !DILocation(line: 600, column: 19, scope: !3729)
!4097 = !DILocation(line: 601, column: 28, scope: !3747)
!4098 = !DILocation(line: 601, column: 18, scope: !3747)
!4099 = !DILocation(line: 601, column: 9, scope: !3747)
!4100 = !DILocation(line: 601, column: 9, scope: !3749)
!4101 = !DILocation(line: 602, column: 27, scope: !3747)
!4102 = !DILocation(line: 602, column: 9, scope: !3747)
!4103 = !DILocation(line: 603, column: 16, scope: !3747)
!4104 = !DILocation(line: 603, column: 9, scope: !3747)
!4105 = !DILocation(line: 1162, column: 32, scope: !3743)
!4106 = !DILocation(line: 622, column: 21, scope: !3737)
!4107 = !DILocation(line: 623, column: 39, scope: !3735)
!4108 = !DILocation(line: 623, column: 21, scope: !3735)
!4109 = !DILocation(line: 624, column: 28, scope: !3735)
!4110 = !DILocation(line: 624, column: 21, scope: !3735)
!4111 = !DILocation(line: 1170, column: 17, scope: !3753)
!4112 = !DILocation(line: 1171, column: 22, scope: !3681)
!4113 = !DILocation(line: 1171, column: 17, scope: !3681)
!4114 = !DILocation(line: 1171, column: 17, scope: !3757)
!4115 = !DILocation(line: 1173, column: 22, scope: !3681)
!4116 = !DILocation(line: 1173, column: 17, scope: !3681)
!4117 = !DILocation(line: 1173, column: 17, scope: !3761)
!4118 = !DILocation(line: 1179, column: 40, scope: !3681)
!4119 = !DILocation(line: 1179, column: 35, scope: !3681)
!4120 = !DILocation(line: 1182, column: 21, scope: !3681)
!4121 = !DILocation(line: 1180, column: 26, scope: !3681)
!4122 = !DILocation(line: 1180, column: 21, scope: !3681)
!4123 = !DILocation(line: 1180, column: 21, scope: !3765)
!4124 = !DILocation(line: 1182, column: 21, scope: !3769)
!4125 = !DILocation(line: 1183, column: 26, scope: !3681)
!4126 = !DILocation(line: 1183, column: 21, scope: !3681)
!4127 = !DILocation(line: 1183, column: 21, scope: !3773)
!4128 = !DILocation(line: 1184, column: 24, scope: !3681)
!4129 = !DILocation(line: 1187, column: 26, scope: !3681)
!4130 = !DILocation(line: 1187, column: 21, scope: !3681)
!4131 = !DILocation(line: 1185, column: 30, scope: !3681)
!4132 = !DILocation(line: 1185, column: 25, scope: !3681)
!4133 = !DILocation(line: 1185, column: 25, scope: !3777)
!4134 = !DILocation(line: 1187, column: 21, scope: !3781)
!4135 = !DILocation(line: 1191, column: 17, scope: !3785)
!4136 = !DILocation(line: 1192, column: 22, scope: !3681)
!4137 = !DILocation(line: 1192, column: 17, scope: !3681)
!4138 = !DILocation(line: 1192, column: 17, scope: !3789)
!4139 = !DILocation(line: 1193, column: 22, scope: !3681)
!4140 = !DILocation(line: 1193, column: 17, scope: !3681)
!4141 = !DILocation(line: 1193, column: 17, scope: !3793)
!4142 = !DILocation(line: 1193, column: 17, scope: !3795)
!4143 = !DILocation(line: 1194, column: 22, scope: !3681)
!4144 = !DILocation(line: 1194, column: 17, scope: !3681)
!4145 = !DILocation(line: 1194, column: 17, scope: !3797)
!4146 = !DILocation(line: 1197, column: 17, scope: !3801)
!4147 = !DILocation(line: 1198, column: 22, scope: !3681)
!4148 = !DILocation(line: 1198, column: 17, scope: !3681)
!4149 = !DILocation(line: 1198, column: 17, scope: !3805)
!4150 = !DILocation(line: 1199, column: 34, scope: !3681)
!4151 = !DILocation(line: 1199, column: 29, scope: !3681)
!4152 = !DILocation(line: 1199, column: 29, scope: !3811)
!4153 = !DILocation(line: 1199, column: 21, scope: !3809)
!4154 = !DILocation(line: 1199, column: 29, scope: !3813)
!4155 = !DILocation(line: 1200, column: 20, scope: !3809)
!4156 = !DILocation(line: 1201, column: 26, scope: !3809)
!4157 = !DILocation(line: 1201, column: 21, scope: !3809)
!4158 = !DILocation(line: 1203, column: 22, scope: !3809)
!4159 = !DILocation(line: 1203, column: 17, scope: !3809)
!4160 = !DILocation(line: 1201, column: 21, scope: !3815)
!4161 = !DILocation(line: 1203, column: 17, scope: !3819)
!4162 = !DILocation(line: 1206, column: 17, scope: !3823)
!4163 = !DILocation(line: 1207, column: 22, scope: !3681)
!4164 = !DILocation(line: 1207, column: 17, scope: !3681)
!4165 = !DILocation(line: 1207, column: 17, scope: !3827)
!4166 = !DILocation(line: 619, column: 16, scope: !3831)
!4167 = !DILocation(line: 619, column: 48, scope: !3831)
!4168 = !DILocation(line: 619, column: 41, scope: !3831)
!4169 = !DILocation(line: 619, column: 35, scope: !3831)
!4170 = !DILocation(line: 621, column: 21, scope: !3831)
!4171 = !DILocation(line: 622, column: 40, scope: !3835)
!4172 = !DILocation(line: 622, column: 30, scope: !3835)
!4173 = !DILocation(line: 622, column: 21, scope: !3835)
!4174 = !DILocation(line: 620, column: 20, scope: !3831)
!4175 = !DILocation(line: 620, column: 20, scope: !3833)
!4176 = !DILocation(line: 601, column: 28, scope: !3865)
!4177 = !DILocation(line: 601, column: 18, scope: !3865)
!4178 = !DILocation(line: 601, column: 9, scope: !3865)
!4179 = !DILocation(line: 1211, column: 30, scope: !3681)
!4180 = !DILocation(line: 1211, column: 25, scope: !3681)
!4181 = !DILocation(line: 1216, column: 30, scope: !3681)
!4182 = !DILocation(line: 1216, column: 25, scope: !3681)
!4183 = !DILocation(line: 1211, column: 25, scope: !3841)
!4184 = !DILocation(line: 1212, column: 30, scope: !3681)
!4185 = !DILocation(line: 1212, column: 25, scope: !3681)
!4186 = !DILocation(line: 1212, column: 25, scope: !3845)
!4187 = !DILocation(line: 1212, column: 25, scope: !3847)
!4188 = !DILocation(line: 1213, column: 30, scope: !3681)
!4189 = !DILocation(line: 1213, column: 25, scope: !3681)
!4190 = !DILocation(line: 1213, column: 25, scope: !3849)
!4191 = !DILocation(line: 1216, column: 25, scope: !3853)
!4192 = !DILocation(line: 1217, column: 30, scope: !3681)
!4193 = !DILocation(line: 1217, column: 25, scope: !3681)
!4194 = !DILocation(line: 1217, column: 25, scope: !3857)
!4195 = !DILocation(line: 1217, column: 25, scope: !3859)
!4196 = !DILocation(line: 1227, column: 30, scope: !3681)
!4197 = !DILocation(line: 1227, column: 25, scope: !3681)
!4198 = !DILocation(line: 1227, column: 25, scope: !3861)
!4199 = !DILocation(line: 601, column: 9, scope: !3867)
!4200 = !DILocation(line: 602, column: 27, scope: !3865)
!4201 = !DILocation(line: 602, column: 9, scope: !3865)
!4202 = !DILocation(line: 603, column: 16, scope: !3865)
!4203 = !DILocation(line: 603, column: 9, scope: !3865)
!4204 = !DILocation(line: 622, column: 21, scope: !3837)
!4205 = !DILocation(line: 623, column: 39, scope: !3835)
!4206 = !DILocation(line: 623, column: 21, scope: !3835)
!4207 = !DILocation(line: 624, column: 28, scope: !3835)
!4208 = !DILocation(line: 624, column: 21, scope: !3835)
!4209 = !DILocation(line: 1233, column: 17, scope: !3871)
!4210 = !DILocation(line: 1242, column: 14, scope: !3681)
!4211 = !DILocation(line: 1243, column: 9, scope: !3681)
!4212 = !DILocation(line: 1239, column: 18, scope: !3681)
!4213 = !DILocation(line: 1239, column: 13, scope: !3681)
!4214 = !DILocation(line: 1239, column: 13, scope: !3881)
!4215 = !DILocation(line: 601, column: 9, scope: !3877)
!4216 = !DILocation(line: 602, column: 27, scope: !3875)
!4217 = !DILocation(line: 602, column: 9, scope: !3875)
!4218 = !DILocation(line: 603, column: 16, scope: !3875)
!4219 = !DILocation(line: 603, column: 9, scope: !3875)
!4220 = !DILocation(line: 622, column: 21, scope: !3675)
!4221 = !DILocation(line: 623, column: 39, scope: !3673)
!4222 = !DILocation(line: 623, column: 21, scope: !3673)
!4223 = !DILocation(line: 624, column: 28, scope: !3673)
!4224 = !DILocation(line: 624, column: 21, scope: !3673)
!4225 = !DILocation(line: 622, column: 21, scope: !3665)
!4226 = !DILocation(line: 623, column: 39, scope: !3663)
!4227 = !DILocation(line: 623, column: 21, scope: !3663)
!4228 = !DILocation(line: 624, column: 28, scope: !3663)
!4229 = !DILocation(line: 624, column: 21, scope: !3663)
!4230 = !DILocation(line: 0, scope: !4231)
!4231 = !DILexicalBlockFile(scope: !3651, file: !626, discriminator: 0)
!4232 = distinct !DISubprogram(name: "{closure#3}", linkageName: "_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h45d5d32cf0a9328dE", scope: !3683, file: !751, line: 1199, type: !4233, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !4237)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!1079, !4235, !2323}
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#6}::print_const::{closure_env#3}", baseType: !4236, size: 32, align: 32, dwarfAddressSpace: 0)
!4236 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#3}", scope: !3683, file: !2, align: 8, elements: !14, identifier: "5cb75aa53736dff3cdbf4f5879be8221")
!4237 = !{!4238, !4239}
!4238 = !DILocalVariable(name: "this", arg: 2, scope: !4232, file: !751, line: 1199, type: !2323)
!4239 = !DILocalVariable(arg: 1, scope: !4232, file: !751, line: 1199, type: !4235)
!4240 = !DILocation(line: 1199, column: 49, scope: !4232)
!4241 = !DILocation(line: 1199, column: 50, scope: !4232)
!4242 = !DILocation(line: 1199, column: 61, scope: !4232)
!4243 = !DILocation(line: 1199, column: 78, scope: !4232)
!4244 = distinct !DISubprogram(name: "{closure#6}", linkageName: "_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h4970e09e28f17006E", scope: !3683, file: !751, line: 1233, type: !4245, scopeLine: 1233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !4250)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!1079, !4247, !2323}
!4247 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#6}", scope: !3683, file: !2, size: 32, align: 32, elements: !4248, templateParams: !14, identifier: "ca7f2d241ed393ad399dd377359173ca")
!4248 = !{!4249}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__in_value", scope: !4247, file: !2, baseType: !2918, size: 32, align: 32)
!4250 = !{!4251, !4252}
!4251 = !DILocalVariable(name: "this", arg: 2, scope: !4244, file: !751, line: 1233, type: !2323)
!4252 = !DILocalVariable(name: "in_value", scope: !4244, file: !751, line: 1117, type: !706, align: 8)
!4253 = !DILocation(line: 1117, column: 31, scope: !4244)
!4254 = !DILocation(line: 1233, column: 37, scope: !4244)
!4255 = !DILocation(line: 1233, column: 60, scope: !4244)
!4256 = !DILocation(line: 1233, column: 48, scope: !4244)
!4257 = !DILocation(line: 1233, column: 69, scope: !4244)
!4258 = distinct !DISubprogram(name: "{closure#2}", linkageName: "_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h5b7a8e3fd21833a6E", scope: !3683, file: !751, line: 1193, type: !4259, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !4263)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!1079, !4261, !2323}
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#6}::print_const::{closure_env#2}", baseType: !4262, size: 32, align: 32, dwarfAddressSpace: 0)
!4262 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}", scope: !3683, file: !2, align: 8, elements: !14, identifier: "6d850c968aae98a18a1f91a8314e9dfd")
!4263 = !{!4264, !4265}
!4264 = !DILocalVariable(name: "this", arg: 2, scope: !4258, file: !751, line: 1193, type: !2323)
!4265 = !DILocalVariable(arg: 1, scope: !4258, file: !751, line: 1193, type: !4261)
!4266 = !DILocation(line: 1193, column: 37, scope: !4258)
!4267 = !DILocation(line: 1193, column: 38, scope: !4258)
!4268 = !DILocation(line: 1193, column: 49, scope: !4258)
!4269 = !DILocation(line: 1193, column: 66, scope: !4258)
!4270 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17h6fb5a04d6d462f37E", scope: !3683, file: !751, line: 1159, type: !4271, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !4274)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!808, !4273, !765}
!4273 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !3683, file: !2, align: 8, elements: !14, identifier: "b353598f554b6b80a618e9b13dcba95d")
!4274 = !{!4275, !4276}
!4275 = !DILocalVariable(name: "v", arg: 2, scope: !4270, file: !751, line: 1159, type: !765)
!4276 = !DILocalVariable(arg: 1, scope: !4270, file: !751, line: 1159, type: !4273)
!4277 = !DILocation(line: 1159, column: 31, scope: !4270)
!4278 = !DILocation(line: 1159, column: 32, scope: !4270)
!4279 = !DILocation(line: 1159, column: 35, scope: !4270)
!4280 = !DILocation(line: 1159, column: 52, scope: !4270)
!4281 = !DILocation(line: 1159, column: 56, scope: !4270)
!4282 = distinct !DISubprogram(name: "{closure#4}", linkageName: "_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hb8c3e667aad3162eE", scope: !3683, file: !751, line: 1212, type: !4283, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !4287)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!1079, !4285, !2323}
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#6}::print_const::{closure_env#4}", baseType: !4286, size: 32, align: 32, dwarfAddressSpace: 0)
!4286 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#4}", scope: !3683, file: !2, align: 8, elements: !14, identifier: "df071ec388c1e370e41394fbc80a1c2b")
!4287 = !{!4288, !4289}
!4288 = !DILocalVariable(name: "this", arg: 2, scope: !4282, file: !751, line: 1212, type: !2323)
!4289 = !DILocalVariable(arg: 1, scope: !4282, file: !751, line: 1212, type: !4285)
!4290 = !DILocation(line: 1212, column: 45, scope: !4282)
!4291 = !DILocation(line: 1212, column: 46, scope: !4282)
!4292 = !DILocation(line: 1212, column: 57, scope: !4282)
!4293 = !DILocation(line: 1212, column: 74, scope: !4282)
!4294 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hbc6454b96a907a18E", scope: !3683, file: !751, line: 1129, type: !4295, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !4298)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!1079, !4297, !2323}
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::{impl#6}::print_const::{closure_env#0}", baseType: !3682, size: 32, align: 32, dwarfAddressSpace: 0)
!4298 = !{!4299, !4300, !4301}
!4299 = !DILocalVariable(name: "this", arg: 2, scope: !4294, file: !751, line: 1129, type: !2323)
!4300 = !DILocalVariable(name: "in_value", scope: !4294, file: !751, line: 1117, type: !706, align: 8)
!4301 = !DILocalVariable(name: "opened_brace", scope: !4294, file: !751, line: 1128, type: !706, align: 8)
!4302 = !DILocation(line: 1117, column: 31, scope: !4294)
!4303 = !DILocation(line: 1128, column: 17, scope: !4294)
!4304 = !DILocation(line: 1129, column: 47, scope: !4294)
!4305 = !DILocation(line: 1131, column: 16, scope: !4294)
!4306 = !DILocation(line: 1135, column: 13, scope: !4294)
!4307 = !DILocation(line: 1136, column: 18, scope: !4294)
!4308 = !DILocation(line: 1132, column: 24, scope: !4294)
!4309 = !DILocation(line: 1137, column: 10, scope: !4294)
!4310 = distinct !DISubprogram(name: "{closure#5}", linkageName: "_ZN14rustc_demangle2v07Printer11print_const28_$u7b$$u7b$closure$u7d$$u7d$17hfab9b5a736dab7deE", scope: !3683, file: !751, line: 1218, type: !4311, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !4315)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!1079, !4313, !2323}
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#6}::print_const::{closure_env#5}", baseType: !4314, size: 32, align: 32, dwarfAddressSpace: 0)
!4314 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#5}", scope: !3683, file: !2, align: 8, elements: !14, identifier: "b130d529bee7eaf888a456b030cfc1a3")
!4315 = !{!4316, !4317, !4319, !4321, !4323, !4325, !4327, !4329, !4331, !4333, !4335, !4337, !4339, !4341, !4343, !4345, !4347}
!4316 = !DILocalVariable(name: "this", arg: 2, scope: !4310, file: !751, line: 1218, type: !2323)
!4317 = !DILocalVariable(name: "parser", scope: !4318, file: !751, line: 619, type: !1726, align: 32)
!4318 = distinct !DILexicalBlock(scope: !4310, file: !751, line: 619, column: 13)
!4319 = !DILocalVariable(name: "x", scope: !4320, file: !751, line: 620, type: !765, align: 64)
!4320 = distinct !DILexicalBlock(scope: !4318, file: !751, line: 620, column: 17)
!4321 = !DILocalVariable(name: "err", scope: !4322, file: !751, line: 621, type: !87, align: 8)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !751, line: 621, column: 17)
!4323 = !DILocalVariable(name: "residual", scope: !4324, file: !751, line: 622, type: !2336, align: 8)
!4324 = distinct !DILexicalBlock(scope: !4322, file: !751, line: 622, column: 50)
!4325 = !DILocalVariable(name: "val", scope: !4326, file: !751, line: 622, type: !7, align: 8)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !751, line: 622, column: 21)
!4327 = !DILocalVariable(name: "name", scope: !4328, file: !751, line: 1220, type: !1317, align: 32)
!4328 = distinct !DILexicalBlock(scope: !4310, file: !751, line: 1220, column: 33)
!4329 = !DILocalVariable(name: "parser", scope: !4330, file: !751, line: 619, type: !1726, align: 32)
!4330 = distinct !DILexicalBlock(scope: !4310, file: !751, line: 619, column: 13)
!4331 = !DILocalVariable(name: "x", scope: !4332, file: !751, line: 620, type: !1317, align: 32)
!4332 = distinct !DILexicalBlock(scope: !4330, file: !751, line: 620, column: 17)
!4333 = !DILocalVariable(name: "err", scope: !4334, file: !751, line: 621, type: !87, align: 8)
!4334 = distinct !DILexicalBlock(scope: !4330, file: !751, line: 621, column: 17)
!4335 = !DILocalVariable(name: "residual", scope: !4336, file: !751, line: 622, type: !2336, align: 8)
!4336 = distinct !DILexicalBlock(scope: !4334, file: !751, line: 622, column: 50)
!4337 = !DILocalVariable(name: "val", scope: !4338, file: !751, line: 622, type: !7, align: 8)
!4338 = distinct !DILexicalBlock(scope: !4334, file: !751, line: 622, column: 21)
!4339 = !DILocalVariable(name: "residual", scope: !4340, file: !751, line: 1221, type: !2336, align: 8)
!4340 = distinct !DILexicalBlock(scope: !4328, file: !751, line: 1221, column: 49)
!4341 = !DILocalVariable(name: "val", scope: !4342, file: !751, line: 1221, type: !7, align: 8)
!4342 = distinct !DILexicalBlock(scope: !4328, file: !751, line: 1221, column: 33)
!4343 = !DILocalVariable(name: "residual", scope: !4344, file: !751, line: 1222, type: !2336, align: 8)
!4344 = distinct !DILexicalBlock(scope: !4328, file: !751, line: 1222, column: 49)
!4345 = !DILocalVariable(name: "val", scope: !4346, file: !751, line: 1222, type: !7, align: 8)
!4346 = distinct !DILexicalBlock(scope: !4328, file: !751, line: 1222, column: 33)
!4347 = !DILocalVariable(arg: 1, scope: !4310, file: !751, line: 1218, type: !4313)
!4348 = !DILocation(line: 1218, column: 29, scope: !4310)
!4349 = !DILocation(line: 1218, column: 30, scope: !4310)
!4350 = !DILocation(line: 621, column: 21, scope: !4322)
!4351 = !DILocation(line: 1220, column: 37, scope: !4328)
!4352 = !DILocation(line: 620, column: 20, scope: !4332)
!4353 = !DILocation(line: 621, column: 21, scope: !4334)
!4354 = !DILocation(line: 622, column: 50, scope: !4324)
!4355 = !DILocation(line: 622, column: 21, scope: !4326)
!4356 = !DILocation(line: 622, column: 50, scope: !4336)
!4357 = !DILocation(line: 622, column: 21, scope: !4338)
!4358 = !DILocation(line: 1221, column: 49, scope: !4340)
!4359 = !DILocation(line: 1221, column: 33, scope: !4342)
!4360 = !DILocation(line: 1222, column: 49, scope: !4344)
!4361 = !DILocation(line: 1222, column: 33, scope: !4346)
!4362 = !DILocation(line: 618, column: 15, scope: !4310)
!4363 = !DILocation(line: 618, column: 9, scope: !4310)
!4364 = !DILocation(line: 627, column: 39, scope: !4310)
!4365 = !DILocation(line: 619, column: 16, scope: !4310)
!4366 = !DILocation(line: 619, column: 16, scope: !4318)
!4367 = !DILocation(line: 619, column: 48, scope: !4318)
!4368 = !DILocation(line: 619, column: 41, scope: !4318)
!4369 = !DILocation(line: 619, column: 35, scope: !4318)
!4370 = !DILocation(line: 621, column: 21, scope: !4318)
!4371 = !DILocation(line: 622, column: 40, scope: !4322)
!4372 = !DILocation(line: 622, column: 30, scope: !4322)
!4373 = !DILocation(line: 622, column: 21, scope: !4322)
!4374 = !DILocation(line: 620, column: 20, scope: !4318)
!4375 = !DILocation(line: 620, column: 20, scope: !4320)
!4376 = !DILocation(line: 619, column: 16, scope: !4330)
!4377 = !DILocation(line: 619, column: 48, scope: !4330)
!4378 = !DILocation(line: 619, column: 41, scope: !4330)
!4379 = !DILocation(line: 619, column: 35, scope: !4330)
!4380 = !DILocation(line: 621, column: 21, scope: !4330)
!4381 = !DILocation(line: 622, column: 40, scope: !4334)
!4382 = !DILocation(line: 622, column: 30, scope: !4334)
!4383 = !DILocation(line: 622, column: 21, scope: !4334)
!4384 = !DILocation(line: 620, column: 20, scope: !4330)
!4385 = !DILocation(line: 1221, column: 38, scope: !4328)
!4386 = !DILocation(line: 1221, column: 33, scope: !4328)
!4387 = !DILocation(line: 1221, column: 33, scope: !4340)
!4388 = !DILocation(line: 1222, column: 38, scope: !4328)
!4389 = !DILocation(line: 1222, column: 33, scope: !4328)
!4390 = !DILocation(line: 1222, column: 33, scope: !4344)
!4391 = !DILocation(line: 1223, column: 38, scope: !4328)
!4392 = !DILocation(line: 1224, column: 30, scope: !4310)
!4393 = !DILocation(line: 622, column: 21, scope: !4336)
!4394 = !DILocation(line: 623, column: 39, scope: !4334)
!4395 = !DILocation(line: 623, column: 21, scope: !4334)
!4396 = !DILocation(line: 624, column: 28, scope: !4334)
!4397 = !DILocation(line: 624, column: 21, scope: !4334)
!4398 = !DILocation(line: 622, column: 21, scope: !4324)
!4399 = !DILocation(line: 623, column: 39, scope: !4322)
!4400 = !DILocation(line: 623, column: 21, scope: !4322)
!4401 = !DILocation(line: 624, column: 28, scope: !4322)
!4402 = !DILocation(line: 624, column: 21, scope: !4322)
!4403 = !DILocation(line: 0, scope: !4404)
!4404 = !DILexicalBlockFile(scope: !4310, file: !626, discriminator: 0)
!4405 = distinct !DISubprogram(name: "print_backref<rustc_demangle::v0::{impl#6}::print_path::{closure_env#1}>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17h4d96d73f26008496E", scope: !2303, file: !751, line: 654, type: !4406, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4409, declaration: !4408, retainedNodes: !4411)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!1079, !2323, !2915}
!4408 = !DISubprogram(name: "print_backref<rustc_demangle::v0::{impl#6}::print_path::{closure_env#1}>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17h4d96d73f26008496E", scope: !2303, file: !751, line: 654, type: !4406, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4409)
!4409 = !{!4410}
!4410 = !DITemplateTypeParameter(name: "F", type: !2915)
!4411 = !{!4412, !4413, !4414, !4416, !4418, !4420, !4422, !4424, !4426, !4428}
!4412 = !DILocalVariable(name: "self", arg: 1, scope: !4405, file: !751, line: 654, type: !2323)
!4413 = !DILocalVariable(name: "f", arg: 2, scope: !4405, file: !751, line: 654, type: !2915)
!4414 = !DILocalVariable(name: "backref_parser", scope: !4415, file: !751, line: 658, type: !1704, align: 32)
!4415 = distinct !DILexicalBlock(scope: !4405, file: !751, line: 658, column: 9)
!4416 = !DILocalVariable(name: "parser", scope: !4417, file: !751, line: 619, type: !1726, align: 32)
!4417 = distinct !DILexicalBlock(scope: !4405, file: !751, line: 619, column: 13)
!4418 = !DILocalVariable(name: "x", scope: !4419, file: !751, line: 620, type: !1704, align: 32)
!4419 = distinct !DILexicalBlock(scope: !4417, file: !751, line: 620, column: 17)
!4420 = !DILocalVariable(name: "err", scope: !4421, file: !751, line: 621, type: !87, align: 8)
!4421 = distinct !DILexicalBlock(scope: !4417, file: !751, line: 621, column: 17)
!4422 = !DILocalVariable(name: "residual", scope: !4423, file: !751, line: 622, type: !2336, align: 8)
!4423 = distinct !DILexicalBlock(scope: !4421, file: !751, line: 622, column: 50)
!4424 = !DILocalVariable(name: "val", scope: !4425, file: !751, line: 622, type: !7, align: 8)
!4425 = distinct !DILexicalBlock(scope: !4421, file: !751, line: 622, column: 21)
!4426 = !DILocalVariable(name: "orig_parser", scope: !4427, file: !751, line: 664, type: !2123, align: 32)
!4427 = distinct !DILexicalBlock(scope: !4415, file: !751, line: 664, column: 9)
!4428 = !DILocalVariable(name: "r", scope: !4429, file: !751, line: 665, type: !1079, align: 8)
!4429 = distinct !DILexicalBlock(scope: !4427, file: !751, line: 665, column: 9)
!4430 = !DILocation(line: 654, column: 25, scope: !4405)
!4431 = !DILocation(line: 654, column: 36, scope: !4405)
!4432 = !DILocation(line: 658, column: 13, scope: !4415)
!4433 = !DILocation(line: 620, column: 20, scope: !4419)
!4434 = !DILocation(line: 621, column: 21, scope: !4421)
!4435 = !DILocation(line: 664, column: 13, scope: !4427)
!4436 = !DILocation(line: 622, column: 50, scope: !4423)
!4437 = !DILocation(line: 622, column: 21, scope: !4425)
!4438 = !DILocation(line: 618, column: 15, scope: !4405)
!4439 = !DILocation(line: 618, column: 9, scope: !4405)
!4440 = !DILocation(line: 627, column: 39, scope: !4405)
!4441 = !DILocation(line: 619, column: 16, scope: !4405)
!4442 = !DILocation(line: 619, column: 16, scope: !4417)
!4443 = !DILocation(line: 619, column: 48, scope: !4417)
!4444 = !DILocation(line: 619, column: 41, scope: !4417)
!4445 = !DILocation(line: 619, column: 35, scope: !4417)
!4446 = !DILocation(line: 621, column: 21, scope: !4417)
!4447 = !DILocation(line: 622, column: 40, scope: !4421)
!4448 = !DILocation(line: 622, column: 30, scope: !4421)
!4449 = !DILocation(line: 622, column: 21, scope: !4421)
!4450 = !DILocation(line: 620, column: 20, scope: !4417)
!4451 = !DILocation(line: 660, column: 12, scope: !4415)
!4452 = !DILocation(line: 660, column: 21, scope: !4415)
!4453 = !DILocation(line: 664, column: 58, scope: !4415)
!4454 = !DILocation(line: 664, column: 27, scope: !4415)
!4455 = !DILocation(line: 665, column: 17, scope: !4427)
!4456 = !DILocation(line: 665, column: 13, scope: !4429)
!4457 = !DILocation(line: 666, column: 9, scope: !4429)
!4458 = !DILocation(line: 667, column: 9, scope: !4429)
!4459 = !DILocation(line: 668, column: 5, scope: !4405)
!4460 = !DILocation(line: 661, column: 20, scope: !4415)
!4461 = !DILocation(line: 0, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4415, file: !626, discriminator: 0)
!4463 = !DILocation(line: 668, column: 6, scope: !4405)
!4464 = !DILocation(line: 622, column: 21, scope: !4423)
!4465 = !DILocation(line: 623, column: 39, scope: !4421)
!4466 = !DILocation(line: 623, column: 21, scope: !4421)
!4467 = !DILocation(line: 624, column: 28, scope: !4421)
!4468 = !DILocation(line: 624, column: 21, scope: !4421)
!4469 = !DILocation(line: 0, scope: !4470)
!4470 = !DILexicalBlockFile(scope: !4405, file: !626, discriminator: 0)
!4471 = distinct !DISubprogram(name: "print_backref<rustc_demangle::v0::{impl#6}::print_const::{closure_env#6}>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17h5753f13fbe9f0a9eE", scope: !2303, file: !751, line: 654, type: !4472, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4475, declaration: !4474, retainedNodes: !4477)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!1079, !2323, !4247}
!4474 = !DISubprogram(name: "print_backref<rustc_demangle::v0::{impl#6}::print_const::{closure_env#6}>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17h5753f13fbe9f0a9eE", scope: !2303, file: !751, line: 654, type: !4472, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4475)
!4475 = !{!4476}
!4476 = !DITemplateTypeParameter(name: "F", type: !4247)
!4477 = !{!4478, !4479, !4480, !4482, !4484, !4486, !4488, !4490, !4492, !4494}
!4478 = !DILocalVariable(name: "self", arg: 1, scope: !4471, file: !751, line: 654, type: !2323)
!4479 = !DILocalVariable(name: "f", arg: 2, scope: !4471, file: !751, line: 654, type: !4247)
!4480 = !DILocalVariable(name: "backref_parser", scope: !4481, file: !751, line: 658, type: !1704, align: 32)
!4481 = distinct !DILexicalBlock(scope: !4471, file: !751, line: 658, column: 9)
!4482 = !DILocalVariable(name: "parser", scope: !4483, file: !751, line: 619, type: !1726, align: 32)
!4483 = distinct !DILexicalBlock(scope: !4471, file: !751, line: 619, column: 13)
!4484 = !DILocalVariable(name: "x", scope: !4485, file: !751, line: 620, type: !1704, align: 32)
!4485 = distinct !DILexicalBlock(scope: !4483, file: !751, line: 620, column: 17)
!4486 = !DILocalVariable(name: "err", scope: !4487, file: !751, line: 621, type: !87, align: 8)
!4487 = distinct !DILexicalBlock(scope: !4483, file: !751, line: 621, column: 17)
!4488 = !DILocalVariable(name: "residual", scope: !4489, file: !751, line: 622, type: !2336, align: 8)
!4489 = distinct !DILexicalBlock(scope: !4487, file: !751, line: 622, column: 50)
!4490 = !DILocalVariable(name: "val", scope: !4491, file: !751, line: 622, type: !7, align: 8)
!4491 = distinct !DILexicalBlock(scope: !4487, file: !751, line: 622, column: 21)
!4492 = !DILocalVariable(name: "orig_parser", scope: !4493, file: !751, line: 664, type: !2123, align: 32)
!4493 = distinct !DILexicalBlock(scope: !4481, file: !751, line: 664, column: 9)
!4494 = !DILocalVariable(name: "r", scope: !4495, file: !751, line: 665, type: !1079, align: 8)
!4495 = distinct !DILexicalBlock(scope: !4493, file: !751, line: 665, column: 9)
!4496 = !DILocation(line: 654, column: 25, scope: !4471)
!4497 = !DILocation(line: 654, column: 36, scope: !4471)
!4498 = !DILocation(line: 658, column: 13, scope: !4481)
!4499 = !DILocation(line: 620, column: 20, scope: !4485)
!4500 = !DILocation(line: 621, column: 21, scope: !4487)
!4501 = !DILocation(line: 664, column: 13, scope: !4493)
!4502 = !DILocation(line: 622, column: 50, scope: !4489)
!4503 = !DILocation(line: 622, column: 21, scope: !4491)
!4504 = !DILocation(line: 618, column: 15, scope: !4471)
!4505 = !DILocation(line: 618, column: 9, scope: !4471)
!4506 = !DILocation(line: 627, column: 39, scope: !4471)
!4507 = !DILocation(line: 619, column: 16, scope: !4471)
!4508 = !DILocation(line: 619, column: 16, scope: !4483)
!4509 = !DILocation(line: 619, column: 48, scope: !4483)
!4510 = !DILocation(line: 619, column: 41, scope: !4483)
!4511 = !DILocation(line: 619, column: 35, scope: !4483)
!4512 = !DILocation(line: 621, column: 21, scope: !4483)
!4513 = !DILocation(line: 622, column: 40, scope: !4487)
!4514 = !DILocation(line: 622, column: 30, scope: !4487)
!4515 = !DILocation(line: 622, column: 21, scope: !4487)
!4516 = !DILocation(line: 620, column: 20, scope: !4483)
!4517 = !DILocation(line: 660, column: 12, scope: !4481)
!4518 = !DILocation(line: 660, column: 21, scope: !4481)
!4519 = !DILocation(line: 664, column: 58, scope: !4481)
!4520 = !DILocation(line: 664, column: 27, scope: !4481)
!4521 = !DILocation(line: 665, column: 17, scope: !4493)
!4522 = !DILocation(line: 665, column: 13, scope: !4495)
!4523 = !DILocation(line: 666, column: 9, scope: !4495)
!4524 = !DILocation(line: 667, column: 9, scope: !4495)
!4525 = !DILocation(line: 668, column: 5, scope: !4471)
!4526 = !DILocation(line: 661, column: 20, scope: !4481)
!4527 = !DILocation(line: 0, scope: !4528)
!4528 = !DILexicalBlockFile(scope: !4481, file: !626, discriminator: 0)
!4529 = !DILocation(line: 668, column: 6, scope: !4471)
!4530 = !DILocation(line: 622, column: 21, scope: !4489)
!4531 = !DILocation(line: 623, column: 39, scope: !4487)
!4532 = !DILocation(line: 623, column: 21, scope: !4487)
!4533 = !DILocation(line: 624, column: 28, scope: !4487)
!4534 = !DILocation(line: 624, column: 21, scope: !4487)
!4535 = !DILocation(line: 0, scope: !4536)
!4536 = !DILexicalBlockFile(scope: !4471, file: !626, discriminator: 0)
!4537 = distinct !DISubprogram(name: "print_backref<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17h65b9b523c9004866E", scope: !2303, file: !751, line: 654, type: !4538, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4542, declaration: !4541, retainedNodes: !4544)
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!1079, !2323, !4540}
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>", baseType: !2939, align: 8, dwarfAddressSpace: 0)
!4541 = !DISubprogram(name: "print_backref<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17h65b9b523c9004866E", scope: !2303, file: !751, line: 654, type: !4538, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4542)
!4542 = !{!4543}
!4543 = !DITemplateTypeParameter(name: "F", type: !4540)
!4544 = !{!4545, !4546, !4547, !4549, !4551, !4553, !4555, !4557, !4559, !4561}
!4545 = !DILocalVariable(name: "self", arg: 1, scope: !4537, file: !751, line: 654, type: !2323)
!4546 = !DILocalVariable(name: "f", arg: 2, scope: !4537, file: !751, line: 654, type: !4540)
!4547 = !DILocalVariable(name: "backref_parser", scope: !4548, file: !751, line: 658, type: !1704, align: 32)
!4548 = distinct !DILexicalBlock(scope: !4537, file: !751, line: 658, column: 9)
!4549 = !DILocalVariable(name: "parser", scope: !4550, file: !751, line: 619, type: !1726, align: 32)
!4550 = distinct !DILexicalBlock(scope: !4537, file: !751, line: 619, column: 13)
!4551 = !DILocalVariable(name: "x", scope: !4552, file: !751, line: 620, type: !1704, align: 32)
!4552 = distinct !DILexicalBlock(scope: !4550, file: !751, line: 620, column: 17)
!4553 = !DILocalVariable(name: "err", scope: !4554, file: !751, line: 621, type: !87, align: 8)
!4554 = distinct !DILexicalBlock(scope: !4550, file: !751, line: 621, column: 17)
!4555 = !DILocalVariable(name: "residual", scope: !4556, file: !751, line: 622, type: !2336, align: 8)
!4556 = distinct !DILexicalBlock(scope: !4554, file: !751, line: 622, column: 50)
!4557 = !DILocalVariable(name: "val", scope: !4558, file: !751, line: 622, type: !7, align: 8)
!4558 = distinct !DILexicalBlock(scope: !4554, file: !751, line: 622, column: 21)
!4559 = !DILocalVariable(name: "orig_parser", scope: !4560, file: !751, line: 664, type: !2123, align: 32)
!4560 = distinct !DILexicalBlock(scope: !4548, file: !751, line: 664, column: 9)
!4561 = !DILocalVariable(name: "r", scope: !4562, file: !751, line: 665, type: !1079, align: 8)
!4562 = distinct !DILexicalBlock(scope: !4560, file: !751, line: 665, column: 9)
!4563 = !DILocation(line: 654, column: 25, scope: !4537)
!4564 = !DILocation(line: 654, column: 36, scope: !4537)
!4565 = !DILocation(line: 658, column: 13, scope: !4548)
!4566 = !DILocation(line: 620, column: 20, scope: !4552)
!4567 = !DILocation(line: 621, column: 21, scope: !4554)
!4568 = !DILocation(line: 664, column: 13, scope: !4560)
!4569 = !DILocation(line: 622, column: 50, scope: !4556)
!4570 = !DILocation(line: 622, column: 21, scope: !4558)
!4571 = !DILocation(line: 618, column: 15, scope: !4537)
!4572 = !DILocation(line: 618, column: 9, scope: !4537)
!4573 = !DILocation(line: 627, column: 39, scope: !4537)
!4574 = !DILocation(line: 619, column: 16, scope: !4537)
!4575 = !DILocation(line: 619, column: 16, scope: !4550)
!4576 = !DILocation(line: 619, column: 48, scope: !4550)
!4577 = !DILocation(line: 619, column: 41, scope: !4550)
!4578 = !DILocation(line: 619, column: 35, scope: !4550)
!4579 = !DILocation(line: 621, column: 21, scope: !4550)
!4580 = !DILocation(line: 622, column: 40, scope: !4554)
!4581 = !DILocation(line: 622, column: 30, scope: !4554)
!4582 = !DILocation(line: 622, column: 21, scope: !4554)
!4583 = !DILocation(line: 620, column: 20, scope: !4550)
!4584 = !DILocation(line: 660, column: 12, scope: !4548)
!4585 = !DILocation(line: 660, column: 21, scope: !4548)
!4586 = !DILocation(line: 664, column: 58, scope: !4548)
!4587 = !DILocation(line: 664, column: 27, scope: !4548)
!4588 = !DILocation(line: 665, column: 17, scope: !4560)
!4589 = !DILocation(line: 665, column: 13, scope: !4562)
!4590 = !DILocation(line: 666, column: 9, scope: !4562)
!4591 = !DILocation(line: 667, column: 9, scope: !4562)
!4592 = !DILocation(line: 668, column: 5, scope: !4537)
!4593 = !DILocation(line: 661, column: 20, scope: !4548)
!4594 = !DILocation(line: 0, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !4548, file: !626, discriminator: 0)
!4596 = !DILocation(line: 668, column: 6, scope: !4537)
!4597 = !DILocation(line: 622, column: 21, scope: !4556)
!4598 = !DILocation(line: 623, column: 39, scope: !4554)
!4599 = !DILocation(line: 623, column: 21, scope: !4554)
!4600 = !DILocation(line: 624, column: 28, scope: !4554)
!4601 = !DILocation(line: 624, column: 21, scope: !4554)
!4602 = !DILocation(line: 0, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4537, file: !626, discriminator: 0)
!4604 = distinct !DISubprogram(name: "print_backref<rustc_demangle::v0::{impl#6}::print_path_maybe_open_generics::{closure_env#0}>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17ha0f7ef4d704b70e7E", scope: !2303, file: !751, line: 654, type: !4605, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4612, declaration: !4611, retainedNodes: !4614)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{!1079, !2323, !4607}
!4607 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !4608, file: !2, size: 32, align: 32, elements: !4609, templateParams: !14, identifier: "cbdbaf923967eca4b7eb928f44728751")
!4608 = !DINamespace(name: "print_path_maybe_open_generics", scope: !2912)
!4609 = !{!4610}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__open", scope: !4607, file: !2, baseType: !3687, size: 32, align: 32)
!4611 = !DISubprogram(name: "print_backref<rustc_demangle::v0::{impl#6}::print_path_maybe_open_generics::{closure_env#0}>", linkageName: "_ZN14rustc_demangle2v07Printer13print_backref17ha0f7ef4d704b70e7E", scope: !2303, file: !751, line: 654, type: !4605, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4612)
!4612 = !{!4613}
!4613 = !DITemplateTypeParameter(name: "F", type: !4607)
!4614 = !{!4615, !4616, !4617, !4619, !4621, !4623, !4625, !4627, !4629, !4631}
!4615 = !DILocalVariable(name: "self", arg: 1, scope: !4604, file: !751, line: 654, type: !2323)
!4616 = !DILocalVariable(name: "f", arg: 2, scope: !4604, file: !751, line: 654, type: !4607)
!4617 = !DILocalVariable(name: "backref_parser", scope: !4618, file: !751, line: 658, type: !1704, align: 32)
!4618 = distinct !DILexicalBlock(scope: !4604, file: !751, line: 658, column: 9)
!4619 = !DILocalVariable(name: "parser", scope: !4620, file: !751, line: 619, type: !1726, align: 32)
!4620 = distinct !DILexicalBlock(scope: !4604, file: !751, line: 619, column: 13)
!4621 = !DILocalVariable(name: "x", scope: !4622, file: !751, line: 620, type: !1704, align: 32)
!4622 = distinct !DILexicalBlock(scope: !4620, file: !751, line: 620, column: 17)
!4623 = !DILocalVariable(name: "err", scope: !4624, file: !751, line: 621, type: !87, align: 8)
!4624 = distinct !DILexicalBlock(scope: !4620, file: !751, line: 621, column: 17)
!4625 = !DILocalVariable(name: "residual", scope: !4626, file: !751, line: 622, type: !2336, align: 8)
!4626 = distinct !DILexicalBlock(scope: !4624, file: !751, line: 622, column: 50)
!4627 = !DILocalVariable(name: "val", scope: !4628, file: !751, line: 622, type: !7, align: 8)
!4628 = distinct !DILexicalBlock(scope: !4624, file: !751, line: 622, column: 21)
!4629 = !DILocalVariable(name: "orig_parser", scope: !4630, file: !751, line: 664, type: !2123, align: 32)
!4630 = distinct !DILexicalBlock(scope: !4618, file: !751, line: 664, column: 9)
!4631 = !DILocalVariable(name: "r", scope: !4632, file: !751, line: 665, type: !1079, align: 8)
!4632 = distinct !DILexicalBlock(scope: !4630, file: !751, line: 665, column: 9)
!4633 = !DILocation(line: 654, column: 25, scope: !4604)
!4634 = !DILocation(line: 654, column: 36, scope: !4604)
!4635 = !DILocation(line: 658, column: 13, scope: !4618)
!4636 = !DILocation(line: 620, column: 20, scope: !4622)
!4637 = !DILocation(line: 621, column: 21, scope: !4624)
!4638 = !DILocation(line: 664, column: 13, scope: !4630)
!4639 = !DILocation(line: 622, column: 50, scope: !4626)
!4640 = !DILocation(line: 622, column: 21, scope: !4628)
!4641 = !DILocation(line: 618, column: 15, scope: !4604)
!4642 = !DILocation(line: 618, column: 9, scope: !4604)
!4643 = !DILocation(line: 627, column: 39, scope: !4604)
!4644 = !DILocation(line: 619, column: 16, scope: !4604)
!4645 = !DILocation(line: 619, column: 16, scope: !4620)
!4646 = !DILocation(line: 619, column: 48, scope: !4620)
!4647 = !DILocation(line: 619, column: 41, scope: !4620)
!4648 = !DILocation(line: 619, column: 35, scope: !4620)
!4649 = !DILocation(line: 621, column: 21, scope: !4620)
!4650 = !DILocation(line: 622, column: 40, scope: !4624)
!4651 = !DILocation(line: 622, column: 30, scope: !4624)
!4652 = !DILocation(line: 622, column: 21, scope: !4624)
!4653 = !DILocation(line: 620, column: 20, scope: !4620)
!4654 = !DILocation(line: 660, column: 12, scope: !4618)
!4655 = !DILocation(line: 660, column: 21, scope: !4618)
!4656 = !DILocation(line: 664, column: 58, scope: !4618)
!4657 = !DILocation(line: 664, column: 27, scope: !4618)
!4658 = !DILocation(line: 665, column: 17, scope: !4630)
!4659 = !DILocation(line: 665, column: 13, scope: !4632)
!4660 = !DILocation(line: 666, column: 9, scope: !4632)
!4661 = !DILocation(line: 667, column: 9, scope: !4632)
!4662 = !DILocation(line: 668, column: 5, scope: !4604)
!4663 = !DILocation(line: 661, column: 20, scope: !4618)
!4664 = !DILocation(line: 0, scope: !4665)
!4665 = !DILexicalBlockFile(scope: !4618, file: !626, discriminator: 0)
!4666 = !DILocation(line: 668, column: 6, scope: !4604)
!4667 = !DILocation(line: 622, column: 21, scope: !4626)
!4668 = !DILocation(line: 623, column: 39, scope: !4624)
!4669 = !DILocation(line: 623, column: 21, scope: !4624)
!4670 = !DILocation(line: 624, column: 28, scope: !4624)
!4671 = !DILocation(line: 624, column: 21, scope: !4624)
!4672 = !DILocation(line: 0, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4604, file: !626, discriminator: 0)
!4674 = distinct !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#2}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h11502cdacf266f16E", scope: !2303, file: !751, line: 780, type: !4675, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4692, declaration: !4691, retainedNodes: !4694)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{!4677, !2323, !4262, !659}
!4677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::fmt::Error>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4678, templateParams: !14, identifier: "7387bca8c37730ad9778d64f6f35be3c")
!4678 = !{!4679}
!4679 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4677, file: !2, size: 64, align: 32, elements: !4680, templateParams: !14, identifier: "11405ceea34854699df78f9897f2668", discriminator: !4690)
!4680 = !{!4681, !4686}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !4679, file: !2, baseType: !4682, size: 64, align: 32, extraData: i32 0)
!4682 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !4677, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4683, templateParams: !4685, identifier: "6bc72759140d1d3e9b8390fbe7ee656")
!4683 = !{!4684}
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4682, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!4685 = !{!40, !1088}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !4679, file: !2, baseType: !4687, size: 64, align: 32, extraData: i32 1)
!4687 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !4677, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4688, templateParams: !4685, identifier: "10dbf20ddf066a98a5a780f9e1d14ae3")
!4688 = !{!4689}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4687, file: !2, baseType: !1089, align: 8, offset: 32, flags: DIFlagPublic)
!4690 = !DIDerivedType(tag: DW_TAG_member, scope: !4677, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!4691 = !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#2}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h11502cdacf266f16E", scope: !2303, file: !751, line: 780, type: !4675, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4692)
!4692 = !{!4693}
!4693 = !DITemplateTypeParameter(name: "F", type: !4262)
!4694 = !{!4695, !4696, !4697, !4698, !4700, !4702, !4704, !4706}
!4695 = !DILocalVariable(name: "self", arg: 1, scope: !4674, file: !751, line: 780, type: !2323)
!4696 = !DILocalVariable(name: "f", arg: 2, scope: !4674, file: !751, line: 780, type: !4262)
!4697 = !DILocalVariable(name: "sep", arg: 3, scope: !4674, file: !751, line: 780, type: !659)
!4698 = !DILocalVariable(name: "i", scope: !4699, file: !751, line: 784, type: !9, align: 32)
!4699 = distinct !DILexicalBlock(scope: !4674, file: !751, line: 784, column: 9)
!4700 = !DILocalVariable(name: "residual", scope: !4701, file: !751, line: 787, type: !2336, align: 8)
!4701 = distinct !DILexicalBlock(scope: !4699, file: !751, line: 787, column: 32)
!4702 = !DILocalVariable(name: "val", scope: !4703, file: !751, line: 787, type: !7, align: 8)
!4703 = distinct !DILexicalBlock(scope: !4699, file: !751, line: 787, column: 17)
!4704 = !DILocalVariable(name: "residual", scope: !4705, file: !751, line: 789, type: !2336, align: 8)
!4705 = distinct !DILexicalBlock(scope: !4699, file: !751, line: 789, column: 20)
!4706 = !DILocalVariable(name: "val", scope: !4707, file: !751, line: 789, type: !7, align: 8)
!4707 = distinct !DILexicalBlock(scope: !4699, file: !751, line: 789, column: 13)
!4708 = !DILocation(line: 780, column: 26, scope: !4674)
!4709 = !DILocation(line: 780, column: 37, scope: !4674)
!4710 = !DILocation(line: 780, column: 43, scope: !4674)
!4711 = !DILocation(line: 784, column: 13, scope: !4699)
!4712 = !DILocation(line: 787, column: 32, scope: !4701)
!4713 = !DILocation(line: 787, column: 17, scope: !4703)
!4714 = !DILocation(line: 789, column: 20, scope: !4705)
!4715 = !DILocation(line: 789, column: 13, scope: !4707)
!4716 = !DILocation(line: 784, column: 21, scope: !4674)
!4717 = !DILocation(line: 785, column: 9, scope: !4699)
!4718 = !DILocation(line: 785, column: 27, scope: !4699)
!4719 = !DILocation(line: 785, column: 15, scope: !4699)
!4720 = !DILocation(line: 792, column: 12, scope: !4699)
!4721 = !DILocation(line: 792, column: 9, scope: !4699)
!4722 = !DILocation(line: 793, column: 5, scope: !4674)
!4723 = !DILocation(line: 785, column: 44, scope: !4699)
!4724 = !DILocation(line: 785, column: 39, scope: !4699)
!4725 = !DILocation(line: 786, column: 16, scope: !4699)
!4726 = !DILocation(line: 789, column: 13, scope: !4699)
!4727 = !DILocation(line: 787, column: 22, scope: !4699)
!4728 = !DILocation(line: 787, column: 17, scope: !4699)
!4729 = !DILocation(line: 787, column: 17, scope: !4701)
!4730 = !DILocation(line: 789, column: 13, scope: !4705)
!4731 = !DILocation(line: 790, column: 13, scope: !4699)
!4732 = !DILocation(line: 793, column: 6, scope: !4674)
!4733 = !DILocation(line: 0, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4674, file: !626, discriminator: 0)
!4735 = distinct !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#5}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h2b1ef20dec8cc977E", scope: !2303, file: !751, line: 780, type: !4736, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4739, declaration: !4738, retainedNodes: !4741)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!4677, !2323, !4314, !659}
!4738 = !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#5}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h2b1ef20dec8cc977E", scope: !2303, file: !751, line: 780, type: !4736, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4739)
!4739 = !{!4740}
!4740 = !DITemplateTypeParameter(name: "F", type: !4314)
!4741 = !{!4742, !4743, !4744, !4745, !4747, !4749, !4751, !4753}
!4742 = !DILocalVariable(name: "self", arg: 1, scope: !4735, file: !751, line: 780, type: !2323)
!4743 = !DILocalVariable(name: "f", arg: 2, scope: !4735, file: !751, line: 780, type: !4314)
!4744 = !DILocalVariable(name: "sep", arg: 3, scope: !4735, file: !751, line: 780, type: !659)
!4745 = !DILocalVariable(name: "i", scope: !4746, file: !751, line: 784, type: !9, align: 32)
!4746 = distinct !DILexicalBlock(scope: !4735, file: !751, line: 784, column: 9)
!4747 = !DILocalVariable(name: "residual", scope: !4748, file: !751, line: 787, type: !2336, align: 8)
!4748 = distinct !DILexicalBlock(scope: !4746, file: !751, line: 787, column: 32)
!4749 = !DILocalVariable(name: "val", scope: !4750, file: !751, line: 787, type: !7, align: 8)
!4750 = distinct !DILexicalBlock(scope: !4746, file: !751, line: 787, column: 17)
!4751 = !DILocalVariable(name: "residual", scope: !4752, file: !751, line: 789, type: !2336, align: 8)
!4752 = distinct !DILexicalBlock(scope: !4746, file: !751, line: 789, column: 20)
!4753 = !DILocalVariable(name: "val", scope: !4754, file: !751, line: 789, type: !7, align: 8)
!4754 = distinct !DILexicalBlock(scope: !4746, file: !751, line: 789, column: 13)
!4755 = !DILocation(line: 780, column: 26, scope: !4735)
!4756 = !DILocation(line: 780, column: 37, scope: !4735)
!4757 = !DILocation(line: 780, column: 43, scope: !4735)
!4758 = !DILocation(line: 784, column: 13, scope: !4746)
!4759 = !DILocation(line: 787, column: 32, scope: !4748)
!4760 = !DILocation(line: 787, column: 17, scope: !4750)
!4761 = !DILocation(line: 789, column: 20, scope: !4752)
!4762 = !DILocation(line: 789, column: 13, scope: !4754)
!4763 = !DILocation(line: 784, column: 21, scope: !4735)
!4764 = !DILocation(line: 785, column: 9, scope: !4746)
!4765 = !DILocation(line: 785, column: 27, scope: !4746)
!4766 = !DILocation(line: 785, column: 15, scope: !4746)
!4767 = !DILocation(line: 792, column: 12, scope: !4746)
!4768 = !DILocation(line: 792, column: 9, scope: !4746)
!4769 = !DILocation(line: 793, column: 5, scope: !4735)
!4770 = !DILocation(line: 785, column: 44, scope: !4746)
!4771 = !DILocation(line: 785, column: 39, scope: !4746)
!4772 = !DILocation(line: 786, column: 16, scope: !4746)
!4773 = !DILocation(line: 789, column: 13, scope: !4746)
!4774 = !DILocation(line: 787, column: 22, scope: !4746)
!4775 = !DILocation(line: 787, column: 17, scope: !4746)
!4776 = !DILocation(line: 787, column: 17, scope: !4748)
!4777 = !DILocation(line: 789, column: 13, scope: !4752)
!4778 = !DILocation(line: 790, column: 13, scope: !4746)
!4779 = !DILocation(line: 793, column: 6, scope: !4735)
!4780 = !DILocation(line: 0, scope: !4781)
!4781 = !DILexicalBlockFile(scope: !4735, file: !626, discriminator: 0)
!4782 = distinct !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#4}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h450b8f780bd93df1E", scope: !2303, file: !751, line: 780, type: !4783, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4786, declaration: !4785, retainedNodes: !4788)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!4677, !2323, !4286, !659}
!4785 = !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#4}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h450b8f780bd93df1E", scope: !2303, file: !751, line: 780, type: !4783, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4786)
!4786 = !{!4787}
!4787 = !DITemplateTypeParameter(name: "F", type: !4286)
!4788 = !{!4789, !4790, !4791, !4792, !4794, !4796, !4798, !4800}
!4789 = !DILocalVariable(name: "self", arg: 1, scope: !4782, file: !751, line: 780, type: !2323)
!4790 = !DILocalVariable(name: "f", arg: 2, scope: !4782, file: !751, line: 780, type: !4286)
!4791 = !DILocalVariable(name: "sep", arg: 3, scope: !4782, file: !751, line: 780, type: !659)
!4792 = !DILocalVariable(name: "i", scope: !4793, file: !751, line: 784, type: !9, align: 32)
!4793 = distinct !DILexicalBlock(scope: !4782, file: !751, line: 784, column: 9)
!4794 = !DILocalVariable(name: "residual", scope: !4795, file: !751, line: 787, type: !2336, align: 8)
!4795 = distinct !DILexicalBlock(scope: !4793, file: !751, line: 787, column: 32)
!4796 = !DILocalVariable(name: "val", scope: !4797, file: !751, line: 787, type: !7, align: 8)
!4797 = distinct !DILexicalBlock(scope: !4793, file: !751, line: 787, column: 17)
!4798 = !DILocalVariable(name: "residual", scope: !4799, file: !751, line: 789, type: !2336, align: 8)
!4799 = distinct !DILexicalBlock(scope: !4793, file: !751, line: 789, column: 20)
!4800 = !DILocalVariable(name: "val", scope: !4801, file: !751, line: 789, type: !7, align: 8)
!4801 = distinct !DILexicalBlock(scope: !4793, file: !751, line: 789, column: 13)
!4802 = !DILocation(line: 780, column: 26, scope: !4782)
!4803 = !DILocation(line: 780, column: 37, scope: !4782)
!4804 = !DILocation(line: 780, column: 43, scope: !4782)
!4805 = !DILocation(line: 784, column: 13, scope: !4793)
!4806 = !DILocation(line: 787, column: 32, scope: !4795)
!4807 = !DILocation(line: 787, column: 17, scope: !4797)
!4808 = !DILocation(line: 789, column: 20, scope: !4799)
!4809 = !DILocation(line: 789, column: 13, scope: !4801)
!4810 = !DILocation(line: 784, column: 21, scope: !4782)
!4811 = !DILocation(line: 785, column: 9, scope: !4793)
!4812 = !DILocation(line: 785, column: 27, scope: !4793)
!4813 = !DILocation(line: 785, column: 15, scope: !4793)
!4814 = !DILocation(line: 792, column: 12, scope: !4793)
!4815 = !DILocation(line: 792, column: 9, scope: !4793)
!4816 = !DILocation(line: 793, column: 5, scope: !4782)
!4817 = !DILocation(line: 785, column: 44, scope: !4793)
!4818 = !DILocation(line: 785, column: 39, scope: !4793)
!4819 = !DILocation(line: 786, column: 16, scope: !4793)
!4820 = !DILocation(line: 789, column: 13, scope: !4793)
!4821 = !DILocation(line: 787, column: 22, scope: !4793)
!4822 = !DILocation(line: 787, column: 17, scope: !4793)
!4823 = !DILocation(line: 787, column: 17, scope: !4795)
!4824 = !DILocation(line: 789, column: 13, scope: !4799)
!4825 = !DILocation(line: 790, column: 13, scope: !4793)
!4826 = !DILocation(line: 793, column: 6, scope: !4782)
!4827 = !DILocation(line: 0, scope: !4828)
!4828 = !DILexicalBlockFile(scope: !4782, file: !626, discriminator: 0)
!4829 = distinct !DISubprogram(name: "print_sep_list<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h4feeef1dc361b87fE", scope: !2303, file: !751, line: 780, type: !4830, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4542, declaration: !4832, retainedNodes: !4833)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!4677, !2323, !4540, !659}
!4832 = !DISubprogram(name: "print_sep_list<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17h4feeef1dc361b87fE", scope: !2303, file: !751, line: 780, type: !4830, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4542)
!4833 = !{!4834, !4835, !4836, !4837, !4839, !4841, !4843, !4845}
!4834 = !DILocalVariable(name: "self", arg: 1, scope: !4829, file: !751, line: 780, type: !2323)
!4835 = !DILocalVariable(name: "f", arg: 2, scope: !4829, file: !751, line: 780, type: !4540)
!4836 = !DILocalVariable(name: "sep", arg: 3, scope: !4829, file: !751, line: 780, type: !659)
!4837 = !DILocalVariable(name: "i", scope: !4838, file: !751, line: 784, type: !9, align: 32)
!4838 = distinct !DILexicalBlock(scope: !4829, file: !751, line: 784, column: 9)
!4839 = !DILocalVariable(name: "residual", scope: !4840, file: !751, line: 787, type: !2336, align: 8)
!4840 = distinct !DILexicalBlock(scope: !4838, file: !751, line: 787, column: 32)
!4841 = !DILocalVariable(name: "val", scope: !4842, file: !751, line: 787, type: !7, align: 8)
!4842 = distinct !DILexicalBlock(scope: !4838, file: !751, line: 787, column: 17)
!4843 = !DILocalVariable(name: "residual", scope: !4844, file: !751, line: 789, type: !2336, align: 8)
!4844 = distinct !DILexicalBlock(scope: !4838, file: !751, line: 789, column: 20)
!4845 = !DILocalVariable(name: "val", scope: !4846, file: !751, line: 789, type: !7, align: 8)
!4846 = distinct !DILexicalBlock(scope: !4838, file: !751, line: 789, column: 13)
!4847 = !DILocation(line: 780, column: 26, scope: !4829)
!4848 = !DILocation(line: 780, column: 37, scope: !4829)
!4849 = !DILocation(line: 780, column: 43, scope: !4829)
!4850 = !DILocation(line: 784, column: 13, scope: !4838)
!4851 = !DILocation(line: 787, column: 32, scope: !4840)
!4852 = !DILocation(line: 787, column: 17, scope: !4842)
!4853 = !DILocation(line: 789, column: 20, scope: !4844)
!4854 = !DILocation(line: 789, column: 13, scope: !4846)
!4855 = !DILocation(line: 784, column: 21, scope: !4829)
!4856 = !DILocation(line: 785, column: 9, scope: !4838)
!4857 = !DILocation(line: 785, column: 27, scope: !4838)
!4858 = !DILocation(line: 785, column: 15, scope: !4838)
!4859 = !DILocation(line: 792, column: 12, scope: !4838)
!4860 = !DILocation(line: 792, column: 9, scope: !4838)
!4861 = !DILocation(line: 793, column: 5, scope: !4829)
!4862 = !DILocation(line: 785, column: 44, scope: !4838)
!4863 = !DILocation(line: 785, column: 39, scope: !4838)
!4864 = !DILocation(line: 786, column: 16, scope: !4838)
!4865 = !DILocation(line: 789, column: 13, scope: !4838)
!4866 = !DILocation(line: 787, column: 22, scope: !4838)
!4867 = !DILocation(line: 787, column: 17, scope: !4838)
!4868 = !DILocation(line: 787, column: 17, scope: !4840)
!4869 = !DILocation(line: 789, column: 13, scope: !4844)
!4870 = !DILocation(line: 790, column: 13, scope: !4838)
!4871 = !DILocation(line: 793, column: 6, scope: !4829)
!4872 = !DILocation(line: 0, scope: !4873)
!4873 = !DILexicalBlockFile(scope: !4829, file: !626, discriminator: 0)
!4874 = distinct !DISubprogram(name: "print_sep_list<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17hdf132c66be8ff57bE", scope: !2303, file: !751, line: 780, type: !4830, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4542, declaration: !4875, retainedNodes: !4876)
!4875 = !DISubprogram(name: "print_sep_list<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17hdf132c66be8ff57bE", scope: !2303, file: !751, line: 780, type: !4830, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4542)
!4876 = !{!4877, !4878, !4879, !4880, !4882, !4884, !4886, !4888}
!4877 = !DILocalVariable(name: "self", arg: 1, scope: !4874, file: !751, line: 780, type: !2323)
!4878 = !DILocalVariable(name: "f", arg: 2, scope: !4874, file: !751, line: 780, type: !4540)
!4879 = !DILocalVariable(name: "sep", arg: 3, scope: !4874, file: !751, line: 780, type: !659)
!4880 = !DILocalVariable(name: "i", scope: !4881, file: !751, line: 784, type: !9, align: 32)
!4881 = distinct !DILexicalBlock(scope: !4874, file: !751, line: 784, column: 9)
!4882 = !DILocalVariable(name: "residual", scope: !4883, file: !751, line: 787, type: !2336, align: 8)
!4883 = distinct !DILexicalBlock(scope: !4881, file: !751, line: 787, column: 32)
!4884 = !DILocalVariable(name: "val", scope: !4885, file: !751, line: 787, type: !7, align: 8)
!4885 = distinct !DILexicalBlock(scope: !4881, file: !751, line: 787, column: 17)
!4886 = !DILocalVariable(name: "residual", scope: !4887, file: !751, line: 789, type: !2336, align: 8)
!4887 = distinct !DILexicalBlock(scope: !4881, file: !751, line: 789, column: 20)
!4888 = !DILocalVariable(name: "val", scope: !4889, file: !751, line: 789, type: !7, align: 8)
!4889 = distinct !DILexicalBlock(scope: !4881, file: !751, line: 789, column: 13)
!4890 = !DILocation(line: 780, column: 26, scope: !4874)
!4891 = !DILocation(line: 780, column: 37, scope: !4874)
!4892 = !DILocation(line: 780, column: 43, scope: !4874)
!4893 = !DILocation(line: 784, column: 13, scope: !4881)
!4894 = !DILocation(line: 787, column: 32, scope: !4883)
!4895 = !DILocation(line: 787, column: 17, scope: !4885)
!4896 = !DILocation(line: 789, column: 20, scope: !4887)
!4897 = !DILocation(line: 789, column: 13, scope: !4889)
!4898 = !DILocation(line: 784, column: 21, scope: !4874)
!4899 = !DILocation(line: 785, column: 9, scope: !4881)
!4900 = !DILocation(line: 785, column: 27, scope: !4881)
!4901 = !DILocation(line: 785, column: 15, scope: !4881)
!4902 = !DILocation(line: 792, column: 12, scope: !4881)
!4903 = !DILocation(line: 792, column: 9, scope: !4881)
!4904 = !DILocation(line: 793, column: 5, scope: !4874)
!4905 = !DILocation(line: 785, column: 44, scope: !4881)
!4906 = !DILocation(line: 785, column: 39, scope: !4881)
!4907 = !DILocation(line: 786, column: 16, scope: !4881)
!4908 = !DILocation(line: 789, column: 13, scope: !4881)
!4909 = !DILocation(line: 787, column: 22, scope: !4881)
!4910 = !DILocation(line: 787, column: 17, scope: !4881)
!4911 = !DILocation(line: 787, column: 17, scope: !4883)
!4912 = !DILocation(line: 789, column: 13, scope: !4887)
!4913 = !DILocation(line: 790, column: 13, scope: !4881)
!4914 = !DILocation(line: 793, column: 6, scope: !4874)
!4915 = !DILocation(line: 0, scope: !4916)
!4916 = !DILexicalBlockFile(scope: !4874, file: !626, discriminator: 0)
!4917 = distinct !DISubprogram(name: "print_sep_list<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17hee9770f90521c53fE", scope: !2303, file: !751, line: 780, type: !4830, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4542, declaration: !4918, retainedNodes: !4919)
!4918 = !DISubprogram(name: "print_sep_list<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17hee9770f90521c53fE", scope: !2303, file: !751, line: 780, type: !4830, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4542)
!4919 = !{!4920, !4921, !4922, !4923, !4925, !4927, !4929, !4931}
!4920 = !DILocalVariable(name: "self", arg: 1, scope: !4917, file: !751, line: 780, type: !2323)
!4921 = !DILocalVariable(name: "f", arg: 2, scope: !4917, file: !751, line: 780, type: !4540)
!4922 = !DILocalVariable(name: "sep", arg: 3, scope: !4917, file: !751, line: 780, type: !659)
!4923 = !DILocalVariable(name: "i", scope: !4924, file: !751, line: 784, type: !9, align: 32)
!4924 = distinct !DILexicalBlock(scope: !4917, file: !751, line: 784, column: 9)
!4925 = !DILocalVariable(name: "residual", scope: !4926, file: !751, line: 787, type: !2336, align: 8)
!4926 = distinct !DILexicalBlock(scope: !4924, file: !751, line: 787, column: 32)
!4927 = !DILocalVariable(name: "val", scope: !4928, file: !751, line: 787, type: !7, align: 8)
!4928 = distinct !DILexicalBlock(scope: !4924, file: !751, line: 787, column: 17)
!4929 = !DILocalVariable(name: "residual", scope: !4930, file: !751, line: 789, type: !2336, align: 8)
!4930 = distinct !DILexicalBlock(scope: !4924, file: !751, line: 789, column: 20)
!4931 = !DILocalVariable(name: "val", scope: !4932, file: !751, line: 789, type: !7, align: 8)
!4932 = distinct !DILexicalBlock(scope: !4924, file: !751, line: 789, column: 13)
!4933 = !DILocation(line: 780, column: 26, scope: !4917)
!4934 = !DILocation(line: 780, column: 37, scope: !4917)
!4935 = !DILocation(line: 780, column: 43, scope: !4917)
!4936 = !DILocation(line: 784, column: 13, scope: !4924)
!4937 = !DILocation(line: 787, column: 32, scope: !4926)
!4938 = !DILocation(line: 787, column: 17, scope: !4928)
!4939 = !DILocation(line: 789, column: 20, scope: !4930)
!4940 = !DILocation(line: 789, column: 13, scope: !4932)
!4941 = !DILocation(line: 784, column: 21, scope: !4917)
!4942 = !DILocation(line: 785, column: 9, scope: !4924)
!4943 = !DILocation(line: 785, column: 27, scope: !4924)
!4944 = !DILocation(line: 785, column: 15, scope: !4924)
!4945 = !DILocation(line: 792, column: 12, scope: !4924)
!4946 = !DILocation(line: 792, column: 9, scope: !4924)
!4947 = !DILocation(line: 793, column: 5, scope: !4917)
!4948 = !DILocation(line: 785, column: 44, scope: !4924)
!4949 = !DILocation(line: 785, column: 39, scope: !4924)
!4950 = !DILocation(line: 786, column: 16, scope: !4924)
!4951 = !DILocation(line: 789, column: 13, scope: !4924)
!4952 = !DILocation(line: 787, column: 22, scope: !4924)
!4953 = !DILocation(line: 787, column: 17, scope: !4924)
!4954 = !DILocation(line: 787, column: 17, scope: !4926)
!4955 = !DILocation(line: 789, column: 13, scope: !4930)
!4956 = !DILocation(line: 790, column: 13, scope: !4924)
!4957 = !DILocation(line: 793, column: 6, scope: !4917)
!4958 = !DILocation(line: 0, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !4917, file: !626, discriminator: 0)
!4960 = distinct !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#3}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17hf509d84c0cd68436E", scope: !2303, file: !751, line: 780, type: !4961, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4964, declaration: !4963, retainedNodes: !4966)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!4677, !2323, !4236, !659}
!4963 = !DISubprogram(name: "print_sep_list<rustc_demangle::v0::{impl#6}::print_const::{closure_env#3}>", linkageName: "_ZN14rustc_demangle2v07Printer14print_sep_list17hf509d84c0cd68436E", scope: !2303, file: !751, line: 780, type: !4961, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4964)
!4964 = !{!4965}
!4965 = !DITemplateTypeParameter(name: "F", type: !4236)
!4966 = !{!4967, !4968, !4969, !4970, !4972, !4974, !4976, !4978}
!4967 = !DILocalVariable(name: "self", arg: 1, scope: !4960, file: !751, line: 780, type: !2323)
!4968 = !DILocalVariable(name: "f", arg: 2, scope: !4960, file: !751, line: 780, type: !4236)
!4969 = !DILocalVariable(name: "sep", arg: 3, scope: !4960, file: !751, line: 780, type: !659)
!4970 = !DILocalVariable(name: "i", scope: !4971, file: !751, line: 784, type: !9, align: 32)
!4971 = distinct !DILexicalBlock(scope: !4960, file: !751, line: 784, column: 9)
!4972 = !DILocalVariable(name: "residual", scope: !4973, file: !751, line: 787, type: !2336, align: 8)
!4973 = distinct !DILexicalBlock(scope: !4971, file: !751, line: 787, column: 32)
!4974 = !DILocalVariable(name: "val", scope: !4975, file: !751, line: 787, type: !7, align: 8)
!4975 = distinct !DILexicalBlock(scope: !4971, file: !751, line: 787, column: 17)
!4976 = !DILocalVariable(name: "residual", scope: !4977, file: !751, line: 789, type: !2336, align: 8)
!4977 = distinct !DILexicalBlock(scope: !4971, file: !751, line: 789, column: 20)
!4978 = !DILocalVariable(name: "val", scope: !4979, file: !751, line: 789, type: !7, align: 8)
!4979 = distinct !DILexicalBlock(scope: !4971, file: !751, line: 789, column: 13)
!4980 = !DILocation(line: 780, column: 26, scope: !4960)
!4981 = !DILocation(line: 780, column: 37, scope: !4960)
!4982 = !DILocation(line: 780, column: 43, scope: !4960)
!4983 = !DILocation(line: 784, column: 13, scope: !4971)
!4984 = !DILocation(line: 787, column: 32, scope: !4973)
!4985 = !DILocation(line: 787, column: 17, scope: !4975)
!4986 = !DILocation(line: 789, column: 20, scope: !4977)
!4987 = !DILocation(line: 789, column: 13, scope: !4979)
!4988 = !DILocation(line: 784, column: 21, scope: !4960)
!4989 = !DILocation(line: 785, column: 9, scope: !4971)
!4990 = !DILocation(line: 785, column: 27, scope: !4971)
!4991 = !DILocation(line: 785, column: 15, scope: !4971)
!4992 = !DILocation(line: 792, column: 12, scope: !4971)
!4993 = !DILocation(line: 792, column: 9, scope: !4971)
!4994 = !DILocation(line: 793, column: 5, scope: !4960)
!4995 = !DILocation(line: 785, column: 44, scope: !4971)
!4996 = !DILocation(line: 785, column: 39, scope: !4971)
!4997 = !DILocation(line: 786, column: 16, scope: !4971)
!4998 = !DILocation(line: 789, column: 13, scope: !4971)
!4999 = !DILocation(line: 787, column: 22, scope: !4971)
!5000 = !DILocation(line: 787, column: 17, scope: !4971)
!5001 = !DILocation(line: 787, column: 17, scope: !4973)
!5002 = !DILocation(line: 789, column: 13, scope: !4977)
!5003 = !DILocation(line: 790, column: 13, scope: !4971)
!5004 = !DILocation(line: 793, column: 6, scope: !4960)
!5005 = !DILocation(line: 0, scope: !5006)
!5006 = !DILexicalBlockFile(scope: !4960, file: !626, discriminator: 0)
!5007 = distinct !DISubprogram(name: "print_dyn_trait", linkageName: "_ZN14rustc_demangle2v07Printer15print_dyn_trait17h2077f0323168ff5bE", scope: !2303, file: !751, line: 1063, type: !2939, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !5008, retainedNodes: !5009)
!5008 = !DISubprogram(name: "print_dyn_trait", linkageName: "_ZN14rustc_demangle2v07Printer15print_dyn_trait17h2077f0323168ff5bE", scope: !2303, file: !751, line: 1063, type: !2939, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!5009 = !{!5010, !5011, !5013, !5015, !5017, !5019, !5021, !5023, !5025, !5027, !5029, !5031, !5033, !5035, !5037, !5039, !5041, !5043, !5045, !5047, !5049, !5051}
!5010 = !DILocalVariable(name: "self", arg: 1, scope: !5007, file: !751, line: 1063, type: !2323)
!5011 = !DILocalVariable(name: "open", scope: !5012, file: !751, line: 1064, type: !706, align: 8)
!5012 = distinct !DILexicalBlock(scope: !5007, file: !751, line: 1064, column: 9)
!5013 = !DILocalVariable(name: "residual", scope: !5014, file: !751, line: 1064, type: !2336, align: 8)
!5014 = distinct !DILexicalBlock(scope: !5007, file: !751, line: 1064, column: 61)
!5015 = !DILocalVariable(name: "val", scope: !5016, file: !751, line: 1064, type: !706, align: 8)
!5016 = distinct !DILexicalBlock(scope: !5007, file: !751, line: 1064, column: 24)
!5017 = !DILocalVariable(name: "residual", scope: !5018, file: !751, line: 1068, type: !2336, align: 8)
!5018 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 1068, column: 32)
!5019 = !DILocalVariable(name: "val", scope: !5020, file: !751, line: 1068, type: !7, align: 8)
!5020 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 1068, column: 17)
!5021 = !DILocalVariable(name: "residual", scope: !5022, file: !751, line: 1071, type: !2336, align: 8)
!5022 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 1071, column: 33)
!5023 = !DILocalVariable(name: "val", scope: !5024, file: !751, line: 1071, type: !7, align: 8)
!5024 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 1071, column: 17)
!5025 = !DILocalVariable(name: "name", scope: !5026, file: !751, line: 1074, type: !1317, align: 32)
!5026 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 1074, column: 13)
!5027 = !DILocalVariable(name: "parser", scope: !5028, file: !751, line: 619, type: !1726, align: 32)
!5028 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 619, column: 13)
!5029 = !DILocalVariable(name: "x", scope: !5030, file: !751, line: 620, type: !1317, align: 32)
!5030 = distinct !DILexicalBlock(scope: !5028, file: !751, line: 620, column: 17)
!5031 = !DILocalVariable(name: "err", scope: !5032, file: !751, line: 621, type: !87, align: 8)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !751, line: 621, column: 17)
!5033 = !DILocalVariable(name: "residual", scope: !5034, file: !751, line: 622, type: !2336, align: 8)
!5034 = distinct !DILexicalBlock(scope: !5032, file: !751, line: 622, column: 50)
!5035 = !DILocalVariable(name: "val", scope: !5036, file: !751, line: 622, type: !7, align: 8)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !751, line: 622, column: 21)
!5037 = !DILocalVariable(name: "residual", scope: !5038, file: !751, line: 1075, type: !2336, align: 8)
!5038 = distinct !DILexicalBlock(scope: !5026, file: !751, line: 1075, column: 29)
!5039 = !DILocalVariable(name: "val", scope: !5040, file: !751, line: 1075, type: !7, align: 8)
!5040 = distinct !DILexicalBlock(scope: !5026, file: !751, line: 1075, column: 13)
!5041 = !DILocalVariable(name: "residual", scope: !5042, file: !751, line: 1076, type: !2336, align: 8)
!5042 = distinct !DILexicalBlock(scope: !5026, file: !751, line: 1076, column: 30)
!5043 = !DILocalVariable(name: "val", scope: !5044, file: !751, line: 1076, type: !7, align: 8)
!5044 = distinct !DILexicalBlock(scope: !5026, file: !751, line: 1076, column: 13)
!5045 = !DILocalVariable(name: "residual", scope: !5046, file: !751, line: 1077, type: !2336, align: 8)
!5046 = distinct !DILexicalBlock(scope: !5026, file: !751, line: 1077, column: 30)
!5047 = !DILocalVariable(name: "val", scope: !5048, file: !751, line: 1077, type: !7, align: 8)
!5048 = distinct !DILexicalBlock(scope: !5026, file: !751, line: 1077, column: 13)
!5049 = !DILocalVariable(name: "residual", scope: !5050, file: !751, line: 1081, type: !2336, align: 8)
!5050 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 1081, column: 28)
!5051 = !DILocalVariable(name: "val", scope: !5052, file: !751, line: 1081, type: !7, align: 8)
!5052 = distinct !DILexicalBlock(scope: !5012, file: !751, line: 1081, column: 13)
!5053 = !DILocation(line: 1063, column: 24, scope: !5007)
!5054 = !DILocation(line: 1064, column: 13, scope: !5012)
!5055 = !DILocation(line: 1074, column: 17, scope: !5026)
!5056 = !DILocation(line: 620, column: 20, scope: !5030)
!5057 = !DILocation(line: 621, column: 21, scope: !5032)
!5058 = !DILocation(line: 1064, column: 61, scope: !5014)
!5059 = !DILocation(line: 1068, column: 32, scope: !5018)
!5060 = !DILocation(line: 1068, column: 17, scope: !5020)
!5061 = !DILocation(line: 1071, column: 33, scope: !5022)
!5062 = !DILocation(line: 1071, column: 17, scope: !5024)
!5063 = !DILocation(line: 622, column: 50, scope: !5034)
!5064 = !DILocation(line: 622, column: 21, scope: !5036)
!5065 = !DILocation(line: 1075, column: 29, scope: !5038)
!5066 = !DILocation(line: 1075, column: 13, scope: !5040)
!5067 = !DILocation(line: 1076, column: 30, scope: !5042)
!5068 = !DILocation(line: 1076, column: 13, scope: !5044)
!5069 = !DILocation(line: 1077, column: 30, scope: !5046)
!5070 = !DILocation(line: 1077, column: 13, scope: !5048)
!5071 = !DILocation(line: 1081, column: 28, scope: !5050)
!5072 = !DILocation(line: 1081, column: 13, scope: !5052)
!5073 = !DILocation(line: 1064, column: 29, scope: !5007)
!5074 = !DILocation(line: 1064, column: 24, scope: !5007)
!5075 = !DILocation(line: 1064, column: 24, scope: !5014)
!5076 = !DILocation(line: 1064, column: 24, scope: !5016)
!5077 = !DILocation(line: 1066, column: 9, scope: !5012)
!5078 = !DILocation(line: 1066, column: 20, scope: !5012)
!5079 = !DILocation(line: 1066, column: 15, scope: !5012)
!5080 = !DILocation(line: 1080, column: 12, scope: !5012)
!5081 = !DILocation(line: 1067, column: 17, scope: !5012)
!5082 = !DILocation(line: 1084, column: 9, scope: !5012)
!5083 = !DILocation(line: 1085, column: 6, scope: !5007)
!5084 = !DILocation(line: 1081, column: 18, scope: !5012)
!5085 = !DILocation(line: 1081, column: 13, scope: !5012)
!5086 = !DILocation(line: 1081, column: 13, scope: !5050)
!5087 = !DILocation(line: 1068, column: 22, scope: !5012)
!5088 = !DILocation(line: 1068, column: 17, scope: !5012)
!5089 = !DILocation(line: 1071, column: 22, scope: !5012)
!5090 = !DILocation(line: 1071, column: 17, scope: !5012)
!5091 = !DILocation(line: 1068, column: 17, scope: !5018)
!5092 = !DILocation(line: 1069, column: 17, scope: !5012)
!5093 = !DILocation(line: 1067, column: 13, scope: !5012)
!5094 = !DILocation(line: 618, column: 15, scope: !5012)
!5095 = !DILocation(line: 618, column: 9, scope: !5012)
!5096 = !DILocation(line: 1071, column: 17, scope: !5022)
!5097 = !DILocation(line: 627, column: 39, scope: !5012)
!5098 = !DILocation(line: 619, column: 16, scope: !5012)
!5099 = !DILocation(line: 619, column: 16, scope: !5028)
!5100 = !DILocation(line: 619, column: 48, scope: !5028)
!5101 = !DILocation(line: 619, column: 41, scope: !5028)
!5102 = !DILocation(line: 619, column: 35, scope: !5028)
!5103 = !DILocation(line: 621, column: 21, scope: !5028)
!5104 = !DILocation(line: 622, column: 40, scope: !5032)
!5105 = !DILocation(line: 622, column: 30, scope: !5032)
!5106 = !DILocation(line: 622, column: 21, scope: !5032)
!5107 = !DILocation(line: 620, column: 20, scope: !5028)
!5108 = !DILocation(line: 1075, column: 18, scope: !5026)
!5109 = !DILocation(line: 1075, column: 13, scope: !5026)
!5110 = !DILocation(line: 1075, column: 13, scope: !5038)
!5111 = !DILocation(line: 1076, column: 18, scope: !5026)
!5112 = !DILocation(line: 1076, column: 13, scope: !5026)
!5113 = !DILocation(line: 1076, column: 13, scope: !5042)
!5114 = !DILocation(line: 1077, column: 18, scope: !5026)
!5115 = !DILocation(line: 1077, column: 13, scope: !5026)
!5116 = !DILocation(line: 1077, column: 13, scope: !5046)
!5117 = !DILocation(line: 622, column: 21, scope: !5034)
!5118 = !DILocation(line: 623, column: 39, scope: !5032)
!5119 = !DILocation(line: 623, column: 21, scope: !5032)
!5120 = !DILocation(line: 624, column: 28, scope: !5032)
!5121 = !DILocation(line: 624, column: 21, scope: !5032)
!5122 = !DILocation(line: 0, scope: !5123)
!5123 = !DILexicalBlockFile(scope: !5007, file: !626, discriminator: 0)
!5124 = distinct !DISubprogram(name: "print_const_uint", linkageName: "_ZN14rustc_demangle2v07Printer16print_const_uint17h6458ccb71c2d2030E", scope: !2303, file: !751, line: 1246, type: !5125, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !5127, retainedNodes: !5128)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{!1079, !2323, !13}
!5127 = !DISubprogram(name: "print_const_uint", linkageName: "_ZN14rustc_demangle2v07Printer16print_const_uint17h6458ccb71c2d2030E", scope: !2303, file: !751, line: 1246, type: !5125, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!5128 = !{!5129, !5130, !5131, !5133, !5135, !5137, !5139, !5141, !5143, !5145, !5147, !5149, !5151, !5153, !5155, !5157, !5159, !5161, !5163}
!5129 = !DILocalVariable(name: "self", arg: 1, scope: !5124, file: !751, line: 1246, type: !2323)
!5130 = !DILocalVariable(name: "ty_tag", arg: 2, scope: !5124, file: !751, line: 1246, type: !13)
!5131 = !DILocalVariable(name: "hex", scope: !5132, file: !751, line: 1247, type: !752, align: 32)
!5132 = distinct !DILexicalBlock(scope: !5124, file: !751, line: 1247, column: 9)
!5133 = !DILocalVariable(name: "parser", scope: !5134, file: !751, line: 619, type: !1726, align: 32)
!5134 = distinct !DILexicalBlock(scope: !5124, file: !751, line: 619, column: 13)
!5135 = !DILocalVariable(name: "x", scope: !5136, file: !751, line: 620, type: !752, align: 32)
!5136 = distinct !DILexicalBlock(scope: !5134, file: !751, line: 620, column: 17)
!5137 = !DILocalVariable(name: "err", scope: !5138, file: !751, line: 621, type: !87, align: 8)
!5138 = distinct !DILexicalBlock(scope: !5134, file: !751, line: 621, column: 17)
!5139 = !DILocalVariable(name: "residual", scope: !5140, file: !751, line: 622, type: !2336, align: 8)
!5140 = distinct !DILexicalBlock(scope: !5138, file: !751, line: 622, column: 50)
!5141 = !DILocalVariable(name: "val", scope: !5142, file: !751, line: 622, type: !7, align: 8)
!5142 = distinct !DILexicalBlock(scope: !5138, file: !751, line: 622, column: 21)
!5143 = !DILocalVariable(name: "v", scope: !5144, file: !751, line: 1250, type: !765, align: 64)
!5144 = distinct !DILexicalBlock(scope: !5132, file: !751, line: 1250, column: 13)
!5145 = !DILocalVariable(name: "residual", scope: !5146, file: !751, line: 1250, type: !2336, align: 8)
!5146 = distinct !DILexicalBlock(scope: !5144, file: !751, line: 1250, column: 37)
!5147 = !DILocalVariable(name: "val", scope: !5148, file: !751, line: 1250, type: !7, align: 8)
!5148 = distinct !DILexicalBlock(scope: !5144, file: !751, line: 1250, column: 24)
!5149 = !DILocalVariable(name: "residual", scope: !5150, file: !751, line: 1254, type: !2336, align: 8)
!5150 = distinct !DILexicalBlock(scope: !5132, file: !751, line: 1254, column: 33)
!5151 = !DILocalVariable(name: "val", scope: !5152, file: !751, line: 1254, type: !7, align: 8)
!5152 = distinct !DILexicalBlock(scope: !5132, file: !751, line: 1254, column: 17)
!5153 = !DILocalVariable(name: "residual", scope: !5154, file: !751, line: 1255, type: !2336, align: 8)
!5154 = distinct !DILexicalBlock(scope: !5132, file: !751, line: 1255, column: 40)
!5155 = !DILocalVariable(name: "val", scope: !5156, file: !751, line: 1255, type: !7, align: 8)
!5156 = distinct !DILexicalBlock(scope: !5132, file: !751, line: 1255, column: 17)
!5157 = !DILocalVariable(name: "out", scope: !5158, file: !751, line: 1259, type: !1630, align: 32)
!5158 = distinct !DILexicalBlock(scope: !5132, file: !751, line: 1259, column: 42)
!5159 = !DILocalVariable(name: "ty", scope: !5160, file: !751, line: 1261, type: !659, align: 32)
!5160 = distinct !DILexicalBlock(scope: !5158, file: !751, line: 1261, column: 17)
!5161 = !DILocalVariable(name: "residual", scope: !5162, file: !751, line: 1262, type: !2336, align: 8)
!5162 = distinct !DILexicalBlock(scope: !5160, file: !751, line: 1262, column: 31)
!5163 = !DILocalVariable(name: "val", scope: !5164, file: !751, line: 1262, type: !7, align: 8)
!5164 = distinct !DILexicalBlock(scope: !5160, file: !751, line: 1262, column: 17)
!5165 = !DILocation(line: 1246, column: 25, scope: !5124)
!5166 = !DILocation(line: 1246, column: 36, scope: !5124)
!5167 = !DILocation(line: 1247, column: 13, scope: !5132)
!5168 = !DILocation(line: 621, column: 21, scope: !5138)
!5169 = !DILocation(line: 622, column: 50, scope: !5140)
!5170 = !DILocation(line: 622, column: 21, scope: !5142)
!5171 = !DILocation(line: 1250, column: 37, scope: !5146)
!5172 = !DILocation(line: 1250, column: 24, scope: !5148)
!5173 = !DILocation(line: 1254, column: 33, scope: !5150)
!5174 = !DILocation(line: 1254, column: 17, scope: !5152)
!5175 = !DILocation(line: 1255, column: 40, scope: !5154)
!5176 = !DILocation(line: 1255, column: 17, scope: !5156)
!5177 = !DILocation(line: 1262, column: 31, scope: !5162)
!5178 = !DILocation(line: 1262, column: 17, scope: !5164)
!5179 = !DILocation(line: 618, column: 15, scope: !5124)
!5180 = !DILocation(line: 618, column: 9, scope: !5124)
!5181 = !DILocation(line: 627, column: 39, scope: !5124)
!5182 = !DILocation(line: 619, column: 16, scope: !5124)
!5183 = !DILocation(line: 619, column: 16, scope: !5134)
!5184 = !DILocation(line: 619, column: 48, scope: !5134)
!5185 = !DILocation(line: 619, column: 41, scope: !5134)
!5186 = !DILocation(line: 619, column: 35, scope: !5134)
!5187 = !DILocation(line: 621, column: 21, scope: !5134)
!5188 = !DILocation(line: 622, column: 40, scope: !5138)
!5189 = !DILocation(line: 622, column: 30, scope: !5138)
!5190 = !DILocation(line: 622, column: 21, scope: !5138)
!5191 = !DILocation(line: 620, column: 20, scope: !5134)
!5192 = !DILocation(line: 620, column: 20, scope: !5136)
!5193 = !DILocation(line: 620, column: 26, scope: !5136)
!5194 = !DILocation(line: 1249, column: 19, scope: !5132)
!5195 = !DILocation(line: 1249, column: 15, scope: !5132)
!5196 = !DILocation(line: 1249, column: 9, scope: !5132)
!5197 = !DILocation(line: 1250, column: 18, scope: !5132)
!5198 = !DILocation(line: 1250, column: 18, scope: !5144)
!5199 = !DILocation(line: 1250, column: 29, scope: !5144)
!5200 = !DILocation(line: 1250, column: 24, scope: !5144)
!5201 = !DILocation(line: 1254, column: 22, scope: !5132)
!5202 = !DILocation(line: 1254, column: 17, scope: !5132)
!5203 = !DILocation(line: 1254, column: 17, scope: !5150)
!5204 = !DILocation(line: 1255, column: 28, scope: !5132)
!5205 = !DILocation(line: 1255, column: 22, scope: !5132)
!5206 = !DILocation(line: 1255, column: 17, scope: !5132)
!5207 = !DILocation(line: 1255, column: 17, scope: !5154)
!5208 = !DILocation(line: 1259, column: 28, scope: !5158)
!5209 = !DILocation(line: 1259, column: 16, scope: !5158)
!5210 = !DILocation(line: 1267, column: 6, scope: !5124)
!5211 = !DILocation(line: 1250, column: 24, scope: !5146)
!5212 = !DILocation(line: 1259, column: 21, scope: !5158)
!5213 = !DILocation(line: 1260, column: 17, scope: !5158)
!5214 = !DILocation(line: 1260, column: 21, scope: !5158)
!5215 = !DILocation(line: 1266, column: 9, scope: !5132)
!5216 = !DILocation(line: 1261, column: 26, scope: !5158)
!5217 = !DILocation(line: 1012, column: 25, scope: !3589, inlinedAt: !5218)
!5218 = distinct !DILocation(line: 1261, column: 45, scope: !5158)
!5219 = !DILocation(line: 1013, column: 15, scope: !3589, inlinedAt: !5218)
!5220 = !DILocation(line: 1013, column: 9, scope: !3589, inlinedAt: !5218)
!5221 = !DILocation(line: 1015, column: 21, scope: !3589, inlinedAt: !5218)
!5222 = !DILocation(line: 1014, column: 18, scope: !3589, inlinedAt: !5218)
!5223 = !DILocation(line: 1014, column: 18, scope: !3595, inlinedAt: !5218)
!5224 = !DILocation(line: 1017, column: 6, scope: !3589, inlinedAt: !5218)
!5225 = !DILocation(line: 1261, column: 45, scope: !5158)
!5226 = !DILocation(line: 1261, column: 21, scope: !5160)
!5227 = !DILocation(line: 1262, column: 22, scope: !5160)
!5228 = !DILocation(line: 1262, column: 17, scope: !5160)
!5229 = !DILocation(line: 1262, column: 17, scope: !5162)
!5230 = !DILocation(line: 622, column: 21, scope: !5140)
!5231 = !DILocation(line: 623, column: 39, scope: !5138)
!5232 = !DILocation(line: 623, column: 21, scope: !5138)
!5233 = !DILocation(line: 624, column: 28, scope: !5138)
!5234 = !DILocation(line: 624, column: 21, scope: !5138)
!5235 = !DILocation(line: 0, scope: !5236)
!5236 = !DILexicalBlockFile(scope: !5124, file: !626, discriminator: 0)
!5237 = distinct !DISubprogram(name: "print_generic_arg", linkageName: "_ZN14rustc_demangle2v07Printer17print_generic_arg17h94f686437d5719d5E", scope: !2303, file: !751, line: 891, type: !2939, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !5238, retainedNodes: !5239)
!5238 = !DISubprogram(name: "print_generic_arg", linkageName: "_ZN14rustc_demangle2v07Printer17print_generic_arg17h94f686437d5719d5E", scope: !2303, file: !751, line: 891, type: !2939, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!5239 = !{!5240, !5241, !5243, !5245, !5247, !5249, !5251}
!5240 = !DILocalVariable(name: "self", arg: 1, scope: !5237, file: !751, line: 891, type: !2323)
!5241 = !DILocalVariable(name: "lt", scope: !5242, file: !751, line: 893, type: !765, align: 64)
!5242 = distinct !DILexicalBlock(scope: !5237, file: !751, line: 893, column: 13)
!5243 = !DILocalVariable(name: "parser", scope: !5244, file: !751, line: 619, type: !1726, align: 32)
!5244 = distinct !DILexicalBlock(scope: !5237, file: !751, line: 619, column: 13)
!5245 = !DILocalVariable(name: "x", scope: !5246, file: !751, line: 620, type: !765, align: 64)
!5246 = distinct !DILexicalBlock(scope: !5244, file: !751, line: 620, column: 17)
!5247 = !DILocalVariable(name: "err", scope: !5248, file: !751, line: 621, type: !87, align: 8)
!5248 = distinct !DILexicalBlock(scope: !5244, file: !751, line: 621, column: 17)
!5249 = !DILocalVariable(name: "residual", scope: !5250, file: !751, line: 622, type: !2336, align: 8)
!5250 = distinct !DILexicalBlock(scope: !5248, file: !751, line: 622, column: 50)
!5251 = !DILocalVariable(name: "val", scope: !5252, file: !751, line: 622, type: !7, align: 8)
!5252 = distinct !DILexicalBlock(scope: !5248, file: !751, line: 622, column: 21)
!5253 = !DILocation(line: 891, column: 26, scope: !5237)
!5254 = !DILocation(line: 621, column: 21, scope: !5248)
!5255 = !DILocation(line: 622, column: 50, scope: !5250)
!5256 = !DILocation(line: 622, column: 21, scope: !5252)
!5257 = !DILocation(line: 892, column: 17, scope: !5237)
!5258 = !DILocation(line: 892, column: 12, scope: !5237)
!5259 = !DILocation(line: 895, column: 24, scope: !5237)
!5260 = !DILocation(line: 895, column: 19, scope: !5237)
!5261 = !DILocation(line: 618, column: 15, scope: !5237)
!5262 = !DILocation(line: 618, column: 9, scope: !5237)
!5263 = !DILocation(line: 898, column: 18, scope: !5237)
!5264 = !DILocation(line: 896, column: 18, scope: !5237)
!5265 = !DILocation(line: 900, column: 6, scope: !5237)
!5266 = !DILocation(line: 627, column: 39, scope: !5237)
!5267 = !DILocation(line: 619, column: 16, scope: !5237)
!5268 = !DILocation(line: 619, column: 16, scope: !5244)
!5269 = !DILocation(line: 619, column: 48, scope: !5244)
!5270 = !DILocation(line: 619, column: 41, scope: !5244)
!5271 = !DILocation(line: 619, column: 35, scope: !5244)
!5272 = !DILocation(line: 621, column: 21, scope: !5244)
!5273 = !DILocation(line: 622, column: 40, scope: !5248)
!5274 = !DILocation(line: 622, column: 30, scope: !5248)
!5275 = !DILocation(line: 622, column: 21, scope: !5248)
!5276 = !DILocation(line: 620, column: 20, scope: !5244)
!5277 = !DILocation(line: 893, column: 17, scope: !5242)
!5278 = !DILocation(line: 620, column: 20, scope: !5246)
!5279 = !DILocation(line: 894, column: 18, scope: !5242)
!5280 = !DILocation(line: 622, column: 21, scope: !5250)
!5281 = !DILocation(line: 623, column: 39, scope: !5248)
!5282 = !DILocation(line: 623, column: 21, scope: !5248)
!5283 = !DILocation(line: 624, column: 28, scope: !5248)
!5284 = !DILocation(line: 624, column: 21, scope: !5248)
!5285 = !DILocation(line: 0, scope: !5286)
!5286 = !DILexicalBlockFile(scope: !5237, file: !626, discriminator: 0)
!5287 = distinct !DISubprogram(name: "skipping_printing<rustc_demangle::v0::{impl#6}::print_path::{closure_env#0}>", linkageName: "_ZN14rustc_demangle2v07Printer17skipping_printing17h20796fb0adcc57eaE", scope: !2303, file: !751, line: 642, type: !5288, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5291, declaration: !5290, retainedNodes: !5293)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{null, !2323, !2930}
!5290 = !DISubprogram(name: "skipping_printing<rustc_demangle::v0::{impl#6}::print_path::{closure_env#0}>", linkageName: "_ZN14rustc_demangle2v07Printer17skipping_printing17h20796fb0adcc57eaE", scope: !2303, file: !751, line: 642, type: !5288, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5291)
!5291 = !{!5292}
!5292 = !DITemplateTypeParameter(name: "F", type: !2930)
!5293 = !{!5294, !5295, !5296}
!5294 = !DILocalVariable(name: "self", arg: 1, scope: !5287, file: !751, line: 642, type: !2323)
!5295 = !DILocalVariable(name: "f", arg: 2, scope: !5287, file: !751, line: 642, type: !2930)
!5296 = !DILocalVariable(name: "orig_out", scope: !5297, file: !751, line: 646, type: !2307, align: 32)
!5297 = distinct !DILexicalBlock(scope: !5287, file: !751, line: 646, column: 9)
!5298 = !DILocation(line: 642, column: 29, scope: !5287)
!5299 = !DILocation(line: 642, column: 40, scope: !5287)
!5300 = !DILocation(line: 646, column: 24, scope: !5287)
!5301 = !DILocation(line: 646, column: 33, scope: !5287)
!5302 = !DILocation(line: 646, column: 13, scope: !5297)
!5303 = !DILocation(line: 647, column: 9, scope: !5297)
!5304 = !DILocation(line: 647, column: 17, scope: !5297)
!5305 = !DILocation(line: 648, column: 9, scope: !5297)
!5306 = !DILocation(line: 649, column: 6, scope: !5287)
!5307 = distinct !DISubprogram(name: "print_const_str_literal", linkageName: "_ZN14rustc_demangle2v07Printer23print_const_str_literal17h3070eca8218c613cE", scope: !2303, file: !751, line: 1269, type: !2939, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !5308, retainedNodes: !5309)
!5308 = !DISubprogram(name: "print_const_str_literal", linkageName: "_ZN14rustc_demangle2v07Printer23print_const_str_literal17h3070eca8218c613cE", scope: !2303, file: !751, line: 1269, type: !2939, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!5309 = !{!5310, !5311, !5313, !5315, !5317, !5319, !5321, !5323, !5325, !5327}
!5310 = !DILocalVariable(name: "self", arg: 1, scope: !5307, file: !751, line: 1269, type: !2323)
!5311 = !DILocalVariable(name: "parser", scope: !5312, file: !751, line: 619, type: !1726, align: 32)
!5312 = distinct !DILexicalBlock(scope: !5307, file: !751, line: 619, column: 13)
!5313 = !DILocalVariable(name: "x", scope: !5314, file: !751, line: 620, type: !752, align: 32)
!5314 = distinct !DILexicalBlock(scope: !5312, file: !751, line: 620, column: 17)
!5315 = !DILocalVariable(name: "err", scope: !5316, file: !751, line: 621, type: !87, align: 8)
!5316 = distinct !DILexicalBlock(scope: !5312, file: !751, line: 621, column: 17)
!5317 = !DILocalVariable(name: "residual", scope: !5318, file: !751, line: 622, type: !2336, align: 8)
!5318 = distinct !DILexicalBlock(scope: !5316, file: !751, line: 622, column: 50)
!5319 = !DILocalVariable(name: "val", scope: !5320, file: !751, line: 622, type: !7, align: 8)
!5320 = distinct !DILexicalBlock(scope: !5316, file: !751, line: 622, column: 21)
!5321 = !DILocalVariable(name: "chars", scope: !5322, file: !751, line: 1271, type: !259, align: 32)
!5322 = distinct !DILexicalBlock(scope: !5307, file: !751, line: 1271, column: 13)
!5323 = !DILocalVariable(name: "err", scope: !5324, file: !751, line: 600, type: !87, align: 8)
!5324 = distinct !DILexicalBlock(scope: !5307, file: !751, line: 600, column: 9)
!5325 = !DILocalVariable(name: "residual", scope: !5326, file: !751, line: 601, type: !2336, align: 8)
!5326 = distinct !DILexicalBlock(scope: !5324, file: !751, line: 601, column: 38)
!5327 = !DILocalVariable(name: "val", scope: !5328, file: !751, line: 601, type: !7, align: 8)
!5328 = distinct !DILexicalBlock(scope: !5324, file: !751, line: 601, column: 9)
!5329 = !DILocation(line: 1269, column: 32, scope: !5307)
!5330 = !DILocation(line: 621, column: 21, scope: !5316)
!5331 = !DILocation(line: 1271, column: 18, scope: !5322)
!5332 = !DILocation(line: 600, column: 13, scope: !5324)
!5333 = !DILocation(line: 622, column: 50, scope: !5318)
!5334 = !DILocation(line: 622, column: 21, scope: !5320)
!5335 = !DILocation(line: 601, column: 38, scope: !5326)
!5336 = !DILocation(line: 601, column: 9, scope: !5328)
!5337 = !DILocation(line: 618, column: 15, scope: !5307)
!5338 = !DILocation(line: 618, column: 9, scope: !5307)
!5339 = !DILocation(line: 627, column: 39, scope: !5307)
!5340 = !DILocation(line: 619, column: 16, scope: !5307)
!5341 = !DILocation(line: 619, column: 16, scope: !5312)
!5342 = !DILocation(line: 619, column: 48, scope: !5312)
!5343 = !DILocation(line: 619, column: 41, scope: !5312)
!5344 = !DILocation(line: 619, column: 35, scope: !5312)
!5345 = !DILocation(line: 621, column: 21, scope: !5312)
!5346 = !DILocation(line: 622, column: 40, scope: !5316)
!5347 = !DILocation(line: 622, column: 30, scope: !5316)
!5348 = !DILocation(line: 622, column: 21, scope: !5316)
!5349 = !DILocation(line: 620, column: 20, scope: !5312)
!5350 = !DILocation(line: 620, column: 20, scope: !5314)
!5351 = !DILocation(line: 620, column: 26, scope: !5314)
!5352 = !DILocation(line: 1270, column: 41, scope: !5307)
!5353 = !DILocation(line: 1270, column: 15, scope: !5307)
!5354 = !DILocation(line: 1270, column: 9, scope: !5307)
!5355 = !DILocation(line: 1271, column: 18, scope: !5307)
!5356 = !DILocation(line: 1271, column: 33, scope: !5322)
!5357 = !DILocation(line: 600, column: 19, scope: !5307)
!5358 = !DILocation(line: 601, column: 28, scope: !5324)
!5359 = !DILocation(line: 601, column: 18, scope: !5324)
!5360 = !DILocation(line: 601, column: 9, scope: !5324)
!5361 = !DILocation(line: 601, column: 9, scope: !5326)
!5362 = !DILocation(line: 602, column: 27, scope: !5324)
!5363 = !DILocation(line: 602, column: 9, scope: !5324)
!5364 = !DILocation(line: 603, column: 16, scope: !5324)
!5365 = !DILocation(line: 603, column: 9, scope: !5324)
!5366 = !DILocation(line: 1274, column: 6, scope: !5307)
!5367 = !DILocation(line: 622, column: 21, scope: !5318)
!5368 = !DILocation(line: 623, column: 39, scope: !5316)
!5369 = !DILocation(line: 623, column: 21, scope: !5316)
!5370 = !DILocation(line: 624, column: 28, scope: !5316)
!5371 = !DILocation(line: 624, column: 21, scope: !5316)
!5372 = !DILocation(line: 0, scope: !5373)
!5373 = !DILexicalBlockFile(scope: !5307, file: !626, discriminator: 0)
!5374 = distinct !DISubprogram(name: "print_lifetime_from_index", linkageName: "_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E", scope: !2303, file: !751, line: 717, type: !5375, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !5377, retainedNodes: !5378)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!1079, !2323, !765}
!5377 = !DISubprogram(name: "print_lifetime_from_index", linkageName: "_ZN14rustc_demangle2v07Printer25print_lifetime_from_index17h2d935a9892819db4E", scope: !2303, file: !751, line: 717, type: !5375, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!5378 = !{!5379, !5380, !5381, !5383, !5385, !5387, !5389, !5391, !5393, !5395, !5397}
!5379 = !DILocalVariable(name: "self", arg: 1, scope: !5374, file: !751, line: 717, type: !2323)
!5380 = !DILocalVariable(name: "lt", arg: 2, scope: !5374, file: !751, line: 717, type: !765)
!5381 = !DILocalVariable(name: "residual", scope: !5382, file: !751, line: 723, type: !2336, align: 8)
!5382 = distinct !DILexicalBlock(scope: !5374, file: !751, line: 723, column: 24)
!5383 = !DILocalVariable(name: "val", scope: !5384, file: !751, line: 723, type: !7, align: 8)
!5384 = distinct !DILexicalBlock(scope: !5374, file: !751, line: 723, column: 9)
!5385 = !DILocalVariable(name: "depth", scope: !5386, file: !751, line: 728, type: !765, align: 64)
!5386 = distinct !DILexicalBlock(scope: !5374, file: !751, line: 728, column: 13)
!5387 = !DILocalVariable(name: "c", scope: !5388, file: !751, line: 731, type: !252, align: 32)
!5388 = distinct !DILexicalBlock(scope: !5386, file: !751, line: 731, column: 21)
!5389 = !DILocalVariable(name: "residual", scope: !5390, file: !751, line: 735, type: !2336, align: 8)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !751, line: 735, column: 36)
!5391 = !DILocalVariable(name: "val", scope: !5392, file: !751, line: 735, type: !7, align: 8)
!5392 = distinct !DILexicalBlock(scope: !5386, file: !751, line: 735, column: 21)
!5393 = !DILocalVariable(name: "err", scope: !5394, file: !751, line: 600, type: !87, align: 8)
!5394 = distinct !DILexicalBlock(scope: !5374, file: !751, line: 600, column: 9)
!5395 = !DILocalVariable(name: "residual", scope: !5396, file: !751, line: 601, type: !2336, align: 8)
!5396 = distinct !DILexicalBlock(scope: !5394, file: !751, line: 601, column: 38)
!5397 = !DILocalVariable(name: "val", scope: !5398, file: !751, line: 601, type: !7, align: 8)
!5398 = distinct !DILexicalBlock(scope: !5394, file: !751, line: 601, column: 9)
!5399 = !DILocation(line: 717, column: 34, scope: !5374)
!5400 = !DILocation(line: 717, column: 45, scope: !5374)
!5401 = !DILocation(line: 600, column: 13, scope: !5394)
!5402 = !DILocation(line: 723, column: 24, scope: !5382)
!5403 = !DILocation(line: 723, column: 9, scope: !5384)
!5404 = !DILocation(line: 735, column: 36, scope: !5390)
!5405 = !DILocation(line: 735, column: 21, scope: !5392)
!5406 = !DILocation(line: 601, column: 38, scope: !5396)
!5407 = !DILocation(line: 601, column: 9, scope: !5398)
!5408 = !DILocation(line: 719, column: 12, scope: !5374)
!5409 = !DILocation(line: 719, column: 21, scope: !5374)
!5410 = !DILocation(line: 723, column: 14, scope: !5374)
!5411 = !DILocation(line: 723, column: 9, scope: !5374)
!5412 = !DILocation(line: 720, column: 20, scope: !5374)
!5413 = !DILocation(line: 0, scope: !5414)
!5414 = !DILexicalBlockFile(scope: !5374, file: !626, discriminator: 0)
!5415 = !DILocation(line: 723, column: 9, scope: !5382)
!5416 = !DILocation(line: 724, column: 12, scope: !5374)
!5417 = !DILocation(line: 725, column: 25, scope: !5374)
!5418 = !DILocation(line: 727, column: 16, scope: !5374)
!5419 = !DILocation(line: 727, column: 15, scope: !5374)
!5420 = !DILocation(line: 727, column: 50, scope: !5374)
!5421 = !DILocation(line: 727, column: 9, scope: !5374)
!5422 = !DILocation(line: 741, column: 6, scope: !5374)
!5423 = !DILocation(line: 728, column: 18, scope: !5374)
!5424 = !DILocation(line: 728, column: 18, scope: !5386)
!5425 = !DILocation(line: 730, column: 20, scope: !5386)
!5426 = !DILocation(line: 600, column: 19, scope: !5374)
!5427 = !DILocation(line: 601, column: 28, scope: !5394)
!5428 = !DILocation(line: 601, column: 18, scope: !5394)
!5429 = !DILocation(line: 601, column: 9, scope: !5394)
!5430 = !DILocation(line: 601, column: 9, scope: !5396)
!5431 = !DILocation(line: 602, column: 27, scope: !5394)
!5432 = !DILocation(line: 602, column: 9, scope: !5394)
!5433 = !DILocation(line: 603, column: 16, scope: !5394)
!5434 = !DILocation(line: 603, column: 9, scope: !5394)
!5435 = !DILocation(line: 735, column: 26, scope: !5386)
!5436 = !DILocation(line: 735, column: 21, scope: !5386)
!5437 = !DILocation(line: 731, column: 37, scope: !5386)
!5438 = !DILocation(line: 731, column: 29, scope: !5386)
!5439 = !DILocation(line: 735, column: 21, scope: !5390)
!5440 = !DILocation(line: 736, column: 26, scope: !5386)
!5441 = !DILocation(line: 731, column: 25, scope: !5388)
!5442 = !DILocation(line: 732, column: 26, scope: !5388)
!5443 = distinct !DISubprogram(name: "print_quoted_escaped_chars<core::iter::sources::once::Once<char>>", linkageName: "_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h914937b601f2723dE", scope: !2303, file: !751, line: 688, type: !5444, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5459, declaration: !5458, retainedNodes: !5461)
!5444 = !DISubroutineType(types: !5445)
!5445 = !{!1079, !2323, !252, !5446}
!5446 = !DICompositeType(tag: DW_TAG_structure_type, name: "Once<char>", scope: !5447, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !5448, templateParams: !250, identifier: "df7c7661293767149cb8aa0f4c202ab2")
!5447 = !DINamespace(name: "once", scope: !264)
!5448 = !{!5449}
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !5446, file: !2, baseType: !5450, size: 32, align: 32, flags: DIFlagPrivate)
!5450 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoIter<char>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !5451, templateParams: !5456, identifier: "d19bd47ac7ec9efc2e35bf78c8c87c9")
!5451 = !{!5452}
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !5450, file: !2, baseType: !5453, size: 32, align: 32, flags: DIFlagPrivate)
!5453 = !DICompositeType(tag: DW_TAG_structure_type, name: "Item<char>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPrivate, elements: !5454, templateParams: !5456, identifier: "673669efcdc3502c33a8b357bb0dff87")
!5454 = !{!5455}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "opt", scope: !5453, file: !2, baseType: !243, size: 32, align: 32, flags: DIFlagPrivate)
!5456 = !{!5457}
!5457 = !DITemplateTypeParameter(name: "A", type: !252)
!5458 = !DISubprogram(name: "print_quoted_escaped_chars<core::iter::sources::once::Once<char>>", linkageName: "_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h914937b601f2723dE", scope: !2303, file: !751, line: 688, type: !5444, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5459)
!5459 = !{!5460}
!5460 = !DITemplateTypeParameter(name: "impl Iterator<Item = char>", type: !5446)
!5461 = !{!5462, !5463, !5464, !5465, !5467, !5469, !5471, !5473, !5475, !5477, !5479, !5510, !5512, !5514, !5516, !5518}
!5462 = !DILocalVariable(name: "self", arg: 1, scope: !5443, file: !751, line: 689, type: !2323)
!5463 = !DILocalVariable(name: "quote", arg: 2, scope: !5443, file: !751, line: 690, type: !252)
!5464 = !DILocalVariable(name: "chars", arg: 3, scope: !5443, file: !751, line: 691, type: !5446)
!5465 = !DILocalVariable(name: "out", scope: !5466, file: !751, line: 693, type: !1630, align: 32)
!5466 = distinct !DILexicalBlock(scope: !5443, file: !751, line: 693, column: 42)
!5467 = !DILocalVariable(name: "residual", scope: !5468, file: !751, line: 696, type: !2336, align: 8)
!5468 = distinct !DILexicalBlock(scope: !5466, file: !751, line: 696, column: 34)
!5469 = !DILocalVariable(name: "val", scope: !5470, file: !751, line: 696, type: !7, align: 8)
!5470 = distinct !DILexicalBlock(scope: !5466, file: !751, line: 696, column: 13)
!5471 = !DILocalVariable(name: "iter", scope: !5472, file: !751, line: 697, type: !5446, align: 32)
!5472 = distinct !DILexicalBlock(scope: !5466, file: !751, line: 697, column: 13)
!5473 = !DILocalVariable(name: "c", scope: !5474, file: !751, line: 697, type: !252, align: 32)
!5474 = distinct !DILexicalBlock(scope: !5472, file: !751, line: 697, column: 28)
!5475 = !DILocalVariable(name: "residual", scope: !5476, file: !751, line: 701, type: !2336, align: 8)
!5476 = distinct !DILexicalBlock(scope: !5474, file: !751, line: 701, column: 38)
!5477 = !DILocalVariable(name: "val", scope: !5478, file: !751, line: 701, type: !7, align: 8)
!5478 = distinct !DILexicalBlock(scope: !5474, file: !751, line: 701, column: 21)
!5479 = !DILocalVariable(name: "iter", scope: !5480, file: !751, line: 705, type: !5481, align: 32)
!5480 = distinct !DILexicalBlock(scope: !5474, file: !751, line: 705, column: 17)
!5481 = !DICompositeType(tag: DW_TAG_structure_type, name: "EscapeDebug", scope: !5482, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !5483, templateParams: !14, identifier: "f90fad7fc135f4a1e627c47f65261191")
!5482 = !DINamespace(name: "char", scope: !31)
!5483 = !{!5484}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5481, file: !2, baseType: !5485, size: 128, align: 32, flags: DIFlagPrivate)
!5485 = !DICompositeType(tag: DW_TAG_structure_type, name: "EscapeIterInner<10, core::escape::MaybeEscaped>", scope: !5486, file: !2, size: 128, align: 32, flags: DIFlagProtected, elements: !5487, templateParams: !5508, identifier: "e40e0694d3dfc20057331761a993600a")
!5486 = !DINamespace(name: "escape", scope: !31)
!5487 = !{!5488, !5496, !5503}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5485, file: !2, baseType: !5489, size: 96, align: 32, flags: DIFlagPrivate)
!5489 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeEscapedCharacter<10>", scope: !5486, file: !2, size: 96, align: 32, elements: !5490, templateParams: !14, identifier: "b023b600bb5e8ff5ac1de157812e7e9f")
!5490 = !{!5491, !5495}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "escape_seq", scope: !5489, file: !2, baseType: !5492, size: 80, align: 8)
!5492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 80, align: 8, elements: !5493)
!5493 = !{!5494}
!5494 = !DISubrange(count: 10, lowerBound: 0)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "literal", scope: !5489, file: !2, baseType: !252, size: 32, align: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !5485, file: !2, baseType: !5497, size: 16, align: 8, offset: 96, flags: DIFlagPrivate)
!5497 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<u8>", scope: !1020, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !5498, templateParams: !5501, identifier: "22e411b017f9ab39be60c1c210992558")
!5498 = !{!5499, !5500}
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5497, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagPublic)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5497, file: !2, baseType: !13, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!5501 = !{!5502}
!5502 = !DITemplateTypeParameter(name: "Idx", type: !13)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "escaping", scope: !5485, file: !2, baseType: !5504, align: 8, offset: 112, flags: DIFlagPrivate)
!5504 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<core::escape::MaybeEscaped>", scope: !408, file: !2, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !5505, identifier: "6dfcd857c5ddb23f4e5ccbbe6f8171ac")
!5505 = !{!5506}
!5506 = !DITemplateTypeParameter(name: "T", type: !5507)
!5507 = !DICompositeType(tag: DW_TAG_structure_type, name: "MaybeEscaped", scope: !5486, file: !2, align: 8, flags: DIFlagProtected, elements: !14, identifier: "21eda89c7ce7a8d22da08bb290d6ddae")
!5508 = !{!5509}
!5509 = !DITemplateTypeParameter(name: "ESCAPING", type: !5507)
!5510 = !DILocalVariable(name: "escaped", scope: !5511, file: !751, line: 705, type: !252, align: 32)
!5511 = distinct !DILexicalBlock(scope: !5480, file: !751, line: 705, column: 49)
!5512 = !DILocalVariable(name: "residual", scope: !5513, file: !751, line: 706, type: !2336, align: 8)
!5513 = distinct !DILexicalBlock(scope: !5511, file: !751, line: 706, column: 44)
!5514 = !DILocalVariable(name: "val", scope: !5515, file: !751, line: 706, type: !7, align: 8)
!5515 = distinct !DILexicalBlock(scope: !5511, file: !751, line: 706, column: 21)
!5516 = !DILocalVariable(name: "residual", scope: !5517, file: !751, line: 709, type: !2336, align: 8)
!5517 = distinct !DILexicalBlock(scope: !5466, file: !751, line: 709, column: 34)
!5518 = !DILocalVariable(name: "val", scope: !5519, file: !751, line: 709, type: !7, align: 8)
!5519 = distinct !DILexicalBlock(scope: !5466, file: !751, line: 709, column: 13)
!5520 = !DILocation(line: 689, column: 9, scope: !5443)
!5521 = !DILocation(line: 690, column: 9, scope: !5443)
!5522 = !DILocation(line: 691, column: 9, scope: !5443)
!5523 = !DILocation(line: 697, column: 22, scope: !5472)
!5524 = !DILocation(line: 705, column: 32, scope: !5480)
!5525 = !DILocation(line: 696, column: 34, scope: !5468)
!5526 = !DILocation(line: 696, column: 13, scope: !5470)
!5527 = !DILocation(line: 701, column: 38, scope: !5476)
!5528 = !DILocation(line: 701, column: 21, scope: !5478)
!5529 = !DILocation(line: 706, column: 44, scope: !5513)
!5530 = !DILocation(line: 706, column: 21, scope: !5515)
!5531 = !DILocation(line: 709, column: 34, scope: !5517)
!5532 = !DILocation(line: 709, column: 13, scope: !5519)
!5533 = !DILocation(line: 693, column: 9, scope: !5443)
!5534 = !DILocation(line: 693, column: 28, scope: !5466)
!5535 = !DILocation(line: 693, column: 16, scope: !5466)
!5536 = !DILocation(line: 693, column: 21, scope: !5466)
!5537 = !DILocation(line: 696, column: 17, scope: !5466)
!5538 = !DILocation(line: 696, column: 13, scope: !5466)
!5539 = !DILocation(line: 711, column: 9, scope: !5443)
!5540 = !DILocation(line: 712, column: 5, scope: !5443)
!5541 = !DILocation(line: 696, column: 13, scope: !5468)
!5542 = !DILocation(line: 697, column: 22, scope: !5466)
!5543 = !DILocation(line: 697, column: 13, scope: !5472)
!5544 = !DILocation(line: 697, column: 17, scope: !5472)
!5545 = !DILocation(line: 697, column: 17, scope: !5474)
!5546 = !DILocation(line: 700, column: 20, scope: !5474)
!5547 = !DILocation(line: 709, column: 17, scope: !5466)
!5548 = !DILocation(line: 709, column: 13, scope: !5466)
!5549 = !DILocation(line: 709, column: 13, scope: !5517)
!5550 = !DILocation(line: 705, column: 34, scope: !5474)
!5551 = !DILocation(line: 705, column: 32, scope: !5474)
!5552 = !DILocation(line: 705, column: 17, scope: !5480)
!5553 = !DILocation(line: 701, column: 25, scope: !5474)
!5554 = !DILocation(line: 701, column: 21, scope: !5474)
!5555 = !DILocation(line: 705, column: 21, scope: !5480)
!5556 = !DILocation(line: 705, column: 21, scope: !5511)
!5557 = !DILocation(line: 706, column: 25, scope: !5511)
!5558 = !DILocation(line: 706, column: 21, scope: !5511)
!5559 = !DILocation(line: 706, column: 21, scope: !5513)
!5560 = !DILocation(line: 708, column: 13, scope: !5466)
!5561 = !DILocation(line: 701, column: 21, scope: !5476)
!5562 = !DILocation(line: 712, column: 6, scope: !5443)
!5563 = !DILocation(line: 0, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5443, file: !626, discriminator: 0)
!5565 = distinct !DISubprogram(name: "print_quoted_escaped_chars<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>>", linkageName: "_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h9fa93d09e0af28dfE", scope: !2303, file: !751, line: 688, type: !5566, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5569, declaration: !5568, retainedNodes: !5571)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{!1079, !2323, !252, !259}
!5568 = !DISubprogram(name: "print_quoted_escaped_chars<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>>", linkageName: "_ZN14rustc_demangle2v07Printer26print_quoted_escaped_chars17h9fa93d09e0af28dfE", scope: !2303, file: !751, line: 688, type: !5566, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5569)
!5569 = !{!5570}
!5570 = !DITemplateTypeParameter(name: "impl Iterator<Item = char>", type: !259)
!5571 = !{!5572, !5573, !5574, !5575, !5577, !5579, !5581, !5583, !5585, !5587, !5589, !5591, !5593, !5595, !5597, !5599}
!5572 = !DILocalVariable(name: "self", arg: 1, scope: !5565, file: !751, line: 689, type: !2323)
!5573 = !DILocalVariable(name: "quote", arg: 2, scope: !5565, file: !751, line: 690, type: !252)
!5574 = !DILocalVariable(name: "chars", arg: 3, scope: !5565, file: !751, line: 691, type: !259)
!5575 = !DILocalVariable(name: "out", scope: !5576, file: !751, line: 693, type: !1630, align: 32)
!5576 = distinct !DILexicalBlock(scope: !5565, file: !751, line: 693, column: 42)
!5577 = !DILocalVariable(name: "residual", scope: !5578, file: !751, line: 696, type: !2336, align: 8)
!5578 = distinct !DILexicalBlock(scope: !5576, file: !751, line: 696, column: 34)
!5579 = !DILocalVariable(name: "val", scope: !5580, file: !751, line: 696, type: !7, align: 8)
!5580 = distinct !DILexicalBlock(scope: !5576, file: !751, line: 696, column: 13)
!5581 = !DILocalVariable(name: "iter", scope: !5582, file: !751, line: 697, type: !259, align: 32)
!5582 = distinct !DILexicalBlock(scope: !5576, file: !751, line: 697, column: 13)
!5583 = !DILocalVariable(name: "c", scope: !5584, file: !751, line: 697, type: !252, align: 32)
!5584 = distinct !DILexicalBlock(scope: !5582, file: !751, line: 697, column: 28)
!5585 = !DILocalVariable(name: "residual", scope: !5586, file: !751, line: 701, type: !2336, align: 8)
!5586 = distinct !DILexicalBlock(scope: !5584, file: !751, line: 701, column: 38)
!5587 = !DILocalVariable(name: "val", scope: !5588, file: !751, line: 701, type: !7, align: 8)
!5588 = distinct !DILexicalBlock(scope: !5584, file: !751, line: 701, column: 21)
!5589 = !DILocalVariable(name: "iter", scope: !5590, file: !751, line: 705, type: !5481, align: 32)
!5590 = distinct !DILexicalBlock(scope: !5584, file: !751, line: 705, column: 17)
!5591 = !DILocalVariable(name: "escaped", scope: !5592, file: !751, line: 705, type: !252, align: 32)
!5592 = distinct !DILexicalBlock(scope: !5590, file: !751, line: 705, column: 49)
!5593 = !DILocalVariable(name: "residual", scope: !5594, file: !751, line: 706, type: !2336, align: 8)
!5594 = distinct !DILexicalBlock(scope: !5592, file: !751, line: 706, column: 44)
!5595 = !DILocalVariable(name: "val", scope: !5596, file: !751, line: 706, type: !7, align: 8)
!5596 = distinct !DILexicalBlock(scope: !5592, file: !751, line: 706, column: 21)
!5597 = !DILocalVariable(name: "residual", scope: !5598, file: !751, line: 709, type: !2336, align: 8)
!5598 = distinct !DILexicalBlock(scope: !5576, file: !751, line: 709, column: 34)
!5599 = !DILocalVariable(name: "val", scope: !5600, file: !751, line: 709, type: !7, align: 8)
!5600 = distinct !DILexicalBlock(scope: !5576, file: !751, line: 709, column: 13)
!5601 = !DILocation(line: 689, column: 9, scope: !5565)
!5602 = !DILocation(line: 690, column: 9, scope: !5565)
!5603 = !DILocation(line: 691, column: 9, scope: !5565)
!5604 = !DILocation(line: 697, column: 22, scope: !5582)
!5605 = !DILocation(line: 705, column: 32, scope: !5590)
!5606 = !DILocation(line: 696, column: 34, scope: !5578)
!5607 = !DILocation(line: 696, column: 13, scope: !5580)
!5608 = !DILocation(line: 701, column: 38, scope: !5586)
!5609 = !DILocation(line: 701, column: 21, scope: !5588)
!5610 = !DILocation(line: 706, column: 44, scope: !5594)
!5611 = !DILocation(line: 706, column: 21, scope: !5596)
!5612 = !DILocation(line: 709, column: 34, scope: !5598)
!5613 = !DILocation(line: 709, column: 13, scope: !5600)
!5614 = !DILocation(line: 693, column: 9, scope: !5565)
!5615 = !DILocation(line: 693, column: 28, scope: !5576)
!5616 = !DILocation(line: 693, column: 16, scope: !5576)
!5617 = !DILocation(line: 693, column: 21, scope: !5576)
!5618 = !DILocation(line: 696, column: 17, scope: !5576)
!5619 = !DILocation(line: 696, column: 13, scope: !5576)
!5620 = !DILocation(line: 711, column: 9, scope: !5565)
!5621 = !DILocation(line: 712, column: 5, scope: !5565)
!5622 = !DILocation(line: 696, column: 13, scope: !5578)
!5623 = !DILocation(line: 697, column: 22, scope: !5576)
!5624 = !DILocation(line: 697, column: 13, scope: !5582)
!5625 = !DILocation(line: 697, column: 17, scope: !5582)
!5626 = !DILocation(line: 697, column: 17, scope: !5584)
!5627 = !DILocation(line: 700, column: 20, scope: !5584)
!5628 = !DILocation(line: 709, column: 17, scope: !5576)
!5629 = !DILocation(line: 709, column: 13, scope: !5576)
!5630 = !DILocation(line: 709, column: 13, scope: !5598)
!5631 = !DILocation(line: 705, column: 34, scope: !5584)
!5632 = !DILocation(line: 705, column: 32, scope: !5584)
!5633 = !DILocation(line: 705, column: 17, scope: !5590)
!5634 = !DILocation(line: 701, column: 25, scope: !5584)
!5635 = !DILocation(line: 701, column: 21, scope: !5584)
!5636 = !DILocation(line: 705, column: 21, scope: !5590)
!5637 = !DILocation(line: 705, column: 21, scope: !5592)
!5638 = !DILocation(line: 706, column: 25, scope: !5592)
!5639 = !DILocation(line: 706, column: 21, scope: !5592)
!5640 = !DILocation(line: 706, column: 21, scope: !5594)
!5641 = !DILocation(line: 708, column: 13, scope: !5576)
!5642 = !DILocation(line: 701, column: 21, scope: !5586)
!5643 = !DILocation(line: 712, column: 6, scope: !5565)
!5644 = !DILocation(line: 0, scope: !5645)
!5645 = !DILexicalBlockFile(scope: !5565, file: !626, discriminator: 0)
!5646 = distinct !DISubprogram(name: "print_path_maybe_open_generics", linkageName: "_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hdc3fa7ba7071b4caE", scope: !2303, file: !751, line: 1042, type: !5647, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !5664, retainedNodes: !5665)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{!5649, !2323}
!5649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<bool, core::fmt::Error>", scope: !30, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !5650, templateParams: !14, identifier: "a731e112d56d9b939b428ae4dfcca615")
!5650 = !{!5651}
!5651 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5649, file: !2, size: 8, align: 8, elements: !5652, templateParams: !14, identifier: "a70f2ceb5ca3cb6316fa375e0e894984", discriminator: !5663)
!5652 = !{!5653, !5659}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5651, file: !2, baseType: !5654, size: 8, align: 8)
!5654 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5649, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !5655, templateParams: !5657, identifier: "3de3d47f3056a65b976fe2617adc07a")
!5655 = !{!5656}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5654, file: !2, baseType: !706, size: 8, align: 8, flags: DIFlagPublic)
!5657 = !{!5658, !1088}
!5658 = !DITemplateTypeParameter(name: "T", type: !706)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5651, file: !2, baseType: !5660, size: 8, align: 8, extraData: i8 2)
!5660 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5649, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !5661, templateParams: !5657, identifier: "555eb1a364e6bd5c7b4c4126309e0feb")
!5661 = !{!5662}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5660, file: !2, baseType: !1089, align: 8, flags: DIFlagPublic)
!5663 = !DIDerivedType(tag: DW_TAG_member, scope: !5649, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!5664 = !DISubprogram(name: "print_path_maybe_open_generics", linkageName: "_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics17hdc3fa7ba7071b4caE", scope: !2303, file: !751, line: 1042, type: !5647, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!5665 = !{!5666, !5667, !5669, !5671, !5673, !5675, !5677, !5679, !5681, !5683, !5685, !5687}
!5666 = !DILocalVariable(name: "self", arg: 1, scope: !5646, file: !751, line: 1042, type: !2323)
!5667 = !DILocalVariable(name: "open", scope: !5668, file: !751, line: 1046, type: !706, align: 8)
!5668 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1046, column: 13)
!5669 = !DILocalVariable(name: "residual", scope: !5670, file: !751, line: 1050, type: !2336, align: 8)
!5670 = distinct !DILexicalBlock(scope: !5668, file: !751, line: 1050, column: 15)
!5671 = !DILocalVariable(name: "val", scope: !5672, file: !751, line: 1047, type: !7, align: 8)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !751, line: 1047, column: 13)
!5673 = !DILocalVariable(name: "residual", scope: !5674, file: !751, line: 1053, type: !2336, align: 8)
!5674 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1053, column: 35)
!5675 = !DILocalVariable(name: "val", scope: !5676, file: !751, line: 1053, type: !7, align: 8)
!5676 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1053, column: 13)
!5677 = !DILocalVariable(name: "residual", scope: !5678, file: !751, line: 1054, type: !2336, align: 8)
!5678 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1054, column: 28)
!5679 = !DILocalVariable(name: "val", scope: !5680, file: !751, line: 1054, type: !7, align: 8)
!5680 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1054, column: 13)
!5681 = !DILocalVariable(name: "residual", scope: !5682, file: !751, line: 1055, type: !2336, align: 8)
!5682 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1055, column: 63)
!5683 = !DILocalVariable(name: "val", scope: !5684, file: !751, line: 1055, type: !9, align: 32)
!5684 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1055, column: 13)
!5685 = !DILocalVariable(name: "residual", scope: !5686, file: !751, line: 1058, type: !2336, align: 8)
!5686 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1058, column: 35)
!5687 = !DILocalVariable(name: "val", scope: !5688, file: !751, line: 1058, type: !7, align: 8)
!5688 = distinct !DILexicalBlock(scope: !5646, file: !751, line: 1058, column: 13)
!5689 = !DILocation(line: 1042, column: 39, scope: !5646)
!5690 = !DILocation(line: 1046, column: 17, scope: !5668)
!5691 = !DILocation(line: 1050, column: 15, scope: !5670)
!5692 = !DILocation(line: 1047, column: 13, scope: !5672)
!5693 = !DILocation(line: 1053, column: 35, scope: !5674)
!5694 = !DILocation(line: 1053, column: 13, scope: !5676)
!5695 = !DILocation(line: 1054, column: 28, scope: !5678)
!5696 = !DILocation(line: 1054, column: 13, scope: !5680)
!5697 = !DILocation(line: 1055, column: 63, scope: !5682)
!5698 = !DILocation(line: 1058, column: 35, scope: !5686)
!5699 = !DILocation(line: 1058, column: 13, scope: !5688)
!5700 = !DILocation(line: 1043, column: 17, scope: !5646)
!5701 = !DILocation(line: 1043, column: 12, scope: !5646)
!5702 = !DILocation(line: 1052, column: 24, scope: !5646)
!5703 = !DILocation(line: 1052, column: 19, scope: !5646)
!5704 = !DILocation(line: 1046, column: 28, scope: !5646)
!5705 = !DILocation(line: 1047, column: 18, scope: !5668)
!5706 = !DILocation(line: 1047, column: 13, scope: !5668)
!5707 = !DILocation(line: 1058, column: 18, scope: !5646)
!5708 = !DILocation(line: 1058, column: 13, scope: !5646)
!5709 = !DILocation(line: 1053, column: 18, scope: !5646)
!5710 = !DILocation(line: 1053, column: 13, scope: !5646)
!5711 = !DILocation(line: 1058, column: 13, scope: !5686)
!5712 = !DILocation(line: 1059, column: 13, scope: !5646)
!5713 = !DILocation(line: 1052, column: 16, scope: !5646)
!5714 = !DILocation(line: 1061, column: 6, scope: !5646)
!5715 = !DILocation(line: 1053, column: 13, scope: !5674)
!5716 = !DILocation(line: 1054, column: 18, scope: !5646)
!5717 = !DILocation(line: 1054, column: 13, scope: !5646)
!5718 = !DILocation(line: 1054, column: 13, scope: !5678)
!5719 = !DILocation(line: 1055, column: 18, scope: !5646)
!5720 = !DILocation(line: 1055, column: 13, scope: !5646)
!5721 = !DILocation(line: 1055, column: 13, scope: !5682)
!5722 = !DILocation(line: 1055, column: 13, scope: !5684)
!5723 = !DILocation(line: 1056, column: 13, scope: !5646)
!5724 = !DILocation(line: 1047, column: 13, scope: !5670)
!5725 = !DILocation(line: 1051, column: 16, scope: !5668)
!5726 = !DILocation(line: 1051, column: 13, scope: !5668)
!5727 = !DILocation(line: 1043, column: 9, scope: !5646)
!5728 = !DILocation(line: 0, scope: !5729)
!5729 = !DILexicalBlockFile(scope: !5646, file: !626, discriminator: 0)
!5730 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v07Printer30print_path_maybe_open_generics28_$u7b$$u7b$closure$u7d$$u7d$17h54216aea32251b5bE", scope: !4608, file: !751, line: 1047, type: !5731, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !5733)
!5731 = !DISubroutineType(types: !5732)
!5732 = !{!1079, !4607, !2323}
!5733 = !{!5734, !5735, !5736, !5738}
!5734 = !DILocalVariable(name: "this", arg: 2, scope: !5730, file: !751, line: 1047, type: !2323)
!5735 = !DILocalVariable(name: "open", scope: !5730, file: !751, line: 1046, type: !706, align: 8)
!5736 = !DILocalVariable(name: "residual", scope: !5737, file: !751, line: 1048, type: !2336, align: 8)
!5737 = distinct !DILexicalBlock(scope: !5730, file: !751, line: 1048, column: 61)
!5738 = !DILocalVariable(name: "val", scope: !5739, file: !751, line: 1048, type: !706, align: 8)
!5739 = distinct !DILexicalBlock(scope: !5730, file: !751, line: 1048, column: 24)
!5740 = !DILocation(line: 1046, column: 21, scope: !5730)
!5741 = !DILocation(line: 1047, column: 33, scope: !5730)
!5742 = !DILocation(line: 1048, column: 61, scope: !5737)
!5743 = !DILocation(line: 1048, column: 29, scope: !5730)
!5744 = !DILocation(line: 1048, column: 24, scope: !5730)
!5745 = !DILocation(line: 1048, column: 24, scope: !5737)
!5746 = !DILocation(line: 1048, column: 24, scope: !5739)
!5747 = !DILocation(line: 1048, column: 17, scope: !5730)
!5748 = !DILocation(line: 1049, column: 17, scope: !5730)
!5749 = !DILocation(line: 1050, column: 14, scope: !5730)
!5750 = distinct !DISubprogram(name: "eat", linkageName: "_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E", scope: !2303, file: !751, line: 635, type: !5751, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !5753, retainedNodes: !5754)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!706, !2323, !13}
!5753 = !DISubprogram(name: "eat", linkageName: "_ZN14rustc_demangle2v07Printer3eat17ha194b1c2cb07fe35E", scope: !2303, file: !751, line: 635, type: !5751, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!5754 = !{!5755, !5756}
!5755 = !DILocalVariable(name: "self", arg: 1, scope: !5750, file: !751, line: 635, type: !2323)
!5756 = !DILocalVariable(name: "b", arg: 2, scope: !5750, file: !751, line: 635, type: !13)
!5757 = !DILocation(line: 635, column: 12, scope: !5750)
!5758 = !DILocation(line: 635, column: 23, scope: !5750)
!5759 = !DILocation(line: 636, column: 21, scope: !5750)
!5760 = !DILocation(line: 636, column: 30, scope: !5750)
!5761 = !DILocation(line: 636, column: 9, scope: !5750)
!5762 = !DILocation(line: 637, column: 6, scope: !5750)
!5763 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v07Printer3eat28_$u7b$$u7b$closure$u7d$$u7d$17h1c94e0b0cbbd40e4E", scope: !5764, file: !751, line: 636, type: !5765, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !5770)
!5764 = !DINamespace(name: "eat", scope: !2912)
!5765 = !DISubroutineType(types: !5766)
!5766 = !{!706, !5767, !1726}
!5767 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !5764, file: !2, size: 32, align: 32, elements: !5768, templateParams: !14, identifier: "75619d697b844247b4078dfcff8300bd")
!5768 = !{!5769}
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__b", scope: !5767, file: !2, baseType: !12, size: 32, align: 32)
!5770 = !{!5771, !5772}
!5771 = !DILocalVariable(name: "p", arg: 2, scope: !5763, file: !751, line: 636, type: !1726)
!5772 = !DILocalVariable(name: "b", scope: !5763, file: !751, line: 635, type: !13, align: 8)
!5773 = !DILocation(line: 635, column: 23, scope: !5763)
!5774 = !DILocation(line: 636, column: 35, scope: !5763)
!5775 = !DILocation(line: 636, column: 44, scope: !5763)
!5776 = !DILocation(line: 636, column: 40, scope: !5763)
!5777 = !DILocation(line: 636, column: 46, scope: !5763)
!5778 = distinct !DISubprogram(name: "print<u64>", linkageName: "_ZN14rustc_demangle2v07Printer5print17h755367634094e4b9E", scope: !2303, file: !751, line: 678, type: !5375, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5780, declaration: !5779, retainedNodes: !5782)
!5779 = !DISubprogram(name: "print<u64>", linkageName: "_ZN14rustc_demangle2v07Printer5print17h755367634094e4b9E", scope: !2303, file: !751, line: 678, type: !5375, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5780)
!5780 = !{!5781}
!5781 = !DITemplateTypeParameter(name: "impl fmt::Display", type: !765)
!5782 = !{!5783, !5784, !5785, !5787, !5789}
!5783 = !DILocalVariable(name: "self", arg: 1, scope: !5778, file: !751, line: 678, type: !2323)
!5784 = !DILocalVariable(name: "x", arg: 2, scope: !5778, file: !751, line: 678, type: !765)
!5785 = !DILocalVariable(name: "out", scope: !5786, file: !751, line: 679, type: !1630, align: 32)
!5786 = distinct !DILexicalBlock(scope: !5778, file: !751, line: 679, column: 42)
!5787 = !DILocalVariable(name: "residual", scope: !5788, file: !751, line: 680, type: !2336, align: 8)
!5788 = distinct !DILexicalBlock(scope: !5786, file: !751, line: 680, column: 39)
!5789 = !DILocalVariable(name: "val", scope: !5790, file: !751, line: 680, type: !7, align: 8)
!5790 = distinct !DILexicalBlock(scope: !5786, file: !751, line: 680, column: 13)
!5791 = !DILocation(line: 678, column: 14, scope: !5778)
!5792 = !DILocation(line: 678, column: 25, scope: !5778)
!5793 = !DILocation(line: 680, column: 39, scope: !5788)
!5794 = !DILocation(line: 680, column: 13, scope: !5790)
!5795 = !DILocation(line: 679, column: 28, scope: !5786)
!5796 = !DILocation(line: 679, column: 16, scope: !5786)
!5797 = !DILocation(line: 679, column: 21, scope: !5786)
!5798 = !DILocation(line: 680, column: 35, scope: !5786)
!5799 = !DILocation(line: 680, column: 13, scope: !5786)
!5800 = !DILocation(line: 682, column: 9, scope: !5778)
!5801 = !DILocation(line: 683, column: 5, scope: !5778)
!5802 = !DILocation(line: 680, column: 13, scope: !5788)
!5803 = !DILocation(line: 683, column: 6, scope: !5778)
!5804 = distinct !DISubprogram(name: "print<&str>", linkageName: "_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E", scope: !2303, file: !751, line: 678, type: !5805, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5808, declaration: !5807, retainedNodes: !5810)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!1079, !2323, !659}
!5807 = !DISubprogram(name: "print<&str>", linkageName: "_ZN14rustc_demangle2v07Printer5print17hc8bdff3817a3d578E", scope: !2303, file: !751, line: 678, type: !5805, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5808)
!5808 = !{!5809}
!5809 = !DITemplateTypeParameter(name: "impl fmt::Display", type: !659)
!5810 = !{!5811, !5812, !5813, !5815, !5817}
!5811 = !DILocalVariable(name: "self", arg: 1, scope: !5804, file: !751, line: 678, type: !2323)
!5812 = !DILocalVariable(name: "x", arg: 2, scope: !5804, file: !751, line: 678, type: !659)
!5813 = !DILocalVariable(name: "out", scope: !5814, file: !751, line: 679, type: !1630, align: 32)
!5814 = distinct !DILexicalBlock(scope: !5804, file: !751, line: 679, column: 42)
!5815 = !DILocalVariable(name: "residual", scope: !5816, file: !751, line: 680, type: !2336, align: 8)
!5816 = distinct !DILexicalBlock(scope: !5814, file: !751, line: 680, column: 39)
!5817 = !DILocalVariable(name: "val", scope: !5818, file: !751, line: 680, type: !7, align: 8)
!5818 = distinct !DILexicalBlock(scope: !5814, file: !751, line: 680, column: 13)
!5819 = !DILocation(line: 678, column: 14, scope: !5804)
!5820 = !DILocation(line: 678, column: 25, scope: !5804)
!5821 = !DILocation(line: 680, column: 39, scope: !5816)
!5822 = !DILocation(line: 680, column: 13, scope: !5818)
!5823 = !DILocation(line: 679, column: 28, scope: !5814)
!5824 = !DILocation(line: 679, column: 16, scope: !5814)
!5825 = !DILocation(line: 679, column: 21, scope: !5814)
!5826 = !DILocation(line: 680, column: 35, scope: !5814)
!5827 = !DILocation(line: 680, column: 13, scope: !5814)
!5828 = !DILocation(line: 682, column: 9, scope: !5804)
!5829 = !DILocation(line: 683, column: 5, scope: !5804)
!5830 = !DILocation(line: 680, column: 13, scope: !5816)
!5831 = !DILocation(line: 683, column: 6, scope: !5804)
!5832 = distinct !DISubprogram(name: "print<char>", linkageName: "_ZN14rustc_demangle2v07Printer5print17hd09854794c0a73edE", scope: !2303, file: !751, line: 678, type: !5833, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5836, declaration: !5835, retainedNodes: !5838)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{!1079, !2323, !252}
!5835 = !DISubprogram(name: "print<char>", linkageName: "_ZN14rustc_demangle2v07Printer5print17hd09854794c0a73edE", scope: !2303, file: !751, line: 678, type: !5833, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5836)
!5836 = !{!5837}
!5837 = !DITemplateTypeParameter(name: "impl fmt::Display", type: !252)
!5838 = !{!5839, !5840, !5841, !5843, !5845}
!5839 = !DILocalVariable(name: "self", arg: 1, scope: !5832, file: !751, line: 678, type: !2323)
!5840 = !DILocalVariable(name: "x", arg: 2, scope: !5832, file: !751, line: 678, type: !252)
!5841 = !DILocalVariable(name: "out", scope: !5842, file: !751, line: 679, type: !1630, align: 32)
!5842 = distinct !DILexicalBlock(scope: !5832, file: !751, line: 679, column: 42)
!5843 = !DILocalVariable(name: "residual", scope: !5844, file: !751, line: 680, type: !2336, align: 8)
!5844 = distinct !DILexicalBlock(scope: !5842, file: !751, line: 680, column: 39)
!5845 = !DILocalVariable(name: "val", scope: !5846, file: !751, line: 680, type: !7, align: 8)
!5846 = distinct !DILexicalBlock(scope: !5842, file: !751, line: 680, column: 13)
!5847 = !DILocation(line: 678, column: 14, scope: !5832)
!5848 = !DILocation(line: 678, column: 25, scope: !5832)
!5849 = !DILocation(line: 680, column: 39, scope: !5844)
!5850 = !DILocation(line: 680, column: 13, scope: !5846)
!5851 = !DILocation(line: 679, column: 28, scope: !5842)
!5852 = !DILocation(line: 679, column: 16, scope: !5842)
!5853 = !DILocation(line: 679, column: 21, scope: !5842)
!5854 = !DILocation(line: 680, column: 35, scope: !5842)
!5855 = !DILocation(line: 680, column: 13, scope: !5842)
!5856 = !DILocation(line: 682, column: 9, scope: !5832)
!5857 = !DILocation(line: 683, column: 5, scope: !5832)
!5858 = !DILocation(line: 680, column: 13, scope: !5844)
!5859 = !DILocation(line: 683, column: 6, scope: !5832)
!5860 = distinct !DISubprogram(name: "print<rustc_demangle::v0::Ident>", linkageName: "_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE", scope: !2303, file: !751, line: 678, type: !5861, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5864, declaration: !5863, retainedNodes: !5866)
!5861 = !DISubroutineType(types: !5862)
!5862 = !{!1079, !2323, !1317}
!5863 = !DISubprogram(name: "print<rustc_demangle::v0::Ident>", linkageName: "_ZN14rustc_demangle2v07Printer5print17hea70d9419aae743fE", scope: !2303, file: !751, line: 678, type: !5861, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5864)
!5864 = !{!5865}
!5865 = !DITemplateTypeParameter(name: "impl fmt::Display", type: !1317)
!5866 = !{!5867, !5868, !5869, !5871, !5873}
!5867 = !DILocalVariable(name: "self", arg: 1, scope: !5860, file: !751, line: 678, type: !2323)
!5868 = !DILocalVariable(name: "x", arg: 2, scope: !5860, file: !751, line: 678, type: !1317)
!5869 = !DILocalVariable(name: "out", scope: !5870, file: !751, line: 679, type: !1630, align: 32)
!5870 = distinct !DILexicalBlock(scope: !5860, file: !751, line: 679, column: 42)
!5871 = !DILocalVariable(name: "residual", scope: !5872, file: !751, line: 680, type: !2336, align: 8)
!5872 = distinct !DILexicalBlock(scope: !5870, file: !751, line: 680, column: 39)
!5873 = !DILocalVariable(name: "val", scope: !5874, file: !751, line: 680, type: !7, align: 8)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !751, line: 680, column: 13)
!5875 = !DILocation(line: 678, column: 14, scope: !5860)
!5876 = !DILocation(line: 678, column: 25, scope: !5860)
!5877 = !DILocation(line: 680, column: 39, scope: !5872)
!5878 = !DILocation(line: 680, column: 13, scope: !5874)
!5879 = !DILocation(line: 679, column: 28, scope: !5870)
!5880 = !DILocation(line: 679, column: 16, scope: !5870)
!5881 = !DILocation(line: 679, column: 21, scope: !5870)
!5882 = !DILocation(line: 680, column: 35, scope: !5870)
!5883 = !DILocation(line: 680, column: 13, scope: !5870)
!5884 = !DILocation(line: 682, column: 9, scope: !5860)
!5885 = !DILocation(line: 683, column: 5, scope: !5860)
!5886 = !DILocation(line: 680, column: 13, scope: !5872)
!5887 = !DILocation(line: 683, column: 6, scope: !5860)
!5888 = distinct !DISubprogram(name: "in_binder<rustc_demangle::v0::{impl#6}::print_type::{closure_env#1}>", linkageName: "_ZN14rustc_demangle2v07Printer9in_binder17h4730f4302cbba6d1E", scope: !2303, file: !751, line: 746, type: !5889, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5892, declaration: !5891, retainedNodes: !5894)
!5889 = !DISubroutineType(types: !5890)
!5890 = !{!1079, !2323, !3374}
!5891 = !DISubprogram(name: "in_binder<rustc_demangle::v0::{impl#6}::print_type::{closure_env#1}>", linkageName: "_ZN14rustc_demangle2v07Printer9in_binder17h4730f4302cbba6d1E", scope: !2303, file: !751, line: 746, type: !5889, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5892)
!5892 = !{!5893}
!5893 = !DITemplateTypeParameter(name: "F", type: !3374)
!5894 = !{!5895, !5896, !5897, !5899, !5901, !5903, !5905, !5907, !5909, !5911, !5913, !5921, !5923, !5925, !5927, !5929, !5931, !5933, !5935}
!5895 = !DILocalVariable(name: "self", arg: 1, scope: !5888, file: !751, line: 746, type: !2323)
!5896 = !DILocalVariable(name: "f", arg: 2, scope: !5888, file: !751, line: 746, type: !3374)
!5897 = !DILocalVariable(name: "bound_lifetimes", scope: !5898, file: !751, line: 750, type: !765, align: 64)
!5898 = distinct !DILexicalBlock(scope: !5888, file: !751, line: 750, column: 9)
!5899 = !DILocalVariable(name: "parser", scope: !5900, file: !751, line: 619, type: !1726, align: 32)
!5900 = distinct !DILexicalBlock(scope: !5888, file: !751, line: 619, column: 13)
!5901 = !DILocalVariable(name: "x", scope: !5902, file: !751, line: 620, type: !765, align: 64)
!5902 = distinct !DILexicalBlock(scope: !5900, file: !751, line: 620, column: 17)
!5903 = !DILocalVariable(name: "err", scope: !5904, file: !751, line: 621, type: !87, align: 8)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !751, line: 621, column: 17)
!5905 = !DILocalVariable(name: "residual", scope: !5906, file: !751, line: 622, type: !2336, align: 8)
!5906 = distinct !DILexicalBlock(scope: !5904, file: !751, line: 622, column: 50)
!5907 = !DILocalVariable(name: "val", scope: !5908, file: !751, line: 622, type: !7, align: 8)
!5908 = distinct !DILexicalBlock(scope: !5904, file: !751, line: 622, column: 21)
!5909 = !DILocalVariable(name: "residual", scope: !5910, file: !751, line: 758, type: !2336, align: 8)
!5910 = distinct !DILexicalBlock(scope: !5898, file: !751, line: 758, column: 31)
!5911 = !DILocalVariable(name: "val", scope: !5912, file: !751, line: 758, type: !7, align: 8)
!5912 = distinct !DILexicalBlock(scope: !5898, file: !751, line: 758, column: 13)
!5913 = !DILocalVariable(name: "iter", scope: !5914, file: !751, line: 759, type: !5915, align: 64)
!5914 = distinct !DILexicalBlock(scope: !5898, file: !751, line: 759, column: 13)
!5915 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<u64>", scope: !1020, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !5916, templateParams: !5919, identifier: "fdd139d4fb48cfee4f370079fc433d16")
!5916 = !{!5917, !5918}
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5915, file: !2, baseType: !765, size: 64, align: 64, flags: DIFlagPublic)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5915, file: !2, baseType: !765, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!5919 = !{!5920}
!5920 = !DITemplateTypeParameter(name: "Idx", type: !765)
!5921 = !DILocalVariable(name: "i", scope: !5922, file: !751, line: 759, type: !765, align: 64)
!5922 = distinct !DILexicalBlock(scope: !5914, file: !751, line: 759, column: 41)
!5923 = !DILocalVariable(name: "residual", scope: !5924, file: !751, line: 761, type: !2336, align: 8)
!5924 = distinct !DILexicalBlock(scope: !5922, file: !751, line: 761, column: 37)
!5925 = !DILocalVariable(name: "val", scope: !5926, file: !751, line: 761, type: !7, align: 8)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !751, line: 761, column: 21)
!5927 = !DILocalVariable(name: "residual", scope: !5928, file: !751, line: 764, type: !2336, align: 8)
!5928 = distinct !DILexicalBlock(scope: !5922, file: !751, line: 764, column: 50)
!5929 = !DILocalVariable(name: "val", scope: !5930, file: !751, line: 764, type: !7, align: 8)
!5930 = distinct !DILexicalBlock(scope: !5922, file: !751, line: 764, column: 17)
!5931 = !DILocalVariable(name: "residual", scope: !5932, file: !751, line: 766, type: !2336, align: 8)
!5932 = distinct !DILexicalBlock(scope: !5898, file: !751, line: 766, column: 29)
!5933 = !DILocalVariable(name: "val", scope: !5934, file: !751, line: 766, type: !7, align: 8)
!5934 = distinct !DILexicalBlock(scope: !5898, file: !751, line: 766, column: 13)
!5935 = !DILocalVariable(name: "r", scope: !5936, file: !751, line: 769, type: !1079, align: 8)
!5936 = distinct !DILexicalBlock(scope: !5898, file: !751, line: 769, column: 9)
!5937 = !DILocation(line: 746, column: 21, scope: !5888)
!5938 = !DILocation(line: 746, column: 32, scope: !5888)
!5939 = !DILocation(line: 621, column: 21, scope: !5904)
!5940 = !DILocation(line: 759, column: 22, scope: !5914)
!5941 = !DILocation(line: 622, column: 50, scope: !5906)
!5942 = !DILocation(line: 622, column: 21, scope: !5908)
!5943 = !DILocation(line: 758, column: 31, scope: !5910)
!5944 = !DILocation(line: 758, column: 13, scope: !5912)
!5945 = !DILocation(line: 761, column: 37, scope: !5924)
!5946 = !DILocation(line: 761, column: 21, scope: !5926)
!5947 = !DILocation(line: 764, column: 50, scope: !5928)
!5948 = !DILocation(line: 764, column: 17, scope: !5930)
!5949 = !DILocation(line: 766, column: 29, scope: !5932)
!5950 = !DILocation(line: 766, column: 13, scope: !5934)
!5951 = !DILocation(line: 750, column: 13, scope: !5888)
!5952 = !DILocation(line: 618, column: 15, scope: !5888)
!5953 = !DILocation(line: 618, column: 9, scope: !5888)
!5954 = !DILocation(line: 627, column: 39, scope: !5888)
!5955 = !DILocation(line: 619, column: 16, scope: !5888)
!5956 = !DILocation(line: 619, column: 16, scope: !5900)
!5957 = !DILocation(line: 619, column: 48, scope: !5900)
!5958 = !DILocation(line: 619, column: 41, scope: !5900)
!5959 = !DILocation(line: 619, column: 35, scope: !5900)
!5960 = !DILocation(line: 621, column: 21, scope: !5900)
!5961 = !DILocation(line: 622, column: 40, scope: !5904)
!5962 = !DILocation(line: 622, column: 30, scope: !5904)
!5963 = !DILocation(line: 622, column: 21, scope: !5904)
!5964 = !DILocation(line: 620, column: 20, scope: !5900)
!5965 = !DILocation(line: 750, column: 13, scope: !5898)
!5966 = !DILocation(line: 620, column: 20, scope: !5902)
!5967 = !DILocation(line: 753, column: 12, scope: !5898)
!5968 = !DILocation(line: 753, column: 21, scope: !5898)
!5969 = !DILocation(line: 757, column: 12, scope: !5898)
!5970 = !DILocation(line: 754, column: 20, scope: !5898)
!5971 = !DILocation(line: 769, column: 17, scope: !5898)
!5972 = !DILocation(line: 769, column: 13, scope: !5936)
!5973 = !DILocation(line: 772, column: 38, scope: !5936)
!5974 = !DILocation(line: 772, column: 9, scope: !5936)
!5975 = !DILocation(line: 758, column: 18, scope: !5898)
!5976 = !DILocation(line: 758, column: 13, scope: !5898)
!5977 = !DILocation(line: 758, column: 13, scope: !5910)
!5978 = !DILocation(line: 759, column: 22, scope: !5898)
!5979 = !DILocation(line: 759, column: 13, scope: !5914)
!5980 = !DILocation(line: 759, column: 17, scope: !5914)
!5981 = !DILocation(line: 759, column: 17, scope: !5922)
!5982 = !DILocation(line: 760, column: 20, scope: !5922)
!5983 = !DILocation(line: 766, column: 18, scope: !5898)
!5984 = !DILocation(line: 766, column: 13, scope: !5898)
!5985 = !DILocation(line: 766, column: 13, scope: !5932)
!5986 = !DILocation(line: 774, column: 9, scope: !5936)
!5987 = !DILocation(line: 775, column: 5, scope: !5888)
!5988 = !DILocation(line: 775, column: 6, scope: !5888)
!5989 = !DILocation(line: 763, column: 17, scope: !5922)
!5990 = !DILocation(line: 761, column: 26, scope: !5922)
!5991 = !DILocation(line: 761, column: 21, scope: !5922)
!5992 = !DILocation(line: 761, column: 21, scope: !5924)
!5993 = !DILocation(line: 764, column: 22, scope: !5922)
!5994 = !DILocation(line: 764, column: 17, scope: !5922)
!5995 = !DILocation(line: 764, column: 17, scope: !5928)
!5996 = !DILocation(line: 622, column: 21, scope: !5906)
!5997 = !DILocation(line: 623, column: 39, scope: !5904)
!5998 = !DILocation(line: 623, column: 21, scope: !5904)
!5999 = !DILocation(line: 624, column: 28, scope: !5904)
!6000 = !DILocation(line: 624, column: 21, scope: !5904)
!6001 = !DILocation(line: 0, scope: !6002)
!6002 = !DILexicalBlockFile(scope: !5888, file: !626, discriminator: 0)
!6003 = distinct !DISubprogram(name: "in_binder<rustc_demangle::v0::{impl#6}::print_type::{closure_env#0}>", linkageName: "_ZN14rustc_demangle2v07Printer9in_binder17hb1022bb763a81b78E", scope: !2303, file: !751, line: 746, type: !6004, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6007, declaration: !6006, retainedNodes: !6009)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!1079, !2323, !3394}
!6006 = !DISubprogram(name: "in_binder<rustc_demangle::v0::{impl#6}::print_type::{closure_env#0}>", linkageName: "_ZN14rustc_demangle2v07Printer9in_binder17hb1022bb763a81b78E", scope: !2303, file: !751, line: 746, type: !6004, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6007)
!6007 = !{!6008}
!6008 = !DITemplateTypeParameter(name: "F", type: !3394)
!6009 = !{!6010, !6011, !6012, !6014, !6016, !6018, !6020, !6022, !6024, !6026, !6028, !6030, !6032, !6034, !6036, !6038, !6040, !6042, !6044}
!6010 = !DILocalVariable(name: "self", arg: 1, scope: !6003, file: !751, line: 746, type: !2323)
!6011 = !DILocalVariable(name: "f", arg: 2, scope: !6003, file: !751, line: 746, type: !3394)
!6012 = !DILocalVariable(name: "bound_lifetimes", scope: !6013, file: !751, line: 750, type: !765, align: 64)
!6013 = distinct !DILexicalBlock(scope: !6003, file: !751, line: 750, column: 9)
!6014 = !DILocalVariable(name: "parser", scope: !6015, file: !751, line: 619, type: !1726, align: 32)
!6015 = distinct !DILexicalBlock(scope: !6003, file: !751, line: 619, column: 13)
!6016 = !DILocalVariable(name: "x", scope: !6017, file: !751, line: 620, type: !765, align: 64)
!6017 = distinct !DILexicalBlock(scope: !6015, file: !751, line: 620, column: 17)
!6018 = !DILocalVariable(name: "err", scope: !6019, file: !751, line: 621, type: !87, align: 8)
!6019 = distinct !DILexicalBlock(scope: !6015, file: !751, line: 621, column: 17)
!6020 = !DILocalVariable(name: "residual", scope: !6021, file: !751, line: 622, type: !2336, align: 8)
!6021 = distinct !DILexicalBlock(scope: !6019, file: !751, line: 622, column: 50)
!6022 = !DILocalVariable(name: "val", scope: !6023, file: !751, line: 622, type: !7, align: 8)
!6023 = distinct !DILexicalBlock(scope: !6019, file: !751, line: 622, column: 21)
!6024 = !DILocalVariable(name: "residual", scope: !6025, file: !751, line: 758, type: !2336, align: 8)
!6025 = distinct !DILexicalBlock(scope: !6013, file: !751, line: 758, column: 31)
!6026 = !DILocalVariable(name: "val", scope: !6027, file: !751, line: 758, type: !7, align: 8)
!6027 = distinct !DILexicalBlock(scope: !6013, file: !751, line: 758, column: 13)
!6028 = !DILocalVariable(name: "iter", scope: !6029, file: !751, line: 759, type: !5915, align: 64)
!6029 = distinct !DILexicalBlock(scope: !6013, file: !751, line: 759, column: 13)
!6030 = !DILocalVariable(name: "i", scope: !6031, file: !751, line: 759, type: !765, align: 64)
!6031 = distinct !DILexicalBlock(scope: !6029, file: !751, line: 759, column: 41)
!6032 = !DILocalVariable(name: "residual", scope: !6033, file: !751, line: 761, type: !2336, align: 8)
!6033 = distinct !DILexicalBlock(scope: !6031, file: !751, line: 761, column: 37)
!6034 = !DILocalVariable(name: "val", scope: !6035, file: !751, line: 761, type: !7, align: 8)
!6035 = distinct !DILexicalBlock(scope: !6031, file: !751, line: 761, column: 21)
!6036 = !DILocalVariable(name: "residual", scope: !6037, file: !751, line: 764, type: !2336, align: 8)
!6037 = distinct !DILexicalBlock(scope: !6031, file: !751, line: 764, column: 50)
!6038 = !DILocalVariable(name: "val", scope: !6039, file: !751, line: 764, type: !7, align: 8)
!6039 = distinct !DILexicalBlock(scope: !6031, file: !751, line: 764, column: 17)
!6040 = !DILocalVariable(name: "residual", scope: !6041, file: !751, line: 766, type: !2336, align: 8)
!6041 = distinct !DILexicalBlock(scope: !6013, file: !751, line: 766, column: 29)
!6042 = !DILocalVariable(name: "val", scope: !6043, file: !751, line: 766, type: !7, align: 8)
!6043 = distinct !DILexicalBlock(scope: !6013, file: !751, line: 766, column: 13)
!6044 = !DILocalVariable(name: "r", scope: !6045, file: !751, line: 769, type: !1079, align: 8)
!6045 = distinct !DILexicalBlock(scope: !6013, file: !751, line: 769, column: 9)
!6046 = !DILocation(line: 746, column: 21, scope: !6003)
!6047 = !DILocation(line: 746, column: 32, scope: !6003)
!6048 = !DILocation(line: 621, column: 21, scope: !6019)
!6049 = !DILocation(line: 759, column: 22, scope: !6029)
!6050 = !DILocation(line: 622, column: 50, scope: !6021)
!6051 = !DILocation(line: 622, column: 21, scope: !6023)
!6052 = !DILocation(line: 758, column: 31, scope: !6025)
!6053 = !DILocation(line: 758, column: 13, scope: !6027)
!6054 = !DILocation(line: 761, column: 37, scope: !6033)
!6055 = !DILocation(line: 761, column: 21, scope: !6035)
!6056 = !DILocation(line: 764, column: 50, scope: !6037)
!6057 = !DILocation(line: 764, column: 17, scope: !6039)
!6058 = !DILocation(line: 766, column: 29, scope: !6041)
!6059 = !DILocation(line: 766, column: 13, scope: !6043)
!6060 = !DILocation(line: 750, column: 13, scope: !6003)
!6061 = !DILocation(line: 618, column: 15, scope: !6003)
!6062 = !DILocation(line: 618, column: 9, scope: !6003)
!6063 = !DILocation(line: 627, column: 39, scope: !6003)
!6064 = !DILocation(line: 619, column: 16, scope: !6003)
!6065 = !DILocation(line: 619, column: 16, scope: !6015)
!6066 = !DILocation(line: 619, column: 48, scope: !6015)
!6067 = !DILocation(line: 619, column: 41, scope: !6015)
!6068 = !DILocation(line: 619, column: 35, scope: !6015)
!6069 = !DILocation(line: 621, column: 21, scope: !6015)
!6070 = !DILocation(line: 622, column: 40, scope: !6019)
!6071 = !DILocation(line: 622, column: 30, scope: !6019)
!6072 = !DILocation(line: 622, column: 21, scope: !6019)
!6073 = !DILocation(line: 620, column: 20, scope: !6015)
!6074 = !DILocation(line: 750, column: 13, scope: !6013)
!6075 = !DILocation(line: 620, column: 20, scope: !6017)
!6076 = !DILocation(line: 753, column: 12, scope: !6013)
!6077 = !DILocation(line: 753, column: 21, scope: !6013)
!6078 = !DILocation(line: 757, column: 12, scope: !6013)
!6079 = !DILocation(line: 754, column: 20, scope: !6013)
!6080 = !DILocation(line: 769, column: 17, scope: !6013)
!6081 = !DILocation(line: 769, column: 13, scope: !6045)
!6082 = !DILocation(line: 772, column: 38, scope: !6045)
!6083 = !DILocation(line: 772, column: 9, scope: !6045)
!6084 = !DILocation(line: 758, column: 18, scope: !6013)
!6085 = !DILocation(line: 758, column: 13, scope: !6013)
!6086 = !DILocation(line: 758, column: 13, scope: !6025)
!6087 = !DILocation(line: 759, column: 22, scope: !6013)
!6088 = !DILocation(line: 759, column: 13, scope: !6029)
!6089 = !DILocation(line: 759, column: 17, scope: !6029)
!6090 = !DILocation(line: 759, column: 17, scope: !6031)
!6091 = !DILocation(line: 760, column: 20, scope: !6031)
!6092 = !DILocation(line: 766, column: 18, scope: !6013)
!6093 = !DILocation(line: 766, column: 13, scope: !6013)
!6094 = !DILocation(line: 766, column: 13, scope: !6041)
!6095 = !DILocation(line: 774, column: 9, scope: !6045)
!6096 = !DILocation(line: 775, column: 5, scope: !6003)
!6097 = !DILocation(line: 775, column: 6, scope: !6003)
!6098 = !DILocation(line: 763, column: 17, scope: !6031)
!6099 = !DILocation(line: 761, column: 26, scope: !6031)
!6100 = !DILocation(line: 761, column: 21, scope: !6031)
!6101 = !DILocation(line: 761, column: 21, scope: !6033)
!6102 = !DILocation(line: 764, column: 22, scope: !6031)
!6103 = !DILocation(line: 764, column: 17, scope: !6031)
!6104 = !DILocation(line: 764, column: 17, scope: !6037)
!6105 = !DILocation(line: 622, column: 21, scope: !6021)
!6106 = !DILocation(line: 623, column: 39, scope: !6019)
!6107 = !DILocation(line: 623, column: 21, scope: !6019)
!6108 = !DILocation(line: 624, column: 28, scope: !6019)
!6109 = !DILocation(line: 624, column: 21, scope: !6019)
!6110 = !DILocation(line: 0, scope: !6111)
!6111 = !DILexicalBlockFile(scope: !6003, file: !626, discriminator: 0)
!6112 = distinct !DISubprogram(name: "pop_depth", linkageName: "_ZN14rustc_demangle2v07Printer9pop_depth17ha25b3c4e0a438db8E", scope: !2303, file: !751, line: 670, type: !6113, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !6115, retainedNodes: !6116)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{null, !2323}
!6115 = !DISubprogram(name: "pop_depth", linkageName: "_ZN14rustc_demangle2v07Printer9pop_depth17ha25b3c4e0a438db8E", scope: !2303, file: !751, line: 670, type: !6113, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!6116 = !{!6117, !6118}
!6117 = !DILocalVariable(name: "self", arg: 1, scope: !6112, file: !751, line: 670, type: !2323)
!6118 = !DILocalVariable(name: "parser", scope: !6119, file: !751, line: 671, type: !1726, align: 32)
!6119 = distinct !DILexicalBlock(scope: !6112, file: !751, line: 671, column: 49)
!6120 = !DILocation(line: 670, column: 18, scope: !6112)
!6121 = !DILocation(line: 671, column: 37, scope: !6119)
!6122 = !DILocation(line: 671, column: 16, scope: !6119)
!6123 = !DILocation(line: 674, column: 6, scope: !6112)
!6124 = !DILocation(line: 671, column: 19, scope: !6119)
!6125 = !DILocation(line: 672, column: 20, scope: !6119)
!6126 = !DILocation(line: 670, column: 5, scope: !6112)
!6127 = distinct !DISubprogram(name: "print_pat", linkageName: "_ZN14rustc_demangle2v07Printer9print_pat17h18ec7f9bb765c837E", scope: !2303, file: !751, line: 1087, type: !2939, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !6128, retainedNodes: !6129)
!6128 = !DISubprogram(name: "print_pat", linkageName: "_ZN14rustc_demangle2v07Printer9print_pat17h18ec7f9bb765c837E", scope: !2303, file: !751, line: 1087, type: !2939, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!6129 = !{!6130, !6131, !6133, !6135, !6137, !6139, !6141, !6143, !6145, !6147, !6149, !6151, !6153, !6155, !6157, !6159, !6161, !6163, !6165, !6167, !6169, !6171, !6173, !6175, !6177, !6179, !6181, !6183, !6185, !6187, !6189, !6191}
!6130 = !DILocalVariable(name: "self", arg: 1, scope: !6127, file: !751, line: 1087, type: !2323)
!6131 = !DILocalVariable(name: "tag", scope: !6132, file: !751, line: 1088, type: !13, align: 8)
!6132 = distinct !DILexicalBlock(scope: !6127, file: !751, line: 1088, column: 9)
!6133 = !DILocalVariable(name: "parser", scope: !6134, file: !751, line: 619, type: !1726, align: 32)
!6134 = distinct !DILexicalBlock(scope: !6127, file: !751, line: 619, column: 13)
!6135 = !DILocalVariable(name: "x", scope: !6136, file: !751, line: 620, type: !13, align: 8)
!6136 = distinct !DILexicalBlock(scope: !6134, file: !751, line: 620, column: 17)
!6137 = !DILocalVariable(name: "err", scope: !6138, file: !751, line: 621, type: !87, align: 8)
!6138 = distinct !DILexicalBlock(scope: !6134, file: !751, line: 621, column: 17)
!6139 = !DILocalVariable(name: "residual", scope: !6140, file: !751, line: 622, type: !2336, align: 8)
!6140 = distinct !DILexicalBlock(scope: !6138, file: !751, line: 622, column: 50)
!6141 = !DILocalVariable(name: "val", scope: !6142, file: !751, line: 622, type: !7, align: 8)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !751, line: 622, column: 21)
!6143 = !DILocalVariable(name: "residual", scope: !6144, file: !751, line: 1092, type: !2336, align: 8)
!6144 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1092, column: 40)
!6145 = !DILocalVariable(name: "val", scope: !6146, file: !751, line: 1092, type: !7, align: 8)
!6146 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1092, column: 17)
!6147 = !DILocalVariable(name: "residual", scope: !6148, file: !751, line: 1093, type: !2336, align: 8)
!6148 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1093, column: 34)
!6149 = !DILocalVariable(name: "val", scope: !6150, file: !751, line: 1093, type: !7, align: 8)
!6150 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1093, column: 17)
!6151 = !DILocalVariable(name: "residual", scope: !6152, file: !751, line: 1094, type: !2336, align: 8)
!6152 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1094, column: 40)
!6153 = !DILocalVariable(name: "val", scope: !6154, file: !751, line: 1094, type: !7, align: 8)
!6154 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1094, column: 17)
!6155 = !DILocalVariable(name: "parser", scope: !6156, file: !751, line: 619, type: !1726, align: 32)
!6156 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 619, column: 13)
!6157 = !DILocalVariable(name: "x", scope: !6158, file: !751, line: 620, type: !7, align: 8)
!6158 = distinct !DILexicalBlock(scope: !6156, file: !751, line: 620, column: 17)
!6159 = !DILocalVariable(name: "err", scope: !6160, file: !751, line: 621, type: !87, align: 8)
!6160 = distinct !DILexicalBlock(scope: !6156, file: !751, line: 621, column: 17)
!6161 = !DILocalVariable(name: "residual", scope: !6162, file: !751, line: 622, type: !2336, align: 8)
!6162 = distinct !DILexicalBlock(scope: !6160, file: !751, line: 622, column: 50)
!6163 = !DILocalVariable(name: "val", scope: !6164, file: !751, line: 622, type: !7, align: 8)
!6164 = distinct !DILexicalBlock(scope: !6160, file: !751, line: 622, column: 21)
!6165 = !DILocalVariable(name: "residual", scope: !6166, file: !751, line: 1098, type: !2336, align: 8)
!6166 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1098, column: 33)
!6167 = !DILocalVariable(name: "val", scope: !6168, file: !751, line: 1098, type: !7, align: 8)
!6168 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1098, column: 17)
!6169 = !DILocalVariable(name: "err", scope: !6170, file: !751, line: 600, type: !87, align: 8)
!6170 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 600, column: 9)
!6171 = !DILocalVariable(name: "residual", scope: !6172, file: !751, line: 601, type: !2336, align: 8)
!6172 = distinct !DILexicalBlock(scope: !6170, file: !751, line: 601, column: 38)
!6173 = !DILocalVariable(name: "val", scope: !6174, file: !751, line: 601, type: !7, align: 8)
!6174 = distinct !DILexicalBlock(scope: !6170, file: !751, line: 601, column: 9)
!6175 = !DILocalVariable(name: "residual", scope: !6176, file: !751, line: 1105, type: !2336, align: 8)
!6176 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1105, column: 38)
!6177 = !DILocalVariable(name: "val", scope: !6178, file: !751, line: 1105, type: !7, align: 8)
!6178 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1105, column: 21)
!6179 = !DILocalVariable(name: "residual", scope: !6180, file: !751, line: 1106, type: !2336, align: 8)
!6180 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1106, column: 37)
!6181 = !DILocalVariable(name: "val", scope: !6182, file: !751, line: 1106, type: !7, align: 8)
!6182 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1106, column: 21)
!6183 = !DILocalVariable(name: "residual", scope: !6184, file: !751, line: 1110, type: !2336, align: 8)
!6184 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1110, column: 40)
!6185 = !DILocalVariable(name: "val", scope: !6186, file: !751, line: 1110, type: !7, align: 8)
!6186 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 1110, column: 21)
!6187 = !DILocalVariable(name: "err", scope: !6188, file: !751, line: 600, type: !87, align: 8)
!6188 = distinct !DILexicalBlock(scope: !6132, file: !751, line: 600, column: 9)
!6189 = !DILocalVariable(name: "residual", scope: !6190, file: !751, line: 601, type: !2336, align: 8)
!6190 = distinct !DILexicalBlock(scope: !6188, file: !751, line: 601, column: 38)
!6191 = !DILocalVariable(name: "val", scope: !6192, file: !751, line: 601, type: !7, align: 8)
!6192 = distinct !DILexicalBlock(scope: !6188, file: !751, line: 601, column: 9)
!6193 = !DILocation(line: 1087, column: 18, scope: !6127)
!6194 = !DILocation(line: 621, column: 21, scope: !6138)
!6195 = !DILocation(line: 621, column: 21, scope: !6160)
!6196 = !DILocation(line: 600, column: 13, scope: !6170)
!6197 = !DILocation(line: 600, column: 13, scope: !6188)
!6198 = !DILocation(line: 622, column: 50, scope: !6140)
!6199 = !DILocation(line: 622, column: 21, scope: !6142)
!6200 = !DILocation(line: 1092, column: 40, scope: !6144)
!6201 = !DILocation(line: 1092, column: 17, scope: !6146)
!6202 = !DILocation(line: 1093, column: 34, scope: !6148)
!6203 = !DILocation(line: 1093, column: 17, scope: !6150)
!6204 = !DILocation(line: 1094, column: 40, scope: !6152)
!6205 = !DILocation(line: 1094, column: 17, scope: !6154)
!6206 = !DILocation(line: 620, column: 20, scope: !6158)
!6207 = !DILocation(line: 622, column: 50, scope: !6162)
!6208 = !DILocation(line: 622, column: 21, scope: !6164)
!6209 = !DILocation(line: 1098, column: 33, scope: !6166)
!6210 = !DILocation(line: 1098, column: 17, scope: !6168)
!6211 = !DILocation(line: 601, column: 38, scope: !6172)
!6212 = !DILocation(line: 601, column: 9, scope: !6174)
!6213 = !DILocation(line: 1105, column: 38, scope: !6176)
!6214 = !DILocation(line: 1105, column: 21, scope: !6178)
!6215 = !DILocation(line: 1106, column: 37, scope: !6180)
!6216 = !DILocation(line: 1106, column: 21, scope: !6182)
!6217 = !DILocation(line: 1110, column: 40, scope: !6184)
!6218 = !DILocation(line: 1110, column: 21, scope: !6186)
!6219 = !DILocation(line: 601, column: 38, scope: !6190)
!6220 = !DILocation(line: 601, column: 9, scope: !6192)
!6221 = !DILocation(line: 618, column: 15, scope: !6127)
!6222 = !DILocation(line: 618, column: 9, scope: !6127)
!6223 = !DILocation(line: 627, column: 39, scope: !6127)
!6224 = !DILocation(line: 619, column: 16, scope: !6127)
!6225 = !DILocation(line: 619, column: 16, scope: !6134)
!6226 = !DILocation(line: 619, column: 48, scope: !6134)
!6227 = !DILocation(line: 619, column: 41, scope: !6134)
!6228 = !DILocation(line: 619, column: 35, scope: !6134)
!6229 = !DILocation(line: 621, column: 21, scope: !6134)
!6230 = !DILocation(line: 622, column: 40, scope: !6138)
!6231 = !DILocation(line: 622, column: 30, scope: !6138)
!6232 = !DILocation(line: 622, column: 21, scope: !6138)
!6233 = !DILocation(line: 620, column: 20, scope: !6134)
!6234 = !DILocation(line: 1088, column: 13, scope: !6132)
!6235 = !DILocation(line: 620, column: 20, scope: !6136)
!6236 = !DILocation(line: 1090, column: 9, scope: !6132)
!6237 = !DILocation(line: 600, column: 19, scope: !6132)
!6238 = !DILocation(line: 601, column: 28, scope: !6188)
!6239 = !DILocation(line: 601, column: 18, scope: !6188)
!6240 = !DILocation(line: 601, column: 9, scope: !6188)
!6241 = !DILocation(line: 1092, column: 22, scope: !6132)
!6242 = !DILocation(line: 1092, column: 17, scope: !6132)
!6243 = !DILocation(line: 618, column: 15, scope: !6132)
!6244 = !DILocation(line: 618, column: 9, scope: !6132)
!6245 = !DILocation(line: 1110, column: 26, scope: !6132)
!6246 = !DILocation(line: 1110, column: 21, scope: !6132)
!6247 = !DILocation(line: 1092, column: 17, scope: !6144)
!6248 = !DILocation(line: 1093, column: 22, scope: !6132)
!6249 = !DILocation(line: 1093, column: 17, scope: !6132)
!6250 = !DILocation(line: 1093, column: 17, scope: !6148)
!6251 = !DILocation(line: 1094, column: 22, scope: !6132)
!6252 = !DILocation(line: 1094, column: 17, scope: !6132)
!6253 = !DILocation(line: 1094, column: 17, scope: !6152)
!6254 = !DILocation(line: 1114, column: 9, scope: !6132)
!6255 = !DILocation(line: 1115, column: 6, scope: !6127)
!6256 = !DILocation(line: 627, column: 39, scope: !6132)
!6257 = !DILocation(line: 619, column: 16, scope: !6132)
!6258 = !DILocation(line: 619, column: 16, scope: !6156)
!6259 = !DILocation(line: 619, column: 48, scope: !6156)
!6260 = !DILocation(line: 619, column: 41, scope: !6156)
!6261 = !DILocation(line: 619, column: 35, scope: !6156)
!6262 = !DILocation(line: 621, column: 21, scope: !6156)
!6263 = !DILocation(line: 622, column: 40, scope: !6160)
!6264 = !DILocation(line: 622, column: 30, scope: !6160)
!6265 = !DILocation(line: 622, column: 21, scope: !6160)
!6266 = !DILocation(line: 1098, column: 22, scope: !6132)
!6267 = !DILocation(line: 1098, column: 17, scope: !6132)
!6268 = !DILocation(line: 1098, column: 17, scope: !6166)
!6269 = !DILocation(line: 1099, column: 29, scope: !6132)
!6270 = !DILocation(line: 1099, column: 24, scope: !6132)
!6271 = !DILocation(line: 1102, column: 36, scope: !6132)
!6272 = !DILocation(line: 1102, column: 24, scope: !6132)
!6273 = !DILocation(line: 1108, column: 22, scope: !6132)
!6274 = !DILocation(line: 1105, column: 26, scope: !6132)
!6275 = !DILocation(line: 1105, column: 21, scope: !6132)
!6276 = !DILocation(line: 601, column: 28, scope: !6170)
!6277 = !DILocation(line: 601, column: 18, scope: !6170)
!6278 = !DILocation(line: 601, column: 9, scope: !6170)
!6279 = !DILocation(line: 1105, column: 21, scope: !6176)
!6280 = !DILocation(line: 1106, column: 26, scope: !6132)
!6281 = !DILocation(line: 1106, column: 21, scope: !6132)
!6282 = !DILocation(line: 1106, column: 21, scope: !6180)
!6283 = !DILocation(line: 601, column: 9, scope: !6172)
!6284 = !DILocation(line: 602, column: 27, scope: !6170)
!6285 = !DILocation(line: 602, column: 9, scope: !6170)
!6286 = !DILocation(line: 603, column: 16, scope: !6170)
!6287 = !DILocation(line: 603, column: 9, scope: !6170)
!6288 = !DILocation(line: 622, column: 21, scope: !6162)
!6289 = !DILocation(line: 623, column: 39, scope: !6160)
!6290 = !DILocation(line: 623, column: 21, scope: !6160)
!6291 = !DILocation(line: 624, column: 28, scope: !6160)
!6292 = !DILocation(line: 624, column: 21, scope: !6160)
!6293 = !DILocation(line: 1110, column: 21, scope: !6184)
!6294 = !DILocation(line: 601, column: 9, scope: !6190)
!6295 = !DILocation(line: 602, column: 27, scope: !6188)
!6296 = !DILocation(line: 602, column: 9, scope: !6188)
!6297 = !DILocation(line: 603, column: 16, scope: !6188)
!6298 = !DILocation(line: 603, column: 9, scope: !6188)
!6299 = !DILocation(line: 622, column: 21, scope: !6140)
!6300 = !DILocation(line: 623, column: 39, scope: !6138)
!6301 = !DILocation(line: 623, column: 21, scope: !6138)
!6302 = !DILocation(line: 624, column: 28, scope: !6138)
!6303 = !DILocation(line: 624, column: 21, scope: !6138)
!6304 = !DILocation(line: 0, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6127, file: !626, discriminator: 0)
!6306 = distinct !DISubprogram(name: "demangle", linkageName: "_ZN14rustc_demangle2v08demangle17h12a06ca24fe18059E", scope: !83, file: !751, line: 37, type: !6307, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6328)
!6307 = !DISubroutineType(types: !6308)
!6308 = !{!6309, !659}
!6309 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(rustc_demangle::v0::Demangle, &str), rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !6310, templateParams: !14, identifier: "d2246557eb3e9da3fffee7e090276f9d")
!6310 = !{!6311}
!6311 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6309, file: !2, size: 128, align: 32, elements: !6312, templateParams: !14, identifier: "c97df16ca7b3d8d2fe0e16a6ef6339c0", discriminator: !6327)
!6312 = !{!6313, !6323}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6311, file: !2, baseType: !6314, size: 128, align: 32)
!6314 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6309, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !6315, templateParams: !6321, identifier: "b490b5ad64e897a8231401546b915e07")
!6315 = !{!6316}
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6314, file: !2, baseType: !6317, size: 128, align: 32, flags: DIFlagPublic)
!6317 = !DICompositeType(tag: DW_TAG_structure_type, name: "(rustc_demangle::v0::Demangle, &str)", file: !2, size: 128, align: 32, elements: !6318, templateParams: !14, identifier: "c15a969c2c60cd0274d0288db569bbef")
!6318 = !{!6319, !6320}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6317, file: !2, baseType: !668, size: 64, align: 32)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6317, file: !2, baseType: !659, size: 64, align: 32, offset: 64)
!6321 = !{!6322, !1720}
!6322 = !DITemplateTypeParameter(name: "T", type: !6317)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6311, file: !2, baseType: !6324, size: 128, align: 32, extraData: i32 0)
!6324 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6309, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !6325, templateParams: !6321, identifier: "d76d43653afe9173f7a4d19eba3c0fb")
!6325 = !{!6326}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6324, file: !2, baseType: !87, size: 8, align: 8, offset: 32, flags: DIFlagPublic)
!6327 = !DIDerivedType(tag: DW_TAG_member, scope: !6309, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!6328 = !{!6329, !6330, !6332, !6335, !6337, !6339, !6341, !6343}
!6329 = !DILocalVariable(name: "s", arg: 1, scope: !6306, file: !751, line: 37, type: !659)
!6330 = !DILocalVariable(name: "inner", scope: !6331, file: !751, line: 41, type: !659, align: 32)
!6331 = distinct !DILexicalBlock(scope: !6306, file: !751, line: 41, column: 5)
!6332 = !DILocalVariable(name: "try_parse_path", scope: !6333, file: !751, line: 67, type: !6334, align: 8)
!6333 = distinct !DILexicalBlock(scope: !6331, file: !751, line: 67, column: 5)
!6334 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !472, file: !2, align: 8, elements: !14, identifier: "9072115c20ba5c0f26fd9664e1d5c041")
!6335 = !DILocalVariable(name: "parser", scope: !6336, file: !751, line: 78, type: !1704, align: 32)
!6336 = distinct !DILexicalBlock(scope: !6333, file: !751, line: 78, column: 5)
!6337 = !DILocalVariable(name: "residual", scope: !6338, file: !751, line: 83, type: !1736, align: 8)
!6338 = distinct !DILexicalBlock(scope: !6336, file: !751, line: 83, column: 36)
!6339 = !DILocalVariable(name: "val", scope: !6340, file: !751, line: 83, type: !1704, align: 32)
!6340 = distinct !DILexicalBlock(scope: !6336, file: !751, line: 83, column: 14)
!6341 = !DILocalVariable(name: "residual", scope: !6342, file: !751, line: 87, type: !1736, align: 8)
!6342 = distinct !DILexicalBlock(scope: !6336, file: !751, line: 87, column: 40)
!6343 = !DILocalVariable(name: "val", scope: !6344, file: !751, line: 87, type: !1704, align: 32)
!6344 = distinct !DILexicalBlock(scope: !6336, file: !751, line: 87, column: 18)
!6345 = !DILocation(line: 37, column: 17, scope: !6306)
!6346 = !DILocation(line: 41, column: 9, scope: !6331)
!6347 = !DILocation(line: 78, column: 9, scope: !6336)
!6348 = !DILocation(line: 83, column: 14, scope: !6340)
!6349 = !DILocation(line: 87, column: 18, scope: !6344)
!6350 = !DILocation(line: 67, column: 9, scope: !6333)
!6351 = !DILocation(line: 42, column: 10, scope: !6331)
!6352 = !DILocation(line: 42, column: 8, scope: !6331)
!6353 = !DILocation(line: 44, column: 17, scope: !6331)
!6354 = !DILocation(line: 44, column: 15, scope: !6331)
!6355 = !DILocation(line: 42, column: 25, scope: !6331)
!6356 = !DILocation(line: 42, column: 23, scope: !6331)
!6357 = !DILocation(line: 43, column: 19, scope: !6331)
!6358 = !DILocation(line: 43, column: 9, scope: !6331)
!6359 = !DILocation(line: 42, column: 5, scope: !6331)
!6360 = !DILocation(line: 48, column: 17, scope: !6331)
!6361 = !DILocation(line: 48, column: 15, scope: !6331)
!6362 = !DILocation(line: 44, column: 32, scope: !6331)
!6363 = !DILocation(line: 44, column: 30, scope: !6331)
!6364 = !DILocation(line: 47, column: 19, scope: !6331)
!6365 = !DILocation(line: 47, column: 9, scope: !6331)
!6366 = !DILocation(line: 44, column: 12, scope: !6331)
!6367 = !DILocation(line: 52, column: 16, scope: !6331)
!6368 = !DILocation(line: 0, scope: !6369)
!6369 = !DILexicalBlockFile(scope: !6331, file: !626, discriminator: 0)
!6370 = !DILocation(line: 48, column: 32, scope: !6331)
!6371 = !DILocation(line: 48, column: 30, scope: !6331)
!6372 = !DILocation(line: 50, column: 19, scope: !6331)
!6373 = !DILocation(line: 50, column: 9, scope: !6331)
!6374 = !DILocation(line: 91, column: 2, scope: !6306)
!6375 = !DILocation(line: 56, column: 11, scope: !6331)
!6376 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !6377)
!6377 = distinct !DILocation(line: 56, column: 17, scope: !6331)
!6378 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !6377)
!6379 = !DILocation(line: 56, column: 17, scope: !6331)
!6380 = !DILocation(line: 57, column: 9, scope: !6331)
!6381 = !DILocation(line: 58, column: 21, scope: !6331)
!6382 = !DILocation(line: 62, column: 8, scope: !6331)
!6383 = !DILocation(line: 62, column: 14, scope: !6331)
!6384 = !DILocation(line: 62, column: 22, scope: !6331)
!6385 = !DILocation(line: 79, column: 14, scope: !6333)
!6386 = !DILocation(line: 78, column: 22, scope: !6333)
!6387 = !DILocation(line: 83, column: 29, scope: !6336)
!6388 = !DILocation(line: 83, column: 14, scope: !6336)
!6389 = !DILocation(line: 63, column: 16, scope: !6331)
!6390 = !DILocation(line: 83, column: 36, scope: !6336)
!6391 = !DILocation(line: 83, column: 36, scope: !6338)
!6392 = !DILocation(line: 83, column: 14, scope: !6338)
!6393 = !DILocation(line: 83, column: 5, scope: !6336)
!6394 = !DILocation(line: 86, column: 35, scope: !6336)
!6395 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !6396)
!6396 = distinct !DILocation(line: 86, column: 46, scope: !6336)
!6397 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !6396)
!6398 = !DILocation(line: 86, column: 46, scope: !6336)
!6399 = !DILocation(line: 86, column: 61, scope: !6336)
!6400 = !DILocation(line: 86, column: 57, scope: !6336)
!6401 = !DILocation(line: 86, column: 12, scope: !6336)
!6402 = !DILocation(line: 86, column: 19, scope: !6336)
!6403 = !DILocation(line: 90, column: 20, scope: !6336)
!6404 = !DILocation(line: 90, column: 30, scope: !6336)
!6405 = !DILocation(line: 90, column: 41, scope: !6336)
!6406 = !DILocation(line: 90, column: 40, scope: !6336)
!6407 = !DILocation(line: 90, column: 8, scope: !6336)
!6408 = !DILocation(line: 90, column: 5, scope: !6336)
!6409 = !DILocation(line: 87, column: 33, scope: !6336)
!6410 = !DILocation(line: 87, column: 18, scope: !6336)
!6411 = !DILocation(line: 87, column: 40, scope: !6336)
!6412 = !DILocation(line: 87, column: 40, scope: !6342)
!6413 = !DILocation(line: 87, column: 18, scope: !6342)
!6414 = !DILocation(line: 87, column: 9, scope: !6336)
!6415 = !DILocation(line: 86, column: 5, scope: !6336)
!6416 = !DILocation(line: 0, scope: !6417)
!6417 = !DILexicalBlockFile(scope: !6306, file: !626, discriminator: 0)
!6418 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17ha9f0c78f9f6ea66fE", scope: !472, file: !751, line: 67, type: !6419, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6422)
!6419 = !DISubroutineType(types: !6420)
!6420 = !{!2123, !6421, !1704}
!6421 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::demangle::{closure_env#1}", baseType: !6334, size: 32, align: 32, dwarfAddressSpace: 0)
!6422 = !{!6423, !6424, !6426}
!6423 = !DILocalVariable(name: "parser", arg: 2, scope: !6418, file: !751, line: 67, type: !1704)
!6424 = !DILocalVariable(name: "dummy_printer", scope: !6425, file: !751, line: 68, type: !2303, align: 32)
!6425 = distinct !DILexicalBlock(scope: !6418, file: !751, line: 68, column: 9)
!6426 = !DILocalVariable(arg: 1, scope: !6418, file: !751, line: 67, type: !6421)
!6427 = !DILocation(line: 67, column: 26, scope: !6418)
!6428 = !DILocation(line: 67, column: 27, scope: !6418)
!6429 = !DILocation(line: 68, column: 13, scope: !6425)
!6430 = !DILocation(line: 69, column: 21, scope: !6418)
!6431 = !DILocation(line: 68, column: 33, scope: !6418)
!6432 = !DILocation(line: 74, column: 14, scope: !6425)
!6433 = !DILocation(line: 75, column: 14, scope: !6425)
!6434 = !DILocation(line: 76, column: 9, scope: !6425)
!6435 = !DILocation(line: 77, column: 6, scope: !6418)
!6436 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle2v08demangle28_$u7b$$u7b$closure$u7d$$u7d$17hc0a6af2925c9d046E", scope: !472, file: !751, line: 62, type: !6437, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6440)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!706, !6439, !13}
!6439 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::demangle::{closure_env#0}", baseType: !471, size: 32, align: 32, dwarfAddressSpace: 0)
!6440 = !{!6441, !6442}
!6441 = !DILocalVariable(name: "c", arg: 2, scope: !6436, file: !751, line: 62, type: !13)
!6442 = !DILocalVariable(arg: 1, scope: !6436, file: !751, line: 62, type: !6439)
!6443 = !DILocation(line: 62, column: 26, scope: !6436)
!6444 = !DILocation(line: 62, column: 27, scope: !6436)
!6445 = !DILocation(line: 62, column: 30, scope: !6436)
!6446 = !DILocation(line: 62, column: 43, scope: !6436)
!6447 = distinct !DISubprogram(name: "is_rust_hash", linkageName: "_ZN14rustc_demangle6legacy12is_rust_hash17hb40e9be59fc7970bE", scope: !451, file: !6448, line: 101, type: !704, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6449)
!6448 = !DIFile(filename: "src/legacy.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26", checksumkind: CSK_MD5, checksum: "d1bfb0b75543e061d087c5e41fe024f4")
!6449 = !{!6450}
!6450 = !DILocalVariable(name: "s", arg: 1, scope: !6447, file: !6448, line: 101, type: !659)
!6451 = !DILocation(line: 101, column: 17, scope: !6447)
!6452 = !DILocation(line: 102, column: 7, scope: !6447)
!6453 = !DILocation(line: 102, column: 5, scope: !6447)
!6454 = !DILocation(line: 102, column: 28, scope: !6447)
!6455 = !DILocation(line: 102, column: 34, scope: !6447)
!6456 = !DILocation(line: 102, column: 42, scope: !6447)
!6457 = !DILocation(line: 103, column: 2, scope: !6447)
!6458 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle6legacy12is_rust_hash28_$u7b$$u7b$closure$u7d$$u7d$17he7d4c979a7d9f479E", scope: !6459, file: !6448, line: 102, type: !6460, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6464)
!6459 = !DINamespace(name: "is_rust_hash", scope: !451)
!6460 = !DISubroutineType(types: !6461)
!6461 = !{!706, !6462, !252}
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::legacy::is_rust_hash::{closure_env#0}", baseType: !6463, size: 32, align: 32, dwarfAddressSpace: 0)
!6463 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6459, file: !2, align: 8, elements: !14, identifier: "4701468f8362faf815773d990232bce0")
!6464 = !{!6465, !6466}
!6465 = !DILocalVariable(name: "c", arg: 2, scope: !6458, file: !6448, line: 102, type: !252)
!6466 = !DILocalVariable(arg: 1, scope: !6458, file: !6448, line: 102, type: !6462)
!6467 = !DILocation(line: 102, column: 46, scope: !6458)
!6468 = !DILocation(line: 102, column: 47, scope: !6458)
!6469 = !DILocation(line: 102, column: 52, scope: !6458)
!6470 = !DILocation(line: 102, column: 64, scope: !6458)
!6471 = distinct !DISubprogram(name: "demangle", linkageName: "_ZN14rustc_demangle6legacy8demangle17hacd077b712c1531bE", scope: !451, file: !6448, line: 49, type: !6472, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6493)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!6474, !659}
!6474 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(rustc_demangle::legacy::Demangle, &str), ()>", scope: !30, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !6475, templateParams: !14, identifier: "d0bdc4214d8a220a6db5cbcc467e77d9")
!6475 = !{!6476}
!6476 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6474, file: !2, size: 160, align: 32, elements: !6477, templateParams: !14, identifier: "72a6e9662a4f346317ec6a7428c51635", discriminator: !6492)
!6477 = !{!6478, !6488}
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6476, file: !2, baseType: !6479, size: 160, align: 32)
!6479 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6474, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !6480, templateParams: !6486, identifier: "4eb042a726153a049503ec4aaa9207f")
!6480 = !{!6481}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6479, file: !2, baseType: !6482, size: 160, align: 32, flags: DIFlagPublic)
!6482 = !DICompositeType(tag: DW_TAG_structure_type, name: "(rustc_demangle::legacy::Demangle, &str)", file: !2, size: 160, align: 32, elements: !6483, templateParams: !14, identifier: "6dbc8a7dce42b957aece8c98112e663e")
!6483 = !{!6484, !6485}
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6482, file: !2, baseType: !656, size: 96, align: 32)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6482, file: !2, baseType: !659, size: 64, align: 32, offset: 96)
!6486 = !{!6487, !315}
!6487 = !DITemplateTypeParameter(name: "T", type: !6482)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6476, file: !2, baseType: !6489, size: 160, align: 32, extraData: i32 0)
!6489 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6474, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !6490, templateParams: !6486, identifier: "476c3389c190f102149fc31bdb01e885")
!6490 = !{!6491}
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6489, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!6492 = !DIDerivedType(tag: DW_TAG_member, scope: !6474, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!6493 = !{!6494, !6495, !6497, !6499, !6501, !6503, !6505, !6507, !6509, !6511, !6513, !6515, !6517, !6519, !6521, !6523}
!6494 = !DILocalVariable(name: "s", arg: 1, scope: !6471, file: !6448, line: 49, type: !659)
!6495 = !DILocalVariable(name: "inner", scope: !6496, file: !6448, line: 53, type: !659, align: 32)
!6496 = distinct !DILexicalBlock(scope: !6471, file: !6448, line: 53, column: 5)
!6497 = !DILocalVariable(name: "elements", scope: !6498, file: !6448, line: 71, type: !9, align: 32)
!6498 = distinct !DILexicalBlock(scope: !6496, file: !6448, line: 71, column: 5)
!6499 = !DILocalVariable(name: "chars", scope: !6500, file: !6448, line: 72, type: !781, align: 32)
!6500 = distinct !DILexicalBlock(scope: !6498, file: !6448, line: 72, column: 5)
!6501 = !DILocalVariable(name: "c", scope: !6502, file: !6448, line: 73, type: !252, align: 32)
!6502 = distinct !DILexicalBlock(scope: !6500, file: !6448, line: 73, column: 5)
!6503 = !DILocalVariable(name: "residual", scope: !6504, file: !6448, line: 73, type: !991, align: 8)
!6504 = distinct !DILexicalBlock(scope: !6500, file: !6448, line: 73, column: 39)
!6505 = !DILocalVariable(name: "val", scope: !6506, file: !6448, line: 73, type: !252, align: 32)
!6506 = distinct !DILexicalBlock(scope: !6500, file: !6448, line: 73, column: 17)
!6507 = !DILocalVariable(name: "len", scope: !6508, file: !6448, line: 79, type: !9, align: 32)
!6508 = distinct !DILexicalBlock(scope: !6502, file: !6448, line: 79, column: 9)
!6509 = !DILocalVariable(name: "d", scope: !6510, file: !6448, line: 80, type: !48, align: 32)
!6510 = distinct !DILexicalBlock(scope: !6508, file: !6448, line: 80, column: 44)
!6511 = !DILocalVariable(name: "residual", scope: !6512, file: !6448, line: 84, type: !991, align: 8)
!6512 = distinct !DILexicalBlock(scope: !6510, file: !6448, line: 84, column: 27)
!6513 = !DILocalVariable(name: "val", scope: !6514, file: !6448, line: 81, type: !9, align: 32)
!6514 = distinct !DILexicalBlock(scope: !6510, file: !6448, line: 81, column: 19)
!6515 = !DILocalVariable(name: "residual", scope: !6516, file: !6448, line: 85, type: !991, align: 8)
!6516 = distinct !DILexicalBlock(scope: !6510, file: !6448, line: 85, column: 39)
!6517 = !DILocalVariable(name: "val", scope: !6518, file: !6448, line: 85, type: !252, align: 32)
!6518 = distinct !DILexicalBlock(scope: !6510, file: !6448, line: 85, column: 17)
!6519 = !DILocalVariable(name: "iter", scope: !6520, file: !6448, line: 90, type: !1019, align: 32)
!6520 = distinct !DILexicalBlock(scope: !6508, file: !6448, line: 90, column: 9)
!6521 = !DILocalVariable(name: "residual", scope: !6522, file: !6448, line: 91, type: !991, align: 8)
!6522 = distinct !DILexicalBlock(scope: !6520, file: !6448, line: 91, column: 39)
!6523 = !DILocalVariable(name: "val", scope: !6524, file: !6448, line: 91, type: !252, align: 32)
!6524 = distinct !DILexicalBlock(scope: !6520, file: !6448, line: 91, column: 17)
!6525 = !DILocation(line: 49, column: 17, scope: !6471)
!6526 = !DILocation(line: 53, column: 9, scope: !6496)
!6527 = !DILocation(line: 71, column: 9, scope: !6498)
!6528 = !DILocation(line: 72, column: 9, scope: !6500)
!6529 = !DILocation(line: 73, column: 9, scope: !6502)
!6530 = !DILocation(line: 79, column: 13, scope: !6508)
!6531 = !DILocation(line: 80, column: 24, scope: !6510)
!6532 = !DILocation(line: 90, column: 18, scope: !6520)
!6533 = !DILocation(line: 73, column: 39, scope: !6504)
!6534 = !DILocation(line: 84, column: 27, scope: !6512)
!6535 = !DILocation(line: 85, column: 39, scope: !6516)
!6536 = !DILocation(line: 91, column: 39, scope: !6522)
!6537 = !DILocation(line: 53, column: 22, scope: !6471)
!6538 = !DILocation(line: 53, column: 20, scope: !6471)
!6539 = !DILocation(line: 55, column: 17, scope: !6471)
!6540 = !DILocation(line: 55, column: 15, scope: !6471)
!6541 = !DILocation(line: 54, column: 11, scope: !6471)
!6542 = !DILocation(line: 54, column: 9, scope: !6471)
!6543 = !DILocation(line: 53, column: 17, scope: !6471)
!6544 = !DILocation(line: 59, column: 17, scope: !6471)
!6545 = !DILocation(line: 59, column: 15, scope: !6471)
!6546 = !DILocation(line: 58, column: 11, scope: !6471)
!6547 = !DILocation(line: 58, column: 9, scope: !6471)
!6548 = !DILocation(line: 55, column: 12, scope: !6471)
!6549 = !DILocation(line: 63, column: 16, scope: !6471)
!6550 = !DILocation(line: 0, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !6471, file: !626, discriminator: 0)
!6552 = !DILocation(line: 61, column: 11, scope: !6471)
!6553 = !DILocation(line: 59, column: 12, scope: !6471)
!6554 = !DILocation(line: 98, column: 2, scope: !6471)
!6555 = !DILocation(line: 67, column: 8, scope: !6496)
!6556 = !DILocation(line: 67, column: 14, scope: !6496)
!6557 = !DILocation(line: 67, column: 22, scope: !6496)
!6558 = !DILocation(line: 71, column: 24, scope: !6496)
!6559 = !DILocation(line: 72, column: 21, scope: !6498)
!6560 = !DILocation(line: 72, column: 27, scope: !6498)
!6561 = !DILocation(line: 73, column: 23, scope: !6500)
!6562 = !DILocation(line: 73, column: 30, scope: !6500)
!6563 = !DILocation(line: 73, column: 17, scope: !6500)
!6564 = !DILocation(line: 68, column: 16, scope: !6496)
!6565 = !DILocation(line: 0, scope: !6566)
!6566 = !DILexicalBlockFile(scope: !6496, file: !626, discriminator: 0)
!6567 = !DILocation(line: 73, column: 17, scope: !6504)
!6568 = !DILocation(line: 73, column: 17, scope: !6506)
!6569 = !DILocation(line: 74, column: 5, scope: !6502)
!6570 = !DILocation(line: 74, column: 11, scope: !6502)
!6571 = !DILocation(line: 97, column: 20, scope: !6502)
!6572 = !DILocation(line: 97, column: 27, scope: !6502)
!6573 = !DILocation(line: 97, column: 9, scope: !6502)
!6574 = !DILocation(line: 97, column: 45, scope: !6502)
!6575 = !DILocation(line: 97, column: 8, scope: !6502)
!6576 = !DILocation(line: 97, column: 5, scope: !6502)
!6577 = !DILocation(line: 76, column: 13, scope: !6502)
!6578 = !DILocation(line: 76, column: 15, scope: !6502)
!6579 = !DILocation(line: 77, column: 20, scope: !6502)
!6580 = !DILocation(line: 0, scope: !6581)
!6581 = !DILexicalBlockFile(scope: !6502, file: !626, discriminator: 0)
!6582 = !DILocation(line: 79, column: 23, scope: !6502)
!6583 = !DILocation(line: 80, column: 9, scope: !6508)
!6584 = !DILocation(line: 80, column: 29, scope: !6510)
!6585 = !DILocation(line: 80, column: 31, scope: !6510)
!6586 = !DILocation(line: 80, column: 19, scope: !6510)
!6587 = !DILocation(line: 81, column: 19, scope: !6510)
!6588 = !DILocation(line: 82, column: 18, scope: !6510)
!6589 = !DILocation(line: 83, column: 18, scope: !6510)
!6590 = !DILocation(line: 84, column: 18, scope: !6510)
!6591 = !DILocation(line: 90, column: 21, scope: !6508)
!6592 = !DILocation(line: 90, column: 18, scope: !6508)
!6593 = !DILocation(line: 90, column: 9, scope: !6520)
!6594 = !DILocation(line: 81, column: 19, scope: !6512)
!6595 = !DILocation(line: 81, column: 19, scope: !6514)
!6596 = !DILocation(line: 81, column: 13, scope: !6510)
!6597 = !DILocation(line: 85, column: 23, scope: !6510)
!6598 = !DILocation(line: 85, column: 30, scope: !6510)
!6599 = !DILocation(line: 85, column: 17, scope: !6510)
!6600 = !DILocation(line: 85, column: 17, scope: !6516)
!6601 = !DILocation(line: 85, column: 17, scope: !6518)
!6602 = !DILocation(line: 85, column: 13, scope: !6510)
!6603 = !DILocation(line: 91, column: 23, scope: !6520)
!6604 = !DILocation(line: 91, column: 30, scope: !6520)
!6605 = !DILocation(line: 91, column: 17, scope: !6520)
!6606 = !DILocation(line: 94, column: 9, scope: !6508)
!6607 = !DILocation(line: 91, column: 17, scope: !6522)
!6608 = !DILocation(line: 91, column: 17, scope: !6524)
!6609 = !DILocation(line: 91, column: 13, scope: !6520)
!6610 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17ha87e1852dc5ba981E", scope: !450, file: !6448, line: 67, type: !6611, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6614)
!6611 = !DISubroutineType(types: !6612)
!6612 = !{!706, !6613, !13}
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::legacy::demangle::{closure_env#0}", baseType: !449, size: 32, align: 32, dwarfAddressSpace: 0)
!6614 = !{!6615, !6616}
!6615 = !DILocalVariable(name: "c", arg: 2, scope: !6610, file: !6448, line: 67, type: !13)
!6616 = !DILocalVariable(arg: 1, scope: !6610, file: !6448, line: 67, type: !6613)
!6617 = !DILocation(line: 67, column: 26, scope: !6610)
!6618 = !DILocation(line: 67, column: 27, scope: !6610)
!6619 = !DILocation(line: 67, column: 30, scope: !6610)
!6620 = !DILocation(line: 67, column: 43, scope: !6610)
!6621 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN14rustc_demangle6legacy8demangle28_$u7b$$u7b$closure$u7d$$u7d$17hede4034f9e44097fE", scope: !450, file: !6448, line: 83, type: !6622, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6640)
!6622 = !DISubroutineType(types: !6623)
!6623 = !{!6624, !6636, !9}
!6624 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !244, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !6625, templateParams: !14, identifier: "23b42ad4918f48bbb0d7df30a3e65f21")
!6625 = !{!6626}
!6626 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6624, file: !2, size: 64, align: 32, elements: !6627, templateParams: !14, identifier: "fff0cc91bd07d4e2a6f41aa96659bb8", discriminator: !6635)
!6627 = !{!6628, !6631}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6626, file: !2, baseType: !6629, size: 64, align: 32, extraData: i32 0)
!6629 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6624, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !6630, identifier: "16f3611ef7370fd7f09fc668dc1c16f8")
!6630 = !{!40}
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6626, file: !2, baseType: !6632, size: 64, align: 32, extraData: i32 1)
!6632 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6624, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !6633, templateParams: !6630, identifier: "9bb7e929a7e81f45f834925bbfee816")
!6633 = !{!6634}
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6632, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!6635 = !DIDerivedType(tag: DW_TAG_member, scope: !6624, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!6636 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !450, file: !2, size: 32, align: 32, elements: !6637, templateParams: !14, identifier: "bc1dcfc892861257549823fa4f40a415")
!6637 = !{!6638}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__d", scope: !6636, file: !2, baseType: !6639, size: 32, align: 32)
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !48, size: 32, align: 32, dwarfAddressSpace: 0)
!6640 = !{!6641, !6642}
!6641 = !DILocalVariable(name: "len", arg: 2, scope: !6621, file: !6448, line: 83, type: !9)
!6642 = !DILocalVariable(name: "d", scope: !6621, file: !6448, line: 80, type: !48, align: 32)
!6643 = !DILocation(line: 80, column: 24, scope: !6621)
!6644 = !DILocation(line: 83, column: 28, scope: !6621)
!6645 = !DILocation(line: 83, column: 49, scope: !6621)
!6646 = !DILocation(line: 83, column: 37, scope: !6621)
!6647 = !DILocation(line: 83, column: 60, scope: !6621)
!6648 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN14rustc_demangle8Demangle6as_str17h78684f9f31ef46fbE", scope: !637, file: !626, line: 248, type: !6649, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !6652, retainedNodes: !6653)
!6649 = !DISubroutineType(types: !6650)
!6650 = !{!659, !6651}
!6651 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::Demangle", baseType: !637, size: 32, align: 32, dwarfAddressSpace: 0)
!6652 = !DISubprogram(name: "as_str", linkageName: "_ZN14rustc_demangle8Demangle6as_str17h78684f9f31ef46fbE", scope: !637, file: !626, line: 248, type: !6649, scopeLine: 248, flags: DIFlagPrototyped, spFlags: 0, templateParams: !14)
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "self", arg: 1, scope: !6648, file: !626, line: 248, type: !6651)
!6655 = !DILocation(line: 248, column: 19, scope: !6648)
!6656 = !DILocation(line: 249, column: 9, scope: !6648)
!6657 = !DILocation(line: 250, column: 6, scope: !6648)
!6658 = distinct !DISubprogram(name: "demangle", linkageName: "_ZN14rustc_demangle8demangle17hddccca6ff9567998E", scope: !26, file: !626, line: 92, type: !6659, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6661)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!637, !659}
!6661 = !{!6662, !6663, !6665, !6667, !6669, !6671, !6673, !6675, !6677, !6678, !6680}
!6662 = !DILocalVariable(name: "s", arg: 1, scope: !6658, file: !626, line: 92, type: !659)
!6663 = !DILocalVariable(name: "llvm", scope: !6664, file: !626, line: 96, type: !659, align: 32)
!6664 = distinct !DILexicalBlock(scope: !6658, file: !626, line: 96, column: 5)
!6665 = !DILocalVariable(name: "i", scope: !6666, file: !626, line: 97, type: !9, align: 32)
!6666 = distinct !DILexicalBlock(scope: !6664, file: !626, line: 97, column: 35)
!6667 = !DILocalVariable(name: "candidate", scope: !6668, file: !626, line: 98, type: !659, align: 32)
!6668 = distinct !DILexicalBlock(scope: !6666, file: !626, line: 98, column: 9)
!6669 = !DILocalVariable(name: "all_hex", scope: !6670, file: !626, line: 99, type: !706, align: 8)
!6670 = distinct !DILexicalBlock(scope: !6668, file: !626, line: 99, column: 9)
!6671 = !DILocalVariable(name: "suffix", scope: !6672, file: !626, line: 109, type: !659, align: 32)
!6672 = distinct !DILexicalBlock(scope: !6664, file: !626, line: 109, column: 5)
!6673 = !DILocalVariable(name: "style", scope: !6674, file: !626, line: 110, type: !640, align: 32)
!6674 = distinct !DILexicalBlock(scope: !6672, file: !626, line: 110, column: 5)
!6675 = !DILocalVariable(name: "d", scope: !6676, file: !626, line: 111, type: !656, align: 32)
!6676 = distinct !DILexicalBlock(scope: !6672, file: !626, line: 111, column: 9)
!6677 = !DILocalVariable(name: "s", scope: !6676, file: !626, line: 111, type: !659, align: 32)
!6678 = !DILocalVariable(name: "d", scope: !6679, file: !626, line: 116, type: !668, align: 32)
!6679 = distinct !DILexicalBlock(scope: !6672, file: !626, line: 116, column: 13)
!6680 = !DILocalVariable(name: "s", scope: !6679, file: !626, line: 116, type: !659, align: 32)
!6681 = !DILocation(line: 92, column: 17, scope: !6658)
!6682 = !DILocation(line: 109, column: 9, scope: !6672)
!6683 = !DILocation(line: 110, column: 9, scope: !6674)
!6684 = !DILocation(line: 111, column: 13, scope: !6676)
!6685 = !DILocation(line: 96, column: 16, scope: !6658)
!6686 = !DILocation(line: 96, column: 9, scope: !6664)
!6687 = !DILocation(line: 97, column: 22, scope: !6666)
!6688 = !DILocation(line: 97, column: 24, scope: !6666)
!6689 = !DILocation(line: 97, column: 12, scope: !6666)
!6690 = !DILocation(line: 97, column: 17, scope: !6666)
!6691 = !DILocation(line: 98, column: 26, scope: !6666)
!6692 = !DILocation(line: 98, column: 37, scope: !6666)
!6693 = !DILocation(line: 98, column: 28, scope: !6666)
!6694 = !DILocation(line: 109, column: 22, scope: !6664)
!6695 = !DILocation(line: 110, column: 44, scope: !6672)
!6696 = !DILocation(line: 110, column: 27, scope: !6672)
!6697 = !DILocation(line: 110, column: 21, scope: !6672)
!6698 = !DILocation(line: 98, column: 27, scope: !6666)
!6699 = !DILocation(line: 98, column: 13, scope: !6668)
!6700 = !DILocation(line: 99, column: 33, scope: !6668)
!6701 = !DILocation(line: 99, column: 41, scope: !6668)
!6702 = !DILocation(line: 99, column: 13, scope: !6670)
!6703 = !DILocation(line: 104, column: 12, scope: !6670)
!6704 = !DILocation(line: 105, column: 18, scope: !6670)
!6705 = !DILocation(line: 105, column: 19, scope: !6670)
!6706 = !DILocation(line: 105, column: 13, scope: !6670)
!6707 = !DILocation(line: 104, column: 9, scope: !6670)
!6708 = !DILocation(line: 115, column: 39, scope: !6672)
!6709 = !DILocation(line: 115, column: 26, scope: !6672)
!6710 = !DILocation(line: 115, column: 20, scope: !6672)
!6711 = !DILocation(line: 111, column: 13, scope: !6672)
!6712 = !DILocation(line: 111, column: 16, scope: !6672)
!6713 = !DILocation(line: 111, column: 16, scope: !6676)
!6714 = !DILocation(line: 112, column: 13, scope: !6676)
!6715 = !DILocation(line: 113, column: 18, scope: !6676)
!6716 = !DILocation(line: 113, column: 13, scope: !6676)
!6717 = !DILocation(line: 114, column: 9, scope: !6672)
!6718 = !DILocation(line: 131, column: 9, scope: !6674)
!6719 = !DILocation(line: 131, column: 16, scope: !6674)
!6720 = !DILocation(line: 116, column: 17, scope: !6672)
!6721 = !DILocation(line: 116, column: 17, scope: !6679)
!6722 = !DILocation(line: 116, column: 20, scope: !6672)
!6723 = !DILocation(line: 116, column: 20, scope: !6679)
!6724 = !DILocation(line: 117, column: 17, scope: !6679)
!6725 = !DILocation(line: 118, column: 22, scope: !6679)
!6726 = !DILocation(line: 118, column: 17, scope: !6679)
!6727 = !DILocation(line: 119, column: 13, scope: !6672)
!6728 = !DILocation(line: 125, column: 84, scope: !6672)
!6729 = !DILocation(line: 132, column: 12, scope: !6674)
!6730 = !DILocation(line: 132, column: 19, scope: !6674)
!6731 = !DILocation(line: 142, column: 9, scope: !6674)
!6732 = !DILocation(line: 143, column: 19, scope: !6674)
!6733 = !DILocation(line: 144, column: 9, scope: !6674)
!6734 = !DILocation(line: 141, column: 5, scope: !6674)
!6735 = !DILocation(line: 146, column: 2, scope: !6658)
!6736 = !DILocation(line: 136, column: 13, scope: !6674)
!6737 = !DILocation(line: 137, column: 21, scope: !6674)
!6738 = !DILocation(line: 137, column: 13, scope: !6674)
!6739 = !DILocation(line: 132, column: 9, scope: !6674)
!6740 = !DILocation(line: 132, column: 54, scope: !6674)
!6741 = !DILocation(line: 132, column: 39, scope: !6674)
!6742 = !DILocation(line: 0, scope: !6658)
!6743 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN14rustc_demangle8demangle28_$u7b$$u7b$closure$u7d$$u7d$17h8f3f56dfdaf25207E", scope: !6744, file: !626, line: 99, type: !6745, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !6749)
!6744 = !DINamespace(name: "demangle", scope: !26)
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!706, !6747, !252}
!6747 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::demangle::{closure_env#0}", baseType: !6748, size: 32, align: 32, dwarfAddressSpace: 0)
!6748 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !6744, file: !2, align: 8, elements: !14, identifier: "eaf8949b644b0fa1a91c39b4dcd4241b")
!6749 = !{!6750, !6751}
!6750 = !DILocalVariable(name: "c", arg: 2, scope: !6743, file: !626, line: 99, type: !252)
!6751 = !DILocalVariable(arg: 1, scope: !6743, file: !626, line: 99, type: !6747)
!6752 = !DILocation(line: 99, column: 45, scope: !6743)
!6753 = !DILocation(line: 99, column: 46, scope: !6743)
!6754 = !DILocation(line: 100, column: 13, scope: !6743)
!6755 = !DILocation(line: 100, column: 25, scope: !6743)
!6756 = !DILocation(line: 100, column: 44, scope: !6743)
!6757 = !DILocation(line: 99, column: 49, scope: !6743)
!6758 = !DILocation(line: 102, column: 10, scope: !6743)
!6759 = distinct !DISubprogram(name: "from_residual<core::option::Option<char>, rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h3fa62735205e149dE", scope: !6761, file: !6760, line: 2182, type: !6762, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6768, retainedNodes: !6764)
!6760 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6b58edaf4cfc5d1595488e3ef89d31a")
!6761 = !DINamespace(name: "{impl#28}", scope: !30)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{!2251, !1736, !823}
!6764 = !{!6765, !6766}
!6765 = !DILocalVariable(name: "residual", arg: 1, scope: !6759, file: !6760, line: 2182, type: !1736)
!6766 = !DILocalVariable(name: "e", scope: !6767, file: !6760, line: 2184, type: !87, align: 8)
!6767 = distinct !DILexicalBlock(scope: !6759, file: !6760, line: 2184, column: 13)
!6768 = !{!2260, !1720, !6769}
!6769 = !DITemplateTypeParameter(name: "F", type: !87)
!6770 = !DILocation(line: 2182, column: 22, scope: !6759)
!6771 = !DILocation(line: 2184, column: 17, scope: !6759)
!6772 = !DILocation(line: 2184, column: 17, scope: !6767)
!6773 = !DILocalVariable(name: "t", arg: 1, scope: !6774, file: !6775, line: 788, type: !87)
!6774 = distinct !DISubprogram(name: "from<rustc_demangle::v0::ParseError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb25c023999922859E", scope: !6776, file: !6775, line: 788, type: !6777, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6780, retainedNodes: !6779)
!6775 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "731b373eab15d9a7565b3b74914b48da")
!6776 = !DINamespace(name: "{impl#4}", scope: !1000)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{!87, !87}
!6779 = !{!6773}
!6780 = !{!6781}
!6781 = !DITemplateTypeParameter(name: "T", type: !87)
!6782 = !DILocation(line: 788, column: 13, scope: !6774, inlinedAt: !6783)
!6783 = distinct !DILocation(line: 2184, column: 27, scope: !6767)
!6784 = !DILocation(line: 2184, column: 23, scope: !6767)
!6785 = !DILocation(line: 2186, column: 6, scope: !6759)
!6786 = distinct !DISubprogram(name: "from_residual<(rustc_demangle::legacy::Demangle, &str), (), ()>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h408a49701b14ff89E", scope: !6761, file: !6760, line: 2182, type: !6787, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6793, retainedNodes: !6789)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{!6474, !991, !823}
!6789 = !{!6790, !6791}
!6790 = !DILocalVariable(name: "residual", arg: 1, scope: !6786, file: !6760, line: 2182, type: !991)
!6791 = !DILocalVariable(name: "e", scope: !6792, file: !6760, line: 2184, type: !7, align: 8)
!6792 = distinct !DILexicalBlock(scope: !6786, file: !6760, line: 2184, column: 13)
!6793 = !{!6487, !315, !6794}
!6794 = !DITemplateTypeParameter(name: "F", type: !7)
!6795 = !DILocation(line: 2182, column: 22, scope: !6786)
!6796 = !DILocation(line: 2184, column: 17, scope: !6792)
!6797 = !DILocalVariable(name: "t", arg: 1, scope: !6798, file: !6775, line: 788, type: !7)
!6798 = distinct !DISubprogram(name: "from<()>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17hb133c881e8a91a9eE", scope: !6776, file: !6775, line: 788, type: !6799, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1073, retainedNodes: !6801)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{null, !7}
!6801 = !{!6797}
!6802 = !DILocation(line: 788, column: 13, scope: !6798, inlinedAt: !6803)
!6803 = distinct !DILocation(line: 2184, column: 27, scope: !6792)
!6804 = !DILocation(line: 2184, column: 23, scope: !6792)
!6805 = !DILocation(line: 2186, column: 6, scope: !6786)
!6806 = distinct !DISubprogram(name: "from_residual<u64, rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h51cbba3b483e7d23E", scope: !6761, file: !6760, line: 2182, type: !6807, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6813, retainedNodes: !6809)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!1711, !1736, !823}
!6809 = !{!6810, !6811}
!6810 = !DILocalVariable(name: "residual", arg: 1, scope: !6806, file: !6760, line: 2182, type: !1736)
!6811 = !DILocalVariable(name: "e", scope: !6812, file: !6760, line: 2184, type: !87, align: 8)
!6812 = distinct !DILexicalBlock(scope: !6806, file: !6760, line: 2184, column: 13)
!6813 = !{!764, !1720, !6769}
!6814 = !DILocation(line: 2182, column: 22, scope: !6806)
!6815 = !DILocation(line: 2184, column: 17, scope: !6806)
!6816 = !DILocation(line: 2184, column: 17, scope: !6812)
!6817 = !DILocation(line: 788, column: 13, scope: !6774, inlinedAt: !6818)
!6818 = distinct !DILocation(line: 2184, column: 27, scope: !6812)
!6819 = !DILocation(line: 2184, column: 23, scope: !6812)
!6820 = !DILocation(line: 2186, column: 6, scope: !6806)
!6821 = distinct !DISubprogram(name: "from_residual<rustc_demangle::v0::HexNibbles, rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h53fae95007a39ef6E", scope: !6761, file: !6760, line: 2182, type: !6822, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6828, retainedNodes: !6824)
!6822 = !DISubroutineType(types: !6823)
!6823 = !{!1827, !1736, !823}
!6824 = !{!6825, !6826}
!6825 = !DILocalVariable(name: "residual", arg: 1, scope: !6821, file: !6760, line: 2182, type: !1736)
!6826 = !DILocalVariable(name: "e", scope: !6827, file: !6760, line: 2184, type: !87, align: 8)
!6827 = distinct !DILexicalBlock(scope: !6821, file: !6760, line: 2184, column: 13)
!6828 = !{!1836, !1720, !6769}
!6829 = !DILocation(line: 2182, column: 22, scope: !6821)
!6830 = !DILocation(line: 2184, column: 17, scope: !6821)
!6831 = !DILocation(line: 2184, column: 17, scope: !6827)
!6832 = !DILocation(line: 788, column: 13, scope: !6774, inlinedAt: !6833)
!6833 = distinct !DILocation(line: 2184, column: 27, scope: !6827)
!6834 = !DILocation(line: 2184, column: 23, scope: !6827)
!6835 = !DILocation(line: 2186, column: 6, scope: !6821)
!6836 = distinct !DISubprogram(name: "from_residual<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7dcb1b3996f19a6eE", scope: !6761, file: !6760, line: 2182, type: !6837, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6843, retainedNodes: !6839)
!6837 = !DISubroutineType(types: !6838)
!6838 = !{!2123, !1736, !823}
!6839 = !{!6840, !6841}
!6840 = !DILocalVariable(name: "residual", arg: 1, scope: !6836, file: !6760, line: 2182, type: !1736)
!6841 = !DILocalVariable(name: "e", scope: !6842, file: !6760, line: 2184, type: !87, align: 8)
!6842 = distinct !DILexicalBlock(scope: !6836, file: !6760, line: 2184, column: 13)
!6843 = !{!2132, !1720, !6769}
!6844 = !DILocation(line: 2182, column: 22, scope: !6836)
!6845 = !DILocation(line: 2184, column: 17, scope: !6836)
!6846 = !DILocation(line: 2184, column: 17, scope: !6842)
!6847 = !DILocation(line: 788, column: 13, scope: !6774, inlinedAt: !6848)
!6848 = distinct !DILocation(line: 2184, column: 27, scope: !6842)
!6849 = !DILocation(line: 2184, column: 23, scope: !6842)
!6850 = !DILocation(line: 2186, column: 6, scope: !6836)
!6851 = distinct !DISubprogram(name: "from_residual<u8, rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h84d107d40cde513aE", scope: !6761, file: !6760, line: 2182, type: !6852, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6858, retainedNodes: !6854)
!6852 = !DISubroutineType(types: !6853)
!6853 = !{!1925, !1736, !823}
!6854 = !{!6855, !6856}
!6855 = !DILocalVariable(name: "residual", arg: 1, scope: !6851, file: !6760, line: 2182, type: !1736)
!6856 = !DILocalVariable(name: "e", scope: !6857, file: !6760, line: 2184, type: !87, align: 8)
!6857 = distinct !DILexicalBlock(scope: !6851, file: !6760, line: 2184, column: 13)
!6858 = !{!289, !1720, !6769}
!6859 = !DILocation(line: 2182, column: 22, scope: !6851)
!6860 = !DILocation(line: 2184, column: 17, scope: !6851)
!6861 = !DILocation(line: 2184, column: 17, scope: !6857)
!6862 = !DILocation(line: 788, column: 13, scope: !6774, inlinedAt: !6863)
!6863 = distinct !DILocation(line: 2184, column: 27, scope: !6857)
!6864 = !DILocation(line: 2184, column: 23, scope: !6857)
!6865 = !DILocation(line: 2186, column: 6, scope: !6851)
!6866 = distinct !DISubprogram(name: "from_residual<(), (), ()>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h8ae96925141241caE", scope: !6761, file: !6760, line: 2182, type: !6867, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6873, retainedNodes: !6869)
!6867 = !DISubroutineType(types: !6868)
!6868 = !{!1323, !991, !823}
!6869 = !{!6870, !6871}
!6870 = !DILocalVariable(name: "residual", arg: 1, scope: !6866, file: !6760, line: 2182, type: !991)
!6871 = !DILocalVariable(name: "e", scope: !6872, file: !6760, line: 2184, type: !7, align: 8)
!6872 = distinct !DILexicalBlock(scope: !6866, file: !6760, line: 2184, column: 13)
!6873 = !{!1074, !315, !6794}
!6874 = !DILocation(line: 2182, column: 22, scope: !6866)
!6875 = !DILocation(line: 2184, column: 17, scope: !6872)
!6876 = !DILocation(line: 788, column: 13, scope: !6798, inlinedAt: !6877)
!6877 = distinct !DILocation(line: 2184, column: 27, scope: !6872)
!6878 = !DILocation(line: 2186, column: 6, scope: !6866)
!6879 = distinct !DISubprogram(name: "from_residual<(rustc_demangle::v0::Demangle, &str), rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h94e3dca9ee159bc4E", scope: !6761, file: !6760, line: 2182, type: !6880, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6886, retainedNodes: !6882)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{!6309, !1736, !823}
!6882 = !{!6883, !6884}
!6883 = !DILocalVariable(name: "residual", arg: 1, scope: !6879, file: !6760, line: 2182, type: !1736)
!6884 = !DILocalVariable(name: "e", scope: !6885, file: !6760, line: 2184, type: !87, align: 8)
!6885 = distinct !DILexicalBlock(scope: !6879, file: !6760, line: 2184, column: 13)
!6886 = !{!6322, !1720, !6769}
!6887 = !DILocation(line: 2182, column: 22, scope: !6879)
!6888 = !DILocation(line: 2184, column: 17, scope: !6879)
!6889 = !DILocation(line: 2184, column: 17, scope: !6885)
!6890 = !DILocation(line: 788, column: 13, scope: !6774, inlinedAt: !6891)
!6891 = distinct !DILocation(line: 2184, column: 27, scope: !6885)
!6892 = !DILocation(line: 2184, column: 23, scope: !6885)
!6893 = !DILocation(line: 2186, column: 6, scope: !6879)
!6894 = distinct !DISubprogram(name: "from_residual<char, (), ()>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hba1210a8c40db0c3E", scope: !6761, file: !6760, line: 2182, type: !6895, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6901, retainedNodes: !6897)
!6895 = !DISubroutineType(types: !6896)
!6896 = !{!306, !991, !823}
!6897 = !{!6898, !6899}
!6898 = !DILocalVariable(name: "residual", arg: 1, scope: !6894, file: !6760, line: 2182, type: !991)
!6899 = !DILocalVariable(name: "e", scope: !6900, file: !6760, line: 2184, type: !7, align: 8)
!6900 = distinct !DILexicalBlock(scope: !6894, file: !6760, line: 2184, column: 13)
!6901 = !{!251, !315, !6794}
!6902 = !DILocation(line: 2182, column: 22, scope: !6894)
!6903 = !DILocation(line: 2184, column: 17, scope: !6900)
!6904 = !DILocation(line: 788, column: 13, scope: !6798, inlinedAt: !6905)
!6905 = distinct !DILocation(line: 2184, column: 27, scope: !6900)
!6906 = !DILocation(line: 2186, column: 6, scope: !6894)
!6907 = distinct !DISubprogram(name: "from_residual<rustc_demangle::v0::Ident, rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc3d3462676cac45eE", scope: !6761, file: !6760, line: 2182, type: !6908, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6914, retainedNodes: !6910)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!1980, !1736, !823}
!6910 = !{!6911, !6912}
!6911 = !DILocalVariable(name: "residual", arg: 1, scope: !6907, file: !6760, line: 2182, type: !1736)
!6912 = !DILocalVariable(name: "e", scope: !6913, file: !6760, line: 2184, type: !87, align: 8)
!6913 = distinct !DILexicalBlock(scope: !6907, file: !6760, line: 2184, column: 13)
!6914 = !{!1989, !1720, !6769}
!6915 = !DILocation(line: 2182, column: 22, scope: !6907)
!6916 = !DILocation(line: 2184, column: 17, scope: !6907)
!6917 = !DILocation(line: 2184, column: 17, scope: !6913)
!6918 = !DILocation(line: 788, column: 13, scope: !6774, inlinedAt: !6919)
!6919 = distinct !DILocation(line: 2184, column: 27, scope: !6913)
!6920 = !DILocation(line: 2184, column: 23, scope: !6913)
!6921 = !DILocation(line: 2186, column: 6, scope: !6907)
!6922 = distinct !DISubprogram(name: "from_residual<usize, core::fmt::Error, core::fmt::Error>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hef6ddedd8465f986E", scope: !6761, file: !6760, line: 2182, type: !6923, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6929, retainedNodes: !6925)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!4677, !2336, !823}
!6925 = !{!6926, !6927}
!6926 = !DILocalVariable(name: "residual", arg: 1, scope: !6922, file: !6760, line: 2182, type: !2336)
!6927 = !DILocalVariable(name: "e", scope: !6928, file: !6760, line: 2184, type: !1089, align: 8)
!6928 = distinct !DILexicalBlock(scope: !6922, file: !6760, line: 2184, column: 13)
!6929 = !{!40, !1088, !6930}
!6930 = !DITemplateTypeParameter(name: "F", type: !1089)
!6931 = !DILocation(line: 2182, column: 22, scope: !6922)
!6932 = !DILocation(line: 2184, column: 17, scope: !6928)
!6933 = !DILocalVariable(name: "t", arg: 1, scope: !6934, file: !6775, line: 788, type: !1089)
!6934 = distinct !DISubprogram(name: "from<core::fmt::Error>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h2944ac9dfc7cd744E", scope: !6776, file: !6775, line: 788, type: !6935, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6938, retainedNodes: !6937)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{null, !1089}
!6937 = !{!6933}
!6938 = !{!6939}
!6939 = !DITemplateTypeParameter(name: "T", type: !1089)
!6940 = !DILocation(line: 788, column: 13, scope: !6934, inlinedAt: !6941)
!6941 = distinct !DILocation(line: 2184, column: 27, scope: !6928)
!6942 = !DILocation(line: 2186, column: 6, scope: !6922)
!6943 = distinct !DISubprogram(name: "from_residual<bool, core::fmt::Error, core::fmt::Error>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbbe8a96f2b4d53E", scope: !6761, file: !6760, line: 2182, type: !6944, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6950, retainedNodes: !6946)
!6944 = !DISubroutineType(types: !6945)
!6945 = !{!5649, !2336, !823}
!6946 = !{!6947, !6948}
!6947 = !DILocalVariable(name: "residual", arg: 1, scope: !6943, file: !6760, line: 2182, type: !2336)
!6948 = !DILocalVariable(name: "e", scope: !6949, file: !6760, line: 2184, type: !1089, align: 8)
!6949 = distinct !DILexicalBlock(scope: !6943, file: !6760, line: 2184, column: 13)
!6950 = !{!5658, !1088, !6930}
!6951 = !DILocation(line: 2182, column: 22, scope: !6943)
!6952 = !DILocation(line: 2184, column: 17, scope: !6949)
!6953 = !DILocation(line: 788, column: 13, scope: !6934, inlinedAt: !6954)
!6954 = distinct !DILocation(line: 2184, column: 27, scope: !6949)
!6955 = !DILocation(line: 2186, column: 6, scope: !6943)
!6956 = distinct !DISubprogram(name: "from_residual<(), ()>", linkageName: "_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7d6abcbc4ff2f567E", scope: !6958, file: !6957, line: 128, type: !6959, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !433, retainedNodes: !6975)
!6957 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs", directory: "", checksumkind: CSK_MD5, checksum: "44d462a380a0d8aa930c564c84285317")
!6958 = !DINamespace(name: "{impl#1}", scope: !424)
!6959 = !DISubroutineType(types: !6960)
!6960 = !{!423, !6961}
!6961 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<(), core::convert::Infallible>", scope: !424, file: !2, align: 8, flags: DIFlagPublic, elements: !6962, templateParams: !14, identifier: "70c67962bcccb3cc241a10b5d6b84f20")
!6962 = !{!6963}
!6963 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6961, file: !2, align: 8, elements: !6964, templateParams: !14, identifier: "104263c6d108f6e6f8d51121690dc6ef")
!6964 = !{!6965, !6971}
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6963, file: !2, baseType: !6966, align: 8)
!6966 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6961, file: !2, align: 8, flags: DIFlagPublic, elements: !6967, templateParams: !6969, identifier: "1acfd5ceb5c5a9967031d505976bd3b2")
!6967 = !{!6968}
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6966, file: !2, baseType: !999, align: 8, flags: DIFlagPublic)
!6969 = !{!434, !6970}
!6970 = !DITemplateTypeParameter(name: "C", type: !999)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6963, file: !2, baseType: !6972, align: 8)
!6972 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6961, file: !2, align: 8, flags: DIFlagPublic, elements: !6973, templateParams: !6969, identifier: "a79d75179c67825a9072ffc437f0319f")
!6973 = !{!6974}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6972, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!6975 = !{!6976, !6977}
!6976 = !DILocalVariable(name: "residual", arg: 1, scope: !6956, file: !6957, line: 128, type: !6961)
!6977 = !DILocalVariable(name: "b", scope: !6978, file: !6957, line: 130, type: !7, align: 8)
!6978 = distinct !DILexicalBlock(scope: !6956, file: !6957, line: 130, column: 13)
!6979 = !DILocation(line: 128, column: 22, scope: !6956)
!6980 = !DILocation(line: 130, column: 32, scope: !6978)
!6981 = !DILocation(line: 132, column: 6, scope: !6956)
!6982 = distinct !DISubprogram(name: "from_residual<usize, usize>", linkageName: "_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17had059c36733d49c0E", scope: !6958, file: !6957, line: 128, type: !6983, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !596, retainedNodes: !6998)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!588, !6985}
!6985 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<usize, core::convert::Infallible>", scope: !424, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !6986, templateParams: !14, identifier: "33efd86824f9299b7d8f56d0932ac8ff")
!6986 = !{!6987}
!6987 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6985, file: !2, size: 32, align: 32, elements: !6988, templateParams: !14, identifier: "9a2211d35cf2811f14b807a92c1cffdf")
!6988 = !{!6989, !6994}
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !6987, file: !2, baseType: !6990, size: 32, align: 32)
!6990 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !6985, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !6991, templateParams: !6993, identifier: "c3ace5f07c53634cd40ebd913acedb62")
!6991 = !{!6992}
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6990, file: !2, baseType: !999, align: 8, flags: DIFlagPublic)
!6993 = !{!597, !6970}
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !6987, file: !2, baseType: !6995, size: 32, align: 32)
!6995 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !6985, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !6996, templateParams: !6993, identifier: "39a3e39beca87ad252a7d4a6d561647b")
!6996 = !{!6997}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6995, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPublic)
!6998 = !{!6999, !7000}
!6999 = !DILocalVariable(name: "residual", arg: 1, scope: !6982, file: !6957, line: 128, type: !6985)
!7000 = !DILocalVariable(name: "b", scope: !7001, file: !6957, line: 130, type: !9, align: 32)
!7001 = distinct !DILexicalBlock(scope: !6982, file: !6957, line: 130, column: 13)
!7002 = !DILocation(line: 128, column: 22, scope: !6982)
!7003 = !DILocation(line: 130, column: 32, scope: !6982)
!7004 = !DILocation(line: 130, column: 32, scope: !7001)
!7005 = !DILocation(line: 132, column: 6, scope: !6982)
!7006 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h8051f11f402ca3fdE", scope: !7008, file: !7007, line: 2659, type: !7009, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !7012)
!7007 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "953353698add15f5879168b0ac566843")
!7008 = !DINamespace(name: "{impl#73}", scope: !52)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{!1079, !7011, !50}
!7011 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&u8", baseType: !12, size: 32, align: 32, dwarfAddressSpace: 0)
!7012 = !{!7013, !7014}
!7013 = !DILocalVariable(name: "self", arg: 1, scope: !7006, file: !7007, line: 2659, type: !7011)
!7014 = !DILocalVariable(name: "f", arg: 2, scope: !7006, file: !7007, line: 2659, type: !50)
!7015 = !DILocation(line: 2659, column: 20, scope: !7006)
!7016 = !DILocation(line: 2659, column: 27, scope: !7006)
!7017 = !DILocation(line: 2659, column: 71, scope: !7006)
!7018 = !DILocation(line: 2659, column: 62, scope: !7006)
!7019 = !DILocation(line: 2659, column: 84, scope: !7006)
!7020 = distinct !DISubprogram(name: "fmt<rustc_demangle::DemangleStyle>", linkageName: "_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hdf0467d4d34a203fE", scope: !7021, file: !7007, line: 2659, type: !7022, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !646, retainedNodes: !7026)
!7021 = !DINamespace(name: "{impl#75}", scope: !52)
!7022 = !DISubroutineType(types: !7023)
!7023 = !{!1079, !7024, !50}
!7024 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&rustc_demangle::DemangleStyle", baseType: !7025, size: 32, align: 32, dwarfAddressSpace: 0)
!7025 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::DemangleStyle", baseType: !648, size: 32, align: 32, dwarfAddressSpace: 0)
!7026 = !{!7027, !7028}
!7027 = !DILocalVariable(name: "self", arg: 1, scope: !7020, file: !7007, line: 2659, type: !7024)
!7028 = !DILocalVariable(name: "f", arg: 2, scope: !7020, file: !7007, line: 2659, type: !50)
!7029 = !DILocation(line: 2659, column: 20, scope: !7020)
!7030 = !DILocation(line: 2659, column: 27, scope: !7020)
!7031 = !DILocation(line: 2659, column: 71, scope: !7020)
!7032 = !DILocation(line: 2659, column: 62, scope: !7020)
!7033 = !DILocation(line: 2659, column: 84, scope: !7020)
!7034 = distinct !DISubprogram(name: "forward_unchecked", linkageName: "_ZN47_$LT$u64$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17h3fa6b670e2a56253E", scope: !7036, file: !7035, line: 204, type: !7038, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7040)
!7035 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "bd5e2cda5ef8f5ce87ca9ba8425e7413")
!7036 = !DINamespace(name: "{impl#43}", scope: !7037)
!7037 = !DINamespace(name: "range", scope: !240)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{!765, !765, !9}
!7040 = !{!7041, !7042}
!7041 = !DILocalVariable(name: "start", arg: 1, scope: !7034, file: !7035, line: 204, type: !765)
!7042 = !DILocalVariable(name: "n", arg: 2, scope: !7034, file: !7035, line: 204, type: !9)
!7043 = !DILocation(line: 204, column: 37, scope: !7034)
!7044 = !DILocation(line: 204, column: 50, scope: !7034)
!7045 = !DILocation(line: 206, column: 42, scope: !7034)
!7046 = !DILocalVariable(name: "self", arg: 1, scope: !7047, file: !1495, line: 705, type: !765)
!7047 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add17h68ae21b5a98219c3E", scope: !7048, file: !1495, line: 705, type: !7049, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7051)
!7048 = !DINamespace(name: "{impl#9}", scope: !225)
!7049 = !DISubroutineType(types: !7050)
!7050 = !{!765, !765, !765, !823}
!7051 = !{!7046, !7052}
!7052 = !DILocalVariable(name: "rhs", arg: 2, scope: !7047, file: !1495, line: 705, type: !765)
!7053 = !DILocation(line: 705, column: 43, scope: !7047, inlinedAt: !7054)
!7054 = distinct !DILocation(line: 206, column: 28, scope: !7034)
!7055 = !DILocation(line: 705, column: 49, scope: !7047, inlinedAt: !7054)
!7056 = !DILocation(line: 77, column: 35, scope: !7057, inlinedAt: !7054)
!7057 = !DILexicalBlockFile(scope: !7047, file: !7058, discriminator: 0)
!7058 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ub_checks.rs", directory: "", checksumkind: CSK_MD5, checksum: "41b3943b2b7dc8c218ee37ead81b317d")
!7059 = !DILocation(line: 78, column: 17, scope: !7057, inlinedAt: !7054)
!7060 = !DILocation(line: 717, column: 17, scope: !7047, inlinedAt: !7054)
!7061 = !DILocation(line: 207, column: 10, scope: !7034)
!7062 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h80c722eaa0e19ab2E", scope: !7063, file: !7007, line: 2909, type: !7064, scopeLine: 2909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !7066)
!7063 = !DINamespace(name: "{impl#28}", scope: !52)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{!1079, !281, !50}
!7066 = !{!7067, !7068}
!7067 = !DILocalVariable(name: "self", arg: 1, scope: !7062, file: !7007, line: 2909, type: !281)
!7068 = !DILocalVariable(name: "f", arg: 2, scope: !7062, file: !7007, line: 2909, type: !50)
!7069 = !DILocation(line: 2909, column: 12, scope: !7062)
!7070 = !DILocation(line: 2909, column: 19, scope: !7062)
!7071 = !DILocation(line: 2910, column: 11, scope: !7062)
!7072 = !DILocation(line: 2910, column: 37, scope: !7062)
!7073 = !DILocation(line: 2910, column: 24, scope: !7062)
!7074 = !DILocation(line: 2910, column: 45, scope: !7062)
!7075 = !DILocation(line: 2911, column: 6, scope: !7062)
!7076 = distinct !DISubprogram(name: "into_searcher<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", linkageName: "_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h667e354051da0bf2E", scope: !7078, file: !7077, line: 737, type: !7079, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7098, retainedNodes: !7100)
!7077 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "a6e38dd27356b29bea094a12de70a44b")
!7078 = !DINamespace(name: "{impl#29}", scope: !3440)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!7081, !7087, !659}
!7081 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharPredicateSearcher<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", scope: !3440, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !7082, templateParams: !7098, identifier: "da3d59b90bd28dd728d3345a0ba710a4")
!7082 = !{!7083}
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7081, file: !2, baseType: !7084, size: 160, align: 32, flags: DIFlagPrivate)
!7084 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqSearcher<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", scope: !3440, file: !2, size: 160, align: 32, flags: DIFlagPrivate, elements: !7085, templateParams: !7096, identifier: "6b818ebedd97d5d56eefbfeda47af9c4")
!7085 = !{!7086, !7090, !7091}
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "char_eq", scope: !7084, file: !2, baseType: !7087, align: 8, offset: 160, flags: DIFlagPrivate)
!7087 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !7088, file: !2, align: 8, elements: !14, identifier: "e0e57506cc2cda40635f51b7b4c6348")
!7088 = !DINamespace(name: "fmt", scope: !7089)
!7089 = !DINamespace(name: "{impl#0}", scope: !451)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !7084, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPrivate)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "char_indices", scope: !7084, file: !2, baseType: !7092, size: 96, align: 32, offset: 64, flags: DIFlagPrivate)
!7092 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharIndices", scope: !521, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !7093, templateParams: !14, identifier: "f621b490c1f0edaa36da3a23723a4d64")
!7093 = !{!7094, !7095}
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "front_offset", scope: !7092, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagProtected)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !7092, file: !2, baseType: !781, size: 64, align: 32, flags: DIFlagProtected)
!7096 = !{!7097}
!7097 = !DITemplateTypeParameter(name: "C", type: !7087)
!7098 = !{!7099}
!7099 = !DITemplateTypeParameter(name: "F", type: !7087)
!7100 = !{!7101, !7102}
!7101 = !DILocalVariable(name: "self", arg: 1, scope: !7076, file: !7077, line: 737, type: !7087)
!7102 = !DILocalVariable(name: "haystack", arg: 2, scope: !7076, file: !7077, line: 737, type: !659)
!7103 = !DILocation(line: 737, column: 30, scope: !7076)
!7104 = !DILocation(line: 737, column: 36, scope: !7076)
!7105 = !DILocation(line: 738, column: 35, scope: !7076)
!7106 = !DILocation(line: 738, column: 13, scope: !7076)
!7107 = !DILocation(line: 739, column: 10, scope: !7076)
!7108 = distinct !DISubprogram(name: "cold_path", linkageName: "_ZN4core10intrinsics9cold_path17hf80992cbedfa8b2cE", scope: !7110, file: !7109, line: 417, type: !7111, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!7109 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "5088527a679dbab229c7a43df7f388f7")
!7110 = !DINamespace(name: "intrinsics", scope: !31)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{null}
!7113 = !DILocation(line: 417, column: 28, scope: !7108)
!7114 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h60e79f921649fd3dE", scope: !7116, file: !7115, line: 1865, type: !7119, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7121)
!7115 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "2ebed4d982e1934df4c432f70a016f34")
!7116 = !DINamespace(name: "{impl#22}", scope: !7117)
!7117 = !DINamespace(name: "impls", scope: !7118)
!7118 = !DINamespace(name: "cmp", scope: !31)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!706, !12, !12}
!7121 = !{!7122, !7123}
!7122 = !DILocalVariable(name: "self", arg: 1, scope: !7114, file: !7115, line: 1865, type: !12)
!7123 = !DILocalVariable(name: "other", arg: 2, scope: !7114, file: !7115, line: 1865, type: !12)
!7124 = !DILocation(line: 1865, column: 23, scope: !7114)
!7125 = !DILocation(line: 1865, column: 30, scope: !7114)
!7126 = !DILocation(line: 1865, column: 54, scope: !7114)
!7127 = !DILocation(line: 1865, column: 63, scope: !7114)
!7128 = !DILocation(line: 1865, column: 71, scope: !7114)
!7129 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$bool$GT$2eq17h30b4d001eff5ac0bE", scope: !7130, file: !7115, line: 1865, type: !7131, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7133)
!7130 = !DINamespace(name: "{impl#19}", scope: !7117)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{!706, !2918, !2918}
!7133 = !{!7134, !7135}
!7134 = !DILocalVariable(name: "self", arg: 1, scope: !7129, file: !7115, line: 1865, type: !2918)
!7135 = !DILocalVariable(name: "other", arg: 2, scope: !7129, file: !7115, line: 1865, type: !2918)
!7136 = !DILocation(line: 1865, column: 23, scope: !7129)
!7137 = !DILocation(line: 1865, column: 30, scope: !7129)
!7138 = !DILocation(line: 1865, column: 54, scope: !7129)
!7139 = !DILocation(line: 1865, column: 63, scope: !7129)
!7140 = !DILocation(line: 1865, column: 71, scope: !7129)
!7141 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h98a84bbf1f32ec72E", scope: !7142, file: !7115, line: 1876, type: !7143, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7145)
!7142 = !DINamespace(name: "{impl#0}", scope: !7117)
!7143 = !DISubroutineType(types: !7144)
!7144 = !{!706, !1099, !1099}
!7145 = !{!7146, !7147}
!7146 = !DILocalVariable(name: "self", arg: 1, scope: !7141, file: !7115, line: 1876, type: !1099)
!7147 = !DILocalVariable(name: "_other", arg: 2, scope: !7141, file: !7115, line: 1876, type: !1099)
!7148 = !DILocation(line: 1876, column: 15, scope: !7141)
!7149 = !DILocation(line: 1876, column: 22, scope: !7141)
!7150 = !DILocation(line: 1878, column: 10, scope: !7141)
!7151 = distinct !DISubprogram(name: "eq<bool, bool>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h0c76c58be8d3cc8aE", scope: !7152, file: !7115, line: 2089, type: !7153, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7159, retainedNodes: !7156)
!7152 = !DINamespace(name: "{impl#9}", scope: !7117)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!706, !7155, !7155}
!7155 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&bool", baseType: !2918, size: 32, align: 32, dwarfAddressSpace: 0)
!7156 = !{!7157, !7158}
!7157 = !DILocalVariable(name: "self", arg: 1, scope: !7151, file: !7115, line: 2089, type: !7155)
!7158 = !DILocalVariable(name: "other", arg: 2, scope: !7151, file: !7115, line: 2089, type: !7155)
!7159 = !{!7160, !7161}
!7160 = !DITemplateTypeParameter(name: "A", type: !706)
!7161 = !DITemplateTypeParameter(name: "B", type: !706)
!7162 = !DILocation(line: 2089, column: 15, scope: !7151)
!7163 = !DILocation(line: 2089, column: 22, scope: !7151)
!7164 = !DILocation(line: 2090, column: 27, scope: !7151)
!7165 = !DILocation(line: 2090, column: 34, scope: !7151)
!7166 = !DILocation(line: 2090, column: 13, scope: !7151)
!7167 = !DILocation(line: 2091, column: 10, scope: !7151)
!7168 = distinct !DISubprogram(name: "eq<(), ()>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h4c994e93616ba6c2E", scope: !7152, file: !7115, line: 2089, type: !7169, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7175, retainedNodes: !7172)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!706, !7171, !7171}
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&()", baseType: !1099, size: 32, align: 32, dwarfAddressSpace: 0)
!7172 = !{!7173, !7174}
!7173 = !DILocalVariable(name: "self", arg: 1, scope: !7168, file: !7115, line: 2089, type: !7171)
!7174 = !DILocalVariable(name: "other", arg: 2, scope: !7168, file: !7115, line: 2089, type: !7171)
!7175 = !{!7176, !434}
!7176 = !DITemplateTypeParameter(name: "A", type: !7)
!7177 = !DILocation(line: 2089, column: 15, scope: !7168)
!7178 = !DILocation(line: 2089, column: 22, scope: !7168)
!7179 = !DILocation(line: 2090, column: 27, scope: !7168)
!7180 = !DILocation(line: 2090, column: 34, scope: !7168)
!7181 = !DILocation(line: 2090, column: 13, scope: !7168)
!7182 = !DILocation(line: 2091, column: 10, scope: !7168)
!7183 = distinct !DISubprogram(name: "eq<&mut rustc_demangle::v0::ParseError, &mut rustc_demangle::v0::ParseError>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17hc5171afe0a09d45aE", scope: !7152, file: !7115, line: 2089, type: !7184, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7192, retainedNodes: !7189)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!706, !7186, !7186}
!7186 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&&mut rustc_demangle::v0::ParseError", baseType: !7187, size: 32, align: 32, dwarfAddressSpace: 0)
!7187 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&mut rustc_demangle::v0::ParseError", baseType: !7188, size: 32, align: 32, dwarfAddressSpace: 0)
!7188 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::v0::ParseError", baseType: !87, size: 32, align: 32, dwarfAddressSpace: 0)
!7189 = !{!7190, !7191}
!7190 = !DILocalVariable(name: "self", arg: 1, scope: !7183, file: !7115, line: 2089, type: !7186)
!7191 = !DILocalVariable(name: "other", arg: 2, scope: !7183, file: !7115, line: 2089, type: !7186)
!7192 = !{!7193, !7194}
!7193 = !DITemplateTypeParameter(name: "A", type: !7188)
!7194 = !DITemplateTypeParameter(name: "B", type: !7188)
!7195 = !DILocation(line: 2089, column: 15, scope: !7183)
!7196 = !DILocation(line: 2089, column: 22, scope: !7183)
!7197 = !DILocation(line: 2090, column: 27, scope: !7183)
!7198 = !DILocation(line: 2090, column: 34, scope: !7183)
!7199 = !DILocation(line: 2090, column: 13, scope: !7183)
!7200 = !DILocation(line: 2091, column: 10, scope: !7183)
!7201 = distinct !DISubprogram(name: "eq<rustc_demangle::v0::ParseError, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core3cmp5impls85_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$mut$u20$B$GT$$u20$for$u20$$RF$mut$u20$A$GT$2eq17h1fb842233c166a00E", scope: !7202, file: !7115, line: 2164, type: !7203, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7208, retainedNodes: !7205)
!7202 = !DINamespace(name: "{impl#13}", scope: !7117)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{!706, !7187, !7187}
!7205 = !{!7206, !7207}
!7206 = !DILocalVariable(name: "self", arg: 1, scope: !7201, file: !7115, line: 2164, type: !7187)
!7207 = !DILocalVariable(name: "other", arg: 2, scope: !7201, file: !7115, line: 2164, type: !7187)
!7208 = !{!7209, !7210}
!7209 = !DITemplateTypeParameter(name: "A", type: !87)
!7210 = !DITemplateTypeParameter(name: "B", type: !87)
!7211 = !DILocation(line: 2164, column: 15, scope: !7201)
!7212 = !DILocation(line: 2164, column: 22, scope: !7201)
!7213 = !DILocation(line: 2165, column: 27, scope: !7201)
!7214 = !DILocation(line: 2165, column: 34, scope: !7201)
!7215 = !DILocation(line: 2165, column: 13, scope: !7201)
!7216 = !DILocation(line: 2166, column: 10, scope: !7201)
!7217 = distinct !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$16new_v1_formatted17h59f0ab9a669843b2E", scope: !7219, file: !7218, line: 231, type: !7273, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !7275, retainedNodes: !7276)
!7218 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "03cba3c9b7eca44212bc16adf1d5b1bc")
!7219 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !52, file: !2, size: 192, align: 32, flags: DIFlagPublic, elements: !7220, templateParams: !14, identifier: "d691e62b2ee4847c2af32873f04bd10")
!7220 = !{!7221, !7227, !7267}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !7219, file: !2, baseType: !7222, size: 64, align: 32, flags: DIFlagPrivate)
!7222 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 64, align: 32, elements: !7223, templateParams: !14, identifier: "4e66b00a376d6af5b8765440fb2839f")
!7223 = !{!7224, !7226}
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7222, file: !2, baseType: !7225, size: 32, align: 32)
!7225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32, align: 32, dwarfAddressSpace: 0)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7222, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !7219, file: !2, baseType: !7228, size: 64, align: 32, offset: 128, flags: DIFlagPrivate)
!7228 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !244, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7229, templateParams: !14, identifier: "a638667a460b22fe10961f9a2f3202aa")
!7229 = !{!7230}
!7230 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7228, file: !2, size: 64, align: 32, elements: !7231, templateParams: !14, identifier: "29af53ccc7f21f4d5671e352d673889a", discriminator: !7266)
!7231 = !{!7232, !7262}
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7230, file: !2, baseType: !7233, size: 64, align: 32, extraData: i32 0)
!7233 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7228, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !7234, identifier: "11ce4f4d10f67887bbe6bf59a521c479")
!7234 = !{!7235}
!7235 = !DITemplateTypeParameter(name: "T", type: !7236)
!7236 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !2, size: 64, align: 32, elements: !7237, templateParams: !14, identifier: "b0485535d7020130e949c24f3fc2aa00")
!7237 = !{!7238, !7261}
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7236, file: !2, baseType: !7239, size: 32, align: 32)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 32, align: 32, dwarfAddressSpace: 0)
!7240 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !1059, file: !2, size: 192, align: 32, flags: DIFlagPublic, elements: !7241, templateParams: !14, identifier: "8cb06f9d78dc629c8f52fc3b5544996c")
!7241 = !{!7242, !7243, !7244, !7260}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !7240, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagPublic)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7240, file: !2, baseType: !48, size: 32, align: 32, offset: 160, flags: DIFlagPublic)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !7240, file: !2, baseType: !7245, size: 64, align: 32, flags: DIFlagPublic)
!7245 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !1059, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7246, templateParams: !14, identifier: "2d7772037f5c744e87d41105441784d5")
!7246 = !{!7247}
!7247 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7245, file: !2, size: 64, align: 32, elements: !7248, templateParams: !14, identifier: "af14687975a61e1ae6bbcdaeb79a8a2", discriminator: !7259)
!7248 = !{!7249, !7253, !7257}
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !7247, file: !2, baseType: !7250, size: 64, align: 32, extraData: i16 0)
!7250 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !7245, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7251, templateParams: !14, identifier: "da16c9b5356522ffb015c0e99237342e")
!7251 = !{!7252}
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7250, file: !2, baseType: !59, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !7247, file: !2, baseType: !7254, size: 64, align: 32, extraData: i16 1)
!7254 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !7245, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7255, templateParams: !14, identifier: "8d84b26eccf0f48fe70ea50c79b83fc9")
!7255 = !{!7256}
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7254, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !7247, file: !2, baseType: !7258, size: 64, align: 32, extraData: i16 2)
!7258 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !7245, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, identifier: "e4d910bcc0c2da0048af65cce9b02bdf")
!7259 = !DIDerivedType(tag: DW_TAG_member, scope: !7245, file: !2, baseType: !59, size: 16, align: 16, flags: DIFlagArtificial)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !7240, file: !2, baseType: !7245, size: 64, align: 32, offset: 64, flags: DIFlagPublic)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7236, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7230, file: !2, baseType: !7263, size: 64, align: 32)
!7263 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7228, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7264, templateParams: !7234, identifier: "b6f59188292a44db7736125146b92cb0")
!7264 = !{!7265}
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7263, file: !2, baseType: !7236, size: 64, align: 32, flags: DIFlagPublic)
!7266 = !DIDerivedType(tag: DW_TAG_member, scope: !7228, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7219, file: !2, baseType: !7268, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!7268 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !2, size: 64, align: 32, elements: !7269, templateParams: !14, identifier: "14634098cacc86d372c43019bc81f26f")
!7269 = !{!7270, !7272}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7268, file: !2, baseType: !7271, size: 32, align: 32)
!7271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32, align: 32, dwarfAddressSpace: 0)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7268, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!7273 = !DISubroutineType(types: !7274)
!7274 = !{!7219, !7222, !7268, !7236}
!7275 = !DISubprogram(name: "new_v1_formatted", linkageName: "_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$16new_v1_formatted17h59f0ab9a669843b2E", scope: !7219, file: !7218, line: 231, type: !7273, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!7276 = !{!7277, !7278, !7279}
!7277 = !DILocalVariable(name: "pieces", arg: 1, scope: !7217, file: !7218, line: 232, type: !7222)
!7278 = !DILocalVariable(name: "args", arg: 2, scope: !7217, file: !7218, line: 233, type: !7268)
!7279 = !DILocalVariable(name: "fmt", arg: 3, scope: !7217, file: !7218, line: 234, type: !7236)
!7280 = !DILocation(line: 232, column: 9, scope: !7217)
!7281 = !DILocation(line: 233, column: 9, scope: !7217)
!7282 = !DILocation(line: 234, column: 9, scope: !7217)
!7283 = !DILocation(line: 236, column: 9, scope: !7217)
!7284 = !DILocation(line: 237, column: 6, scope: !7217)
!7285 = distinct !DISubprogram(name: "new_display<&rustc_demangle::DemangleStyle>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17ha32fa88f3dd46c3bE", scope: !1058, file: !7218, line: 110, type: !7286, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7289, declaration: !7288, retainedNodes: !7291)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{!1058, !7024}
!7288 = !DISubprogram(name: "new_display<&rustc_demangle::DemangleStyle>", linkageName: "_ZN4core3fmt2rt8Argument11new_display17ha32fa88f3dd46c3bE", scope: !1058, file: !7218, line: 110, type: !7286, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7289)
!7289 = !{!7290}
!7290 = !DITemplateTypeParameter(name: "T", type: !7025)
!7291 = !{!7292, !7293}
!7292 = !DILocalVariable(name: "x", arg: 1, scope: !7285, file: !7218, line: 110, type: !7024)
!7293 = !DILocalVariable(name: "f", scope: !7294, file: !7218, line: 91, type: !7295, align: 32)
!7294 = distinct !DILexicalBlock(scope: !7285, file: !7218, line: 91, column: 21)
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&rustc_demangle::DemangleStyle, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !7022, size: 32, align: 32, dwarfAddressSpace: 0)
!7296 = !DILocation(line: 110, column: 42, scope: !7285)
!7297 = !DILocation(line: 69, column: 24, scope: !7285)
!7298 = !DILocation(line: 69, column: 52, scope: !7285)
!7299 = !DILocation(line: 111, column: 29, scope: !7285)
!7300 = !DILocation(line: 91, column: 25, scope: !7294)
!7301 = !DILocation(line: 68, column: 17, scope: !7285)
!7302 = !DILocation(line: 65, column: 9, scope: !7285)
!7303 = !DILocation(line: 112, column: 6, scope: !7285)
!7304 = distinct !DISubprogram(name: "new_debug<&str>", linkageName: "_ZN4core3fmt2rt8Argument9new_debug17h21a8bd79f2bc8b2dE", scope: !1058, file: !7218, line: 114, type: !7305, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !840, declaration: !7307, retainedNodes: !7308)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{!1058, !1051}
!7307 = !DISubprogram(name: "new_debug<&str>", linkageName: "_ZN4core3fmt2rt8Argument9new_debug17h21a8bd79f2bc8b2dE", scope: !1058, file: !7218, line: 114, type: !7305, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !840)
!7308 = !{!7309, !7310}
!7309 = !DILocalVariable(name: "x", arg: 1, scope: !7304, file: !7218, line: 114, type: !1051)
!7310 = !DILocalVariable(name: "f", scope: !7311, file: !7218, line: 91, type: !7312, align: 32)
!7311 = distinct !DILexicalBlock(scope: !7304, file: !7218, line: 91, column: 21)
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&str, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !7313, size: 32, align: 32, dwarfAddressSpace: 0)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{!1079, !1051, !50}
!7315 = !DILocation(line: 114, column: 38, scope: !7304)
!7316 = !DILocation(line: 69, column: 24, scope: !7304)
!7317 = !DILocation(line: 69, column: 52, scope: !7304)
!7318 = !DILocation(line: 115, column: 29, scope: !7304)
!7319 = !DILocation(line: 91, column: 25, scope: !7311)
!7320 = !DILocation(line: 68, column: 17, scope: !7304)
!7321 = !DILocation(line: 65, column: 9, scope: !7304)
!7322 = !DILocation(line: 116, column: 6, scope: !7304)
!7323 = distinct !DISubprogram(name: "new_debug<&mut [u8]>", linkageName: "_ZN4core3fmt2rt8Argument9new_debug17h6d2f5f061bbf7995E", scope: !1058, file: !7218, line: 114, type: !7324, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7327, declaration: !7326, retainedNodes: !7329)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!1058, !1049}
!7326 = !DISubprogram(name: "new_debug<&mut [u8]>", linkageName: "_ZN4core3fmt2rt8Argument9new_debug17h6d2f5f061bbf7995E", scope: !1058, file: !7218, line: 114, type: !7324, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7327)
!7327 = !{!7328}
!7328 = !DITemplateTypeParameter(name: "T", type: !1013)
!7329 = !{!7330, !7331}
!7330 = !DILocalVariable(name: "x", arg: 1, scope: !7323, file: !7218, line: 114, type: !1049)
!7331 = !DILocalVariable(name: "f", scope: !7332, file: !7218, line: 91, type: !7333, align: 32)
!7332 = distinct !DILexicalBlock(scope: !7323, file: !7218, line: 91, column: 21)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&&mut [u8], &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !7334, size: 32, align: 32, dwarfAddressSpace: 0)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{!1079, !1049, !50}
!7336 = !DILocation(line: 114, column: 38, scope: !7323)
!7337 = !DILocation(line: 69, column: 24, scope: !7323)
!7338 = !DILocation(line: 69, column: 52, scope: !7323)
!7339 = !DILocation(line: 115, column: 29, scope: !7323)
!7340 = !DILocation(line: 91, column: 25, scope: !7332)
!7341 = !DILocation(line: 68, column: 17, scope: !7323)
!7342 = !DILocation(line: 65, column: 9, scope: !7323)
!7343 = !DILocation(line: 116, column: 6, scope: !7323)
!7344 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h2ef17d5f0cd24fb3E", scope: !7346, file: !7345, line: 85, type: !7348, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7350)
!7345 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "14f1acdd980d957a36bf4243cc704071")
!7346 = !DINamespace(name: "{impl#58}", scope: !7347)
!7347 = !DINamespace(name: "num", scope: !52)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!1079, !12, !50}
!7350 = !{!7351, !7352}
!7351 = !DILocalVariable(name: "self", arg: 1, scope: !7344, file: !7345, line: 85, type: !12)
!7352 = !DILocalVariable(name: "f", arg: 2, scope: !7344, file: !7345, line: 85, type: !50)
!7353 = !DILocation(line: 85, column: 24, scope: !7344)
!7354 = !DILocation(line: 85, column: 31, scope: !7344)
!7355 = !DILocation(line: 86, column: 26, scope: !7344)
!7356 = !DILocation(line: 86, column: 24, scope: !7344)
!7357 = !DILocation(line: 88, column: 33, scope: !7344)
!7358 = !DILocation(line: 88, column: 31, scope: !7344)
!7359 = !DILocation(line: 87, column: 25, scope: !7344)
!7360 = !DILocation(line: 91, column: 25, scope: !7344)
!7361 = !DILocation(line: 89, column: 25, scope: !7344)
!7362 = !DILocation(line: 93, column: 18, scope: !7344)
!7363 = distinct !DISubprogram(name: "write_char<rustc_demangle::SizeLimitedFmtAdapter<&mut core::fmt::Formatter>>", linkageName: "_ZN4core3fmt5Write10write_char17h662c5676ef1cb115E", scope: !7364, file: !7007, line: 181, type: !7365, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7371, retainedNodes: !7368)
!7364 = !DINamespace(name: "Write", scope: !52)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{!1079, !7367, !252}
!7367 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::SizeLimitedFmtAdapter<&mut core::fmt::Formatter>", baseType: !25, size: 32, align: 32, dwarfAddressSpace: 0)
!7368 = !{!7369, !7370}
!7369 = !DILocalVariable(name: "self", arg: 1, scope: !7363, file: !7007, line: 181, type: !7367)
!7370 = !DILocalVariable(name: "c", arg: 2, scope: !7363, file: !7007, line: 181, type: !252)
!7371 = !{!7372}
!7372 = !DITemplateTypeParameter(name: "Self", type: !25)
!7373 = !DILocation(line: 181, column: 19, scope: !7363)
!7374 = !DILocation(line: 181, column: 30, scope: !7363)
!7375 = !DILocation(line: 182, column: 43, scope: !7363)
!7376 = !DILocation(line: 182, column: 26, scope: !7363)
!7377 = !DILocation(line: 182, column: 14, scope: !7363)
!7378 = !DILocation(line: 183, column: 6, scope: !7363)
!7379 = distinct !DISubprogram(name: "write_fmt<rustc_demangle::SizeLimitedFmtAdapter<&mut core::fmt::Formatter>>", linkageName: "_ZN4core3fmt5Write9write_fmt17h61407c8efb4119f8E", scope: !7364, file: !7007, line: 210, type: !7380, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7371, retainedNodes: !7382)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{!1079, !7367, !7219}
!7382 = !{!7383, !7384}
!7383 = !DILocalVariable(name: "self", arg: 1, scope: !7379, file: !7007, line: 210, type: !7367)
!7384 = !DILocalVariable(name: "args", arg: 2, scope: !7379, file: !7007, line: 210, type: !7219)
!7385 = !DILocation(line: 210, column: 18, scope: !7379)
!7386 = !DILocation(line: 210, column: 29, scope: !7379)
!7387 = !DILocation(line: 239, column: 9, scope: !7379)
!7388 = !DILocation(line: 239, column: 14, scope: !7379)
!7389 = !DILocation(line: 240, column: 6, scope: !7379)
!7390 = distinct !DISubprogram(name: "entries<&u8, core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17hf4e064138c87dbd7E", scope: !7392, file: !7391, line: 782, type: !7401, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7405, declaration: !7404, retainedNodes: !7407)
!7391 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/builders.rs", directory: "", checksumkind: CSK_MD5, checksum: "a1f37dc2e689f27cfd21ccda771e88b1")
!7392 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugList", scope: !7393, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7394, templateParams: !14, identifier: "c4e495213e90180075346070abe860b5")
!7393 = !DINamespace(name: "builders", scope: !52)
!7394 = !{!7395}
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !7392, file: !2, baseType: !7396, size: 64, align: 32, flags: DIFlagPrivate)
!7396 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugInner", scope: !7393, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !7397, templateParams: !14, identifier: "df0e786b58d2be195ec31448ca6f2709")
!7397 = !{!7398, !7399, !7400}
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !7396, file: !2, baseType: !50, size: 32, align: 32, flags: DIFlagPrivate)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !7396, file: !2, baseType: !1079, size: 8, align: 8, offset: 32, flags: DIFlagPrivate)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !7396, file: !2, baseType: !706, size: 8, align: 8, offset: 40, flags: DIFlagPrivate)
!7401 = !DISubroutineType(types: !7402)
!7402 = !{!7403, !7403, !396}
!7403 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::builders::DebugList", baseType: !7392, size: 32, align: 32, dwarfAddressSpace: 0)
!7404 = !DISubprogram(name: "entries<&u8, core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3fmt8builders9DebugList7entries17hf4e064138c87dbd7E", scope: !7392, file: !7391, line: 782, type: !7401, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7405)
!7405 = !{!7406, !412}
!7406 = !DITemplateTypeParameter(name: "D", type: !12)
!7407 = !{!7408, !7409, !7410, !7412}
!7408 = !DILocalVariable(name: "self", arg: 1, scope: !7390, file: !7391, line: 782, type: !7403)
!7409 = !DILocalVariable(name: "entries", arg: 2, scope: !7390, file: !7391, line: 782, type: !396)
!7410 = !DILocalVariable(name: "iter", scope: !7411, file: !7391, line: 787, type: !396, align: 32)
!7411 = distinct !DILexicalBlock(scope: !7390, file: !7391, line: 787, column: 9)
!7412 = !DILocalVariable(name: "entry", scope: !7413, file: !7391, line: 787, type: !12, align: 32)
!7413 = distinct !DILexicalBlock(scope: !7411, file: !7391, line: 787, column: 30)
!7414 = !DILocation(line: 782, column: 26, scope: !7390)
!7415 = !DILocation(line: 782, column: 37, scope: !7390)
!7416 = !DILocation(line: 787, column: 22, scope: !7411)
!7417 = !DILocation(line: 787, column: 13, scope: !7413)
!7418 = !DILocation(line: 787, column: 22, scope: !7390)
!7419 = !DILocation(line: 787, column: 9, scope: !7411)
!7420 = !DILocation(line: 787, column: 13, scope: !7411)
!7421 = !DILocation(line: 788, column: 18, scope: !7413)
!7422 = !DILocation(line: 789, column: 9, scope: !7411)
!7423 = !DILocation(line: 791, column: 6, scope: !7390)
!7424 = distinct !DISubprogram(name: "as_statically_known_str", linkageName: "_ZN4core3fmt9Arguments23as_statically_known_str17hc982a5d21bdfbd93E", scope: !7219, file: !7007, line: 717, type: !7425, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !7428, retainedNodes: !7429)
!7425 = !DISubroutineType(types: !7426)
!7426 = !{!1256, !7427}
!7427 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !7219, size: 32, align: 32, dwarfAddressSpace: 0)
!7428 = !DISubprogram(name: "as_statically_known_str", linkageName: "_ZN4core3fmt9Arguments23as_statically_known_str17hc982a5d21bdfbd93E", scope: !7219, file: !7007, line: 717, type: !7425, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!7429 = !{!7430, !7431}
!7430 = !DILocalVariable(name: "self", arg: 1, scope: !7424, file: !7007, line: 717, type: !7427)
!7431 = !DILocalVariable(name: "s", scope: !7432, file: !7007, line: 718, type: !1256, align: 32)
!7432 = distinct !DILexicalBlock(scope: !7424, file: !7007, line: 718, column: 9)
!7433 = !DILocation(line: 717, column: 36, scope: !7424)
!7434 = !DILocation(line: 718, column: 13, scope: !7432)
!7435 = !DILocation(line: 718, column: 22, scope: !7424)
!7436 = !DILocation(line: 719, column: 56, scope: !7432)
!7437 = !DILocation(line: 719, column: 12, scope: !7432)
!7438 = !DILocation(line: 719, column: 80, scope: !7432)
!7439 = !DILocation(line: 719, column: 9, scope: !7432)
!7440 = !DILocation(line: 719, column: 69, scope: !7432)
!7441 = !DILocation(line: 720, column: 6, scope: !7424)
!7442 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17hf7edd833e326cd3fE", scope: !7219, file: !7007, line: 704, type: !7425, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !7443, retainedNodes: !7444)
!7443 = !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17hf7edd833e326cd3fE", scope: !7219, file: !7007, line: 704, type: !7425, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!7444 = !{!7445, !7446}
!7445 = !DILocalVariable(name: "self", arg: 1, scope: !7442, file: !7007, line: 704, type: !7427)
!7446 = !DILocalVariable(name: "s", scope: !7447, file: !7007, line: 707, type: !1051, align: 32)
!7447 = distinct !DILexicalBlock(scope: !7442, file: !7007, line: 707, column: 13)
!7448 = !DILocation(line: 704, column: 25, scope: !7442)
!7449 = !DILocation(line: 705, column: 16, scope: !7442)
!7450 = !DILocation(line: 705, column: 29, scope: !7442)
!7451 = !DILocation(line: 705, column: 15, scope: !7442)
!7452 = !DILocation(line: 706, column: 14, scope: !7442)
!7453 = !DILocation(line: 706, column: 18, scope: !7442)
!7454 = !DILocation(line: 707, column: 14, scope: !7442)
!7455 = !DILocation(line: 706, column: 25, scope: !7442)
!7456 = !DILocation(line: 706, column: 32, scope: !7442)
!7457 = !DILocation(line: 708, column: 18, scope: !7442)
!7458 = !DILocation(line: 710, column: 6, scope: !7442)
!7459 = !DILocation(line: 707, column: 19, scope: !7442)
!7460 = !DILocation(line: 707, column: 15, scope: !7442)
!7461 = !DILocation(line: 707, column: 15, scope: !7447)
!7462 = !DILocation(line: 707, column: 31, scope: !7447)
!7463 = !DILocation(line: 707, column: 26, scope: !7447)
!7464 = !DILocation(line: 707, column: 32, scope: !7442)
!7465 = distinct !DISubprogram(name: "replace<core::option::Option<core::option::Option<u8>>>", linkageName: "_ZN4core3mem7replace17h4861124eed80d67bE", scope: !7467, file: !7466, line: 877, type: !7468, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7476, retainedNodes: !7471)
!7466 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "335eb38d3ee0638ae9d68820d69094ad")
!7467 = !DINamespace(name: "mem", scope: !31)
!7468 = !DISubroutineType(types: !7469)
!7469 = !{!526, !7470, !526}
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<core::option::Option<u8>>", baseType: !526, size: 32, align: 32, dwarfAddressSpace: 0)
!7471 = !{!7472, !7473, !7474}
!7472 = !DILocalVariable(name: "dest", arg: 1, scope: !7465, file: !7466, line: 877, type: !7470)
!7473 = !DILocalVariable(name: "src", arg: 2, scope: !7465, file: !7466, line: 877, type: !526)
!7474 = !DILocalVariable(name: "result", scope: !7475, file: !7466, line: 891, type: !526, align: 8)
!7475 = distinct !DILexicalBlock(scope: !7465, file: !7466, line: 891, column: 9)
!7476 = !{!7477}
!7477 = !DITemplateTypeParameter(name: "T", type: !526)
!7478 = !DILocation(line: 877, column: 25, scope: !7465)
!7479 = !DILocation(line: 877, column: 39, scope: !7465)
!7480 = !DILocation(line: 891, column: 22, scope: !7465)
!7481 = !DILocation(line: 891, column: 13, scope: !7475)
!7482 = !DILocation(line: 892, column: 9, scope: !7475)
!7483 = !DILocation(line: 895, column: 2, scope: !7465)
!7484 = distinct !DISubprogram(name: "replace<core::option::Option<&mut core::fmt::Formatter>>", linkageName: "_ZN4core3mem7replace17h527ec1d7ad9e7f53E", scope: !7467, file: !7466, line: 877, type: !7485, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7493, retainedNodes: !7488)
!7485 = !DISubroutineType(types: !7486)
!7486 = !{!2307, !7487, !2307}
!7487 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<&mut core::fmt::Formatter>", baseType: !2307, size: 32, align: 32, dwarfAddressSpace: 0)
!7488 = !{!7489, !7490, !7491}
!7489 = !DILocalVariable(name: "dest", arg: 1, scope: !7484, file: !7466, line: 877, type: !7487)
!7490 = !DILocalVariable(name: "src", arg: 2, scope: !7484, file: !7466, line: 877, type: !2307)
!7491 = !DILocalVariable(name: "result", scope: !7492, file: !7466, line: 891, type: !2307, align: 32)
!7492 = distinct !DILexicalBlock(scope: !7484, file: !7466, line: 891, column: 9)
!7493 = !{!7494}
!7494 = !DITemplateTypeParameter(name: "T", type: !2307)
!7495 = !DILocation(line: 877, column: 25, scope: !7484)
!7496 = !DILocation(line: 877, column: 39, scope: !7484)
!7497 = !DILocation(line: 891, column: 22, scope: !7484)
!7498 = !DILocation(line: 891, column: 13, scope: !7492)
!7499 = !DILocation(line: 892, column: 9, scope: !7492)
!7500 = !DILocation(line: 895, column: 2, scope: !7484)
!7501 = distinct !DISubprogram(name: "replace<core::option::Option<char>>", linkageName: "_ZN4core3mem7replace17he084a17bb7843eaeE", scope: !7467, file: !7466, line: 877, type: !7502, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7510, retainedNodes: !7505)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{!243, !7504, !243}
!7504 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<char>", baseType: !243, size: 32, align: 32, dwarfAddressSpace: 0)
!7505 = !{!7506, !7507, !7508}
!7506 = !DILocalVariable(name: "dest", arg: 1, scope: !7501, file: !7466, line: 877, type: !7504)
!7507 = !DILocalVariable(name: "src", arg: 2, scope: !7501, file: !7466, line: 877, type: !243)
!7508 = !DILocalVariable(name: "result", scope: !7509, file: !7466, line: 891, type: !243, align: 32)
!7509 = distinct !DILexicalBlock(scope: !7501, file: !7466, line: 891, column: 9)
!7510 = !{!2260}
!7511 = !DILocation(line: 877, column: 25, scope: !7501)
!7512 = !DILocation(line: 877, column: 39, scope: !7501)
!7513 = !DILocation(line: 891, column: 22, scope: !7501)
!7514 = !DILocation(line: 891, column: 13, scope: !7509)
!7515 = !DILocation(line: 892, column: 9, scope: !7509)
!7516 = !DILocation(line: 895, column: 2, scope: !7501)
!7517 = distinct !DISubprogram(name: "replace<core::result::Result<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>>", linkageName: "_ZN4core3mem7replace17hed4e539074d1fd88E", scope: !7467, file: !7466, line: 877, type: !7518, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7526, retainedNodes: !7521)
!7518 = !DISubroutineType(types: !7519)
!7519 = !{!2123, !7520, !2123}
!7520 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::result::Result<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", baseType: !2123, size: 32, align: 32, dwarfAddressSpace: 0)
!7521 = !{!7522, !7523, !7524}
!7522 = !DILocalVariable(name: "dest", arg: 1, scope: !7517, file: !7466, line: 877, type: !7520)
!7523 = !DILocalVariable(name: "src", arg: 2, scope: !7517, file: !7466, line: 877, type: !2123)
!7524 = !DILocalVariable(name: "result", scope: !7525, file: !7466, line: 891, type: !2123, align: 32)
!7525 = distinct !DILexicalBlock(scope: !7517, file: !7466, line: 891, column: 9)
!7526 = !{!7527}
!7527 = !DITemplateTypeParameter(name: "T", type: !2123)
!7528 = !DILocation(line: 891, column: 13, scope: !7525)
!7529 = !DILocation(line: 877, column: 25, scope: !7517)
!7530 = !DILocation(line: 877, column: 39, scope: !7517)
!7531 = !DILocation(line: 891, column: 22, scope: !7517)
!7532 = !DILocation(line: 892, column: 9, scope: !7525)
!7533 = !DILocation(line: 895, column: 2, scope: !7517)
!7534 = distinct !DISubprogram(name: "is_utf8_char_boundary", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17h2418698cb1b1e55fE", scope: !7536, file: !7535, line: 1077, type: !7537, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7539)
!7535 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "95e997e21466c8c46503919807d48d3e")
!7536 = !DINamespace(name: "{impl#6}", scope: !225)
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!706, !13}
!7539 = !{!7540}
!7540 = !DILocalVariable(name: "self", arg: 1, scope: !7534, file: !7535, line: 1077, type: !13)
!7541 = !DILocation(line: 1077, column: 47, scope: !7534)
!7542 = !DILocation(line: 1079, column: 9, scope: !7534)
!7543 = !DILocation(line: 1080, column: 6, scope: !7534)
!7544 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_add17ha1f3cf4b9e7994beE", scope: !7545, file: !1495, line: 634, type: !7546, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7548)
!7545 = !DINamespace(name: "{impl#8}", scope: !225)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!808, !48, !48}
!7548 = !{!7549, !7550}
!7549 = !DILocalVariable(name: "self", arg: 1, scope: !7544, file: !1495, line: 634, type: !48)
!7550 = !DILocalVariable(name: "rhs", arg: 2, scope: !7544, file: !1495, line: 634, type: !48)
!7551 = !DILocation(line: 634, column: 34, scope: !7544)
!7552 = !DILocation(line: 634, column: 40, scope: !7544)
!7553 = !DILocation(line: 642, column: 37, scope: !7544)
!7554 = !DILocalVariable(name: "b", arg: 1, scope: !7555, file: !7109, line: 456, type: !706)
!7555 = distinct !DISubprogram(name: "unlikely", linkageName: "_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E", scope: !7110, file: !7109, line: 456, type: !7556, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7558)
!7556 = !DISubroutineType(types: !7557)
!7557 = !{!706, !706}
!7558 = !{!7554}
!7559 = !DILocation(line: 456, column: 23, scope: !7555, inlinedAt: !7560)
!7560 = distinct !DILocation(line: 642, column: 16, scope: !7544)
!7561 = !DILocation(line: 457, column: 8, scope: !7555, inlinedAt: !7560)
!7562 = !DILocation(line: 461, column: 9, scope: !7555, inlinedAt: !7560)
!7563 = !DILocation(line: 457, column: 5, scope: !7555, inlinedAt: !7560)
!7564 = !DILocation(line: 459, column: 9, scope: !7555, inlinedAt: !7560)
!7565 = !DILocation(line: 463, column: 2, scope: !7555, inlinedAt: !7560)
!7566 = !DILocation(line: 642, column: 16, scope: !7544)
!7567 = !DILocation(line: 646, column: 31, scope: !7544)
!7568 = !DILocation(line: 646, column: 17, scope: !7544)
!7569 = !DILocation(line: 642, column: 13, scope: !7544)
!7570 = !DILocation(line: 643, column: 17, scope: !7544)
!7571 = !DILocation(line: 648, column: 10, scope: !7544)
!7572 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_mul17h999bf06362575789E", scope: !7545, file: !1495, line: 1033, type: !7546, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7573)
!7573 = !{!7574, !7575, !7576, !7578}
!7574 = !DILocalVariable(name: "self", arg: 1, scope: !7572, file: !1495, line: 1033, type: !48)
!7575 = !DILocalVariable(name: "rhs", arg: 2, scope: !7572, file: !1495, line: 1033, type: !48)
!7576 = !DILocalVariable(name: "a", scope: !7577, file: !1495, line: 1034, type: !48, align: 32)
!7577 = distinct !DILexicalBlock(scope: !7572, file: !1495, line: 1034, column: 13)
!7578 = !DILocalVariable(name: "b", scope: !7577, file: !1495, line: 1034, type: !706, align: 8)
!7579 = !DILocation(line: 1033, column: 34, scope: !7572)
!7580 = !DILocation(line: 1033, column: 40, scope: !7572)
!7581 = !DILocalVariable(name: "self", arg: 1, scope: !7582, file: !1495, line: 2867, type: !48)
!7582 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$15overflowing_mul17h7b166b274ae87057E", scope: !7545, file: !1495, line: 2867, type: !7583, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7589)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{!7585, !48, !48}
!7585 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u32, bool)", file: !2, size: 64, align: 32, elements: !7586, templateParams: !14, identifier: "f7aed20a11c392ad223c2be0af9cf8f")
!7586 = !{!7587, !7588}
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7585, file: !2, baseType: !48, size: 32, align: 32)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7585, file: !2, baseType: !706, size: 8, align: 8, offset: 32)
!7589 = !{!7581, !7590, !7591, !7593}
!7590 = !DILocalVariable(name: "rhs", arg: 2, scope: !7582, file: !1495, line: 2867, type: !48)
!7591 = !DILocalVariable(name: "a", scope: !7592, file: !1495, line: 2868, type: !48, align: 32)
!7592 = distinct !DILexicalBlock(scope: !7582, file: !1495, line: 2868, column: 13)
!7593 = !DILocalVariable(name: "b", scope: !7592, file: !1495, line: 2868, type: !706, align: 8)
!7594 = !DILocation(line: 2867, column: 38, scope: !7582, inlinedAt: !7595)
!7595 = distinct !DILocation(line: 1034, column: 31, scope: !7572)
!7596 = !DILocation(line: 2867, column: 44, scope: !7582, inlinedAt: !7595)
!7597 = !DILocation(line: 2868, column: 26, scope: !7582, inlinedAt: !7595)
!7598 = !DILocation(line: 2868, column: 18, scope: !7582, inlinedAt: !7595)
!7599 = !DILocation(line: 2868, column: 18, scope: !7592, inlinedAt: !7595)
!7600 = !DILocation(line: 2868, column: 21, scope: !7582, inlinedAt: !7595)
!7601 = !DILocation(line: 2868, column: 21, scope: !7592, inlinedAt: !7595)
!7602 = !DILocation(line: 1034, column: 31, scope: !7572)
!7603 = !DILocation(line: 1034, column: 18, scope: !7572)
!7604 = !DILocation(line: 1034, column: 18, scope: !7577)
!7605 = !DILocation(line: 1034, column: 21, scope: !7572)
!7606 = !DILocation(line: 1034, column: 21, scope: !7577)
!7607 = !DILocation(line: 456, column: 23, scope: !7555, inlinedAt: !7608)
!7608 = distinct !DILocation(line: 1035, column: 16, scope: !7577)
!7609 = !DILocation(line: 457, column: 8, scope: !7555, inlinedAt: !7608)
!7610 = !DILocation(line: 461, column: 9, scope: !7555, inlinedAt: !7608)
!7611 = !DILocation(line: 457, column: 5, scope: !7555, inlinedAt: !7608)
!7612 = !DILocation(line: 459, column: 9, scope: !7555, inlinedAt: !7608)
!7613 = !DILocation(line: 463, column: 2, scope: !7555, inlinedAt: !7608)
!7614 = !DILocation(line: 1035, column: 16, scope: !7577)
!7615 = !DILocation(line: 1035, column: 56, scope: !7577)
!7616 = !DILocation(line: 1035, column: 13, scope: !7577)
!7617 = !DILocation(line: 1035, column: 42, scope: !7577)
!7618 = !DILocation(line: 1036, column: 10, scope: !7572)
!7619 = distinct !DISubprogram(name: "checked_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$11checked_sub17he9698245add31fc9E", scope: !7545, file: !1495, line: 790, type: !7546, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7620)
!7620 = !{!7621, !7622}
!7621 = !DILocalVariable(name: "self", arg: 1, scope: !7619, file: !1495, line: 790, type: !48)
!7622 = !DILocalVariable(name: "rhs", arg: 2, scope: !7619, file: !1495, line: 790, type: !48)
!7623 = !DILocation(line: 790, column: 34, scope: !7619)
!7624 = !DILocation(line: 790, column: 40, scope: !7619)
!7625 = !DILocation(line: 796, column: 16, scope: !7619)
!7626 = !DILocation(line: 800, column: 31, scope: !7619)
!7627 = !DILocation(line: 800, column: 17, scope: !7619)
!7628 = !DILocation(line: 796, column: 13, scope: !7619)
!7629 = !DILocation(line: 797, column: 17, scope: !7619)
!7630 = !DILocation(line: 802, column: 10, scope: !7619)
!7631 = distinct !DISubprogram(name: "from_str_radix", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$14from_str_radix17hc82f8ed412042f79E", scope: !7632, file: !7535, line: 1494, type: !7633, scopeLine: 1494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7653)
!7632 = !DINamespace(name: "{impl#38}", scope: !225)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!7635, !659, !48}
!7635 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u32, core::num::error::ParseIntError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7636, templateParams: !14, identifier: "71057d1ed18f59f68adec577241b65")
!7636 = !{!7637}
!7637 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7635, file: !2, size: 64, align: 32, elements: !7638, templateParams: !14, identifier: "4ca9bb8d4d8ac25bda8ec85aab32bccc", discriminator: !7652)
!7638 = !{!7639, !7648}
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7637, file: !2, baseType: !7640, size: 64, align: 32, extraData: i8 0)
!7640 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7635, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7641, templateParams: !7643, identifier: "8e40066617fea7554915689c984f7804")
!7641 = !{!7642}
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7640, file: !2, baseType: !48, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!7643 = !{!815, !7644}
!7644 = !DITemplateTypeParameter(name: "E", type: !7645)
!7645 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseIntError", scope: !224, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !7646, templateParams: !14, identifier: "b125b625e8ff581f67027cd0f75b7a0a")
!7646 = !{!7647}
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !7645, file: !2, baseType: !223, size: 8, align: 8, flags: DIFlagProtected)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7637, file: !2, baseType: !7649, size: 64, align: 32, extraData: i8 1)
!7649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7635, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7650, templateParams: !7643, identifier: "3a9f88cb0aca4e1964968a6ec8785aa3")
!7650 = !{!7651}
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7649, file: !2, baseType: !7645, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!7652 = !DIDerivedType(tag: DW_TAG_member, scope: !7635, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!7653 = !{!7654, !7655}
!7654 = !DILocalVariable(name: "src", arg: 1, scope: !7631, file: !7535, line: 1494, type: !659)
!7655 = !DILocalVariable(name: "radix", arg: 2, scope: !7631, file: !7535, line: 1494, type: !48)
!7656 = !DILocation(line: 1494, column: 41, scope: !7631)
!7657 = !DILocation(line: 1494, column: 52, scope: !7631)
!7658 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !7659)
!7659 = distinct !DILocation(line: 1495, column: 49, scope: !7631)
!7660 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !7659)
!7661 = !DILocation(line: 1495, column: 49, scope: !7631)
!7662 = !DILocation(line: 1495, column: 17, scope: !7631)
!7663 = !DILocation(line: 1496, column: 14, scope: !7631)
!7664 = distinct !DISubprogram(name: "from_ascii_radix", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$16from_ascii_radix17h9bae4b968c990e26E", scope: !7632, file: !7535, line: 1573, type: !7665, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7667)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{!7635, !281, !48}
!7667 = !{!7668, !7669, !7670, !7672, !7674, !7675, !7677, !7679, !7681, !7683, !7685, !7686, !7688, !7690, !7692, !7693, !7695, !7697, !7699, !7700, !7702, !7704, !7706, !7708, !7710, !7712, !7713, !7715, !7717, !7719, !7721}
!7668 = !DILocalVariable(name: "src", arg: 1, scope: !7664, file: !7535, line: 1573, type: !281)
!7669 = !DILocalVariable(name: "radix", arg: 2, scope: !7664, file: !7535, line: 1573, type: !48)
!7670 = !DILocalVariable(name: "is_signed_ty", scope: !7671, file: !7535, line: 1586, type: !706, align: 8)
!7671 = distinct !DILexicalBlock(scope: !7664, file: !7535, line: 1586, column: 17)
!7672 = !DILocalVariable(name: "is_positive", scope: !7673, file: !7535, line: 1588, type: !706, align: 8)
!7673 = distinct !DILexicalBlock(scope: !7671, file: !7535, line: 1588, column: 17)
!7674 = !DILocalVariable(name: "digits", scope: !7673, file: !7535, line: 1588, type: !281, align: 32)
!7675 = !DILocalVariable(name: "rest", scope: !7676, file: !7535, line: 1592, type: !281, align: 32)
!7676 = distinct !DILexicalBlock(scope: !7671, file: !7535, line: 1592, column: 21)
!7677 = !DILocalVariable(name: "rest", scope: !7678, file: !7535, line: 1593, type: !281, align: 32)
!7678 = distinct !DILexicalBlock(scope: !7671, file: !7535, line: 1593, column: 21)
!7679 = !DILocalVariable(name: "rest", scope: !7678, file: !7535, line: 1593, type: !7680, align: 32)
!7680 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[u8]", baseType: !281, size: 32, align: 32, dwarfAddressSpace: 0)
!7681 = !DILocalVariable(name: "result", scope: !7682, file: !7535, line: 1597, type: !48, align: 32)
!7682 = distinct !DILexicalBlock(scope: !7673, file: !7535, line: 1597, column: 17)
!7683 = !DILocalVariable(name: "c", scope: !7684, file: !7535, line: 1619, type: !12, align: 32)
!7684 = distinct !DILexicalBlock(scope: !7682, file: !7535, line: 1619, column: 63)
!7685 = !DILocalVariable(name: "rest", scope: !7684, file: !7535, line: 1619, type: !281, align: 32)
!7686 = !DILocalVariable(name: "x", scope: !7687, file: !7535, line: 1621, type: !48, align: 32)
!7687 = distinct !DILexicalBlock(scope: !7684, file: !7535, line: 1621, column: 33)
!7688 = !DILocalVariable(name: "value", scope: !7689, file: !7535, line: 1602, type: !48, align: 32)
!7689 = distinct !DILexicalBlock(scope: !7684, file: !7535, line: 1602, column: 29)
!7690 = !DILocalVariable(name: "c", scope: !7691, file: !7535, line: 1619, type: !12, align: 32)
!7691 = distinct !DILexicalBlock(scope: !7682, file: !7535, line: 1619, column: 63)
!7692 = !DILocalVariable(name: "rest", scope: !7691, file: !7535, line: 1619, type: !281, align: 32)
!7693 = !DILocalVariable(name: "x", scope: !7694, file: !7535, line: 1621, type: !48, align: 32)
!7694 = distinct !DILexicalBlock(scope: !7691, file: !7535, line: 1621, column: 33)
!7695 = !DILocalVariable(name: "value", scope: !7696, file: !7535, line: 1602, type: !48, align: 32)
!7696 = distinct !DILexicalBlock(scope: !7691, file: !7535, line: 1602, column: 29)
!7697 = !DILocalVariable(name: "c", scope: !7698, file: !7535, line: 1635, type: !12, align: 32)
!7698 = distinct !DILexicalBlock(scope: !7682, file: !7535, line: 1635, column: 63)
!7699 = !DILocalVariable(name: "rest", scope: !7698, file: !7535, line: 1635, type: !281, align: 32)
!7700 = !DILocalVariable(name: "mul", scope: !7701, file: !7535, line: 1646, type: !808, align: 32)
!7701 = distinct !DILexicalBlock(scope: !7698, file: !7535, line: 1646, column: 33)
!7702 = !DILocalVariable(name: "x", scope: !7703, file: !7535, line: 1647, type: !48, align: 32)
!7703 = distinct !DILexicalBlock(scope: !7701, file: !7535, line: 1647, column: 33)
!7704 = !DILocalVariable(name: "value", scope: !7705, file: !7535, line: 1602, type: !48, align: 32)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !7535, line: 1602, column: 29)
!7706 = !DILocalVariable(name: "value", scope: !7707, file: !7535, line: 1602, type: !48, align: 32)
!7707 = distinct !DILexicalBlock(scope: !7703, file: !7535, line: 1602, column: 29)
!7708 = !DILocalVariable(name: "value", scope: !7709, file: !7535, line: 1602, type: !48, align: 32)
!7709 = distinct !DILexicalBlock(scope: !7703, file: !7535, line: 1602, column: 29)
!7710 = !DILocalVariable(name: "c", scope: !7711, file: !7535, line: 1635, type: !12, align: 32)
!7711 = distinct !DILexicalBlock(scope: !7682, file: !7535, line: 1635, column: 63)
!7712 = !DILocalVariable(name: "rest", scope: !7711, file: !7535, line: 1635, type: !281, align: 32)
!7713 = !DILocalVariable(name: "mul", scope: !7714, file: !7535, line: 1646, type: !808, align: 32)
!7714 = distinct !DILexicalBlock(scope: !7711, file: !7535, line: 1646, column: 33)
!7715 = !DILocalVariable(name: "x", scope: !7716, file: !7535, line: 1647, type: !48, align: 32)
!7716 = distinct !DILexicalBlock(scope: !7714, file: !7535, line: 1647, column: 33)
!7717 = !DILocalVariable(name: "value", scope: !7718, file: !7535, line: 1602, type: !48, align: 32)
!7718 = distinct !DILexicalBlock(scope: !7714, file: !7535, line: 1602, column: 29)
!7719 = !DILocalVariable(name: "value", scope: !7720, file: !7535, line: 1602, type: !48, align: 32)
!7720 = distinct !DILexicalBlock(scope: !7716, file: !7535, line: 1602, column: 29)
!7721 = !DILocalVariable(name: "value", scope: !7722, file: !7535, line: 1602, type: !48, align: 32)
!7722 = distinct !DILexicalBlock(scope: !7716, file: !7535, line: 1602, column: 29)
!7723 = !DILocation(line: 1573, column: 43, scope: !7664)
!7724 = !DILocation(line: 1573, column: 55, scope: !7664)
!7725 = !DILocation(line: 1588, column: 35, scope: !7673)
!7726 = !DILocation(line: 1593, column: 28, scope: !7678)
!7727 = !DILocation(line: 1597, column: 21, scope: !7682)
!7728 = !DILocation(line: 1646, column: 37, scope: !7701)
!7729 = !DILocation(line: 1646, column: 37, scope: !7714)
!7730 = !DILocation(line: 1577, column: 20, scope: !7664)
!7731 = !DILocation(line: 1577, column: 33, scope: !7664)
!7732 = !DILocation(line: 1578, column: 21, scope: !7664)
!7733 = !DILocation(line: 1581, column: 24, scope: !7664)
!7734 = !DILocation(line: 1581, column: 20, scope: !7664)
!7735 = !DILocation(line: 1586, column: 36, scope: !7664)
!7736 = !DILocation(line: 1586, column: 21, scope: !7671)
!7737 = !DILocation(line: 1589, column: 21, scope: !7671)
!7738 = !DILocation(line: 1582, column: 28, scope: !7664)
!7739 = !DILocation(line: 0, scope: !7740)
!7740 = !DILexicalBlockFile(scope: !7664, file: !626, discriminator: 0)
!7741 = !DILocation(line: 1588, column: 49, scope: !7671)
!7742 = !DILocation(line: 1592, column: 21, scope: !7671)
!7743 = !DILocation(line: 1590, column: 32, scope: !7671)
!7744 = !DILocation(line: 0, scope: !7745)
!7745 = !DILexicalBlockFile(scope: !7671, file: !626, discriminator: 0)
!7746 = !DILocation(line: 1661, column: 14, scope: !7664)
!7747 = !DILocation(line: 1594, column: 26, scope: !7671)
!7748 = !DILocation(line: 1594, column: 36, scope: !7671)
!7749 = !DILocation(line: 1592, column: 28, scope: !7671)
!7750 = !DILocation(line: 1592, column: 28, scope: !7676)
!7751 = !DILocation(line: 1592, column: 42, scope: !7676)
!7752 = !DILocation(line: 1592, column: 53, scope: !7671)
!7753 = !DILocation(line: 1593, column: 28, scope: !7671)
!7754 = !DILocation(line: 1593, column: 42, scope: !7671)
!7755 = !DILocation(line: 1588, column: 22, scope: !7671)
!7756 = !DILocation(line: 1588, column: 22, scope: !7673)
!7757 = !DILocation(line: 1588, column: 35, scope: !7671)
!7758 = !DILocation(line: 1597, column: 34, scope: !7673)
!7759 = !DILocation(line: 1608, column: 69, scope: !7682)
!7760 = !DILocalVariable(name: "radix", arg: 1, scope: !7761, file: !7535, line: 1386, type: !48)
!7761 = distinct !DISubprogram(name: "can_not_overflow<u32>", linkageName: "_ZN4core3num16can_not_overflow17hc4113376ded13e9bE", scope: !225, file: !7535, line: 1386, type: !7762, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !814, retainedNodes: !7764)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!706, !48, !706, !281}
!7764 = !{!7760, !7765, !7766}
!7765 = !DILocalVariable(name: "is_signed_ty", arg: 2, scope: !7761, file: !7535, line: 1386, type: !706)
!7766 = !DILocalVariable(name: "digits", arg: 3, scope: !7761, file: !7535, line: 1386, type: !281)
!7767 = !DILocation(line: 1386, column: 34, scope: !7761, inlinedAt: !7768)
!7768 = distinct !DILocation(line: 1608, column: 20, scope: !7682)
!7769 = !DILocation(line: 1386, column: 46, scope: !7761, inlinedAt: !7768)
!7770 = !DILocation(line: 1386, column: 66, scope: !7761, inlinedAt: !7768)
!7771 = !DILocation(line: 1387, column: 5, scope: !7761, inlinedAt: !7768)
!7772 = !DILocation(line: 1387, column: 20, scope: !7761, inlinedAt: !7768)
!7773 = !DILocation(line: 1388, column: 2, scope: !7761, inlinedAt: !7768)
!7774 = !DILocation(line: 1608, column: 20, scope: !7682)
!7775 = !DILocation(line: 1593, column: 58, scope: !7678)
!7776 = !DILocation(line: 1593, column: 70, scope: !7671)
!7777 = !DILocation(line: 1654, column: 24, scope: !7682)
!7778 = !DILocation(line: 1627, column: 24, scope: !7682)
!7779 = !DILocation(line: 1635, column: 39, scope: !7711)
!7780 = !DILocation(line: 1635, column: 39, scope: !7698)
!7781 = !DILocation(line: 1660, column: 20, scope: !7682)
!7782 = !DILocation(line: 1660, column: 17, scope: !7682)
!7783 = !DILocation(line: 1635, column: 40, scope: !7711)
!7784 = !DILocation(line: 1635, column: 43, scope: !7711)
!7785 = !DILocation(line: 1646, column: 43, scope: !7711)
!7786 = !DILocation(line: 1646, column: 50, scope: !7711)
!7787 = !DILocation(line: 1647, column: 57, scope: !7714)
!7788 = !DILocation(line: 1647, column: 56, scope: !7714)
!7789 = !DILocation(line: 1647, column: 69, scope: !7714)
!7790 = !DILocation(line: 1601, column: 25, scope: !7714)
!7791 = !DILocation(line: 1602, column: 34, scope: !7714)
!7792 = !DILocation(line: 1647, column: 37, scope: !7716)
!7793 = !DILocation(line: 1602, column: 34, scope: !7718)
!7794 = !DILocation(line: 1648, column: 57, scope: !7716)
!7795 = !DILocation(line: 1601, column: 25, scope: !7716)
!7796 = !DILocation(line: 1603, column: 44, scope: !7714)
!7797 = !DILocation(line: 0, scope: !7798)
!7798 = !DILexicalBlockFile(scope: !7714, file: !626, discriminator: 0)
!7799 = !DILocation(line: 1602, column: 34, scope: !7716)
!7800 = !DILocation(line: 1602, column: 34, scope: !7720)
!7801 = !DILocation(line: 1648, column: 33, scope: !7716)
!7802 = !DILocation(line: 1649, column: 89, scope: !7716)
!7803 = !DILocation(line: 1649, column: 68, scope: !7716)
!7804 = !DILocation(line: 1603, column: 44, scope: !7716)
!7805 = !DILocation(line: 0, scope: !7806)
!7806 = !DILexicalBlockFile(scope: !7716, file: !626, discriminator: 0)
!7807 = !DILocation(line: 1602, column: 34, scope: !7722)
!7808 = !DILocation(line: 1649, column: 33, scope: !7716)
!7809 = !DILocation(line: 1650, column: 33, scope: !7716)
!7810 = !DILocation(line: 1635, column: 29, scope: !7682)
!7811 = !DILocation(line: 1635, column: 40, scope: !7698)
!7812 = !DILocation(line: 1635, column: 43, scope: !7698)
!7813 = !DILocation(line: 1646, column: 43, scope: !7698)
!7814 = !DILocation(line: 1646, column: 50, scope: !7698)
!7815 = !DILocation(line: 1647, column: 57, scope: !7701)
!7816 = !DILocation(line: 1647, column: 56, scope: !7701)
!7817 = !DILocation(line: 1647, column: 69, scope: !7701)
!7818 = !DILocation(line: 1601, column: 25, scope: !7701)
!7819 = !DILocation(line: 1602, column: 34, scope: !7701)
!7820 = !DILocation(line: 1647, column: 37, scope: !7703)
!7821 = !DILocation(line: 1602, column: 34, scope: !7705)
!7822 = !DILocation(line: 1648, column: 57, scope: !7703)
!7823 = !DILocation(line: 1601, column: 25, scope: !7703)
!7824 = !DILocation(line: 1603, column: 44, scope: !7701)
!7825 = !DILocation(line: 0, scope: !7826)
!7826 = !DILexicalBlockFile(scope: !7701, file: !626, discriminator: 0)
!7827 = !DILocation(line: 1602, column: 34, scope: !7703)
!7828 = !DILocation(line: 1602, column: 34, scope: !7707)
!7829 = !DILocation(line: 1648, column: 33, scope: !7703)
!7830 = !DILocation(line: 1649, column: 89, scope: !7703)
!7831 = !DILocation(line: 1649, column: 68, scope: !7703)
!7832 = !DILocation(line: 1603, column: 44, scope: !7703)
!7833 = !DILocation(line: 0, scope: !7834)
!7834 = !DILexicalBlockFile(scope: !7703, file: !626, discriminator: 0)
!7835 = !DILocation(line: 1602, column: 34, scope: !7709)
!7836 = !DILocation(line: 1649, column: 33, scope: !7703)
!7837 = !DILocation(line: 1650, column: 33, scope: !7703)
!7838 = !DILocation(line: 1619, column: 39, scope: !7691)
!7839 = !DILocation(line: 1619, column: 39, scope: !7684)
!7840 = !DILocation(line: 1619, column: 40, scope: !7691)
!7841 = !DILocation(line: 1619, column: 43, scope: !7691)
!7842 = !DILocation(line: 1620, column: 42, scope: !7691)
!7843 = !DILocation(line: 1620, column: 33, scope: !7691)
!7844 = !DILocation(line: 1621, column: 57, scope: !7691)
!7845 = !DILocation(line: 1621, column: 56, scope: !7691)
!7846 = !DILocation(line: 1621, column: 69, scope: !7691)
!7847 = !DILocation(line: 1601, column: 25, scope: !7691)
!7848 = !DILocation(line: 1602, column: 34, scope: !7691)
!7849 = !DILocation(line: 1621, column: 37, scope: !7694)
!7850 = !DILocation(line: 1602, column: 34, scope: !7696)
!7851 = !DILocation(line: 1622, column: 42, scope: !7694)
!7852 = !DILocation(line: 1603, column: 44, scope: !7691)
!7853 = !DILocation(line: 0, scope: !7854)
!7854 = !DILexicalBlockFile(scope: !7682, file: !626, discriminator: 0)
!7855 = !DILocation(line: 1622, column: 33, scope: !7694)
!7856 = !DILocation(line: 1623, column: 33, scope: !7694)
!7857 = !DILocation(line: 1619, column: 29, scope: !7682)
!7858 = !DILocation(line: 1619, column: 40, scope: !7684)
!7859 = !DILocation(line: 1619, column: 43, scope: !7684)
!7860 = !DILocation(line: 1620, column: 42, scope: !7684)
!7861 = !DILocation(line: 1620, column: 33, scope: !7684)
!7862 = !DILocation(line: 1621, column: 57, scope: !7684)
!7863 = !DILocation(line: 1621, column: 56, scope: !7684)
!7864 = !DILocation(line: 1621, column: 69, scope: !7684)
!7865 = !DILocation(line: 1601, column: 25, scope: !7684)
!7866 = !DILocation(line: 1602, column: 34, scope: !7684)
!7867 = !DILocation(line: 1621, column: 37, scope: !7687)
!7868 = !DILocation(line: 1602, column: 34, scope: !7689)
!7869 = !DILocation(line: 1622, column: 42, scope: !7687)
!7870 = !DILocation(line: 1603, column: 44, scope: !7684)
!7871 = !DILocation(line: 1622, column: 33, scope: !7687)
!7872 = !DILocation(line: 1623, column: 33, scope: !7687)
!7873 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_add17hb44e6f61114d879fE", scope: !7048, file: !1495, line: 634, type: !7874, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7876)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{!757, !765, !765}
!7876 = !{!7877, !7878}
!7877 = !DILocalVariable(name: "self", arg: 1, scope: !7873, file: !1495, line: 634, type: !765)
!7878 = !DILocalVariable(name: "rhs", arg: 2, scope: !7873, file: !1495, line: 634, type: !765)
!7879 = !DILocation(line: 634, column: 34, scope: !7873)
!7880 = !DILocation(line: 634, column: 40, scope: !7873)
!7881 = !DILocation(line: 642, column: 37, scope: !7873)
!7882 = !DILocation(line: 456, column: 23, scope: !7555, inlinedAt: !7883)
!7883 = distinct !DILocation(line: 642, column: 16, scope: !7873)
!7884 = !DILocation(line: 457, column: 8, scope: !7555, inlinedAt: !7883)
!7885 = !DILocation(line: 461, column: 9, scope: !7555, inlinedAt: !7883)
!7886 = !DILocation(line: 457, column: 5, scope: !7555, inlinedAt: !7883)
!7887 = !DILocation(line: 459, column: 9, scope: !7555, inlinedAt: !7883)
!7888 = !DILocation(line: 463, column: 2, scope: !7555, inlinedAt: !7883)
!7889 = !DILocation(line: 642, column: 16, scope: !7873)
!7890 = !DILocation(line: 646, column: 31, scope: !7873)
!7891 = !DILocation(line: 646, column: 17, scope: !7873)
!7892 = !DILocation(line: 642, column: 13, scope: !7873)
!7893 = !DILocation(line: 643, column: 17, scope: !7873)
!7894 = !DILocation(line: 648, column: 10, scope: !7873)
!7895 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h9f8a1b16d6975a17E", scope: !7048, file: !1495, line: 1033, type: !7874, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7896)
!7896 = !{!7897, !7898, !7899, !7901}
!7897 = !DILocalVariable(name: "self", arg: 1, scope: !7895, file: !1495, line: 1033, type: !765)
!7898 = !DILocalVariable(name: "rhs", arg: 2, scope: !7895, file: !1495, line: 1033, type: !765)
!7899 = !DILocalVariable(name: "a", scope: !7900, file: !1495, line: 1034, type: !765, align: 64)
!7900 = distinct !DILexicalBlock(scope: !7895, file: !1495, line: 1034, column: 13)
!7901 = !DILocalVariable(name: "b", scope: !7900, file: !1495, line: 1034, type: !706, align: 8)
!7902 = !DILocation(line: 1033, column: 34, scope: !7895)
!7903 = !DILocation(line: 1033, column: 40, scope: !7895)
!7904 = !DILocalVariable(name: "self", arg: 1, scope: !7905, file: !1495, line: 2867, type: !765)
!7905 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$15overflowing_mul17hd80d2b1825440a2eE", scope: !7048, file: !1495, line: 2867, type: !7906, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7912)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!7908, !765, !765}
!7908 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, bool)", file: !2, size: 128, align: 64, elements: !7909, templateParams: !14, identifier: "9e8deed232eb6ae0c80d1ba9c2f22773")
!7909 = !{!7910, !7911}
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7908, file: !2, baseType: !765, size: 64, align: 64)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7908, file: !2, baseType: !706, size: 8, align: 8, offset: 64)
!7912 = !{!7904, !7913, !7914, !7916}
!7913 = !DILocalVariable(name: "rhs", arg: 2, scope: !7905, file: !1495, line: 2867, type: !765)
!7914 = !DILocalVariable(name: "a", scope: !7915, file: !1495, line: 2868, type: !765, align: 64)
!7915 = distinct !DILexicalBlock(scope: !7905, file: !1495, line: 2868, column: 13)
!7916 = !DILocalVariable(name: "b", scope: !7915, file: !1495, line: 2868, type: !706, align: 8)
!7917 = !DILocation(line: 2867, column: 38, scope: !7905, inlinedAt: !7918)
!7918 = distinct !DILocation(line: 1034, column: 31, scope: !7895)
!7919 = !DILocation(line: 2867, column: 44, scope: !7905, inlinedAt: !7918)
!7920 = !DILocation(line: 2868, column: 26, scope: !7905, inlinedAt: !7918)
!7921 = !DILocation(line: 2868, column: 18, scope: !7905, inlinedAt: !7918)
!7922 = !DILocation(line: 2868, column: 18, scope: !7915, inlinedAt: !7918)
!7923 = !DILocation(line: 2868, column: 21, scope: !7905, inlinedAt: !7918)
!7924 = !DILocation(line: 2868, column: 21, scope: !7915, inlinedAt: !7918)
!7925 = !DILocation(line: 2869, column: 13, scope: !7915, inlinedAt: !7918)
!7926 = !DILocation(line: 1034, column: 31, scope: !7895)
!7927 = !DILocation(line: 1034, column: 18, scope: !7895)
!7928 = !DILocation(line: 1034, column: 18, scope: !7900)
!7929 = !DILocation(line: 1034, column: 21, scope: !7895)
!7930 = !DILocation(line: 1034, column: 21, scope: !7900)
!7931 = !DILocation(line: 456, column: 23, scope: !7555, inlinedAt: !7932)
!7932 = distinct !DILocation(line: 1035, column: 16, scope: !7900)
!7933 = !DILocation(line: 457, column: 8, scope: !7555, inlinedAt: !7932)
!7934 = !DILocation(line: 461, column: 9, scope: !7555, inlinedAt: !7932)
!7935 = !DILocation(line: 457, column: 5, scope: !7555, inlinedAt: !7932)
!7936 = !DILocation(line: 459, column: 9, scope: !7555, inlinedAt: !7932)
!7937 = !DILocation(line: 463, column: 2, scope: !7555, inlinedAt: !7932)
!7938 = !DILocation(line: 1035, column: 16, scope: !7900)
!7939 = !DILocation(line: 1035, column: 56, scope: !7900)
!7940 = !DILocation(line: 1035, column: 13, scope: !7900)
!7941 = !DILocation(line: 1035, column: 42, scope: !7900)
!7942 = !DILocation(line: 1036, column: 10, scope: !7895)
!7943 = distinct !DISubprogram(name: "checked_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_sub17h25afcbdc5e9ad36fE", scope: !7048, file: !1495, line: 790, type: !7874, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7944)
!7944 = !{!7945, !7946}
!7945 = !DILocalVariable(name: "self", arg: 1, scope: !7943, file: !1495, line: 790, type: !765)
!7946 = !DILocalVariable(name: "rhs", arg: 2, scope: !7943, file: !1495, line: 790, type: !765)
!7947 = !DILocation(line: 790, column: 34, scope: !7943)
!7948 = !DILocation(line: 790, column: 40, scope: !7943)
!7949 = !DILocation(line: 796, column: 16, scope: !7943)
!7950 = !DILocation(line: 800, column: 31, scope: !7943)
!7951 = !DILocation(line: 800, column: 17, scope: !7943)
!7952 = !DILocation(line: 796, column: 13, scope: !7943)
!7953 = !DILocation(line: 797, column: 17, scope: !7943)
!7954 = !DILocation(line: 802, column: 10, scope: !7943)
!7955 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13unchecked_add18precondition_check17hbc02bab51f5d3cd5E", scope: !7956, file: !7058, line: 68, type: !7957, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7959)
!7956 = !DINamespace(name: "unchecked_add", scope: !7048)
!7957 = !DISubroutineType(types: !7958)
!7958 = !{null, !765, !765, !823}
!7959 = !{!7960, !7961, !7962}
!7960 = !DILocalVariable(name: "lhs", arg: 1, scope: !7955, file: !7058, line: 68, type: !765)
!7961 = !DILocalVariable(name: "rhs", arg: 2, scope: !7955, file: !7058, line: 68, type: !765)
!7962 = !DILocalVariable(name: "msg", scope: !7963, file: !7058, line: 70, type: !659, align: 32)
!7963 = distinct !DILexicalBlock(scope: !7955, file: !7058, line: 70, column: 21)
!7964 = !DILocation(line: 68, column: 43, scope: !7955)
!7965 = !DILocation(line: 70, column: 25, scope: !7963)
!7966 = !DILocalVariable(name: "self", arg: 1, scope: !7967, file: !1495, line: 2645, type: !765)
!7967 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$15overflowing_add17he57e8a7c14759164E", scope: !7048, file: !1495, line: 2645, type: !7906, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7968)
!7968 = !{!7966, !7969, !7970, !7972}
!7969 = !DILocalVariable(name: "rhs", arg: 2, scope: !7967, file: !1495, line: 2645, type: !765)
!7970 = !DILocalVariable(name: "a", scope: !7971, file: !1495, line: 2646, type: !765, align: 64)
!7971 = distinct !DILexicalBlock(scope: !7967, file: !1495, line: 2646, column: 13)
!7972 = !DILocalVariable(name: "b", scope: !7971, file: !1495, line: 2646, type: !706, align: 8)
!7973 = !DILocation(line: 2645, column: 38, scope: !7967, inlinedAt: !7974)
!7974 = distinct !DILocation(line: 712, column: 27, scope: !7975)
!7975 = !DILexicalBlockFile(scope: !7955, file: !1495, discriminator: 0)
!7976 = !DILocation(line: 2645, column: 44, scope: !7967, inlinedAt: !7974)
!7977 = !DILocation(line: 2646, column: 26, scope: !7967, inlinedAt: !7974)
!7978 = !DILocation(line: 2646, column: 18, scope: !7967, inlinedAt: !7974)
!7979 = !DILocation(line: 2646, column: 18, scope: !7971, inlinedAt: !7974)
!7980 = !DILocation(line: 2646, column: 21, scope: !7967, inlinedAt: !7974)
!7981 = !DILocation(line: 2646, column: 21, scope: !7971, inlinedAt: !7974)
!7982 = !DILocation(line: 2647, column: 13, scope: !7971, inlinedAt: !7974)
!7983 = !DILocation(line: 712, column: 27, scope: !7975)
!7984 = !DILocation(line: 712, column: 23, scope: !7975)
!7985 = !DILocation(line: 75, column: 14, scope: !7955)
!7986 = !DILocation(line: 73, column: 94, scope: !7963)
!7987 = !DILocation(line: 73, column: 59, scope: !7963)
!7988 = !DILocation(line: 73, column: 21, scope: !7963)
!7989 = distinct !DISubprogram(name: "from_ascii_radix_panic", linkageName: "_ZN4core3num22from_ascii_radix_panic17ha2face5f2bfe58c6E", scope: !225, file: !7535, line: 1394, type: !7990, scopeLine: 1394, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7992)
!7990 = !DISubroutineType(types: !7991)
!7991 = !{null, !48, !823}
!7992 = !{!7993}
!7993 = !DILocalVariable(name: "radix", arg: 1, scope: !7989, file: !7535, line: 1394, type: !48)
!7994 = !DILocation(line: 1394, column: 33, scope: !7989)
!7995 = !DILocalVariable(name: "radix", arg: 1, scope: !7996, file: !1045, line: 166, type: !48)
!7996 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core3num22from_ascii_radix_panic8do_panic17h1247f74ea500aa96E", scope: !7997, file: !1045, line: 166, type: !7990, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !7998)
!7997 = !DINamespace(name: "from_ascii_radix_panic", scope: !225)
!7998 = !{!7995}
!7999 = !DILocation(line: 166, column: 29, scope: !7996, inlinedAt: !8000)
!8000 = distinct !DILocation(line: 178, column: 9, scope: !8001)
!8001 = !DILexicalBlockFile(scope: !7989, file: !1045, discriminator: 0)
!8002 = !DILocation(line: 2435, column: 9, scope: !8003, inlinedAt: !8000)
!8003 = !DILexicalBlockFile(scope: !7996, file: !7109, discriminator: 0)
!8004 = !DILocation(line: 178, column: 9, scope: !8001)
!8005 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h57b82ab190fcd24eE", scope: !1496, file: !1495, line: 634, type: !8006, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8008)
!8006 = !DISubroutineType(types: !8007)
!8007 = !{!6624, !9, !9}
!8008 = !{!8009, !8010}
!8009 = !DILocalVariable(name: "self", arg: 1, scope: !8005, file: !1495, line: 634, type: !9)
!8010 = !DILocalVariable(name: "rhs", arg: 2, scope: !8005, file: !1495, line: 634, type: !9)
!8011 = !DILocation(line: 634, column: 34, scope: !8005)
!8012 = !DILocation(line: 634, column: 40, scope: !8005)
!8013 = !DILocation(line: 642, column: 37, scope: !8005)
!8014 = !DILocation(line: 456, column: 23, scope: !7555, inlinedAt: !8015)
!8015 = distinct !DILocation(line: 642, column: 16, scope: !8005)
!8016 = !DILocation(line: 457, column: 8, scope: !7555, inlinedAt: !8015)
!8017 = !DILocation(line: 461, column: 9, scope: !7555, inlinedAt: !8015)
!8018 = !DILocation(line: 457, column: 5, scope: !7555, inlinedAt: !8015)
!8019 = !DILocation(line: 459, column: 9, scope: !7555, inlinedAt: !8015)
!8020 = !DILocation(line: 463, column: 2, scope: !7555, inlinedAt: !8015)
!8021 = !DILocation(line: 642, column: 16, scope: !8005)
!8022 = !DILocation(line: 646, column: 31, scope: !8005)
!8023 = !DILocation(line: 646, column: 17, scope: !8005)
!8024 = !DILocation(line: 642, column: 13, scope: !8005)
!8025 = !DILocation(line: 643, column: 17, scope: !8005)
!8026 = !DILocation(line: 648, column: 10, scope: !8005)
!8027 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17hf74b554d5bdec321E", scope: !1496, file: !1495, line: 1033, type: !8006, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8028)
!8028 = !{!8029, !8030, !8031, !8033}
!8029 = !DILocalVariable(name: "self", arg: 1, scope: !8027, file: !1495, line: 1033, type: !9)
!8030 = !DILocalVariable(name: "rhs", arg: 2, scope: !8027, file: !1495, line: 1033, type: !9)
!8031 = !DILocalVariable(name: "a", scope: !8032, file: !1495, line: 1034, type: !9, align: 32)
!8032 = distinct !DILexicalBlock(scope: !8027, file: !1495, line: 1034, column: 13)
!8033 = !DILocalVariable(name: "b", scope: !8032, file: !1495, line: 1034, type: !706, align: 8)
!8034 = !DILocation(line: 1033, column: 34, scope: !8027)
!8035 = !DILocation(line: 1033, column: 40, scope: !8027)
!8036 = !DILocalVariable(name: "self", arg: 1, scope: !8037, file: !1495, line: 2867, type: !9)
!8037 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hb3e76adbffddd04cE", scope: !1496, file: !1495, line: 2867, type: !8038, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8044)
!8038 = !DISubroutineType(types: !8039)
!8039 = !{!8040, !9, !9}
!8040 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 64, align: 32, elements: !8041, templateParams: !14, identifier: "d571287e27d8be874e95a2f698798cc6")
!8041 = !{!8042, !8043}
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8040, file: !2, baseType: !9, size: 32, align: 32)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8040, file: !2, baseType: !706, size: 8, align: 8, offset: 32)
!8044 = !{!8036, !8045, !8046, !8048}
!8045 = !DILocalVariable(name: "rhs", arg: 2, scope: !8037, file: !1495, line: 2867, type: !9)
!8046 = !DILocalVariable(name: "a", scope: !8047, file: !1495, line: 2868, type: !48, align: 32)
!8047 = distinct !DILexicalBlock(scope: !8037, file: !1495, line: 2868, column: 13)
!8048 = !DILocalVariable(name: "b", scope: !8047, file: !1495, line: 2868, type: !706, align: 8)
!8049 = !DILocation(line: 2867, column: 38, scope: !8037, inlinedAt: !8050)
!8050 = distinct !DILocation(line: 1034, column: 31, scope: !8027)
!8051 = !DILocation(line: 2867, column: 44, scope: !8037, inlinedAt: !8050)
!8052 = !DILocation(line: 2868, column: 26, scope: !8037, inlinedAt: !8050)
!8053 = !DILocation(line: 2868, column: 18, scope: !8037, inlinedAt: !8050)
!8054 = !DILocation(line: 2868, column: 18, scope: !8047, inlinedAt: !8050)
!8055 = !DILocation(line: 2868, column: 21, scope: !8037, inlinedAt: !8050)
!8056 = !DILocation(line: 2868, column: 21, scope: !8047, inlinedAt: !8050)
!8057 = !DILocation(line: 1034, column: 31, scope: !8027)
!8058 = !DILocation(line: 1034, column: 18, scope: !8027)
!8059 = !DILocation(line: 1034, column: 18, scope: !8032)
!8060 = !DILocation(line: 1034, column: 21, scope: !8027)
!8061 = !DILocation(line: 1034, column: 21, scope: !8032)
!8062 = !DILocation(line: 456, column: 23, scope: !7555, inlinedAt: !8063)
!8063 = distinct !DILocation(line: 1035, column: 16, scope: !8032)
!8064 = !DILocation(line: 457, column: 8, scope: !7555, inlinedAt: !8063)
!8065 = !DILocation(line: 461, column: 9, scope: !7555, inlinedAt: !8063)
!8066 = !DILocation(line: 457, column: 5, scope: !7555, inlinedAt: !8063)
!8067 = !DILocation(line: 459, column: 9, scope: !7555, inlinedAt: !8063)
!8068 = !DILocation(line: 463, column: 2, scope: !7555, inlinedAt: !8063)
!8069 = !DILocation(line: 1035, column: 16, scope: !8032)
!8070 = !DILocation(line: 1035, column: 56, scope: !8032)
!8071 = !DILocation(line: 1035, column: 13, scope: !8032)
!8072 = !DILocation(line: 1035, column: 42, scope: !8032)
!8073 = !DILocation(line: 1036, column: 10, scope: !8027)
!8074 = distinct !DISubprogram(name: "checked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17hf518b4cbfbcb79daE", scope: !1496, file: !1495, line: 790, type: !8006, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8075)
!8075 = !{!8076, !8077}
!8076 = !DILocalVariable(name: "self", arg: 1, scope: !8074, file: !1495, line: 790, type: !9)
!8077 = !DILocalVariable(name: "rhs", arg: 2, scope: !8074, file: !1495, line: 790, type: !9)
!8078 = !DILocation(line: 790, column: 34, scope: !8074)
!8079 = !DILocation(line: 790, column: 40, scope: !8074)
!8080 = !DILocation(line: 796, column: 16, scope: !8074)
!8081 = !DILocation(line: 800, column: 31, scope: !8074)
!8082 = !DILocation(line: 800, column: 17, scope: !8074)
!8083 = !DILocation(line: 796, column: 13, scope: !8074)
!8084 = !DILocation(line: 797, column: 17, scope: !8074)
!8085 = !DILocation(line: 802, column: 10, scope: !8074)
!8086 = distinct !DISubprogram(name: "from_str_radix", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14from_str_radix17he829758c6626fb2fE", scope: !8087, file: !7535, line: 1494, type: !8088, scopeLine: 1494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8104)
!8087 = !DINamespace(name: "{impl#32}", scope: !225)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{!8090, !659, !48}
!8090 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::num::error::ParseIntError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8091, templateParams: !14, identifier: "d9826a8f723ecdd38881038d00acc836")
!8091 = !{!8092}
!8092 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8090, file: !2, size: 64, align: 32, elements: !8093, templateParams: !14, identifier: "cb5067e55d87d3acd7ba9df928e879cb", discriminator: !8103)
!8093 = !{!8094, !8099}
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8092, file: !2, baseType: !8095, size: 64, align: 32, extraData: i8 0)
!8095 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8096, templateParams: !8098, identifier: "984ffcd3b31671cbbbc2cadc54ac9cb2")
!8096 = !{!8097}
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8095, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!8098 = !{!40, !7644}
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8092, file: !2, baseType: !8100, size: 64, align: 32, extraData: i8 1)
!8100 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8101, templateParams: !8098, identifier: "7c0cff5cad20cca442b9a1a369bdd28f")
!8101 = !{!8102}
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8100, file: !2, baseType: !7645, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!8103 = !DIDerivedType(tag: DW_TAG_member, scope: !8090, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!8104 = !{!8105, !8106}
!8105 = !DILocalVariable(name: "src", arg: 1, scope: !8086, file: !7535, line: 1494, type: !659)
!8106 = !DILocalVariable(name: "radix", arg: 2, scope: !8086, file: !7535, line: 1494, type: !48)
!8107 = !DILocation(line: 1494, column: 41, scope: !8086)
!8108 = !DILocation(line: 1494, column: 52, scope: !8086)
!8109 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !8110)
!8110 = distinct !DILocation(line: 1495, column: 49, scope: !8086)
!8111 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !8110)
!8112 = !DILocation(line: 1495, column: 49, scope: !8086)
!8113 = !DILocation(line: 1495, column: 17, scope: !8086)
!8114 = !DILocation(line: 1496, column: 14, scope: !8086)
!8115 = distinct !DISubprogram(name: "from_ascii_radix", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$16from_ascii_radix17haecc50657e6b2bd2E", scope: !8087, file: !7535, line: 1573, type: !8116, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8118)
!8116 = !DISubroutineType(types: !8117)
!8117 = !{!8090, !281, !48}
!8118 = !{!8119, !8120, !8121, !8123, !8125, !8126, !8128, !8130, !8131, !8133, !8135, !8136, !8138, !8140, !8142, !8143, !8145, !8147, !8149, !8150, !8152, !8154, !8156, !8158, !8160, !8162, !8163, !8165, !8167, !8169, !8171}
!8119 = !DILocalVariable(name: "src", arg: 1, scope: !8115, file: !7535, line: 1573, type: !281)
!8120 = !DILocalVariable(name: "radix", arg: 2, scope: !8115, file: !7535, line: 1573, type: !48)
!8121 = !DILocalVariable(name: "is_signed_ty", scope: !8122, file: !7535, line: 1586, type: !706, align: 8)
!8122 = distinct !DILexicalBlock(scope: !8115, file: !7535, line: 1586, column: 17)
!8123 = !DILocalVariable(name: "is_positive", scope: !8124, file: !7535, line: 1588, type: !706, align: 8)
!8124 = distinct !DILexicalBlock(scope: !8122, file: !7535, line: 1588, column: 17)
!8125 = !DILocalVariable(name: "digits", scope: !8124, file: !7535, line: 1588, type: !281, align: 32)
!8126 = !DILocalVariable(name: "rest", scope: !8127, file: !7535, line: 1592, type: !281, align: 32)
!8127 = distinct !DILexicalBlock(scope: !8122, file: !7535, line: 1592, column: 21)
!8128 = !DILocalVariable(name: "rest", scope: !8129, file: !7535, line: 1593, type: !281, align: 32)
!8129 = distinct !DILexicalBlock(scope: !8122, file: !7535, line: 1593, column: 21)
!8130 = !DILocalVariable(name: "rest", scope: !8129, file: !7535, line: 1593, type: !7680, align: 32)
!8131 = !DILocalVariable(name: "result", scope: !8132, file: !7535, line: 1597, type: !9, align: 32)
!8132 = distinct !DILexicalBlock(scope: !8124, file: !7535, line: 1597, column: 17)
!8133 = !DILocalVariable(name: "c", scope: !8134, file: !7535, line: 1619, type: !12, align: 32)
!8134 = distinct !DILexicalBlock(scope: !8132, file: !7535, line: 1619, column: 63)
!8135 = !DILocalVariable(name: "rest", scope: !8134, file: !7535, line: 1619, type: !281, align: 32)
!8136 = !DILocalVariable(name: "x", scope: !8137, file: !7535, line: 1621, type: !48, align: 32)
!8137 = distinct !DILexicalBlock(scope: !8134, file: !7535, line: 1621, column: 33)
!8138 = !DILocalVariable(name: "value", scope: !8139, file: !7535, line: 1602, type: !48, align: 32)
!8139 = distinct !DILexicalBlock(scope: !8134, file: !7535, line: 1602, column: 29)
!8140 = !DILocalVariable(name: "c", scope: !8141, file: !7535, line: 1619, type: !12, align: 32)
!8141 = distinct !DILexicalBlock(scope: !8132, file: !7535, line: 1619, column: 63)
!8142 = !DILocalVariable(name: "rest", scope: !8141, file: !7535, line: 1619, type: !281, align: 32)
!8143 = !DILocalVariable(name: "x", scope: !8144, file: !7535, line: 1621, type: !48, align: 32)
!8144 = distinct !DILexicalBlock(scope: !8141, file: !7535, line: 1621, column: 33)
!8145 = !DILocalVariable(name: "value", scope: !8146, file: !7535, line: 1602, type: !48, align: 32)
!8146 = distinct !DILexicalBlock(scope: !8141, file: !7535, line: 1602, column: 29)
!8147 = !DILocalVariable(name: "c", scope: !8148, file: !7535, line: 1635, type: !12, align: 32)
!8148 = distinct !DILexicalBlock(scope: !8132, file: !7535, line: 1635, column: 63)
!8149 = !DILocalVariable(name: "rest", scope: !8148, file: !7535, line: 1635, type: !281, align: 32)
!8150 = !DILocalVariable(name: "mul", scope: !8151, file: !7535, line: 1646, type: !6624, align: 32)
!8151 = distinct !DILexicalBlock(scope: !8148, file: !7535, line: 1646, column: 33)
!8152 = !DILocalVariable(name: "x", scope: !8153, file: !7535, line: 1647, type: !9, align: 32)
!8153 = distinct !DILexicalBlock(scope: !8151, file: !7535, line: 1647, column: 33)
!8154 = !DILocalVariable(name: "value", scope: !8155, file: !7535, line: 1602, type: !48, align: 32)
!8155 = distinct !DILexicalBlock(scope: !8151, file: !7535, line: 1602, column: 29)
!8156 = !DILocalVariable(name: "value", scope: !8157, file: !7535, line: 1602, type: !9, align: 32)
!8157 = distinct !DILexicalBlock(scope: !8153, file: !7535, line: 1602, column: 29)
!8158 = !DILocalVariable(name: "value", scope: !8159, file: !7535, line: 1602, type: !9, align: 32)
!8159 = distinct !DILexicalBlock(scope: !8153, file: !7535, line: 1602, column: 29)
!8160 = !DILocalVariable(name: "c", scope: !8161, file: !7535, line: 1635, type: !12, align: 32)
!8161 = distinct !DILexicalBlock(scope: !8132, file: !7535, line: 1635, column: 63)
!8162 = !DILocalVariable(name: "rest", scope: !8161, file: !7535, line: 1635, type: !281, align: 32)
!8163 = !DILocalVariable(name: "mul", scope: !8164, file: !7535, line: 1646, type: !6624, align: 32)
!8164 = distinct !DILexicalBlock(scope: !8161, file: !7535, line: 1646, column: 33)
!8165 = !DILocalVariable(name: "x", scope: !8166, file: !7535, line: 1647, type: !9, align: 32)
!8166 = distinct !DILexicalBlock(scope: !8164, file: !7535, line: 1647, column: 33)
!8167 = !DILocalVariable(name: "value", scope: !8168, file: !7535, line: 1602, type: !48, align: 32)
!8168 = distinct !DILexicalBlock(scope: !8164, file: !7535, line: 1602, column: 29)
!8169 = !DILocalVariable(name: "value", scope: !8170, file: !7535, line: 1602, type: !9, align: 32)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !7535, line: 1602, column: 29)
!8171 = !DILocalVariable(name: "value", scope: !8172, file: !7535, line: 1602, type: !9, align: 32)
!8172 = distinct !DILexicalBlock(scope: !8166, file: !7535, line: 1602, column: 29)
!8173 = !DILocation(line: 1573, column: 43, scope: !8115)
!8174 = !DILocation(line: 1573, column: 55, scope: !8115)
!8175 = !DILocation(line: 1588, column: 35, scope: !8124)
!8176 = !DILocation(line: 1593, column: 28, scope: !8129)
!8177 = !DILocation(line: 1597, column: 21, scope: !8132)
!8178 = !DILocation(line: 1646, column: 37, scope: !8151)
!8179 = !DILocation(line: 1646, column: 37, scope: !8164)
!8180 = !DILocation(line: 1577, column: 20, scope: !8115)
!8181 = !DILocation(line: 1577, column: 33, scope: !8115)
!8182 = !DILocation(line: 1578, column: 21, scope: !8115)
!8183 = !DILocation(line: 1581, column: 24, scope: !8115)
!8184 = !DILocation(line: 1581, column: 20, scope: !8115)
!8185 = !DILocation(line: 1586, column: 36, scope: !8115)
!8186 = !DILocation(line: 1586, column: 21, scope: !8122)
!8187 = !DILocation(line: 1589, column: 21, scope: !8122)
!8188 = !DILocation(line: 1582, column: 28, scope: !8115)
!8189 = !DILocation(line: 0, scope: !8190)
!8190 = !DILexicalBlockFile(scope: !8115, file: !626, discriminator: 0)
!8191 = !DILocation(line: 1588, column: 49, scope: !8122)
!8192 = !DILocation(line: 1592, column: 21, scope: !8122)
!8193 = !DILocation(line: 1590, column: 32, scope: !8122)
!8194 = !DILocation(line: 0, scope: !8195)
!8195 = !DILexicalBlockFile(scope: !8122, file: !626, discriminator: 0)
!8196 = !DILocation(line: 1661, column: 14, scope: !8115)
!8197 = !DILocation(line: 1594, column: 26, scope: !8122)
!8198 = !DILocation(line: 1594, column: 36, scope: !8122)
!8199 = !DILocation(line: 1592, column: 28, scope: !8122)
!8200 = !DILocation(line: 1592, column: 28, scope: !8127)
!8201 = !DILocation(line: 1592, column: 42, scope: !8127)
!8202 = !DILocation(line: 1592, column: 53, scope: !8122)
!8203 = !DILocation(line: 1593, column: 28, scope: !8122)
!8204 = !DILocation(line: 1593, column: 42, scope: !8122)
!8205 = !DILocation(line: 1588, column: 22, scope: !8122)
!8206 = !DILocation(line: 1588, column: 22, scope: !8124)
!8207 = !DILocation(line: 1588, column: 35, scope: !8122)
!8208 = !DILocation(line: 1597, column: 34, scope: !8124)
!8209 = !DILocation(line: 1608, column: 69, scope: !8132)
!8210 = !DILocalVariable(name: "radix", arg: 1, scope: !8211, file: !7535, line: 1386, type: !48)
!8211 = distinct !DISubprogram(name: "can_not_overflow<usize>", linkageName: "_ZN4core3num16can_not_overflow17hbb3d2d467242870fE", scope: !225, file: !7535, line: 1386, type: !7762, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !6630, retainedNodes: !8212)
!8212 = !{!8210, !8213, !8214}
!8213 = !DILocalVariable(name: "is_signed_ty", arg: 2, scope: !8211, file: !7535, line: 1386, type: !706)
!8214 = !DILocalVariable(name: "digits", arg: 3, scope: !8211, file: !7535, line: 1386, type: !281)
!8215 = !DILocation(line: 1386, column: 34, scope: !8211, inlinedAt: !8216)
!8216 = distinct !DILocation(line: 1608, column: 20, scope: !8132)
!8217 = !DILocation(line: 1386, column: 46, scope: !8211, inlinedAt: !8216)
!8218 = !DILocation(line: 1386, column: 66, scope: !8211, inlinedAt: !8216)
!8219 = !DILocation(line: 1387, column: 5, scope: !8211, inlinedAt: !8216)
!8220 = !DILocation(line: 1387, column: 20, scope: !8211, inlinedAt: !8216)
!8221 = !DILocation(line: 1388, column: 2, scope: !8211, inlinedAt: !8216)
!8222 = !DILocation(line: 1608, column: 20, scope: !8132)
!8223 = !DILocation(line: 1593, column: 58, scope: !8129)
!8224 = !DILocation(line: 1593, column: 70, scope: !8122)
!8225 = !DILocation(line: 1654, column: 24, scope: !8132)
!8226 = !DILocation(line: 1627, column: 24, scope: !8132)
!8227 = !DILocation(line: 1635, column: 39, scope: !8161)
!8228 = !DILocation(line: 1635, column: 39, scope: !8148)
!8229 = !DILocation(line: 1660, column: 20, scope: !8132)
!8230 = !DILocation(line: 1660, column: 17, scope: !8132)
!8231 = !DILocation(line: 1635, column: 40, scope: !8161)
!8232 = !DILocation(line: 1635, column: 43, scope: !8161)
!8233 = !DILocation(line: 1646, column: 43, scope: !8161)
!8234 = !DILocation(line: 1646, column: 50, scope: !8161)
!8235 = !DILocation(line: 1647, column: 57, scope: !8164)
!8236 = !DILocation(line: 1647, column: 56, scope: !8164)
!8237 = !DILocation(line: 1647, column: 69, scope: !8164)
!8238 = !DILocation(line: 1601, column: 25, scope: !8164)
!8239 = !DILocation(line: 1602, column: 34, scope: !8164)
!8240 = !DILocation(line: 1602, column: 34, scope: !8168)
!8241 = !DILocation(line: 1647, column: 41, scope: !8164)
!8242 = !DILocation(line: 1647, column: 37, scope: !8166)
!8243 = !DILocation(line: 1648, column: 57, scope: !8166)
!8244 = !DILocation(line: 1601, column: 25, scope: !8166)
!8245 = !DILocation(line: 1603, column: 44, scope: !8164)
!8246 = !DILocation(line: 0, scope: !8247)
!8247 = !DILexicalBlockFile(scope: !8164, file: !626, discriminator: 0)
!8248 = !DILocation(line: 1602, column: 34, scope: !8166)
!8249 = !DILocation(line: 1602, column: 34, scope: !8170)
!8250 = !DILocation(line: 1648, column: 33, scope: !8166)
!8251 = !DILocation(line: 1649, column: 89, scope: !8166)
!8252 = !DILocation(line: 1649, column: 68, scope: !8166)
!8253 = !DILocation(line: 1603, column: 44, scope: !8166)
!8254 = !DILocation(line: 0, scope: !8255)
!8255 = !DILexicalBlockFile(scope: !8166, file: !626, discriminator: 0)
!8256 = !DILocation(line: 1602, column: 34, scope: !8172)
!8257 = !DILocation(line: 1649, column: 33, scope: !8166)
!8258 = !DILocation(line: 1650, column: 33, scope: !8166)
!8259 = !DILocation(line: 1635, column: 29, scope: !8132)
!8260 = !DILocation(line: 1635, column: 40, scope: !8148)
!8261 = !DILocation(line: 1635, column: 43, scope: !8148)
!8262 = !DILocation(line: 1646, column: 43, scope: !8148)
!8263 = !DILocation(line: 1646, column: 50, scope: !8148)
!8264 = !DILocation(line: 1647, column: 57, scope: !8151)
!8265 = !DILocation(line: 1647, column: 56, scope: !8151)
!8266 = !DILocation(line: 1647, column: 69, scope: !8151)
!8267 = !DILocation(line: 1601, column: 25, scope: !8151)
!8268 = !DILocation(line: 1602, column: 34, scope: !8151)
!8269 = !DILocation(line: 1602, column: 34, scope: !8155)
!8270 = !DILocation(line: 1647, column: 41, scope: !8151)
!8271 = !DILocation(line: 1647, column: 37, scope: !8153)
!8272 = !DILocation(line: 1648, column: 57, scope: !8153)
!8273 = !DILocation(line: 1601, column: 25, scope: !8153)
!8274 = !DILocation(line: 1603, column: 44, scope: !8151)
!8275 = !DILocation(line: 0, scope: !8276)
!8276 = !DILexicalBlockFile(scope: !8151, file: !626, discriminator: 0)
!8277 = !DILocation(line: 1602, column: 34, scope: !8153)
!8278 = !DILocation(line: 1602, column: 34, scope: !8157)
!8279 = !DILocation(line: 1648, column: 33, scope: !8153)
!8280 = !DILocation(line: 1649, column: 89, scope: !8153)
!8281 = !DILocation(line: 1649, column: 68, scope: !8153)
!8282 = !DILocation(line: 1603, column: 44, scope: !8153)
!8283 = !DILocation(line: 0, scope: !8284)
!8284 = !DILexicalBlockFile(scope: !8153, file: !626, discriminator: 0)
!8285 = !DILocation(line: 1602, column: 34, scope: !8159)
!8286 = !DILocation(line: 1649, column: 33, scope: !8153)
!8287 = !DILocation(line: 1650, column: 33, scope: !8153)
!8288 = !DILocation(line: 1619, column: 39, scope: !8141)
!8289 = !DILocation(line: 1619, column: 39, scope: !8134)
!8290 = !DILocation(line: 1619, column: 40, scope: !8141)
!8291 = !DILocation(line: 1619, column: 43, scope: !8141)
!8292 = !DILocation(line: 1620, column: 42, scope: !8141)
!8293 = !DILocation(line: 1620, column: 33, scope: !8141)
!8294 = !DILocation(line: 1621, column: 57, scope: !8141)
!8295 = !DILocation(line: 1621, column: 56, scope: !8141)
!8296 = !DILocation(line: 1621, column: 69, scope: !8141)
!8297 = !DILocation(line: 1601, column: 25, scope: !8141)
!8298 = !DILocation(line: 1602, column: 34, scope: !8141)
!8299 = !DILocation(line: 1621, column: 37, scope: !8144)
!8300 = !DILocation(line: 1602, column: 34, scope: !8146)
!8301 = !DILocation(line: 1622, column: 42, scope: !8144)
!8302 = !DILocation(line: 1603, column: 44, scope: !8141)
!8303 = !DILocation(line: 0, scope: !8304)
!8304 = !DILexicalBlockFile(scope: !8132, file: !626, discriminator: 0)
!8305 = !DILocation(line: 1622, column: 33, scope: !8144)
!8306 = !DILocation(line: 1623, column: 33, scope: !8144)
!8307 = !DILocation(line: 1619, column: 29, scope: !8132)
!8308 = !DILocation(line: 1619, column: 40, scope: !8134)
!8309 = !DILocation(line: 1619, column: 43, scope: !8134)
!8310 = !DILocation(line: 1620, column: 42, scope: !8134)
!8311 = !DILocation(line: 1620, column: 33, scope: !8134)
!8312 = !DILocation(line: 1621, column: 57, scope: !8134)
!8313 = !DILocation(line: 1621, column: 56, scope: !8134)
!8314 = !DILocation(line: 1621, column: 69, scope: !8134)
!8315 = !DILocation(line: 1601, column: 25, scope: !8134)
!8316 = !DILocation(line: 1602, column: 34, scope: !8134)
!8317 = !DILocation(line: 1621, column: 37, scope: !8137)
!8318 = !DILocation(line: 1602, column: 34, scope: !8139)
!8319 = !DILocation(line: 1622, column: 42, scope: !8137)
!8320 = !DILocation(line: 1603, column: 44, scope: !8134)
!8321 = !DILocation(line: 1622, column: 33, scope: !8137)
!8322 = !DILocation(line: 1623, column: 33, scope: !8137)
!8323 = distinct !DISubprogram(name: "from_str", linkageName: "_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17hce002435c662e58fE", scope: !8324, file: !7535, line: 1443, type: !8325, scopeLine: 1443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8327)
!8324 = !DINamespace(name: "{impl#31}", scope: !225)
!8325 = !DISubroutineType(types: !8326)
!8326 = !{!8090, !659}
!8327 = !{!8328}
!8328 = !DILocalVariable(name: "src", arg: 1, scope: !8323, file: !7535, line: 1443, type: !659)
!8329 = !DILocation(line: 1443, column: 25, scope: !8323)
!8330 = !DILocation(line: 1444, column: 17, scope: !8323)
!8331 = !DILocation(line: 1445, column: 14, scope: !8323)
!8332 = distinct !DISubprogram(name: "break_value<usize, usize>", linkageName: "_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17hf6e5f6ad675834d7E", scope: !588, file: !6957, line: 186, type: !8333, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !596, declaration: !8335, retainedNodes: !8336)
!8333 = !DISubroutineType(types: !8334)
!8334 = !{!6624, !588}
!8335 = !DISubprogram(name: "break_value<usize, usize>", linkageName: "_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17hf6e5f6ad675834d7E", scope: !588, file: !6957, line: 186, type: !8333, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !596)
!8336 = !{!8337, !8338}
!8337 = !DILocalVariable(name: "self", arg: 1, scope: !8332, file: !6957, line: 186, type: !588)
!8338 = !DILocalVariable(name: "x", scope: !8339, file: !6957, line: 189, type: !9, align: 32)
!8339 = distinct !DILexicalBlock(scope: !8332, file: !6957, line: 189, column: 13)
!8340 = !DILocation(line: 186, column: 24, scope: !8332)
!8341 = !DILocation(line: 187, column: 15, scope: !8332)
!8342 = !DILocation(line: 187, column: 9, scope: !8332)
!8343 = !DILocation(line: 189, column: 32, scope: !8332)
!8344 = !DILocation(line: 189, column: 32, scope: !8339)
!8345 = !DILocation(line: 189, column: 38, scope: !8339)
!8346 = !DILocation(line: 189, column: 44, scope: !8332)
!8347 = !DILocation(line: 188, column: 42, scope: !8332)
!8348 = !DILocation(line: 191, column: 5, scope: !8332)
!8349 = !DILocation(line: 191, column: 6, scope: !8332)
!8350 = distinct !DISubprogram(name: "end<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h7cbd12770d5221c3E", scope: !8352, file: !8351, line: 428, type: !8357, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1024, declaration: !8360, retainedNodes: !8361)
!8351 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "7a147c45a76a1a2965a82865e25902fd")
!8352 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !1020, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8353, templateParams: !1024, identifier: "5b62870719694fc8589db31ec9dd6012")
!8353 = !{!8354, !8355, !8356}
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8352, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagProtected)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !8352, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagProtected)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !8352, file: !2, baseType: !706, size: 8, align: 8, offset: 64, flags: DIFlagProtected)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{!1053, !8359}
!8359 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ops::range::RangeInclusive<usize>", baseType: !8352, size: 32, align: 32, dwarfAddressSpace: 0)
!8360 = !DISubprogram(name: "end<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3end17h7cbd12770d5221c3E", scope: !8352, file: !8351, line: 428, type: !8357, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1024)
!8361 = !{!8362}
!8362 = !DILocalVariable(name: "self", arg: 1, scope: !8350, file: !8351, line: 428, type: !8359)
!8363 = !DILocation(line: 428, column: 22, scope: !8350)
!8364 = !DILocation(line: 429, column: 9, scope: !8350)
!8365 = !DILocation(line: 430, column: 6, scope: !8350)
!8366 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h53fd2a5488ac6380E", scope: !8352, file: !8351, line: 378, type: !8367, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1024, declaration: !8369, retainedNodes: !8370)
!8367 = !DISubroutineType(types: !8368)
!8368 = !{!8352, !9, !9}
!8369 = !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h53fd2a5488ac6380E", scope: !8352, file: !8351, line: 378, type: !8367, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1024)
!8370 = !{!8371, !8372}
!8371 = !DILocalVariable(name: "start", arg: 1, scope: !8366, file: !8351, line: 378, type: !9)
!8372 = !DILocalVariable(name: "end", arg: 2, scope: !8366, file: !8351, line: 378, type: !9)
!8373 = !DILocation(line: 378, column: 22, scope: !8366)
!8374 = !DILocation(line: 378, column: 34, scope: !8366)
!8375 = !DILocation(line: 379, column: 9, scope: !8366)
!8376 = !DILocation(line: 380, column: 6, scope: !8366)
!8377 = distinct !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h0aba1386ed5fda79E", scope: !8352, file: !8351, line: 454, type: !8378, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !8380, retainedNodes: !8381)
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!1019, !8352}
!8380 = !DISubprogram(name: "into_slice_range", linkageName: "_ZN4core3ops5range27RangeInclusive$LT$usize$GT$16into_slice_range17h0aba1386ed5fda79E", scope: !8352, file: !8351, line: 454, type: !8378, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!8381 = !{!8382, !8383, !8385}
!8382 = !DILocalVariable(name: "self", arg: 1, scope: !8377, file: !8351, line: 454, type: !8352)
!8383 = !DILocalVariable(name: "exclusive_end", scope: !8384, file: !8351, line: 458, type: !9, align: 32)
!8384 = distinct !DILexicalBlock(scope: !8377, file: !8351, line: 458, column: 9)
!8385 = !DILocalVariable(name: "start", scope: !8386, file: !8351, line: 459, type: !9, align: 32)
!8386 = distinct !DILexicalBlock(scope: !8384, file: !8351, line: 459, column: 9)
!8387 = !DILocation(line: 454, column: 42, scope: !8377)
!8388 = !DILocation(line: 459, column: 13, scope: !8386)
!8389 = !DILocation(line: 458, column: 29, scope: !8377)
!8390 = !DILocation(line: 458, column: 13, scope: !8384)
!8391 = !DILocation(line: 459, column: 24, scope: !8384)
!8392 = !DILocation(line: 459, column: 64, scope: !8384)
!8393 = !DILocation(line: 459, column: 21, scope: !8384)
!8394 = !DILocation(line: 459, column: 41, scope: !8384)
!8395 = !DILocation(line: 460, column: 9, scope: !8386)
!8396 = !DILocation(line: 461, column: 6, scope: !8377)
!8397 = distinct !DISubprogram(name: "call<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>, (&mut rustc_demangle::v0::Printer)>", linkageName: "_ZN4core3ops8function2Fn4call17h221f007c70093d42E", scope: !8399, file: !8398, line: 79, type: !8401, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8410, retainedNodes: !8404)
!8398 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "f10f7c44ec86506ef01d8c34efe59fc0")
!8399 = !DINamespace(name: "Fn", scope: !8400)
!8400 = !DINamespace(name: "function", scope: !425)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{!1079, !8403, !2323}
!8403 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>", baseType: !4540, size: 32, align: 32, dwarfAddressSpace: 0)
!8404 = !{!8405, !8406}
!8405 = !DILocalVariable(arg: 1, scope: !8397, file: !8398, line: 79, type: !8403)
!8406 = !DILocalVariable(arg: 2, scope: !8397, file: !8398, line: 79, type: !8407)
!8407 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&mut rustc_demangle::v0::Printer)", file: !2, size: 32, align: 32, elements: !8408, templateParams: !14, identifier: "dab26ab0533804da9faee87fb594d4bd")
!8408 = !{!8409}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8407, file: !2, baseType: !2323, size: 32, align: 32)
!8410 = !{!8411, !8412}
!8411 = !DITemplateTypeParameter(name: "Self", type: !4540)
!8412 = !DITemplateTypeParameter(name: "Args", type: !8407)
!8413 = !DILocation(line: 79, column: 5, scope: !8397)
!8414 = distinct !DISubprogram(name: "call<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>, (&mut rustc_demangle::v0::Printer)>", linkageName: "_ZN4core3ops8function2Fn4call17hd25a12ecb0781f6cE", scope: !8399, file: !8398, line: 79, type: !8401, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8410, retainedNodes: !8415)
!8415 = !{!8416, !8417}
!8416 = !DILocalVariable(arg: 1, scope: !8414, file: !8398, line: 79, type: !8403)
!8417 = !DILocalVariable(arg: 2, scope: !8414, file: !8398, line: 79, type: !8407)
!8418 = !DILocation(line: 79, column: 5, scope: !8414)
!8419 = distinct !DISubprogram(name: "call<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>, (&mut rustc_demangle::v0::Printer)>", linkageName: "_ZN4core3ops8function2Fn4call17hfefefa743834d7f5E", scope: !8399, file: !8398, line: 79, type: !8401, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8410, retainedNodes: !8420)
!8420 = !{!8421, !8422}
!8421 = !DILocalVariable(arg: 1, scope: !8419, file: !8398, line: 79, type: !8403)
!8422 = !DILocalVariable(arg: 2, scope: !8419, file: !8398, line: 79, type: !8407)
!8423 = !DILocation(line: 79, column: 5, scope: !8419)
!8424 = distinct !DISubprogram(name: "call_mut<fn(core::result::Result<char, ()>) -> char, (core::result::Result<char, ()>)>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17ha8a1afda6865764dE", scope: !8425, file: !8398, line: 166, type: !8426, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8435, retainedNodes: !8429)
!8425 = !DINamespace(name: "FnMut", scope: !8400)
!8426 = !DISubroutineType(types: !8427)
!8427 = !{!252, !8428, !306}
!8428 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut fn(core::result::Result<char, ()>) -> char", baseType: !303, size: 32, align: 32, dwarfAddressSpace: 0)
!8429 = !{!8430, !8431}
!8430 = !DILocalVariable(arg: 1, scope: !8424, file: !8398, line: 166, type: !8428)
!8431 = !DILocalVariable(arg: 2, scope: !8424, file: !8398, line: 166, type: !8432)
!8432 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::result::Result<char, ()>)", file: !2, size: 32, align: 32, elements: !8433, templateParams: !14, identifier: "9fe973cc8652129a9381e172814b151")
!8433 = !{!8434}
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8432, file: !2, baseType: !306, size: 32, align: 32)
!8435 = !{!8436, !8437}
!8436 = !DITemplateTypeParameter(name: "Self", type: !303)
!8437 = !DITemplateTypeParameter(name: "Args", type: !8432)
!8438 = !DILocation(line: 166, column: 5, scope: !8424)
!8439 = !DILocalVariable(name: "self", arg: 1, scope: !8440, file: !6760, line: 1227, type: !306)
!8440 = distinct !DISubprogram(name: "unwrap<char, ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h962290102e1523aaE", scope: !306, file: !6760, line: 1227, type: !8441, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !314, declaration: !8443, retainedNodes: !8444)
!8441 = !DISubroutineType(types: !8442)
!8442 = !{!252, !306, !823}
!8443 = !DISubprogram(name: "unwrap<char, ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h962290102e1523aaE", scope: !306, file: !6760, line: 1227, type: !8441, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !314)
!8444 = !{!8439, !8445, !8447}
!8445 = !DILocalVariable(name: "t", scope: !8446, file: !6760, line: 1232, type: !252, align: 32)
!8446 = distinct !DILexicalBlock(scope: !8440, file: !6760, line: 1232, column: 13)
!8447 = !DILocalVariable(name: "e", scope: !8448, file: !6760, line: 1233, type: !7, align: 8)
!8448 = distinct !DILexicalBlock(scope: !8440, file: !6760, line: 1233, column: 13)
!8449 = !DILocation(line: 1227, column: 19, scope: !8440, inlinedAt: !8450)
!8450 = distinct !DILocation(line: 166, column: 5, scope: !8424)
!8451 = !DILocation(line: 1233, column: 17, scope: !8448, inlinedAt: !8450)
!8452 = !DILocation(line: 1231, column: 15, scope: !8440, inlinedAt: !8450)
!8453 = !DILocation(line: 1231, column: 9, scope: !8440, inlinedAt: !8450)
!8454 = !DILocation(line: 1233, column: 23, scope: !8448, inlinedAt: !8450)
!8455 = !DILocation(line: 1232, column: 16, scope: !8440, inlinedAt: !8450)
!8456 = !DILocation(line: 1232, column: 16, scope: !8446, inlinedAt: !8450)
!8457 = distinct !DISubprogram(name: "call_once<([&u8; 2]), rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h35f121ff29b03874E", scope: !8458, file: !8398, line: 309, type: !912, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8466, retainedNodes: !8460)
!8458 = !DINamespace(name: "{impl#4}", scope: !8459)
!8459 = !DINamespace(name: "impls", scope: !8400)
!8460 = !{!8461, !8462}
!8461 = !DILocalVariable(name: "self", arg: 1, scope: !8457, file: !8398, line: 309, type: !914)
!8462 = !DILocalVariable(name: "args", arg: 2, scope: !8457, file: !8398, line: 309, type: !8463)
!8463 = !DICompositeType(tag: DW_TAG_structure_type, name: "([&u8; 2])", file: !2, size: 64, align: 32, elements: !8464, templateParams: !14, identifier: "ea542f93c2efc2b912d0ef1f881cf86c")
!8464 = !{!8465}
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8463, file: !2, baseType: !344, size: 64, align: 32)
!8466 = !{!8467, !299}
!8467 = !DITemplateTypeParameter(name: "A", type: !8463)
!8468 = !DILocation(line: 309, column: 41, scope: !8457)
!8469 = !DILocation(line: 309, column: 47, scope: !8457)
!8470 = !DILocation(line: 310, column: 21, scope: !8457)
!8471 = !DILocation(line: 311, column: 10, scope: !8457)
!8472 = distinct !DISubprogram(name: "call_once<(&[u8]), rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h92d84ce9a89a78eeE", scope: !8458, file: !8398, line: 309, type: !947, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8479, retainedNodes: !8473)
!8473 = !{!8474, !8475}
!8474 = !DILocalVariable(name: "self", arg: 1, scope: !8472, file: !8398, line: 309, type: !949)
!8475 = !DILocalVariable(name: "args", arg: 2, scope: !8472, file: !8398, line: 309, type: !8476)
!8476 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[u8])", file: !2, size: 64, align: 32, elements: !8477, templateParams: !14, identifier: "3938939041b9edb5de2abc3a61ae416")
!8477 = !{!8478}
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8476, file: !2, baseType: !281, size: 64, align: 32)
!8479 = !{!8480, !294}
!8480 = !DITemplateTypeParameter(name: "A", type: !8476)
!8481 = !DILocation(line: 309, column: 41, scope: !8472)
!8482 = !DILocation(line: 309, column: 47, scope: !8472)
!8483 = !DILocation(line: 310, column: 13, scope: !8472)
!8484 = !DILocation(line: 310, column: 21, scope: !8472)
!8485 = !DILocation(line: 311, column: 10, scope: !8472)
!8486 = distinct !DISubprogram(name: "call_once<(core::result::Result<char, ()>), fn(core::result::Result<char, ()>) -> char>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17hd23666a4b9597abeE", scope: !8458, file: !8398, line: 309, type: !8426, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8490, retainedNodes: !8487)
!8487 = !{!8488, !8489}
!8488 = !DILocalVariable(name: "self", arg: 1, scope: !8486, file: !8398, line: 309, type: !8428)
!8489 = !DILocalVariable(name: "args", arg: 2, scope: !8486, file: !8398, line: 309, type: !8432)
!8490 = !{!8491, !323}
!8491 = !DITemplateTypeParameter(name: "A", type: !8432)
!8492 = !DILocation(line: 309, column: 41, scope: !8486)
!8493 = !DILocation(line: 309, column: 47, scope: !8486)
!8494 = !DILocation(line: 310, column: 13, scope: !8486)
!8495 = !DILocation(line: 310, column: 21, scope: !8486)
!8496 = !DILocation(line: 311, column: 10, scope: !8486)
!8497 = distinct !DISubprogram(name: "call_once<fn(u32) -> core::option::Option<char>, (u32)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17he18d56b5f027f6eaE", scope: !8498, file: !8398, line: 250, type: !8499, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8510, retainedNodes: !8504)
!8498 = !DINamespace(name: "FnOnce", scope: !8400)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{!243, !8501, !48}
!8501 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(u32) -> core::option::Option<char>", baseType: !8502, align: 8, dwarfAddressSpace: 0)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{!243, !48}
!8504 = !{!8505, !8506}
!8505 = !DILocalVariable(arg: 1, scope: !8497, file: !8398, line: 250, type: !8501)
!8506 = !DILocalVariable(arg: 2, scope: !8497, file: !8398, line: 250, type: !8507)
!8507 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u32)", file: !2, size: 32, align: 32, elements: !8508, templateParams: !14, identifier: "cb070f6869bd7662952bd84706924cc8")
!8508 = !{!8509}
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8507, file: !2, baseType: !48, size: 32, align: 32)
!8510 = !{!8511, !8512}
!8511 = !DITemplateTypeParameter(name: "Self", type: !8501)
!8512 = !DITemplateTypeParameter(name: "Args", type: !8507)
!8513 = !DILocation(line: 250, column: 5, scope: !8497)
!8514 = distinct !DISubprogram(name: "call_once<fn(&mut rustc_demangle::v0::Printer) -> core::result::Result<(), core::fmt::Error>, (&mut rustc_demangle::v0::Printer)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17hfe38cb335703ebf9E", scope: !8498, file: !8398, line: 250, type: !8515, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8410, retainedNodes: !8517)
!8515 = !DISubroutineType(types: !8516)
!8516 = !{!1079, !4540, !2323}
!8517 = !{!8518, !8519}
!8518 = !DILocalVariable(arg: 1, scope: !8514, file: !8398, line: 250, type: !4540)
!8519 = !DILocalVariable(arg: 2, scope: !8514, file: !8398, line: 250, type: !8407)
!8520 = !DILocation(line: 250, column: 5, scope: !8514)
!8521 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h98aa5d4eb1c0e2baE", scope: !8522, file: !7058, line: 68, type: !8525, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8527)
!8522 = !DINamespace(name: "add", scope: !8523)
!8523 = !DINamespace(name: "{impl#0}", scope: !8524)
!8524 = !DINamespace(name: "mut_ptr", scope: !401)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{null, !6, !9, !9, !823}
!8527 = !{!8528, !8529, !8530, !8531}
!8528 = !DILocalVariable(name: "this", arg: 1, scope: !8521, file: !7058, line: 68, type: !6)
!8529 = !DILocalVariable(name: "count", arg: 2, scope: !8521, file: !7058, line: 68, type: !9)
!8530 = !DILocalVariable(name: "size", arg: 3, scope: !8521, file: !7058, line: 68, type: !9)
!8531 = !DILocalVariable(name: "msg", scope: !8532, file: !7058, line: 70, type: !659, align: 32)
!8532 = distinct !DILexicalBlock(scope: !8521, file: !7058, line: 70, column: 21)
!8533 = !DILocation(line: 68, column: 43, scope: !8521)
!8534 = !DILocation(line: 70, column: 25, scope: !8532)
!8535 = !DILocation(line: 957, column: 18, scope: !8536)
!8536 = !DILexicalBlockFile(scope: !8521, file: !8537, discriminator: 0)
!8537 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "b0bbe11126e084b85a45fba4c5663912")
!8538 = !DILocation(line: 73, column: 94, scope: !8532)
!8539 = !DILocation(line: 73, column: 59, scope: !8532)
!8540 = !DILocation(line: 73, column: 21, scope: !8532)
!8541 = !DILocation(line: 75, column: 14, scope: !8521)
!8542 = distinct !DISubprogram(name: "runtime_add_nowrap", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h7000176888ff5fa5E", scope: !8522, file: !8537, line: 934, type: !8543, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8545)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{!706, !6, !9, !9}
!8545 = !{!8546, !8547, !8548}
!8546 = !DILocalVariable(name: "this", arg: 1, scope: !8542, file: !8537, line: 934, type: !6)
!8547 = !DILocalVariable(name: "count", arg: 2, scope: !8542, file: !8537, line: 934, type: !9)
!8548 = !DILocalVariable(name: "size", arg: 3, scope: !8542, file: !8537, line: 934, type: !9)
!8549 = !DILocation(line: 934, column: 37, scope: !8542)
!8550 = !DILocation(line: 934, column: 54, scope: !8542)
!8551 = !DILocation(line: 934, column: 68, scope: !8542)
!8552 = !DILocation(line: 2435, column: 27, scope: !8553)
!8553 = !DILexicalBlockFile(scope: !8542, file: !7109, discriminator: 0)
!8554 = !DILocation(line: 2435, column: 9, scope: !8553)
!8555 = !DILocation(line: 947, column: 10, scope: !8542)
!8556 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17h8afcbe697c563539E", scope: !8557, file: !7109, line: 2423, type: !8543, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8558)
!8557 = !DINamespace(name: "runtime_add_nowrap", scope: !8522)
!8558 = !{!8559, !8560, !8561, !8562, !8564}
!8559 = !DILocalVariable(name: "this", arg: 1, scope: !8556, file: !7109, line: 2423, type: !6)
!8560 = !DILocalVariable(name: "count", arg: 2, scope: !8556, file: !7109, line: 2423, type: !9)
!8561 = !DILocalVariable(name: "size", arg: 3, scope: !8556, file: !7109, line: 2423, type: !9)
!8562 = !DILocalVariable(name: "byte_offset", scope: !8563, file: !8537, line: 940, type: !9, align: 32)
!8563 = distinct !DILexicalBlock(scope: !8556, file: !8537, line: 940, column: 21)
!8564 = !DILocalVariable(name: "overflow", scope: !8565, file: !8537, line: 943, type: !706, align: 8)
!8565 = distinct !DILexicalBlock(scope: !8563, file: !8537, line: 943, column: 21)
!8566 = !DILocation(line: 2423, column: 40, scope: !8556)
!8567 = !DILocation(line: 940, column: 51, scope: !8568)
!8568 = !DILexicalBlockFile(scope: !8556, file: !8537, discriminator: 0)
!8569 = !DILocation(line: 940, column: 45, scope: !8568)
!8570 = !DILocation(line: 940, column: 25, scope: !8568)
!8571 = !DILocation(line: 940, column: 30, scope: !8568)
!8572 = !DILocation(line: 940, column: 30, scope: !8563)
!8573 = !DILocalVariable(name: "self", arg: 1, scope: !8574, file: !8575, line: 153, type: !6)
!8574 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h9a776541718064d4E", scope: !8576, file: !8575, line: 153, type: !8578, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1073, retainedNodes: !8580)
!8575 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "473e695c4e056b47688e2be1785e83b5")
!8576 = !DINamespace(name: "{impl#0}", scope: !8577)
!8577 = !DINamespace(name: "const_ptr", scope: !401)
!8578 = !DISubroutineType(types: !8579)
!8579 = !{!9, !6}
!8580 = !{!8573}
!8581 = !DILocation(line: 153, column: 17, scope: !8574, inlinedAt: !8582)
!8582 = distinct !DILocation(line: 943, column: 46, scope: !8563)
!8583 = !DILocalVariable(name: "self", arg: 1, scope: !8584, file: !8575, line: 48, type: !6)
!8584 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h035f4e7684c1b0ebE", scope: !8576, file: !8575, line: 48, type: !8585, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8588, retainedNodes: !8587)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!6, !6}
!8587 = !{!8583}
!8588 = !{!1074, !8589}
!8589 = !DITemplateTypeParameter(name: "U", type: !7)
!8590 = !DILocation(line: 48, column: 26, scope: !8584, inlinedAt: !8591)
!8591 = distinct !DILocation(line: 159, column: 38, scope: !8574, inlinedAt: !8582)
!8592 = !DILocation(line: 159, column: 18, scope: !8574, inlinedAt: !8582)
!8593 = !DILocalVariable(name: "self", arg: 1, scope: !8594, file: !1495, line: 2645, type: !9)
!8594 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h5ed3665df2a5b632E", scope: !1496, file: !1495, line: 2645, type: !8038, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8595)
!8595 = !{!8593, !8596, !8597, !8599}
!8596 = !DILocalVariable(name: "rhs", arg: 2, scope: !8594, file: !1495, line: 2645, type: !9)
!8597 = !DILocalVariable(name: "a", scope: !8598, file: !1495, line: 2646, type: !48, align: 32)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !1495, line: 2646, column: 13)
!8599 = !DILocalVariable(name: "b", scope: !8598, file: !1495, line: 2646, type: !706, align: 8)
!8600 = !DILocation(line: 2645, column: 38, scope: !8594, inlinedAt: !8601)
!8601 = distinct !DILocation(line: 943, column: 53, scope: !8563)
!8602 = !DILocation(line: 2645, column: 44, scope: !8594, inlinedAt: !8601)
!8603 = !DILocation(line: 2646, column: 26, scope: !8594, inlinedAt: !8601)
!8604 = !DILocation(line: 2646, column: 18, scope: !8594, inlinedAt: !8601)
!8605 = !DILocation(line: 2646, column: 18, scope: !8598, inlinedAt: !8601)
!8606 = !DILocation(line: 2646, column: 21, scope: !8594, inlinedAt: !8601)
!8607 = !DILocation(line: 2646, column: 21, scope: !8598, inlinedAt: !8601)
!8608 = !DILocation(line: 2648, column: 10, scope: !8594, inlinedAt: !8601)
!8609 = !DILocation(line: 943, column: 53, scope: !8563)
!8610 = !DILocation(line: 943, column: 29, scope: !8563)
!8611 = !DILocation(line: 943, column: 29, scope: !8565)
!8612 = !DILocation(line: 944, column: 21, scope: !8565)
!8613 = !DILocation(line: 941, column: 32, scope: !8568)
!8614 = !DILocation(line: 941, column: 25, scope: !8568)
!8615 = !DILocation(line: 944, column: 61, scope: !8565)
!8616 = !DILocation(line: 2425, column: 10, scope: !8556)
!8617 = !DILocation(line: 2423, column: 9, scope: !8556)
!8618 = distinct !DISubprogram(name: "cast<[char], char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h337dfc48d9fdebecE", scope: !8620, file: !8619, line: 502, type: !8628, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8635, declaration: !8634, retainedNodes: !8637)
!8619 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "6726e73c6c894eba30d90288586d0f43")
!8620 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[char]>", scope: !400, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8621, templateParams: !250, identifier: "47e9e2a88216e0bac2262c0628566f50")
!8621 = !{!8622}
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8620, file: !2, baseType: !8623, size: 64, align: 32, flags: DIFlagPrivate)
!8623 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [char]", file: !2, size: 64, align: 32, elements: !8624, templateParams: !14, identifier: "6b9da5ae0f7821457acaa4f166b9a773")
!8624 = !{!8625, !8627}
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8623, file: !2, baseType: !8626, size: 32, align: 32)
!8626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32, align: 32, dwarfAddressSpace: 0)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8623, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!8628 = !DISubroutineType(types: !8629)
!8629 = !{!8630, !8620}
!8630 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<char>", scope: !400, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8631, templateParams: !250, identifier: "850905bb8b92b79fcd968d374e45fbed")
!8631 = !{!8632}
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8630, file: !2, baseType: !8633, size: 32, align: 32, flags: DIFlagPrivate)
!8633 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const char", baseType: !252, size: 32, align: 32, dwarfAddressSpace: 0)
!8634 = !DISubprogram(name: "cast<[char], char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h337dfc48d9fdebecE", scope: !8620, file: !8619, line: 502, type: !8628, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8635)
!8635 = !{!251, !8636}
!8636 = !DITemplateTypeParameter(name: "U", type: !252)
!8637 = !{!8638}
!8638 = !DILocalVariable(name: "self", arg: 1, scope: !8618, file: !8619, line: 502, type: !8620)
!8639 = !DILocation(line: 502, column: 26, scope: !8618)
!8640 = !DILocalVariable(name: "self", arg: 1, scope: !8641, file: !8619, line: 401, type: !8620)
!8641 = distinct !DISubprogram(name: "as_ptr<[char]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h016d5ede42b737a6E", scope: !8620, file: !8619, line: 401, type: !8642, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !8648, retainedNodes: !8649)
!8642 = !DISubroutineType(types: !8643)
!8643 = !{!8644, !8620}
!8644 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [char]", file: !2, size: 64, align: 32, elements: !8645, templateParams: !14, identifier: "6eb2d3cae572a9db45f07b45d5a315fd")
!8645 = !{!8646, !8647}
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8644, file: !2, baseType: !8626, size: 32, align: 32)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8644, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!8648 = !DISubprogram(name: "as_ptr<[char]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h016d5ede42b737a6E", scope: !8620, file: !8619, line: 401, type: !8642, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!8649 = !{!8640}
!8650 = !DILocation(line: 401, column: 25, scope: !8641, inlinedAt: !8651)
!8651 = distinct !DILocation(line: 504, column: 42, scope: !8618)
!8652 = !DILocation(line: 408, column: 6, scope: !8641, inlinedAt: !8651)
!8653 = !DILocation(line: 504, column: 42, scope: !8618)
!8654 = !DILocation(line: 505, column: 6, scope: !8618)
!8655 = distinct !DISubprogram(name: "cast<&rustc_demangle::DemangleStyle, ()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5b535dc032b49aeE", scope: !8656, file: !8619, line: 502, type: !8660, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8663, declaration: !8662, retainedNodes: !8664)
!8656 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&rustc_demangle::DemangleStyle>", scope: !400, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8657, templateParams: !7289, identifier: "13c8071ff74f991f534f4961bf467915")
!8657 = !{!8658}
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8656, file: !2, baseType: !8659, size: 32, align: 32, flags: DIFlagPrivate)
!8659 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &rustc_demangle::DemangleStyle", baseType: !7025, size: 32, align: 32, dwarfAddressSpace: 0)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{!1070, !8656}
!8662 = !DISubprogram(name: "cast<&rustc_demangle::DemangleStyle, ()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17ha5b535dc032b49aeE", scope: !8656, file: !8619, line: 502, type: !8660, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8663)
!8663 = !{!7290, !8589}
!8664 = !{!8665}
!8665 = !DILocalVariable(name: "self", arg: 1, scope: !8655, file: !8619, line: 502, type: !8656)
!8666 = !DILocation(line: 502, column: 26, scope: !8655)
!8667 = !DILocalVariable(name: "self", arg: 1, scope: !8668, file: !8619, line: 401, type: !8656)
!8668 = distinct !DISubprogram(name: "as_ptr<&rustc_demangle::DemangleStyle>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9661f0b5a43426deE", scope: !8656, file: !8619, line: 401, type: !8669, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7289, declaration: !8672, retainedNodes: !8673)
!8669 = !DISubroutineType(types: !8670)
!8670 = !{!8671, !8656}
!8671 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &rustc_demangle::DemangleStyle", baseType: !7025, size: 32, align: 32, dwarfAddressSpace: 0)
!8672 = !DISubprogram(name: "as_ptr<&rustc_demangle::DemangleStyle>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h9661f0b5a43426deE", scope: !8656, file: !8619, line: 401, type: !8669, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7289)
!8673 = !{!8667}
!8674 = !DILocation(line: 401, column: 25, scope: !8668, inlinedAt: !8675)
!8675 = distinct !DILocation(line: 504, column: 42, scope: !8655)
!8676 = !DILocation(line: 505, column: 6, scope: !8655)
!8677 = distinct !DISubprogram(name: "cast<&mut [u8], ()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hcb15b3d53cd50a46E", scope: !8678, file: !8619, line: 502, type: !8682, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8685, declaration: !8684, retainedNodes: !8686)
!8678 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&mut [u8]>", scope: !400, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8679, templateParams: !7327, identifier: "2df058db1f2aabf9571b5ba21a9bb103")
!8679 = !{!8680}
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8678, file: !2, baseType: !8681, size: 32, align: 32, flags: DIFlagPrivate)
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &mut [u8]", baseType: !1013, size: 32, align: 32, dwarfAddressSpace: 0)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!1070, !8678}
!8684 = !DISubprogram(name: "cast<&mut [u8], ()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hcb15b3d53cd50a46E", scope: !8678, file: !8619, line: 502, type: !8682, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8685)
!8685 = !{!7328, !8589}
!8686 = !{!8687}
!8687 = !DILocalVariable(name: "self", arg: 1, scope: !8677, file: !8619, line: 502, type: !8678)
!8688 = !DILocation(line: 502, column: 26, scope: !8677)
!8689 = !DILocalVariable(name: "self", arg: 1, scope: !8690, file: !8619, line: 401, type: !8678)
!8690 = distinct !DISubprogram(name: "as_ptr<&mut [u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbea20eca000b9840E", scope: !8678, file: !8619, line: 401, type: !8691, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7327, declaration: !8694, retainedNodes: !8695)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{!8693, !8678}
!8693 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &mut [u8]", baseType: !1013, size: 32, align: 32, dwarfAddressSpace: 0)
!8694 = !DISubprogram(name: "as_ptr<&mut [u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hbea20eca000b9840E", scope: !8678, file: !8619, line: 401, type: !8691, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7327)
!8695 = !{!8689}
!8696 = !DILocation(line: 401, column: 25, scope: !8690, inlinedAt: !8697)
!8697 = distinct !DILocation(line: 504, column: 42, scope: !8677)
!8698 = !DILocation(line: 505, column: 6, scope: !8677)
!8699 = distinct !DISubprogram(name: "from_ref<[char]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h8f8196276a973e56E", scope: !8620, file: !8619, line: 282, type: !8700, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !8706, retainedNodes: !8707)
!8700 = !DISubroutineType(types: !8701)
!8701 = !{!8620, !8702}
!8702 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[char]", file: !2, size: 64, align: 32, elements: !8703, templateParams: !14, identifier: "3bcd4cd08bb9adc4f04834855e692a5d")
!8703 = !{!8704, !8705}
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !8702, file: !2, baseType: !8626, size: 32, align: 32)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8702, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!8706 = !DISubprogram(name: "from_ref<[char]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h8f8196276a973e56E", scope: !8620, file: !8619, line: 282, type: !8700, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!8707 = !{!8708}
!8708 = !DILocalVariable(name: "r", arg: 1, scope: !8699, file: !8619, line: 282, type: !8702)
!8709 = !DILocation(line: 282, column: 27, scope: !8699)
!8710 = !DILocation(line: 285, column: 6, scope: !8699)
!8711 = distinct !DISubprogram(name: "from_ref<&mut [u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17hceb4a26181774aa2E", scope: !8678, file: !8619, line: 282, type: !8712, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7327, declaration: !8714, retainedNodes: !8715)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{!8678, !1049}
!8714 = !DISubprogram(name: "from_ref<&mut [u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17hceb4a26181774aa2E", scope: !8678, file: !8619, line: 282, type: !8712, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7327)
!8715 = !{!8716}
!8716 = !DILocalVariable(name: "r", arg: 1, scope: !8711, file: !8619, line: 282, type: !1049)
!8717 = !DILocation(line: 282, column: 27, scope: !8711)
!8718 = !DILocation(line: 285, column: 6, scope: !8711)
!8719 = distinct !DISubprogram(name: "from_ref<&rustc_demangle::DemangleStyle>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17he281a6a654334f5eE", scope: !8656, file: !8619, line: 282, type: !8720, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7289, declaration: !8722, retainedNodes: !8723)
!8720 = !DISubroutineType(types: !8721)
!8721 = !{!8656, !7024}
!8722 = !DISubprogram(name: "from_ref<&rustc_demangle::DemangleStyle>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17he281a6a654334f5eE", scope: !8656, file: !8619, line: 282, type: !8720, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7289)
!8723 = !{!8724}
!8724 = !DILocalVariable(name: "r", arg: 1, scope: !8719, file: !8619, line: 282, type: !7024)
!8725 = !DILocation(line: 282, column: 27, scope: !8719)
!8726 = !DILocation(line: 285, column: 6, scope: !8719)
!8727 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17he1a74c10ff1d520fE", scope: !8728, file: !7058, line: 68, type: !8525, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8729)
!8728 = !DINamespace(name: "add", scope: !8576)
!8729 = !{!8730, !8731, !8732, !8733}
!8730 = !DILocalVariable(name: "this", arg: 1, scope: !8727, file: !7058, line: 68, type: !6)
!8731 = !DILocalVariable(name: "count", arg: 2, scope: !8727, file: !7058, line: 68, type: !9)
!8732 = !DILocalVariable(name: "size", arg: 3, scope: !8727, file: !7058, line: 68, type: !9)
!8733 = !DILocalVariable(name: "msg", scope: !8734, file: !7058, line: 70, type: !659, align: 32)
!8734 = distinct !DILexicalBlock(scope: !8727, file: !7058, line: 70, column: 21)
!8735 = !DILocation(line: 68, column: 43, scope: !8727)
!8736 = !DILocation(line: 70, column: 25, scope: !8734)
!8737 = !DILocation(line: 859, column: 18, scope: !8738)
!8738 = !DILexicalBlockFile(scope: !8727, file: !8575, discriminator: 0)
!8739 = !DILocation(line: 73, column: 94, scope: !8734)
!8740 = !DILocation(line: 73, column: 59, scope: !8734)
!8741 = !DILocation(line: 73, column: 21, scope: !8734)
!8742 = !DILocation(line: 75, column: 14, scope: !8727)
!8743 = distinct !DISubprogram(name: "runtime_add_nowrap", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h067b619b72e947f6E", scope: !8728, file: !8575, line: 836, type: !8543, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8744)
!8744 = !{!8745, !8746, !8747}
!8745 = !DILocalVariable(name: "this", arg: 1, scope: !8743, file: !8575, line: 836, type: !6)
!8746 = !DILocalVariable(name: "count", arg: 2, scope: !8743, file: !8575, line: 836, type: !9)
!8747 = !DILocalVariable(name: "size", arg: 3, scope: !8743, file: !8575, line: 836, type: !9)
!8748 = !DILocation(line: 836, column: 37, scope: !8743)
!8749 = !DILocation(line: 836, column: 54, scope: !8743)
!8750 = !DILocation(line: 836, column: 68, scope: !8743)
!8751 = !DILocation(line: 2435, column: 27, scope: !8752)
!8752 = !DILexicalBlockFile(scope: !8743, file: !7109, discriminator: 0)
!8753 = !DILocation(line: 2435, column: 9, scope: !8752)
!8754 = !DILocation(line: 849, column: 10, scope: !8743)
!8755 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17h1c6cb852e5f10124E", scope: !8756, file: !7109, line: 2423, type: !8543, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8757)
!8756 = !DINamespace(name: "runtime_add_nowrap", scope: !8728)
!8757 = !{!8758, !8759, !8760, !8761, !8763}
!8758 = !DILocalVariable(name: "this", arg: 1, scope: !8755, file: !7109, line: 2423, type: !6)
!8759 = !DILocalVariable(name: "count", arg: 2, scope: !8755, file: !7109, line: 2423, type: !9)
!8760 = !DILocalVariable(name: "size", arg: 3, scope: !8755, file: !7109, line: 2423, type: !9)
!8761 = !DILocalVariable(name: "byte_offset", scope: !8762, file: !8575, line: 842, type: !9, align: 32)
!8762 = distinct !DILexicalBlock(scope: !8755, file: !8575, line: 842, column: 21)
!8763 = !DILocalVariable(name: "overflow", scope: !8764, file: !8575, line: 845, type: !706, align: 8)
!8764 = distinct !DILexicalBlock(scope: !8762, file: !8575, line: 845, column: 21)
!8765 = !DILocation(line: 2423, column: 40, scope: !8755)
!8766 = !DILocation(line: 842, column: 51, scope: !8767)
!8767 = !DILexicalBlockFile(scope: !8755, file: !8575, discriminator: 0)
!8768 = !DILocation(line: 842, column: 45, scope: !8767)
!8769 = !DILocation(line: 842, column: 25, scope: !8767)
!8770 = !DILocation(line: 842, column: 30, scope: !8767)
!8771 = !DILocation(line: 842, column: 30, scope: !8762)
!8772 = !DILocation(line: 153, column: 17, scope: !8574, inlinedAt: !8773)
!8773 = distinct !DILocation(line: 845, column: 46, scope: !8762)
!8774 = !DILocation(line: 48, column: 26, scope: !8584, inlinedAt: !8775)
!8775 = distinct !DILocation(line: 159, column: 38, scope: !8574, inlinedAt: !8773)
!8776 = !DILocation(line: 159, column: 18, scope: !8574, inlinedAt: !8773)
!8777 = !DILocation(line: 2645, column: 38, scope: !8594, inlinedAt: !8778)
!8778 = distinct !DILocation(line: 845, column: 53, scope: !8762)
!8779 = !DILocation(line: 2645, column: 44, scope: !8594, inlinedAt: !8778)
!8780 = !DILocation(line: 2646, column: 26, scope: !8594, inlinedAt: !8778)
!8781 = !DILocation(line: 2646, column: 18, scope: !8594, inlinedAt: !8778)
!8782 = !DILocation(line: 2646, column: 18, scope: !8598, inlinedAt: !8778)
!8783 = !DILocation(line: 2646, column: 21, scope: !8594, inlinedAt: !8778)
!8784 = !DILocation(line: 2646, column: 21, scope: !8598, inlinedAt: !8778)
!8785 = !DILocation(line: 2648, column: 10, scope: !8594, inlinedAt: !8778)
!8786 = !DILocation(line: 845, column: 53, scope: !8762)
!8787 = !DILocation(line: 845, column: 29, scope: !8762)
!8788 = !DILocation(line: 845, column: 29, scope: !8764)
!8789 = !DILocation(line: 846, column: 21, scope: !8764)
!8790 = !DILocation(line: 843, column: 32, scope: !8767)
!8791 = !DILocation(line: 843, column: 25, scope: !8767)
!8792 = !DILocation(line: 846, column: 61, scope: !8764)
!8793 = !DILocation(line: 2425, column: 10, scope: !8755)
!8794 = !DILocation(line: 2423, column: 9, scope: !8755)
!8795 = distinct !DISubprogram(name: "starts_with<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h25bb1472a29fa3b3E", scope: !889, file: !888, line: 1378, type: !8796, scopeLine: 1378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !3453, retainedNodes: !8798)
!8796 = !DISubroutineType(types: !8797)
!8797 = !{!706, !659, !252}
!8798 = !{!8799, !8800}
!8799 = !DILocalVariable(name: "self", arg: 1, scope: !8795, file: !888, line: 1378, type: !659)
!8800 = !DILocalVariable(name: "pat", arg: 2, scope: !8795, file: !888, line: 1378, type: !252)
!8801 = !DILocation(line: 1378, column: 36, scope: !8795)
!8802 = !DILocation(line: 1378, column: 43, scope: !8795)
!8803 = !DILocation(line: 1379, column: 13, scope: !8795)
!8804 = !DILocation(line: 1380, column: 6, scope: !8795)
!8805 = distinct !DISubprogram(name: "starts_with<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h440890f46d6948d3E", scope: !889, file: !888, line: 1378, type: !8806, scopeLine: 1378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8811, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!706, !659, !659}
!8808 = !{!8809, !8810}
!8809 = !DILocalVariable(name: "self", arg: 1, scope: !8805, file: !888, line: 1378, type: !659)
!8810 = !DILocalVariable(name: "pat", arg: 2, scope: !8805, file: !888, line: 1378, type: !659)
!8811 = !{!8812}
!8812 = !DITemplateTypeParameter(name: "P", type: !659)
!8813 = !DILocation(line: 1378, column: 36, scope: !8805)
!8814 = !DILocation(line: 1378, column: 43, scope: !8805)
!8815 = !DILocation(line: 1379, column: 13, scope: !8805)
!8816 = !DILocation(line: 1380, column: 6, scope: !8805)
!8817 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h835445ad7a164e2fE", scope: !889, file: !888, line: 1107, type: !8818, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8820)
!8818 = !DISubroutineType(types: !8819)
!8819 = !{!7092, !659}
!8820 = !{!8821}
!8821 = !DILocalVariable(name: "self", arg: 1, scope: !8817, file: !888, line: 1107, type: !659)
!8822 = !DILocation(line: 1107, column: 25, scope: !8817)
!8823 = !DILocation(line: 1108, column: 51, scope: !8817)
!8824 = !DILocation(line: 1108, column: 9, scope: !8817)
!8825 = !DILocation(line: 1109, column: 6, scope: !8817)
!8826 = distinct !DISubprogram(name: "is_char_boundary", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h23cd1c400a6aaa96E", scope: !889, file: !888, line: 361, type: !8827, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8829)
!8827 = !DISubroutineType(types: !8828)
!8828 = !{!706, !659, !9}
!8829 = !{!8830, !8831}
!8830 = !DILocalVariable(name: "self", arg: 1, scope: !8826, file: !888, line: 361, type: !659)
!8831 = !DILocalVariable(name: "index", arg: 2, scope: !8826, file: !888, line: 361, type: !9)
!8832 = !DILocation(line: 361, column: 35, scope: !8826)
!8833 = !DILocation(line: 361, column: 42, scope: !8826)
!8834 = !DILocation(line: 366, column: 12, scope: !8826)
!8835 = !DILocation(line: 367, column: 20, scope: !8826)
!8836 = !DILocation(line: 384, column: 6, scope: !8826)
!8837 = !DILocation(line: 370, column: 26, scope: !8826)
!8838 = !DILocation(line: 370, column: 12, scope: !8826)
!8839 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !8840)
!8840 = distinct !DILocation(line: 382, column: 18, scope: !8826)
!8841 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !8840)
!8842 = !DILocation(line: 382, column: 18, scope: !8826)
!8843 = !DILocation(line: 382, column: 13, scope: !8826)
!8844 = !DILocation(line: 380, column: 27, scope: !8826)
!8845 = !DILocation(line: 380, column: 13, scope: !8826)
!8846 = !DILocation(line: 370, column: 9, scope: !8826)
!8847 = !DILocation(line: 382, column: 36, scope: !8826)
!8848 = distinct !DISubprogram(name: "trim_start_matches<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$18trim_start_matches17h5fedf5b6593d03b4E", scope: !889, file: !888, line: 2381, type: !8849, scopeLine: 2381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8811, retainedNodes: !8851)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!659, !659, !659}
!8851 = !{!8852, !8853, !8854, !8856, !8893}
!8852 = !DILocalVariable(name: "self", arg: 1, scope: !8848, file: !888, line: 2381, type: !659)
!8853 = !DILocalVariable(name: "pat", arg: 2, scope: !8848, file: !888, line: 2381, type: !659)
!8854 = !DILocalVariable(name: "i", scope: !8855, file: !888, line: 2382, type: !9, align: 32)
!8855 = distinct !DILexicalBlock(scope: !8848, file: !888, line: 2382, column: 9)
!8856 = !DILocalVariable(name: "matcher", scope: !8857, file: !888, line: 2383, type: !8858, align: 64)
!8857 = distinct !DILexicalBlock(scope: !8855, file: !888, line: 2383, column: 9)
!8858 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcher", scope: !3440, file: !2, size: 512, align: 64, flags: DIFlagPublic, elements: !8859, templateParams: !14, identifier: "dda102b44addf191a186de4765f7a94b")
!8859 = !{!8860, !8861, !8862}
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !8858, file: !2, baseType: !659, size: 64, align: 32, offset: 384, flags: DIFlagPrivate)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !8858, file: !2, baseType: !659, size: 64, align: 32, offset: 448, flags: DIFlagPrivate)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "searcher", scope: !8858, file: !2, baseType: !8863, size: 384, align: 64, flags: DIFlagPrivate)
!8863 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcherImpl", scope: !3440, file: !2, size: 384, align: 64, flags: DIFlagPrivate, elements: !8864, templateParams: !14, identifier: "37b6cbe6492adce69a7105c4284a86c1")
!8864 = !{!8865}
!8865 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8863, file: !2, size: 384, align: 64, elements: !8866, templateParams: !14, identifier: "71e5b85b3edc7a83b3e29c2ff4073d2e", discriminator: !8892)
!8866 = !{!8867, !8878}
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "Empty", scope: !8865, file: !2, baseType: !8868, size: 384, align: 64, extraData: i32 0)
!8868 = !DICompositeType(tag: DW_TAG_structure_type, name: "Empty", scope: !8863, file: !2, size: 384, align: 64, flags: DIFlagPrivate, elements: !8869, templateParams: !14, identifier: "9743e2c2de42a6a6e3bcc1477536a335")
!8869 = !{!8870}
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8868, file: !2, baseType: !8871, size: 96, align: 32, offset: 32, flags: DIFlagPrivate)
!8871 = !DICompositeType(tag: DW_TAG_structure_type, name: "EmptyNeedle", scope: !3440, file: !2, size: 96, align: 32, flags: DIFlagPrivate, elements: !8872, templateParams: !14, identifier: "f8cb550a303123ed2ddcd5b0beaf3595")
!8872 = !{!8873, !8874, !8875, !8876, !8877}
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !8871, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPrivate)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !8871, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_fw", scope: !8871, file: !2, baseType: !706, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_bw", scope: !8871, file: !2, baseType: !706, size: 8, align: 8, offset: 72, flags: DIFlagPrivate)
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "is_finished", scope: !8871, file: !2, baseType: !706, size: 8, align: 8, offset: 80, flags: DIFlagPrivate)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "TwoWay", scope: !8865, file: !2, baseType: !8879, size: 384, align: 64, extraData: i32 1)
!8879 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWay", scope: !8863, file: !2, size: 384, align: 64, flags: DIFlagPrivate, elements: !8880, templateParams: !14, identifier: "c49ed6a8d46afa1d9e8eb62950a5a92a")
!8880 = !{!8881}
!8881 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8879, file: !2, baseType: !8882, size: 320, align: 64, offset: 64, flags: DIFlagPrivate)
!8882 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWaySearcher", scope: !3440, file: !2, size: 320, align: 64, flags: DIFlagPrivate, elements: !8883, templateParams: !14, identifier: "e1302328977871ab5364dbe2d05cb038")
!8883 = !{!8884, !8885, !8886, !8887, !8888, !8889, !8890, !8891}
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos", scope: !8882, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos_back", scope: !8882, file: !2, baseType: !9, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !8882, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "byteset", scope: !8882, file: !2, baseType: !765, size: 64, align: 64, flags: DIFlagPrivate)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !8882, file: !2, baseType: !9, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !8882, file: !2, baseType: !9, size: 32, align: 32, offset: 192, flags: DIFlagPrivate)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !8882, file: !2, baseType: !9, size: 32, align: 32, offset: 224, flags: DIFlagPrivate)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "memory_back", scope: !8882, file: !2, baseType: !9, size: 32, align: 32, offset: 256, flags: DIFlagPrivate)
!8892 = !DIDerivedType(tag: DW_TAG_member, scope: !8863, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!8893 = !DILocalVariable(name: "a", scope: !8894, file: !888, line: 2384, type: !9, align: 32)
!8894 = distinct !DILexicalBlock(scope: !8857, file: !888, line: 2384, column: 53)
!8895 = !DILocation(line: 2381, column: 43, scope: !8848)
!8896 = !DILocation(line: 2381, column: 50, scope: !8848)
!8897 = !DILocation(line: 2382, column: 13, scope: !8855)
!8898 = !DILocation(line: 2383, column: 13, scope: !8857)
!8899 = !DILocation(line: 2382, column: 26, scope: !8848)
!8900 = !DILocation(line: 2383, column: 31, scope: !8855)
!8901 = !DILocation(line: 2384, column: 39, scope: !8894)
!8902 = !DILocation(line: 2384, column: 31, scope: !8894)
!8903 = !DILocation(line: 2384, column: 16, scope: !8894)
!8904 = !DILocation(line: 2384, column: 22, scope: !8894)
!8905 = !DILocation(line: 2385, column: 13, scope: !8894)
!8906 = !DILocation(line: 2384, column: 9, scope: !8857)
!8907 = !DILocation(line: 2388, column: 37, scope: !8857)
!8908 = !DILocation(line: 2388, column: 45, scope: !8857)
!8909 = !DILocation(line: 2388, column: 23, scope: !8857)
!8910 = !DILocation(line: 2389, column: 6, scope: !8848)
!8911 = !DILocation(line: 2381, column: 5, scope: !8848)
!8912 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17hc430909d20144131E", scope: !889, file: !888, line: 141, type: !8913, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !8915)
!8913 = !DISubroutineType(types: !8914)
!8914 = !{!9, !659}
!8915 = !{!8916}
!8916 = !DILocalVariable(name: "self", arg: 1, scope: !8912, file: !888, line: 141, type: !659)
!8917 = !DILocation(line: 141, column: 22, scope: !8912)
!8918 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !8919)
!8919 = distinct !DILocation(line: 142, column: 14, scope: !8912)
!8920 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !8919)
!8921 = !DILocation(line: 142, column: 14, scope: !8912)
!8922 = !DILocation(line: 143, column: 6, scope: !8912)
!8923 = distinct !DISubprogram(name: "find<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4find17h5ff0cd4fe64abb93E", scope: !889, file: !888, line: 1454, type: !8924, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8811, retainedNodes: !8926)
!8924 = !DISubroutineType(types: !8925)
!8925 = !{!6624, !659, !659}
!8926 = !{!8927, !8928}
!8927 = !DILocalVariable(name: "self", arg: 1, scope: !8923, file: !888, line: 1454, type: !659)
!8928 = !DILocalVariable(name: "pat", arg: 2, scope: !8923, file: !888, line: 1454, type: !659)
!8929 = !DILocation(line: 1454, column: 29, scope: !8923)
!8930 = !DILocation(line: 1454, column: 36, scope: !8923)
!8931 = !DILocation(line: 1455, column: 13, scope: !8923)
!8932 = !DILocation(line: 1455, column: 33, scope: !8923)
!8933 = !DILocation(line: 1455, column: 46, scope: !8923)
!8934 = !DILocation(line: 1456, column: 6, scope: !8923)
!8935 = distinct !DISubprogram(name: "find<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4find17hce650607de5fdb51E", scope: !889, file: !888, line: 1454, type: !8936, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !3453, retainedNodes: !8938)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!6624, !659, !252}
!8938 = !{!8939, !8940}
!8939 = !DILocalVariable(name: "self", arg: 1, scope: !8935, file: !888, line: 1454, type: !659)
!8940 = !DILocalVariable(name: "pat", arg: 2, scope: !8935, file: !888, line: 1454, type: !252)
!8941 = !DILocation(line: 1454, column: 29, scope: !8935)
!8942 = !DILocation(line: 1454, column: 36, scope: !8935)
!8943 = !DILocation(line: 1455, column: 13, scope: !8935)
!8944 = !DILocation(line: 1455, column: 33, scope: !8935)
!8945 = !DILocation(line: 1455, column: 46, scope: !8935)
!8946 = !DILocation(line: 1456, column: 6, scope: !8935)
!8947 = distinct !DISubprogram(name: "find<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4find17hfa4cba738df6c1b8E", scope: !889, file: !888, line: 1454, type: !8948, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8953, retainedNodes: !8950)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!6624, !659, !7087}
!8950 = !{!8951, !8952}
!8951 = !DILocalVariable(name: "self", arg: 1, scope: !8947, file: !888, line: 1454, type: !659)
!8952 = !DILocalVariable(name: "pat", arg: 2, scope: !8947, file: !888, line: 1454, type: !7087)
!8953 = !{!8954}
!8954 = !DITemplateTypeParameter(name: "P", type: !7087)
!8955 = !DILocation(line: 1454, column: 29, scope: !8947)
!8956 = !DILocation(line: 1454, column: 36, scope: !8947)
!8957 = !DILocation(line: 1455, column: 13, scope: !8947)
!8958 = !DILocation(line: 1455, column: 33, scope: !8947)
!8959 = !DILocation(line: 1455, column: 46, scope: !8947)
!8960 = !DILocation(line: 1456, column: 6, scope: !8947)
!8961 = distinct !DISubprogram(name: "{closure#0}<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h31d63c40ab02e035E", scope: !8962, file: !888, line: 1455, type: !8963, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8953, retainedNodes: !8970)
!8962 = !DINamespace(name: "find", scope: !889)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{!9, !8965, !8966}
!8965 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", scope: !8962, file: !2, align: 8, elements: !14, identifier: "b0786e0f8340ee186b1792e814846f77")
!8966 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 64, align: 32, elements: !8967, templateParams: !14, identifier: "2f134127956ac419dda29236a1891616")
!8967 = !{!8968, !8969}
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8966, file: !2, baseType: !9, size: 32, align: 32)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8966, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!8970 = !{!8971, !8973, !8974}
!8971 = !DILocalVariable(name: "i", scope: !8972, file: !888, line: 1455, type: !9, align: 32)
!8972 = distinct !DILexicalBlock(scope: !8961, file: !888, line: 1455, column: 59)
!8973 = !DILocalVariable(arg: 1, scope: !8961, file: !888, line: 1455, type: !8965)
!8974 = !DILocalVariable(arg: 2, scope: !8961, file: !888, line: 1455, type: !8966)
!8975 = !DILocation(line: 1455, column: 50, scope: !8961)
!8976 = !DILocation(line: 1455, column: 51, scope: !8961)
!8977 = !DILocation(line: 1455, column: 52, scope: !8961)
!8978 = !DILocation(line: 1455, column: 52, scope: !8972)
!8979 = !DILocation(line: 1455, column: 60, scope: !8961)
!8980 = distinct !DISubprogram(name: "{closure#0}<&str>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h6c6ffe772a22f8efE", scope: !8962, file: !888, line: 1455, type: !8981, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8811, retainedNodes: !8984)
!8981 = !DISubroutineType(types: !8982)
!8982 = !{!9, !8983, !8966}
!8983 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&str>", scope: !8962, file: !2, align: 8, elements: !14, identifier: "83c031b021f3d059cd75dc525223e2d2")
!8984 = !{!8985, !8987, !8988}
!8985 = !DILocalVariable(name: "i", scope: !8986, file: !888, line: 1455, type: !9, align: 32)
!8986 = distinct !DILexicalBlock(scope: !8980, file: !888, line: 1455, column: 59)
!8987 = !DILocalVariable(arg: 1, scope: !8980, file: !888, line: 1455, type: !8983)
!8988 = !DILocalVariable(arg: 2, scope: !8980, file: !888, line: 1455, type: !8966)
!8989 = !DILocation(line: 1455, column: 50, scope: !8980)
!8990 = !DILocation(line: 1455, column: 51, scope: !8980)
!8991 = !DILocation(line: 1455, column: 52, scope: !8980)
!8992 = !DILocation(line: 1455, column: 52, scope: !8986)
!8993 = !DILocation(line: 1455, column: 60, scope: !8980)
!8994 = distinct !DISubprogram(name: "{closure#0}<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$4find28_$u7b$$u7b$closure$u7d$$u7d$17h8b1e4e775925a075E", scope: !8962, file: !888, line: 1455, type: !8995, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !3453, retainedNodes: !8998)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{!9, !8997, !8966}
!8997 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char>", scope: !8962, file: !2, align: 8, elements: !14, identifier: "abe78b998e66406f0d485bd57d35872")
!8998 = !{!8999, !9001, !9002}
!8999 = !DILocalVariable(name: "i", scope: !9000, file: !888, line: 1455, type: !9, align: 32)
!9000 = distinct !DILexicalBlock(scope: !8994, file: !888, line: 1455, column: 59)
!9001 = !DILocalVariable(arg: 1, scope: !8994, file: !888, line: 1455, type: !8997)
!9002 = !DILocalVariable(arg: 2, scope: !8994, file: !888, line: 1455, type: !8966)
!9003 = !DILocation(line: 1455, column: 50, scope: !8994)
!9004 = !DILocation(line: 1455, column: 51, scope: !8994)
!9005 = !DILocation(line: 1455, column: 52, scope: !8994)
!9006 = !DILocation(line: 1455, column: 52, scope: !9000)
!9007 = !DILocation(line: 1455, column: 60, scope: !8994)
!9008 = distinct !DISubprogram(name: "bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hee061ce74cf188a3E", scope: !889, file: !888, line: 1130, type: !9009, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9011)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{!520, !659}
!9011 = !{!9012}
!9012 = !DILocalVariable(name: "self", arg: 1, scope: !9008, file: !888, line: 1130, type: !659)
!9013 = !DILocation(line: 1130, column: 18, scope: !9008)
!9014 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !9015)
!9015 = distinct !DILocation(line: 1131, column: 20, scope: !9008)
!9016 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !9015)
!9017 = !DILocation(line: 1131, column: 20, scope: !9008)
!9018 = !DILocation(line: 1131, column: 31, scope: !9008)
!9019 = !DILocation(line: 1131, column: 38, scope: !9008)
!9020 = !DILocation(line: 1132, column: 6, scope: !9008)
!9021 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4632d50c6725dcb1E", scope: !889, file: !888, line: 1050, type: !9022, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9024)
!9022 = !DISubroutineType(types: !9023)
!9023 = !{!781, !659}
!9024 = !{!9025}
!9025 = !DILocalVariable(name: "self", arg: 1, scope: !9021, file: !888, line: 1050, type: !659)
!9026 = !DILocation(line: 1050, column: 18, scope: !9021)
!9027 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !9028)
!9028 = distinct !DILocation(line: 1051, column: 28, scope: !9021)
!9029 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !9028)
!9030 = !DILocation(line: 1051, column: 28, scope: !9021)
!9031 = !DILocation(line: 1051, column: 39, scope: !9021)
!9032 = !DILocation(line: 1052, column: 6, scope: !9021)
!9033 = distinct !DISubprogram(name: "parse<usize>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17he147b8d5c70730b2E", scope: !889, file: !888, line: 2701, type: !8325, scopeLine: 2701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !9036, retainedNodes: !9034)
!9034 = !{!9035}
!9035 = !DILocalVariable(name: "self", arg: 1, scope: !9033, file: !888, line: 2701, type: !659)
!9036 = !{!9037}
!9037 = !DITemplateTypeParameter(name: "F", type: !9)
!9038 = !DILocation(line: 2701, column: 30, scope: !9033)
!9039 = !DILocation(line: 2702, column: 9, scope: !9033)
!9040 = !DILocation(line: 2703, column: 6, scope: !9033)
!9041 = distinct !DISubprogram(name: "split<char>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5split17hf58520c1cbf0b29fE", scope: !889, file: !888, line: 1628, type: !9042, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !3453, retainedNodes: !9044)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{!3431, !659, !252}
!9044 = !{!9045, !9046}
!9045 = !DILocalVariable(name: "self", arg: 1, scope: !9041, file: !888, line: 1628, type: !659)
!9046 = !DILocalVariable(name: "pat", arg: 2, scope: !9041, file: !888, line: 1628, type: !252)
!9047 = !DILocation(line: 1628, column: 30, scope: !9041)
!9048 = !DILocation(line: 1628, column: 37, scope: !9041)
!9049 = !DILocation(line: 1631, column: 23, scope: !9041)
!9050 = !DILocation(line: 1632, column: 26, scope: !9041)
!9051 = !DILocation(line: 1629, column: 15, scope: !9041)
!9052 = !DILocation(line: 1629, column: 9, scope: !9041)
!9053 = !DILocation(line: 1636, column: 6, scope: !9041)
!9054 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17ha60d5b011937e916E", scope: !889, file: !888, line: 161, type: !704, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9055)
!9055 = !{!9056}
!9056 = !DILocalVariable(name: "self", arg: 1, scope: !9054, file: !888, line: 161, type: !659)
!9057 = !DILocation(line: 161, column: 27, scope: !9054)
!9058 = !DILocation(line: 162, column: 14, scope: !9054)
!9059 = !DILocation(line: 162, column: 9, scope: !9054)
!9060 = !DILocation(line: 163, column: 6, scope: !9054)
!9061 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h02573a03cf6f1c4eE", scope: !3434, file: !9062, line: 660, type: !9063, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !3453, declaration: !9066, retainedNodes: !9067)
!9062 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "5d5947d948aa788fc646eb2f10b2054a")
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!1256, !9065}
!9065 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::SplitInternal<char>", baseType: !3434, size: 32, align: 32, dwarfAddressSpace: 0)
!9066 = !DISubprogram(name: "next<char>", linkageName: "_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17h02573a03cf6f1c4eE", scope: !3434, file: !9062, line: 660, type: !9063, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3453)
!9067 = !{!9068, !9069, !9071, !9073, !9074}
!9068 = !DILocalVariable(name: "self", arg: 1, scope: !9061, file: !9062, line: 660, type: !9065)
!9069 = !DILocalVariable(name: "haystack", scope: !9070, file: !9062, line: 665, type: !659, align: 32)
!9070 = distinct !DILexicalBlock(scope: !9061, file: !9062, line: 665, column: 9)
!9071 = !DILocalVariable(name: "a", scope: !9072, file: !9062, line: 668, type: !9, align: 32)
!9072 = distinct !DILexicalBlock(scope: !9070, file: !9062, line: 668, column: 13)
!9073 = !DILocalVariable(name: "b", scope: !9072, file: !9062, line: 668, type: !9, align: 32)
!9074 = !DILocalVariable(name: "elt", scope: !9075, file: !9062, line: 669, type: !659, align: 32)
!9075 = distinct !DILexicalBlock(scope: !9072, file: !9062, line: 669, column: 17)
!9076 = !DILocation(line: 660, column: 13, scope: !9061)
!9077 = !DILocation(line: 661, column: 12, scope: !9061)
!9078 = !DILocation(line: 665, column: 37, scope: !9061)
!9079 = !DILocation(line: 665, column: 13, scope: !9070)
!9080 = !DILocation(line: 666, column: 28, scope: !9070)
!9081 = !DILocation(line: 666, column: 15, scope: !9070)
!9082 = !DILocation(line: 666, column: 9, scope: !9070)
!9083 = !DILocation(line: 662, column: 20, scope: !9061)
!9084 = !DILocation(line: 675, column: 6, scope: !9061)
!9085 = !DILocation(line: 668, column: 19, scope: !9070)
!9086 = !DILocation(line: 668, column: 19, scope: !9072)
!9087 = !DILocation(line: 668, column: 22, scope: !9070)
!9088 = !DILocation(line: 668, column: 22, scope: !9072)
!9089 = !DILocation(line: 669, column: 50, scope: !9072)
!9090 = !DILocation(line: 669, column: 36, scope: !9072)
!9091 = !DILocation(line: 669, column: 21, scope: !9075)
!9092 = !DILocation(line: 670, column: 17, scope: !9075)
!9093 = !DILocation(line: 671, column: 17, scope: !9075)
!9094 = !DILocation(line: 672, column: 13, scope: !9070)
!9095 = !DILocation(line: 673, column: 26, scope: !9070)
!9096 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17ha220dca85a589e1fE", scope: !781, file: !9062, line: 159, type: !9097, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !9100, retainedNodes: !9101)
!9097 = !DISubroutineType(types: !9098)
!9098 = !{!659, !9099}
!9099 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::Chars", baseType: !781, size: 32, align: 32, dwarfAddressSpace: 0)
!9100 = !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17ha220dca85a589e1fE", scope: !781, file: !9062, line: 159, type: !9097, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!9101 = !{!9102}
!9102 = !DILocalVariable(name: "self", arg: 1, scope: !9096, file: !9062, line: 159, type: !9099)
!9103 = !DILocation(line: 159, column: 19, scope: !9096)
!9104 = !DILocation(line: 161, column: 48, scope: !9096)
!9105 = !DILocation(line: 161, column: 18, scope: !9096)
!9106 = !DILocation(line: 162, column: 6, scope: !9096)
!9107 = distinct !DISubprogram(name: "count_chars", linkageName: "_ZN4core3str5count11count_chars17h26e4e8a2a60a09eaE", scope: !9109, file: !9108, line: 27, type: !8913, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9110)
!9108 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/count.rs", directory: "", checksumkind: CSK_MD5, checksum: "167d0e85f4bf5ca9cc19a4e6b26841ba")
!9109 = !DINamespace(name: "count", scope: !522)
!9110 = !{!9111}
!9111 = !DILocalVariable(name: "s", arg: 1, scope: !9107, file: !9108, line: 27, type: !659)
!9112 = !DILocation(line: 27, column: 27, scope: !9107)
!9113 = !DILocation(line: 28, column: 49, scope: !9107)
!9114 = !DILocation(line: 28, column: 57, scope: !9107)
!9115 = !DILocation(line: 28, column: 47, scope: !9107)
!9116 = !DILocation(line: 35, column: 9, scope: !9107)
!9117 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !9118)
!9118 = distinct !DILocation(line: 33, column: 35, scope: !9107)
!9119 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !9118)
!9120 = !DILocation(line: 33, column: 35, scope: !9107)
!9121 = !DILocation(line: 33, column: 9, scope: !9107)
!9122 = !DILocation(line: 37, column: 2, scope: !9107)
!9123 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked17h6bc6de164eca45edE", scope: !9125, file: !9124, line: 196, type: !9127, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9129)
!9124 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "de595381df0e1d6f75d5ae5278f53e2f")
!9125 = !DINamespace(name: "{impl#7}", scope: !9126)
!9126 = !DINamespace(name: "traits", scope: !522)
!9127 = !DISubroutineType(types: !9128)
!9128 = !{!832, !1019, !832, !823}
!9129 = !{!9130, !9131, !9132, !9138}
!9130 = !DILocalVariable(name: "self", arg: 1, scope: !9123, file: !9124, line: 196, type: !1019)
!9131 = !DILocalVariable(name: "slice", arg: 2, scope: !9123, file: !9124, line: 196, type: !832)
!9132 = !DILocalVariable(name: "slice", scope: !9133, file: !9124, line: 197, type: !9134, align: 32)
!9133 = distinct !DILexicalBlock(scope: !9123, file: !9124, line: 197, column: 9)
!9134 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 64, align: 32, elements: !9135, templateParams: !14, identifier: "a10360edaf335c418dbc95bccd0cb05d")
!9135 = !{!9136, !9137}
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !9134, file: !2, baseType: !284, size: 32, align: 32)
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9134, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!9138 = !DILocalVariable(name: "new_len", scope: !9139, file: !9124, line: 218, type: !9, align: 32)
!9139 = distinct !DILexicalBlock(scope: !9133, file: !9124, line: 218, column: 13)
!9140 = !DILocation(line: 196, column: 29, scope: !9123)
!9141 = !DILocation(line: 196, column: 35, scope: !9123)
!9142 = !DILocation(line: 197, column: 21, scope: !9123)
!9143 = !DILocation(line: 197, column: 13, scope: !9133)
!9144 = !DILocation(line: 77, column: 35, scope: !9145)
!9145 = !DILexicalBlockFile(scope: !9133, file: !7058, discriminator: 0)
!9146 = !DILocation(line: 211, column: 36, scope: !9133)
!9147 = !DILocation(line: 78, column: 17, scope: !9145)
!9148 = !DILocation(line: 218, column: 27, scope: !9133)
!9149 = !DILocation(line: 218, column: 17, scope: !9139)
!9150 = !DILocation(line: 219, column: 45, scope: !9139)
!9151 = !DILocalVariable(name: "self", arg: 1, scope: !9152, file: !8575, line: 829, type: !404)
!9152 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h502bd91a235389feE", scope: !8576, file: !8575, line: 829, type: !9153, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !9155)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!404, !404, !9, !823}
!9155 = !{!9151, !9156}
!9156 = !DILocalVariable(name: "count", arg: 2, scope: !9152, file: !8575, line: 829, type: !9)
!9157 = !DILocation(line: 829, column: 29, scope: !9152, inlinedAt: !9158)
!9158 = distinct !DILocation(line: 219, column: 54, scope: !9139)
!9159 = !DILocation(line: 829, column: 35, scope: !9152, inlinedAt: !9158)
!9160 = !DILocation(line: 77, column: 35, scope: !9161, inlinedAt: !9158)
!9161 = !DILexicalBlockFile(scope: !9152, file: !7058, discriminator: 0)
!9162 = !DILocation(line: 78, column: 17, scope: !9161, inlinedAt: !9158)
!9163 = !DILocation(line: 863, column: 18, scope: !9152, inlinedAt: !9158)
!9164 = !DILocation(line: 219, column: 13, scope: !9139)
!9165 = !DILocation(line: 221, column: 6, scope: !9123)
!9166 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$13get_unchecked18precondition_check17hfe47b626e72dec1eE", scope: !9167, file: !7058, line: 68, type: !9168, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9170)
!9167 = !DINamespace(name: "get_unchecked", scope: !9125)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{null, !9, !9, !9, !823}
!9170 = !{!9171, !9172, !9173, !9174}
!9171 = !DILocalVariable(name: "start", arg: 1, scope: !9166, file: !7058, line: 68, type: !9)
!9172 = !DILocalVariable(name: "end", arg: 2, scope: !9166, file: !7058, line: 68, type: !9)
!9173 = !DILocalVariable(name: "len", arg: 3, scope: !9166, file: !7058, line: 68, type: !9)
!9174 = !DILocalVariable(name: "msg", scope: !9175, file: !7058, line: 70, type: !659, align: 32)
!9175 = distinct !DILexicalBlock(scope: !9166, file: !7058, line: 70, column: 21)
!9176 = !DILocation(line: 68, column: 43, scope: !9166)
!9177 = !DILocation(line: 70, column: 25, scope: !9175)
!9178 = !DILocation(line: 212, column: 18, scope: !9179)
!9179 = !DILexicalBlockFile(scope: !9166, file: !9124, discriminator: 0)
!9180 = !DILocation(line: 73, column: 94, scope: !9175)
!9181 = !DILocation(line: 73, column: 59, scope: !9175)
!9182 = !DILocation(line: 73, column: 21, scope: !9175)
!9183 = !DILocation(line: 212, column: 34, scope: !9179)
!9184 = !DILocation(line: 75, column: 14, scope: !9166)
!9185 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17he20b2415b532494dE", scope: !9125, file: !9124, line: 168, type: !9186, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9188)
!9186 = !DISubroutineType(types: !9187)
!9187 = !{!1256, !1019, !659}
!9188 = !{!9189, !9190}
!9189 = !DILocalVariable(name: "self", arg: 1, scope: !9185, file: !9124, line: 168, type: !1019)
!9190 = !DILocalVariable(name: "slice", arg: 2, scope: !9185, file: !9124, line: 168, type: !659)
!9191 = !DILocation(line: 168, column: 12, scope: !9185)
!9192 = !DILocation(line: 168, column: 18, scope: !9185)
!9193 = !DILocation(line: 169, column: 12, scope: !9185)
!9194 = !DILocation(line: 178, column: 13, scope: !9185)
!9195 = !DILocation(line: 169, column: 9, scope: !9185)
!9196 = !DILocation(line: 170, column: 22, scope: !9185)
!9197 = !DILocation(line: 170, column: 16, scope: !9185)
!9198 = !DILocation(line: 171, column: 22, scope: !9185)
!9199 = !DILocation(line: 171, column: 16, scope: !9185)
!9200 = !DILocation(line: 176, column: 34, scope: !9185)
!9201 = !DILocation(line: 176, column: 13, scope: !9185)
!9202 = !DILocation(line: 180, column: 6, scope: !9185)
!9203 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$5index17h1420dc6f56d8b256E", scope: !9125, file: !9124, line: 244, type: !9204, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9206)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{!659, !1019, !659, !823}
!9206 = !{!9207, !9208, !9209, !9211, !9212}
!9207 = !DILocalVariable(name: "self", arg: 1, scope: !9203, file: !9124, line: 244, type: !1019)
!9208 = !DILocalVariable(name: "slice", arg: 2, scope: !9203, file: !9124, line: 244, type: !659)
!9209 = !DILocalVariable(name: "start", scope: !9210, file: !9124, line: 245, type: !9, align: 32)
!9210 = distinct !DILexicalBlock(scope: !9203, file: !9124, line: 245, column: 9)
!9211 = !DILocalVariable(name: "end", scope: !9210, file: !9124, line: 245, type: !9, align: 32)
!9212 = !DILocalVariable(name: "s", scope: !9213, file: !9124, line: 247, type: !659, align: 32)
!9213 = distinct !DILexicalBlock(scope: !9210, file: !9124, line: 247, column: 13)
!9214 = !DILocation(line: 244, column: 14, scope: !9203)
!9215 = !DILocation(line: 244, column: 20, scope: !9203)
!9216 = !DILocation(line: 245, column: 14, scope: !9203)
!9217 = !DILocation(line: 245, column: 14, scope: !9210)
!9218 = !DILocation(line: 245, column: 21, scope: !9203)
!9219 = !DILocation(line: 245, column: 21, scope: !9210)
!9220 = !DILocation(line: 246, column: 20, scope: !9210)
!9221 = !DILocation(line: 246, column: 15, scope: !9210)
!9222 = !DILocation(line: 246, column: 9, scope: !9210)
!9223 = !DILocation(line: 247, column: 18, scope: !9210)
!9224 = !DILocation(line: 247, column: 18, scope: !9213)
!9225 = !DILocation(line: 250, column: 6, scope: !9203)
!9226 = !DILocation(line: 248, column: 21, scope: !9210)
!9227 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits117_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeInclusive$LT$usize$GT$$GT$5index17hf132ba7f1588aa4bE", scope: !9228, file: !9124, line: 660, type: !9229, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9231)
!9228 = !DINamespace(name: "{impl#13}", scope: !9126)
!9229 = !DISubroutineType(types: !9230)
!9230 = !{!659, !8352, !659, !823}
!9231 = !{!9232, !9233}
!9232 = !DILocalVariable(name: "self", arg: 1, scope: !9227, file: !9124, line: 660, type: !8352)
!9233 = !DILocalVariable(name: "slice", arg: 2, scope: !9227, file: !9124, line: 660, type: !659)
!9234 = !DILocation(line: 660, column: 14, scope: !9227)
!9235 = !DILocation(line: 660, column: 20, scope: !9227)
!9236 = !DILocation(line: 661, column: 18, scope: !9227)
!9237 = !DILocation(line: 661, column: 12, scope: !9227)
!9238 = !DILocation(line: 664, column: 14, scope: !9227)
!9239 = !DILocation(line: 664, column: 33, scope: !9227)
!9240 = !DILocation(line: 665, column: 6, scope: !9227)
!9241 = !DILocation(line: 662, column: 13, scope: !9227)
!9242 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h722909acf6b633dcE", scope: !9243, file: !9124, line: 29, type: !8806, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9244)
!9243 = !DINamespace(name: "{impl#1}", scope: !9126)
!9244 = !{!9245, !9246}
!9245 = !DILocalVariable(name: "self", arg: 1, scope: !9242, file: !9124, line: 29, type: !659)
!9246 = !DILocalVariable(name: "other", arg: 2, scope: !9242, file: !9124, line: 29, type: !659)
!9247 = !DILocation(line: 29, column: 11, scope: !9242)
!9248 = !DILocation(line: 29, column: 18, scope: !9242)
!9249 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !9250)
!9250 = distinct !DILocation(line: 30, column: 14, scope: !9242)
!9251 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !9250)
!9252 = !DILocation(line: 30, column: 14, scope: !9242)
!9253 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !9254)
!9254 = distinct !DILocation(line: 30, column: 34, scope: !9242)
!9255 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !9254)
!9256 = !DILocation(line: 30, column: 34, scope: !9242)
!9257 = !DILocation(line: 30, column: 9, scope: !9242)
!9258 = !DILocation(line: 31, column: 6, scope: !9242)
!9259 = distinct !DISubprogram(name: "index<core::ops::range::RangeInclusive<usize>>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h01ba9980c8bf38acE", scope: !9260, file: !9124, line: 62, type: !9261, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !9266, retainedNodes: !9263)
!9260 = !DINamespace(name: "{impl#4}", scope: !9126)
!9261 = !DISubroutineType(types: !9262)
!9262 = !{!659, !659, !8352, !823}
!9263 = !{!9264, !9265}
!9264 = !DILocalVariable(name: "self", arg: 1, scope: !9259, file: !9124, line: 62, type: !659)
!9265 = !DILocalVariable(name: "index", arg: 2, scope: !9259, file: !9124, line: 62, type: !8352)
!9266 = !{!9267}
!9267 = !DITemplateTypeParameter(name: "I", type: !8352)
!9268 = !DILocation(line: 62, column: 14, scope: !9259)
!9269 = !DILocation(line: 62, column: 21, scope: !9259)
!9270 = !DILocation(line: 63, column: 15, scope: !9259)
!9271 = !DILocation(line: 64, column: 6, scope: !9259)
!9272 = distinct !DISubprogram(name: "byteset_contains", linkageName: "_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hf10e708e2bd744b9E", scope: !8882, file: !7077, line: 1451, type: !9273, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !9276, retainedNodes: !9277)
!9273 = !DISubroutineType(types: !9274)
!9274 = !{!706, !9275, !13}
!9275 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::TwoWaySearcher", baseType: !8882, size: 32, align: 32, dwarfAddressSpace: 0)
!9276 = !DISubprogram(name: "byteset_contains", linkageName: "_ZN4core3str7pattern14TwoWaySearcher16byteset_contains17hf10e708e2bd744b9E", scope: !8882, file: !7077, line: 1451, type: !9273, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!9277 = !{!9278, !9279}
!9278 = !DILocalVariable(name: "self", arg: 1, scope: !9272, file: !7077, line: 1451, type: !9275)
!9279 = !DILocalVariable(name: "byte", arg: 2, scope: !9272, file: !7077, line: 1451, type: !13)
!9280 = !DILocation(line: 1451, column: 25, scope: !9272)
!9281 = !DILocation(line: 1451, column: 32, scope: !9272)
!9282 = !DILocation(line: 1452, column: 10, scope: !9272)
!9283 = !DILocation(line: 1452, column: 27, scope: !9272)
!9284 = !DILocation(line: 1452, column: 26, scope: !9272)
!9285 = !DILocation(line: 1452, column: 9, scope: !9272)
!9286 = !DILocation(line: 1453, column: 6, scope: !9272)
!9287 = distinct !DISubprogram(name: "next<core::str::pattern::MatchOnly>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17h4d4f9eaa585cdc45E", scope: !8882, file: !7077, line: 1461, type: !9288, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !9305, declaration: !9304, retainedNodes: !9310)
!9288 = !DISubroutineType(types: !9289)
!9289 = !{!9290, !9303, !281, !281, !706}
!9290 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, usize)>", scope: !244, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !9291, templateParams: !14, identifier: "d1344d2569e8f85c11d178db24f53002")
!9291 = !{!9292}
!9292 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9290, file: !2, size: 96, align: 32, elements: !9293, templateParams: !14, identifier: "f7d0f8473aedaa102173da0f57cf6f67", discriminator: !9302)
!9293 = !{!9294, !9298}
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !9292, file: !2, baseType: !9295, size: 96, align: 32, extraData: i32 0)
!9295 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !9290, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !9296, identifier: "a118af482fb14272e218ef23e035527c")
!9296 = !{!9297}
!9297 = !DITemplateTypeParameter(name: "T", type: !8966)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !9292, file: !2, baseType: !9299, size: 96, align: 32, extraData: i32 1)
!9299 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !9290, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !9300, templateParams: !9296, identifier: "c66a8fdba0d0ebb016ca97d1b2aaaab6")
!9300 = !{!9301}
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9299, file: !2, baseType: !8966, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!9302 = !DIDerivedType(tag: DW_TAG_member, scope: !9290, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!9303 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::TwoWaySearcher", baseType: !8882, size: 32, align: 32, dwarfAddressSpace: 0)
!9304 = !DISubprogram(name: "next<core::str::pattern::MatchOnly>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17h4d4f9eaa585cdc45E", scope: !8882, file: !7077, line: 1461, type: !9288, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9305)
!9305 = !{!9306}
!9306 = !DITemplateTypeParameter(name: "S", type: !9307)
!9307 = !DICompositeType(tag: DW_TAG_structure_type, name: "MatchOnly", scope: !3440, file: !2, align: 8, flags: DIFlagPrivate, elements: !9308, templateParams: !14, identifier: "f772a497a001246fab3fd010d9b0cf99")
!9308 = !{!9309}
!9309 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9307, file: !2, align: 8, elements: !14, identifier: "a150b533fe196e713d69f4ab26dbd01f")
!9310 = !{!9311, !9312, !9313, !9314, !9315, !9317, !9319, !9321, !9323, !9325, !9327, !9329, !9331, !9339, !9341}
!9311 = !DILocalVariable(name: "self", arg: 1, scope: !9287, file: !7077, line: 1461, type: !9303)
!9312 = !DILocalVariable(name: "haystack", arg: 2, scope: !9287, file: !7077, line: 1461, type: !281)
!9313 = !DILocalVariable(name: "needle", arg: 3, scope: !9287, file: !7077, line: 1461, type: !281)
!9314 = !DILocalVariable(name: "long_period", arg: 4, scope: !9287, file: !7077, line: 1461, type: !706)
!9315 = !DILocalVariable(name: "old_pos", scope: !9316, file: !7077, line: 1466, type: !9, align: 32)
!9316 = distinct !DILexicalBlock(scope: !9287, file: !7077, line: 1466, column: 9)
!9317 = !DILocalVariable(name: "needle_last", scope: !9318, file: !7077, line: 1467, type: !9, align: 32)
!9318 = distinct !DILexicalBlock(scope: !9316, file: !7077, line: 1467, column: 9)
!9319 = !DILocalVariable(name: "tail_byte", scope: !9320, file: !7077, line: 1472, type: !13, align: 8)
!9320 = distinct !DILexicalBlock(scope: !9318, file: !7077, line: 1472, column: 13)
!9321 = !DILocalVariable(name: "b", scope: !9322, file: !7077, line: 1473, type: !13, align: 8)
!9322 = distinct !DILexicalBlock(scope: !9318, file: !7077, line: 1473, column: 17)
!9323 = !DILocalVariable(name: "start", scope: !9324, file: !7077, line: 1494, type: !9, align: 32)
!9324 = distinct !DILexicalBlock(scope: !9320, file: !7077, line: 1494, column: 13)
!9325 = !DILocalVariable(name: "iter", scope: !9326, file: !7077, line: 1496, type: !1019, align: 32)
!9326 = distinct !DILexicalBlock(scope: !9324, file: !7077, line: 1496, column: 13)
!9327 = !DILocalVariable(name: "i", scope: !9328, file: !7077, line: 1496, type: !9, align: 32)
!9328 = distinct !DILexicalBlock(scope: !9326, file: !7077, line: 1496, column: 42)
!9329 = !DILocalVariable(name: "start", scope: !9330, file: !7077, line: 1507, type: !9, align: 32)
!9330 = distinct !DILexicalBlock(scope: !9324, file: !7077, line: 1507, column: 13)
!9331 = !DILocalVariable(name: "iter", scope: !9332, file: !7077, line: 1508, type: !9333, align: 32)
!9332 = distinct !DILexicalBlock(scope: !9330, file: !7077, line: 1508, column: 13)
!9333 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::ops::range::Range<usize>>", scope: !9334, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !9335, templateParams: !9337, identifier: "baec4cba3bc30031c6bd6eff7c8625ad")
!9334 = !DINamespace(name: "rev", scope: !239)
!9335 = !{!9336}
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !9333, file: !2, baseType: !1019, size: 64, align: 32, flags: DIFlagPrivate)
!9337 = !{!9338}
!9338 = !DITemplateTypeParameter(name: "T", type: !1019)
!9339 = !DILocalVariable(name: "i", scope: !9340, file: !7077, line: 1508, type: !9, align: 32)
!9340 = distinct !DILexicalBlock(scope: !9332, file: !7077, line: 1508, column: 51)
!9341 = !DILocalVariable(name: "match_pos", scope: !9342, file: !7077, line: 1519, type: !9, align: 32)
!9342 = distinct !DILexicalBlock(scope: !9330, file: !7077, line: 1519, column: 13)
!9343 = !DILocation(line: 1461, column: 16, scope: !9287)
!9344 = !DILocation(line: 1461, column: 27, scope: !9287)
!9345 = !DILocation(line: 1461, column: 44, scope: !9287)
!9346 = !DILocation(line: 1461, column: 59, scope: !9287)
!9347 = !DILocation(line: 1494, column: 17, scope: !9324)
!9348 = !DILocation(line: 1496, column: 22, scope: !9326)
!9349 = !DILocation(line: 1507, column: 17, scope: !9330)
!9350 = !DILocation(line: 1508, column: 22, scope: !9332)
!9351 = !DILocation(line: 1466, column: 23, scope: !9287)
!9352 = !DILocation(line: 1466, column: 13, scope: !9316)
!9353 = !DILocation(line: 1467, column: 27, scope: !9316)
!9354 = !DILocation(line: 1467, column: 13, scope: !9318)
!9355 = !DILocation(line: 1468, column: 9, scope: !9318)
!9356 = !DILocation(line: 1472, column: 48, scope: !9318)
!9357 = !DILocation(line: 1472, column: 44, scope: !9318)
!9358 = !DILocation(line: 1472, column: 35, scope: !9318)
!9359 = !DILocation(line: 1472, column: 29, scope: !9318)
!9360 = !DILocation(line: 1473, column: 23, scope: !9318)
!9361 = !DILocation(line: 1472, column: 17, scope: !9320)
!9362 = !DILocation(line: 1473, column: 23, scope: !9322)
!9363 = !DILocation(line: 1480, column: 16, scope: !9320)
!9364 = !DILocation(line: 1475, column: 21, scope: !9318)
!9365 = !DILocation(line: 1476, column: 50, scope: !9318)
!9366 = !DILocation(line: 1476, column: 28, scope: !9318)
!9367 = !DILocation(line: 1529, column: 6, scope: !9287)
!9368 = !DILocation(line: 1485, column: 22, scope: !9320)
!9369 = !DILocation(line: 1485, column: 17, scope: !9320)
!9370 = !DILocation(line: 1480, column: 52, scope: !9320)
!9371 = !DILocation(line: 1480, column: 41, scope: !9320)
!9372 = !DILocation(line: 1481, column: 46, scope: !9320)
!9373 = !DILocation(line: 1481, column: 24, scope: !9320)
!9374 = !DILocation(line: 1486, column: 17, scope: !9320)
!9375 = !DILocation(line: 1495, column: 20, scope: !9320)
!9376 = !DILocation(line: 1487, column: 21, scope: !9320)
!9377 = !DILocation(line: 1488, column: 21, scope: !9320)
!9378 = !DILocation(line: 1487, column: 17, scope: !9320)
!9379 = !DILocation(line: 1495, column: 66, scope: !9320)
!9380 = !DILocation(line: 1495, column: 81, scope: !9320)
!9381 = !DILocation(line: 1495, column: 57, scope: !9320)
!9382 = !DILocation(line: 1495, column: 34, scope: !9320)
!9383 = !DILocation(line: 1495, column: 17, scope: !9320)
!9384 = !DILocation(line: 1496, column: 22, scope: !9324)
!9385 = !DILocation(line: 1496, column: 13, scope: !9326)
!9386 = !DILocation(line: 1496, column: 17, scope: !9326)
!9387 = !DILocation(line: 1496, column: 17, scope: !9328)
!9388 = !DILocation(line: 1497, column: 20, scope: !9328)
!9389 = !DILocation(line: 1507, column: 28, scope: !9324)
!9390 = !DILocation(line: 1507, column: 53, scope: !9324)
!9391 = !DILocation(line: 1507, column: 25, scope: !9324)
!9392 = !DILocation(line: 1507, column: 42, scope: !9324)
!9393 = !DILocation(line: 1508, column: 23, scope: !9330)
!9394 = !DILocation(line: 1508, column: 30, scope: !9330)
!9395 = !DILocation(line: 1508, column: 45, scope: !9330)
!9396 = !DILocation(line: 1508, column: 22, scope: !9330)
!9397 = !DILocation(line: 1508, column: 13, scope: !9332)
!9398 = !DILocation(line: 1508, column: 17, scope: !9332)
!9399 = !DILocation(line: 1508, column: 17, scope: !9340)
!9400 = !DILocation(line: 1509, column: 20, scope: !9340)
!9401 = !DILocation(line: 1519, column: 29, scope: !9330)
!9402 = !DILocation(line: 1519, column: 17, scope: !9342)
!9403 = !DILocation(line: 1522, column: 13, scope: !9342)
!9404 = !DILocation(line: 1523, column: 17, scope: !9342)
!9405 = !DILocation(line: 1524, column: 17, scope: !9342)
!9406 = !DILocation(line: 1523, column: 13, scope: !9342)
!9407 = !DILocation(line: 1527, column: 43, scope: !9342)
!9408 = !DILocation(line: 1527, column: 20, scope: !9342)
!9409 = !DILocation(line: 1509, column: 42, scope: !9340)
!9410 = !DILocation(line: 1509, column: 33, scope: !9340)
!9411 = !DILocation(line: 1510, column: 38, scope: !9340)
!9412 = !DILocation(line: 1510, column: 21, scope: !9340)
!9413 = !DILocation(line: 1511, column: 25, scope: !9340)
!9414 = !DILocation(line: 1512, column: 54, scope: !9340)
!9415 = !DILocation(line: 1512, column: 39, scope: !9340)
!9416 = !DILocation(line: 1512, column: 25, scope: !9340)
!9417 = !DILocation(line: 1511, column: 21, scope: !9340)
!9418 = !DILocation(line: 1497, column: 42, scope: !9328)
!9419 = !DILocation(line: 1497, column: 33, scope: !9328)
!9420 = !DILocation(line: 1498, column: 42, scope: !9328)
!9421 = !DILocation(line: 1498, column: 38, scope: !9328)
!9422 = !DILocation(line: 1498, column: 21, scope: !9328)
!9423 = !DILocation(line: 1499, column: 25, scope: !9328)
!9424 = !DILocation(line: 1500, column: 25, scope: !9328)
!9425 = !DILocation(line: 1499, column: 21, scope: !9328)
!9426 = !DILocation(line: 0, scope: !9427)
!9427 = !DILexicalBlockFile(scope: !9287, file: !626, discriminator: 0)
!9428 = distinct !DISubprogram(name: "next<core::str::pattern::RejectAndMatch>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17hfbf25a28e62a971aE", scope: !8882, file: !7077, line: 1461, type: !9429, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !9449, declaration: !9448, retainedNodes: !9454)
!9429 = !DISubroutineType(types: !9430)
!9430 = !{!9431, !9303, !281, !281, !706}
!9431 = !DICompositeType(tag: DW_TAG_structure_type, name: "SearchStep", scope: !3440, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !9432, templateParams: !14, identifier: "786cc38946f4f44a54a758a93131c8cf")
!9432 = !{!9433}
!9433 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9431, file: !2, size: 96, align: 32, elements: !9434, templateParams: !14, identifier: "20f4698830335fb051177994942f04ed", discriminator: !9447)
!9434 = !{!9435, !9440, !9445}
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "Match", scope: !9433, file: !2, baseType: !9436, size: 96, align: 32, extraData: i32 0)
!9436 = !DICompositeType(tag: DW_TAG_structure_type, name: "Match", scope: !9431, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !9437, templateParams: !14, identifier: "2cca89d2e1c6e5a34880d3a2e593b785")
!9437 = !{!9438, !9439}
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9436, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !9436, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "Reject", scope: !9433, file: !2, baseType: !9441, size: 96, align: 32, extraData: i32 1)
!9441 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reject", scope: !9431, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !9442, templateParams: !14, identifier: "ddbd5f93c03c07b5dfc3348a841b03ba")
!9442 = !{!9443, !9444}
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9441, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!9444 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !9441, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "Done", scope: !9433, file: !2, baseType: !9446, size: 96, align: 32, extraData: i32 2)
!9446 = !DICompositeType(tag: DW_TAG_structure_type, name: "Done", scope: !9431, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14, identifier: "c7a06dd539bfa1ea25f4d38eb3a6010d")
!9447 = !DIDerivedType(tag: DW_TAG_member, scope: !9431, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!9448 = !DISubprogram(name: "next<core::str::pattern::RejectAndMatch>", linkageName: "_ZN4core3str7pattern14TwoWaySearcher4next17hfbf25a28e62a971aE", scope: !8882, file: !7077, line: 1461, type: !9429, scopeLine: 1461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9449)
!9449 = !{!9450}
!9450 = !DITemplateTypeParameter(name: "S", type: !9451)
!9451 = !DICompositeType(tag: DW_TAG_structure_type, name: "RejectAndMatch", scope: !3440, file: !2, align: 8, flags: DIFlagPrivate, elements: !9452, templateParams: !14, identifier: "3bc453e3550a76a3f5cd8cad05225eb0")
!9452 = !{!9453}
!9453 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9451, file: !2, align: 8, elements: !14, identifier: "2e192b73dd2332a2675580657751a97e")
!9454 = !{!9455, !9456, !9457, !9458, !9459, !9461, !9463, !9465, !9467, !9469, !9471, !9473, !9475, !9477, !9479}
!9455 = !DILocalVariable(name: "self", arg: 1, scope: !9428, file: !7077, line: 1461, type: !9303)
!9456 = !DILocalVariable(name: "haystack", arg: 2, scope: !9428, file: !7077, line: 1461, type: !281)
!9457 = !DILocalVariable(name: "needle", arg: 3, scope: !9428, file: !7077, line: 1461, type: !281)
!9458 = !DILocalVariable(name: "long_period", arg: 4, scope: !9428, file: !7077, line: 1461, type: !706)
!9459 = !DILocalVariable(name: "old_pos", scope: !9460, file: !7077, line: 1466, type: !9, align: 32)
!9460 = distinct !DILexicalBlock(scope: !9428, file: !7077, line: 1466, column: 9)
!9461 = !DILocalVariable(name: "needle_last", scope: !9462, file: !7077, line: 1467, type: !9, align: 32)
!9462 = distinct !DILexicalBlock(scope: !9460, file: !7077, line: 1467, column: 9)
!9463 = !DILocalVariable(name: "tail_byte", scope: !9464, file: !7077, line: 1472, type: !13, align: 8)
!9464 = distinct !DILexicalBlock(scope: !9462, file: !7077, line: 1472, column: 13)
!9465 = !DILocalVariable(name: "b", scope: !9466, file: !7077, line: 1473, type: !13, align: 8)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !7077, line: 1473, column: 17)
!9467 = !DILocalVariable(name: "start", scope: !9468, file: !7077, line: 1494, type: !9, align: 32)
!9468 = distinct !DILexicalBlock(scope: !9464, file: !7077, line: 1494, column: 13)
!9469 = !DILocalVariable(name: "iter", scope: !9470, file: !7077, line: 1496, type: !1019, align: 32)
!9470 = distinct !DILexicalBlock(scope: !9468, file: !7077, line: 1496, column: 13)
!9471 = !DILocalVariable(name: "i", scope: !9472, file: !7077, line: 1496, type: !9, align: 32)
!9472 = distinct !DILexicalBlock(scope: !9470, file: !7077, line: 1496, column: 42)
!9473 = !DILocalVariable(name: "start", scope: !9474, file: !7077, line: 1507, type: !9, align: 32)
!9474 = distinct !DILexicalBlock(scope: !9468, file: !7077, line: 1507, column: 13)
!9475 = !DILocalVariable(name: "iter", scope: !9476, file: !7077, line: 1508, type: !9333, align: 32)
!9476 = distinct !DILexicalBlock(scope: !9474, file: !7077, line: 1508, column: 13)
!9477 = !DILocalVariable(name: "i", scope: !9478, file: !7077, line: 1508, type: !9, align: 32)
!9478 = distinct !DILexicalBlock(scope: !9476, file: !7077, line: 1508, column: 51)
!9479 = !DILocalVariable(name: "match_pos", scope: !9480, file: !7077, line: 1519, type: !9, align: 32)
!9480 = distinct !DILexicalBlock(scope: !9474, file: !7077, line: 1519, column: 13)
!9481 = !DILocation(line: 1461, column: 16, scope: !9428)
!9482 = !DILocation(line: 1461, column: 27, scope: !9428)
!9483 = !DILocation(line: 1461, column: 44, scope: !9428)
!9484 = !DILocation(line: 1461, column: 59, scope: !9428)
!9485 = !DILocation(line: 1494, column: 17, scope: !9468)
!9486 = !DILocation(line: 1496, column: 22, scope: !9470)
!9487 = !DILocation(line: 1507, column: 17, scope: !9474)
!9488 = !DILocation(line: 1508, column: 22, scope: !9476)
!9489 = !DILocation(line: 1466, column: 23, scope: !9428)
!9490 = !DILocation(line: 1466, column: 13, scope: !9460)
!9491 = !DILocation(line: 1467, column: 27, scope: !9460)
!9492 = !DILocation(line: 1467, column: 13, scope: !9462)
!9493 = !DILocation(line: 1468, column: 9, scope: !9462)
!9494 = !DILocation(line: 1472, column: 48, scope: !9462)
!9495 = !DILocation(line: 1472, column: 44, scope: !9462)
!9496 = !DILocation(line: 1472, column: 35, scope: !9462)
!9497 = !DILocation(line: 1472, column: 29, scope: !9462)
!9498 = !DILocation(line: 1473, column: 23, scope: !9462)
!9499 = !DILocation(line: 1472, column: 17, scope: !9464)
!9500 = !DILocation(line: 1473, column: 23, scope: !9466)
!9501 = !DILocation(line: 1480, column: 16, scope: !9464)
!9502 = !DILocation(line: 1475, column: 21, scope: !9462)
!9503 = !DILocation(line: 1476, column: 50, scope: !9462)
!9504 = !DILocation(line: 1476, column: 28, scope: !9462)
!9505 = !DILocation(line: 1529, column: 6, scope: !9428)
!9506 = !DILocation(line: 1485, column: 22, scope: !9464)
!9507 = !DILocation(line: 1485, column: 17, scope: !9464)
!9508 = !DILocation(line: 1480, column: 52, scope: !9464)
!9509 = !DILocation(line: 1480, column: 41, scope: !9464)
!9510 = !DILocation(line: 1481, column: 46, scope: !9464)
!9511 = !DILocation(line: 1481, column: 24, scope: !9464)
!9512 = !DILocation(line: 1486, column: 17, scope: !9464)
!9513 = !DILocation(line: 1495, column: 20, scope: !9464)
!9514 = !DILocation(line: 1487, column: 21, scope: !9464)
!9515 = !DILocation(line: 1488, column: 21, scope: !9464)
!9516 = !DILocation(line: 1487, column: 17, scope: !9464)
!9517 = !DILocation(line: 1495, column: 66, scope: !9464)
!9518 = !DILocation(line: 1495, column: 81, scope: !9464)
!9519 = !DILocation(line: 1495, column: 57, scope: !9464)
!9520 = !DILocation(line: 1495, column: 34, scope: !9464)
!9521 = !DILocation(line: 1495, column: 17, scope: !9464)
!9522 = !DILocation(line: 1496, column: 22, scope: !9468)
!9523 = !DILocation(line: 1496, column: 13, scope: !9470)
!9524 = !DILocation(line: 1496, column: 17, scope: !9470)
!9525 = !DILocation(line: 1496, column: 17, scope: !9472)
!9526 = !DILocation(line: 1497, column: 20, scope: !9472)
!9527 = !DILocation(line: 1507, column: 28, scope: !9468)
!9528 = !DILocation(line: 1507, column: 53, scope: !9468)
!9529 = !DILocation(line: 1507, column: 25, scope: !9468)
!9530 = !DILocation(line: 1507, column: 42, scope: !9468)
!9531 = !DILocation(line: 1508, column: 23, scope: !9474)
!9532 = !DILocation(line: 1508, column: 30, scope: !9474)
!9533 = !DILocation(line: 1508, column: 45, scope: !9474)
!9534 = !DILocation(line: 1508, column: 22, scope: !9474)
!9535 = !DILocation(line: 1508, column: 13, scope: !9476)
!9536 = !DILocation(line: 1508, column: 17, scope: !9476)
!9537 = !DILocation(line: 1508, column: 17, scope: !9478)
!9538 = !DILocation(line: 1509, column: 20, scope: !9478)
!9539 = !DILocation(line: 1519, column: 29, scope: !9474)
!9540 = !DILocation(line: 1519, column: 17, scope: !9480)
!9541 = !DILocation(line: 1522, column: 13, scope: !9480)
!9542 = !DILocation(line: 1523, column: 17, scope: !9480)
!9543 = !DILocation(line: 1524, column: 17, scope: !9480)
!9544 = !DILocation(line: 1523, column: 13, scope: !9480)
!9545 = !DILocation(line: 1527, column: 43, scope: !9480)
!9546 = !DILocation(line: 1527, column: 20, scope: !9480)
!9547 = !DILocation(line: 1509, column: 42, scope: !9478)
!9548 = !DILocation(line: 1509, column: 33, scope: !9478)
!9549 = !DILocation(line: 1510, column: 38, scope: !9478)
!9550 = !DILocation(line: 1510, column: 21, scope: !9478)
!9551 = !DILocation(line: 1511, column: 25, scope: !9478)
!9552 = !DILocation(line: 1512, column: 54, scope: !9478)
!9553 = !DILocation(line: 1512, column: 39, scope: !9478)
!9554 = !DILocation(line: 1512, column: 25, scope: !9478)
!9555 = !DILocation(line: 1511, column: 21, scope: !9478)
!9556 = !DILocation(line: 1497, column: 42, scope: !9472)
!9557 = !DILocation(line: 1497, column: 33, scope: !9472)
!9558 = !DILocation(line: 1498, column: 42, scope: !9472)
!9559 = !DILocation(line: 1498, column: 38, scope: !9472)
!9560 = !DILocation(line: 1498, column: 21, scope: !9472)
!9561 = !DILocation(line: 1499, column: 25, scope: !9472)
!9562 = !DILocation(line: 1500, column: 25, scope: !9472)
!9563 = !DILocation(line: 1499, column: 21, scope: !9472)
!9564 = !DILocation(line: 0, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !9428, file: !626, discriminator: 0)
!9566 = distinct !DISubprogram(name: "next_match<core::str::pattern::MultiCharEqSearcher<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>>", linkageName: "_ZN4core3str7pattern8Searcher10next_match17h6b839db6181e57faE", scope: !9567, file: !7077, line: 248, type: !9568, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !9576, retainedNodes: !9571)
!9567 = !DINamespace(name: "Searcher", scope: !3440)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!9290, !9570}
!9570 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::MultiCharEqSearcher<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", baseType: !7084, size: 32, align: 32, dwarfAddressSpace: 0)
!9571 = !{!9572, !9573, !9575}
!9572 = !DILocalVariable(name: "self", arg: 1, scope: !9566, file: !7077, line: 248, type: !9570)
!9573 = !DILocalVariable(name: "a", scope: !9574, file: !7077, line: 251, type: !9, align: 32)
!9574 = distinct !DILexicalBlock(scope: !9566, file: !7077, line: 251, column: 17)
!9575 = !DILocalVariable(name: "b", scope: !9574, file: !7077, line: 251, type: !9, align: 32)
!9576 = !{!9577}
!9577 = !DITemplateTypeParameter(name: "Self", type: !7084)
!9578 = !DILocation(line: 248, column: 19, scope: !9566)
!9579 = !DILocation(line: 249, column: 9, scope: !9566)
!9580 = !DILocation(line: 250, column: 24, scope: !9566)
!9581 = !DILocation(line: 250, column: 19, scope: !9566)
!9582 = !DILocation(line: 250, column: 13, scope: !9566)
!9583 = !DILocation(line: 248, column: 5, scope: !9566)
!9584 = !DILocation(line: 251, column: 35, scope: !9566)
!9585 = !DILocation(line: 251, column: 35, scope: !9574)
!9586 = !DILocation(line: 251, column: 38, scope: !9566)
!9587 = !DILocation(line: 251, column: 38, scope: !9574)
!9588 = !DILocation(line: 251, column: 51, scope: !9574)
!9589 = !DILocation(line: 0, scope: !9590)
!9590 = !DILexicalBlockFile(scope: !9566, file: !626, discriminator: 0)
!9591 = !DILocation(line: 252, column: 44, scope: !9566)
!9592 = !DILocation(line: 252, column: 37, scope: !9566)
!9593 = !DILocation(line: 256, column: 6, scope: !9566)
!9594 = distinct !DISubprogram(name: "next_reject<core::str::pattern::StrSearcher>", linkageName: "_ZN4core3str7pattern8Searcher11next_reject17h0423c57c9b33829aE", scope: !9567, file: !7077, line: 264, type: !9595, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !9603, retainedNodes: !9598)
!9595 = !DISubroutineType(types: !9596)
!9596 = !{!9290, !9597}
!9597 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::StrSearcher", baseType: !8858, size: 32, align: 32, dwarfAddressSpace: 0)
!9598 = !{!9599, !9600, !9602}
!9599 = !DILocalVariable(name: "self", arg: 1, scope: !9594, file: !7077, line: 264, type: !9597)
!9600 = !DILocalVariable(name: "a", scope: !9601, file: !7077, line: 267, type: !9, align: 32)
!9601 = distinct !DILexicalBlock(scope: !9594, file: !7077, line: 267, column: 17)
!9602 = !DILocalVariable(name: "b", scope: !9601, file: !7077, line: 267, type: !9, align: 32)
!9603 = !{!9604}
!9604 = !DITemplateTypeParameter(name: "Self", type: !8858)
!9605 = !DILocation(line: 264, column: 20, scope: !9594)
!9606 = !DILocation(line: 265, column: 9, scope: !9594)
!9607 = !DILocation(line: 266, column: 24, scope: !9594)
!9608 = !DILocation(line: 266, column: 19, scope: !9594)
!9609 = !DILocation(line: 266, column: 13, scope: !9594)
!9610 = !DILocation(line: 264, column: 5, scope: !9594)
!9611 = !DILocation(line: 267, column: 36, scope: !9594)
!9612 = !DILocation(line: 267, column: 36, scope: !9601)
!9613 = !DILocation(line: 267, column: 39, scope: !9594)
!9614 = !DILocation(line: 267, column: 39, scope: !9601)
!9615 = !DILocation(line: 267, column: 52, scope: !9601)
!9616 = !DILocation(line: 0, scope: !9617)
!9617 = !DILexicalBlockFile(scope: !9594, file: !626, discriminator: 0)
!9618 = !DILocation(line: 268, column: 44, scope: !9594)
!9619 = !DILocation(line: 268, column: 37, scope: !9594)
!9620 = !DILocation(line: 272, column: 6, scope: !9594)
!9621 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17hc4c3ff2de0ba743dE", scope: !9623, file: !9622, line: 178, type: !9624, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9626)
!9622 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9035c094c664ecc363abf0007689bcc")
!9623 = !DINamespace(name: "converts", scope: !522)
!9624 = !DISubroutineType(types: !9625)
!9625 = !{!659, !281}
!9626 = !{!9627}
!9627 = !DILocalVariable(name: "v", arg: 1, scope: !9621, file: !9622, line: 178, type: !281)
!9628 = !DILocation(line: 178, column: 41, scope: !9621)
!9629 = !DILocation(line: 182, column: 2, scope: !9621)
!9630 = distinct !DISubprogram(name: "from_utf8_unchecked_mut", linkageName: "_ZN4core3str8converts23from_utf8_unchecked_mut17he1265542c60e145eE", scope: !9623, file: !9622, line: 208, type: !9631, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9637)
!9631 = !DISubroutineType(types: !9632)
!9632 = !{!9633, !1013}
!9633 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut str", file: !2, size: 64, align: 32, elements: !9634, templateParams: !14, identifier: "3faee8808ecf9985e5103add9ac29d3c")
!9634 = !{!9635, !9636}
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !9633, file: !2, baseType: !284, size: 32, align: 32)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9633, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!9637 = !{!9638}
!9638 = !DILocalVariable(name: "v", arg: 1, scope: !9630, file: !9622, line: 208, type: !1013)
!9639 = !DILocation(line: 208, column: 45, scope: !9630)
!9640 = !DILocation(line: 214, column: 2, scope: !9630)
!9641 = distinct !DISubprogram(name: "unicode", linkageName: "_ZN4core4char11EscapeDebug7unicode17h8d8319ec9b1f33c6E", scope: !5481, file: !9642, line: 321, type: !9643, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !9645, retainedNodes: !9646)
!9642 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "26cfde707028ec0c2694ed59dbef9a18")
!9643 = !DISubroutineType(types: !9644)
!9644 = !{!5481, !252}
!9645 = !DISubprogram(name: "unicode", linkageName: "_ZN4core4char11EscapeDebug7unicode17h8d8319ec9b1f33c6E", scope: !5481, file: !9642, line: 321, type: !9643, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!9646 = !{!9647}
!9647 = !DILocalVariable(name: "c", arg: 1, scope: !9641, file: !9642, line: 321, type: !252)
!9648 = !DILocation(line: 321, column: 22, scope: !9641)
!9649 = !DILocation(line: 322, column: 14, scope: !9641)
!9650 = !DILocation(line: 322, column: 9, scope: !9641)
!9651 = !DILocation(line: 323, column: 6, scope: !9641)
!9652 = distinct !DISubprogram(name: "backslash", linkageName: "_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E", scope: !5481, file: !9642, line: 316, type: !9653, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !9655, retainedNodes: !9656)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!5481, !91}
!9655 = !DISubprogram(name: "backslash", linkageName: "_ZN4core4char11EscapeDebug9backslash17hc5e67e1fd82a29a1E", scope: !5481, file: !9642, line: 316, type: !9653, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!9656 = !{!9657}
!9657 = !DILocalVariable(name: "c", arg: 1, scope: !9652, file: !9642, line: 316, type: !91)
!9658 = !DILocation(line: 316, column: 24, scope: !9652)
!9659 = !DILocation(line: 317, column: 14, scope: !9652)
!9660 = !DILocation(line: 317, column: 9, scope: !9652)
!9661 = !DILocation(line: 318, column: 6, scope: !9652)
!9662 = distinct !DISubprogram(name: "printable", linkageName: "_ZN4core4char11EscapeDebug9printable17hfc2ef56f0f49fdf3E", scope: !5481, file: !9642, line: 311, type: !9643, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, declaration: !9663, retainedNodes: !9664)
!9663 = !DISubprogram(name: "printable", linkageName: "_ZN4core4char11EscapeDebug9printable17hfc2ef56f0f49fdf3E", scope: !5481, file: !9642, line: 311, type: !9643, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14)
!9664 = !{!9665}
!9665 = !DILocalVariable(name: "chr", arg: 1, scope: !9662, file: !9642, line: 311, type: !252)
!9666 = !DILocation(line: 311, column: 24, scope: !9662)
!9667 = !DILocation(line: 312, column: 14, scope: !9662)
!9668 = !DILocation(line: 312, column: 9, scope: !9662)
!9669 = !DILocation(line: 313, column: 6, scope: !9662)
!9670 = distinct !DISubprogram(name: "char_try_from_u32", linkageName: "_ZN4core4char7convert17char_try_from_u3217h9bd5a88bd7ae0f7dE", scope: !9672, file: !9671, line: 236, type: !9673, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9693)
!9671 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "6f1616d15777773c7758fa685d06b161")
!9672 = !DINamespace(name: "convert", scope: !5482)
!9673 = !DISubroutineType(types: !9674)
!9674 = !{!9675, !48}
!9675 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, core::char::convert::CharTryFromError>", scope: !30, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !9676, templateParams: !14, identifier: "6eeef053464495a608bd852a2e88d4")
!9676 = !{!9677}
!9677 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9675, file: !2, size: 32, align: 32, elements: !9678, templateParams: !14, identifier: "a6039b4c06c5663ea50f8a60c6973c3b", discriminator: !9692)
!9678 = !{!9679, !9688}
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !9677, file: !2, baseType: !9680, size: 32, align: 32)
!9680 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !9675, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !9681, templateParams: !9683, identifier: "6654e82dd92b112597ff13bd4019cfc9")
!9681 = !{!9682}
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9680, file: !2, baseType: !252, size: 32, align: 32, flags: DIFlagPublic)
!9683 = !{!251, !9684}
!9684 = !DITemplateTypeParameter(name: "E", type: !9685)
!9685 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharTryFromError", scope: !9672, file: !2, align: 8, flags: DIFlagPublic, elements: !9686, templateParams: !14, identifier: "88786f5ac8fb120c4b8adbd73fb8113f")
!9686 = !{!9687}
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9685, file: !2, baseType: !7, align: 8, flags: DIFlagPrivate)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !9677, file: !2, baseType: !9689, size: 32, align: 32, extraData: i32 1114112)
!9689 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !9675, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !9690, templateParams: !9683, identifier: "bd41bd5f65eb1055f88c81e4244d02d0")
!9690 = !{!9691}
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9689, file: !2, baseType: !9685, align: 8, flags: DIFlagPublic)
!9692 = !DIDerivedType(tag: DW_TAG_member, scope: !9675, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!9693 = !{!9694}
!9694 = !DILocalVariable(name: "i", arg: 1, scope: !9670, file: !9671, line: 236, type: !48)
!9695 = !DILocation(line: 236, column: 28, scope: !9670)
!9696 = !DILocation(line: 250, column: 8, scope: !9670)
!9697 = !DILocalVariable(name: "self", arg: 1, scope: !9698, file: !1495, line: 2339, type: !48)
!9698 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17hf6d4bc74d2672fe7E", scope: !7545, file: !1495, line: 2339, type: !9699, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9701)
!9699 = !DISubroutineType(types: !9700)
!9700 = !{!48, !48, !48}
!9701 = !{!9697, !9702}
!9702 = !DILocalVariable(name: "rhs", arg: 2, scope: !9698, file: !1495, line: 2339, type: !48)
!9703 = !DILocation(line: 2339, column: 35, scope: !9698, inlinedAt: !9704)
!9704 = distinct !DILocation(line: 250, column: 21, scope: !9670)
!9705 = !DILocation(line: 2339, column: 41, scope: !9698, inlinedAt: !9704)
!9706 = !DILocation(line: 2340, column: 13, scope: !9698, inlinedAt: !9704)
!9707 = !DILocation(line: 254, column: 9, scope: !9670)
!9708 = !DILocation(line: 250, column: 5, scope: !9670)
!9709 = !DILocation(line: 251, column: 9, scope: !9670)
!9710 = !DILocation(line: 256, column: 2, scope: !9670)
!9711 = distinct !DISubprogram(name: "from_u32", linkageName: "_ZN4core4char7convert8from_u3217h5f7a294437a64866E", scope: !9672, file: !9671, line: 13, type: !8502, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9712)
!9712 = !{!9713, !9714}
!9713 = !DILocalVariable(name: "i", arg: 1, scope: !9711, file: !9671, line: 13, type: !48)
!9714 = !DILocalVariable(name: "c", scope: !9715, file: !9671, line: 16, type: !252, align: 32)
!9715 = distinct !DILexicalBlock(scope: !9711, file: !9671, line: 16, column: 9)
!9716 = !DILocation(line: 13, column: 30, scope: !9711)
!9717 = !DILocation(line: 15, column: 11, scope: !9711)
!9718 = !DILocation(line: 15, column: 5, scope: !9711)
!9719 = !DILocation(line: 17, column: 19, scope: !9711)
!9720 = !DILocation(line: 16, column: 12, scope: !9711)
!9721 = !DILocation(line: 16, column: 12, scope: !9715)
!9722 = !DILocation(line: 16, column: 18, scope: !9715)
!9723 = !DILocation(line: 16, column: 24, scope: !9711)
!9724 = !DILocation(line: 19, column: 2, scope: !9711)
!9725 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17h0b0fc32424613543E", scope: !9727, file: !9726, line: 1873, type: !9728, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9730)
!9726 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "aef19757a827b829abda53fa550996ee")
!9727 = !DINamespace(name: "methods", scope: !5482)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!1013, !48, !1013}
!9730 = !{!9731, !9732, !9733}
!9731 = !DILocalVariable(name: "code", arg: 1, scope: !9725, file: !9726, line: 1873, type: !48)
!9732 = !DILocalVariable(name: "dst", arg: 2, scope: !9725, file: !9726, line: 1873, type: !1013)
!9733 = !DILocalVariable(name: "len", scope: !9734, file: !9726, line: 1874, type: !9, align: 32)
!9734 = distinct !DILexicalBlock(scope: !9725, file: !9726, line: 1874, column: 5)
!9735 = !DILocation(line: 1873, column: 30, scope: !9725)
!9736 = !DILocation(line: 1873, column: 41, scope: !9725)
!9737 = !DILocation(line: 1874, column: 15, scope: !9725)
!9738 = !DILocation(line: 1874, column: 9, scope: !9734)
!9739 = !DILocation(line: 1875, column: 8, scope: !9734)
!9740 = !DILocalVariable(name: "self", arg: 1, scope: !9741, file: !9742, line: 755, type: !1013)
!9741 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h8934e890069a71f3E", scope: !9743, file: !9742, line: 755, type: !9744, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !9747)
!9742 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "63aedd801a9e6eae1eca1edc5c2217aa")
!9743 = !DINamespace(name: "{impl#0}", scope: !278)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!9746, !1013}
!9746 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !13, size: 32, align: 32, dwarfAddressSpace: 0)
!9747 = !{!9740}
!9748 = !DILocation(line: 755, column: 29, scope: !9741, inlinedAt: !9749)
!9749 = distinct !DILocation(line: 1886, column: 50, scope: !9734)
!9750 = !DILocation(line: 1886, column: 14, scope: !9734)
!9751 = !DILocation(line: 755, column: 29, scope: !9741, inlinedAt: !9752)
!9752 = distinct !DILocation(line: 1889, column: 44, scope: !9734)
!9753 = !DILocation(line: 1889, column: 14, scope: !9734)
!9754 = !DILocation(line: 1890, column: 2, scope: !9725)
!9755 = !DILocalVariable(name: "code", arg: 1, scope: !9756, file: !1045, line: 166, type: !48)
!9756 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core4char7methods15encode_utf8_raw8do_panic17h579160be39dda5c0E", scope: !9757, file: !1045, line: 166, type: !9758, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9760)
!9757 = !DINamespace(name: "encode_utf8_raw", scope: !9727)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{null, !48, !9, !9, !823}
!9760 = !{!9755, !9761, !9762}
!9761 = !DILocalVariable(name: "len", arg: 2, scope: !9756, file: !1045, line: 166, type: !9)
!9762 = !DILocalVariable(name: "dst_len", arg: 3, scope: !9756, file: !1045, line: 166, type: !9)
!9763 = !DILocation(line: 166, column: 29, scope: !9756, inlinedAt: !9764)
!9764 = distinct !DILocation(line: 178, column: 9, scope: !9765)
!9765 = !DILexicalBlockFile(scope: !9734, file: !1045, discriminator: 0)
!9766 = !DILocation(line: 2435, column: 27, scope: !9767, inlinedAt: !9764)
!9767 = !DILexicalBlockFile(scope: !9756, file: !7109, discriminator: 0)
!9768 = !DILocation(line: 2435, column: 9, scope: !9767, inlinedAt: !9764)
!9769 = !DILocation(line: 178, column: 9, scope: !9765)
!9770 = distinct !DISubprogram(name: "is_control", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$10is_control17h1834f75da40a1a41E", scope: !9771, file: !9726, line: 952, type: !728, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9772)
!9771 = !DINamespace(name: "{impl#0}", scope: !9727)
!9772 = !{!9773}
!9773 = !DILocalVariable(name: "self", arg: 1, scope: !9770, file: !9726, line: 952, type: !252)
!9774 = !DILocation(line: 952, column: 23, scope: !9770)
!9775 = !DILocation(line: 957, column: 24, scope: !9770)
!9776 = !DILocation(line: 957, column: 40, scope: !9770)
!9777 = !DILocation(line: 438, column: 39, scope: !9778)
!9778 = !DILexicalBlockFile(scope: !9770, file: !9779, discriminator: 0)
!9779 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ec901dc314d42500d18c9938d02d4ad0")
!9780 = !DILocation(line: 439, column: 18, scope: !9778)
!9781 = !DILocation(line: 958, column: 6, scope: !9770)
!9782 = distinct !DISubprogram(name: "encode_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$11encode_utf817h10ba4a67745ca36cE", scope: !9771, file: !9726, line: 714, type: !9783, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9785)
!9783 = !DISubroutineType(types: !9784)
!9784 = !{!9633, !252, !1013}
!9785 = !{!9786, !9787}
!9786 = !DILocalVariable(name: "self", arg: 1, scope: !9782, file: !9726, line: 714, type: !252)
!9787 = !DILocalVariable(name: "dst", arg: 2, scope: !9782, file: !9726, line: 714, type: !1013)
!9788 = !DILocation(line: 714, column: 30, scope: !9782)
!9789 = !DILocation(line: 714, column: 36, scope: !9782)
!9790 = !DILocation(line: 716, column: 42, scope: !9782)
!9791 = !DILocation(line: 716, column: 18, scope: !9782)
!9792 = !DILocation(line: 717, column: 6, scope: !9782)
!9793 = distinct !DISubprogram(name: "escape_debug", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12escape_debug17h200d0bc8cbcc76e8E", scope: !9771, file: !9726, line: 529, type: !9643, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9794)
!9794 = !{!9795}
!9795 = !DILocalVariable(name: "self", arg: 1, scope: !9793, file: !9726, line: 529, type: !252)
!9796 = !DILocation(line: 529, column: 25, scope: !9793)
!9797 = !DILocation(line: 530, column: 9, scope: !9793)
!9798 = !DILocation(line: 530, column: 14, scope: !9793)
!9799 = !DILocation(line: 531, column: 6, scope: !9793)
!9800 = distinct !DISubprogram(name: "escape_debug_ext", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$16escape_debug_ext17h45f84263a79231b1E", scope: !9771, file: !9726, line: 474, type: !9801, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9808)
!9801 = !DISubroutineType(types: !9802)
!9802 = !{!5481, !252, !9803}
!9803 = !DICompositeType(tag: DW_TAG_structure_type, name: "EscapeDebugExtArgs", scope: !9727, file: !2, size: 24, align: 8, flags: DIFlagProtected, elements: !9804, templateParams: !14, identifier: "d6cf164d10ed2f00c0261bace9f081af")
!9804 = !{!9805, !9806, !9807}
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "escape_grapheme_extended", scope: !9803, file: !2, baseType: !706, size: 8, align: 8, flags: DIFlagProtected)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "escape_single_quote", scope: !9803, file: !2, baseType: !706, size: 8, align: 8, offset: 8, flags: DIFlagProtected)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "escape_double_quote", scope: !9803, file: !2, baseType: !706, size: 8, align: 8, offset: 16, flags: DIFlagProtected)
!9808 = !{!9809, !9810}
!9809 = !DILocalVariable(name: "self", arg: 1, scope: !9800, file: !9726, line: 474, type: !252)
!9810 = !DILocalVariable(name: "args", arg: 2, scope: !9800, file: !9726, line: 474, type: !9803)
!9811 = !DILocation(line: 474, column: 36, scope: !9800)
!9812 = !DILocation(line: 474, column: 42, scope: !9800)
!9813 = !DILocation(line: 475, column: 9, scope: !9800)
!9814 = !DILocation(line: 483, column: 18, scope: !9800)
!9815 = !DILocation(line: 476, column: 21, scope: !9800)
!9816 = !DILocation(line: 477, column: 21, scope: !9800)
!9817 = !DILocation(line: 478, column: 21, scope: !9800)
!9818 = !DILocation(line: 479, column: 21, scope: !9800)
!9819 = !DILocation(line: 480, column: 21, scope: !9800)
!9820 = !DILocation(line: 481, column: 21, scope: !9800)
!9821 = !DILocation(line: 482, column: 21, scope: !9800)
!9822 = !DILocation(line: 489, column: 6, scope: !9800)
!9823 = !DILocation(line: 481, column: 49, scope: !9800)
!9824 = !DILocation(line: 482, column: 49, scope: !9800)
!9825 = !DILocation(line: 486, column: 18, scope: !9800)
!9826 = !DILocation(line: 483, column: 56, scope: !9800)
!9827 = !DILocation(line: 483, column: 51, scope: !9800)
!9828 = !DILocation(line: 484, column: 17, scope: !9800)
!9829 = !DILocation(line: 487, column: 18, scope: !9800)
!9830 = !DILocation(line: 486, column: 40, scope: !9800)
!9831 = distinct !DISubprogram(name: "is_grapheme_extended", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$20is_grapheme_extended17hf1864da53287fdedE", scope: !9771, file: !9726, line: 971, type: !728, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9832)
!9832 = !{!9833}
!9833 = !DILocalVariable(name: "self", arg: 1, scope: !9831, file: !9726, line: 971, type: !252)
!9834 = !DILocation(line: 971, column: 40, scope: !9831)
!9835 = !DILocation(line: 972, column: 15, scope: !9831)
!9836 = !DILocation(line: 972, column: 10, scope: !9831)
!9837 = !DILocation(line: 972, column: 29, scope: !9831)
!9838 = !DILocation(line: 972, column: 9, scope: !9831)
!9839 = !DILocation(line: 973, column: 6, scope: !9831)
!9840 = distinct !DISubprogram(name: "is_ascii", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h89a9b5d149c0c8f3E", scope: !9771, file: !9726, line: 1229, type: !9841, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9843)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{!706, !1676}
!9843 = !{!9844}
!9844 = !DILocalVariable(name: "self", arg: 1, scope: !9840, file: !9726, line: 1229, type: !1676)
!9845 = !DILocation(line: 1229, column: 27, scope: !9840)
!9846 = !DILocation(line: 1230, column: 9, scope: !9840)
!9847 = !DILocation(line: 1231, column: 6, scope: !9840)
!9848 = distinct !DISubprogram(name: "is_digit", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_digit17h29934e8c7c7783a9E", scope: !9771, file: !9726, line: 343, type: !9849, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9851)
!9849 = !DISubroutineType(types: !9850)
!9850 = !{!706, !252, !48}
!9851 = !{!9852, !9853}
!9852 = !DILocalVariable(name: "self", arg: 1, scope: !9848, file: !9726, line: 343, type: !252)
!9853 = !DILocalVariable(name: "radix", arg: 2, scope: !9848, file: !9726, line: 343, type: !48)
!9854 = !DILocation(line: 343, column: 27, scope: !9848)
!9855 = !DILocation(line: 343, column: 33, scope: !9848)
!9856 = !DILocation(line: 344, column: 14, scope: !9848)
!9857 = !DILocation(line: 344, column: 30, scope: !9848)
!9858 = !DILocation(line: 345, column: 6, scope: !9848)
!9859 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817hd0bbf0a5cacb66d4E", scope: !9771, file: !9726, line: 645, type: !9860, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9862)
!9860 = !DISubroutineType(types: !9861)
!9861 = !{!9, !252}
!9862 = !{!9863}
!9863 = !DILocalVariable(name: "self", arg: 1, scope: !9859, file: !9726, line: 645, type: !252)
!9864 = !DILocation(line: 645, column: 27, scope: !9859)
!9865 = !DILocation(line: 646, column: 9, scope: !9859)
!9866 = !DILocation(line: 647, column: 6, scope: !9859)
!9867 = distinct !DISubprogram(name: "to_digit", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hbc67ffb83ae2ea89E", scope: !9771, file: !9726, line: 402, type: !9868, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9870)
!9868 = !DISubroutineType(types: !9869)
!9869 = !{!808, !252, !48}
!9870 = !{!9871, !9872, !9873}
!9871 = !DILocalVariable(name: "self", arg: 1, scope: !9867, file: !9726, line: 402, type: !252)
!9872 = !DILocalVariable(name: "radix", arg: 2, scope: !9867, file: !9726, line: 402, type: !48)
!9873 = !DILocalVariable(name: "value", scope: !9874, file: !9726, line: 408, type: !48, align: 32)
!9874 = distinct !DILexicalBlock(scope: !9867, file: !9726, line: 408, column: 9)
!9875 = !DILocation(line: 402, column: 27, scope: !9867)
!9876 = !DILocation(line: 402, column: 33, scope: !9867)
!9877 = !DILocation(line: 408, column: 13, scope: !9874)
!9878 = !DILocation(line: 404, column: 13, scope: !9867)
!9879 = !DILocation(line: 403, column: 9, scope: !9867)
!9880 = !DILocation(line: 404, column: 27, scope: !9867)
!9881 = !DILocation(line: 408, column: 24, scope: !9867)
!9882 = !DILocation(line: 2339, column: 35, scope: !9698, inlinedAt: !9883)
!9883 = distinct !DILocation(line: 420, column: 27, scope: !9867)
!9884 = !DILocation(line: 2339, column: 41, scope: !9698, inlinedAt: !9883)
!9885 = !DILocation(line: 2340, column: 13, scope: !9698, inlinedAt: !9883)
!9886 = !DILocation(line: 420, column: 27, scope: !9867)
!9887 = !DILocation(line: 408, column: 38, scope: !9867)
!9888 = !DILocation(line: 2339, column: 35, scope: !9698, inlinedAt: !9889)
!9889 = distinct !DILocation(line: 417, column: 28, scope: !9867)
!9890 = !DILocation(line: 2339, column: 41, scope: !9698, inlinedAt: !9889)
!9891 = !DILocation(line: 2340, column: 13, scope: !9698, inlinedAt: !9889)
!9892 = !DILocation(line: 417, column: 13, scope: !9867)
!9893 = !DILocation(line: 423, column: 12, scope: !9874)
!9894 = !DILocation(line: 408, column: 21, scope: !9867)
!9895 = !DILocation(line: 423, column: 49, scope: !9874)
!9896 = !DILocation(line: 423, column: 9, scope: !9874)
!9897 = !DILocation(line: 423, column: 33, scope: !9874)
!9898 = !DILocation(line: 423, column: 28, scope: !9874)
!9899 = !DILocation(line: 424, column: 6, scope: !9867)
!9900 = distinct !DISubprogram(name: "encode_utf8_raw_unchecked", linkageName: "_ZN4core4char7methods25encode_utf8_raw_unchecked17h6dde6f9db2752a53E", scope: !9727, file: !9726, line: 1910, type: !9901, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9903)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{null, !48, !9746}
!9903 = !{!9904, !9905, !9906, !9908, !9910, !9912, !9914}
!9904 = !DILocalVariable(name: "code", arg: 1, scope: !9900, file: !9726, line: 1910, type: !48)
!9905 = !DILocalVariable(name: "dst", arg: 2, scope: !9900, file: !9726, line: 1910, type: !9746)
!9906 = !DILocalVariable(name: "len", scope: !9907, file: !9726, line: 1911, type: !9, align: 32)
!9907 = distinct !DILexicalBlock(scope: !9900, file: !9726, line: 1911, column: 5)
!9908 = !DILocalVariable(name: "last1", scope: !9909, file: !9726, line: 1920, type: !13, align: 8)
!9909 = distinct !DILexicalBlock(scope: !9907, file: !9726, line: 1920, column: 9)
!9910 = !DILocalVariable(name: "last2", scope: !9911, file: !9726, line: 1921, type: !13, align: 8)
!9911 = distinct !DILexicalBlock(scope: !9909, file: !9726, line: 1921, column: 9)
!9912 = !DILocalVariable(name: "last3", scope: !9913, file: !9726, line: 1922, type: !13, align: 8)
!9913 = distinct !DILexicalBlock(scope: !9911, file: !9726, line: 1922, column: 9)
!9914 = !DILocalVariable(name: "last4", scope: !9915, file: !9726, line: 1923, type: !13, align: 8)
!9915 = distinct !DILexicalBlock(scope: !9913, file: !9726, line: 1923, column: 9)
!9916 = !DILocation(line: 1910, column: 47, scope: !9900)
!9917 = !DILocation(line: 1910, column: 58, scope: !9900)
!9918 = !DILocation(line: 1911, column: 15, scope: !9900)
!9919 = !DILocation(line: 1911, column: 9, scope: !9907)
!9920 = !DILocation(line: 1915, column: 12, scope: !9907)
!9921 = !DILocation(line: 1916, column: 13, scope: !9907)
!9922 = !DILocation(line: 0, scope: !9923)
!9923 = !DILexicalBlockFile(scope: !9907, file: !626, discriminator: 0)
!9924 = !DILocation(line: 1920, column: 22, scope: !9907)
!9925 = !DILocation(line: 1920, column: 21, scope: !9907)
!9926 = !DILocation(line: 1920, column: 13, scope: !9909)
!9927 = !DILocation(line: 1921, column: 22, scope: !9909)
!9928 = !DILocation(line: 1921, column: 21, scope: !9909)
!9929 = !DILocation(line: 1921, column: 13, scope: !9911)
!9930 = !DILocation(line: 1922, column: 22, scope: !9911)
!9931 = !DILocation(line: 1922, column: 21, scope: !9911)
!9932 = !DILocation(line: 1922, column: 13, scope: !9913)
!9933 = !DILocation(line: 1923, column: 22, scope: !9913)
!9934 = !DILocation(line: 1923, column: 21, scope: !9913)
!9935 = !DILocation(line: 1923, column: 13, scope: !9915)
!9936 = !DILocation(line: 1925, column: 12, scope: !9915)
!9937 = !DILocation(line: 1943, column: 2, scope: !9900)
!9938 = !DILocation(line: 1926, column: 13, scope: !9915)
!9939 = !DILocalVariable(name: "self", arg: 1, scope: !9940, file: !8537, line: 927, type: !9746)
!9940 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h5e9d591181ecfeedE", scope: !8523, file: !8537, line: 927, type: !9941, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{!9746, !9746, !9, !823}
!9943 = !{!9939, !9944}
!9944 = !DILocalVariable(name: "count", arg: 2, scope: !9940, file: !8537, line: 927, type: !9)
!9945 = !DILocation(line: 927, column: 29, scope: !9940, inlinedAt: !9946)
!9946 = distinct !DILocation(line: 1927, column: 18, scope: !9915)
!9947 = !DILocation(line: 927, column: 35, scope: !9940, inlinedAt: !9946)
!9948 = !DILocation(line: 77, column: 35, scope: !9949, inlinedAt: !9946)
!9949 = !DILexicalBlockFile(scope: !9940, file: !7058, discriminator: 0)
!9950 = !DILocation(line: 78, column: 17, scope: !9949, inlinedAt: !9946)
!9951 = !DILocation(line: 961, column: 18, scope: !9940, inlinedAt: !9946)
!9952 = !DILocation(line: 1927, column: 13, scope: !9915)
!9953 = !DILocation(line: 0, scope: !9954)
!9954 = !DILexicalBlockFile(scope: !9915, file: !626, discriminator: 0)
!9955 = !DILocation(line: 1931, column: 12, scope: !9915)
!9956 = !DILocation(line: 1932, column: 13, scope: !9915)
!9957 = !DILocation(line: 927, column: 29, scope: !9940, inlinedAt: !9958)
!9958 = distinct !DILocation(line: 1933, column: 18, scope: !9915)
!9959 = !DILocation(line: 927, column: 35, scope: !9940, inlinedAt: !9958)
!9960 = !DILocation(line: 77, column: 35, scope: !9949, inlinedAt: !9958)
!9961 = !DILocation(line: 78, column: 17, scope: !9949, inlinedAt: !9958)
!9962 = !DILocation(line: 961, column: 18, scope: !9940, inlinedAt: !9958)
!9963 = !DILocation(line: 1933, column: 13, scope: !9915)
!9964 = !DILocation(line: 927, column: 29, scope: !9940, inlinedAt: !9965)
!9965 = distinct !DILocation(line: 1934, column: 18, scope: !9915)
!9966 = !DILocation(line: 927, column: 35, scope: !9940, inlinedAt: !9965)
!9967 = !DILocation(line: 77, column: 35, scope: !9949, inlinedAt: !9965)
!9968 = !DILocation(line: 78, column: 17, scope: !9949, inlinedAt: !9965)
!9969 = !DILocation(line: 961, column: 18, scope: !9940, inlinedAt: !9965)
!9970 = !DILocation(line: 1934, column: 13, scope: !9915)
!9971 = !DILocation(line: 1938, column: 9, scope: !9915)
!9972 = !DILocation(line: 927, column: 29, scope: !9940, inlinedAt: !9973)
!9973 = distinct !DILocation(line: 1939, column: 14, scope: !9915)
!9974 = !DILocation(line: 927, column: 35, scope: !9940, inlinedAt: !9973)
!9975 = !DILocation(line: 77, column: 35, scope: !9949, inlinedAt: !9973)
!9976 = !DILocation(line: 78, column: 17, scope: !9949, inlinedAt: !9973)
!9977 = !DILocation(line: 961, column: 18, scope: !9940, inlinedAt: !9973)
!9978 = !DILocation(line: 1939, column: 9, scope: !9915)
!9979 = !DILocation(line: 927, column: 29, scope: !9940, inlinedAt: !9980)
!9980 = distinct !DILocation(line: 1940, column: 14, scope: !9915)
!9981 = !DILocation(line: 927, column: 35, scope: !9940, inlinedAt: !9980)
!9982 = !DILocation(line: 77, column: 35, scope: !9949, inlinedAt: !9980)
!9983 = !DILocation(line: 78, column: 17, scope: !9949, inlinedAt: !9980)
!9984 = !DILocation(line: 961, column: 18, scope: !9940, inlinedAt: !9980)
!9985 = !DILocation(line: 1940, column: 9, scope: !9915)
!9986 = !DILocation(line: 927, column: 29, scope: !9940, inlinedAt: !9987)
!9987 = distinct !DILocation(line: 1941, column: 14, scope: !9915)
!9988 = !DILocation(line: 927, column: 35, scope: !9940, inlinedAt: !9987)
!9989 = !DILocation(line: 77, column: 35, scope: !9949, inlinedAt: !9987)
!9990 = !DILocation(line: 78, column: 17, scope: !9949, inlinedAt: !9987)
!9991 = !DILocation(line: 961, column: 18, scope: !9940, inlinedAt: !9987)
!9992 = !DILocation(line: 1941, column: 9, scope: !9915)
!9993 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817h27ddcc7981a17719E", scope: !9727, file: !9726, line: 1842, type: !9994, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !9996)
!9994 = !DISubroutineType(types: !9995)
!9995 = !{!9, !48}
!9996 = !{!9997}
!9997 = !DILocalVariable(name: "code", arg: 1, scope: !9993, file: !9726, line: 1842, type: !48)
!9998 = !DILocation(line: 1842, column: 19, scope: !9993)
!9999 = !DILocation(line: 1844, column: 9, scope: !9993)
!10000 = !DILocation(line: 1845, column: 9, scope: !9993)
!10001 = !DILocation(line: 1844, column: 24, scope: !9993)
!10002 = !DILocation(line: 1846, column: 9, scope: !9993)
!10003 = !DILocation(line: 1845, column: 24, scope: !9993)
!10004 = !DILocation(line: 1847, column: 14, scope: !9993)
!10005 = !DILocation(line: 1846, column: 26, scope: !9993)
!10006 = !DILocation(line: 1849, column: 2, scope: !9993)
!10007 = distinct !DISubprogram(name: "from_u32", linkageName: "_ZN4core4char8from_u3217h3ca732bdf05cd746E", scope: !5482, file: !9642, line: 131, type: !8502, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !10008)
!10008 = !{!10009}
!10009 = !DILocalVariable(name: "i", arg: 1, scope: !10007, file: !9642, line: 131, type: !48)
!10010 = !DILocation(line: 131, column: 23, scope: !10007)
!10011 = !DILocation(line: 132, column: 5, scope: !10007)
!10012 = !DILocation(line: 133, column: 2, scope: !10007)
!10013 = distinct !DISubprogram(name: "unreachable_unchecked", linkageName: "_ZN4core4hint21unreachable_unchecked17h7e1a5f992e546fadE", scope: !10015, file: !10014, line: 102, type: !10016, scopeLine: 102, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!10014 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "56f659f9cbc57d60ad8ce456b7f06ccb")
!10015 = !DINamespace(name: "hint", scope: !31)
!10016 = !DISubroutineType(types: !10017)
!10017 = !{null, !823}
!10018 = !DILocation(line: 77, column: 35, scope: !10019)
!10019 = !DILexicalBlockFile(scope: !10013, file: !7058, discriminator: 0)
!10020 = !DILocation(line: 110, column: 14, scope: !10013)
!10021 = !DILocation(line: 78, column: 17, scope: !10019)
!10022 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core4hint21unreachable_unchecked18precondition_check17h6e71f3f52ade0562E", scope: !10023, file: !7058, line: 68, type: !10016, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !10024)
!10023 = !DINamespace(name: "unreachable_unchecked", scope: !10015)
!10024 = !{!10025}
!10025 = !DILocalVariable(name: "msg", scope: !10026, file: !7058, line: 70, type: !659, align: 32)
!10026 = distinct !DILexicalBlock(scope: !10022, file: !7058, line: 70, column: 21)
!10027 = !DILocation(line: 70, column: 25, scope: !10026)
!10028 = !DILocation(line: 73, column: 94, scope: !10026)
!10029 = !DILocation(line: 73, column: 59, scope: !10026)
!10030 = !DILocation(line: 73, column: 21, scope: !10026)
!10031 = distinct !DISubprogram(name: "next<u64>", linkageName: "_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17h5870ab742149e2dbE", scope: !10032, file: !7035, line: 849, type: !10033, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10038, retainedNodes: !10036)
!10032 = !DINamespace(name: "{impl#6}", scope: !7037)
!10033 = !DISubroutineType(types: !10034)
!10034 = !{!757, !10035}
!10035 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::range::Range<u64>", baseType: !5915, size: 32, align: 32, dwarfAddressSpace: 0)
!10036 = !{!10037}
!10037 = !DILocalVariable(name: "self", arg: 1, scope: !10031, file: !7035, line: 849, type: !10035)
!10038 = !{!10039}
!10039 = !DITemplateTypeParameter(name: "A", type: !765)
!10040 = !DILocation(line: 849, column: 13, scope: !10031)
!10041 = !DILocation(line: 850, column: 14, scope: !10031)
!10042 = !DILocation(line: 851, column: 6, scope: !10031)
!10043 = distinct !DISubprogram(name: "try_rfold<core::slice::iter::Iter<u8>, usize, core::iter::adapters::copied::copy_try_fold::{closure_env#0}<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, core::iter::traits::iterator::Iterator::rposition::check::{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>>, core::ops::control_flow::ControlFlow<usize, usize>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17he31cd2a88487d966E", scope: !10045, file: !10044, line: 230, type: !10047, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10066, retainedNodes: !10054)
!10044 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/double_ended.rs", directory: "", checksumkind: CSK_MD5, checksum: "4bf153d82d01e9943c3fcd15b2ede365")
!10045 = !DINamespace(name: "DoubleEndedIterator", scope: !10046)
!10046 = !DINamespace(name: "double_ended", scope: !446)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{!588, !10049, !9, !10050}
!10049 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !396, size: 32, align: 32, dwarfAddressSpace: 0)
!10050 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, core::iter::traits::iterator::Iterator::rposition::check::{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>>", scope: !10051, file: !2, align: 8, elements: !10052, templateParams: !14, identifier: "91294b2c34749e849ac749676f56ae19")
!10051 = !DINamespace(name: "copy_try_fold", scope: !389)
!10052 = !{!10053}
!10053 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10050, file: !2, baseType: !604, align: 8)
!10054 = !{!10055, !10056, !10057, !10058, !10060, !10062, !10064}
!10055 = !DILocalVariable(name: "self", arg: 1, scope: !10043, file: !10044, line: 230, type: !10049)
!10056 = !DILocalVariable(name: "init", arg: 2, scope: !10043, file: !10044, line: 230, type: !9)
!10057 = !DILocalVariable(name: "f", arg: 3, scope: !10043, file: !10044, line: 230, type: !10050)
!10058 = !DILocalVariable(name: "accum", scope: !10059, file: !10044, line: 236, type: !9, align: 32)
!10059 = distinct !DILexicalBlock(scope: !10043, file: !10044, line: 236, column: 9)
!10060 = !DILocalVariable(name: "x", scope: !10061, file: !10044, line: 237, type: !12, align: 32)
!10061 = distinct !DILexicalBlock(scope: !10059, file: !10044, line: 237, column: 46)
!10062 = !DILocalVariable(name: "residual", scope: !10063, file: !10044, line: 238, type: !6985, align: 32)
!10063 = distinct !DILexicalBlock(scope: !10061, file: !10044, line: 238, column: 32)
!10064 = !DILocalVariable(name: "val", scope: !10065, file: !10044, line: 238, type: !9, align: 32)
!10065 = distinct !DILexicalBlock(scope: !10061, file: !10044, line: 238, column: 21)
!10066 = !{!10067, !597, !10068, !618}
!10067 = !DITemplateTypeParameter(name: "Self", type: !396)
!10068 = !DITemplateTypeParameter(name: "F", type: !10050)
!10069 = !DILocation(line: 230, column: 27, scope: !10043)
!10070 = !DILocation(line: 230, column: 38, scope: !10043)
!10071 = !DILocation(line: 230, column: 47, scope: !10043)
!10072 = !DILocation(line: 236, column: 13, scope: !10059)
!10073 = !DILocation(line: 236, column: 25, scope: !10043)
!10074 = !DILocation(line: 237, column: 9, scope: !10059)
!10075 = !DILocation(line: 237, column: 34, scope: !10061)
!10076 = !DILocation(line: 237, column: 29, scope: !10061)
!10077 = !DILocation(line: 237, column: 19, scope: !10061)
!10078 = !DILocation(line: 237, column: 24, scope: !10061)
!10079 = !DILocation(line: 238, column: 23, scope: !10061)
!10080 = !DILocation(line: 238, column: 21, scope: !10061)
!10081 = !DILocation(line: 240, column: 15, scope: !10059)
!10082 = !DILocation(line: 241, column: 5, scope: !10043)
!10083 = !DILocation(line: 238, column: 32, scope: !10061)
!10084 = !DILocation(line: 238, column: 32, scope: !10063)
!10085 = !DILocation(line: 238, column: 21, scope: !10063)
!10086 = !DILocation(line: 238, column: 21, scope: !10065)
!10087 = !DILocation(line: 238, column: 13, scope: !10061)
!10088 = !DILocation(line: 241, column: 6, scope: !10043)
!10089 = distinct !DISubprogram(name: "all<core::str::iter::Chars, rustc_demangle::legacy::is_rust_hash::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all17h4a614af27c7c3388E", scope: !444, file: !10090, line: 2762, type: !10091, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10097, retainedNodes: !10094)
!10090 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "c7c2e5a973ab44115d21857ec4b2ea0f")
!10091 = !DISubroutineType(types: !10092)
!10092 = !{!706, !10093, !6463}
!10093 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !781, size: 32, align: 32, dwarfAddressSpace: 0)
!10094 = !{!10095, !10096}
!10095 = !DILocalVariable(name: "self", arg: 1, scope: !10089, file: !10090, line: 2762, type: !10093)
!10096 = !DILocalVariable(name: "f", arg: 2, scope: !10089, file: !10090, line: 2762, type: !6463)
!10097 = !{!10098, !10099}
!10098 = !DITemplateTypeParameter(name: "Self", type: !781)
!10099 = !DITemplateTypeParameter(name: "F", type: !6463)
!10100 = !DILocation(line: 2762, column: 15, scope: !10089)
!10101 = !DILocation(line: 2762, column: 26, scope: !10089)
!10102 = !DILocation(line: 2773, column: 27, scope: !10089)
!10103 = !DILocation(line: 2773, column: 14, scope: !10089)
!10104 = !DILocation(line: 2773, column: 9, scope: !10089)
!10105 = !DILocation(line: 2774, column: 6, scope: !10089)
!10106 = distinct !DISubprogram(name: "all<core::str::iter::Chars, rustc_demangle::is_symbol_like::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all17h717127c3919a9b93E", scope: !444, file: !10090, line: 2762, type: !10107, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10112, retainedNodes: !10109)
!10107 = !DISubroutineType(types: !10108)
!10108 = !{!706, !10093, !718}
!10109 = !{!10110, !10111}
!10110 = !DILocalVariable(name: "self", arg: 1, scope: !10106, file: !10090, line: 2762, type: !10093)
!10111 = !DILocalVariable(name: "f", arg: 2, scope: !10106, file: !10090, line: 2762, type: !718)
!10112 = !{!10098, !10113}
!10113 = !DITemplateTypeParameter(name: "F", type: !718)
!10114 = !DILocation(line: 2762, column: 15, scope: !10106)
!10115 = !DILocation(line: 2762, column: 26, scope: !10106)
!10116 = !DILocation(line: 2773, column: 27, scope: !10106)
!10117 = !DILocation(line: 2773, column: 14, scope: !10106)
!10118 = !DILocation(line: 2773, column: 9, scope: !10106)
!10119 = !DILocation(line: 2774, column: 6, scope: !10106)
!10120 = distinct !DISubprogram(name: "all<core::str::iter::Chars, rustc_demangle::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all17h85cebea358c3df93E", scope: !444, file: !10090, line: 2762, type: !10121, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10126, retainedNodes: !10123)
!10121 = !DISubroutineType(types: !10122)
!10122 = !{!706, !10093, !6748}
!10123 = !{!10124, !10125}
!10124 = !DILocalVariable(name: "self", arg: 1, scope: !10120, file: !10090, line: 2762, type: !10093)
!10125 = !DILocalVariable(name: "f", arg: 2, scope: !10120, file: !10090, line: 2762, type: !6748)
!10126 = !{!10098, !10127}
!10127 = !DITemplateTypeParameter(name: "F", type: !6748)
!10128 = !DILocation(line: 2762, column: 15, scope: !10120)
!10129 = !DILocation(line: 2762, column: 26, scope: !10120)
!10130 = !DILocation(line: 2773, column: 27, scope: !10120)
!10131 = !DILocation(line: 2773, column: 14, scope: !10120)
!10132 = !DILocation(line: 2773, column: 9, scope: !10120)
!10133 = !DILocation(line: 2774, column: 6, scope: !10120)
!10134 = distinct !DISubprogram(name: "all<core::str::iter::Chars, rustc_demangle::legacy::{impl#0}::fmt::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all17hab7dccb05ed8594cE", scope: !444, file: !10090, line: 2762, type: !10135, scopeLine: 2762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10141, retainedNodes: !10138)
!10135 = !DISubroutineType(types: !10136)
!10136 = !{!706, !10093, !10137}
!10137 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !7088, file: !2, align: 8, elements: !14, identifier: "26a66a50e2a633662578b975f33e60bc")
!10138 = !{!10139, !10140}
!10139 = !DILocalVariable(name: "self", arg: 1, scope: !10134, file: !10090, line: 2762, type: !10093)
!10140 = !DILocalVariable(name: "f", arg: 2, scope: !10134, file: !10090, line: 2762, type: !10137)
!10141 = !{!10098, !10142}
!10142 = !DITemplateTypeParameter(name: "F", type: !10137)
!10143 = !DILocation(line: 2762, column: 15, scope: !10134)
!10144 = !DILocation(line: 2762, column: 26, scope: !10134)
!10145 = !DILocation(line: 2773, column: 27, scope: !10134)
!10146 = !DILocation(line: 2773, column: 14, scope: !10134)
!10147 = !DILocation(line: 2773, column: 9, scope: !10134)
!10148 = !DILocation(line: 2774, column: 6, scope: !10134)
!10149 = distinct !DISubprogram(name: "check<char, rustc_demangle::legacy::is_rust_hash::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check17h39d83deea9b7731fE", scope: !10150, file: !10090, line: 2768, type: !10151, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10155, retainedNodes: !10153)
!10150 = !DINamespace(name: "all", scope: !444)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{null, !6463}
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "f", arg: 1, scope: !10149, file: !10090, line: 2768, type: !6463)
!10155 = !{!251, !10156}
!10156 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !6463)
!10157 = !DILocation(line: 2768, column: 21, scope: !10149)
!10158 = !DILocation(line: 2772, column: 10, scope: !10149)
!10159 = distinct !DISubprogram(name: "check<char, rustc_demangle::legacy::{impl#0}::fmt::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check17h4778218eff8c631dE", scope: !10150, file: !10090, line: 2768, type: !10160, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10164, retainedNodes: !10162)
!10160 = !DISubroutineType(types: !10161)
!10161 = !{null, !10137}
!10162 = !{!10163}
!10163 = !DILocalVariable(name: "f", arg: 1, scope: !10159, file: !10090, line: 2768, type: !10137)
!10164 = !{!251, !10165}
!10165 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !10137)
!10166 = !DILocation(line: 2768, column: 21, scope: !10159)
!10167 = !DILocation(line: 2772, column: 10, scope: !10159)
!10168 = distinct !DISubprogram(name: "check<char, rustc_demangle::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check17h8a10046d43946b14E", scope: !10150, file: !10090, line: 2768, type: !10169, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10173, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{null, !6748}
!10171 = !{!10172}
!10172 = !DILocalVariable(name: "f", arg: 1, scope: !10168, file: !10090, line: 2768, type: !6748)
!10173 = !{!251, !10174}
!10174 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !6748)
!10175 = !DILocation(line: 2768, column: 21, scope: !10168)
!10176 = !DILocation(line: 2772, column: 10, scope: !10168)
!10177 = distinct !DISubprogram(name: "check<char, rustc_demangle::is_symbol_like::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check17h9fae99f45e7567d1E", scope: !10150, file: !10090, line: 2768, type: !10178, scopeLine: 2768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10182, retainedNodes: !10180)
!10178 = !DISubroutineType(types: !10179)
!10179 = !{null, !718}
!10180 = !{!10181}
!10181 = !DILocalVariable(name: "f", arg: 1, scope: !10177, file: !10090, line: 2768, type: !718)
!10182 = !{!251, !10183}
!10183 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !718)
!10184 = !DILocation(line: 2768, column: 21, scope: !10177)
!10185 = !DILocation(line: 2772, column: 10, scope: !10177)
!10186 = distinct !DISubprogram(name: "{closure#0}<char, rustc_demangle::legacy::{impl#0}::fmt::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h07c48841d862c9d7E", scope: !10187, file: !10090, line: 2769, type: !10188, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10164, retainedNodes: !10194)
!10187 = !DINamespace(name: "check", scope: !10150)
!10188 = !DISubroutineType(types: !10189)
!10189 = !{!423, !10190, !7, !252}
!10190 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::legacy::{impl#0}::fmt::{closure_env#0}>", baseType: !10191, size: 32, align: 32, dwarfAddressSpace: 0)
!10191 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, rustc_demangle::legacy::{impl#0}::fmt::{closure_env#0}>", scope: !10187, file: !2, align: 8, elements: !10192, templateParams: !14, identifier: "c74e58d44ce288103b3f4951ad6ce2b9")
!10192 = !{!10193}
!10193 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10191, file: !2, baseType: !10137, align: 8)
!10194 = !{!10195, !10196, !10197}
!10195 = !DILocalVariable(name: "x", arg: 3, scope: !10186, file: !10090, line: 2769, type: !252)
!10196 = !DILocalVariable(name: "f", scope: !10186, file: !10090, line: 2768, type: !10137, align: 8)
!10197 = !DILocalVariable(arg: 2, scope: !10186, file: !10090, line: 2769, type: !7)
!10198 = !DILocation(line: 2768, column: 25, scope: !10186)
!10199 = !DILocation(line: 2769, column: 19, scope: !10186)
!10200 = !DILocation(line: 2769, column: 23, scope: !10186)
!10201 = !DILocation(line: 2770, column: 20, scope: !10186)
!10202 = !DILocation(line: 2770, column: 62, scope: !10186)
!10203 = !DILocation(line: 2770, column: 17, scope: !10186)
!10204 = !DILocation(line: 2770, column: 27, scope: !10186)
!10205 = !DILocation(line: 2771, column: 14, scope: !10186)
!10206 = distinct !DISubprogram(name: "{closure#0}<char, rustc_demangle::is_symbol_like::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17h9a92d7e2bf6b4947E", scope: !10187, file: !10090, line: 2769, type: !10207, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10182, retainedNodes: !10213)
!10207 = !DISubroutineType(types: !10208)
!10208 = !{!423, !10209, !7, !252}
!10209 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::is_symbol_like::{closure_env#0}>", baseType: !10210, size: 32, align: 32, dwarfAddressSpace: 0)
!10210 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, rustc_demangle::is_symbol_like::{closure_env#0}>", scope: !10187, file: !2, align: 8, elements: !10211, templateParams: !14, identifier: "6445677c4e9998447df5fd78b3988df3")
!10211 = !{!10212}
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10210, file: !2, baseType: !718, align: 8)
!10213 = !{!10214, !10215, !10216}
!10214 = !DILocalVariable(name: "x", arg: 3, scope: !10206, file: !10090, line: 2769, type: !252)
!10215 = !DILocalVariable(name: "f", scope: !10206, file: !10090, line: 2768, type: !718, align: 8)
!10216 = !DILocalVariable(arg: 2, scope: !10206, file: !10090, line: 2769, type: !7)
!10217 = !DILocation(line: 2768, column: 25, scope: !10206)
!10218 = !DILocation(line: 2769, column: 19, scope: !10206)
!10219 = !DILocation(line: 2769, column: 23, scope: !10206)
!10220 = !DILocation(line: 2770, column: 20, scope: !10206)
!10221 = !DILocation(line: 2770, column: 62, scope: !10206)
!10222 = !DILocation(line: 2770, column: 17, scope: !10206)
!10223 = !DILocation(line: 2770, column: 27, scope: !10206)
!10224 = !DILocation(line: 2771, column: 14, scope: !10206)
!10225 = distinct !DISubprogram(name: "{closure#0}<char, rustc_demangle::legacy::is_rust_hash::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hc9f86becd3907194E", scope: !10187, file: !10090, line: 2769, type: !10226, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10155, retainedNodes: !10232)
!10226 = !DISubroutineType(types: !10227)
!10227 = !{!423, !10228, !7, !252}
!10228 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::legacy::is_rust_hash::{closure_env#0}>", baseType: !10229, size: 32, align: 32, dwarfAddressSpace: 0)
!10229 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, rustc_demangle::legacy::is_rust_hash::{closure_env#0}>", scope: !10187, file: !2, align: 8, elements: !10230, templateParams: !14, identifier: "a64e3a9e7ffd0fbbd1e08b6a1f838ad7")
!10230 = !{!10231}
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10229, file: !2, baseType: !6463, align: 8)
!10232 = !{!10233, !10234, !10235}
!10233 = !DILocalVariable(name: "x", arg: 3, scope: !10225, file: !10090, line: 2769, type: !252)
!10234 = !DILocalVariable(name: "f", scope: !10225, file: !10090, line: 2768, type: !6463, align: 8)
!10235 = !DILocalVariable(arg: 2, scope: !10225, file: !10090, line: 2769, type: !7)
!10236 = !DILocation(line: 2768, column: 25, scope: !10225)
!10237 = !DILocation(line: 2769, column: 19, scope: !10225)
!10238 = !DILocation(line: 2769, column: 23, scope: !10225)
!10239 = !DILocation(line: 2770, column: 20, scope: !10225)
!10240 = !DILocation(line: 2770, column: 62, scope: !10225)
!10241 = !DILocation(line: 2770, column: 17, scope: !10225)
!10242 = !DILocation(line: 2770, column: 27, scope: !10225)
!10243 = !DILocation(line: 2771, column: 14, scope: !10225)
!10244 = distinct !DISubprogram(name: "{closure#0}<char, rustc_demangle::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17hfaa840069c622cadE", scope: !10187, file: !10090, line: 2769, type: !10245, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10173, retainedNodes: !10251)
!10245 = !DISubroutineType(types: !10246)
!10246 = !{!423, !10247, !7, !252}
!10247 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::demangle::{closure_env#0}>", baseType: !10248, size: 32, align: 32, dwarfAddressSpace: 0)
!10248 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, rustc_demangle::demangle::{closure_env#0}>", scope: !10187, file: !2, align: 8, elements: !10249, templateParams: !14, identifier: "e42461846261f9405c36c482c95cfab2")
!10249 = !{!10250}
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10248, file: !2, baseType: !6748, align: 8)
!10251 = !{!10252, !10253, !10254}
!10252 = !DILocalVariable(name: "x", arg: 3, scope: !10244, file: !10090, line: 2769, type: !252)
!10253 = !DILocalVariable(name: "f", scope: !10244, file: !10090, line: 2768, type: !6748, align: 8)
!10254 = !DILocalVariable(arg: 2, scope: !10244, file: !10090, line: 2769, type: !7)
!10255 = !DILocation(line: 2768, column: 25, scope: !10244)
!10256 = !DILocation(line: 2769, column: 19, scope: !10244)
!10257 = !DILocation(line: 2769, column: 23, scope: !10244)
!10258 = !DILocation(line: 2770, column: 20, scope: !10244)
!10259 = !DILocation(line: 2770, column: 62, scope: !10244)
!10260 = !DILocation(line: 2770, column: 17, scope: !10244)
!10261 = !DILocation(line: 2770, column: 27, scope: !10244)
!10262 = !DILocation(line: 2771, column: 14, scope: !10244)
!10263 = distinct !DISubprogram(name: "any<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#3}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any17h1076ee9e92f1b00dE", scope: !444, file: !10090, line: 2815, type: !10264, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10269, retainedNodes: !10266)
!10264 = !DISubroutineType(types: !10265)
!10265 = !{!706, !503, !970}
!10266 = !{!10267, !10268}
!10267 = !DILocalVariable(name: "self", arg: 1, scope: !10263, file: !10090, line: 2815, type: !503)
!10268 = !DILocalVariable(name: "f", arg: 2, scope: !10263, file: !10090, line: 2815, type: !970)
!10269 = !{!10270, !10271}
!10270 = !DITemplateTypeParameter(name: "Self", type: !262)
!10271 = !DITemplateTypeParameter(name: "F", type: !970)
!10272 = !DILocation(line: 2815, column: 15, scope: !10263)
!10273 = !DILocation(line: 2815, column: 26, scope: !10263)
!10274 = !DILocation(line: 2827, column: 27, scope: !10263)
!10275 = !DILocation(line: 2827, column: 14, scope: !10263)
!10276 = !DILocation(line: 2827, column: 9, scope: !10263)
!10277 = !DILocation(line: 2828, column: 6, scope: !10263)
!10278 = distinct !DISubprogram(name: "any<core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>, rustc_demangle::legacy::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any17h88210251c2bb0be6E", scope: !444, file: !10090, line: 2815, type: !10279, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10284, retainedNodes: !10281)
!10279 = !DISubroutineType(types: !10280)
!10280 = !{!706, !392, !449}
!10281 = !{!10282, !10283}
!10282 = !DILocalVariable(name: "self", arg: 1, scope: !10278, file: !10090, line: 2815, type: !392)
!10283 = !DILocalVariable(name: "f", arg: 2, scope: !10278, file: !10090, line: 2815, type: !449)
!10284 = !{!10285, !10286}
!10285 = !DITemplateTypeParameter(name: "Self", type: !393)
!10286 = !DITemplateTypeParameter(name: "F", type: !449)
!10287 = !DILocation(line: 2815, column: 15, scope: !10278)
!10288 = !DILocation(line: 2815, column: 26, scope: !10278)
!10289 = !DILocation(line: 2827, column: 27, scope: !10278)
!10290 = !DILocation(line: 2827, column: 14, scope: !10278)
!10291 = !DILocation(line: 2827, column: 9, scope: !10278)
!10292 = !DILocation(line: 2828, column: 6, scope: !10278)
!10293 = distinct !DISubprogram(name: "any<core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>, rustc_demangle::v0::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any17hfbbeee719173d5bfE", scope: !444, file: !10090, line: 2815, type: !10294, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10299, retainedNodes: !10296)
!10294 = !DISubroutineType(types: !10295)
!10295 = !{!706, !392, !471}
!10296 = !{!10297, !10298}
!10297 = !DILocalVariable(name: "self", arg: 1, scope: !10293, file: !10090, line: 2815, type: !392)
!10298 = !DILocalVariable(name: "f", arg: 2, scope: !10293, file: !10090, line: 2815, type: !471)
!10299 = !{!10285, !10300}
!10300 = !DITemplateTypeParameter(name: "F", type: !471)
!10301 = !DILocation(line: 2815, column: 15, scope: !10293)
!10302 = !DILocation(line: 2815, column: 26, scope: !10293)
!10303 = !DILocation(line: 2827, column: 27, scope: !10293)
!10304 = !DILocation(line: 2827, column: 14, scope: !10293)
!10305 = !DILocation(line: 2827, column: 9, scope: !10293)
!10306 = !DILocation(line: 2828, column: 6, scope: !10293)
!10307 = distinct !DISubprogram(name: "check<core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#3}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any5check17h728ac07fbf604e96E", scope: !443, file: !10090, line: 2821, type: !10308, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10312, retainedNodes: !10310)
!10308 = !DISubroutineType(types: !10309)
!10309 = !{null, !970}
!10310 = !{!10311}
!10311 = !DILocalVariable(name: "f", arg: 1, scope: !10307, file: !10090, line: 2821, type: !970)
!10312 = !{!497, !10313}
!10313 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !970)
!10314 = !DILocation(line: 2821, column: 21, scope: !10307)
!10315 = !DILocation(line: 2825, column: 10, scope: !10307)
!10316 = distinct !DISubprogram(name: "check<u8, rustc_demangle::v0::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any5check17haa646e6b493d1385E", scope: !443, file: !10090, line: 2821, type: !10317, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10321, retainedNodes: !10319)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{null, !471}
!10319 = !{!10320}
!10320 = !DILocalVariable(name: "f", arg: 1, scope: !10316, file: !10090, line: 2821, type: !471)
!10321 = !{!289, !10322}
!10322 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !471)
!10323 = !DILocation(line: 2821, column: 21, scope: !10316)
!10324 = !DILocation(line: 2825, column: 10, scope: !10316)
!10325 = distinct !DISubprogram(name: "check<u8, rustc_demangle::legacy::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any5check17hb252282aea8f2929E", scope: !443, file: !10090, line: 2821, type: !10326, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10330, retainedNodes: !10328)
!10326 = !DISubroutineType(types: !10327)
!10327 = !{null, !449}
!10328 = !{!10329}
!10329 = !DILocalVariable(name: "f", arg: 1, scope: !10325, file: !10090, line: 2821, type: !449)
!10330 = !{!289, !10331}
!10331 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !449)
!10332 = !DILocation(line: 2821, column: 21, scope: !10325)
!10333 = !DILocation(line: 2825, column: 10, scope: !10325)
!10334 = distinct !DISubprogram(name: "{closure#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h056c7ef3ed86ccd7E", scope: !442, file: !10090, line: 2822, type: !10335, scopeLine: 2822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10330, retainedNodes: !10338)
!10335 = !DISubroutineType(types: !10336)
!10336 = !{!423, !10337, !7, !13}
!10337 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>", baseType: !441, size: 32, align: 32, dwarfAddressSpace: 0)
!10338 = !{!10339, !10340, !10341}
!10339 = !DILocalVariable(name: "x", arg: 3, scope: !10334, file: !10090, line: 2822, type: !13)
!10340 = !DILocalVariable(name: "f", scope: !10334, file: !10090, line: 2821, type: !449, align: 8)
!10341 = !DILocalVariable(arg: 2, scope: !10334, file: !10090, line: 2822, type: !7)
!10342 = !DILocation(line: 2821, column: 25, scope: !10334)
!10343 = !DILocation(line: 2822, column: 19, scope: !10334)
!10344 = !DILocation(line: 2822, column: 23, scope: !10334)
!10345 = !DILocation(line: 2823, column: 20, scope: !10334)
!10346 = !DILocation(line: 2823, column: 59, scope: !10334)
!10347 = !DILocation(line: 2823, column: 17, scope: !10334)
!10348 = !DILocation(line: 2823, column: 27, scope: !10334)
!10349 = !DILocation(line: 2824, column: 14, scope: !10334)
!10350 = distinct !DISubprogram(name: "{closure#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17h78bc04c9e16b1df6E", scope: !442, file: !10090, line: 2822, type: !10351, scopeLine: 2822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10321, retainedNodes: !10354)
!10351 = !DISubroutineType(types: !10352)
!10352 = !{!423, !10353, !7, !13}
!10353 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>", baseType: !468, size: 32, align: 32, dwarfAddressSpace: 0)
!10354 = !{!10355, !10356, !10357}
!10355 = !DILocalVariable(name: "x", arg: 3, scope: !10350, file: !10090, line: 2822, type: !13)
!10356 = !DILocalVariable(name: "f", scope: !10350, file: !10090, line: 2821, type: !471, align: 8)
!10357 = !DILocalVariable(arg: 2, scope: !10350, file: !10090, line: 2822, type: !7)
!10358 = !DILocation(line: 2821, column: 25, scope: !10350)
!10359 = !DILocation(line: 2822, column: 19, scope: !10350)
!10360 = !DILocation(line: 2822, column: 23, scope: !10350)
!10361 = !DILocation(line: 2823, column: 20, scope: !10350)
!10362 = !DILocation(line: 2823, column: 59, scope: !10350)
!10363 = !DILocation(line: 2823, column: 17, scope: !10350)
!10364 = !DILocation(line: 2823, column: 27, scope: !10350)
!10365 = !DILocation(line: 2824, column: 14, scope: !10350)
!10366 = distinct !DISubprogram(name: "{closure#0}<core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#3}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17hbd18c2a6d47b80d9E", scope: !442, file: !10090, line: 2822, type: !10367, scopeLine: 2822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10312, retainedNodes: !10373)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{!423, !10369, !7, !306}
!10369 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#3}>", baseType: !10370, size: 32, align: 32, dwarfAddressSpace: 0)
!10370 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#3}>", scope: !442, file: !2, align: 8, elements: !10371, templateParams: !14, identifier: "9788b4dacd75ba4324dd794dfb40b435")
!10371 = !{!10372}
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10370, file: !2, baseType: !970, align: 8)
!10373 = !{!10374, !10375, !10376}
!10374 = !DILocalVariable(name: "x", arg: 3, scope: !10366, file: !10090, line: 2822, type: !306)
!10375 = !DILocalVariable(name: "f", scope: !10366, file: !10090, line: 2821, type: !970, align: 8)
!10376 = !DILocalVariable(arg: 2, scope: !10366, file: !10090, line: 2822, type: !7)
!10377 = !DILocation(line: 2821, column: 25, scope: !10366)
!10378 = !DILocation(line: 2822, column: 19, scope: !10366)
!10379 = !DILocation(line: 2822, column: 23, scope: !10366)
!10380 = !DILocation(line: 2823, column: 20, scope: !10366)
!10381 = !DILocation(line: 2823, column: 59, scope: !10366)
!10382 = !DILocation(line: 2823, column: 17, scope: !10366)
!10383 = !DILocation(line: 2823, column: 27, scope: !10366)
!10384 = !DILocation(line: 2824, column: 14, scope: !10366)
!10385 = distinct !DISubprogram(name: "map<core::slice::iter::ChunksExact<u8>, [&u8; 2], rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h59a589504a54795aE", scope: !444, file: !10090, line: 773, type: !10386, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10391, retainedNodes: !10388)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{!273, !276, !291}
!10388 = !{!10389, !10390}
!10389 = !DILocalVariable(name: "self", arg: 1, scope: !10385, file: !10090, line: 773, type: !276)
!10390 = !DILocalVariable(name: "f", arg: 2, scope: !10385, file: !10090, line: 773, type: !291)
!10391 = !{!10392, !356, !294}
!10392 = !DITemplateTypeParameter(name: "Self", type: !276)
!10393 = !DILocation(line: 773, column: 18, scope: !10385)
!10394 = !DILocation(line: 773, column: 24, scope: !10385)
!10395 = !DILocation(line: 778, column: 9, scope: !10385)
!10396 = !DILocation(line: 779, column: 6, scope: !10385)
!10397 = distinct !DISubprogram(name: "map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, u8, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17hb630c309db724195E", scope: !444, file: !10090, line: 773, type: !10398, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10403, retainedNodes: !10400)
!10398 = !DISubroutineType(types: !10399)
!10399 = !{!270, !273, !296}
!10400 = !{!10401, !10402}
!10401 = !DILocalVariable(name: "self", arg: 1, scope: !10397, file: !10090, line: 773, type: !273)
!10402 = !DILocalVariable(name: "f", arg: 2, scope: !10397, file: !10090, line: 773, type: !296)
!10403 = !{!10404, !380, !299}
!10404 = !DITemplateTypeParameter(name: "Self", type: !273)
!10405 = !DILocation(line: 773, column: 18, scope: !10397)
!10406 = !DILocation(line: 773, column: 24, scope: !10397)
!10407 = !DILocation(line: 778, column: 9, scope: !10397)
!10408 = !DILocation(line: 779, column: 6, scope: !10397)
!10409 = distinct !DISubprogram(name: "map<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, char, fn(core::result::Result<char, ()>) -> char>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17hdfcd3cc677effb67E", scope: !444, file: !10090, line: 773, type: !10410, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10415, retainedNodes: !10412)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{!259, !262, !303}
!10412 = !{!10413, !10414}
!10413 = !DILocalVariable(name: "self", arg: 1, scope: !10409, file: !10090, line: 773, type: !262)
!10414 = !DILocalVariable(name: "f", arg: 2, scope: !10409, file: !10090, line: 773, type: !303)
!10415 = !{!10270, !327, !323}
!10416 = !DILocation(line: 773, column: 18, scope: !10409)
!10417 = !DILocation(line: 773, column: 24, scope: !10409)
!10418 = !DILocation(line: 778, column: 9, scope: !10409)
!10419 = !DILocation(line: 779, column: 6, scope: !10409)
!10420 = distinct !DISubprogram(name: "copied<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6copied17hd680b744117ee0feE", scope: !444, file: !10090, line: 3418, type: !10421, scopeLine: 3418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10425, retainedNodes: !10423)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{!393, !396}
!10423 = !{!10424}
!10424 = !DILocalVariable(name: "self", arg: 1, scope: !10420, file: !10090, line: 3418, type: !396)
!10425 = !{!10067, !289}
!10426 = !DILocation(line: 3418, column: 22, scope: !10420)
!10427 = !DILocation(line: 3423, column: 9, scope: !10420)
!10428 = !DILocation(line: 3424, column: 6, scope: !10420)
!10429 = distinct !DISubprogram(name: "peekable<core::str::iter::Bytes>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8peekable17he15bde6a450c3e1cE", scope: !444, file: !10090, line: 1056, type: !10430, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10434, retainedNodes: !10432)
!10430 = !DISubroutineType(types: !10431)
!10431 = !{!517, !520}
!10432 = !{!10433}
!10433 = !DILocalVariable(name: "self", arg: 1, scope: !10429, file: !10090, line: 1056, type: !520)
!10434 = !{!10435}
!10435 = !DITemplateTypeParameter(name: "Self", type: !520)
!10436 = !DILocation(line: 1056, column: 17, scope: !10429)
!10437 = !DILocation(line: 1060, column: 9, scope: !10429)
!10438 = !DILocation(line: 1061, column: 6, scope: !10429)
!10439 = distinct !DISubprogram(name: "try_fold<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, (), core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#3}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h6252500cf65d6d8dE", scope: !444, file: !10090, line: 2419, type: !10440, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10454, retainedNodes: !10442)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{!423, !503, !7, !10370}
!10442 = !{!10443, !10444, !10445, !10446, !10448, !10450, !10452}
!10443 = !DILocalVariable(name: "self", arg: 1, scope: !10439, file: !10090, line: 2419, type: !503)
!10444 = !DILocalVariable(name: "init", arg: 2, scope: !10439, file: !10090, line: 2419, type: !7)
!10445 = !DILocalVariable(name: "f", arg: 3, scope: !10439, file: !10090, line: 2419, type: !10370)
!10446 = !DILocalVariable(name: "accum", scope: !10447, file: !10090, line: 2425, type: !7, align: 8)
!10447 = distinct !DILexicalBlock(scope: !10439, file: !10090, line: 2425, column: 9)
!10448 = !DILocalVariable(name: "x", scope: !10449, file: !10090, line: 2426, type: !306, align: 32)
!10449 = distinct !DILexicalBlock(scope: !10447, file: !10090, line: 2426, column: 41)
!10450 = !DILocalVariable(name: "residual", scope: !10451, file: !10090, line: 2427, type: !6961, align: 8)
!10451 = distinct !DILexicalBlock(scope: !10449, file: !10090, line: 2427, column: 32)
!10452 = !DILocalVariable(name: "val", scope: !10453, file: !10090, line: 2427, type: !7, align: 8)
!10453 = distinct !DILexicalBlock(scope: !10449, file: !10090, line: 2427, column: 21)
!10454 = !{!10270, !434, !10455, !458}
!10455 = !DITemplateTypeParameter(name: "F", type: !10370)
!10456 = !DILocation(line: 2419, column: 26, scope: !10439)
!10457 = !DILocation(line: 2419, column: 37, scope: !10439)
!10458 = !DILocation(line: 2419, column: 46, scope: !10439)
!10459 = !DILocation(line: 2425, column: 13, scope: !10447)
!10460 = !DILocation(line: 2427, column: 32, scope: !10451)
!10461 = !DILocation(line: 2427, column: 21, scope: !10453)
!10462 = !DILocation(line: 2426, column: 9, scope: !10447)
!10463 = !DILocation(line: 2426, column: 34, scope: !10449)
!10464 = !DILocation(line: 2426, column: 29, scope: !10449)
!10465 = !DILocation(line: 2426, column: 19, scope: !10449)
!10466 = !DILocation(line: 2426, column: 24, scope: !10449)
!10467 = !DILocation(line: 2427, column: 21, scope: !10449)
!10468 = !DILocation(line: 2429, column: 15, scope: !10447)
!10469 = !DILocation(line: 2430, column: 5, scope: !10439)
!10470 = !DILocation(line: 2427, column: 21, scope: !10451)
!10471 = !DILocation(line: 2430, column: 6, scope: !10439)
!10472 = distinct !DISubprogram(name: "try_fold<core::slice::iter::Iter<u8>, (), core::iter::adapters::copied::copy_try_fold::{closure_env#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h6352b8cd1fa40f98E", scope: !444, file: !10090, line: 2419, type: !10473, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10490, retainedNodes: !10478)
!10473 = !DISubroutineType(types: !10474)
!10474 = !{!423, !10049, !7, !10475}
!10475 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>>", scope: !10051, file: !2, align: 8, elements: !10476, templateParams: !14, identifier: "cbc6541b8d6f0d486f03138b440a7fe9")
!10476 = !{!10477}
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10475, file: !2, baseType: !441, align: 8)
!10478 = !{!10479, !10480, !10481, !10482, !10484, !10486, !10488}
!10479 = !DILocalVariable(name: "self", arg: 1, scope: !10472, file: !10090, line: 2419, type: !10049)
!10480 = !DILocalVariable(name: "init", arg: 2, scope: !10472, file: !10090, line: 2419, type: !7)
!10481 = !DILocalVariable(name: "f", arg: 3, scope: !10472, file: !10090, line: 2419, type: !10475)
!10482 = !DILocalVariable(name: "accum", scope: !10483, file: !10090, line: 2425, type: !7, align: 8)
!10483 = distinct !DILexicalBlock(scope: !10472, file: !10090, line: 2425, column: 9)
!10484 = !DILocalVariable(name: "x", scope: !10485, file: !10090, line: 2426, type: !12, align: 32)
!10485 = distinct !DILexicalBlock(scope: !10483, file: !10090, line: 2426, column: 41)
!10486 = !DILocalVariable(name: "residual", scope: !10487, file: !10090, line: 2427, type: !6961, align: 8)
!10487 = distinct !DILexicalBlock(scope: !10485, file: !10090, line: 2427, column: 32)
!10488 = !DILocalVariable(name: "val", scope: !10489, file: !10090, line: 2427, type: !7, align: 8)
!10489 = distinct !DILexicalBlock(scope: !10485, file: !10090, line: 2427, column: 21)
!10490 = !{!10067, !434, !10491, !458}
!10491 = !DITemplateTypeParameter(name: "F", type: !10475)
!10492 = !DILocation(line: 2419, column: 26, scope: !10472)
!10493 = !DILocation(line: 2419, column: 37, scope: !10472)
!10494 = !DILocation(line: 2419, column: 46, scope: !10472)
!10495 = !DILocation(line: 2425, column: 13, scope: !10483)
!10496 = !DILocation(line: 2427, column: 32, scope: !10487)
!10497 = !DILocation(line: 2427, column: 21, scope: !10489)
!10498 = !DILocation(line: 2426, column: 9, scope: !10483)
!10499 = !DILocation(line: 2426, column: 34, scope: !10485)
!10500 = !DILocation(line: 2426, column: 29, scope: !10485)
!10501 = !DILocation(line: 2426, column: 19, scope: !10485)
!10502 = !DILocation(line: 2426, column: 24, scope: !10485)
!10503 = !DILocation(line: 2427, column: 21, scope: !10485)
!10504 = !DILocation(line: 2429, column: 15, scope: !10483)
!10505 = !DILocation(line: 2430, column: 5, scope: !10472)
!10506 = !DILocation(line: 2427, column: 21, scope: !10487)
!10507 = !DILocation(line: 2430, column: 6, scope: !10472)
!10508 = distinct !DISubprogram(name: "try_fold<core::str::iter::Chars, (), core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::demangle::{closure_env#0}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h68278e83521ebc33E", scope: !444, file: !10090, line: 2419, type: !10509, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10523, retainedNodes: !10511)
!10509 = !DISubroutineType(types: !10510)
!10510 = !{!423, !10093, !7, !10248}
!10511 = !{!10512, !10513, !10514, !10515, !10517, !10519, !10521}
!10512 = !DILocalVariable(name: "self", arg: 1, scope: !10508, file: !10090, line: 2419, type: !10093)
!10513 = !DILocalVariable(name: "init", arg: 2, scope: !10508, file: !10090, line: 2419, type: !7)
!10514 = !DILocalVariable(name: "f", arg: 3, scope: !10508, file: !10090, line: 2419, type: !10248)
!10515 = !DILocalVariable(name: "accum", scope: !10516, file: !10090, line: 2425, type: !7, align: 8)
!10516 = distinct !DILexicalBlock(scope: !10508, file: !10090, line: 2425, column: 9)
!10517 = !DILocalVariable(name: "x", scope: !10518, file: !10090, line: 2426, type: !252, align: 32)
!10518 = distinct !DILexicalBlock(scope: !10516, file: !10090, line: 2426, column: 41)
!10519 = !DILocalVariable(name: "residual", scope: !10520, file: !10090, line: 2427, type: !6961, align: 8)
!10520 = distinct !DILexicalBlock(scope: !10518, file: !10090, line: 2427, column: 32)
!10521 = !DILocalVariable(name: "val", scope: !10522, file: !10090, line: 2427, type: !7, align: 8)
!10522 = distinct !DILexicalBlock(scope: !10518, file: !10090, line: 2427, column: 21)
!10523 = !{!10098, !434, !10524, !458}
!10524 = !DITemplateTypeParameter(name: "F", type: !10248)
!10525 = !DILocation(line: 2419, column: 26, scope: !10508)
!10526 = !DILocation(line: 2419, column: 37, scope: !10508)
!10527 = !DILocation(line: 2419, column: 46, scope: !10508)
!10528 = !DILocation(line: 2425, column: 13, scope: !10516)
!10529 = !DILocation(line: 2427, column: 32, scope: !10520)
!10530 = !DILocation(line: 2427, column: 21, scope: !10522)
!10531 = !DILocation(line: 2426, column: 9, scope: !10516)
!10532 = !DILocation(line: 2426, column: 34, scope: !10518)
!10533 = !DILocation(line: 2426, column: 29, scope: !10518)
!10534 = !DILocation(line: 2426, column: 19, scope: !10518)
!10535 = !DILocation(line: 2426, column: 24, scope: !10518)
!10536 = !DILocation(line: 2427, column: 21, scope: !10518)
!10537 = !DILocation(line: 2429, column: 15, scope: !10516)
!10538 = !DILocation(line: 2430, column: 5, scope: !10508)
!10539 = !DILocation(line: 2427, column: 21, scope: !10520)
!10540 = !DILocation(line: 2430, column: 6, scope: !10508)
!10541 = distinct !DISubprogram(name: "try_fold<core::str::iter::Chars, (), core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::is_symbol_like::{closure_env#0}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h7ef3edd118265511E", scope: !444, file: !10090, line: 2419, type: !10542, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10556, retainedNodes: !10544)
!10542 = !DISubroutineType(types: !10543)
!10543 = !{!423, !10093, !7, !10210}
!10544 = !{!10545, !10546, !10547, !10548, !10550, !10552, !10554}
!10545 = !DILocalVariable(name: "self", arg: 1, scope: !10541, file: !10090, line: 2419, type: !10093)
!10546 = !DILocalVariable(name: "init", arg: 2, scope: !10541, file: !10090, line: 2419, type: !7)
!10547 = !DILocalVariable(name: "f", arg: 3, scope: !10541, file: !10090, line: 2419, type: !10210)
!10548 = !DILocalVariable(name: "accum", scope: !10549, file: !10090, line: 2425, type: !7, align: 8)
!10549 = distinct !DILexicalBlock(scope: !10541, file: !10090, line: 2425, column: 9)
!10550 = !DILocalVariable(name: "x", scope: !10551, file: !10090, line: 2426, type: !252, align: 32)
!10551 = distinct !DILexicalBlock(scope: !10549, file: !10090, line: 2426, column: 41)
!10552 = !DILocalVariable(name: "residual", scope: !10553, file: !10090, line: 2427, type: !6961, align: 8)
!10553 = distinct !DILexicalBlock(scope: !10551, file: !10090, line: 2427, column: 32)
!10554 = !DILocalVariable(name: "val", scope: !10555, file: !10090, line: 2427, type: !7, align: 8)
!10555 = distinct !DILexicalBlock(scope: !10551, file: !10090, line: 2427, column: 21)
!10556 = !{!10098, !434, !10557, !458}
!10557 = !DITemplateTypeParameter(name: "F", type: !10210)
!10558 = !DILocation(line: 2419, column: 26, scope: !10541)
!10559 = !DILocation(line: 2419, column: 37, scope: !10541)
!10560 = !DILocation(line: 2419, column: 46, scope: !10541)
!10561 = !DILocation(line: 2425, column: 13, scope: !10549)
!10562 = !DILocation(line: 2427, column: 32, scope: !10553)
!10563 = !DILocation(line: 2427, column: 21, scope: !10555)
!10564 = !DILocation(line: 2426, column: 9, scope: !10549)
!10565 = !DILocation(line: 2426, column: 34, scope: !10551)
!10566 = !DILocation(line: 2426, column: 29, scope: !10551)
!10567 = !DILocation(line: 2426, column: 19, scope: !10551)
!10568 = !DILocation(line: 2426, column: 24, scope: !10551)
!10569 = !DILocation(line: 2427, column: 21, scope: !10551)
!10570 = !DILocation(line: 2429, column: 15, scope: !10549)
!10571 = !DILocation(line: 2430, column: 5, scope: !10541)
!10572 = !DILocation(line: 2427, column: 21, scope: !10553)
!10573 = !DILocation(line: 2430, column: 6, scope: !10541)
!10574 = distinct !DISubprogram(name: "try_fold<core::str::iter::Chars, (), core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::legacy::{impl#0}::fmt::{closure_env#0}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h8a0da7e4e6198897E", scope: !444, file: !10090, line: 2419, type: !10575, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10589, retainedNodes: !10577)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!423, !10093, !7, !10191}
!10577 = !{!10578, !10579, !10580, !10581, !10583, !10585, !10587}
!10578 = !DILocalVariable(name: "self", arg: 1, scope: !10574, file: !10090, line: 2419, type: !10093)
!10579 = !DILocalVariable(name: "init", arg: 2, scope: !10574, file: !10090, line: 2419, type: !7)
!10580 = !DILocalVariable(name: "f", arg: 3, scope: !10574, file: !10090, line: 2419, type: !10191)
!10581 = !DILocalVariable(name: "accum", scope: !10582, file: !10090, line: 2425, type: !7, align: 8)
!10582 = distinct !DILexicalBlock(scope: !10574, file: !10090, line: 2425, column: 9)
!10583 = !DILocalVariable(name: "x", scope: !10584, file: !10090, line: 2426, type: !252, align: 32)
!10584 = distinct !DILexicalBlock(scope: !10582, file: !10090, line: 2426, column: 41)
!10585 = !DILocalVariable(name: "residual", scope: !10586, file: !10090, line: 2427, type: !6961, align: 8)
!10586 = distinct !DILexicalBlock(scope: !10584, file: !10090, line: 2427, column: 32)
!10587 = !DILocalVariable(name: "val", scope: !10588, file: !10090, line: 2427, type: !7, align: 8)
!10588 = distinct !DILexicalBlock(scope: !10584, file: !10090, line: 2427, column: 21)
!10589 = !{!10098, !434, !10590, !458}
!10590 = !DITemplateTypeParameter(name: "F", type: !10191)
!10591 = !DILocation(line: 2419, column: 26, scope: !10574)
!10592 = !DILocation(line: 2419, column: 37, scope: !10574)
!10593 = !DILocation(line: 2419, column: 46, scope: !10574)
!10594 = !DILocation(line: 2425, column: 13, scope: !10582)
!10595 = !DILocation(line: 2427, column: 32, scope: !10586)
!10596 = !DILocation(line: 2427, column: 21, scope: !10588)
!10597 = !DILocation(line: 2426, column: 9, scope: !10582)
!10598 = !DILocation(line: 2426, column: 34, scope: !10584)
!10599 = !DILocation(line: 2426, column: 29, scope: !10584)
!10600 = !DILocation(line: 2426, column: 19, scope: !10584)
!10601 = !DILocation(line: 2426, column: 24, scope: !10584)
!10602 = !DILocation(line: 2427, column: 21, scope: !10584)
!10603 = !DILocation(line: 2429, column: 15, scope: !10582)
!10604 = !DILocation(line: 2430, column: 5, scope: !10574)
!10605 = !DILocation(line: 2427, column: 21, scope: !10586)
!10606 = !DILocation(line: 2430, column: 6, scope: !10574)
!10607 = distinct !DISubprogram(name: "try_fold<core::str::iter::Chars, (), core::iter::traits::iterator::Iterator::all::check::{closure_env#0}<char, rustc_demangle::legacy::is_rust_hash::{closure_env#0}>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17hb4003d45cef785d8E", scope: !444, file: !10090, line: 2419, type: !10608, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10622, retainedNodes: !10610)
!10608 = !DISubroutineType(types: !10609)
!10609 = !{!423, !10093, !7, !10229}
!10610 = !{!10611, !10612, !10613, !10614, !10616, !10618, !10620}
!10611 = !DILocalVariable(name: "self", arg: 1, scope: !10607, file: !10090, line: 2419, type: !10093)
!10612 = !DILocalVariable(name: "init", arg: 2, scope: !10607, file: !10090, line: 2419, type: !7)
!10613 = !DILocalVariable(name: "f", arg: 3, scope: !10607, file: !10090, line: 2419, type: !10229)
!10614 = !DILocalVariable(name: "accum", scope: !10615, file: !10090, line: 2425, type: !7, align: 8)
!10615 = distinct !DILexicalBlock(scope: !10607, file: !10090, line: 2425, column: 9)
!10616 = !DILocalVariable(name: "x", scope: !10617, file: !10090, line: 2426, type: !252, align: 32)
!10617 = distinct !DILexicalBlock(scope: !10615, file: !10090, line: 2426, column: 41)
!10618 = !DILocalVariable(name: "residual", scope: !10619, file: !10090, line: 2427, type: !6961, align: 8)
!10619 = distinct !DILexicalBlock(scope: !10617, file: !10090, line: 2427, column: 32)
!10620 = !DILocalVariable(name: "val", scope: !10621, file: !10090, line: 2427, type: !7, align: 8)
!10621 = distinct !DILexicalBlock(scope: !10617, file: !10090, line: 2427, column: 21)
!10622 = !{!10098, !434, !10623, !458}
!10623 = !DITemplateTypeParameter(name: "F", type: !10229)
!10624 = !DILocation(line: 2419, column: 26, scope: !10607)
!10625 = !DILocation(line: 2419, column: 37, scope: !10607)
!10626 = !DILocation(line: 2419, column: 46, scope: !10607)
!10627 = !DILocation(line: 2425, column: 13, scope: !10615)
!10628 = !DILocation(line: 2427, column: 32, scope: !10619)
!10629 = !DILocation(line: 2427, column: 21, scope: !10621)
!10630 = !DILocation(line: 2426, column: 9, scope: !10615)
!10631 = !DILocation(line: 2426, column: 34, scope: !10617)
!10632 = !DILocation(line: 2426, column: 29, scope: !10617)
!10633 = !DILocation(line: 2426, column: 19, scope: !10617)
!10634 = !DILocation(line: 2426, column: 24, scope: !10617)
!10635 = !DILocation(line: 2427, column: 21, scope: !10617)
!10636 = !DILocation(line: 2429, column: 15, scope: !10615)
!10637 = !DILocation(line: 2430, column: 5, scope: !10607)
!10638 = !DILocation(line: 2427, column: 21, scope: !10619)
!10639 = !DILocation(line: 2430, column: 6, scope: !10607)
!10640 = distinct !DISubprogram(name: "try_fold<core::slice::iter::Iter<u8>, (), core::iter::adapters::copied::copy_try_fold::{closure_env#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>>, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17hfac8b8c112ec49a3E", scope: !444, file: !10090, line: 2419, type: !10641, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10658, retainedNodes: !10646)
!10641 = !DISubroutineType(types: !10642)
!10642 = !{!423, !10049, !7, !10643}
!10643 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>>", scope: !10051, file: !2, align: 8, elements: !10644, templateParams: !14, identifier: "d5aba081d468ad7f41d3a513e16112d5")
!10644 = !{!10645}
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !10643, file: !2, baseType: !468, align: 8)
!10646 = !{!10647, !10648, !10649, !10650, !10652, !10654, !10656}
!10647 = !DILocalVariable(name: "self", arg: 1, scope: !10640, file: !10090, line: 2419, type: !10049)
!10648 = !DILocalVariable(name: "init", arg: 2, scope: !10640, file: !10090, line: 2419, type: !7)
!10649 = !DILocalVariable(name: "f", arg: 3, scope: !10640, file: !10090, line: 2419, type: !10643)
!10650 = !DILocalVariable(name: "accum", scope: !10651, file: !10090, line: 2425, type: !7, align: 8)
!10651 = distinct !DILexicalBlock(scope: !10640, file: !10090, line: 2425, column: 9)
!10652 = !DILocalVariable(name: "x", scope: !10653, file: !10090, line: 2426, type: !12, align: 32)
!10653 = distinct !DILexicalBlock(scope: !10651, file: !10090, line: 2426, column: 41)
!10654 = !DILocalVariable(name: "residual", scope: !10655, file: !10090, line: 2427, type: !6961, align: 8)
!10655 = distinct !DILexicalBlock(scope: !10653, file: !10090, line: 2427, column: 32)
!10656 = !DILocalVariable(name: "val", scope: !10657, file: !10090, line: 2427, type: !7, align: 8)
!10657 = distinct !DILexicalBlock(scope: !10653, file: !10090, line: 2427, column: 21)
!10658 = !{!10067, !434, !10659, !458}
!10659 = !DITemplateTypeParameter(name: "F", type: !10643)
!10660 = !DILocation(line: 2419, column: 26, scope: !10640)
!10661 = !DILocation(line: 2419, column: 37, scope: !10640)
!10662 = !DILocation(line: 2419, column: 46, scope: !10640)
!10663 = !DILocation(line: 2425, column: 13, scope: !10651)
!10664 = !DILocation(line: 2427, column: 32, scope: !10655)
!10665 = !DILocation(line: 2427, column: 21, scope: !10657)
!10666 = !DILocation(line: 2426, column: 9, scope: !10651)
!10667 = !DILocation(line: 2426, column: 34, scope: !10653)
!10668 = !DILocation(line: 2426, column: 29, scope: !10653)
!10669 = !DILocation(line: 2426, column: 19, scope: !10653)
!10670 = !DILocation(line: 2426, column: 24, scope: !10653)
!10671 = !DILocation(line: 2427, column: 21, scope: !10653)
!10672 = !DILocation(line: 2429, column: 15, scope: !10651)
!10673 = !DILocation(line: 2430, column: 5, scope: !10640)
!10674 = !DILocation(line: 2427, column: 21, scope: !10655)
!10675 = !DILocation(line: 2430, column: 6, scope: !10640)
!10676 = distinct !DISubprogram(name: "rposition<core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9rposition17h25d212c725042251E", scope: !444, file: !10090, line: 3114, type: !10677, scopeLine: 3114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10684, retainedNodes: !10679)
!10677 = !DISubroutineType(types: !10678)
!10678 = !{!6624, !392, !609}
!10679 = !{!10680, !10681, !10682}
!10680 = !DILocalVariable(name: "self", arg: 1, scope: !10676, file: !10090, line: 3114, type: !392)
!10681 = !DILocalVariable(name: "predicate", arg: 2, scope: !10676, file: !10090, line: 3114, type: !609)
!10682 = !DILocalVariable(name: "n", scope: !10683, file: !10090, line: 3131, type: !9, align: 32)
!10683 = distinct !DILexicalBlock(scope: !10676, file: !10090, line: 3131, column: 9)
!10684 = !{!10285, !10685}
!10685 = !DITemplateTypeParameter(name: "P", type: !609)
!10686 = !DILocation(line: 3114, column: 21, scope: !10676)
!10687 = !DILocation(line: 3114, column: 32, scope: !10676)
!10688 = !DILocation(line: 3131, column: 22, scope: !10676)
!10689 = !DILocation(line: 3131, column: 13, scope: !10683)
!10690 = !DILocation(line: 3132, column: 27, scope: !10683)
!10691 = !DILocation(line: 3132, column: 9, scope: !10683)
!10692 = !DILocation(line: 3132, column: 14, scope: !10683)
!10693 = !DILocation(line: 3132, column: 45, scope: !10683)
!10694 = !DILocation(line: 3133, column: 6, scope: !10676)
!10695 = distinct !DISubprogram(name: "check<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9rposition5check17h78ca243406f63838E", scope: !606, file: !10090, line: 3122, type: !10696, scopeLine: 3122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10700, retainedNodes: !10698)
!10696 = !DISubroutineType(types: !10697)
!10697 = !{null, !609}
!10698 = !{!10699}
!10699 = !DILocalVariable(name: "predicate", arg: 1, scope: !10695, file: !10090, line: 3123, type: !609)
!10700 = !{!289, !10701}
!10701 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !609)
!10702 = !DILocation(line: 3123, column: 13, scope: !10695)
!10703 = !DILocation(line: 3129, column: 10, scope: !10695)
!10704 = distinct !DISubprogram(name: "{closure#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9rposition5check28_$u7b$$u7b$closure$u7d$$u7d$17he1add6f9a295917dE", scope: !605, file: !10090, line: 3125, type: !10705, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10700, retainedNodes: !10708)
!10705 = !DISubroutineType(types: !10706)
!10706 = !{!588, !10707, !9, !13}
!10707 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::rposition::check::{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>", baseType: !604, size: 32, align: 32, dwarfAddressSpace: 0)
!10708 = !{!10709, !10710, !10711, !10712}
!10709 = !DILocalVariable(name: "i", arg: 2, scope: !10704, file: !10090, line: 3125, type: !9)
!10710 = !DILocalVariable(name: "x", arg: 3, scope: !10704, file: !10090, line: 3125, type: !13)
!10711 = !DILocalVariable(name: "predicate", scope: !10704, file: !10090, line: 3123, type: !609, align: 8)
!10712 = !DILocalVariable(name: "i", scope: !10713, file: !10090, line: 3126, type: !9, align: 32)
!10713 = distinct !DILexicalBlock(scope: !10704, file: !10090, line: 3126, column: 17)
!10714 = !DILocation(line: 3123, column: 17, scope: !10704)
!10715 = !DILocation(line: 3125, column: 19, scope: !10704)
!10716 = !DILocation(line: 3125, column: 22, scope: !10704)
!10717 = !DILocation(line: 3126, column: 25, scope: !10704)
!10718 = !DILocation(line: 3126, column: 21, scope: !10713)
!10719 = !DILocation(line: 3127, column: 20, scope: !10713)
!10720 = !DILocation(line: 3127, column: 66, scope: !10713)
!10721 = !DILocation(line: 3127, column: 17, scope: !10713)
!10722 = !DILocation(line: 3127, column: 35, scope: !10713)
!10723 = !DILocation(line: 3128, column: 14, scope: !10704)
!10724 = distinct !DISubprogram(name: "once<char>", linkageName: "_ZN4core4iter7sources4once4once17h79dea27c84eede91E", scope: !5447, file: !10725, line: 56, type: !10726, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !10728)
!10725 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/sources/once.rs", directory: "", checksumkind: CSK_MD5, checksum: "d52eb7649b48fc7b4a894a8d42e2fbbb")
!10726 = !DISubroutineType(types: !10727)
!10727 = !{!5446, !252}
!10728 = !{!10729}
!10729 = !DILocalVariable(name: "value", arg: 1, scope: !10724, file: !10725, line: 56, type: !252)
!10730 = !DILocation(line: 56, column: 16, scope: !10724)
!10731 = !DILocation(line: 57, column: 31, scope: !10724)
!10732 = !DILocation(line: 58, column: 2, scope: !10724)
!10733 = distinct !DISubprogram(name: "from_fn<core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>", linkageName: "_ZN4core4iter7sources7from_fn7from_fn17h39c1256d2667268aE", scope: !263, file: !486, line: 45, type: !10734, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !506, retainedNodes: !10736)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!262, !267}
!10736 = !{!10737}
!10737 = !DILocalVariable(name: "f", arg: 1, scope: !10733, file: !486, line: 45, type: !267)
!10738 = !DILocation(line: 45, column: 22, scope: !10733)
!10739 = !DILocation(line: 49, column: 5, scope: !10733)
!10740 = !DILocation(line: 50, column: 2, scope: !10733)
!10741 = distinct !DISubprogram(name: "new<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3d5717eeeadcf1e8E", scope: !273, file: !236, line: 68, type: !10386, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !292, declaration: !10742, retainedNodes: !10743)
!10742 = !DISubprogram(name: "new<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3d5717eeeadcf1e8E", scope: !273, file: !236, line: 68, type: !10386, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !292)
!10743 = !{!10744, !10745}
!10744 = !DILocalVariable(name: "iter", arg: 1, scope: !10741, file: !236, line: 68, type: !276)
!10745 = !DILocalVariable(name: "f", arg: 2, scope: !10741, file: !236, line: 68, type: !291)
!10746 = !DILocation(line: 68, column: 32, scope: !10741)
!10747 = !DILocation(line: 68, column: 41, scope: !10741)
!10748 = !DILocation(line: 69, column: 9, scope: !10741)
!10749 = !DILocation(line: 70, column: 6, scope: !10741)
!10750 = distinct !DISubprogram(name: "new<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17ha79bd0e004aa18cdE", scope: !270, file: !236, line: 68, type: !10398, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !297, declaration: !10751, retainedNodes: !10752)
!10751 = !DISubprogram(name: "new<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17ha79bd0e004aa18cdE", scope: !270, file: !236, line: 68, type: !10398, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !297)
!10752 = !{!10753, !10754}
!10753 = !DILocalVariable(name: "iter", arg: 1, scope: !10750, file: !236, line: 68, type: !273)
!10754 = !DILocalVariable(name: "f", arg: 2, scope: !10750, file: !236, line: 68, type: !296)
!10755 = !DILocation(line: 68, column: 32, scope: !10750)
!10756 = !DILocation(line: 68, column: 41, scope: !10750)
!10757 = !DILocation(line: 69, column: 9, scope: !10750)
!10758 = !DILocation(line: 70, column: 6, scope: !10750)
!10759 = distinct !DISubprogram(name: "new<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he6506df65433e91cE", scope: !259, file: !236, line: 68, type: !10410, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !321, declaration: !10760, retainedNodes: !10761)
!10760 = !DISubprogram(name: "new<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17he6506df65433e91cE", scope: !259, file: !236, line: 68, type: !10410, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !321)
!10761 = !{!10762, !10763}
!10762 = !DILocalVariable(name: "iter", arg: 1, scope: !10759, file: !236, line: 68, type: !262)
!10763 = !DILocalVariable(name: "f", arg: 2, scope: !10759, file: !236, line: 68, type: !303)
!10764 = !DILocation(line: 68, column: 32, scope: !10759)
!10765 = !DILocation(line: 68, column: 41, scope: !10759)
!10766 = !DILocation(line: 69, column: 9, scope: !10759)
!10767 = !DILocation(line: 70, column: 6, scope: !10759)
!10768 = distinct !DISubprogram(name: "copy_try_fold<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, core::iter::traits::iterator::Iterator::rposition::check::{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>>", linkageName: "_ZN4core4iter8adapters6copied13copy_try_fold17h7b7b3ea9fb2174f4E", scope: !389, file: !387, line: 33, type: !10769, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10773, retainedNodes: !10771)
!10769 = !DISubroutineType(types: !10770)
!10770 = !{null, !604}
!10771 = !{!10772}
!10772 = !DILocalVariable(name: "f", arg: 1, scope: !10768, file: !387, line: 33, type: !604)
!10773 = !{!289, !10774, !618, !10775}
!10774 = !DITemplateTypeParameter(name: "Acc", type: !9)
!10775 = !DITemplateTypeParameter(name: "impl FnMut(Acc, T) -> R", type: !604)
!10776 = !DILocation(line: 33, column: 35, scope: !10768)
!10777 = !DILocation(line: 35, column: 2, scope: !10768)
!10778 = distinct !DISubprogram(name: "copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>>", linkageName: "_ZN4core4iter8adapters6copied13copy_try_fold17hb0727807dd6ef137E", scope: !389, file: !387, line: 33, type: !10779, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10783, retainedNodes: !10781)
!10779 = !DISubroutineType(types: !10780)
!10780 = !{null, !468}
!10781 = !{!10782}
!10782 = !DILocalVariable(name: "f", arg: 1, scope: !10778, file: !387, line: 33, type: !468)
!10783 = !{!289, !10784, !458, !10785}
!10784 = !DITemplateTypeParameter(name: "Acc", type: !7)
!10785 = !DITemplateTypeParameter(name: "impl FnMut(Acc, T) -> R", type: !468)
!10786 = !DILocation(line: 33, column: 35, scope: !10778)
!10787 = !DILocation(line: 35, column: 2, scope: !10778)
!10788 = distinct !DISubprogram(name: "copy_try_fold<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>>", linkageName: "_ZN4core4iter8adapters6copied13copy_try_fold17hc6d3acede75ec086E", scope: !389, file: !387, line: 33, type: !10789, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10793, retainedNodes: !10791)
!10789 = !DISubroutineType(types: !10790)
!10790 = !{null, !441}
!10791 = !{!10792}
!10792 = !DILocalVariable(name: "f", arg: 1, scope: !10788, file: !387, line: 33, type: !441)
!10793 = !{!289, !10784, !458, !10794}
!10794 = !DITemplateTypeParameter(name: "impl FnMut(Acc, T) -> R", type: !441)
!10795 = !DILocation(line: 33, column: 35, scope: !10788)
!10796 = !DILocation(line: 35, column: 2, scope: !10788)
!10797 = distinct !DISubprogram(name: "{closure#0}<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, core::iter::traits::iterator::Iterator::rposition::check::{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>>", linkageName: "_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h325b15c8aba8e57eE", scope: !10051, file: !387, line: 34, type: !10798, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10773, retainedNodes: !10801)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{!588, !10800, !9, !12}
!10800 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::copy_try_fold::{closure_env#0}<u8, usize, core::ops::control_flow::ControlFlow<usize, usize>, core::iter::traits::iterator::Iterator::rposition::check::{closure_env#0}<u8, rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>>", baseType: !10050, size: 32, align: 32, dwarfAddressSpace: 0)
!10801 = !{!10802, !10803, !10804, !10806}
!10802 = !DILocalVariable(name: "acc", arg: 2, scope: !10797, file: !387, line: 34, type: !9)
!10803 = !DILocalVariable(name: "f", scope: !10797, file: !387, line: 33, type: !604, align: 8)
!10804 = !DILocalVariable(name: "elt", scope: !10805, file: !387, line: 34, type: !13, align: 8)
!10805 = distinct !DILexicalBlock(scope: !10797, file: !387, line: 34, column: 22)
!10806 = !DILocalVariable(arg: 3, scope: !10797, file: !387, line: 34, type: !12)
!10807 = !DILocation(line: 33, column: 39, scope: !10797)
!10808 = !DILocation(line: 34, column: 11, scope: !10797)
!10809 = !DILocation(line: 34, column: 16, scope: !10797)
!10810 = !DILocation(line: 34, column: 17, scope: !10797)
!10811 = !DILocation(line: 34, column: 17, scope: !10805)
!10812 = !DILocation(line: 34, column: 22, scope: !10805)
!10813 = !DILocation(line: 34, column: 33, scope: !10797)
!10814 = distinct !DISubprogram(name: "{closure#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>>", linkageName: "_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h34b2e7dd83f67b58E", scope: !10051, file: !387, line: 34, type: !10815, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10783, retainedNodes: !10818)
!10815 = !DISubroutineType(types: !10816)
!10816 = !{!423, !10817, !7, !12}
!10817 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::copy_try_fold::{closure_env#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::v0::demangle::{closure_env#0}>>", baseType: !10643, size: 32, align: 32, dwarfAddressSpace: 0)
!10818 = !{!10819, !10820, !10821, !10823}
!10819 = !DILocalVariable(name: "acc", arg: 2, scope: !10814, file: !387, line: 34, type: !7)
!10820 = !DILocalVariable(name: "f", scope: !10814, file: !387, line: 33, type: !468, align: 8)
!10821 = !DILocalVariable(name: "elt", scope: !10822, file: !387, line: 34, type: !13, align: 8)
!10822 = distinct !DILexicalBlock(scope: !10814, file: !387, line: 34, column: 22)
!10823 = !DILocalVariable(arg: 3, scope: !10814, file: !387, line: 34, type: !12)
!10824 = !DILocation(line: 33, column: 39, scope: !10814)
!10825 = !DILocation(line: 34, column: 11, scope: !10814)
!10826 = !DILocation(line: 34, column: 16, scope: !10814)
!10827 = !DILocation(line: 34, column: 17, scope: !10814)
!10828 = !DILocation(line: 34, column: 17, scope: !10822)
!10829 = !DILocation(line: 34, column: 22, scope: !10822)
!10830 = !DILocation(line: 34, column: 33, scope: !10814)
!10831 = distinct !DISubprogram(name: "{closure#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>>", linkageName: "_ZN4core4iter8adapters6copied13copy_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17heba4d6bbe4472fd9E", scope: !10051, file: !387, line: 34, type: !10832, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10793, retainedNodes: !10835)
!10832 = !DISubroutineType(types: !10833)
!10833 = !{!423, !10834, !7, !12}
!10834 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::copy_try_fold::{closure_env#0}<u8, (), core::ops::control_flow::ControlFlow<(), ()>, core::iter::traits::iterator::Iterator::any::check::{closure_env#0}<u8, rustc_demangle::legacy::demangle::{closure_env#0}>>", baseType: !10475, size: 32, align: 32, dwarfAddressSpace: 0)
!10835 = !{!10836, !10837, !10838, !10840}
!10836 = !DILocalVariable(name: "acc", arg: 2, scope: !10831, file: !387, line: 34, type: !7)
!10837 = !DILocalVariable(name: "f", scope: !10831, file: !387, line: 33, type: !441, align: 8)
!10838 = !DILocalVariable(name: "elt", scope: !10839, file: !387, line: 34, type: !13, align: 8)
!10839 = distinct !DILexicalBlock(scope: !10831, file: !387, line: 34, column: 22)
!10840 = !DILocalVariable(arg: 3, scope: !10831, file: !387, line: 34, type: !12)
!10841 = !DILocation(line: 33, column: 39, scope: !10831)
!10842 = !DILocation(line: 34, column: 11, scope: !10831)
!10843 = !DILocation(line: 34, column: 16, scope: !10831)
!10844 = !DILocation(line: 34, column: 17, scope: !10831)
!10845 = !DILocation(line: 34, column: 17, scope: !10839)
!10846 = !DILocation(line: 34, column: 22, scope: !10839)
!10847 = !DILocation(line: 34, column: 33, scope: !10831)
!10848 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h76392b9b78e37348E", scope: !393, file: !387, line: 24, type: !10421, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !411, declaration: !10849, retainedNodes: !10850)
!10849 = !DISubprogram(name: "new<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h76392b9b78e37348E", scope: !393, file: !387, line: 24, type: !10421, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !411)
!10850 = !{!10851}
!10851 = !DILocalVariable(name: "it", arg: 1, scope: !10848, file: !387, line: 24, type: !396)
!10852 = !DILocation(line: 24, column: 32, scope: !10848)
!10853 = !DILocation(line: 26, column: 6, scope: !10848)
!10854 = distinct !DISubprogram(name: "new<core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h4fd677906fac2a31E", scope: !517, file: !511, line: 24, type: !10430, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !539, declaration: !10855, retainedNodes: !10856)
!10855 = !DISubprogram(name: "new<core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$3new17h4fd677906fac2a31E", scope: !517, file: !511, line: 24, type: !10430, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !539)
!10856 = !{!10857}
!10857 = !DILocalVariable(name: "iter", arg: 1, scope: !10854, file: !511, line: 24, type: !520)
!10858 = !DILocation(line: 24, column: 32, scope: !10854)
!10859 = !DILocation(line: 25, column: 9, scope: !10854)
!10860 = !DILocation(line: 26, column: 6, scope: !10854)
!10861 = distinct !DISubprogram(name: "peek<core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h8d4927ab9897c6afE", scope: !517, file: !511, line: 216, type: !10862, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !539, declaration: !10875, retainedNodes: !10876)
!10862 = !DISubroutineType(types: !10863)
!10863 = !{!10864, !516}
!10864 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !10865, templateParams: !14, identifier: "e3cc9529afd7ea86823e74f301da7add")
!10865 = !{!10866}
!10866 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10864, file: !2, size: 32, align: 32, elements: !10867, templateParams: !14, identifier: "d2e3cb113e06f2ebe2a7baacafb133a9", discriminator: !10874)
!10867 = !{!10868, !10870}
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !10866, file: !2, baseType: !10869, size: 32, align: 32, extraData: i32 0)
!10869 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !10864, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !409, identifier: "d80d319a4be8fb12c6d6cc64e1cde6a")
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !10866, file: !2, baseType: !10871, size: 32, align: 32)
!10871 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !10864, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !10872, templateParams: !409, identifier: "39e0be929543112ad5fdfbb2d742e299")
!10872 = !{!10873}
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10871, file: !2, baseType: !12, size: 32, align: 32, flags: DIFlagPublic)
!10874 = !DIDerivedType(tag: DW_TAG_member, scope: !10864, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!10875 = !DISubprogram(name: "peek<core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h8d4927ab9897c6afE", scope: !517, file: !511, line: 216, type: !10862, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !539)
!10876 = !{!10877, !10878}
!10877 = !DILocalVariable(name: "self", arg: 1, scope: !10861, file: !511, line: 216, type: !516)
!10878 = !DILocalVariable(name: "iter", scope: !10879, file: !511, line: 217, type: !10880, align: 32)
!10879 = distinct !DILexicalBlock(scope: !10861, file: !511, line: 217, column: 9)
!10880 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Bytes", baseType: !520, size: 32, align: 32, dwarfAddressSpace: 0)
!10881 = !DILocation(line: 216, column: 17, scope: !10861)
!10882 = !DILocation(line: 217, column: 20, scope: !10861)
!10883 = !DILocation(line: 217, column: 13, scope: !10879)
!10884 = !DILocation(line: 218, column: 9, scope: !10879)
!10885 = !DILocation(line: 218, column: 21, scope: !10879)
!10886 = !DILocation(line: 218, column: 56, scope: !10879)
!10887 = !DILocation(line: 219, column: 6, scope: !10861)
!10888 = distinct !DISubprogram(name: "{closure#0}<core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek28_$u7b$$u7b$closure$u7d$$u7d$17h71a4ea1f4f1e70a5E", scope: !10889, file: !511, line: 218, type: !10891, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !539, retainedNodes: !10896)
!10889 = !DINamespace(name: "peek", scope: !10890)
!10890 = !DINamespace(name: "{impl#5}", scope: !513)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{!365, !10893}
!10893 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::str::iter::Bytes>", scope: !10889, file: !2, size: 32, align: 32, elements: !10894, templateParams: !14, identifier: "547976d582508b5c49e8baf59e3f5dc")
!10894 = !{!10895}
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__iter", scope: !10893, file: !2, baseType: !10880, size: 32, align: 32)
!10896 = !{!10897}
!10897 = !DILocalVariable(name: "iter", scope: !10888, file: !511, line: 217, type: !520, align: 32)
!10898 = !DILocation(line: 217, column: 13, scope: !10888)
!10899 = !DILocation(line: 218, column: 48, scope: !10888)
!10900 = !DILocation(line: 218, column: 54, scope: !10888)
!10901 = distinct !DISubprogram(name: "index<char, core::ops::range::RangeTo<usize>, 128>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h9225e7b05f792766E", scope: !10903, file: !10902, line: 387, type: !10905, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10914, retainedNodes: !10911)
!10902 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "abc86d457ded4ba8bb63b4dca60f32bf")
!10903 = !DINamespace(name: "{impl#15}", scope: !10904)
!10904 = !DINamespace(name: "array", scope: !31)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{!8702, !10907, !10908, !823}
!10907 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[char; 128]", baseType: !1344, size: 32, align: 32, dwarfAddressSpace: 0)
!10908 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !1020, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !10909, templateParams: !1024, identifier: "58c7fa8154f17906cbde6cfda7cbb520")
!10909 = !{!10910}
!10910 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !10908, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPublic)
!10911 = !{!10912, !10913}
!10912 = !DILocalVariable(name: "self", arg: 1, scope: !10901, file: !10902, line: 387, type: !10907)
!10913 = !DILocalVariable(name: "index", arg: 2, scope: !10901, file: !10902, line: 387, type: !10908)
!10914 = !{!251, !10915}
!10915 = !DITemplateTypeParameter(name: "I", type: !10908)
!10916 = !DILocation(line: 387, column: 14, scope: !10901)
!10917 = !DILocation(line: 387, column: 21, scope: !10901)
!10918 = !DILocalVariable(name: "self", arg: 1, scope: !10919, file: !10920, line: 17, type: !8702)
!10919 = distinct !DISubprogram(name: "index<char, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h4fed70f4a7bfaadfE", scope: !10921, file: !10920, line: 17, type: !10923, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10914, retainedNodes: !10925)
!10920 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "af6ecb4d2663035e0aa38579163ee106")
!10921 = !DINamespace(name: "{impl#0}", scope: !10922)
!10922 = !DINamespace(name: "index", scope: !278)
!10923 = !DISubroutineType(types: !10924)
!10924 = !{!8702, !8702, !10908, !823}
!10925 = !{!10918, !10926}
!10926 = !DILocalVariable(name: "index", arg: 2, scope: !10919, file: !10920, line: 17, type: !10908)
!10927 = !DILocation(line: 17, column: 14, scope: !10919, inlinedAt: !10928)
!10928 = distinct !DILocation(line: 388, column: 9, scope: !10901)
!10929 = !DILocation(line: 17, column: 21, scope: !10919, inlinedAt: !10928)
!10930 = !DILocalVariable(name: "self", arg: 1, scope: !10931, file: !10920, line: 523, type: !10908)
!10931 = distinct !DISubprogram(name: "index<char>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h46be14ccae45c3c8E", scope: !10932, file: !10920, line: 523, type: !10933, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !10935)
!10932 = !DINamespace(name: "{impl#6}", scope: !10922)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{!8702, !10908, !8702, !823}
!10935 = !{!10930, !10936}
!10936 = !DILocalVariable(name: "slice", arg: 2, scope: !10931, file: !10920, line: 523, type: !8702)
!10937 = !DILocation(line: 523, column: 14, scope: !10931, inlinedAt: !10938)
!10938 = distinct !DILocation(line: 18, column: 15, scope: !10919, inlinedAt: !10928)
!10939 = !DILocation(line: 523, column: 20, scope: !10931, inlinedAt: !10938)
!10940 = !DILocalVariable(name: "self", arg: 1, scope: !10941, file: !10920, line: 430, type: !1019)
!10941 = distinct !DISubprogram(name: "index<char>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h2d0eea87bbbc5809E", scope: !10942, file: !10920, line: 430, type: !10943, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !10945)
!10942 = !DINamespace(name: "{impl#4}", scope: !10922)
!10943 = !DISubroutineType(types: !10944)
!10944 = !{!8702, !1019, !8702, !823}
!10945 = !{!10940, !10946, !10947}
!10946 = !DILocalVariable(name: "slice", arg: 2, scope: !10941, file: !10920, line: 430, type: !8702)
!10947 = !DILocalVariable(name: "new_len", scope: !10941, file: !10920, line: 432, type: !9, align: 32)
!10948 = !DILocation(line: 430, column: 14, scope: !10941, inlinedAt: !10949)
!10949 = distinct !DILocation(line: 524, column: 23, scope: !10931, inlinedAt: !10938)
!10950 = !DILocation(line: 430, column: 20, scope: !10941, inlinedAt: !10949)
!10951 = !DILocation(line: 432, column: 32, scope: !10941, inlinedAt: !10949)
!10952 = !DILocation(line: 432, column: 16, scope: !10941, inlinedAt: !10949)
!10953 = !DILocation(line: 432, column: 21, scope: !10941, inlinedAt: !10949)
!10954 = !DILocation(line: 433, column: 16, scope: !10941, inlinedAt: !10949)
!10955 = !DILocation(line: 438, column: 13, scope: !10941, inlinedAt: !10949)
!10956 = !DILocalVariable(name: "ptr", arg: 1, scope: !10957, file: !10920, line: 82, type: !8623)
!10957 = distinct !DISubprogram(name: "get_offset_len_noubcheck<char>", linkageName: "_ZN4core5slice5index24get_offset_len_noubcheck17h0a696b34bf0db42cE", scope: !10922, file: !10920, line: 81, type: !10958, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !10960)
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!8623, !8623, !9, !9}
!10960 = !{!10956, !10961, !10962, !10963, !10965}
!10961 = !DILocalVariable(name: "offset", arg: 2, scope: !10957, file: !10920, line: 83, type: !9)
!10962 = !DILocalVariable(name: "len", arg: 3, scope: !10957, file: !10920, line: 84, type: !9)
!10963 = !DILocalVariable(name: "ptr", scope: !10964, file: !10920, line: 86, type: !8633, align: 32)
!10964 = distinct !DILexicalBlock(scope: !10957, file: !10920, line: 86, column: 5)
!10965 = !DILocalVariable(name: "ptr", scope: !10966, file: !10920, line: 88, type: !8633, align: 32)
!10966 = distinct !DILexicalBlock(scope: !10964, file: !10920, line: 88, column: 5)
!10967 = !DILocation(line: 82, column: 5, scope: !10957, inlinedAt: !10968)
!10968 = distinct !DILocation(line: 436, column: 24, scope: !10941, inlinedAt: !10949)
!10969 = !DILocation(line: 83, column: 5, scope: !10957, inlinedAt: !10968)
!10970 = !DILocation(line: 84, column: 5, scope: !10957, inlinedAt: !10968)
!10971 = !DILocation(line: 86, column: 15, scope: !10957, inlinedAt: !10968)
!10972 = !DILocation(line: 86, column: 9, scope: !10964, inlinedAt: !10968)
!10973 = !DILocation(line: 88, column: 24, scope: !10964, inlinedAt: !10968)
!10974 = !DILocation(line: 88, column: 9, scope: !10966, inlinedAt: !10968)
!10975 = !DILocation(line: 90, column: 2, scope: !10957, inlinedAt: !10968)
!10976 = !DILocation(line: 19, column: 6, scope: !10919, inlinedAt: !10928)
!10977 = !DILocation(line: 388, column: 9, scope: !10901)
!10978 = !DILocation(line: 389, column: 6, scope: !10901)
!10979 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>, 4>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17he9745d40019a4ad1E", scope: !10980, file: !10902, line: 399, type: !10981, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10987, retainedNodes: !10984)
!10980 = !DINamespace(name: "{impl#16}", scope: !10904)
!10981 = !DISubroutineType(types: !10982)
!10982 = !{!1013, !10983, !10908, !823}
!10983 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 4]", baseType: !3448, size: 32, align: 32, dwarfAddressSpace: 0)
!10984 = !{!10985, !10986}
!10985 = !DILocalVariable(name: "self", arg: 1, scope: !10979, file: !10902, line: 399, type: !10983)
!10986 = !DILocalVariable(name: "index", arg: 2, scope: !10979, file: !10902, line: 399, type: !10908)
!10987 = !{!289, !10915}
!10988 = !DILocation(line: 399, column: 18, scope: !10979)
!10989 = !DILocation(line: 399, column: 29, scope: !10979)
!10990 = !DILocalVariable(name: "self", arg: 1, scope: !10991, file: !10920, line: 29, type: !1013)
!10991 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17he158e181f53322c5E", scope: !10992, file: !10920, line: 29, type: !10993, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10987, retainedNodes: !10995)
!10992 = !DINamespace(name: "{impl#1}", scope: !10922)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!1013, !1013, !10908, !823}
!10995 = !{!10990, !10996}
!10996 = !DILocalVariable(name: "index", arg: 2, scope: !10991, file: !10920, line: 29, type: !10908)
!10997 = !DILocation(line: 29, column: 18, scope: !10991, inlinedAt: !10998)
!10998 = distinct !DILocation(line: 400, column: 9, scope: !10979)
!10999 = !DILocation(line: 29, column: 29, scope: !10991, inlinedAt: !10998)
!11000 = !DILocation(line: 30, column: 15, scope: !10991, inlinedAt: !10998)
!11001 = !DILocation(line: 400, column: 9, scope: !10979)
!11002 = !DILocation(line: 401, column: 6, scope: !10979)
!11003 = distinct !DISubprogram(name: "clone<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>", linkageName: "_ZN4core5clone5Clone5clone17h5815a6a5a895cff2E", scope: !11005, file: !11004, line: 236, type: !11007, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11012, retainedNodes: !11010)
!11004 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "ab1cebb6cbd097d629a08d04734692b8")
!11005 = !DINamespace(name: "Clone", scope: !11006)
!11006 = !DINamespace(name: "clone", scope: !31)
!11007 = !DISubroutineType(types: !11008)
!11008 = !{!267, !11009}
!11009 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}", baseType: !267, size: 32, align: 32, dwarfAddressSpace: 0)
!11010 = !{!11011}
!11011 = !DILocalVariable(arg: 1, scope: !11003, file: !11004, line: 236, type: !11009)
!11012 = !{!11013}
!11013 = !DITemplateTypeParameter(name: "Self", type: !267)
!11014 = !DILocation(line: 236, column: 5, scope: !11003)
!11015 = distinct !DISubprogram(name: "clone<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN4core5clone5Clone5clone17h67254a32f936947fE", scope: !11005, file: !11004, line: 236, type: !11016, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11021, retainedNodes: !11019)
!11016 = !DISubroutineType(types: !11017)
!11017 = !{null, !11018}
!11018 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}", baseType: !291, size: 32, align: 32, dwarfAddressSpace: 0)
!11019 = !{!11020}
!11020 = !DILocalVariable(arg: 1, scope: !11015, file: !11004, line: 236, type: !11018)
!11021 = !{!11022}
!11022 = !DITemplateTypeParameter(name: "Self", type: !291)
!11023 = !DILocation(line: 236, column: 5, scope: !11015)
!11024 = distinct !DISubprogram(name: "clone<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN4core5clone5Clone5clone17hfb98ec0f1e3ec6d1E", scope: !11005, file: !11004, line: 236, type: !11025, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11030, retainedNodes: !11028)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{null, !11027}
!11027 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}", baseType: !296, size: 32, align: 32, dwarfAddressSpace: 0)
!11028 = !{!11029}
!11029 = !DILocalVariable(arg: 1, scope: !11024, file: !11004, line: 236, type: !11027)
!11030 = !{!11031}
!11031 = !DITemplateTypeParameter(name: "Self", type: !296)
!11032 = !DILocation(line: 236, column: 5, scope: !11024)
!11033 = distinct !DISubprogram(name: "starts_with<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17hb41f642e46021a01E", scope: !9743, file: !9742, line: 2613, type: !11034, scopeLine: 2613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !11036)
!11034 = !DISubroutineType(types: !11035)
!11035 = !{!706, !281, !281}
!11036 = !{!11037, !11038, !11039}
!11037 = !DILocalVariable(name: "self", arg: 1, scope: !11033, file: !9742, line: 2613, type: !281)
!11038 = !DILocalVariable(name: "needle", arg: 2, scope: !11033, file: !9742, line: 2613, type: !281)
!11039 = !DILocalVariable(name: "n", scope: !11040, file: !9742, line: 2617, type: !9, align: 32)
!11040 = distinct !DILexicalBlock(scope: !11033, file: !9742, line: 2617, column: 9)
!11041 = !DILocation(line: 2613, column: 24, scope: !11033)
!11042 = !DILocation(line: 2613, column: 31, scope: !11033)
!11043 = !DILocation(line: 2617, column: 17, scope: !11033)
!11044 = !DILocation(line: 2617, column: 13, scope: !11040)
!11045 = !DILocation(line: 2618, column: 9, scope: !11040)
!11046 = !DILocalVariable(name: "self", arg: 1, scope: !11047, file: !10920, line: 17, type: !281)
!11047 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h507f15b27da79102E", scope: !10921, file: !10920, line: 17, type: !11048, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !10987, retainedNodes: !11050)
!11048 = !DISubroutineType(types: !11049)
!11049 = !{!281, !281, !10908, !823}
!11050 = !{!11046, !11051}
!11051 = !DILocalVariable(name: "index", arg: 2, scope: !11047, file: !10920, line: 17, type: !10908)
!11052 = !DILocation(line: 17, column: 14, scope: !11047, inlinedAt: !11053)
!11053 = distinct !DILocation(line: 2618, column: 43, scope: !11040)
!11054 = !DILocation(line: 17, column: 21, scope: !11047, inlinedAt: !11053)
!11055 = !DILocalVariable(name: "self", arg: 1, scope: !11056, file: !10920, line: 523, type: !10908)
!11056 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h262a34f8514cf71dE", scope: !10932, file: !10920, line: 523, type: !11057, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !11059)
!11057 = !DISubroutineType(types: !11058)
!11058 = !{!281, !10908, !281, !823}
!11059 = !{!11055, !11060}
!11060 = !DILocalVariable(name: "slice", arg: 2, scope: !11056, file: !10920, line: 523, type: !281)
!11061 = !DILocation(line: 523, column: 14, scope: !11056, inlinedAt: !11062)
!11062 = distinct !DILocation(line: 18, column: 15, scope: !11047, inlinedAt: !11053)
!11063 = !DILocation(line: 523, column: 20, scope: !11056, inlinedAt: !11062)
!11064 = !DILocalVariable(name: "self", arg: 1, scope: !11065, file: !10920, line: 430, type: !1019)
!11065 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h2bda141f3c9b51acE", scope: !10942, file: !10920, line: 430, type: !11066, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !11068)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{!281, !1019, !281, !823}
!11068 = !{!11064, !11069, !11070}
!11069 = !DILocalVariable(name: "slice", arg: 2, scope: !11065, file: !10920, line: 430, type: !281)
!11070 = !DILocalVariable(name: "new_len", scope: !11065, file: !10920, line: 432, type: !9, align: 32)
!11071 = !DILocation(line: 430, column: 14, scope: !11065, inlinedAt: !11072)
!11072 = distinct !DILocation(line: 524, column: 23, scope: !11056, inlinedAt: !11062)
!11073 = !DILocation(line: 430, column: 20, scope: !11065, inlinedAt: !11072)
!11074 = !DILocation(line: 432, column: 32, scope: !11065, inlinedAt: !11072)
!11075 = !DILocation(line: 432, column: 16, scope: !11065, inlinedAt: !11072)
!11076 = !DILocation(line: 432, column: 21, scope: !11065, inlinedAt: !11072)
!11077 = !DILocation(line: 433, column: 16, scope: !11065, inlinedAt: !11072)
!11078 = !DILocation(line: 438, column: 13, scope: !11065, inlinedAt: !11072)
!11079 = !DILocalVariable(name: "ptr", arg: 1, scope: !11080, file: !10920, line: 82, type: !9134)
!11080 = distinct !DISubprogram(name: "get_offset_len_noubcheck<u8>", linkageName: "_ZN4core5slice5index24get_offset_len_noubcheck17hdc6f4cd8992da259E", scope: !10922, file: !10920, line: 81, type: !11081, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !11083)
!11081 = !DISubroutineType(types: !11082)
!11082 = !{!9134, !9134, !9, !9}
!11083 = !{!11079, !11084, !11085, !11086, !11088}
!11084 = !DILocalVariable(name: "offset", arg: 2, scope: !11080, file: !10920, line: 83, type: !9)
!11085 = !DILocalVariable(name: "len", arg: 3, scope: !11080, file: !10920, line: 84, type: !9)
!11086 = !DILocalVariable(name: "ptr", scope: !11087, file: !10920, line: 86, type: !404, align: 32)
!11087 = distinct !DILexicalBlock(scope: !11080, file: !10920, line: 86, column: 5)
!11088 = !DILocalVariable(name: "ptr", scope: !11089, file: !10920, line: 88, type: !404, align: 32)
!11089 = distinct !DILexicalBlock(scope: !11087, file: !10920, line: 88, column: 5)
!11090 = !DILocation(line: 82, column: 5, scope: !11080, inlinedAt: !11091)
!11091 = distinct !DILocation(line: 436, column: 24, scope: !11065, inlinedAt: !11072)
!11092 = !DILocation(line: 83, column: 5, scope: !11080, inlinedAt: !11091)
!11093 = !DILocation(line: 84, column: 5, scope: !11080, inlinedAt: !11091)
!11094 = !DILocation(line: 86, column: 15, scope: !11080, inlinedAt: !11091)
!11095 = !DILocation(line: 86, column: 9, scope: !11087, inlinedAt: !11091)
!11096 = !DILocation(line: 88, column: 24, scope: !11087, inlinedAt: !11091)
!11097 = !DILocation(line: 88, column: 9, scope: !11089, inlinedAt: !11091)
!11098 = !DILocation(line: 90, column: 2, scope: !11080, inlinedAt: !11091)
!11099 = !DILocation(line: 19, column: 6, scope: !11047, inlinedAt: !11053)
!11100 = !DILocation(line: 2618, column: 43, scope: !11040)
!11101 = !DILocation(line: 2618, column: 38, scope: !11040)
!11102 = !DILocation(line: 2618, column: 28, scope: !11040)
!11103 = !DILocation(line: 2619, column: 6, scope: !11033)
!11104 = distinct !DISubprogram(name: "chunks_exact<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12chunks_exact17haf7548331f493393E", scope: !9743, file: !9742, line: 1238, type: !11105, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !11107)
!11105 = !DISubroutineType(types: !11106)
!11106 = !{!276, !281, !9, !823}
!11107 = !{!11108, !11109}
!11108 = !DILocalVariable(name: "self", arg: 1, scope: !11104, file: !9742, line: 1238, type: !281)
!11109 = !DILocalVariable(name: "chunk_size", arg: 2, scope: !11104, file: !9742, line: 1238, type: !9)
!11110 = !DILocation(line: 1238, column: 31, scope: !11104)
!11111 = !DILocation(line: 1238, column: 38, scope: !11104)
!11112 = !DILocation(line: 1239, column: 17, scope: !11104)
!11113 = !DILocation(line: 1239, column: 9, scope: !11104)
!11114 = !DILocation(line: 1240, column: 9, scope: !11104)
!11115 = !DILocation(line: 1241, column: 6, scope: !11104)
!11116 = distinct !DISubprogram(name: "get<char, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h0c2238a972157f13E", scope: !9743, file: !9742, line: 570, type: !11117, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11135, retainedNodes: !11132)
!11117 = !DISubroutineType(types: !11118)
!11118 = !{!11119, !8702, !9}
!11119 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&char>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !11120, templateParams: !14, identifier: "2d26f928d0981598bf99e00d35abbd8d")
!11120 = !{!11121}
!11121 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11119, file: !2, size: 32, align: 32, elements: !11122, templateParams: !14, identifier: "27e2f08ff6890b366af958a0d5b22f90", discriminator: !11131)
!11122 = !{!11123, !11127}
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !11121, file: !2, baseType: !11124, size: 32, align: 32, extraData: i32 0)
!11124 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !11119, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !11125, identifier: "9587784ae4f10b4270bbb492998cdd11")
!11125 = !{!11126}
!11126 = !DITemplateTypeParameter(name: "T", type: !1676)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !11121, file: !2, baseType: !11128, size: 32, align: 32)
!11128 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !11119, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !11129, templateParams: !11125, identifier: "da69093f7dbc79b288aa7962b0066876")
!11129 = !{!11130}
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11128, file: !2, baseType: !1676, size: 32, align: 32, flags: DIFlagPublic)
!11131 = !DIDerivedType(tag: DW_TAG_member, scope: !11119, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!11132 = !{!11133, !11134}
!11133 = !DILocalVariable(name: "self", arg: 1, scope: !11116, file: !9742, line: 570, type: !8702)
!11134 = !DILocalVariable(name: "index", arg: 2, scope: !11116, file: !9742, line: 570, type: !9)
!11135 = !{!251, !11136}
!11136 = !DITemplateTypeParameter(name: "I", type: !9)
!11137 = !DILocation(line: 570, column: 25, scope: !11116)
!11138 = !DILocation(line: 570, column: 32, scope: !11116)
!11139 = !DILocation(line: 574, column: 15, scope: !11116)
!11140 = !DILocation(line: 575, column: 6, scope: !11116)
!11141 = distinct !DISubprogram(name: "iter<char>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h9d6c446509b57dfaE", scope: !9743, file: !9742, line: 1036, type: !11142, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !11150)
!11142 = !DISubroutineType(types: !11143)
!11143 = !{!11144, !8702}
!11144 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<char>", scope: !277, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11145, templateParams: !250, identifier: "6411f7740117972cbfd12073659b2dd5")
!11145 = !{!11146, !11147, !11148}
!11146 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !11144, file: !2, baseType: !8630, size: 32, align: 32, flags: DIFlagPrivate)
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !11144, file: !2, baseType: !8633, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !11144, file: !2, baseType: !11149, align: 8, offset: 64, flags: DIFlagPrivate)
!11149 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&char>", scope: !408, file: !2, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !11125, identifier: "2b7bee44cd3031efcfaf7fad47fa3c18")
!11150 = !{!11151}
!11151 = !DILocalVariable(name: "self", arg: 1, scope: !11141, file: !9742, line: 1036, type: !8702)
!11152 = !DILocation(line: 1036, column: 23, scope: !11141)
!11153 = !DILocation(line: 1037, column: 9, scope: !11141)
!11154 = !DILocation(line: 1038, column: 6, scope: !11141)
!11155 = distinct !DISubprogram(name: "new<char>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hf1e0f6fecf80a711E", scope: !11144, file: !11156, line: 96, type: !11142, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !11157, retainedNodes: !11158)
!11156 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "69db2748005f3986c6551b3886462616")
!11157 = !DISubprogram(name: "new<char>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17hf1e0f6fecf80a711E", scope: !11144, file: !11156, line: 96, type: !11142, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!11158 = !{!11159, !11160, !11162, !11164}
!11159 = !DILocalVariable(name: "slice", arg: 1, scope: !11155, file: !11156, line: 96, type: !8702)
!11160 = !DILocalVariable(name: "len", scope: !11161, file: !11156, line: 97, type: !9, align: 32)
!11161 = distinct !DILexicalBlock(scope: !11155, file: !11156, line: 97, column: 9)
!11162 = !DILocalVariable(name: "ptr", scope: !11163, file: !11156, line: 98, type: !8630, align: 32)
!11163 = distinct !DILexicalBlock(scope: !11161, file: !11156, line: 98, column: 9)
!11164 = !DILocalVariable(name: "end_or_len", scope: !11165, file: !11156, line: 101, type: !8633, align: 32)
!11165 = distinct !DILexicalBlock(scope: !11163, file: !11156, line: 101, column: 13)
!11166 = !DILocation(line: 96, column: 29, scope: !11155)
!11167 = !DILocation(line: 101, column: 17, scope: !11165)
!11168 = !DILocation(line: 97, column: 19, scope: !11155)
!11169 = !DILocation(line: 97, column: 13, scope: !11161)
!11170 = !DILocation(line: 98, column: 31, scope: !11161)
!11171 = !DILocation(line: 98, column: 56, scope: !11161)
!11172 = !DILocation(line: 98, column: 13, scope: !11163)
!11173 = !DILocation(line: 102, column: 20, scope: !11163)
!11174 = !DILocalVariable(name: "self", arg: 1, scope: !11175, file: !8619, line: 401, type: !8630)
!11175 = distinct !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48dd849f4df02f67E", scope: !8630, file: !8619, line: 401, type: !11176, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !11179, retainedNodes: !11180)
!11176 = !DISubroutineType(types: !11177)
!11177 = !{!11178, !8630}
!11178 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut char", baseType: !252, size: 32, align: 32, dwarfAddressSpace: 0)
!11179 = !DISubprogram(name: "as_ptr<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h48dd849f4df02f67E", scope: !8630, file: !8619, line: 401, type: !11176, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!11180 = !{!11174}
!11181 = !DILocation(line: 401, column: 25, scope: !11175, inlinedAt: !11182)
!11182 = distinct !DILocation(line: 102, column: 69, scope: !11163)
!11183 = !DILocalVariable(name: "self", arg: 1, scope: !11184, file: !8537, line: 927, type: !11178)
!11184 = distinct !DISubprogram(name: "add<char>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17ha7bd4c5d64a689cbE", scope: !8523, file: !8537, line: 927, type: !11185, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !11187)
!11185 = !DISubroutineType(types: !11186)
!11186 = !{!11178, !11178, !9, !823}
!11187 = !{!11183, !11188}
!11188 = !DILocalVariable(name: "count", arg: 2, scope: !11184, file: !8537, line: 927, type: !9)
!11189 = !DILocation(line: 927, column: 29, scope: !11184, inlinedAt: !11190)
!11190 = distinct !DILocation(line: 102, column: 78, scope: !11163)
!11191 = !DILocation(line: 927, column: 35, scope: !11184, inlinedAt: !11190)
!11192 = !DILocation(line: 77, column: 35, scope: !11193, inlinedAt: !11190)
!11193 = !DILexicalBlockFile(scope: !11184, file: !7058, discriminator: 0)
!11194 = !DILocation(line: 78, column: 17, scope: !11193, inlinedAt: !11190)
!11195 = !DILocation(line: 961, column: 18, scope: !11184, inlinedAt: !11190)
!11196 = !DILocation(line: 102, column: 63, scope: !11163)
!11197 = !DILocation(line: 102, column: 17, scope: !11163)
!11198 = !DILocation(line: 104, column: 25, scope: !11165)
!11199 = !DILocation(line: 106, column: 6, scope: !11155)
!11200 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter20ChunksExact$LT$T$GT$3new17h7903a31b77699416E", scope: !276, file: !11156, line: 1866, type: !11201, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, declaration: !11203, retainedNodes: !11204)
!11201 = !DISubroutineType(types: !11202)
!11202 = !{!276, !281, !9}
!11203 = !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter20ChunksExact$LT$T$GT$3new17h7903a31b77699416E", scope: !276, file: !11156, line: 1866, type: !11201, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !288)
!11204 = !{!11205, !11206, !11207, !11209, !11211, !11213}
!11205 = !DILocalVariable(name: "slice", arg: 1, scope: !11200, file: !11156, line: 1866, type: !281)
!11206 = !DILocalVariable(name: "chunk_size", arg: 2, scope: !11200, file: !11156, line: 1866, type: !9)
!11207 = !DILocalVariable(name: "rem", scope: !11208, file: !11156, line: 1867, type: !9, align: 32)
!11208 = distinct !DILexicalBlock(scope: !11200, file: !11156, line: 1867, column: 9)
!11209 = !DILocalVariable(name: "fst_len", scope: !11210, file: !11156, line: 1868, type: !9, align: 32)
!11210 = distinct !DILexicalBlock(scope: !11208, file: !11156, line: 1868, column: 9)
!11211 = !DILocalVariable(name: "fst", scope: !11212, file: !11156, line: 1870, type: !281, align: 32)
!11212 = distinct !DILexicalBlock(scope: !11210, file: !11156, line: 1870, column: 9)
!11213 = !DILocalVariable(name: "snd", scope: !11212, file: !11156, line: 1870, type: !281, align: 32)
!11214 = !DILocation(line: 1866, column: 29, scope: !11200)
!11215 = !DILocation(line: 1866, column: 45, scope: !11200)
!11216 = !DILocation(line: 1867, column: 19, scope: !11200)
!11217 = !DILocation(line: 1867, column: 13, scope: !11208)
!11218 = !DILocation(line: 1868, column: 23, scope: !11208)
!11219 = !DILocation(line: 1868, column: 13, scope: !11210)
!11220 = !DILocation(line: 1870, column: 41, scope: !11210)
!11221 = !DILocation(line: 1870, column: 14, scope: !11210)
!11222 = !DILocation(line: 1870, column: 14, scope: !11212)
!11223 = !DILocation(line: 1870, column: 19, scope: !11210)
!11224 = !DILocation(line: 1870, column: 19, scope: !11212)
!11225 = !DILocation(line: 1871, column: 9, scope: !11212)
!11226 = !DILocation(line: 1872, column: 6, scope: !11200)
!11227 = distinct !DISubprogram(name: "into_iter<char>", linkageName: "_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h8f898a88fe006f77E", scope: !11228, file: !11156, line: 25, type: !11142, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !11229)
!11228 = !DINamespace(name: "{impl#1}", scope: !277)
!11229 = !{!11230}
!11230 = !DILocalVariable(name: "self", arg: 1, scope: !11227, file: !11156, line: 25, type: !8702)
!11231 = !DILocation(line: 25, column: 18, scope: !11227)
!11232 = !DILocation(line: 26, column: 14, scope: !11227)
!11233 = !DILocation(line: 27, column: 6, scope: !11227)
!11234 = distinct !DISubprogram(name: "slice_index_fail", linkageName: "_ZN4core5slice5index16slice_index_fail17h2efc39c3975ac579E", scope: !10922, file: !10920, line: 37, type: !9168, scopeLine: 37, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !11235)
!11235 = !{!11236, !11237, !11238}
!11236 = !DILocalVariable(name: "start", arg: 1, scope: !11234, file: !10920, line: 37, type: !9)
!11237 = !DILocalVariable(name: "end", arg: 2, scope: !11234, file: !10920, line: 37, type: !9)
!11238 = !DILocalVariable(name: "len", arg: 3, scope: !11234, file: !10920, line: 37, type: !9)
!11239 = !DILocation(line: 37, column: 27, scope: !11234)
!11240 = !DILocation(line: 37, column: 41, scope: !11234)
!11241 = !DILocation(line: 37, column: 53, scope: !11234)
!11242 = !DILocation(line: 38, column: 8, scope: !11234)
!11243 = !DILocation(line: 47, column: 8, scope: !11234)
!11244 = !DILocalVariable(name: "start", arg: 1, scope: !11245, file: !1045, line: 166, type: !9)
!11245 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17h7b5eeb3cd5064bf8E", scope: !11246, file: !1045, line: 166, type: !11247, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !11249)
!11246 = !DINamespace(name: "slice_index_fail", scope: !10922)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{null, !9, !9, !823}
!11249 = !{!11244, !11250}
!11250 = !DILocalVariable(name: "len", arg: 2, scope: !11245, file: !1045, line: 166, type: !9)
!11251 = !DILocation(line: 166, column: 29, scope: !11245, inlinedAt: !11252)
!11252 = distinct !DILocation(line: 178, column: 9, scope: !11253)
!11253 = !DILexicalBlockFile(scope: !11234, file: !1045, discriminator: 0)
!11254 = !DILocation(line: 2435, column: 9, scope: !11255, inlinedAt: !11252)
!11255 = !DILexicalBlockFile(scope: !11245, file: !7109, discriminator: 0)
!11256 = !DILocation(line: 178, column: 9, scope: !11253)
!11257 = !DILocation(line: 56, column: 8, scope: !11234)
!11258 = !DILocalVariable(name: "end", arg: 1, scope: !11259, file: !1045, line: 166, type: !9)
!11259 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17ha4978ed09fb396c5E", scope: !11246, file: !1045, line: 166, type: !11247, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !11260)
!11260 = !{!11258, !11261}
!11261 = !DILocalVariable(name: "len", arg: 2, scope: !11259, file: !1045, line: 166, type: !9)
!11262 = !DILocation(line: 166, column: 29, scope: !11259, inlinedAt: !11263)
!11263 = distinct !DILocation(line: 178, column: 9, scope: !11253)
!11264 = !DILocation(line: 2435, column: 9, scope: !11265, inlinedAt: !11263)
!11265 = !DILexicalBlockFile(scope: !11259, file: !7109, discriminator: 0)
!11266 = !DILocalVariable(name: "end", arg: 1, scope: !11267, file: !1045, line: 166, type: !9)
!11267 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17h23a360d8865a5df8E", scope: !11246, file: !1045, line: 166, type: !11247, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !11268)
!11268 = !{!11266, !11269}
!11269 = !DILocalVariable(name: "len", arg: 2, scope: !11267, file: !1045, line: 166, type: !9)
!11270 = !DILocation(line: 166, column: 29, scope: !11267, inlinedAt: !11271)
!11271 = distinct !DILocation(line: 178, column: 9, scope: !11253)
!11272 = !DILocation(line: 2435, column: 9, scope: !11273, inlinedAt: !11271)
!11273 = !DILexicalBlockFile(scope: !11267, file: !7109, discriminator: 0)
!11274 = !DILocalVariable(name: "start", arg: 1, scope: !11275, file: !1045, line: 166, type: !9)
!11275 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17hdddde5dc9635833dE", scope: !11246, file: !1045, line: 166, type: !11247, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !11276)
!11276 = !{!11274, !11277}
!11277 = !DILocalVariable(name: "end", arg: 2, scope: !11275, file: !1045, line: 166, type: !9)
!11278 = !DILocation(line: 166, column: 29, scope: !11275, inlinedAt: !11279)
!11279 = distinct !DILocation(line: 178, column: 9, scope: !11253)
!11280 = !DILocation(line: 2435, column: 9, scope: !11281, inlinedAt: !11279)
!11281 = !DILexicalBlockFile(scope: !11275, file: !7109, discriminator: 0)
!11282 = distinct !DISubprogram(name: "memchr_naive", linkageName: "_ZN4core5slice6memchr12memchr_naive17hab63cca88e7523a7E", scope: !11284, file: !11283, line: 35, type: !11285, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !11287)
!11283 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe9d861b954a98f86a5ec9ec0f1385e4")
!11284 = !DINamespace(name: "memchr", scope: !278)
!11285 = !DISubroutineType(types: !11286)
!11286 = !{!6624, !13, !281}
!11287 = !{!11288, !11289, !11290}
!11288 = !DILocalVariable(name: "x", arg: 1, scope: !11282, file: !11283, line: 35, type: !13)
!11289 = !DILocalVariable(name: "text", arg: 2, scope: !11282, file: !11283, line: 35, type: !281)
!11290 = !DILocalVariable(name: "i", scope: !11291, file: !11283, line: 36, type: !9, align: 32)
!11291 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 36, column: 5)
!11292 = !DILocation(line: 35, column: 23, scope: !11282)
!11293 = !DILocation(line: 35, column: 30, scope: !11282)
!11294 = !DILocation(line: 36, column: 9, scope: !11291)
!11295 = !DILocation(line: 36, column: 17, scope: !11282)
!11296 = !DILocation(line: 39, column: 5, scope: !11291)
!11297 = !DILocation(line: 39, column: 11, scope: !11291)
!11298 = !DILocation(line: 47, column: 5, scope: !11291)
!11299 = !DILocation(line: 48, column: 2, scope: !11282)
!11300 = !DILocation(line: 40, column: 17, scope: !11291)
!11301 = !DILocation(line: 40, column: 12, scope: !11291)
!11302 = !DILocation(line: 44, column: 9, scope: !11291)
!11303 = !DILocation(line: 41, column: 25, scope: !11291)
!11304 = !DILocation(line: 41, column: 20, scope: !11291)
!11305 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17h90769068d71bb576E", scope: !11284, file: !11283, line: 25, type: !11285, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !11306)
!11306 = !{!11307, !11308}
!11307 = !DILocalVariable(name: "x", arg: 1, scope: !11305, file: !11283, line: 25, type: !13)
!11308 = !DILocalVariable(name: "text", arg: 2, scope: !11305, file: !11283, line: 25, type: !281)
!11309 = !DILocation(line: 25, column: 21, scope: !11305)
!11310 = !DILocation(line: 25, column: 28, scope: !11305)
!11311 = !DILocation(line: 27, column: 21, scope: !11305)
!11312 = !DILocation(line: 27, column: 8, scope: !11305)
!11313 = !DILocation(line: 31, column: 5, scope: !11305)
!11314 = !DILocation(line: 28, column: 16, scope: !11305)
!11315 = !DILocation(line: 32, column: 2, scope: !11305)
!11316 = distinct !DISubprogram(name: "unwrap_failed", linkageName: "_ZN4core6option13unwrap_failed17h87f3d65d3174ccbeE", scope: !244, file: !807, line: 2173, type: !10016, scopeLine: 2173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!11317 = !DILocation(line: 2174, column: 5, scope: !11316)
!11318 = distinct !DISubprogram(name: "unwrap_or_else<core::result::Result<(), core::fmt::Error>, rustc_demangle::v0::{impl#2}::fmt::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17he7e1992d3fe7e189E", scope: !1612, file: !807, line: 1060, type: !11319, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11327, declaration: !11326, retainedNodes: !11329)
!11319 = !DISubroutineType(types: !11320)
!11320 = !{!1079, !1612, !11321, !823}
!11321 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1626, file: !2, size: 64, align: 32, elements: !11322, templateParams: !14, identifier: "6d7f35841cd5172467c3ed35c7379ee6")
!11322 = !{!11323, !11325}
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !11321, file: !2, baseType: !11324, size: 32, align: 32)
!11324 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&rustc_demangle::v0::Ident", baseType: !1337, size: 32, align: 32, dwarfAddressSpace: 0)
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__f", scope: !11321, file: !2, baseType: !1630, size: 32, align: 32, offset: 32)
!11326 = !DISubprogram(name: "unwrap_or_else<core::result::Result<(), core::fmt::Error>, rustc_demangle::v0::{impl#2}::fmt::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17he7e1992d3fe7e189E", scope: !1612, file: !807, line: 1060, type: !11319, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11327)
!11327 = !{!1619, !11328}
!11328 = !DITemplateTypeParameter(name: "F", type: !11321)
!11329 = !{!11330, !11331, !11332}
!11330 = !DILocalVariable(name: "self", arg: 1, scope: !11318, file: !807, line: 1060, type: !1612)
!11331 = !DILocalVariable(name: "f", arg: 2, scope: !11318, file: !807, line: 1060, type: !11321)
!11332 = !DILocalVariable(name: "x", scope: !11333, file: !807, line: 1065, type: !1079, align: 8)
!11333 = distinct !DILexicalBlock(scope: !11318, file: !807, line: 1065, column: 13)
!11334 = !DILocation(line: 1060, column: 36, scope: !11318)
!11335 = !DILocation(line: 1060, column: 42, scope: !11318)
!11336 = !DILocation(line: 1064, column: 15, scope: !11318)
!11337 = !DILocation(line: 1064, column: 9, scope: !11318)
!11338 = !DILocation(line: 1065, column: 18, scope: !11318)
!11339 = !DILocation(line: 1065, column: 18, scope: !11333)
!11340 = !DILocation(line: 1065, column: 24, scope: !11333)
!11341 = !DILocation(line: 1065, column: 24, scope: !11318)
!11342 = !DILocation(line: 1066, column: 21, scope: !11318)
!11343 = !DILocation(line: 1068, column: 5, scope: !11318)
!11344 = !DILocation(line: 1068, column: 6, scope: !11318)
!11345 = distinct !DISubprogram(name: "unwrap_unchecked<&mut core::option::Option<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8cd779081db56cecE", scope: !11346, file: !807, line: 1127, type: !11360, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11352, declaration: !11362, retainedNodes: !11363)
!11346 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut core::option::Option<u8>>", scope: !244, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !11347, templateParams: !14, identifier: "287871e14ad4b01a7d233719dad1df90")
!11347 = !{!11348}
!11348 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11346, file: !2, size: 32, align: 32, elements: !11349, templateParams: !14, identifier: "79bbd184ff60c054f5ec525a6ae9c58", discriminator: !11359)
!11349 = !{!11350, !11355}
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !11348, file: !2, baseType: !11351, size: 32, align: 32, extraData: i32 0)
!11351 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !11346, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !11352, identifier: "5620240131c41a987d28de122d669263")
!11352 = !{!11353}
!11353 = !DITemplateTypeParameter(name: "T", type: !11354)
!11354 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<u8>", baseType: !365, size: 32, align: 32, dwarfAddressSpace: 0)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !11348, file: !2, baseType: !11356, size: 32, align: 32)
!11356 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !11346, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !11357, templateParams: !11352, identifier: "5140536edbfa11ca9d0c08078f7c6517")
!11357 = !{!11358}
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11356, file: !2, baseType: !11354, size: 32, align: 32, flags: DIFlagPublic)
!11359 = !DIDerivedType(tag: DW_TAG_member, scope: !11346, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!11360 = !DISubroutineType(types: !11361)
!11361 = !{!11354, !11346, !823}
!11362 = !DISubprogram(name: "unwrap_unchecked<&mut core::option::Option<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h8cd779081db56cecE", scope: !11346, file: !807, line: 1127, type: !11360, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11352)
!11363 = !{!11364, !11365}
!11364 = !DILocalVariable(name: "self", arg: 1, scope: !11345, file: !807, line: 1127, type: !11346)
!11365 = !DILocalVariable(name: "val", scope: !11366, file: !807, line: 1129, type: !11354, align: 32)
!11366 = distinct !DILexicalBlock(scope: !11345, file: !807, line: 1129, column: 13)
!11367 = !DILocation(line: 1127, column: 42, scope: !11345)
!11368 = !DILocation(line: 1128, column: 15, scope: !11345)
!11369 = !DILocation(line: 1128, column: 9, scope: !11345)
!11370 = !DILocation(line: 1129, column: 18, scope: !11345)
!11371 = !DILocation(line: 1129, column: 18, scope: !11366)
!11372 = !DILocation(line: 1133, column: 6, scope: !11345)
!11373 = !DILocation(line: 1131, column: 30, scope: !11345)
!11374 = distinct !DISubprogram(name: "get_or_insert_with<core::option::Option<u8>, core::iter::adapters::peekable::{impl#5}::peek::{closure_env#0}<core::str::iter::Bytes>>", linkageName: "_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h29a568fae5f3c471E", scope: !526, file: !807, line: 1804, type: !11375, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11378, declaration: !11377, retainedNodes: !11380)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!11354, !7470, !10893}
!11377 = !DISubprogram(name: "get_or_insert_with<core::option::Option<u8>, core::iter::adapters::peekable::{impl#5}::peek::{closure_env#0}<core::str::iter::Bytes>>", linkageName: "_ZN4core6option15Option$LT$T$GT$18get_or_insert_with17h29a568fae5f3c471E", scope: !526, file: !807, line: 1804, type: !11375, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11378)
!11378 = !{!533, !11379}
!11379 = !DITemplateTypeParameter(name: "F", type: !10893)
!11380 = !{!11381, !11382}
!11381 = !DILocalVariable(name: "self", arg: 1, scope: !11374, file: !807, line: 1804, type: !7470)
!11382 = !DILocalVariable(name: "f", arg: 2, scope: !11374, file: !807, line: 1804, type: !10893)
!11383 = !DILocation(line: 1804, column: 40, scope: !11374)
!11384 = !DILocation(line: 1804, column: 51, scope: !11374)
!11385 = !DILocation(line: 1815, column: 9, scope: !11374)
!11386 = !DILocation(line: 1809, column: 23, scope: !11374)
!11387 = !DILocation(line: 1809, column: 16, scope: !11374)
!11388 = !DILocation(line: 1815, column: 23, scope: !11374)
!11389 = !DILocation(line: 1815, column: 32, scope: !11374)
!11390 = !DILocation(line: 1816, column: 5, scope: !11374)
!11391 = !DILocation(line: 1810, column: 26, scope: !11374)
!11392 = !DILocation(line: 1810, column: 21, scope: !11374)
!11393 = !DILocation(line: 1810, column: 13, scope: !11374)
!11394 = !DILocation(line: 1809, column: 9, scope: !11374)
!11395 = !DILocation(line: 1816, column: 6, scope: !11374)
!11396 = !DILocation(line: 1804, column: 5, scope: !11374)
!11397 = distinct !DISubprogram(name: "map<[&u8; 2], u8, &mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h6817531c2f27cd6fE", scope: !336, file: !807, line: 1159, type: !11398, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11401, declaration: !11400, retainedNodes: !11404)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{!365, !336, !914}
!11400 = !DISubprogram(name: "map<[&u8; 2], u8, &mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h6817531c2f27cd6fE", scope: !336, file: !807, line: 1159, type: !11398, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11401)
!11401 = !{!343, !11402, !11403}
!11402 = !DITemplateTypeParameter(name: "U", type: !13)
!11403 = !DITemplateTypeParameter(name: "F", type: !914)
!11404 = !{!11405, !11406, !11407}
!11405 = !DILocalVariable(name: "self", arg: 1, scope: !11397, file: !807, line: 1159, type: !336)
!11406 = !DILocalVariable(name: "f", arg: 2, scope: !11397, file: !807, line: 1159, type: !914)
!11407 = !DILocalVariable(name: "x", scope: !11408, file: !807, line: 1164, type: !344, align: 32)
!11408 = distinct !DILexicalBlock(scope: !11397, file: !807, line: 1164, column: 13)
!11409 = !DILocation(line: 1159, column: 28, scope: !11397)
!11410 = !DILocation(line: 1159, column: 34, scope: !11397)
!11411 = !DILocation(line: 1164, column: 18, scope: !11408)
!11412 = !DILocation(line: 1163, column: 15, scope: !11397)
!11413 = !DILocation(line: 1163, column: 9, scope: !11397)
!11414 = !DILocation(line: 1164, column: 18, scope: !11397)
!11415 = !DILocation(line: 1164, column: 29, scope: !11408)
!11416 = !DILocation(line: 1164, column: 24, scope: !11408)
!11417 = !DILocation(line: 1164, column: 33, scope: !11397)
!11418 = !DILocation(line: 1165, column: 21, scope: !11397)
!11419 = !DILocation(line: 1167, column: 5, scope: !11397)
!11420 = !DILocation(line: 1167, column: 6, scope: !11397)
!11421 = distinct !DISubprogram(name: "map<(usize, usize), usize, core::str::{impl#0}::find::{closure_env#0}<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h6c73ccf157d4d3deE", scope: !9290, file: !807, line: 1159, type: !11422, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11425, declaration: !11424, retainedNodes: !11428)
!11422 = !DISubroutineType(types: !11423)
!11423 = !{!6624, !9290, !8965}
!11424 = !DISubprogram(name: "map<(usize, usize), usize, core::str::{impl#0}::find::{closure_env#0}<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h6c73ccf157d4d3deE", scope: !9290, file: !807, line: 1159, type: !11422, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11425)
!11425 = !{!9297, !11426, !11427}
!11426 = !DITemplateTypeParameter(name: "U", type: !9)
!11427 = !DITemplateTypeParameter(name: "F", type: !8965)
!11428 = !{!11429, !11430, !11431}
!11429 = !DILocalVariable(name: "self", arg: 1, scope: !11421, file: !807, line: 1159, type: !9290)
!11430 = !DILocalVariable(name: "f", arg: 2, scope: !11421, file: !807, line: 1159, type: !8965)
!11431 = !DILocalVariable(name: "x", scope: !11432, file: !807, line: 1164, type: !8966, align: 32)
!11432 = distinct !DILexicalBlock(scope: !11421, file: !807, line: 1164, column: 13)
!11433 = !DILocation(line: 1159, column: 28, scope: !11421)
!11434 = !DILocation(line: 1159, column: 34, scope: !11421)
!11435 = !DILocation(line: 1163, column: 15, scope: !11421)
!11436 = !DILocation(line: 1163, column: 9, scope: !11421)
!11437 = !DILocation(line: 1164, column: 18, scope: !11421)
!11438 = !DILocation(line: 1164, column: 18, scope: !11432)
!11439 = !DILocation(line: 1164, column: 29, scope: !11432)
!11440 = !DILocation(line: 1164, column: 24, scope: !11432)
!11441 = !DILocation(line: 1164, column: 33, scope: !11421)
!11442 = !DILocation(line: 1165, column: 21, scope: !11421)
!11443 = !DILocation(line: 1167, column: 5, scope: !11421)
!11444 = !DILocation(line: 1167, column: 6, scope: !11421)
!11445 = distinct !DISubprogram(name: "map<(usize, usize), usize, core::str::{impl#0}::find::{closure_env#0}<char>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hb04a75bdada3252fE", scope: !9290, file: !807, line: 1159, type: !11446, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11449, declaration: !11448, retainedNodes: !11451)
!11446 = !DISubroutineType(types: !11447)
!11447 = !{!6624, !9290, !8997}
!11448 = !DISubprogram(name: "map<(usize, usize), usize, core::str::{impl#0}::find::{closure_env#0}<char>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hb04a75bdada3252fE", scope: !9290, file: !807, line: 1159, type: !11446, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11449)
!11449 = !{!9297, !11426, !11450}
!11450 = !DITemplateTypeParameter(name: "F", type: !8997)
!11451 = !{!11452, !11453, !11454}
!11452 = !DILocalVariable(name: "self", arg: 1, scope: !11445, file: !807, line: 1159, type: !9290)
!11453 = !DILocalVariable(name: "f", arg: 2, scope: !11445, file: !807, line: 1159, type: !8997)
!11454 = !DILocalVariable(name: "x", scope: !11455, file: !807, line: 1164, type: !8966, align: 32)
!11455 = distinct !DILexicalBlock(scope: !11445, file: !807, line: 1164, column: 13)
!11456 = !DILocation(line: 1159, column: 28, scope: !11445)
!11457 = !DILocation(line: 1159, column: 34, scope: !11445)
!11458 = !DILocation(line: 1163, column: 15, scope: !11445)
!11459 = !DILocation(line: 1163, column: 9, scope: !11445)
!11460 = !DILocation(line: 1164, column: 18, scope: !11445)
!11461 = !DILocation(line: 1164, column: 18, scope: !11455)
!11462 = !DILocation(line: 1164, column: 29, scope: !11455)
!11463 = !DILocation(line: 1164, column: 24, scope: !11455)
!11464 = !DILocation(line: 1164, column: 33, scope: !11445)
!11465 = !DILocation(line: 1165, column: 21, scope: !11445)
!11466 = !DILocation(line: 1167, column: 5, scope: !11445)
!11467 = !DILocation(line: 1167, column: 6, scope: !11445)
!11468 = distinct !DISubprogram(name: "map<(usize, usize), usize, core::str::{impl#0}::find::{closure_env#0}<&str>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hce424b976cc90a2aE", scope: !9290, file: !807, line: 1159, type: !11469, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11472, declaration: !11471, retainedNodes: !11474)
!11469 = !DISubroutineType(types: !11470)
!11470 = !{!6624, !9290, !8983}
!11471 = !DISubprogram(name: "map<(usize, usize), usize, core::str::{impl#0}::find::{closure_env#0}<&str>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hce424b976cc90a2aE", scope: !9290, file: !807, line: 1159, type: !11469, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11472)
!11472 = !{!9297, !11426, !11473}
!11473 = !DITemplateTypeParameter(name: "F", type: !8983)
!11474 = !{!11475, !11476, !11477}
!11475 = !DILocalVariable(name: "self", arg: 1, scope: !11468, file: !807, line: 1159, type: !9290)
!11476 = !DILocalVariable(name: "f", arg: 2, scope: !11468, file: !807, line: 1159, type: !8983)
!11477 = !DILocalVariable(name: "x", scope: !11478, file: !807, line: 1164, type: !8966, align: 32)
!11478 = distinct !DILexicalBlock(scope: !11468, file: !807, line: 1164, column: 13)
!11479 = !DILocation(line: 1159, column: 28, scope: !11468)
!11480 = !DILocation(line: 1159, column: 34, scope: !11468)
!11481 = !DILocation(line: 1163, column: 15, scope: !11468)
!11482 = !DILocation(line: 1163, column: 9, scope: !11468)
!11483 = !DILocation(line: 1164, column: 18, scope: !11468)
!11484 = !DILocation(line: 1164, column: 18, scope: !11478)
!11485 = !DILocation(line: 1164, column: 29, scope: !11478)
!11486 = !DILocation(line: 1164, column: 24, scope: !11478)
!11487 = !DILocation(line: 1164, column: 33, scope: !11468)
!11488 = !DILocation(line: 1165, column: 21, scope: !11468)
!11489 = !DILocation(line: 1167, column: 5, scope: !11468)
!11490 = !DILocation(line: 1167, column: 6, scope: !11468)
!11491 = distinct !DISubprogram(name: "map<u8, core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hf03f6be6515e1e43E", scope: !365, file: !807, line: 1159, type: !11492, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11495, declaration: !11494, retainedNodes: !11498)
!11492 = !DISubroutineType(types: !11493)
!11493 = !{!490, !365, !981}
!11494 = !DISubprogram(name: "map<u8, core::result::Result<char, ()>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hf03f6be6515e1e43E", scope: !365, file: !807, line: 1159, type: !11492, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11495)
!11495 = !{!289, !11496, !11497}
!11496 = !DITemplateTypeParameter(name: "U", type: !306)
!11497 = !DITemplateTypeParameter(name: "F", type: !981)
!11498 = !{!11499, !11500, !11501}
!11499 = !DILocalVariable(name: "self", arg: 1, scope: !11491, file: !807, line: 1159, type: !365)
!11500 = !DILocalVariable(name: "f", arg: 2, scope: !11491, file: !807, line: 1159, type: !981)
!11501 = !DILocalVariable(name: "x", scope: !11502, file: !807, line: 1164, type: !13, align: 8)
!11502 = distinct !DILexicalBlock(scope: !11491, file: !807, line: 1164, column: 13)
!11503 = !DILocation(line: 1159, column: 28, scope: !11491)
!11504 = !DILocation(line: 1159, column: 34, scope: !11491)
!11505 = !DILocation(line: 1163, column: 15, scope: !11491)
!11506 = !DILocation(line: 1163, column: 9, scope: !11491)
!11507 = !DILocation(line: 1164, column: 18, scope: !11491)
!11508 = !DILocation(line: 1164, column: 18, scope: !11502)
!11509 = !DILocation(line: 1164, column: 29, scope: !11502)
!11510 = !DILocation(line: 1164, column: 24, scope: !11502)
!11511 = !DILocation(line: 1164, column: 33, scope: !11491)
!11512 = !DILocation(line: 1165, column: 21, scope: !11491)
!11513 = !DILocation(line: 1167, column: 5, scope: !11491)
!11514 = !DILocation(line: 1167, column: 6, scope: !11491)
!11515 = distinct !DISubprogram(name: "map<core::result::Result<char, ()>, char, &mut fn(core::result::Result<char, ()>) -> char>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hf1f6c34191675129E", scope: !490, file: !807, line: 1159, type: !11516, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11519, declaration: !11518, retainedNodes: !11521)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{!243, !490, !8428}
!11518 = !DISubprogram(name: "map<core::result::Result<char, ()>, char, &mut fn(core::result::Result<char, ()>) -> char>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hf1f6c34191675129E", scope: !490, file: !807, line: 1159, type: !11516, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11519)
!11519 = !{!497, !8636, !11520}
!11520 = !DITemplateTypeParameter(name: "F", type: !8428)
!11521 = !{!11522, !11523, !11524}
!11522 = !DILocalVariable(name: "self", arg: 1, scope: !11515, file: !807, line: 1159, type: !490)
!11523 = !DILocalVariable(name: "f", arg: 2, scope: !11515, file: !807, line: 1159, type: !8428)
!11524 = !DILocalVariable(name: "x", scope: !11525, file: !807, line: 1164, type: !306, align: 32)
!11525 = distinct !DILexicalBlock(scope: !11515, file: !807, line: 1164, column: 13)
!11526 = !DILocation(line: 1159, column: 28, scope: !11515)
!11527 = !DILocation(line: 1159, column: 34, scope: !11515)
!11528 = !DILocation(line: 1163, column: 15, scope: !11515)
!11529 = !DILocation(line: 1163, column: 9, scope: !11515)
!11530 = !DILocation(line: 1164, column: 18, scope: !11515)
!11531 = !DILocation(line: 1164, column: 18, scope: !11525)
!11532 = !DILocation(line: 1164, column: 29, scope: !11525)
!11533 = !DILocation(line: 1164, column: 24, scope: !11525)
!11534 = !DILocation(line: 1164, column: 33, scope: !11515)
!11535 = !DILocation(line: 1165, column: 21, scope: !11515)
!11536 = !DILocation(line: 1167, column: 5, scope: !11515)
!11537 = !DILocation(line: 1167, column: 6, scope: !11515)
!11538 = distinct !DISubprogram(name: "map<&[u8], [&u8; 2], &mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hfe66546d634bb094E", scope: !11539, file: !807, line: 1159, type: !11552, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11555, declaration: !11554, retainedNodes: !11558)
!11539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8]>", scope: !244, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11540, templateParams: !14, identifier: "7a70175d72b9b4c4336467474c819c")
!11540 = !{!11541}
!11541 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11539, file: !2, size: 64, align: 32, elements: !11542, templateParams: !14, identifier: "f08a1668cf75be307616c2e78917be80", discriminator: !11551)
!11542 = !{!11543, !11547}
!11543 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !11541, file: !2, baseType: !11544, size: 64, align: 32, extraData: i32 0)
!11544 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !11539, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !11545, identifier: "cf97fc12ce83ff69b4bcc25a6a81ef1e")
!11545 = !{!11546}
!11546 = !DITemplateTypeParameter(name: "T", type: !281)
!11547 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !11541, file: !2, baseType: !11548, size: 64, align: 32)
!11548 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !11539, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11549, templateParams: !11545, identifier: "4fcd980b00039f9bb51f976456649747")
!11549 = !{!11550}
!11550 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11548, file: !2, baseType: !281, size: 64, align: 32, flags: DIFlagPublic)
!11551 = !DIDerivedType(tag: DW_TAG_member, scope: !11539, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!11552 = !DISubroutineType(types: !11553)
!11553 = !{!336, !11539, !949}
!11554 = !DISubprogram(name: "map<&[u8], [&u8; 2], &mut rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hfe66546d634bb094E", scope: !11539, file: !807, line: 1159, type: !11552, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11555)
!11555 = !{!11546, !11556, !11557}
!11556 = !DITemplateTypeParameter(name: "U", type: !344)
!11557 = !DITemplateTypeParameter(name: "F", type: !949)
!11558 = !{!11559, !11560, !11561}
!11559 = !DILocalVariable(name: "self", arg: 1, scope: !11538, file: !807, line: 1159, type: !11539)
!11560 = !DILocalVariable(name: "f", arg: 2, scope: !11538, file: !807, line: 1159, type: !949)
!11561 = !DILocalVariable(name: "x", scope: !11562, file: !807, line: 1164, type: !281, align: 32)
!11562 = distinct !DILexicalBlock(scope: !11538, file: !807, line: 1164, column: 13)
!11563 = !DILocation(line: 1159, column: 28, scope: !11538)
!11564 = !DILocation(line: 1159, column: 34, scope: !11538)
!11565 = !DILocation(line: 1163, column: 15, scope: !11538)
!11566 = !DILocation(line: 1163, column: 9, scope: !11538)
!11567 = !DILocation(line: 1164, column: 18, scope: !11538)
!11568 = !DILocation(line: 1164, column: 18, scope: !11562)
!11569 = !DILocation(line: 1164, column: 29, scope: !11562)
!11570 = !DILocation(line: 1164, column: 24, scope: !11562)
!11571 = !DILocation(line: 1164, column: 33, scope: !11538)
!11572 = !DILocation(line: 1165, column: 21, scope: !11538)
!11573 = !DILocation(line: 1167, column: 5, scope: !11538)
!11574 = !DILocation(line: 1167, column: 6, scope: !11538)
!11575 = distinct !DISubprogram(name: "take<char>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h1a8617c700728f89E", scope: !243, file: !807, line: 1840, type: !11576, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !11578, retainedNodes: !11579)
!11576 = !DISubroutineType(types: !11577)
!11577 = !{!243, !7504}
!11578 = !DISubprogram(name: "take<char>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h1a8617c700728f89E", scope: !243, file: !807, line: 1840, type: !11576, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!11579 = !{!11580}
!11580 = !DILocalVariable(name: "self", arg: 1, scope: !11575, file: !807, line: 1840, type: !7504)
!11581 = !DILocation(line: 1840, column: 23, scope: !11575)
!11582 = !DILocation(line: 1842, column: 9, scope: !11575)
!11583 = !DILocation(line: 1843, column: 6, scope: !11575)
!11584 = distinct !DISubprogram(name: "take<&mut core::fmt::Formatter>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h377d8dd2789ef001E", scope: !2307, file: !807, line: 1840, type: !11585, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !2313, declaration: !11587, retainedNodes: !11588)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{!2307, !7487}
!11587 = !DISubprogram(name: "take<&mut core::fmt::Formatter>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h377d8dd2789ef001E", scope: !2307, file: !807, line: 1840, type: !11585, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2313)
!11588 = !{!11589}
!11589 = !DILocalVariable(name: "self", arg: 1, scope: !11584, file: !807, line: 1840, type: !7487)
!11590 = !DILocation(line: 1840, column: 23, scope: !11584)
!11591 = !DILocation(line: 1842, column: 9, scope: !11584)
!11592 = !DILocation(line: 1843, column: 6, scope: !11584)
!11593 = distinct !DISubprogram(name: "take<core::option::Option<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h852553d9f7787cd7E", scope: !526, file: !807, line: 1840, type: !11594, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !532, declaration: !11596, retainedNodes: !11597)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{!526, !7470}
!11596 = !DISubprogram(name: "take<core::option::Option<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h852553d9f7787cd7E", scope: !526, file: !807, line: 1840, type: !11594, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !532)
!11597 = !{!11598}
!11598 = !DILocalVariable(name: "self", arg: 1, scope: !11593, file: !807, line: 1840, type: !7470)
!11599 = !DILocation(line: 1840, column: 23, scope: !11593)
!11600 = !DILocation(line: 1842, column: 9, scope: !11593)
!11601 = !DILocation(line: 1843, column: 6, scope: !11593)
!11602 = distinct !DISubprogram(name: "ok_or<usize, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h00599f24bf071ae6E", scope: !6624, file: !807, line: 1336, type: !11603, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11613, declaration: !11619, retainedNodes: !11620)
!11603 = !DISubroutineType(types: !11604)
!11604 = !{!11605, !6624, !87}
!11605 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11606, templateParams: !14, identifier: "cb8bdee610403431b637873069467770")
!11606 = !{!11607}
!11607 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11605, file: !2, size: 64, align: 32, elements: !11608, templateParams: !14, identifier: "761a1df84f64cafb45f585a31368d0ff", discriminator: !11618)
!11608 = !{!11609, !11614}
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !11607, file: !2, baseType: !11610, size: 64, align: 32, extraData: i8 0)
!11610 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !11605, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11611, templateParams: !11613, identifier: "d21b415b5fd5a78124b0f30c91f4e2c4")
!11611 = !{!11612}
!11612 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11610, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!11613 = !{!40, !1720}
!11614 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !11607, file: !2, baseType: !11615, size: 64, align: 32, extraData: i8 1)
!11615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !11605, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11616, templateParams: !11613, identifier: "f2614adb70cfc739de1556161a41ed82")
!11616 = !{!11617}
!11617 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11615, file: !2, baseType: !87, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!11618 = !DIDerivedType(tag: DW_TAG_member, scope: !11605, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!11619 = !DISubprogram(name: "ok_or<usize, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h00599f24bf071ae6E", scope: !6624, file: !807, line: 1336, type: !11603, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11613)
!11620 = !{!11621, !11622, !11623}
!11621 = !DILocalVariable(name: "self", arg: 1, scope: !11602, file: !807, line: 1336, type: !6624)
!11622 = !DILocalVariable(name: "err", arg: 2, scope: !11602, file: !807, line: 1336, type: !87)
!11623 = !DILocalVariable(name: "v", scope: !11624, file: !807, line: 1338, type: !9, align: 32)
!11624 = distinct !DILexicalBlock(scope: !11602, file: !807, line: 1338, column: 13)
!11625 = !DILocation(line: 1336, column: 45, scope: !11602)
!11626 = !DILocation(line: 1336, column: 51, scope: !11602)
!11627 = !DILocation(line: 1337, column: 15, scope: !11602)
!11628 = !DILocation(line: 1337, column: 9, scope: !11602)
!11629 = !DILocation(line: 1338, column: 18, scope: !11602)
!11630 = !DILocation(line: 1338, column: 18, scope: !11624)
!11631 = !DILocation(line: 1338, column: 24, scope: !11624)
!11632 = !DILocation(line: 1338, column: 28, scope: !11602)
!11633 = !DILocation(line: 1339, column: 25, scope: !11602)
!11634 = !DILocation(line: 1339, column: 21, scope: !11602)
!11635 = !DILocation(line: 1339, column: 28, scope: !11602)
!11636 = !DILocation(line: 1341, column: 5, scope: !11602)
!11637 = !DILocation(line: 1341, column: 6, scope: !11602)
!11638 = distinct !DISubprogram(name: "ok_or<u8, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h677952e0acfa512aE", scope: !365, file: !807, line: 1336, type: !11639, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11649, declaration: !11655, retainedNodes: !11656)
!11639 = !DISubroutineType(types: !11640)
!11640 = !{!11641, !365, !7}
!11641 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u8, ()>", scope: !30, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !11642, templateParams: !14, identifier: "e0d4e97480b2019caa037910631a8c68")
!11642 = !{!11643}
!11643 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11641, file: !2, size: 16, align: 8, elements: !11644, templateParams: !14, identifier: "6e7ab6737740fe68ce69ceceb51fffb", discriminator: !11654)
!11644 = !{!11645, !11650}
!11645 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !11643, file: !2, baseType: !11646, size: 16, align: 8, extraData: i8 0)
!11646 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !11641, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !11647, templateParams: !11649, identifier: "4adbc2db65d3c4727752af73846a1781")
!11647 = !{!11648}
!11648 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11646, file: !2, baseType: !13, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!11649 = !{!289, !315}
!11650 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !11643, file: !2, baseType: !11651, size: 16, align: 8, extraData: i8 1)
!11651 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !11641, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !11652, templateParams: !11649, identifier: "dc72b358cd4507785b55717445d591aa")
!11652 = !{!11653}
!11653 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11651, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!11654 = !DIDerivedType(tag: DW_TAG_member, scope: !11641, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!11655 = !DISubprogram(name: "ok_or<u8, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h677952e0acfa512aE", scope: !365, file: !807, line: 1336, type: !11639, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11649)
!11656 = !{!11657, !11658, !11659}
!11657 = !DILocalVariable(name: "self", arg: 1, scope: !11638, file: !807, line: 1336, type: !365)
!11658 = !DILocalVariable(name: "err", arg: 2, scope: !11638, file: !807, line: 1336, type: !7)
!11659 = !DILocalVariable(name: "v", scope: !11660, file: !807, line: 1338, type: !13, align: 8)
!11660 = distinct !DILexicalBlock(scope: !11638, file: !807, line: 1338, column: 13)
!11661 = !DILocation(line: 1336, column: 45, scope: !11638)
!11662 = !DILocation(line: 1336, column: 51, scope: !11638)
!11663 = !DILocation(line: 1337, column: 15, scope: !11638)
!11664 = !DILocation(line: 1337, column: 9, scope: !11638)
!11665 = !DILocation(line: 1338, column: 18, scope: !11638)
!11666 = !DILocation(line: 1338, column: 18, scope: !11660)
!11667 = !DILocation(line: 1338, column: 24, scope: !11660)
!11668 = !DILocation(line: 1338, column: 28, scope: !11638)
!11669 = !DILocation(line: 1339, column: 25, scope: !11638)
!11670 = !DILocation(line: 1339, column: 21, scope: !11638)
!11671 = !DILocation(line: 1339, column: 28, scope: !11638)
!11672 = !DILocation(line: 1341, column: 5, scope: !11638)
!11673 = !DILocation(line: 1341, column: 6, scope: !11638)
!11674 = distinct !DISubprogram(name: "ok_or<u64, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hade4cfba7b663987E", scope: !757, file: !807, line: 1336, type: !11675, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1719, declaration: !11677, retainedNodes: !11678)
!11675 = !DISubroutineType(types: !11676)
!11676 = !{!1711, !757, !87}
!11677 = !DISubprogram(name: "ok_or<u64, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hade4cfba7b663987E", scope: !757, file: !807, line: 1336, type: !11675, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1719)
!11678 = !{!11679, !11680, !11681}
!11679 = !DILocalVariable(name: "self", arg: 1, scope: !11674, file: !807, line: 1336, type: !757)
!11680 = !DILocalVariable(name: "err", arg: 2, scope: !11674, file: !807, line: 1336, type: !87)
!11681 = !DILocalVariable(name: "v", scope: !11682, file: !807, line: 1338, type: !765, align: 64)
!11682 = distinct !DILexicalBlock(scope: !11674, file: !807, line: 1338, column: 13)
!11683 = !DILocation(line: 1336, column: 45, scope: !11674)
!11684 = !DILocation(line: 1336, column: 51, scope: !11674)
!11685 = !DILocation(line: 1337, column: 15, scope: !11674)
!11686 = !DILocation(line: 1337, column: 9, scope: !11674)
!11687 = !DILocation(line: 1338, column: 18, scope: !11674)
!11688 = !DILocation(line: 1338, column: 18, scope: !11682)
!11689 = !DILocation(line: 1338, column: 24, scope: !11682)
!11690 = !DILocation(line: 1338, column: 28, scope: !11674)
!11691 = !DILocation(line: 1339, column: 25, scope: !11674)
!11692 = !DILocation(line: 1339, column: 21, scope: !11674)
!11693 = !DILocation(line: 1339, column: 28, scope: !11674)
!11694 = !DILocation(line: 1341, column: 5, scope: !11674)
!11695 = !DILocation(line: 1341, column: 6, scope: !11674)
!11696 = distinct !DISubprogram(name: "ok_or<usize, rustc_demangle::SizeLimitExhausted>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hcf2fee6d0fd8baabE", scope: !6624, file: !807, line: 1336, type: !11697, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !39, declaration: !11699, retainedNodes: !11700)
!11697 = !DISubroutineType(types: !11698)
!11698 = !{!29, !6624, !42}
!11699 = !DISubprogram(name: "ok_or<usize, rustc_demangle::SizeLimitExhausted>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hcf2fee6d0fd8baabE", scope: !6624, file: !807, line: 1336, type: !11697, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !39)
!11700 = !{!11701, !11702, !11703}
!11701 = !DILocalVariable(name: "self", arg: 1, scope: !11696, file: !807, line: 1336, type: !6624)
!11702 = !DILocalVariable(name: "err", arg: 2, scope: !11696, file: !807, line: 1336, type: !42)
!11703 = !DILocalVariable(name: "v", scope: !11704, file: !807, line: 1338, type: !9, align: 32)
!11704 = distinct !DILexicalBlock(scope: !11696, file: !807, line: 1338, column: 13)
!11705 = !DILocation(line: 1336, column: 45, scope: !11696)
!11706 = !DILocation(line: 1336, column: 51, scope: !11696)
!11707 = !DILocation(line: 1337, column: 15, scope: !11696)
!11708 = !DILocation(line: 1337, column: 9, scope: !11696)
!11709 = !DILocation(line: 1338, column: 18, scope: !11696)
!11710 = !DILocation(line: 1338, column: 18, scope: !11704)
!11711 = !DILocation(line: 1338, column: 24, scope: !11704)
!11712 = !DILocation(line: 1338, column: 28, scope: !11696)
!11713 = !DILocation(line: 1339, column: 25, scope: !11696)
!11714 = !DILocation(line: 1339, column: 21, scope: !11696)
!11715 = !DILocation(line: 1339, column: 28, scope: !11696)
!11716 = !DILocation(line: 1341, column: 5, scope: !11696)
!11717 = !DILocation(line: 1341, column: 6, scope: !11696)
!11718 = distinct !DISubprogram(name: "ok_or<&char, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hd5416943ed0b5e8cE", scope: !11119, file: !807, line: 1336, type: !11719, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11729, declaration: !11735, retainedNodes: !11736)
!11719 = !DISubroutineType(types: !11720)
!11720 = !{!11721, !11119, !7}
!11721 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&char, ()>", scope: !30, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !11722, templateParams: !14, identifier: "d083056304cf1606bad12deb4605201")
!11722 = !{!11723}
!11723 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11721, file: !2, size: 32, align: 32, elements: !11724, templateParams: !14, identifier: "adb027d78134bb3e299b4c66e77c37da", discriminator: !11734)
!11724 = !{!11725, !11730}
!11725 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !11723, file: !2, baseType: !11726, size: 32, align: 32)
!11726 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !11721, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !11727, templateParams: !11729, identifier: "458b8a547ed63cf2b6af3cf9ac5db0cd")
!11727 = !{!11728}
!11728 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11726, file: !2, baseType: !1676, size: 32, align: 32, flags: DIFlagPublic)
!11729 = !{!11126, !315}
!11730 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !11723, file: !2, baseType: !11731, size: 32, align: 32, extraData: i32 0)
!11731 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !11721, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !11732, templateParams: !11729, identifier: "15c6a7aba3e568478ac19168c512f12c")
!11732 = !{!11733}
!11733 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11731, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!11734 = !DIDerivedType(tag: DW_TAG_member, scope: !11721, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!11735 = !DISubprogram(name: "ok_or<&char, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hd5416943ed0b5e8cE", scope: !11119, file: !807, line: 1336, type: !11719, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11729)
!11736 = !{!11737, !11738, !11739}
!11737 = !DILocalVariable(name: "self", arg: 1, scope: !11718, file: !807, line: 1336, type: !11119)
!11738 = !DILocalVariable(name: "err", arg: 2, scope: !11718, file: !807, line: 1336, type: !7)
!11739 = !DILocalVariable(name: "v", scope: !11740, file: !807, line: 1338, type: !1676, align: 32)
!11740 = distinct !DILexicalBlock(scope: !11718, file: !807, line: 1338, column: 13)
!11741 = !DILocation(line: 1336, column: 45, scope: !11718)
!11742 = !DILocation(line: 1336, column: 51, scope: !11718)
!11743 = !DILocation(line: 1337, column: 15, scope: !11718)
!11744 = !DILocation(line: 1337, column: 9, scope: !11718)
!11745 = !DILocation(line: 1338, column: 18, scope: !11718)
!11746 = !DILocation(line: 1338, column: 18, scope: !11740)
!11747 = !DILocation(line: 1338, column: 24, scope: !11740)
!11748 = !DILocation(line: 1338, column: 28, scope: !11718)
!11749 = !DILocation(line: 1339, column: 25, scope: !11718)
!11750 = !DILocation(line: 1339, column: 21, scope: !11718)
!11751 = !DILocation(line: 1339, column: 28, scope: !11718)
!11752 = !DILocation(line: 1341, column: 5, scope: !11718)
!11753 = !DILocation(line: 1341, column: 6, scope: !11718)
!11754 = distinct !DISubprogram(name: "ok_or<char, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17he54f112823e43c6bE", scope: !243, file: !807, line: 1336, type: !11755, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !314, declaration: !11757, retainedNodes: !11758)
!11755 = !DISubroutineType(types: !11756)
!11756 = !{!306, !243, !7}
!11757 = !DISubprogram(name: "ok_or<char, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17he54f112823e43c6bE", scope: !243, file: !807, line: 1336, type: !11755, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !314)
!11758 = !{!11759, !11760, !11761}
!11759 = !DILocalVariable(name: "self", arg: 1, scope: !11754, file: !807, line: 1336, type: !243)
!11760 = !DILocalVariable(name: "err", arg: 2, scope: !11754, file: !807, line: 1336, type: !7)
!11761 = !DILocalVariable(name: "v", scope: !11762, file: !807, line: 1338, type: !252, align: 32)
!11762 = distinct !DILexicalBlock(scope: !11754, file: !807, line: 1338, column: 13)
!11763 = !DILocation(line: 1336, column: 45, scope: !11754)
!11764 = !DILocation(line: 1336, column: 51, scope: !11754)
!11765 = !DILocation(line: 1337, column: 15, scope: !11754)
!11766 = !DILocation(line: 1337, column: 9, scope: !11754)
!11767 = !DILocation(line: 1338, column: 18, scope: !11754)
!11768 = !DILocation(line: 1338, column: 18, scope: !11762)
!11769 = !DILocation(line: 1338, column: 24, scope: !11762)
!11770 = !DILocation(line: 1338, column: 28, scope: !11754)
!11771 = !DILocation(line: 1339, column: 25, scope: !11754)
!11772 = !DILocation(line: 1339, column: 21, scope: !11754)
!11773 = !DILocation(line: 1339, column: 28, scope: !11754)
!11774 = !DILocation(line: 1341, column: 5, scope: !11754)
!11775 = !DILocation(line: 1341, column: 6, scope: !11754)
!11776 = distinct !DISubprogram(name: "ok_or<usize, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E", scope: !6624, file: !807, line: 1336, type: !11777, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11787, declaration: !11793, retainedNodes: !11794)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{!11779, !6624, !7}
!11779 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, ()>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11780, templateParams: !14, identifier: "df35c751ae01e30578b24bfa9ae73087")
!11780 = !{!11781}
!11781 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11779, file: !2, size: 64, align: 32, elements: !11782, templateParams: !14, identifier: "cf7b28f0ef3c7dba9eaad8411442aa5b", discriminator: !11792)
!11782 = !{!11783, !11788}
!11783 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !11781, file: !2, baseType: !11784, size: 64, align: 32, extraData: i32 0)
!11784 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !11779, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11785, templateParams: !11787, identifier: "42035c4531688b5d436d5110684883d8")
!11785 = !{!11786}
!11786 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11784, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!11787 = !{!40, !315}
!11788 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !11781, file: !2, baseType: !11789, size: 64, align: 32, extraData: i32 1)
!11789 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !11779, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11790, templateParams: !11787, identifier: "d028c337760048f3342dfab41dcc00cf")
!11790 = !{!11791}
!11791 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11789, file: !2, baseType: !7, align: 8, offset: 32, flags: DIFlagPublic)
!11792 = !DIDerivedType(tag: DW_TAG_member, scope: !11779, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!11793 = !DISubprogram(name: "ok_or<usize, ()>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hee0dbe191729e158E", scope: !6624, file: !807, line: 1336, type: !11777, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11787)
!11794 = !{!11795, !11796, !11797}
!11795 = !DILocalVariable(name: "self", arg: 1, scope: !11776, file: !807, line: 1336, type: !6624)
!11796 = !DILocalVariable(name: "err", arg: 2, scope: !11776, file: !807, line: 1336, type: !7)
!11797 = !DILocalVariable(name: "v", scope: !11798, file: !807, line: 1338, type: !9, align: 32)
!11798 = distinct !DILexicalBlock(scope: !11776, file: !807, line: 1338, column: 13)
!11799 = !DILocation(line: 1336, column: 45, scope: !11776)
!11800 = !DILocation(line: 1336, column: 51, scope: !11776)
!11801 = !DILocation(line: 1337, column: 15, scope: !11776)
!11802 = !DILocation(line: 1337, column: 9, scope: !11776)
!11803 = !DILocation(line: 1338, column: 18, scope: !11776)
!11804 = !DILocation(line: 1338, column: 18, scope: !11798)
!11805 = !DILocation(line: 1338, column: 24, scope: !11798)
!11806 = !DILocation(line: 1338, column: 28, scope: !11776)
!11807 = !DILocation(line: 1339, column: 25, scope: !11776)
!11808 = !DILocation(line: 1339, column: 21, scope: !11776)
!11809 = !DILocation(line: 1339, column: 28, scope: !11776)
!11810 = !DILocation(line: 1341, column: 5, scope: !11776)
!11811 = !DILocation(line: 1341, column: 6, scope: !11776)
!11812 = distinct !DISubprogram(name: "ok_or<u8, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hef4aba97e8eb0582E", scope: !365, file: !807, line: 1336, type: !11813, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1933, declaration: !11815, retainedNodes: !11816)
!11813 = !DISubroutineType(types: !11814)
!11814 = !{!1925, !365, !87}
!11815 = !DISubprogram(name: "ok_or<u8, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hef4aba97e8eb0582E", scope: !365, file: !807, line: 1336, type: !11813, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1933)
!11816 = !{!11817, !11818, !11819}
!11817 = !DILocalVariable(name: "self", arg: 1, scope: !11812, file: !807, line: 1336, type: !365)
!11818 = !DILocalVariable(name: "err", arg: 2, scope: !11812, file: !807, line: 1336, type: !87)
!11819 = !DILocalVariable(name: "v", scope: !11820, file: !807, line: 1338, type: !13, align: 8)
!11820 = distinct !DILexicalBlock(scope: !11812, file: !807, line: 1338, column: 13)
!11821 = !DILocation(line: 1336, column: 45, scope: !11812)
!11822 = !DILocation(line: 1336, column: 51, scope: !11812)
!11823 = !DILocation(line: 1337, column: 15, scope: !11812)
!11824 = !DILocation(line: 1337, column: 9, scope: !11812)
!11825 = !DILocation(line: 1338, column: 18, scope: !11812)
!11826 = !DILocation(line: 1338, column: 18, scope: !11820)
!11827 = !DILocation(line: 1338, column: 24, scope: !11820)
!11828 = !DILocation(line: 1338, column: 28, scope: !11812)
!11829 = !DILocation(line: 1339, column: 25, scope: !11812)
!11830 = !DILocation(line: 1339, column: 21, scope: !11812)
!11831 = !DILocation(line: 1339, column: 28, scope: !11812)
!11832 = !DILocation(line: 1341, column: 5, scope: !11812)
!11833 = !DILocation(line: 1341, column: 6, scope: !11812)
!11834 = distinct !DISubprogram(name: "as_mut<core::option::Option<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_mut17h576f1aa5bf998e4eE", scope: !526, file: !807, line: 765, type: !11835, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !532, declaration: !11837, retainedNodes: !11838)
!11835 = !DISubroutineType(types: !11836)
!11836 = !{!11346, !7470}
!11837 = !DISubprogram(name: "as_mut<core::option::Option<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_mut17h576f1aa5bf998e4eE", scope: !526, file: !807, line: 765, type: !11835, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !532)
!11838 = !{!11839, !11840}
!11839 = !DILocalVariable(name: "self", arg: 1, scope: !11834, file: !807, line: 765, type: !7470)
!11840 = !DILocalVariable(name: "x", scope: !11841, file: !807, line: 767, type: !11354, align: 32)
!11841 = distinct !DILexicalBlock(scope: !11834, file: !807, line: 767, column: 13)
!11842 = !DILocation(line: 765, column: 25, scope: !11834)
!11843 = !DILocation(line: 766, column: 15, scope: !11834)
!11844 = !DILocation(line: 766, column: 9, scope: !11834)
!11845 = !DILocation(line: 767, column: 18, scope: !11834)
!11846 = !DILocation(line: 767, column: 18, scope: !11841)
!11847 = !DILocation(line: 767, column: 32, scope: !11841)
!11848 = !DILocation(line: 767, column: 38, scope: !11834)
!11849 = !DILocation(line: 768, column: 21, scope: !11834)
!11850 = !DILocation(line: 770, column: 6, scope: !11834)
!11851 = distinct !DISubprogram(name: "as_ref<u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_ref17haf6527fc23ed4c92E", scope: !365, file: !807, line: 743, type: !11852, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, declaration: !11855, retainedNodes: !11856)
!11852 = !DISubroutineType(types: !11853)
!11853 = !{!10864, !11854}
!11854 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<u8>", baseType: !365, size: 32, align: 32, dwarfAddressSpace: 0)
!11855 = !DISubprogram(name: "as_ref<u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$6as_ref17haf6527fc23ed4c92E", scope: !365, file: !807, line: 743, type: !11852, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !288)
!11856 = !{!11857, !11858}
!11857 = !DILocalVariable(name: "self", arg: 1, scope: !11851, file: !807, line: 743, type: !11854)
!11858 = !DILocalVariable(name: "x", scope: !11859, file: !807, line: 745, type: !12, align: 32)
!11859 = distinct !DILexicalBlock(scope: !11851, file: !807, line: 745, column: 13)
!11860 = !DILocation(line: 743, column: 25, scope: !11851)
!11861 = !DILocation(line: 744, column: 15, scope: !11851)
!11862 = !DILocation(line: 744, column: 9, scope: !11851)
!11863 = !DILocation(line: 745, column: 18, scope: !11851)
!11864 = !DILocation(line: 745, column: 18, scope: !11859)
!11865 = !DILocation(line: 745, column: 28, scope: !11859)
!11866 = !DILocation(line: 745, column: 34, scope: !11851)
!11867 = !DILocation(line: 746, column: 21, scope: !11851)
!11868 = !DILocation(line: 748, column: 6, scope: !11851)
!11869 = distinct !DISubprogram(name: "is_none<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17hd4d1e8335c19c611E", scope: !10864, file: !807, line: 683, type: !11870, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !409, declaration: !11873, retainedNodes: !11874)
!11870 = !DISubroutineType(types: !11871)
!11871 = !{!706, !11872}
!11872 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<&u8>", baseType: !10864, size: 32, align: 32, dwarfAddressSpace: 0)
!11873 = !DISubprogram(name: "is_none<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17hd4d1e8335c19c611E", scope: !10864, file: !807, line: 683, type: !11870, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !409)
!11874 = !{!11875}
!11875 = !DILocalVariable(name: "self", arg: 1, scope: !11869, file: !807, line: 683, type: !11872)
!11876 = !DILocation(line: 683, column: 26, scope: !11869)
!11877 = !DILocation(line: 684, column: 15, scope: !11869)
!11878 = !DILocation(line: 684, column: 9, scope: !11869)
!11879 = !DILocation(line: 685, column: 6, scope: !11869)
!11880 = distinct !DISubprogram(name: "is_none<&mut core::fmt::Formatter>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E", scope: !2307, file: !807, line: 683, type: !11881, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !2313, declaration: !11884, retainedNodes: !11885)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{!706, !11883}
!11883 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<&mut core::fmt::Formatter>", baseType: !2307, size: 32, align: 32, dwarfAddressSpace: 0)
!11884 = !DISubprogram(name: "is_none<&mut core::fmt::Formatter>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17hd5314f75b6af2396E", scope: !2307, file: !807, line: 683, type: !11881, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2313)
!11885 = !{!11886}
!11886 = !DILocalVariable(name: "self", arg: 1, scope: !11880, file: !807, line: 683, type: !11883)
!11887 = !DILocation(line: 683, column: 26, scope: !11880)
!11888 = !DILocation(line: 684, column: 15, scope: !11880)
!11889 = !DILocation(line: 684, column: 9, scope: !11880)
!11890 = !DILocation(line: 685, column: 6, scope: !11880)
!11891 = distinct !DISubprogram(name: "is_some<rustc_demangle::DemangleStyle>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h225c9ea2b583ce0fE", scope: !640, file: !807, line: 634, type: !11892, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !646, declaration: !11895, retainedNodes: !11896)
!11892 = !DISubroutineType(types: !11893)
!11893 = !{!706, !11894}
!11894 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<rustc_demangle::DemangleStyle>", baseType: !640, size: 32, align: 32, dwarfAddressSpace: 0)
!11895 = !DISubprogram(name: "is_some<rustc_demangle::DemangleStyle>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h225c9ea2b583ce0fE", scope: !640, file: !807, line: 634, type: !11892, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !646)
!11896 = !{!11897}
!11897 = !DILocalVariable(name: "self", arg: 1, scope: !11891, file: !807, line: 634, type: !11894)
!11898 = !DILocation(line: 634, column: 26, scope: !11891)
!11899 = !DILocation(line: 635, column: 18, scope: !11891)
!11900 = !DILocation(line: 437, column: 9, scope: !11901)
!11901 = !DILexicalBlockFile(scope: !11891, file: !9779, discriminator: 0)
!11902 = !DILocation(line: 636, column: 6, scope: !11891)
!11903 = distinct !DISubprogram(name: "is_some<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h8d778be9e1a85cf8E", scope: !10864, file: !807, line: 634, type: !11870, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !409, declaration: !11904, retainedNodes: !11905)
!11904 = !DISubprogram(name: "is_some<&u8>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17h8d778be9e1a85cf8E", scope: !10864, file: !807, line: 634, type: !11870, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !409)
!11905 = !{!11906}
!11906 = !DILocalVariable(name: "self", arg: 1, scope: !11903, file: !807, line: 634, type: !11872)
!11907 = !DILocation(line: 634, column: 26, scope: !11903)
!11908 = !DILocation(line: 635, column: 18, scope: !11903)
!11909 = !DILocation(line: 437, column: 9, scope: !11910)
!11910 = !DILexicalBlockFile(scope: !11903, file: !9779, discriminator: 0)
!11911 = !DILocation(line: 636, column: 6, scope: !11903)
!11912 = distinct !DISubprogram(name: "is_some<&mut core::fmt::Formatter>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17hf34a487b6900ef37E", scope: !2307, file: !807, line: 634, type: !11881, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !2313, declaration: !11913, retainedNodes: !11914)
!11913 = !DISubprogram(name: "is_some<&mut core::fmt::Formatter>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17hf34a487b6900ef37E", scope: !2307, file: !807, line: 634, type: !11881, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2313)
!11914 = !{!11915}
!11915 = !DILocalVariable(name: "self", arg: 1, scope: !11912, file: !807, line: 634, type: !11883)
!11916 = !DILocation(line: 634, column: 26, scope: !11912)
!11917 = !DILocation(line: 635, column: 18, scope: !11912)
!11918 = !DILocation(line: 437, column: 9, scope: !11919)
!11919 = !DILexicalBlockFile(scope: !11912, file: !9779, discriminator: 0)
!11920 = !DILocation(line: 636, column: 6, scope: !11912)
!11921 = distinct !DISubprogram(name: "and_then<u64, u32, rustc_demangle::v0::{impl#6}::print_const::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h53aae724df5e5824E", scope: !757, file: !807, line: 1540, type: !11922, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11925, declaration: !11924, retainedNodes: !11928)
!11922 = !DISubroutineType(types: !11923)
!11923 = !{!808, !757, !4273}
!11924 = !DISubprogram(name: "and_then<u64, u32, rustc_demangle::v0::{impl#6}::print_const::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h53aae724df5e5824E", scope: !757, file: !807, line: 1540, type: !11922, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11925)
!11925 = !{!764, !11926, !11927}
!11926 = !DITemplateTypeParameter(name: "U", type: !48)
!11927 = !DITemplateTypeParameter(name: "F", type: !4273)
!11928 = !{!11929, !11930, !11931}
!11929 = !DILocalVariable(name: "self", arg: 1, scope: !11921, file: !807, line: 1540, type: !757)
!11930 = !DILocalVariable(name: "f", arg: 2, scope: !11921, file: !807, line: 1540, type: !4273)
!11931 = !DILocalVariable(name: "x", scope: !11932, file: !807, line: 1545, type: !765, align: 64)
!11932 = distinct !DILexicalBlock(scope: !11921, file: !807, line: 1545, column: 13)
!11933 = !DILocation(line: 1540, column: 33, scope: !11921)
!11934 = !DILocation(line: 1540, column: 39, scope: !11921)
!11935 = !DILocation(line: 1544, column: 15, scope: !11921)
!11936 = !DILocation(line: 1544, column: 9, scope: !11921)
!11937 = !DILocation(line: 1545, column: 18, scope: !11921)
!11938 = !DILocation(line: 1545, column: 18, scope: !11932)
!11939 = !DILocation(line: 1545, column: 24, scope: !11932)
!11940 = !DILocation(line: 1546, column: 21, scope: !11921)
!11941 = !DILocation(line: 1548, column: 5, scope: !11921)
!11942 = !DILocation(line: 1548, column: 6, scope: !11921)
!11943 = distinct !DISubprogram(name: "and_then<u32, char, fn(u32) -> core::option::Option<char>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h577cb2e29999f52fE", scope: !808, file: !807, line: 1540, type: !11944, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11947, declaration: !11946, retainedNodes: !11949)
!11944 = !DISubroutineType(types: !11945)
!11945 = !{!243, !808, !8501}
!11946 = !DISubprogram(name: "and_then<u32, char, fn(u32) -> core::option::Option<char>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h577cb2e29999f52fE", scope: !808, file: !807, line: 1540, type: !11944, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11947)
!11947 = !{!815, !8636, !11948}
!11948 = !DITemplateTypeParameter(name: "F", type: !8501)
!11949 = !{!11950, !11951, !11952}
!11950 = !DILocalVariable(name: "self", arg: 1, scope: !11943, file: !807, line: 1540, type: !808)
!11951 = !DILocalVariable(name: "f", arg: 2, scope: !11943, file: !807, line: 1540, type: !8501)
!11952 = !DILocalVariable(name: "x", scope: !11953, file: !807, line: 1545, type: !48, align: 32)
!11953 = distinct !DILexicalBlock(scope: !11943, file: !807, line: 1545, column: 13)
!11954 = !DILocation(line: 1540, column: 33, scope: !11943)
!11955 = !DILocation(line: 1540, column: 39, scope: !11943)
!11956 = !DILocation(line: 1544, column: 15, scope: !11943)
!11957 = !DILocation(line: 1544, column: 9, scope: !11943)
!11958 = !DILocation(line: 1545, column: 18, scope: !11943)
!11959 = !DILocation(line: 1545, column: 18, scope: !11953)
!11960 = !DILocation(line: 1545, column: 24, scope: !11953)
!11961 = !DILocation(line: 1546, column: 21, scope: !11943)
!11962 = !DILocation(line: 1548, column: 5, scope: !11943)
!11963 = !DILocation(line: 1548, column: 6, scope: !11943)
!11964 = distinct !DISubprogram(name: "and_then<usize, usize, rustc_demangle::legacy::demangle::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h88ced2e301a24869E", scope: !6624, file: !807, line: 1540, type: !11965, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11968, declaration: !11967, retainedNodes: !11970)
!11965 = !DISubroutineType(types: !11966)
!11966 = !{!6624, !6624, !6636}
!11967 = !DISubprogram(name: "and_then<usize, usize, rustc_demangle::legacy::demangle::{closure_env#1}>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h88ced2e301a24869E", scope: !6624, file: !807, line: 1540, type: !11965, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11968)
!11968 = !{!40, !11426, !11969}
!11969 = !DITemplateTypeParameter(name: "F", type: !6636)
!11970 = !{!11971, !11972, !11973}
!11971 = !DILocalVariable(name: "self", arg: 1, scope: !11964, file: !807, line: 1540, type: !6624)
!11972 = !DILocalVariable(name: "f", arg: 2, scope: !11964, file: !807, line: 1540, type: !6636)
!11973 = !DILocalVariable(name: "x", scope: !11974, file: !807, line: 1545, type: !9, align: 32)
!11974 = distinct !DILexicalBlock(scope: !11964, file: !807, line: 1545, column: 13)
!11975 = !DILocation(line: 1540, column: 33, scope: !11964)
!11976 = !DILocation(line: 1540, column: 39, scope: !11964)
!11977 = !DILocation(line: 1544, column: 15, scope: !11964)
!11978 = !DILocation(line: 1544, column: 9, scope: !11964)
!11979 = !DILocation(line: 1545, column: 18, scope: !11964)
!11980 = !DILocation(line: 1545, column: 18, scope: !11974)
!11981 = !DILocation(line: 1545, column: 24, scope: !11974)
!11982 = !DILocation(line: 1546, column: 21, scope: !11964)
!11983 = !DILocation(line: 1548, column: 5, scope: !11964)
!11984 = !DILocation(line: 1548, column: 6, scope: !11964)
!11985 = distinct !DISubprogram(name: "copied<u8>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h09d9dcc23ede58a2E", scope: !10864, file: !807, line: 2051, type: !11986, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, declaration: !11988, retainedNodes: !11989)
!11986 = !DISubroutineType(types: !11987)
!11987 = !{!365, !10864}
!11988 = !DISubprogram(name: "copied<u8>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h09d9dcc23ede58a2E", scope: !10864, file: !807, line: 2051, type: !11986, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !288)
!11989 = !{!11990, !11991}
!11990 = !DILocalVariable(name: "self", arg: 1, scope: !11985, file: !807, line: 2051, type: !10864)
!11991 = !DILocalVariable(name: "v", scope: !11992, file: !807, line: 2058, type: !13, align: 8)
!11992 = distinct !DILexicalBlock(scope: !11985, file: !807, line: 2058, column: 13)
!11993 = !DILocation(line: 2051, column: 25, scope: !11985)
!11994 = !DILocation(line: 2057, column: 15, scope: !11985)
!11995 = !DILocation(line: 2057, column: 9, scope: !11985)
!11996 = !DILocation(line: 2058, column: 19, scope: !11985)
!11997 = !DILocation(line: 2058, column: 19, scope: !11992)
!11998 = !DILocation(line: 2058, column: 25, scope: !11992)
!11999 = !DILocation(line: 2058, column: 31, scope: !11985)
!12000 = !DILocation(line: 2059, column: 21, scope: !11985)
!12001 = !DILocation(line: 2061, column: 6, scope: !11985)
!12002 = distinct !DISubprogram(name: "unwrap_failed<()>", linkageName: "_ZN4core6result13unwrap_failed17h0e0ed4031502a6aaE", scope: !30, file: !6760, line: 1873, type: !12003, scopeLine: 1873, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1073, retainedNodes: !12005)
!12003 = !DISubroutineType(types: !12004)
!12004 = !{null, !659, !1099, !823}
!12005 = !{!12006, !12007}
!12006 = !DILocalVariable(name: "_msg", arg: 1, scope: !12002, file: !6760, line: 1873, type: !659)
!12007 = !DILocalVariable(name: "_error", arg: 2, scope: !12002, file: !6760, line: 1873, type: !1099)
!12008 = !DILocation(line: 1873, column: 27, scope: !12002)
!12009 = !DILocation(line: 1873, column: 39, scope: !12002)
!12010 = !DILocation(line: 1874, column: 5, scope: !12002)
!12011 = distinct !DISubprogram(name: "unwrap_failed<rustc_demangle::SizeLimitExhausted>", linkageName: "_ZN4core6result13unwrap_failed17hc345c55d2e5c7935E", scope: !30, file: !6760, line: 1873, type: !12012, scopeLine: 1873, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12018, retainedNodes: !12015)
!12012 = !DISubroutineType(types: !12013)
!12013 = !{null, !659, !12014, !823}
!12014 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::SizeLimitExhausted", baseType: !42, size: 32, align: 32, dwarfAddressSpace: 0)
!12015 = !{!12016, !12017}
!12016 = !DILocalVariable(name: "_msg", arg: 1, scope: !12011, file: !6760, line: 1873, type: !659)
!12017 = !DILocalVariable(name: "_error", arg: 2, scope: !12011, file: !6760, line: 1873, type: !12014)
!12018 = !{!12019}
!12019 = !DITemplateTypeParameter(name: "T", type: !42)
!12020 = !DILocation(line: 1873, column: 27, scope: !12011)
!12021 = !DILocation(line: 1873, column: 39, scope: !12011)
!12022 = !DILocation(line: 1874, column: 5, scope: !12011)
!12023 = distinct !DISubprogram(name: "unwrap_failed<core::num::error::ParseIntError>", linkageName: "_ZN4core6result13unwrap_failed17he611b33774b0aad1E", scope: !30, file: !6760, line: 1873, type: !12024, scopeLine: 1873, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12030, retainedNodes: !12027)
!12024 = !DISubroutineType(types: !12025)
!12025 = !{null, !659, !12026, !823}
!12026 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::num::error::ParseIntError", baseType: !7645, size: 32, align: 32, dwarfAddressSpace: 0)
!12027 = !{!12028, !12029}
!12028 = !DILocalVariable(name: "_msg", arg: 1, scope: !12023, file: !6760, line: 1873, type: !659)
!12029 = !DILocalVariable(name: "_error", arg: 2, scope: !12023, file: !6760, line: 1873, type: !12026)
!12030 = !{!12031}
!12031 = !DITemplateTypeParameter(name: "T", type: !7645)
!12032 = !DILocation(line: 1873, column: 27, scope: !12023)
!12033 = !DILocation(line: 1873, column: 39, scope: !12023)
!12034 = !DILocation(line: 1874, column: 5, scope: !12023)
!12035 = distinct !DISubprogram(name: "ok<u32, core::num::error::TryFromIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h026ca7f6f03c9c84E", scope: !12036, file: !6760, line: 708, type: !12054, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12044, declaration: !12056, retainedNodes: !12057)
!12036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<u32, core::num::error::TryFromIntError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12037, templateParams: !14, identifier: "2d6cc2235b2da2028d5c0ea7bf8b781e")
!12037 = !{!12038}
!12038 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12036, file: !2, size: 64, align: 32, elements: !12039, templateParams: !14, identifier: "7da5c89521634f64f0ffab7201084012", discriminator: !12053)
!12039 = !{!12040, !12049}
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12038, file: !2, baseType: !12041, size: 64, align: 32, extraData: i32 0)
!12041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12036, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12042, templateParams: !12044, identifier: "4637697c3e6af4e8d6e639afa1a58ca3")
!12042 = !{!12043}
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12041, file: !2, baseType: !48, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!12044 = !{!815, !12045}
!12045 = !DITemplateTypeParameter(name: "E", type: !12046)
!12046 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryFromIntError", scope: !224, file: !2, align: 8, flags: DIFlagPublic, elements: !12047, templateParams: !14, identifier: "39e6df0b3ec84652411f8f5394ee468d")
!12047 = !{!12048}
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12046, file: !2, baseType: !7, align: 8, flags: DIFlagProtected)
!12049 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12038, file: !2, baseType: !12050, size: 64, align: 32, extraData: i32 1)
!12050 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12036, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12051, templateParams: !12044, identifier: "f7e1666baedda9aebd517193cd867f06")
!12051 = !{!12052}
!12052 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12050, file: !2, baseType: !12046, align: 8, offset: 32, flags: DIFlagPublic)
!12053 = !DIDerivedType(tag: DW_TAG_member, scope: !12036, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{!808, !12036}
!12056 = !DISubprogram(name: "ok<u32, core::num::error::TryFromIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h026ca7f6f03c9c84E", scope: !12036, file: !6760, line: 708, type: !12054, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12044)
!12057 = !{!12058, !12059}
!12058 = !DILocalVariable(name: "self", arg: 1, scope: !12035, file: !6760, line: 708, type: !12036)
!12059 = !DILocalVariable(name: "x", scope: !12060, file: !6760, line: 714, type: !48, align: 32)
!12060 = distinct !DILexicalBlock(scope: !12035, file: !6760, line: 714, column: 13)
!12061 = !DILocation(line: 708, column: 21, scope: !12035)
!12062 = !DILocation(line: 713, column: 15, scope: !12035)
!12063 = !DILocation(line: 713, column: 9, scope: !12035)
!12064 = !DILocation(line: 715, column: 23, scope: !12035)
!12065 = !DILocation(line: 714, column: 16, scope: !12035)
!12066 = !DILocation(line: 714, column: 16, scope: !12060)
!12067 = !DILocation(line: 714, column: 22, scope: !12060)
!12068 = !DILocation(line: 714, column: 28, scope: !12035)
!12069 = !DILocation(line: 717, column: 5, scope: !12035)
!12070 = !DILocation(line: 717, column: 6, scope: !12035)
!12071 = distinct !DISubprogram(name: "ok<u32, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h4ef62c8721f928a9E", scope: !7635, file: !6760, line: 708, type: !12072, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7643, declaration: !12074, retainedNodes: !12075)
!12072 = !DISubroutineType(types: !12073)
!12073 = !{!808, !7635}
!12074 = !DISubprogram(name: "ok<u32, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$2ok17h4ef62c8721f928a9E", scope: !7635, file: !6760, line: 708, type: !12072, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7643)
!12075 = !{!12076, !12077}
!12076 = !DILocalVariable(name: "self", arg: 1, scope: !12071, file: !6760, line: 708, type: !7635)
!12077 = !DILocalVariable(name: "x", scope: !12078, file: !6760, line: 714, type: !48, align: 32)
!12078 = distinct !DILexicalBlock(scope: !12071, file: !6760, line: 714, column: 13)
!12079 = !DILocation(line: 708, column: 21, scope: !12071)
!12080 = !DILocation(line: 713, column: 15, scope: !12071)
!12081 = !DILocation(line: 713, column: 9, scope: !12071)
!12082 = !DILocation(line: 715, column: 23, scope: !12071)
!12083 = !DILocation(line: 714, column: 16, scope: !12071)
!12084 = !DILocation(line: 714, column: 16, scope: !12078)
!12085 = !DILocation(line: 714, column: 22, scope: !12078)
!12086 = !DILocation(line: 714, column: 28, scope: !12071)
!12087 = !DILocation(line: 717, column: 5, scope: !12071)
!12088 = !DILocation(line: 717, column: 6, scope: !12071)
!12089 = distinct !DISubprogram(name: "map<&mut rustc_demangle::v0::Parser, &mut rustc_demangle::v0::ParseError, (), rustc_demangle::v0::{impl#6}::print_type::{closure_env#2}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17h3823fcfadbccdb7eE", scope: !12090, file: !6760, line: 831, type: !12106, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12123, declaration: !12122, retainedNodes: !12125)
!12090 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&mut rustc_demangle::v0::Parser, &mut rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12091, templateParams: !14, identifier: "1185ff8f8a84f6cc7bfcd03bcb0d1ea3")
!12091 = !{!12092}
!12092 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12090, file: !2, size: 64, align: 32, elements: !12093, templateParams: !14, identifier: "97bcaf4f42661195b664b38c6e07ae99", discriminator: !12105)
!12093 = !{!12094, !12101}
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12092, file: !2, baseType: !12095, size: 64, align: 32, extraData: i32 0)
!12095 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12096, templateParams: !12098, identifier: "856da39f02fc689a86c44403ba33f711")
!12096 = !{!12097}
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12095, file: !2, baseType: !1726, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!12098 = !{!12099, !12100}
!12099 = !DITemplateTypeParameter(name: "T", type: !1726)
!12100 = !DITemplateTypeParameter(name: "E", type: !7188)
!12101 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12092, file: !2, baseType: !12102, size: 64, align: 32, extraData: i32 1)
!12102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12103, templateParams: !12098, identifier: "33c1cd7851fc7d0e632a7edbd13c9ddb")
!12103 = !{!12104}
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12102, file: !2, baseType: !7188, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!12105 = !DIDerivedType(tag: DW_TAG_member, scope: !12090, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!12106 = !DISubroutineType(types: !12107)
!12107 = !{!12108, !12090, !3643}
!12108 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), &mut rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !12109, templateParams: !14, identifier: "c51c43822d187af2fe20b3489a0c825c")
!12109 = !{!12110}
!12110 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12108, file: !2, size: 32, align: 32, elements: !12111, templateParams: !14, identifier: "3ebff1158a6c46deae8cf58e994bdf59", discriminator: !12121)
!12111 = !{!12112, !12117}
!12112 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12110, file: !2, baseType: !12113, size: 32, align: 32, extraData: i32 0)
!12113 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12108, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !12114, templateParams: !12116, identifier: "181777a02903d305a198d7f8dd2dac44")
!12114 = !{!12115}
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12113, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!12116 = !{!1074, !12100}
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12110, file: !2, baseType: !12118, size: 32, align: 32)
!12118 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12108, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !12119, templateParams: !12116, identifier: "3b68f54d310b658e945a81840ec56c3c")
!12119 = !{!12120}
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12118, file: !2, baseType: !7188, size: 32, align: 32, flags: DIFlagPublic)
!12121 = !DIDerivedType(tag: DW_TAG_member, scope: !12108, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!12122 = !DISubprogram(name: "map<&mut rustc_demangle::v0::Parser, &mut rustc_demangle::v0::ParseError, (), rustc_demangle::v0::{impl#6}::print_type::{closure_env#2}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17h3823fcfadbccdb7eE", scope: !12090, file: !6760, line: 831, type: !12106, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12123)
!12123 = !{!12099, !12100, !8589, !12124}
!12124 = !DITemplateTypeParameter(name: "F", type: !3643)
!12125 = !{!12126, !12127, !12128, !12130}
!12126 = !DILocalVariable(name: "self", arg: 1, scope: !12089, file: !6760, line: 831, type: !12090)
!12127 = !DILocalVariable(name: "op", arg: 2, scope: !12089, file: !6760, line: 831, type: !3643)
!12128 = !DILocalVariable(name: "t", scope: !12129, file: !6760, line: 836, type: !1726, align: 32)
!12129 = distinct !DILexicalBlock(scope: !12089, file: !6760, line: 836, column: 13)
!12130 = !DILocalVariable(name: "e", scope: !12131, file: !6760, line: 837, type: !7188, align: 32)
!12131 = distinct !DILexicalBlock(scope: !12089, file: !6760, line: 837, column: 13)
!12132 = !DILocation(line: 831, column: 28, scope: !12089)
!12133 = !DILocation(line: 831, column: 34, scope: !12089)
!12134 = !DILocation(line: 835, column: 15, scope: !12089)
!12135 = !DILocation(line: 835, column: 9, scope: !12089)
!12136 = !DILocation(line: 837, column: 17, scope: !12089)
!12137 = !DILocation(line: 837, column: 17, scope: !12131)
!12138 = !DILocation(line: 837, column: 23, scope: !12131)
!12139 = !DILocation(line: 837, column: 28, scope: !12089)
!12140 = !DILocation(line: 836, column: 16, scope: !12089)
!12141 = !DILocation(line: 836, column: 16, scope: !12129)
!12142 = !DILocation(line: 836, column: 25, scope: !12129)
!12143 = !DILocation(line: 836, column: 22, scope: !12129)
!12144 = !DILocation(line: 836, column: 30, scope: !12089)
!12145 = !DILocation(line: 839, column: 5, scope: !12089)
!12146 = !DILocation(line: 839, column: 6, scope: !12089)
!12147 = distinct !DISubprogram(name: "map<usize, rustc_demangle::SizeLimitExhausted, (), rustc_demangle::{impl#3}::fmt::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17h46ab6131e9df3958E", scope: !29, file: !6760, line: 831, type: !12148, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12168, declaration: !12167, retainedNodes: !12170)
!12148 = !DISubroutineType(types: !12149)
!12149 = !{!12150, !29, !12164}
!12150 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), rustc_demangle::SizeLimitExhausted>", scope: !30, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !12151, templateParams: !14, identifier: "f23178fccb600bfa43c81e7b87ca649e")
!12151 = !{!12152}
!12152 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12150, file: !2, size: 8, align: 8, elements: !12153, templateParams: !14, identifier: "2a0c706b94c657d5119e5cc35c5da525", discriminator: !12163)
!12153 = !{!12154, !12159}
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12152, file: !2, baseType: !12155, size: 8, align: 8, extraData: i8 0)
!12155 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12150, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !12156, templateParams: !12158, identifier: "cbd61d3948603654b28b306dbc92183f")
!12156 = !{!12157}
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12155, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!12158 = !{!1074, !41}
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12152, file: !2, baseType: !12160, size: 8, align: 8, extraData: i8 1)
!12160 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12150, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !12161, templateParams: !12158, identifier: "50d6354b332397f8d36f768d66cef661")
!12161 = !{!12162}
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12160, file: !2, baseType: !42, align: 8, offset: 8, flags: DIFlagPublic)
!12163 = !DIDerivedType(tag: DW_TAG_member, scope: !12150, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!12164 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !12165, file: !2, align: 8, elements: !14, identifier: "f0dc32b7bab5e0bb11d28a54dd68a438")
!12165 = !DINamespace(name: "fmt", scope: !12166)
!12166 = !DINamespace(name: "{impl#3}", scope: !26)
!12167 = !DISubprogram(name: "map<usize, rustc_demangle::SizeLimitExhausted, (), rustc_demangle::{impl#3}::fmt::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17h46ab6131e9df3958E", scope: !29, file: !6760, line: 831, type: !12148, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12168)
!12168 = !{!40, !41, !8589, !12169}
!12169 = !DITemplateTypeParameter(name: "F", type: !12164)
!12170 = !{!12171, !12172, !12173, !12175}
!12171 = !DILocalVariable(name: "self", arg: 1, scope: !12147, file: !6760, line: 831, type: !29)
!12172 = !DILocalVariable(name: "op", arg: 2, scope: !12147, file: !6760, line: 831, type: !12164)
!12173 = !DILocalVariable(name: "t", scope: !12174, file: !6760, line: 836, type: !9, align: 32)
!12174 = distinct !DILexicalBlock(scope: !12147, file: !6760, line: 836, column: 13)
!12175 = !DILocalVariable(name: "e", scope: !12176, file: !6760, line: 837, type: !42, align: 8)
!12176 = distinct !DILexicalBlock(scope: !12147, file: !6760, line: 837, column: 13)
!12177 = !DILocation(line: 831, column: 28, scope: !12147)
!12178 = !DILocation(line: 831, column: 34, scope: !12147)
!12179 = !DILocation(line: 837, column: 17, scope: !12176)
!12180 = !DILocation(line: 835, column: 15, scope: !12147)
!12181 = !DILocation(line: 835, column: 9, scope: !12147)
!12182 = !DILocation(line: 837, column: 23, scope: !12176)
!12183 = !DILocation(line: 837, column: 28, scope: !12147)
!12184 = !DILocation(line: 836, column: 16, scope: !12147)
!12185 = !DILocation(line: 836, column: 16, scope: !12174)
!12186 = !DILocation(line: 836, column: 25, scope: !12174)
!12187 = !DILocation(line: 836, column: 22, scope: !12174)
!12188 = !DILocation(line: 836, column: 30, scope: !12147)
!12189 = !DILocation(line: 839, column: 5, scope: !12147)
!12190 = !DILocation(line: 839, column: 6, scope: !12147)
!12191 = distinct !DISubprogram(name: "map<&mut rustc_demangle::v0::Parser, &mut rustc_demangle::v0::ParseError, bool, rustc_demangle::v0::{impl#6}::eat::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17hbebfe392bb886fbcE", scope: !12090, file: !6760, line: 831, type: !12192, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12209, declaration: !12208, retainedNodes: !12212)
!12192 = !DISubroutineType(types: !12193)
!12193 = !{!12194, !12090, !5767}
!12194 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<bool, &mut rustc_demangle::v0::ParseError>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12195, templateParams: !14, identifier: "7ef83aa382ef4e19a3999320f8323f38")
!12195 = !{!12196}
!12196 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12194, file: !2, size: 64, align: 32, elements: !12197, templateParams: !14, identifier: "797d7fd9181732bfc1bc542779bf3d25", discriminator: !12207)
!12197 = !{!12198, !12203}
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12196, file: !2, baseType: !12199, size: 64, align: 32, extraData: i8 0)
!12199 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12194, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12200, templateParams: !12202, identifier: "9138f1da416c37429f96ac5c0557ef27")
!12200 = !{!12201}
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12199, file: !2, baseType: !706, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!12202 = !{!5658, !12100}
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12196, file: !2, baseType: !12204, size: 64, align: 32, extraData: i8 1)
!12204 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12194, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12205, templateParams: !12202, identifier: "333dd5d2ea2d8092da66a0bdd99cfc65")
!12205 = !{!12206}
!12206 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12204, file: !2, baseType: !7188, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!12207 = !DIDerivedType(tag: DW_TAG_member, scope: !12194, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!12208 = !DISubprogram(name: "map<&mut rustc_demangle::v0::Parser, &mut rustc_demangle::v0::ParseError, bool, rustc_demangle::v0::{impl#6}::eat::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17hbebfe392bb886fbcE", scope: !12090, file: !6760, line: 831, type: !12192, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12209)
!12209 = !{!12099, !12100, !12210, !12211}
!12210 = !DITemplateTypeParameter(name: "U", type: !706)
!12211 = !DITemplateTypeParameter(name: "F", type: !5767)
!12212 = !{!12213, !12214, !12215, !12217}
!12213 = !DILocalVariable(name: "self", arg: 1, scope: !12191, file: !6760, line: 831, type: !12090)
!12214 = !DILocalVariable(name: "op", arg: 2, scope: !12191, file: !6760, line: 831, type: !5767)
!12215 = !DILocalVariable(name: "t", scope: !12216, file: !6760, line: 836, type: !1726, align: 32)
!12216 = distinct !DILexicalBlock(scope: !12191, file: !6760, line: 836, column: 13)
!12217 = !DILocalVariable(name: "e", scope: !12218, file: !6760, line: 837, type: !7188, align: 32)
!12218 = distinct !DILexicalBlock(scope: !12191, file: !6760, line: 837, column: 13)
!12219 = !DILocation(line: 831, column: 28, scope: !12191)
!12220 = !DILocation(line: 831, column: 34, scope: !12191)
!12221 = !DILocation(line: 835, column: 15, scope: !12191)
!12222 = !DILocation(line: 835, column: 9, scope: !12191)
!12223 = !DILocation(line: 837, column: 17, scope: !12191)
!12224 = !DILocation(line: 837, column: 17, scope: !12218)
!12225 = !DILocation(line: 837, column: 23, scope: !12218)
!12226 = !DILocation(line: 837, column: 28, scope: !12191)
!12227 = !DILocation(line: 836, column: 16, scope: !12191)
!12228 = !DILocation(line: 836, column: 16, scope: !12216)
!12229 = !DILocation(line: 836, column: 25, scope: !12216)
!12230 = !DILocation(line: 836, column: 22, scope: !12216)
!12231 = !DILocation(line: 836, column: 30, scope: !12191)
!12232 = !DILocation(line: 839, column: 5, scope: !12191)
!12233 = !DILocation(line: 839, column: 6, scope: !12191)
!12234 = distinct !DISubprogram(name: "is_ok<(), ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1d584052583a1287E", scope: !1323, file: !6760, line: 593, type: !12235, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1331, declaration: !12238, retainedNodes: !12239)
!12235 = !DISubroutineType(types: !12236)
!12236 = !{!706, !12237}
!12237 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<(), ()>", baseType: !1323, size: 32, align: 32, dwarfAddressSpace: 0)
!12238 = !DISubprogram(name: "is_ok<(), ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1d584052583a1287E", scope: !1323, file: !6760, line: 593, type: !12235, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1331)
!12239 = !{!12240}
!12240 = !DILocalVariable(name: "self", arg: 1, scope: !12234, file: !6760, line: 593, type: !12237)
!12241 = !DILocation(line: 593, column: 24, scope: !12234)
!12242 = !DILocation(line: 594, column: 18, scope: !12234)
!12243 = !DILocation(line: 437, column: 9, scope: !12244)
!12244 = !DILexicalBlockFile(scope: !12234, file: !9779, discriminator: 0)
!12245 = !DILocation(line: 595, column: 6, scope: !12234)
!12246 = distinct !DISubprogram(name: "is_ok<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E", scope: !2123, file: !6760, line: 593, type: !12247, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !2131, declaration: !12250, retainedNodes: !12251)
!12247 = !DISubroutineType(types: !12248)
!12248 = !{!706, !12249}
!12249 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", baseType: !2123, size: 32, align: 32, dwarfAddressSpace: 0)
!12250 = !DISubprogram(name: "is_ok<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h39ed5be9423e0af2E", scope: !2123, file: !6760, line: 593, type: !12247, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2131)
!12251 = !{!12252}
!12252 = !DILocalVariable(name: "self", arg: 1, scope: !12246, file: !6760, line: 593, type: !12249)
!12253 = !DILocation(line: 593, column: 24, scope: !12246)
!12254 = !DILocation(line: 594, column: 18, scope: !12246)
!12255 = !DILocation(line: 437, column: 9, scope: !12256)
!12256 = !DILexicalBlockFile(scope: !12246, file: !9779, discriminator: 0)
!12257 = !DILocation(line: 595, column: 6, scope: !12246)
!12258 = distinct !DISubprogram(name: "is_ok<char, ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h92d2212bb452f8fdE", scope: !306, file: !6760, line: 593, type: !12259, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !314, declaration: !12262, retainedNodes: !12263)
!12259 = !DISubroutineType(types: !12260)
!12260 = !{!706, !12261}
!12261 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<char, ()>", baseType: !306, size: 32, align: 32, dwarfAddressSpace: 0)
!12262 = !DISubprogram(name: "is_ok<char, ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h92d2212bb452f8fdE", scope: !306, file: !6760, line: 593, type: !12259, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !314)
!12263 = !{!12264}
!12264 = !DILocalVariable(name: "self", arg: 1, scope: !12258, file: !6760, line: 593, type: !12261)
!12265 = !DILocation(line: 593, column: 24, scope: !12258)
!12266 = !DILocation(line: 594, column: 18, scope: !12258)
!12267 = !DILocation(line: 437, column: 9, scope: !12268)
!12268 = !DILexicalBlockFile(scope: !12258, file: !9779, discriminator: 0)
!12269 = !DILocation(line: 595, column: 6, scope: !12258)
!12270 = distinct !DISubprogram(name: "as_mut<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17h801a85e9aa54c889E", scope: !2123, file: !6760, line: 798, type: !12271, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !2131, declaration: !12273, retainedNodes: !12274)
!12271 = !DISubroutineType(types: !12272)
!12272 = !{!12090, !7520}
!12273 = !DISubprogram(name: "as_mut<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6as_mut17h801a85e9aa54c889E", scope: !2123, file: !6760, line: 798, type: !12271, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2131)
!12274 = !{!12275, !12276, !12278}
!12275 = !DILocalVariable(name: "self", arg: 1, scope: !12270, file: !6760, line: 798, type: !7520)
!12276 = !DILocalVariable(name: "x", scope: !12277, file: !6760, line: 800, type: !1726, align: 32)
!12277 = distinct !DILexicalBlock(scope: !12270, file: !6760, line: 800, column: 13)
!12278 = !DILocalVariable(name: "x", scope: !12279, file: !6760, line: 801, type: !7188, align: 32)
!12279 = distinct !DILexicalBlock(scope: !12270, file: !6760, line: 801, column: 13)
!12280 = !DILocation(line: 798, column: 25, scope: !12270)
!12281 = !DILocation(line: 799, column: 15, scope: !12270)
!12282 = !DILocation(line: 799, column: 9, scope: !12270)
!12283 = !DILocation(line: 801, column: 17, scope: !12270)
!12284 = !DILocation(line: 801, column: 17, scope: !12279)
!12285 = !DILocation(line: 801, column: 31, scope: !12279)
!12286 = !DILocation(line: 801, column: 36, scope: !12270)
!12287 = !DILocation(line: 800, column: 16, scope: !12270)
!12288 = !DILocation(line: 800, column: 16, scope: !12277)
!12289 = !DILocation(line: 800, column: 30, scope: !12277)
!12290 = !DILocation(line: 800, column: 34, scope: !12270)
!12291 = !DILocation(line: 803, column: 6, scope: !12270)
!12292 = distinct !DISubprogram(name: "expect<(), core::fmt::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1764e143a7407ec9E", scope: !1079, file: !6760, line: 1179, type: !12293, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1087, declaration: !12295, retainedNodes: !12296)
!12293 = !DISubroutineType(types: !12294)
!12294 = !{null, !1079, !659, !823}
!12295 = !DISubprogram(name: "expect<(), core::fmt::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17h1764e143a7407ec9E", scope: !1079, file: !6760, line: 1179, type: !12293, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1087)
!12296 = !{!12297, !12298, !12299, !12301}
!12297 = !DILocalVariable(name: "self", arg: 1, scope: !12292, file: !6760, line: 1179, type: !1079)
!12298 = !DILocalVariable(name: "msg", arg: 2, scope: !12292, file: !6760, line: 1179, type: !659)
!12299 = !DILocalVariable(name: "t", scope: !12300, file: !6760, line: 1184, type: !7, align: 8)
!12300 = distinct !DILexicalBlock(scope: !12292, file: !6760, line: 1184, column: 13)
!12301 = !DILocalVariable(name: "e", scope: !12302, file: !6760, line: 1185, type: !1089, align: 8)
!12302 = distinct !DILexicalBlock(scope: !12292, file: !6760, line: 1185, column: 13)
!12303 = !DILocation(line: 1184, column: 16, scope: !12300)
!12304 = !DILocation(line: 1179, column: 19, scope: !12292)
!12305 = !DILocation(line: 1179, column: 25, scope: !12292)
!12306 = !DILocation(line: 1185, column: 17, scope: !12302)
!12307 = !DILocation(line: 1183, column: 15, scope: !12292)
!12308 = !DILocation(line: 1183, column: 9, scope: !12292)
!12309 = !DILocation(line: 1185, column: 23, scope: !12302)
!12310 = !DILocation(line: 1187, column: 6, scope: !12292)
!12311 = distinct !DISubprogram(name: "expect<(), rustc_demangle::SizeLimitExhausted>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17hff1b4d75a7d9669bE", scope: !12150, file: !6760, line: 1179, type: !12312, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12158, declaration: !12314, retainedNodes: !12315)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{null, !12150, !659, !823}
!12314 = !DISubprogram(name: "expect<(), rustc_demangle::SizeLimitExhausted>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17hff1b4d75a7d9669bE", scope: !12150, file: !6760, line: 1179, type: !12312, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12158)
!12315 = !{!12316, !12317, !12318, !12320}
!12316 = !DILocalVariable(name: "self", arg: 1, scope: !12311, file: !6760, line: 1179, type: !12150)
!12317 = !DILocalVariable(name: "msg", arg: 2, scope: !12311, file: !6760, line: 1179, type: !659)
!12318 = !DILocalVariable(name: "t", scope: !12319, file: !6760, line: 1184, type: !7, align: 8)
!12319 = distinct !DILexicalBlock(scope: !12311, file: !6760, line: 1184, column: 13)
!12320 = !DILocalVariable(name: "e", scope: !12321, file: !6760, line: 1185, type: !42, align: 8)
!12321 = distinct !DILexicalBlock(scope: !12311, file: !6760, line: 1185, column: 13)
!12322 = !DILocation(line: 1184, column: 16, scope: !12319)
!12323 = !DILocation(line: 1179, column: 19, scope: !12311)
!12324 = !DILocation(line: 1179, column: 25, scope: !12311)
!12325 = !DILocation(line: 1185, column: 17, scope: !12321)
!12326 = !DILocation(line: 1183, column: 15, scope: !12311)
!12327 = !DILocation(line: 1183, column: 9, scope: !12311)
!12328 = !DILocation(line: 1185, column: 23, scope: !12321)
!12329 = !DILocation(line: 1187, column: 6, scope: !12311)
!12330 = distinct !DISubprogram(name: "is_err<char, ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h08009cbfc403c79aE", scope: !306, file: !6760, line: 646, type: !12259, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !314, declaration: !12331, retainedNodes: !12332)
!12331 = !DISubprogram(name: "is_err<char, ()>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h08009cbfc403c79aE", scope: !306, file: !6760, line: 646, type: !12259, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !314)
!12332 = !{!12333}
!12333 = !DILocalVariable(name: "self", arg: 1, scope: !12330, file: !6760, line: 646, type: !12261)
!12334 = !DILocation(line: 646, column: 25, scope: !12330)
!12335 = !DILocation(line: 647, column: 15, scope: !12330)
!12336 = !DILocation(line: 647, column: 9, scope: !12330)
!12337 = !DILocation(line: 648, column: 6, scope: !12330)
!12338 = distinct !DISubprogram(name: "is_err<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h9015cb0eb6f1c0cbE", scope: !2123, file: !6760, line: 646, type: !12247, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !2131, declaration: !12339, retainedNodes: !12340)
!12339 = !DISubprogram(name: "is_err<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6is_err17h9015cb0eb6f1c0cbE", scope: !2123, file: !6760, line: 646, type: !12247, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2131)
!12340 = !{!12341}
!12341 = !DILocalVariable(name: "self", arg: 1, scope: !12338, file: !6760, line: 646, type: !12249)
!12342 = !DILocation(line: 646, column: 25, scope: !12338)
!12343 = !DILocation(line: 647, column: 15, scope: !12338)
!12344 = !DILocation(line: 647, column: 9, scope: !12338)
!12345 = !DILocation(line: 648, column: 6, scope: !12338)
!12346 = distinct !DISubprogram(name: "map_err<usize, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError, (), rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure#0}::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha7b751e6c61210daE", scope: !1179, file: !6760, line: 962, type: !12347, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12350, declaration: !12349, retainedNodes: !12352)
!12347 = !DISubroutineType(types: !12348)
!12348 = !{!11779, !1179, !1231}
!12349 = !DISubprogram(name: "map_err<usize, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure#0}::Utf8FirstByteError, (), rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure#0}::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha7b751e6c61210daE", scope: !1179, file: !6760, line: 962, type: !12347, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12350)
!12350 = !{!40, !1188, !6794, !12351}
!12351 = !DITemplateTypeParameter(name: "O", type: !1231)
!12352 = !{!12353, !12354, !12355, !12357}
!12353 = !DILocalVariable(name: "self", arg: 1, scope: !12346, file: !6760, line: 962, type: !1179)
!12354 = !DILocalVariable(name: "op", arg: 2, scope: !12346, file: !6760, line: 962, type: !1231)
!12355 = !DILocalVariable(name: "t", scope: !12356, file: !6760, line: 967, type: !9, align: 32)
!12356 = distinct !DILexicalBlock(scope: !12346, file: !6760, line: 967, column: 13)
!12357 = !DILocalVariable(name: "e", scope: !12358, file: !6760, line: 968, type: !78, align: 8)
!12358 = distinct !DILexicalBlock(scope: !12346, file: !6760, line: 968, column: 13)
!12359 = !DILocation(line: 962, column: 32, scope: !12346)
!12360 = !DILocation(line: 962, column: 38, scope: !12346)
!12361 = !DILocation(line: 966, column: 15, scope: !12346)
!12362 = !DILocation(line: 966, column: 9, scope: !12346)
!12363 = !DILocation(line: 968, column: 17, scope: !12346)
!12364 = !DILocation(line: 968, column: 17, scope: !12358)
!12365 = !DILocation(line: 968, column: 27, scope: !12358)
!12366 = !DILocation(line: 968, column: 23, scope: !12358)
!12367 = !DILocation(line: 968, column: 32, scope: !12346)
!12368 = !DILocation(line: 967, column: 16, scope: !12346)
!12369 = !DILocation(line: 967, column: 16, scope: !12356)
!12370 = !DILocation(line: 967, column: 22, scope: !12356)
!12371 = !DILocation(line: 967, column: 26, scope: !12346)
!12372 = !DILocation(line: 970, column: 5, scope: !12346)
!12373 = !DILocation(line: 970, column: 6, scope: !12346)
!12374 = distinct !DISubprogram(name: "map_err<&str, core::str::error::Utf8Error, (), rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure#0}::{closure_env#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hef79f9295a042496E", scope: !12375, file: !6760, line: 962, type: !12390, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12407, declaration: !12406, retainedNodes: !12409)
!12375 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, core::str::error::Utf8Error>", scope: !30, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !12376, templateParams: !14, identifier: "16d47eb1108f4bb2f87b890f87c089ca")
!12376 = !{!12377}
!12377 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12375, file: !2, size: 96, align: 32, elements: !12378, templateParams: !14, identifier: "e215ea99bf7b500ee317468b30b7a13e", discriminator: !12389)
!12378 = !{!12379, !12385}
!12379 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12377, file: !2, baseType: !12380, size: 96, align: 32, extraData: i32 0)
!12380 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12375, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !12381, templateParams: !12383, identifier: "2b4c587bace26e37ec47e9e403378f7a")
!12381 = !{!12382}
!12382 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12380, file: !2, baseType: !659, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!12383 = !{!841, !12384}
!12384 = !DITemplateTypeParameter(name: "E", type: !1217)
!12385 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12377, file: !2, baseType: !12386, size: 96, align: 32, extraData: i32 1)
!12386 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12375, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !12387, templateParams: !12383, identifier: "418f364779ff713a9eb0b237db62dfe7")
!12387 = !{!12388}
!12388 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12386, file: !2, baseType: !1217, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!12389 = !DIDerivedType(tag: DW_TAG_member, scope: !12375, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{!12392, !12375, !1216}
!12392 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&str, ()>", scope: !30, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12393, templateParams: !14, identifier: "56de50194c37e533e68816711d8b6a45")
!12393 = !{!12394}
!12394 = !DICompositeType(tag: DW_TAG_variant_part, scope: !12392, file: !2, size: 64, align: 32, elements: !12395, templateParams: !14, identifier: "15ca2c196e3bc8a6f620155bf2b132f", discriminator: !12405)
!12395 = !{!12396, !12401}
!12396 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !12394, file: !2, baseType: !12397, size: 64, align: 32)
!12397 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !12392, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12398, templateParams: !12400, identifier: "2eaccb89546d6e6a58f585d25d08afb0")
!12398 = !{!12399}
!12399 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12397, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPublic)
!12400 = !{!841, !315}
!12401 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !12394, file: !2, baseType: !12402, size: 64, align: 32, extraData: i32 0)
!12402 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !12392, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12403, templateParams: !12400, identifier: "b3688014482cee29d4314ff03904e98a")
!12403 = !{!12404}
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12402, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!12405 = !DIDerivedType(tag: DW_TAG_member, scope: !12392, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!12406 = !DISubprogram(name: "map_err<&str, core::str::error::Utf8Error, (), rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure#2}::{closure#0}::{closure_env#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hef79f9295a042496E", scope: !12375, file: !6760, line: 962, type: !12390, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12407)
!12407 = !{!841, !12384, !6794, !12408}
!12408 = !DITemplateTypeParameter(name: "O", type: !1216)
!12409 = !{!12410, !12411, !12412, !12414}
!12410 = !DILocalVariable(name: "self", arg: 1, scope: !12374, file: !6760, line: 962, type: !12375)
!12411 = !DILocalVariable(name: "op", arg: 2, scope: !12374, file: !6760, line: 962, type: !1216)
!12412 = !DILocalVariable(name: "t", scope: !12413, file: !6760, line: 967, type: !659, align: 32)
!12413 = distinct !DILexicalBlock(scope: !12374, file: !6760, line: 967, column: 13)
!12414 = !DILocalVariable(name: "e", scope: !12415, file: !6760, line: 968, type: !1217, align: 32)
!12415 = distinct !DILexicalBlock(scope: !12374, file: !6760, line: 968, column: 13)
!12416 = !DILocation(line: 962, column: 32, scope: !12374)
!12417 = !DILocation(line: 962, column: 38, scope: !12374)
!12418 = !DILocation(line: 968, column: 17, scope: !12415)
!12419 = !DILocation(line: 966, column: 15, scope: !12374)
!12420 = !DILocation(line: 966, column: 9, scope: !12374)
!12421 = !DILocation(line: 968, column: 17, scope: !12374)
!12422 = !DILocation(line: 968, column: 27, scope: !12415)
!12423 = !DILocation(line: 968, column: 23, scope: !12415)
!12424 = !DILocation(line: 968, column: 32, scope: !12374)
!12425 = !DILocation(line: 967, column: 16, scope: !12374)
!12426 = !DILocation(line: 967, column: 16, scope: !12413)
!12427 = !DILocation(line: 967, column: 22, scope: !12413)
!12428 = !DILocation(line: 967, column: 26, scope: !12374)
!12429 = !DILocation(line: 970, column: 5, scope: !12374)
!12430 = !DILocation(line: 970, column: 6, scope: !12374)
!12431 = distinct !DISubprogram(name: "and_then<usize, rustc_demangle::SizeLimitExhausted, usize, rustc_demangle::{impl#2}::write_str::{closure_env#0}<&mut core::fmt::Formatter>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h5d5c9f7ff2b56ee6E", scope: !29, file: !6760, line: 1488, type: !12432, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12440, declaration: !12439, retainedNodes: !12442)
!12432 = !DISubroutineType(types: !12433)
!12433 = !{!29, !29, !12434}
!12434 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&mut core::fmt::Formatter>", scope: !12435, file: !2, size: 32, align: 32, elements: !12437, templateParams: !14, identifier: "5a9656897f1546f3f85e8a4443f20626")
!12435 = !DINamespace(name: "write_str", scope: !12436)
!12436 = !DINamespace(name: "{impl#2}", scope: !26)
!12437 = !{!12438}
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__s", scope: !12434, file: !2, baseType: !1051, size: 32, align: 32)
!12439 = !DISubprogram(name: "and_then<usize, rustc_demangle::SizeLimitExhausted, usize, rustc_demangle::{impl#2}::write_str::{closure_env#0}<&mut core::fmt::Formatter>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$8and_then17h5d5c9f7ff2b56ee6E", scope: !29, file: !6760, line: 1488, type: !12432, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12440)
!12440 = !{!40, !41, !11426, !12441}
!12441 = !DITemplateTypeParameter(name: "F", type: !12434)
!12442 = !{!12443, !12444, !12445, !12447}
!12443 = !DILocalVariable(name: "self", arg: 1, scope: !12431, file: !6760, line: 1488, type: !29)
!12444 = !DILocalVariable(name: "op", arg: 2, scope: !12431, file: !6760, line: 1488, type: !12434)
!12445 = !DILocalVariable(name: "t", scope: !12446, file: !6760, line: 1493, type: !9, align: 32)
!12446 = distinct !DILexicalBlock(scope: !12431, file: !6760, line: 1493, column: 13)
!12447 = !DILocalVariable(name: "e", scope: !12448, file: !6760, line: 1494, type: !42, align: 8)
!12448 = distinct !DILexicalBlock(scope: !12431, file: !6760, line: 1494, column: 13)
!12449 = !DILocation(line: 1488, column: 33, scope: !12431)
!12450 = !DILocation(line: 1488, column: 39, scope: !12431)
!12451 = !DILocation(line: 1494, column: 17, scope: !12448)
!12452 = !DILocation(line: 1492, column: 15, scope: !12431)
!12453 = !DILocation(line: 1492, column: 9, scope: !12431)
!12454 = !DILocation(line: 1494, column: 23, scope: !12448)
!12455 = !DILocation(line: 1494, column: 28, scope: !12431)
!12456 = !DILocation(line: 1493, column: 16, scope: !12431)
!12457 = !DILocation(line: 1493, column: 16, scope: !12446)
!12458 = !DILocation(line: 1493, column: 22, scope: !12446)
!12459 = !DILocation(line: 1496, column: 5, scope: !12431)
!12460 = !DILocation(line: 1496, column: 6, scope: !12431)
!12461 = distinct !DISubprogram(name: "try_from", linkageName: "_ZN4core7convert3num67_$LT$impl$u20$core..convert..TryFrom$LT$u64$GT$$u20$for$u20$u32$GT$8try_from17h27b367f8cbb39d61E", scope: !12463, file: !12462, line: 305, type: !12465, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12467)
!12462 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "87ae55fcbe39b68ccbdcd352f6dbfc81")
!12463 = !DINamespace(name: "{impl#131}", scope: !12464)
!12464 = !DINamespace(name: "num", scope: !1000)
!12465 = !DISubroutineType(types: !12466)
!12466 = !{!12036, !765}
!12467 = !{!12468}
!12468 = !DILocalVariable(name: "u", arg: 1, scope: !12461, file: !12462, line: 305, type: !765)
!12469 = !DILocation(line: 305, column: 25, scope: !12461)
!12470 = !DILocation(line: 306, column: 20, scope: !12461)
!12471 = !DILocation(line: 309, column: 24, scope: !12461)
!12472 = !DILocation(line: 309, column: 21, scope: !12461)
!12473 = !DILocation(line: 306, column: 17, scope: !12461)
!12474 = !DILocation(line: 307, column: 21, scope: !12461)
!12475 = !DILocation(line: 311, column: 14, scope: !12461)
!12476 = distinct !DISubprogram(name: "lookup", linkageName: "_ZN4core7unicode12unicode_data15grapheme_extend6lookup17hc73f5eb56dcfd654E", scope: !12478, file: !12477, line: 446, type: !728, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12481)
!12477 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/unicode/unicode_data.rs", directory: "", checksumkind: CSK_MD5, checksum: "f8471147458c614569650135e63cd79a")
!12478 = !DINamespace(name: "grapheme_extend", scope: !12479)
!12479 = !DINamespace(name: "unicode_data", scope: !12480)
!12480 = !DINamespace(name: "unicode", scope: !31)
!12481 = !{!12482}
!12482 = !DILocalVariable(name: "c", arg: 1, scope: !12476, file: !12477, line: 446, type: !252)
!12483 = !DILocation(line: 446, column: 19, scope: !12476)
!12484 = !DILocation(line: 447, column: 26, scope: !12476)
!12485 = !DILocation(line: 447, column: 24, scope: !12476)
!12486 = !DILocation(line: 448, column: 9, scope: !12476)
!12487 = !DILocation(line: 295, column: 13, scope: !12488)
!12488 = !DILexicalBlockFile(scope: !12476, file: !9779, discriminator: 0)
!12489 = !DILocation(line: 448, column: 32, scope: !12476)
!12490 = !DILocation(line: 449, column: 6, scope: !12476)
!12491 = distinct !DISubprogram(name: "panic_const_div_by_zero", linkageName: "_ZN4core9panicking11panic_const23panic_const_div_by_zero17h88371ca7b8e6cda6E", scope: !12493, file: !12492, line: 173, type: !10016, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12492 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "b120da646d1a09f31201b8a519374e57")
!12493 = !DINamespace(name: "panic_const", scope: !12494)
!12494 = !DINamespace(name: "panicking", scope: !31)
!12495 = !DILocation(line: 180, column: 27, scope: !12491)
!12496 = !DILocation(line: 180, column: 17, scope: !12491)
!12497 = distinct !DISubprogram(name: "panic_const_rem_by_zero", linkageName: "_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h32431b015c39caa9E", scope: !12493, file: !12492, line: 173, type: !10016, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12498 = !DILocation(line: 180, column: 27, scope: !12497)
!12499 = !DILocation(line: 180, column: 17, scope: !12497)
!12500 = distinct !DISubprogram(name: "panic_const_add_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_add_overflow17h6ea2da92d16495cfE", scope: !12493, file: !12492, line: 173, type: !10016, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12501 = !DILocation(line: 180, column: 27, scope: !12500)
!12502 = !DILocation(line: 180, column: 17, scope: !12500)
!12503 = distinct !DISubprogram(name: "panic_const_mul_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_mul_overflow17hf9aa77bbd366077aE", scope: !12493, file: !12492, line: 173, type: !10016, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12504 = !DILocation(line: 180, column: 27, scope: !12503)
!12505 = !DILocation(line: 180, column: 17, scope: !12503)
!12506 = distinct !DISubprogram(name: "panic_const_shl_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_shl_overflow17h89fbc0eddd2d8f9cE", scope: !12493, file: !12492, line: 173, type: !10016, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12507 = !DILocation(line: 180, column: 27, scope: !12506)
!12508 = !DILocation(line: 180, column: 17, scope: !12506)
!12509 = distinct !DISubprogram(name: "panic_const_shr_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_shr_overflow17h660c746cd0aca9ccE", scope: !12493, file: !12492, line: 173, type: !10016, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12510 = !DILocation(line: 180, column: 27, scope: !12509)
!12511 = !DILocation(line: 180, column: 17, scope: !12509)
!12512 = distinct !DISubprogram(name: "panic_const_sub_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_sub_overflow17h2b5355ff875889feE", scope: !12493, file: !12492, line: 173, type: !10016, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12513 = !DILocation(line: 180, column: 27, scope: !12512)
!12514 = !DILocation(line: 180, column: 17, scope: !12512)
!12515 = distinct !DISubprogram(name: "panic_bounds_check", linkageName: "_ZN4core9panicking18panic_bounds_check17h08b811c5cd307a28E", scope: !12494, file: !12492, line: 271, type: !11247, scopeLine: 271, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12516)
!12516 = !{!12517, !12518, !12519, !12526}
!12517 = !DILocalVariable(name: "index", arg: 1, scope: !12515, file: !12492, line: 271, type: !9)
!12518 = !DILocalVariable(name: "len", arg: 2, scope: !12515, file: !12492, line: 271, type: !9)
!12519 = !DILocalVariable(name: "args", scope: !12520, file: !12492, line: 276, type: !12522, align: 32)
!12520 = !DILexicalBlockFile(scope: !12521, file: !12492, discriminator: 0)
!12521 = distinct !DILexicalBlock(scope: !12515, file: !1045, line: 62, column: 38)
!12522 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !2, size: 64, align: 32, elements: !12523, templateParams: !14, identifier: "c7a49237229ff8f5cee7a39428e0a5c9")
!12523 = !{!12524, !12525}
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12522, file: !2, baseType: !1053, size: 32, align: 32)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12522, file: !2, baseType: !1053, size: 32, align: 32, offset: 32)
!12526 = !DILocalVariable(name: "args", scope: !12527, file: !12492, line: 276, type: !12529, align: 32)
!12527 = !DILexicalBlockFile(scope: !12528, file: !12492, discriminator: 0)
!12528 = distinct !DILexicalBlock(scope: !12521, file: !1045, line: 62, column: 38)
!12529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 128, align: 32, elements: !345)
!12530 = !DILocation(line: 271, column: 23, scope: !12515)
!12531 = !DILocation(line: 271, column: 37, scope: !12515)
!12532 = !DILocation(line: 273, column: 9, scope: !12515)
!12533 = distinct !DISubprogram(name: "panic_nounwind_fmt", linkageName: "_ZN4core9panicking18panic_nounwind_fmt17ha90b816b7292deffE", scope: !12494, file: !12492, line: 95, type: !12534, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12536)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{null, !7219, !706, !823}
!12536 = !{!12537, !12538}
!12537 = !DILocalVariable(name: "fmt", arg: 1, scope: !12533, file: !12492, line: 95, type: !7219)
!12538 = !DILocalVariable(name: "force_no_backtrace", arg: 2, scope: !12533, file: !12492, line: 95, type: !706)
!12539 = !DILocation(line: 95, column: 33, scope: !12533)
!12540 = !DILocation(line: 95, column: 58, scope: !12533)
!12541 = !DILocation(line: 2435, column: 27, scope: !12542)
!12542 = !DILexicalBlockFile(scope: !12533, file: !7109, discriminator: 0)
!12543 = !DILocation(line: 2435, column: 9, scope: !12542)
!12544 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9panicking18panic_nounwind_fmt7runtime17h35f83eea345343c8E", scope: !12545, file: !7109, line: 2423, type: !12534, scopeLine: 2423, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12546)
!12545 = !DINamespace(name: "panic_nounwind_fmt", scope: !12494)
!12546 = !{!12547, !12548, !12549}
!12547 = !DILocalVariable(name: "fmt", arg: 1, scope: !12544, file: !7109, line: 2423, type: !7219)
!12548 = !DILocalVariable(name: "force_no_backtrace", arg: 2, scope: !12544, file: !7109, line: 2423, type: !706)
!12549 = !DILocalVariable(name: "pi", scope: !12550, file: !12492, line: 114, type: !12551, align: 32)
!12550 = distinct !DILexicalBlock(scope: !12544, file: !12492, line: 114, column: 13)
!12551 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicInfo", scope: !12552, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !12553, templateParams: !14, identifier: "74943ad5cfeaa8d7c3439d6f603267a6")
!12552 = !DINamespace(name: "panic_info", scope: !826)
!12553 = !{!12554, !12555, !12556, !12557}
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !12551, file: !2, baseType: !7427, size: 32, align: 32, flags: DIFlagPrivate)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !12551, file: !2, baseType: !823, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "can_unwind", scope: !12551, file: !2, baseType: !706, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "force_no_backtrace", scope: !12551, file: !2, baseType: !706, size: 8, align: 8, offset: 72, flags: DIFlagPrivate)
!12558 = !DILocation(line: 2423, column: 40, scope: !12544)
!12559 = !DILocation(line: 103, column: 17, scope: !12560)
!12560 = !DILexicalBlockFile(scope: !12544, file: !12492, discriminator: 0)
!12561 = distinct !DISubprogram(name: "panic", linkageName: "_ZN4core9panicking5panic17hb75f2f96287725c0E", scope: !12494, file: !12492, line: 138, type: !12562, scopeLine: 138, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12564)
!12562 = !DISubroutineType(types: !12563)
!12563 = !{null, !659, !823}
!12564 = !{!12565}
!12565 = !DILocalVariable(name: "expr", arg: 1, scope: !12561, file: !12492, line: 138, type: !659)
!12566 = !DILocation(line: 138, column: 20, scope: !12561)
!12567 = !DILocation(line: 150, column: 42, scope: !12561)
!12568 = !DILocation(line: 150, column: 15, scope: !12561)
!12569 = !DILocation(line: 150, column: 5, scope: !12561)
!12570 = distinct !DISubprogram(name: "panic_fmt", linkageName: "_ZN4core9panicking9panic_fmt17h589e94d79f42bca1E", scope: !12494, file: !12492, line: 60, type: !12571, scopeLine: 60, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12573)
!12571 = !DISubroutineType(types: !12572)
!12572 = !{null, !7219, !823}
!12573 = !{!12574, !12575}
!12574 = !DILocalVariable(name: "fmt", arg: 1, scope: !12570, file: !12492, line: 60, type: !7219)
!12575 = !DILocalVariable(name: "pi", scope: !12576, file: !12492, line: 72, type: !12551, align: 32)
!12576 = distinct !DILexicalBlock(scope: !12570, file: !12492, line: 72, column: 5)
!12577 = !DILocation(line: 60, column: 24, scope: !12570)
!12578 = !DILocation(line: 62, column: 9, scope: !12570)
!12579 = distinct !DISubprogram(name: "check_language_ub", linkageName: "_ZN4core9ub_checks17check_language_ub17hafead36e04106f45E", scope: !12580, file: !7058, line: 96, type: !12581, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12580 = !DINamespace(name: "ub_checks", scope: !31)
!12581 = !DISubroutineType(types: !12582)
!12582 = !{!706}
!12583 = !DILocation(line: 98, column: 5, scope: !12579)
!12584 = !DILocation(line: 2435, column: 9, scope: !12585)
!12585 = !DILexicalBlockFile(scope: !12579, file: !7109, discriminator: 0)
!12586 = !DILocation(line: 109, column: 2, scope: !12579)
!12587 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks17check_language_ub7runtime17h225159b3a0177380E", scope: !12588, file: !7109, line: 2423, type: !12581, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!12588 = !DINamespace(name: "check_language_ub", scope: !12580)
!12589 = !DILocation(line: 2425, column: 10, scope: !12587)
!12590 = distinct !DISubprogram(name: "fmt<[u8]>", linkageName: "_ZN50_$LT$$RF$mut$u20$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hffb09e4c131fa7cbE", scope: !12591, file: !7007, line: 2663, type: !7334, scopeLine: 2663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !12592)
!12591 = !DINamespace(name: "{impl#74}", scope: !52)
!12592 = !{!12593, !12594}
!12593 = !DILocalVariable(name: "self", arg: 1, scope: !12590, file: !7007, line: 2663, type: !1049)
!12594 = !DILocalVariable(name: "f", arg: 2, scope: !12590, file: !7007, line: 2663, type: !50)
!12595 = !DILocation(line: 2663, column: 20, scope: !12590)
!12596 = !DILocation(line: 2663, column: 27, scope: !12590)
!12597 = !DILocation(line: 2663, column: 71, scope: !12590)
!12598 = !DILocation(line: 2663, column: 62, scope: !12590)
!12599 = !DILocation(line: 2663, column: 84, scope: !12590)
!12600 = distinct !DISubprogram(name: "write_char<core::fmt::Formatter>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h8cd0834a61f2e052E", scope: !12601, file: !7007, line: 249, type: !12602, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12607, retainedNodes: !12604)
!12601 = !DINamespace(name: "{impl#0}", scope: !52)
!12602 = !DISubroutineType(types: !12603)
!12603 = !{!1079, !1630, !252}
!12604 = !{!12605, !12606}
!12605 = !DILocalVariable(name: "self", arg: 1, scope: !12600, file: !7007, line: 249, type: !1630)
!12606 = !DILocalVariable(name: "c", arg: 2, scope: !12600, file: !7007, line: 249, type: !252)
!12607 = !{!12608}
!12608 = !DITemplateTypeParameter(name: "W", type: !51)
!12609 = !DILocation(line: 249, column: 19, scope: !12600)
!12610 = !DILocation(line: 249, column: 30, scope: !12600)
!12611 = !DILocation(line: 250, column: 9, scope: !12600)
!12612 = !DILocation(line: 250, column: 18, scope: !12600)
!12613 = !DILocation(line: 251, column: 6, scope: !12600)
!12614 = distinct !DISubprogram(name: "write_str<core::fmt::Formatter>", linkageName: "_ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17he5558864c878b325E", scope: !12601, file: !7007, line: 245, type: !12615, scopeLine: 245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12607, retainedNodes: !12617)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{!1079, !1630, !659}
!12617 = !{!12618, !12619}
!12618 = !DILocalVariable(name: "self", arg: 1, scope: !12614, file: !7007, line: 245, type: !1630)
!12619 = !DILocalVariable(name: "s", arg: 2, scope: !12614, file: !7007, line: 245, type: !659)
!12620 = !DILocation(line: 245, column: 18, scope: !12614)
!12621 = !DILocation(line: 245, column: 29, scope: !12614)
!12622 = !DILocation(line: 246, column: 9, scope: !12614)
!12623 = !DILocation(line: 246, column: 18, scope: !12614)
!12624 = !DILocation(line: 247, column: 6, scope: !12614)
!12625 = distinct !DISubprogram(name: "is_prefix_of", linkageName: "_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h01fd2c4c1501c2c1E", scope: !12626, file: !7077, line: 594, type: !12627, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12629)
!12626 = !DINamespace(name: "{impl#4}", scope: !3440)
!12627 = !DISubroutineType(types: !12628)
!12628 = !{!706, !252, !659}
!12629 = !{!12630, !12631}
!12630 = !DILocalVariable(name: "self", arg: 1, scope: !12625, file: !7077, line: 594, type: !252)
!12631 = !DILocalVariable(name: "haystack", arg: 2, scope: !12625, file: !7077, line: 594, type: !659)
!12632 = !DILocation(line: 594, column: 21, scope: !12625)
!12633 = !DILocation(line: 594, column: 27, scope: !12625)
!12634 = !DILocation(line: 595, column: 31, scope: !12625)
!12635 = !DILocation(line: 595, column: 14, scope: !12625)
!12636 = !DILocation(line: 595, column: 41, scope: !12625)
!12637 = !DILocation(line: 596, column: 6, scope: !12625)
!12638 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h6479824b8c3f3205E", scope: !12626, file: !7077, line: 565, type: !12639, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12641)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{!3439, !252, !659}
!12641 = !{!12642, !12643, !12644, !12646}
!12642 = !DILocalVariable(name: "self", arg: 1, scope: !12638, file: !7077, line: 565, type: !252)
!12643 = !DILocalVariable(name: "haystack", arg: 2, scope: !12638, file: !7077, line: 565, type: !659)
!12644 = !DILocalVariable(name: "utf8_encoded", scope: !12645, file: !7077, line: 566, type: !3448, align: 8)
!12645 = distinct !DILexicalBlock(scope: !12638, file: !7077, line: 566, column: 9)
!12646 = !DILocalVariable(name: "utf8_size", scope: !12647, file: !7077, line: 567, type: !13, align: 8)
!12647 = distinct !DILexicalBlock(scope: !12645, file: !7077, line: 567, column: 9)
!12648 = !DILocation(line: 565, column: 26, scope: !12638)
!12649 = !DILocation(line: 565, column: 32, scope: !12638)
!12650 = !DILocation(line: 566, column: 13, scope: !12645)
!12651 = !DILocation(line: 566, column: 32, scope: !12638)
!12652 = !DILocation(line: 568, column: 14, scope: !12645)
!12653 = !DILocation(line: 569, column: 14, scope: !12645)
!12654 = !DILocation(line: 570, column: 14, scope: !12645)
!12655 = !DILocation(line: 571, column: 14, scope: !12645)
!12656 = !DILocation(line: 567, column: 13, scope: !12647)
!12657 = !DILocation(line: 576, column: 35, scope: !12647)
!12658 = !DILocation(line: 579, column: 13, scope: !12647)
!12659 = !DILocation(line: 573, column: 9, scope: !12647)
!12660 = !DILocation(line: 581, column: 6, scope: !12638)
!12661 = distinct !DISubprogram(name: "matches<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", linkageName: "_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17h532dcb3b1a459bc2E", scope: !12662, file: !7077, line: 639, type: !12663, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7098, retainedNodes: !12666)
!12662 = !DINamespace(name: "{impl#5}", scope: !3440)
!12663 = !DISubroutineType(types: !12664)
!12664 = !{!706, !12665, !252}
!12665 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}", baseType: !7087, size: 32, align: 32, dwarfAddressSpace: 0)
!12666 = !{!12667, !12668}
!12667 = !DILocalVariable(name: "self", arg: 1, scope: !12661, file: !7077, line: 639, type: !12665)
!12668 = !DILocalVariable(name: "c", arg: 2, scope: !12661, file: !7077, line: 639, type: !252)
!12669 = !DILocation(line: 639, column: 16, scope: !12661)
!12670 = !DILocation(line: 639, column: 27, scope: !12661)
!12671 = !DILocation(line: 640, column: 9, scope: !12661)
!12672 = !DILocation(line: 641, column: 6, scope: !12661)
!12673 = distinct !DISubprogram(name: "is_prefix_of", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h33657c4616047b53E", scope: !12674, file: !7077, line: 982, type: !8806, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12675)
!12674 = !DINamespace(name: "{impl#31}", scope: !3440)
!12675 = !{!12676, !12677}
!12676 = !DILocalVariable(name: "self", arg: 1, scope: !12673, file: !7077, line: 982, type: !659)
!12677 = !DILocalVariable(name: "haystack", arg: 2, scope: !12673, file: !7077, line: 982, type: !659)
!12678 = !DILocation(line: 982, column: 21, scope: !12673)
!12679 = !DILocation(line: 982, column: 27, scope: !12673)
!12680 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 983, column: 18, scope: !12673)
!12682 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !12681)
!12683 = !DILocation(line: 983, column: 18, scope: !12673)
!12684 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !12685)
!12685 = distinct !DILocation(line: 983, column: 46, scope: !12673)
!12686 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !12685)
!12687 = !DILocation(line: 983, column: 46, scope: !12673)
!12688 = !DILocation(line: 983, column: 29, scope: !12673)
!12689 = !DILocation(line: 984, column: 6, scope: !12673)
!12690 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17h95307f884c112c16E", scope: !12674, file: !7077, line: 976, type: !12691, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12693)
!12691 = !DISubroutineType(types: !12692)
!12692 = !{!8858, !659, !659}
!12693 = !{!12694, !12695}
!12694 = !DILocalVariable(name: "self", arg: 1, scope: !12690, file: !7077, line: 976, type: !659)
!12695 = !DILocalVariable(name: "haystack", arg: 2, scope: !12690, file: !7077, line: 976, type: !659)
!12696 = !DILocation(line: 976, column: 22, scope: !12690)
!12697 = !DILocation(line: 976, column: 28, scope: !12690)
!12698 = !DILocation(line: 977, column: 9, scope: !12690)
!12699 = !DILocation(line: 978, column: 6, scope: !12690)
!12700 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN61_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Debug$GT$3fmt17h01a431cad0884dfaE", scope: !12701, file: !626, line: 349, type: !12702, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12704)
!12701 = !DINamespace(name: "{impl#4}", scope: !26)
!12702 = !DISubroutineType(types: !12703)
!12703 = !{!1079, !6651, !50}
!12704 = !{!12705, !12706}
!12705 = !DILocalVariable(name: "self", arg: 1, scope: !12700, file: !626, line: 349, type: !6651)
!12706 = !DILocalVariable(name: "f", arg: 2, scope: !12700, file: !626, line: 349, type: !50)
!12707 = !DILocation(line: 349, column: 12, scope: !12700)
!12708 = !DILocation(line: 349, column: 19, scope: !12700)
!12709 = !DILocation(line: 350, column: 9, scope: !12700)
!12710 = !DILocation(line: 351, column: 6, scope: !12700)
!12711 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>, fn(core::result::Result<char, ()>) -> char>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h1f5cac5415d8f7fdE", scope: !12713, file: !12712, line: 319, type: !12715, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12719, retainedNodes: !12717)
!12712 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "06509ee86e4371045220ddb87ad17093")
!12713 = !DINamespace(name: "{impl#0}", scope: !12714)
!12714 = !DINamespace(name: "collect", scope: !446)
!12715 = !DISubroutineType(types: !12716)
!12716 = !{!259, !259}
!12717 = !{!12718}
!12718 = !DILocalVariable(name: "self", arg: 1, scope: !12711, file: !12712, line: 319, type: !259)
!12719 = !{!12720}
!12720 = !DITemplateTypeParameter(name: "I", type: !259)
!12721 = !DILocation(line: 319, column: 18, scope: !12711)
!12722 = !DILocation(line: 320, column: 9, scope: !12711)
!12723 = !DILocation(line: 321, column: 6, scope: !12711)
!12724 = distinct !DISubprogram(name: "into_iter<core::iter::sources::once::Once<char>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h987fd98d61476583E", scope: !12713, file: !12712, line: 319, type: !12725, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12729, retainedNodes: !12727)
!12725 = !DISubroutineType(types: !12726)
!12726 = !{!5446, !5446}
!12727 = !{!12728}
!12728 = !DILocalVariable(name: "self", arg: 1, scope: !12724, file: !12712, line: 319, type: !5446)
!12729 = !{!12730}
!12730 = !DITemplateTypeParameter(name: "I", type: !5446)
!12731 = !DILocation(line: 319, column: 18, scope: !12724)
!12732 = !DILocation(line: 321, column: 6, scope: !12724)
!12733 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<u8>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf3ad8c8bcc5e89e6E", scope: !12713, file: !12712, line: 319, type: !12734, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !411, retainedNodes: !12736)
!12734 = !DISubroutineType(types: !12735)
!12735 = !{!396, !396}
!12736 = !{!12737}
!12737 = !DILocalVariable(name: "self", arg: 1, scope: !12733, file: !12712, line: 319, type: !396)
!12738 = !DILocation(line: 319, column: 18, scope: !12733)
!12739 = !DILocation(line: 321, column: 6, scope: !12733)
!12740 = distinct !DISubprogram(name: "into_iter<core::str::iter::Split<char>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf8b66e604df8019dE", scope: !12713, file: !12712, line: 319, type: !12741, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12745, retainedNodes: !12743)
!12741 = !DISubroutineType(types: !12742)
!12742 = !{!3431, !3431}
!12743 = !{!12744}
!12744 = !DILocalVariable(name: "self", arg: 1, scope: !12740, file: !12712, line: 319, type: !3431)
!12745 = !{!12746}
!12746 = !DITemplateTypeParameter(name: "I", type: !3431)
!12747 = !DILocation(line: 319, column: 18, scope: !12740)
!12748 = !DILocation(line: 320, column: 9, scope: !12740)
!12749 = !DILocation(line: 321, column: 6, scope: !12740)
!12750 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<u64>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hfb0e42ba33413543E", scope: !12713, file: !12712, line: 319, type: !12751, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12755, retainedNodes: !12753)
!12751 = !DISubroutineType(types: !12752)
!12752 = !{!5915, !5915}
!12753 = !{!12754}
!12754 = !DILocalVariable(name: "self", arg: 1, scope: !12750, file: !12712, line: 319, type: !5915)
!12755 = !{!12756}
!12756 = !DITemplateTypeParameter(name: "I", type: !5915)
!12757 = !DILocation(line: 319, column: 18, scope: !12750)
!12758 = !DILocation(line: 320, column: 9, scope: !12750)
!12759 = !DILocation(line: 321, column: 6, scope: !12750)
!12760 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17ha772d1b5471cef65E", scope: !12166, file: !626, line: 314, type: !12702, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12761)
!12761 = !{!12762, !12763, !12764, !12766, !12768, !12770, !12772, !12774, !12776, !12782, !12788, !12791, !12794, !12796, !12798, !12800, !12802}
!12762 = !DILocalVariable(name: "self", arg: 1, scope: !12760, file: !626, line: 314, type: !6651)
!12763 = !DILocalVariable(name: "f", arg: 2, scope: !12760, file: !626, line: 314, type: !50)
!12764 = !DILocalVariable(name: "residual", scope: !12765, file: !626, line: 316, type: !2336, align: 8)
!12765 = distinct !DILexicalBlock(scope: !12760, file: !626, line: 316, column: 47)
!12766 = !DILocalVariable(name: "val", scope: !12767, file: !626, line: 316, type: !7, align: 8)
!12767 = distinct !DILexicalBlock(scope: !12760, file: !626, line: 316, column: 21)
!12768 = !DILocalVariable(name: "d", scope: !12769, file: !626, line: 317, type: !7025, align: 32)
!12769 = distinct !DILexicalBlock(scope: !12760, file: !626, line: 317, column: 13)
!12770 = !DILocalVariable(name: "alternate", scope: !12771, file: !626, line: 318, type: !706, align: 8)
!12771 = distinct !DILexicalBlock(scope: !12769, file: !626, line: 318, column: 17)
!12772 = !DILocalVariable(name: "size_limited_fmt", scope: !12773, file: !626, line: 319, type: !25, align: 32)
!12773 = distinct !DILexicalBlock(scope: !12771, file: !626, line: 319, column: 17)
!12774 = !DILocalVariable(name: "fmt_result", scope: !12775, file: !626, line: 323, type: !1079, align: 8)
!12775 = distinct !DILexicalBlock(scope: !12773, file: !626, line: 323, column: 17)
!12776 = !DILocalVariable(name: "args", scope: !12777, file: !626, line: 324, type: !12779, align: 32)
!12777 = !DILexicalBlockFile(scope: !12778, file: !626, discriminator: 0)
!12778 = distinct !DILexicalBlock(scope: !12773, file: !9779, line: 612, column: 24)
!12779 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&&rustc_demangle::DemangleStyle)", file: !2, size: 32, align: 32, elements: !12780, templateParams: !14, identifier: "d51cf78b2eacc7d743cb28de8959b4c2")
!12780 = !{!12781}
!12781 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12779, file: !2, baseType: !7024, size: 32, align: 32)
!12782 = !DILocalVariable(name: "args", scope: !12783, file: !626, line: 324, type: !12785, align: 32)
!12783 = !DILexicalBlockFile(scope: !12784, file: !626, discriminator: 0)
!12784 = distinct !DILexicalBlock(scope: !12778, file: !9779, line: 612, column: 24)
!12785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 64, align: 32, elements: !12786)
!12786 = !{!12787}
!12787 = !DISubrange(count: 1, lowerBound: 0)
!12788 = !DILocalVariable(name: "args", scope: !12789, file: !626, line: 326, type: !12779, align: 32)
!12789 = !DILexicalBlockFile(scope: !12790, file: !626, discriminator: 0)
!12790 = distinct !DILexicalBlock(scope: !12773, file: !9779, line: 612, column: 24)
!12791 = !DILocalVariable(name: "args", scope: !12792, file: !626, line: 326, type: !12785, align: 32)
!12792 = !DILexicalBlockFile(scope: !12793, file: !626, discriminator: 0)
!12793 = distinct !DILexicalBlock(scope: !12790, file: !9779, line: 612, column: 24)
!12794 = !DILocalVariable(name: "size_limit_result", scope: !12795, file: !626, line: 328, type: !12150, align: 8)
!12795 = distinct !DILexicalBlock(scope: !12775, file: !626, line: 328, column: 17)
!12796 = !DILocalVariable(name: "residual", scope: !12797, file: !626, line: 334, type: !2336, align: 8)
!12797 = distinct !DILexicalBlock(scope: !12795, file: !626, line: 334, column: 93)
!12798 = !DILocalVariable(name: "val", scope: !12799, file: !626, line: 334, type: !7, align: 8)
!12799 = distinct !DILexicalBlock(scope: !12795, file: !626, line: 334, column: 58)
!12800 = !DILocalVariable(name: "residual", scope: !12801, file: !626, line: 337, type: !2336, align: 8)
!12801 = distinct !DILexicalBlock(scope: !12795, file: !626, line: 337, column: 35)
!12802 = !DILocalVariable(name: "val", scope: !12803, file: !626, line: 337, type: !7, align: 8)
!12803 = distinct !DILexicalBlock(scope: !12795, file: !626, line: 337, column: 25)
!12804 = !DILocation(line: 314, column: 12, scope: !12760)
!12805 = !DILocation(line: 314, column: 19, scope: !12760)
!12806 = !DILocation(line: 317, column: 18, scope: !12769)
!12807 = !DILocation(line: 319, column: 21, scope: !12773)
!12808 = !DILocation(line: 323, column: 21, scope: !12775)
!12809 = !DILocation(line: 324, column: 21, scope: !12783)
!12810 = !DILocation(line: 326, column: 21, scope: !12792)
!12811 = !DILocation(line: 316, column: 47, scope: !12765)
!12812 = !DILocation(line: 316, column: 21, scope: !12767)
!12813 = !DILocation(line: 334, column: 93, scope: !12797)
!12814 = !DILocation(line: 334, column: 58, scope: !12799)
!12815 = !DILocation(line: 337, column: 35, scope: !12801)
!12816 = !DILocation(line: 337, column: 25, scope: !12803)
!12817 = !DILocation(line: 315, column: 15, scope: !12760)
!12818 = !DILocation(line: 315, column: 9, scope: !12760)
!12819 = !DILocation(line: 317, column: 18, scope: !12760)
!12820 = !DILocation(line: 318, column: 35, scope: !12769)
!12821 = !DILocation(line: 318, column: 21, scope: !12771)
!12822 = !DILocation(line: 319, column: 44, scope: !12771)
!12823 = !DILocation(line: 323, column: 37, scope: !12773)
!12824 = !DILocation(line: 316, column: 33, scope: !12760)
!12825 = !DILocation(line: 316, column: 23, scope: !12760)
!12826 = !DILocation(line: 316, column: 21, scope: !12760)
!12827 = !DILocation(line: 316, column: 21, scope: !12765)
!12828 = !DILocation(line: 344, column: 21, scope: !12760)
!12829 = !DILocation(line: 344, column: 11, scope: !12760)
!12830 = !DILocation(line: 345, column: 6, scope: !12760)
!12831 = !DILocation(line: 326, column: 21, scope: !12773)
!12832 = !DILocation(line: 326, column: 21, scope: !12789)
!12833 = !DILocation(line: 324, column: 21, scope: !12773)
!12834 = !DILocation(line: 324, column: 21, scope: !12777)
!12835 = !DILocation(line: 328, column: 41, scope: !12775)
!12836 = !DILocation(line: 328, column: 68, scope: !12775)
!12837 = !DILocation(line: 328, column: 21, scope: !12795)
!12838 = !DILocation(line: 333, column: 24, scope: !12795)
!12839 = !DILocation(line: 333, column: 23, scope: !12795)
!12840 = !DILocation(line: 333, column: 17, scope: !12795)
!12841 = !DILocation(line: 337, column: 25, scope: !12795)
!12842 = !DILocation(line: 334, column: 60, scope: !12795)
!12843 = !DILocation(line: 334, column: 58, scope: !12795)
!12844 = !DILocation(line: 334, column: 58, scope: !12797)
!12845 = !DILocation(line: 337, column: 25, scope: !12801)
!12846 = !DILocation(line: 339, column: 30, scope: !12795)
!12847 = !DILocation(line: 0, scope: !12760)
!12848 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN63_$LT$rustc_demangle..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h7b51386fbdadce49E", scope: !12165, file: !626, line: 328, type: !12849, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12851)
!12849 = !DISubroutineType(types: !12850)
!12850 = !{null, !12164, !9}
!12851 = !{!12852, !12853}
!12852 = !DILocalVariable(arg: 1, scope: !12848, file: !626, line: 328, type: !12164)
!12853 = !DILocalVariable(arg: 2, scope: !12848, file: !626, line: 328, type: !9)
!12854 = !DILocation(line: 328, column: 72, scope: !12848)
!12855 = !DILocation(line: 328, column: 73, scope: !12848)
!12856 = !DILocation(line: 328, column: 78, scope: !12848)
!12857 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt17h20c03d2c4c158525E", scope: !1627, file: !751, line: 241, type: !12858, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12860)
!12858 = !DISubroutineType(types: !12859)
!12859 = !{!1079, !1337, !50}
!12860 = !{!12861, !12862}
!12861 = !DILocalVariable(name: "self", arg: 1, scope: !12857, file: !751, line: 241, type: !1337)
!12862 = !DILocalVariable(name: "f", arg: 2, scope: !12857, file: !751, line: 241, type: !50)
!12863 = !DILocation(line: 241, column: 12, scope: !12857)
!12864 = !DILocation(line: 241, column: 19, scope: !12857)
!12865 = !DILocation(line: 242, column: 9, scope: !12857)
!12866 = !DILocation(line: 242, column: 14, scope: !12857)
!12867 = !DILocation(line: 248, column: 10, scope: !12857)
!12868 = !DILocation(line: 265, column: 6, scope: !12857)
!12869 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hb52346c60284c7a1E", scope: !1626, file: !751, line: 248, type: !12870, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12872)
!12870 = !DISubroutineType(types: !12871)
!12871 = !{!1079, !11321}
!12872 = !{!12873, !12874, !12875, !12877, !12879, !12881, !12883, !12885, !12887, !12889}
!12873 = !DILocalVariable(name: "self", scope: !12869, file: !751, line: 241, type: !1337, align: 32)
!12874 = !DILocalVariable(name: "f", scope: !12869, file: !751, line: 241, type: !50, align: 32)
!12875 = !DILocalVariable(name: "residual", scope: !12876, file: !751, line: 250, type: !2336, align: 8)
!12876 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 250, column: 41)
!12877 = !DILocalVariable(name: "val", scope: !12878, file: !751, line: 250, type: !7, align: 8)
!12878 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 250, column: 17)
!12879 = !DILocalVariable(name: "residual", scope: !12880, file: !751, line: 255, type: !2336, align: 8)
!12880 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 255, column: 44)
!12881 = !DILocalVariable(name: "val", scope: !12882, file: !751, line: 255, type: !7, align: 8)
!12882 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 255, column: 21)
!12883 = !DILocalVariable(name: "residual", scope: !12884, file: !751, line: 256, type: !2336, align: 8)
!12884 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 256, column: 37)
!12885 = !DILocalVariable(name: "val", scope: !12886, file: !751, line: 256, type: !7, align: 8)
!12886 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 256, column: 21)
!12887 = !DILocalVariable(name: "residual", scope: !12888, file: !751, line: 258, type: !2336, align: 8)
!12888 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 258, column: 43)
!12889 = !DILocalVariable(name: "val", scope: !12890, file: !751, line: 258, type: !7, align: 8)
!12890 = distinct !DILexicalBlock(scope: !12869, file: !751, line: 258, column: 17)
!12891 = !DILocation(line: 241, column: 13, scope: !12869)
!12892 = !DILocation(line: 241, column: 19, scope: !12869)
!12893 = !DILocation(line: 250, column: 41, scope: !12876)
!12894 = !DILocation(line: 250, column: 17, scope: !12878)
!12895 = !DILocation(line: 255, column: 44, scope: !12880)
!12896 = !DILocation(line: 255, column: 21, scope: !12882)
!12897 = !DILocation(line: 256, column: 37, scope: !12884)
!12898 = !DILocation(line: 256, column: 21, scope: !12886)
!12899 = !DILocation(line: 258, column: 43, scope: !12888)
!12900 = !DILocation(line: 258, column: 17, scope: !12890)
!12901 = !DILocation(line: 249, column: 17, scope: !12869)
!12902 = !DILocation(line: 249, column: 31, scope: !12869)
!12903 = !DILocation(line: 250, column: 17, scope: !12869)
!12904 = !DILocation(line: 250, column: 19, scope: !12869)
!12905 = !DILocation(line: 262, column: 17, scope: !12869)
!12906 = !DILocation(line: 262, column: 29, scope: !12869)
!12907 = !DILocation(line: 262, column: 19, scope: !12869)
!12908 = !DILocation(line: 250, column: 17, scope: !12876)
!12909 = !DILocation(line: 254, column: 21, scope: !12869)
!12910 = !DILocation(line: 254, column: 32, scope: !12869)
!12911 = !DILocation(line: 255, column: 21, scope: !12869)
!12912 = !DILocation(line: 255, column: 33, scope: !12869)
!12913 = !DILocation(line: 255, column: 23, scope: !12869)
!12914 = !DILocation(line: 258, column: 17, scope: !12869)
!12915 = !DILocation(line: 258, column: 29, scope: !12869)
!12916 = !DILocation(line: 258, column: 19, scope: !12869)
!12917 = !DILocation(line: 255, column: 21, scope: !12880)
!12918 = !DILocation(line: 256, column: 21, scope: !12869)
!12919 = !DILocation(line: 256, column: 23, scope: !12869)
!12920 = !DILocation(line: 256, column: 21, scope: !12884)
!12921 = !DILocation(line: 264, column: 10, scope: !12869)
!12922 = !DILocation(line: 258, column: 17, scope: !12888)
!12923 = !DILocation(line: 260, column: 17, scope: !12869)
!12924 = !DILocation(line: 260, column: 19, scope: !12869)
!12925 = !DILocation(line: 0, scope: !12926)
!12926 = !DILexicalBlockFile(scope: !12869, file: !626, discriminator: 0)
!12927 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN64_$LT$rustc_demangle..v0..Ident$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17hf073745dc36faa3aE", scope: !1626, file: !751, line: 242, type: !12928, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12930)
!12928 = !DISubroutineType(types: !12929)
!12929 = !{!1079, !1625, !8702}
!12930 = !{!12931, !12932, !12933, !12935, !12937, !12939}
!12931 = !DILocalVariable(name: "chars", arg: 2, scope: !12927, file: !751, line: 242, type: !8702)
!12932 = !DILocalVariable(name: "f", scope: !12927, file: !751, line: 241, type: !50, align: 32)
!12933 = !DILocalVariable(name: "iter", scope: !12934, file: !751, line: 243, type: !11144, align: 32)
!12934 = distinct !DILexicalBlock(scope: !12927, file: !751, line: 243, column: 13)
!12935 = !DILocalVariable(name: "c", scope: !12936, file: !751, line: 243, type: !252, align: 32)
!12936 = distinct !DILexicalBlock(scope: !12934, file: !751, line: 243, column: 29)
!12937 = !DILocalVariable(name: "residual", scope: !12938, file: !751, line: 244, type: !2336, align: 8)
!12938 = distinct !DILexicalBlock(scope: !12936, file: !751, line: 244, column: 25)
!12939 = !DILocalVariable(name: "val", scope: !12940, file: !751, line: 244, type: !7, align: 8)
!12940 = distinct !DILexicalBlock(scope: !12936, file: !751, line: 244, column: 17)
!12941 = !DILocation(line: 241, column: 19, scope: !12927)
!12942 = !DILocation(line: 242, column: 41, scope: !12927)
!12943 = !DILocation(line: 243, column: 23, scope: !12934)
!12944 = !DILocation(line: 243, column: 18, scope: !12936)
!12945 = !DILocation(line: 244, column: 25, scope: !12938)
!12946 = !DILocation(line: 244, column: 17, scope: !12940)
!12947 = !DILocation(line: 243, column: 23, scope: !12927)
!12948 = !DILocation(line: 243, column: 13, scope: !12934)
!12949 = !DILocation(line: 243, column: 18, scope: !12934)
!12950 = !DILocation(line: 244, column: 23, scope: !12936)
!12951 = !DILocation(line: 244, column: 19, scope: !12936)
!12952 = !DILocation(line: 244, column: 17, scope: !12936)
!12953 = !DILocation(line: 246, column: 13, scope: !12927)
!12954 = !DILocation(line: 247, column: 10, scope: !12927)
!12955 = !DILocation(line: 244, column: 17, scope: !12938)
!12956 = !DILocation(line: 0, scope: !12957)
!12957 = !DILexicalBlockFile(scope: !12927, file: !626, discriminator: 0)
!12958 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$rustc_demangle..v0..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17h39c2b6a802f41d5fE", scope: !12959, file: !751, line: 94, type: !12960, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12963)
!12959 = !DINamespace(name: "{impl#0}", scope: !83)
!12960 = !DISubroutineType(types: !12961)
!12961 = !{!1079, !12962, !50}
!12962 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::v0::Demangle", baseType: !668, size: 32, align: 32, dwarfAddressSpace: 0)
!12963 = !{!12964, !12965, !12966}
!12964 = !DILocalVariable(name: "self", arg: 1, scope: !12958, file: !751, line: 94, type: !12962)
!12965 = !DILocalVariable(name: "f", arg: 2, scope: !12958, file: !751, line: 94, type: !50)
!12966 = !DILocalVariable(name: "printer", scope: !12967, file: !751, line: 95, type: !2303, align: 32)
!12967 = distinct !DILexicalBlock(scope: !12958, file: !751, line: 95, column: 9)
!12968 = !DILocation(line: 94, column: 12, scope: !12958)
!12969 = !DILocation(line: 94, column: 19, scope: !12958)
!12970 = !DILocation(line: 95, column: 13, scope: !12967)
!12971 = !DILocation(line: 97, column: 22, scope: !12958)
!12972 = !DILocation(line: 96, column: 24, scope: !12958)
!12973 = !DILocation(line: 96, column: 21, scope: !12958)
!12974 = !DILocation(line: 95, column: 27, scope: !12958)
!12975 = !DILocation(line: 104, column: 17, scope: !12967)
!12976 = !DILocation(line: 105, column: 6, scope: !12958)
!12977 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN68_$LT$rustc_demangle..DemangleStyle$u20$as$u20$core..fmt..Display$GT$3fmt17hc56a78af5d178756E", scope: !12978, file: !626, line: 281, type: !12979, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !12981)
!12978 = !DINamespace(name: "{impl#1}", scope: !26)
!12979 = !DISubroutineType(types: !12980)
!12980 = !{!1079, !7025, !50}
!12981 = !{!12982, !12983, !12984, !12987}
!12982 = !DILocalVariable(name: "self", arg: 1, scope: !12977, file: !626, line: 281, type: !7025)
!12983 = !DILocalVariable(name: "f", arg: 2, scope: !12977, file: !626, line: 281, type: !50)
!12984 = !DILocalVariable(name: "d", scope: !12985, file: !626, line: 283, type: !12986, align: 32)
!12985 = distinct !DILexicalBlock(scope: !12977, file: !626, line: 283, column: 13)
!12986 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::legacy::Demangle", baseType: !656, size: 32, align: 32, dwarfAddressSpace: 0)
!12987 = !DILocalVariable(name: "d", scope: !12988, file: !626, line: 284, type: !12962, align: 32)
!12988 = distinct !DILexicalBlock(scope: !12977, file: !626, line: 284, column: 13)
!12989 = !DILocation(line: 281, column: 12, scope: !12977)
!12990 = !DILocation(line: 281, column: 19, scope: !12977)
!12991 = !DILocation(line: 282, column: 15, scope: !12977)
!12992 = !DILocation(line: 282, column: 9, scope: !12977)
!12993 = !DILocation(line: 284, column: 31, scope: !12977)
!12994 = !DILocation(line: 284, column: 31, scope: !12988)
!12995 = !DILocation(line: 284, column: 41, scope: !12988)
!12996 = !DILocation(line: 283, column: 35, scope: !12977)
!12997 = !DILocation(line: 283, column: 35, scope: !12985)
!12998 = !DILocation(line: 283, column: 45, scope: !12985)
!12999 = !DILocation(line: 286, column: 6, scope: !12977)
!13000 = distinct !DISubprogram(name: "eq<u8>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17he857b0b19bc801f1E", scope: !13001, file: !807, line: 2356, type: !13002, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !13004)
!13001 = !DINamespace(name: "{impl#15}", scope: !244)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{!706, !11854, !11854}
!13004 = !{!13005, !13006, !13007, !13009}
!13005 = !DILocalVariable(name: "self", arg: 1, scope: !13000, file: !807, line: 2356, type: !11854)
!13006 = !DILocalVariable(name: "other", arg: 2, scope: !13000, file: !807, line: 2356, type: !11854)
!13007 = !DILocalVariable(name: "l", scope: !13008, file: !807, line: 2360, type: !12, align: 32)
!13008 = distinct !DILexicalBlock(scope: !13000, file: !807, line: 2360, column: 13)
!13009 = !DILocalVariable(name: "r", scope: !13008, file: !807, line: 2360, type: !12, align: 32)
!13010 = !DILocation(line: 2356, column: 11, scope: !13000)
!13011 = !DILocation(line: 2356, column: 18, scope: !13000)
!13012 = !DILocation(line: 2359, column: 15, scope: !13000)
!13013 = !DILocation(line: 2359, column: 9, scope: !13000)
!13014 = !DILocation(line: 2365, column: 6, scope: !13000)
!13015 = !DILocation(line: 2360, column: 19, scope: !13000)
!13016 = !DILocation(line: 2360, column: 19, scope: !13008)
!13017 = !DILocation(line: 2360, column: 28, scope: !13000)
!13018 = !DILocation(line: 2360, column: 28, scope: !13008)
!13019 = !DILocation(line: 2360, column: 35, scope: !13008)
!13020 = !DILocation(line: 2361, column: 32, scope: !13000)
!13021 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt17hd5533434e0634126E", scope: !7089, file: !6448, line: 106, type: !13022, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !13024)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!1079, !12986, !50}
!13024 = !{!13025, !13026, !13027, !13029, !13031, !13033, !13035, !13037, !13039, !13041, !13043, !13045, !13047, !13049, !13051, !13052, !13054, !13056, !13058, !13060, !13062, !13064, !13066, !13068, !13070, !13072, !13074, !13076, !13078, !13080}
!13025 = !DILocalVariable(name: "self", arg: 1, scope: !13021, file: !6448, line: 106, type: !12986)
!13026 = !DILocalVariable(name: "f", arg: 2, scope: !13021, file: !6448, line: 106, type: !50)
!13027 = !DILocalVariable(name: "inner", scope: !13028, file: !6448, line: 108, type: !659, align: 32)
!13028 = distinct !DILexicalBlock(scope: !13021, file: !6448, line: 108, column: 9)
!13029 = !DILocalVariable(name: "iter", scope: !13030, file: !6448, line: 109, type: !1019, align: 32)
!13030 = distinct !DILexicalBlock(scope: !13028, file: !6448, line: 109, column: 9)
!13031 = !DILocalVariable(name: "element", scope: !13032, file: !6448, line: 109, type: !9, align: 32)
!13032 = distinct !DILexicalBlock(scope: !13030, file: !6448, line: 109, column: 41)
!13033 = !DILocalVariable(name: "rest", scope: !13034, file: !6448, line: 110, type: !659, align: 32)
!13034 = distinct !DILexicalBlock(scope: !13032, file: !6448, line: 110, column: 13)
!13035 = !DILocalVariable(name: "i", scope: !13036, file: !6448, line: 114, type: !9, align: 32)
!13036 = distinct !DILexicalBlock(scope: !13034, file: !6448, line: 114, column: 13)
!13037 = !DILocalVariable(name: "residual", scope: !13038, file: !6448, line: 123, type: !2336, align: 8)
!13038 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 123, column: 34)
!13039 = !DILocalVariable(name: "val", scope: !13040, file: !6448, line: 123, type: !7, align: 8)
!13040 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 123, column: 17)
!13041 = !DILocalVariable(name: "residual", scope: !13042, file: !6448, line: 131, type: !2336, align: 8)
!13042 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 131, column: 42)
!13043 = !DILocalVariable(name: "val", scope: !13044, file: !6448, line: 131, type: !7, align: 8)
!13044 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 131, column: 25)
!13045 = !DILocalVariable(name: "residual", scope: !13046, file: !6448, line: 134, type: !2336, align: 8)
!13046 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 134, column: 41)
!13047 = !DILocalVariable(name: "val", scope: !13048, file: !6448, line: 134, type: !7, align: 8)
!13048 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 134, column: 25)
!13049 = !DILocalVariable(name: "escape", scope: !13050, file: !6448, line: 138, type: !659, align: 32)
!13050 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 138, column: 21)
!13051 = !DILocalVariable(name: "after_escape", scope: !13050, file: !6448, line: 138, type: !659, align: 32)
!13052 = !DILocalVariable(name: "end", scope: !13053, file: !6448, line: 138, type: !9, align: 32)
!13053 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 138, column: 89)
!13054 = !DILocalVariable(name: "unescaped", scope: !13055, file: !6448, line: 145, type: !659, align: 32)
!13055 = distinct !DILexicalBlock(scope: !13050, file: !6448, line: 145, column: 21)
!13056 = !DILocalVariable(name: "digits", scope: !13057, file: !6448, line: 157, type: !659, align: 32)
!13057 = distinct !DILexicalBlock(scope: !13050, file: !6448, line: 157, column: 33)
!13058 = !DILocalVariable(name: "all_lower_hex", scope: !13059, file: !6448, line: 158, type: !706, align: 8)
!13059 = distinct !DILexicalBlock(scope: !13057, file: !6448, line: 158, column: 33)
!13060 = !DILocalVariable(name: "c", scope: !13061, file: !6448, line: 162, type: !243, align: 32)
!13061 = distinct !DILexicalBlock(scope: !13059, file: !6448, line: 162, column: 33)
!13062 = !DILocalVariable(name: "c", scope: !13063, file: !6448, line: 165, type: !252, align: 32)
!13063 = distinct !DILexicalBlock(scope: !13061, file: !6448, line: 165, column: 77)
!13064 = !DILocalVariable(name: "residual", scope: !13065, file: !6448, line: 168, type: !2336, align: 8)
!13065 = distinct !DILexicalBlock(scope: !13063, file: !6448, line: 168, column: 49)
!13066 = !DILocalVariable(name: "val", scope: !13067, file: !6448, line: 168, type: !7, align: 8)
!13067 = distinct !DILexicalBlock(scope: !13063, file: !6448, line: 168, column: 41)
!13068 = !DILocalVariable(name: "residual", scope: !13069, file: !6448, line: 177, type: !2336, align: 8)
!13069 = distinct !DILexicalBlock(scope: !13055, file: !6448, line: 177, column: 43)
!13070 = !DILocalVariable(name: "val", scope: !13071, file: !6448, line: 177, type: !7, align: 8)
!13071 = distinct !DILexicalBlock(scope: !13055, file: !6448, line: 177, column: 21)
!13072 = !DILocalVariable(name: "i", scope: !13073, file: !6448, line: 179, type: !9, align: 32)
!13073 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 179, column: 77)
!13074 = !DILocalVariable(name: "residual", scope: !13075, file: !6448, line: 180, type: !2336, align: 8)
!13075 = distinct !DILexicalBlock(scope: !13073, file: !6448, line: 180, column: 44)
!13076 = !DILocalVariable(name: "val", scope: !13077, file: !6448, line: 180, type: !7, align: 8)
!13077 = distinct !DILexicalBlock(scope: !13073, file: !6448, line: 180, column: 21)
!13078 = !DILocalVariable(name: "residual", scope: !13079, file: !6448, line: 186, type: !2336, align: 8)
!13079 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 186, column: 30)
!13080 = !DILocalVariable(name: "val", scope: !13081, file: !6448, line: 186, type: !7, align: 8)
!13081 = distinct !DILexicalBlock(scope: !13036, file: !6448, line: 186, column: 13)
!13082 = !DILocation(line: 106, column: 12, scope: !13021)
!13083 = !DILocation(line: 106, column: 19, scope: !13021)
!13084 = !DILocation(line: 108, column: 13, scope: !13028)
!13085 = !DILocation(line: 109, column: 24, scope: !13030)
!13086 = !DILocation(line: 110, column: 17, scope: !13034)
!13087 = !DILocation(line: 145, column: 25, scope: !13055)
!13088 = !DILocation(line: 165, column: 52, scope: !13063)
!13089 = !DILocation(line: 123, column: 34, scope: !13038)
!13090 = !DILocation(line: 123, column: 17, scope: !13040)
!13091 = !DILocation(line: 131, column: 42, scope: !13042)
!13092 = !DILocation(line: 131, column: 25, scope: !13044)
!13093 = !DILocation(line: 134, column: 41, scope: !13046)
!13094 = !DILocation(line: 134, column: 25, scope: !13048)
!13095 = !DILocation(line: 168, column: 49, scope: !13065)
!13096 = !DILocation(line: 168, column: 41, scope: !13067)
!13097 = !DILocation(line: 177, column: 43, scope: !13069)
!13098 = !DILocation(line: 177, column: 21, scope: !13071)
!13099 = !DILocation(line: 180, column: 44, scope: !13075)
!13100 = !DILocation(line: 180, column: 21, scope: !13077)
!13101 = !DILocation(line: 186, column: 30, scope: !13079)
!13102 = !DILocation(line: 186, column: 13, scope: !13081)
!13103 = !DILocation(line: 108, column: 25, scope: !13021)
!13104 = !DILocation(line: 109, column: 27, scope: !13028)
!13105 = !DILocation(line: 109, column: 24, scope: !13028)
!13106 = !DILocation(line: 109, column: 9, scope: !13030)
!13107 = !DILocation(line: 109, column: 13, scope: !13030)
!13108 = !DILocation(line: 109, column: 13, scope: !13032)
!13109 = !DILocation(line: 110, column: 28, scope: !13032)
!13110 = !DILocation(line: 111, column: 13, scope: !13034)
!13111 = !DILocation(line: 189, column: 9, scope: !13028)
!13112 = !DILocation(line: 190, column: 6, scope: !13021)
!13113 = !DILocation(line: 111, column: 19, scope: !13034)
!13114 = !DILocation(line: 111, column: 24, scope: !13034)
!13115 = !DILocation(line: 111, column: 32, scope: !13034)
!13116 = !DILocalVariable(name: "self", arg: 1, scope: !13117, file: !807, line: 1012, type: !243)
!13117 = distinct !DISubprogram(name: "unwrap<char>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17hce77689b1fcd0bdcE", scope: !243, file: !807, line: 1012, type: !13118, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !13120, retainedNodes: !13121)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{!252, !243, !823}
!13120 = !DISubprogram(name: "unwrap<char>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17hce77689b1fcd0bdcE", scope: !243, file: !807, line: 1012, type: !13118, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!13121 = !{!13116, !13122}
!13122 = !DILocalVariable(name: "val", scope: !13123, file: !807, line: 1014, type: !252, align: 32)
!13123 = distinct !DILexicalBlock(scope: !13117, file: !807, line: 1014, column: 13)
!13124 = !DILocation(line: 1012, column: 25, scope: !13117, inlinedAt: !13125)
!13125 = distinct !DILocation(line: 111, column: 39, scope: !13034)
!13126 = !DILocation(line: 1013, column: 15, scope: !13117, inlinedAt: !13125)
!13127 = !DILocation(line: 1013, column: 9, scope: !13117, inlinedAt: !13125)
!13128 = !DILocation(line: 1015, column: 21, scope: !13117, inlinedAt: !13125)
!13129 = !DILocation(line: 1014, column: 18, scope: !13117, inlinedAt: !13125)
!13130 = !DILocation(line: 1014, column: 18, scope: !13123, inlinedAt: !13125)
!13131 = !DILocation(line: 111, column: 48, scope: !13034)
!13132 = !DILocation(line: 114, column: 28, scope: !13034)
!13133 = !DILocation(line: 114, column: 37, scope: !13034)
!13134 = !DILocation(line: 114, column: 43, scope: !13034)
!13135 = !DILocation(line: 114, column: 51, scope: !13034)
!13136 = !DILocation(line: 114, column: 56, scope: !13034)
!13137 = !DILocation(line: 114, column: 36, scope: !13034)
!13138 = !DILocation(line: 112, column: 25, scope: !13034)
!13139 = !DILocation(line: 112, column: 29, scope: !13034)
!13140 = !DILocation(line: 112, column: 17, scope: !13034)
!13141 = !DILocation(line: 114, column: 33, scope: !13034)
!13142 = !DILocation(line: 114, column: 64, scope: !13034)
!13143 = !DILocalVariable(name: "self", arg: 1, scope: !13144, file: !6760, line: 1227, type: !8090)
!13144 = distinct !DISubprogram(name: "unwrap<usize, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf838b8a2abb31d56E", scope: !8090, file: !6760, line: 1227, type: !13145, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !8098, declaration: !13147, retainedNodes: !13148)
!13145 = !DISubroutineType(types: !13146)
!13146 = !{!9, !8090, !823}
!13147 = !DISubprogram(name: "unwrap<usize, core::num::error::ParseIntError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hf838b8a2abb31d56E", scope: !8090, file: !6760, line: 1227, type: !13145, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8098)
!13148 = !{!13143, !13149, !13151}
!13149 = !DILocalVariable(name: "t", scope: !13150, file: !6760, line: 1232, type: !9, align: 32)
!13150 = distinct !DILexicalBlock(scope: !13144, file: !6760, line: 1232, column: 13)
!13151 = !DILocalVariable(name: "e", scope: !13152, file: !6760, line: 1233, type: !7645, align: 8)
!13152 = distinct !DILexicalBlock(scope: !13144, file: !6760, line: 1233, column: 13)
!13153 = !DILocation(line: 1227, column: 19, scope: !13144, inlinedAt: !13154)
!13154 = distinct !DILocation(line: 114, column: 72, scope: !13034)
!13155 = !DILocation(line: 1233, column: 17, scope: !13152, inlinedAt: !13154)
!13156 = !DILocation(line: 1231, column: 15, scope: !13144, inlinedAt: !13154)
!13157 = !DILocation(line: 1231, column: 9, scope: !13144, inlinedAt: !13154)
!13158 = !DILocation(line: 1233, column: 17, scope: !13144, inlinedAt: !13154)
!13159 = !DILocation(line: 1233, column: 23, scope: !13152, inlinedAt: !13154)
!13160 = !DILocation(line: 1232, column: 16, scope: !13144, inlinedAt: !13154)
!13161 = !DILocation(line: 1232, column: 16, scope: !13150, inlinedAt: !13154)
!13162 = !DILocation(line: 114, column: 72, scope: !13034)
!13163 = !DILocation(line: 114, column: 17, scope: !13036)
!13164 = !DILocation(line: 115, column: 22, scope: !13036)
!13165 = !DILocation(line: 115, column: 26, scope: !13036)
!13166 = !DILocation(line: 115, column: 13, scope: !13036)
!13167 = !DILocation(line: 116, column: 21, scope: !13036)
!13168 = !DILocation(line: 116, column: 25, scope: !13036)
!13169 = !DILocation(line: 116, column: 13, scope: !13036)
!13170 = !DILocation(line: 119, column: 18, scope: !13036)
!13171 = !DILocation(line: 119, column: 16, scope: !13036)
!13172 = !DILocation(line: 122, column: 16, scope: !13036)
!13173 = !DILocation(line: 119, column: 33, scope: !13036)
!13174 = !DILocation(line: 119, column: 48, scope: !13036)
!13175 = !DILocation(line: 119, column: 78, scope: !13036)
!13176 = !DILocation(line: 119, column: 65, scope: !13036)
!13177 = !DILocation(line: 125, column: 16, scope: !13036)
!13178 = !DILocation(line: 125, column: 21, scope: !13036)
!13179 = !DILocation(line: 123, column: 19, scope: !13036)
!13180 = !DILocation(line: 123, column: 17, scope: !13036)
!13181 = !DILocation(line: 123, column: 17, scope: !13038)
!13182 = !DILocation(line: 129, column: 20, scope: !13036)
!13183 = !DILocation(line: 129, column: 25, scope: !13036)
!13184 = !DILocation(line: 126, column: 25, scope: !13036)
!13185 = !DILocation(line: 126, column: 29, scope: !13036)
!13186 = !DILocation(line: 126, column: 17, scope: !13036)
!13187 = !DILocation(line: 125, column: 13, scope: !13036)
!13188 = !DILocation(line: 137, column: 27, scope: !13036)
!13189 = !DILocation(line: 137, column: 32, scope: !13036)
!13190 = !DILocation(line: 130, column: 40, scope: !13036)
!13191 = !DILocation(line: 130, column: 44, scope: !13036)
!13192 = !DILocation(line: 130, column: 50, scope: !13036)
!13193 = !DILocation(line: 130, column: 58, scope: !13036)
!13194 = !DILocation(line: 130, column: 28, scope: !13036)
!13195 = !DILocation(line: 179, column: 41, scope: !13073)
!13196 = !DILocation(line: 179, column: 46, scope: !13073)
!13197 = !DILocation(line: 179, column: 31, scope: !13073)
!13198 = !DILocation(line: 138, column: 69, scope: !13053)
!13199 = !DILocation(line: 138, column: 73, scope: !13053)
!13200 = !DILocation(line: 138, column: 79, scope: !13053)
!13201 = !DILocation(line: 138, column: 57, scope: !13053)
!13202 = !DILocation(line: 179, column: 36, scope: !13073)
!13203 = !DILocation(line: 180, column: 34, scope: !13073)
!13204 = !DILocation(line: 180, column: 38, scope: !13073)
!13205 = !DILocation(line: 180, column: 23, scope: !13073)
!13206 = !DILocation(line: 180, column: 21, scope: !13073)
!13207 = !DILocation(line: 186, column: 25, scope: !13036)
!13208 = !DILocation(line: 186, column: 15, scope: !13036)
!13209 = !DILocation(line: 186, column: 13, scope: !13036)
!13210 = !DILocation(line: 180, column: 21, scope: !13075)
!13211 = !DILocation(line: 181, column: 29, scope: !13073)
!13212 = !DILocation(line: 181, column: 33, scope: !13073)
!13213 = !DILocation(line: 181, column: 21, scope: !13073)
!13214 = !DILocation(line: 137, column: 24, scope: !13036)
!13215 = !DILocation(line: 138, column: 62, scope: !13053)
!13216 = !DILocation(line: 139, column: 27, scope: !13053)
!13217 = !DILocation(line: 139, column: 32, scope: !13053)
!13218 = !DILocation(line: 139, column: 31, scope: !13053)
!13219 = !DILocation(line: 139, column: 43, scope: !13053)
!13220 = !DILocation(line: 139, column: 48, scope: !13053)
!13221 = !DILocation(line: 139, column: 47, scope: !13053)
!13222 = !DILocation(line: 139, column: 25, scope: !13053)
!13223 = !DILocation(line: 138, column: 26, scope: !13036)
!13224 = !DILocation(line: 138, column: 26, scope: !13050)
!13225 = !DILocation(line: 138, column: 34, scope: !13036)
!13226 = !DILocation(line: 138, column: 34, scope: !13050)
!13227 = !DILocation(line: 146, column: 25, scope: !13050)
!13228 = !DILocation(line: 147, column: 25, scope: !13050)
!13229 = !DILocation(line: 146, column: 33, scope: !13050)
!13230 = !DILocation(line: 148, column: 25, scope: !13050)
!13231 = !DILocation(line: 147, column: 33, scope: !13050)
!13232 = !DILocation(line: 147, column: 35, scope: !13050)
!13233 = !DILocation(line: 149, column: 25, scope: !13050)
!13234 = !DILocation(line: 148, column: 33, scope: !13050)
!13235 = !DILocation(line: 148, column: 35, scope: !13050)
!13236 = !DILocation(line: 150, column: 25, scope: !13050)
!13237 = !DILocation(line: 149, column: 33, scope: !13050)
!13238 = !DILocation(line: 149, column: 35, scope: !13050)
!13239 = !DILocation(line: 151, column: 25, scope: !13050)
!13240 = !DILocation(line: 150, column: 33, scope: !13050)
!13241 = !DILocation(line: 150, column: 35, scope: !13050)
!13242 = !DILocation(line: 152, column: 25, scope: !13050)
!13243 = !DILocation(line: 151, column: 33, scope: !13050)
!13244 = !DILocation(line: 151, column: 35, scope: !13050)
!13245 = !DILocation(line: 153, column: 25, scope: !13050)
!13246 = !DILocation(line: 152, column: 33, scope: !13050)
!13247 = !DILocation(line: 152, column: 35, scope: !13050)
!13248 = !DILocation(line: 156, column: 39, scope: !13050)
!13249 = !DILocation(line: 156, column: 32, scope: !13050)
!13250 = !DILocation(line: 153, column: 32, scope: !13050)
!13251 = !DILocation(line: 153, column: 34, scope: !13050)
!13252 = !DILocation(line: 157, column: 53, scope: !13050)
!13253 = !DILocation(line: 157, column: 37, scope: !13057)
!13254 = !DILocation(line: 158, column: 60, scope: !13057)
!13255 = !DILocation(line: 158, column: 68, scope: !13057)
!13256 = !DILocation(line: 158, column: 37, scope: !13059)
!13257 = !DILocation(line: 162, column: 41, scope: !13059)
!13258 = !DILocation(line: 163, column: 38, scope: !13059)
!13259 = !DILocation(line: 164, column: 38, scope: !13059)
!13260 = !DILocation(line: 162, column: 37, scope: !13061)
!13261 = !DILocation(line: 165, column: 58, scope: !13063)
!13262 = !DILocation(line: 165, column: 40, scope: !13063)
!13263 = !DILocation(line: 167, column: 41, scope: !13063)
!13264 = !DILocation(line: 167, column: 43, scope: !13063)
!13265 = !DILocation(line: 168, column: 43, scope: !13063)
!13266 = !DILocation(line: 168, column: 41, scope: !13063)
!13267 = !DILocation(line: 168, column: 41, scope: !13065)
!13268 = !DILocation(line: 169, column: 41, scope: !13063)
!13269 = !DILocation(line: 0, scope: !13270)
!13270 = !DILexicalBlockFile(scope: !13036, file: !626, discriminator: 0)
!13271 = !DILocation(line: 177, column: 33, scope: !13055)
!13272 = !DILocation(line: 177, column: 23, scope: !13055)
!13273 = !DILocation(line: 177, column: 21, scope: !13055)
!13274 = !DILocation(line: 177, column: 21, scope: !13069)
!13275 = !DILocation(line: 178, column: 21, scope: !13055)
!13276 = !DILocation(line: 186, column: 13, scope: !13079)
!13277 = !DILocation(line: 134, column: 27, scope: !13036)
!13278 = !DILocation(line: 134, column: 25, scope: !13036)
!13279 = !DILocation(line: 131, column: 27, scope: !13036)
!13280 = !DILocation(line: 131, column: 25, scope: !13036)
!13281 = !DILocation(line: 131, column: 25, scope: !13042)
!13282 = !DILocation(line: 132, column: 33, scope: !13036)
!13283 = !DILocation(line: 132, column: 37, scope: !13036)
!13284 = !DILocation(line: 132, column: 25, scope: !13036)
!13285 = !DILocation(line: 130, column: 21, scope: !13036)
!13286 = !DILocation(line: 134, column: 25, scope: !13046)
!13287 = !DILocation(line: 135, column: 33, scope: !13036)
!13288 = !DILocation(line: 135, column: 37, scope: !13036)
!13289 = !DILocation(line: 135, column: 25, scope: !13036)
!13290 = !DILocation(line: 0, scope: !13291)
!13291 = !DILexicalBlockFile(scope: !13021, file: !626, discriminator: 0)
!13292 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h1803cecbaa853338E", scope: !7088, file: !6448, line: 179, type: !13293, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !13296)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{!706, !13295, !252}
!13295 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}", baseType: !7087, size: 32, align: 32, dwarfAddressSpace: 0)
!13296 = !{!13297, !13298}
!13297 = !DILocalVariable(name: "c", arg: 2, scope: !13292, file: !6448, line: 179, type: !252)
!13298 = !DILocalVariable(arg: 1, scope: !13292, file: !6448, line: 179, type: !13295)
!13299 = !DILocation(line: 179, column: 51, scope: !13292)
!13300 = !DILocation(line: 179, column: 52, scope: !13292)
!13301 = !DILocation(line: 179, column: 55, scope: !13292)
!13302 = !DILocation(line: 179, column: 67, scope: !13292)
!13303 = !DILocation(line: 179, column: 75, scope: !13292)
!13304 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN71_$LT$rustc_demangle..legacy..Demangle$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h19171d52f3e553bbE", scope: !7088, file: !6448, line: 158, type: !13305, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !13308)
!13305 = !DISubroutineType(types: !13306)
!13306 = !{!706, !13307, !252}
!13307 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut rustc_demangle::legacy::{impl#0}::fmt::{closure_env#0}", baseType: !10137, size: 32, align: 32, dwarfAddressSpace: 0)
!13308 = !{!13309, !13310}
!13309 = !DILocalVariable(name: "c", arg: 2, scope: !13304, file: !6448, line: 158, type: !252)
!13310 = !DILocalVariable(arg: 1, scope: !13304, file: !6448, line: 158, type: !13307)
!13311 = !DILocation(line: 158, column: 72, scope: !13304)
!13312 = !DILocation(line: 158, column: 73, scope: !13304)
!13313 = !DILocation(line: 159, column: 37, scope: !13304)
!13314 = !DILocation(line: 159, column: 49, scope: !13304)
!13315 = !DILocation(line: 159, column: 62, scope: !13304)
!13316 = !DILocation(line: 160, column: 42, scope: !13304)
!13317 = !DILocation(line: 161, column: 34, scope: !13304)
!13318 = distinct !DISubprogram(name: "eq", linkageName: "_ZN71_$LT$rustc_demangle..v0..ParseError$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf189bb8e1965f47dE", scope: !13319, file: !751, line: 23, type: !13320, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !13322)
!13319 = !DINamespace(name: "{impl#8}", scope: !83)
!13320 = !DISubroutineType(types: !13321)
!13321 = !{!706, !1241, !1241}
!13322 = !{!13323, !13324, !13325, !13328}
!13323 = !DILocalVariable(name: "self", arg: 1, scope: !13318, file: !751, line: 23, type: !1241)
!13324 = !DILocalVariable(name: "other", arg: 2, scope: !13318, file: !751, line: 23, type: !1241)
!13325 = !DILocalVariable(name: "__self_discr", scope: !13326, file: !751, line: 23, type: !13327, align: 32)
!13326 = distinct !DILexicalBlock(scope: !13318, file: !751, line: 23, column: 10)
!13327 = !DIBasicType(name: "isize", size: 32, encoding: DW_ATE_signed)
!13328 = !DILocalVariable(name: "__arg1_discr", scope: !13329, file: !751, line: 23, type: !13327, align: 32)
!13329 = distinct !DILexicalBlock(scope: !13326, file: !751, line: 23, column: 10)
!13330 = !DILocation(line: 23, column: 10, scope: !13318)
!13331 = !DILocation(line: 23, column: 10, scope: !13326)
!13332 = !DILocation(line: 23, column: 10, scope: !13329)
!13333 = !DILocation(line: 23, column: 19, scope: !13318)
!13334 = distinct !DISubprogram(name: "eq<bool, &mut rustc_demangle::v0::ParseError>", linkageName: "_ZN74_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9d07ca84956e9dfaE", scope: !13335, file: !6760, line: 553, type: !13336, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12202, retainedNodes: !13339)
!13335 = !DINamespace(name: "{impl#34}", scope: !30)
!13336 = !DISubroutineType(types: !13337)
!13337 = !{!706, !13338, !13338}
!13338 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::result::Result<bool, &mut rustc_demangle::v0::ParseError>", baseType: !12194, size: 32, align: 32, dwarfAddressSpace: 0)
!13339 = !{!13340, !13341, !13342, !13344, !13346, !13348, !13349, !13351}
!13340 = !DILocalVariable(name: "self", arg: 1, scope: !13334, file: !6760, line: 553, type: !13338)
!13341 = !DILocalVariable(name: "other", arg: 2, scope: !13334, file: !6760, line: 553, type: !13338)
!13342 = !DILocalVariable(name: "__self_discr", scope: !13343, file: !6760, line: 553, type: !13327, align: 32)
!13343 = distinct !DILexicalBlock(scope: !13334, file: !6760, line: 553, column: 16)
!13344 = !DILocalVariable(name: "__arg1_discr", scope: !13345, file: !6760, line: 553, type: !13327, align: 32)
!13345 = distinct !DILexicalBlock(scope: !13343, file: !6760, line: 553, column: 16)
!13346 = !DILocalVariable(name: "__self_0", scope: !13347, file: !6760, line: 561, type: !2918, align: 32)
!13347 = distinct !DILexicalBlock(scope: !13345, file: !6760, line: 553, column: 16)
!13348 = !DILocalVariable(name: "__arg1_0", scope: !13347, file: !6760, line: 561, type: !2918, align: 32)
!13349 = !DILocalVariable(name: "__self_0", scope: !13350, file: !6760, line: 566, type: !7187, align: 32)
!13350 = distinct !DILexicalBlock(scope: !13345, file: !6760, line: 553, column: 16)
!13351 = !DILocalVariable(name: "__arg1_0", scope: !13350, file: !6760, line: 566, type: !7187, align: 32)
!13352 = !DILocation(line: 553, column: 16, scope: !13334)
!13353 = !DILocation(line: 561, column: 54, scope: !13347)
!13354 = !DILocation(line: 566, column: 55, scope: !13350)
!13355 = !DILocation(line: 553, column: 16, scope: !13343)
!13356 = !DILocation(line: 553, column: 16, scope: !13345)
!13357 = !DILocation(line: 553, column: 25, scope: !13334)
!13358 = !DILocation(line: 561, column: 54, scope: !13345)
!13359 = !DILocation(line: 566, column: 55, scope: !13345)
!13360 = distinct !DISubprogram(name: "spec_write_fmt<rustc_demangle::SizeLimitedFmtAdapter<&mut core::fmt::Formatter>>", linkageName: "_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h6358aa247e5ddb59E", scope: !13361, file: !7007, line: 230, type: !7380, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !13368, retainedNodes: !13363)
!13361 = !DINamespace(name: "{impl#1}", scope: !13362)
!13362 = !DINamespace(name: "write_fmt", scope: !7364)
!13363 = !{!13364, !13365, !13366}
!13364 = !DILocalVariable(name: "self", arg: 1, scope: !13360, file: !7007, line: 230, type: !7367)
!13365 = !DILocalVariable(name: "args", arg: 2, scope: !13360, file: !7007, line: 230, type: !7219)
!13366 = !DILocalVariable(name: "s", scope: !13367, file: !7007, line: 231, type: !659, align: 32)
!13367 = distinct !DILexicalBlock(scope: !13360, file: !7007, line: 231, column: 65)
!13368 = !{!13369}
!13369 = !DITemplateTypeParameter(name: "W", type: !25)
!13370 = !DILocation(line: 230, column: 31, scope: !13360)
!13371 = !DILocation(line: 230, column: 37, scope: !13360)
!13372 = !DILocation(line: 231, column: 39, scope: !13367)
!13373 = !DILocation(line: 231, column: 34, scope: !13367)
!13374 = !DILocation(line: 231, column: 24, scope: !13367)
!13375 = !DILocation(line: 231, column: 29, scope: !13367)
!13376 = !DILocation(line: 232, column: 26, scope: !13367)
!13377 = !DILocation(line: 234, column: 21, scope: !13360)
!13378 = !DILocation(line: 236, column: 14, scope: !13360)
!13379 = !DILocation(line: 230, column: 13, scope: !13360)
!13380 = distinct !DISubprogram(name: "get<char>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h6470ee157401c3acE", scope: !13381, file: !10920, line: 213, type: !13382, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !13384)
!13381 = !DINamespace(name: "{impl#2}", scope: !10922)
!13382 = !DISubroutineType(types: !13383)
!13383 = !{!11119, !9, !8702}
!13384 = !{!13385, !13386}
!13385 = !DILocalVariable(name: "self", arg: 1, scope: !13380, file: !10920, line: 213, type: !9)
!13386 = !DILocalVariable(name: "slice", arg: 2, scope: !13380, file: !10920, line: 213, type: !8702)
!13387 = !DILocation(line: 213, column: 12, scope: !13380)
!13388 = !DILocation(line: 213, column: 18, scope: !13380)
!13389 = !DILocation(line: 214, column: 12, scope: !13380)
!13390 = !DILocation(line: 218, column: 13, scope: !13380)
!13391 = !DILocation(line: 214, column: 9, scope: !13380)
!13392 = !DILocation(line: 216, column: 27, scope: !13380)
!13393 = !DILocation(line: 216, column: 22, scope: !13380)
!13394 = !DILocation(line: 220, column: 6, scope: !13380)
!13395 = distinct !DISubprogram(name: "eq<char>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h4c47f3b4d9feadd7E", scope: !13396, file: !8619, line: 1686, type: !13397, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !13400)
!13396 = !DINamespace(name: "{impl#15}", scope: !400)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{!706, !13399, !13399}
!13399 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<char>", baseType: !8630, size: 32, align: 32, dwarfAddressSpace: 0)
!13400 = !{!13401, !13402}
!13401 = !DILocalVariable(name: "self", arg: 1, scope: !13395, file: !8619, line: 1686, type: !13399)
!13402 = !DILocalVariable(name: "other", arg: 2, scope: !13395, file: !8619, line: 1686, type: !13399)
!13403 = !DILocation(line: 1686, column: 11, scope: !13395)
!13404 = !DILocation(line: 1686, column: 18, scope: !13395)
!13405 = !DILocation(line: 1687, column: 9, scope: !13395)
!13406 = !DILocation(line: 401, column: 25, scope: !11175, inlinedAt: !13407)
!13407 = distinct !DILocation(line: 1687, column: 14, scope: !13395)
!13408 = !DILocation(line: 1687, column: 26, scope: !13395)
!13409 = !DILocation(line: 401, column: 25, scope: !11175, inlinedAt: !13410)
!13410 = distinct !DILocation(line: 1687, column: 32, scope: !13395)
!13411 = !DILocation(line: 1688, column: 6, scope: !13395)
!13412 = distinct !DISubprogram(name: "clone<u8>", linkageName: "_ZN78_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h68f7622df89ab444E", scope: !13413, file: !11156, line: 1901, type: !13414, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !13417)
!13413 = !DINamespace(name: "{impl#89}", scope: !277)
!13414 = !DISubroutineType(types: !13415)
!13415 = !{!276, !13416}
!13416 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::ChunksExact<u8>", baseType: !276, size: 32, align: 32, dwarfAddressSpace: 0)
!13417 = !{!13418}
!13418 = !DILocalVariable(name: "self", arg: 1, scope: !13412, file: !11156, line: 1901, type: !13416)
!13419 = !DILocation(line: 1901, column: 14, scope: !13412)
!13420 = !DILocation(line: 1902, column: 26, scope: !13412)
!13421 = !DILocation(line: 1902, column: 39, scope: !13412)
!13422 = !DILocation(line: 1902, column: 61, scope: !13412)
!13423 = !DILocation(line: 1902, column: 9, scope: !13412)
!13424 = !DILocation(line: 1903, column: 6, scope: !13412)
!13425 = distinct !DISubprogram(name: "branch<(), ()>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2dc0dbf01439ce47E", scope: !13426, file: !6760, line: 2167, type: !13427, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1331, retainedNodes: !13444)
!13426 = !DINamespace(name: "{impl#27}", scope: !30)
!13427 = !DISubroutineType(types: !13428)
!13428 = !{!13429, !1323}
!13429 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, ()>, ()>", scope: !424, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13430, templateParams: !14, identifier: "d225a572717a95ccedc9902ba3613f89")
!13430 = !{!13431}
!13431 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13429, file: !2, size: 8, align: 8, elements: !13432, templateParams: !14, identifier: "fd54dd1ee12c68d2e35ee25e7cb20f6d", discriminator: !13443)
!13432 = !{!13433, !13439}
!13433 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13431, file: !2, baseType: !13434, size: 8, align: 8, extraData: i8 0)
!13434 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13429, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13435, templateParams: !13437, identifier: "30674db412d70d53c9c8ab2261461256")
!13435 = !{!13436}
!13436 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13434, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!13437 = !{!13438, !435}
!13438 = !DITemplateTypeParameter(name: "B", type: !991)
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13431, file: !2, baseType: !13440, size: 8, align: 8, extraData: i8 1)
!13440 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13429, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13441, templateParams: !13437, identifier: "dafc76718ece9a059eb039cd1c4e2de4")
!13441 = !{!13442}
!13442 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13440, file: !2, baseType: !991, align: 8, offset: 8, flags: DIFlagPublic)
!13443 = !DIDerivedType(tag: DW_TAG_member, scope: !13429, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!13444 = !{!13445, !13446, !13448}
!13445 = !DILocalVariable(name: "self", arg: 1, scope: !13425, file: !6760, line: 2167, type: !1323)
!13446 = !DILocalVariable(name: "v", scope: !13447, file: !6760, line: 2169, type: !7, align: 8)
!13447 = distinct !DILexicalBlock(scope: !13425, file: !6760, line: 2169, column: 13)
!13448 = !DILocalVariable(name: "e", scope: !13449, file: !6760, line: 2170, type: !7, align: 8)
!13449 = distinct !DILexicalBlock(scope: !13425, file: !6760, line: 2170, column: 13)
!13450 = !DILocation(line: 2167, column: 15, scope: !13425)
!13451 = !DILocation(line: 2169, column: 16, scope: !13447)
!13452 = !DILocation(line: 2170, column: 17, scope: !13449)
!13453 = !DILocation(line: 2168, column: 15, scope: !13425)
!13454 = !DILocation(line: 2168, column: 9, scope: !13425)
!13455 = !DILocation(line: 2170, column: 23, scope: !13449)
!13456 = !DILocation(line: 2170, column: 48, scope: !13425)
!13457 = !DILocation(line: 2169, column: 22, scope: !13447)
!13458 = !DILocation(line: 2169, column: 45, scope: !13425)
!13459 = !DILocation(line: 2172, column: 6, scope: !13425)
!13460 = distinct !DISubprogram(name: "branch<bool, core::fmt::Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4bbc9c93858d8ae3E", scope: !13426, file: !6760, line: 2167, type: !13461, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5657, retainedNodes: !13479)
!13461 = !DISubroutineType(types: !13462)
!13462 = !{!13463, !5649}
!13463 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, bool>", scope: !424, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13464, templateParams: !14, identifier: "f89c646f5368519786352d7671fb5cec")
!13464 = !{!13465}
!13465 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13463, file: !2, size: 8, align: 8, elements: !13466, templateParams: !14, identifier: "322fb95d30f61e06b5ff434a42a654d6", discriminator: !13478)
!13466 = !{!13467, !13474}
!13467 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13465, file: !2, baseType: !13468, size: 8, align: 8)
!13468 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13463, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13469, templateParams: !13471, identifier: "d08a9edc235e8ce715b508102af59921")
!13469 = !{!13470}
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13468, file: !2, baseType: !706, size: 8, align: 8, flags: DIFlagPublic)
!13471 = !{!13472, !13473}
!13472 = !DITemplateTypeParameter(name: "B", type: !2336)
!13473 = !DITemplateTypeParameter(name: "C", type: !706)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13465, file: !2, baseType: !13475, size: 8, align: 8, extraData: i8 2)
!13475 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13463, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13476, templateParams: !13471, identifier: "1251969a1c3b696d8915a1f8f6a2c9bf")
!13476 = !{!13477}
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13475, file: !2, baseType: !2336, align: 8, flags: DIFlagPublic)
!13478 = !DIDerivedType(tag: DW_TAG_member, scope: !13463, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!13479 = !{!13480, !13481, !13483}
!13480 = !DILocalVariable(name: "self", arg: 1, scope: !13460, file: !6760, line: 2167, type: !5649)
!13481 = !DILocalVariable(name: "v", scope: !13482, file: !6760, line: 2169, type: !706, align: 8)
!13482 = distinct !DILexicalBlock(scope: !13460, file: !6760, line: 2169, column: 13)
!13483 = !DILocalVariable(name: "e", scope: !13484, file: !6760, line: 2170, type: !1089, align: 8)
!13484 = distinct !DILexicalBlock(scope: !13460, file: !6760, line: 2170, column: 13)
!13485 = !DILocation(line: 2167, column: 15, scope: !13460)
!13486 = !DILocation(line: 2170, column: 17, scope: !13484)
!13487 = !DILocation(line: 2168, column: 15, scope: !13460)
!13488 = !DILocation(line: 2168, column: 9, scope: !13460)
!13489 = !DILocation(line: 2170, column: 23, scope: !13484)
!13490 = !DILocation(line: 2170, column: 48, scope: !13460)
!13491 = !DILocation(line: 2169, column: 16, scope: !13460)
!13492 = !DILocation(line: 2169, column: 16, scope: !13482)
!13493 = !DILocation(line: 2169, column: 22, scope: !13482)
!13494 = !DILocation(line: 2169, column: 45, scope: !13460)
!13495 = !DILocation(line: 2172, column: 6, scope: !13460)
!13496 = distinct !DISubprogram(name: "branch<&char, ()>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h59995904f982420dE", scope: !13426, file: !6760, line: 2167, type: !13497, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11729, retainedNodes: !13514)
!13497 = !DISubroutineType(types: !13498)
!13498 = !{!13499, !11721}
!13499 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, ()>, &char>", scope: !424, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !13500, templateParams: !14, identifier: "c30d822dc8715b3f635a189c74247b1")
!13500 = !{!13501}
!13501 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13499, file: !2, size: 32, align: 32, elements: !13502, templateParams: !14, identifier: "24e012c52522be29d5a21a9222080d2f", discriminator: !13513)
!13502 = !{!13503, !13509}
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13501, file: !2, baseType: !13504, size: 32, align: 32)
!13504 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13499, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !13505, templateParams: !13507, identifier: "1c48962f82c95be6c6fccda3d557a3ef")
!13505 = !{!13506}
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13504, file: !2, baseType: !1676, size: 32, align: 32, flags: DIFlagPublic)
!13507 = !{!13438, !13508}
!13508 = !DITemplateTypeParameter(name: "C", type: !1676)
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13501, file: !2, baseType: !13510, size: 32, align: 32, extraData: i32 0)
!13510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13499, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !13511, templateParams: !13507, identifier: "e21987340180031ef985bd186508dd3f")
!13511 = !{!13512}
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13510, file: !2, baseType: !991, align: 8, flags: DIFlagPublic)
!13513 = !DIDerivedType(tag: DW_TAG_member, scope: !13499, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!13514 = !{!13515, !13516, !13518}
!13515 = !DILocalVariable(name: "self", arg: 1, scope: !13496, file: !6760, line: 2167, type: !11721)
!13516 = !DILocalVariable(name: "v", scope: !13517, file: !6760, line: 2169, type: !1676, align: 32)
!13517 = distinct !DILexicalBlock(scope: !13496, file: !6760, line: 2169, column: 13)
!13518 = !DILocalVariable(name: "e", scope: !13519, file: !6760, line: 2170, type: !7, align: 8)
!13519 = distinct !DILexicalBlock(scope: !13496, file: !6760, line: 2170, column: 13)
!13520 = !DILocation(line: 2167, column: 15, scope: !13496)
!13521 = !DILocation(line: 2170, column: 17, scope: !13519)
!13522 = !DILocation(line: 2168, column: 15, scope: !13496)
!13523 = !DILocation(line: 2168, column: 9, scope: !13496)
!13524 = !DILocation(line: 2170, column: 23, scope: !13519)
!13525 = !DILocation(line: 2170, column: 48, scope: !13496)
!13526 = !DILocation(line: 2169, column: 16, scope: !13496)
!13527 = !DILocation(line: 2169, column: 16, scope: !13517)
!13528 = !DILocation(line: 2169, column: 22, scope: !13517)
!13529 = !DILocation(line: 2169, column: 45, scope: !13496)
!13530 = !DILocation(line: 2172, column: 6, scope: !13496)
!13531 = distinct !DISubprogram(name: "branch<(), rustc_demangle::v0::ParseError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h7c277fdd97e17c06E", scope: !13426, file: !6760, line: 2167, type: !13532, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1808, retainedNodes: !13549)
!13532 = !DISubroutineType(types: !13533)
!13533 = !{!13534, !1800}
!13534 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, rustc_demangle::v0::ParseError>, ()>", scope: !424, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13535, templateParams: !14, identifier: "677ddab08a34fd54a5c348bf39ced328")
!13535 = !{!13536}
!13536 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13534, file: !2, size: 8, align: 8, elements: !13537, templateParams: !14, identifier: "e1991e18417d7f121cdf3d46b891460", discriminator: !13548)
!13537 = !{!13538, !13544}
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13536, file: !2, baseType: !13539, size: 8, align: 8, extraData: i8 2)
!13539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13534, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13540, templateParams: !13542, identifier: "13507e61a263c9f87ec45b1c371f6f35")
!13540 = !{!13541}
!13541 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13539, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!13542 = !{!13543, !435}
!13543 = !DITemplateTypeParameter(name: "B", type: !1736)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13536, file: !2, baseType: !13545, size: 8, align: 8)
!13545 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13534, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !13546, templateParams: !13542, identifier: "f59d9cda374685e816915ea222447e80")
!13546 = !{!13547}
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13545, file: !2, baseType: !1736, size: 8, align: 8, flags: DIFlagPublic)
!13548 = !DIDerivedType(tag: DW_TAG_member, scope: !13534, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!13549 = !{!13550, !13551, !13553}
!13550 = !DILocalVariable(name: "self", arg: 1, scope: !13531, file: !6760, line: 2167, type: !1800)
!13551 = !DILocalVariable(name: "v", scope: !13552, file: !6760, line: 2169, type: !7, align: 8)
!13552 = distinct !DILexicalBlock(scope: !13531, file: !6760, line: 2169, column: 13)
!13553 = !DILocalVariable(name: "e", scope: !13554, file: !6760, line: 2170, type: !87, align: 8)
!13554 = distinct !DILexicalBlock(scope: !13531, file: !6760, line: 2170, column: 13)
!13555 = !DILocation(line: 2167, column: 15, scope: !13531)
!13556 = !DILocation(line: 2169, column: 16, scope: !13552)
!13557 = !DILocation(line: 2168, column: 15, scope: !13531)
!13558 = !DILocation(line: 2168, column: 9, scope: !13531)
!13559 = !DILocation(line: 2170, column: 17, scope: !13531)
!13560 = !DILocation(line: 2170, column: 17, scope: !13554)
!13561 = !DILocation(line: 2170, column: 23, scope: !13554)
!13562 = !DILocation(line: 2170, column: 48, scope: !13531)
!13563 = !DILocation(line: 2169, column: 22, scope: !13552)
!13564 = !DILocation(line: 2169, column: 45, scope: !13531)
!13565 = !DILocation(line: 2172, column: 6, scope: !13531)
!13566 = distinct !DISubprogram(name: "branch<usize, rustc_demangle::v0::ParseError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h966c9f231d7bc266E", scope: !13426, file: !6760, line: 2167, type: !13567, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11613, retainedNodes: !13583)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!13569, !11605}
!13569 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, rustc_demangle::v0::ParseError>, usize>", scope: !424, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13570, templateParams: !14, identifier: "1cb2f15a7deec4298ae9d22687960267")
!13570 = !{!13571}
!13571 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13569, file: !2, size: 64, align: 32, elements: !13572, templateParams: !14, identifier: "ca38058da8ee6597b8bf88134e4a87ea", discriminator: !13582)
!13572 = !{!13573, !13578}
!13573 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13571, file: !2, baseType: !13574, size: 64, align: 32, extraData: i8 0)
!13574 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13569, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13575, templateParams: !13577, identifier: "2b5f4af1cbc7ce82a98ba664263993f9")
!13575 = !{!13576}
!13576 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13574, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!13577 = !{!13543, !598}
!13578 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13571, file: !2, baseType: !13579, size: 64, align: 32, extraData: i8 1)
!13579 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13569, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13580, templateParams: !13577, identifier: "587ee21b39575046f84bc2d7489fb0f5")
!13580 = !{!13581}
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13579, file: !2, baseType: !1736, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!13582 = !DIDerivedType(tag: DW_TAG_member, scope: !13569, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!13583 = !{!13584, !13585, !13587}
!13584 = !DILocalVariable(name: "self", arg: 1, scope: !13566, file: !6760, line: 2167, type: !11605)
!13585 = !DILocalVariable(name: "v", scope: !13586, file: !6760, line: 2169, type: !9, align: 32)
!13586 = distinct !DILexicalBlock(scope: !13566, file: !6760, line: 2169, column: 13)
!13587 = !DILocalVariable(name: "e", scope: !13588, file: !6760, line: 2170, type: !87, align: 8)
!13588 = distinct !DILexicalBlock(scope: !13566, file: !6760, line: 2170, column: 13)
!13589 = !DILocation(line: 2168, column: 15, scope: !13566)
!13590 = !DILocation(line: 2167, column: 15, scope: !13566)
!13591 = !DILocation(line: 2168, column: 9, scope: !13566)
!13592 = !DILocation(line: 2170, column: 17, scope: !13566)
!13593 = !DILocation(line: 2170, column: 17, scope: !13588)
!13594 = !DILocation(line: 2170, column: 23, scope: !13588)
!13595 = !DILocation(line: 2170, column: 48, scope: !13566)
!13596 = !DILocation(line: 2169, column: 16, scope: !13566)
!13597 = !DILocation(line: 2169, column: 16, scope: !13586)
!13598 = !DILocation(line: 2169, column: 22, scope: !13586)
!13599 = !DILocation(line: 2169, column: 45, scope: !13566)
!13600 = !DILocation(line: 2172, column: 6, scope: !13566)
!13601 = distinct !DISubprogram(name: "branch<u64, rustc_demangle::v0::ParseError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9c3d6ae00637452fE", scope: !13426, file: !6760, line: 2167, type: !13602, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1719, retainedNodes: !13619)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!13604, !1711}
!13604 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, rustc_demangle::v0::ParseError>, u64>", scope: !424, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !13605, templateParams: !14, identifier: "ee8479116c868471aacd1d0164bff167")
!13605 = !{!13606}
!13606 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13604, file: !2, size: 128, align: 64, elements: !13607, templateParams: !14, identifier: "f2901d4f06a5b703ce2b0c461b40c233", discriminator: !13618)
!13607 = !{!13608, !13614}
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13606, file: !2, baseType: !13609, size: 128, align: 64, extraData: i8 0)
!13609 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13604, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !13610, templateParams: !13612, identifier: "19bb2135dcee3e7ae21bf7b506867965")
!13610 = !{!13611}
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13609, file: !2, baseType: !765, size: 64, align: 64, offset: 64, flags: DIFlagPublic)
!13612 = !{!13543, !13613}
!13613 = !DITemplateTypeParameter(name: "C", type: !765)
!13614 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13606, file: !2, baseType: !13615, size: 128, align: 64, extraData: i8 1)
!13615 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13604, file: !2, size: 128, align: 64, flags: DIFlagPublic, elements: !13616, templateParams: !13612, identifier: "6ed74f35c39e24438398493f0dc40a70")
!13616 = !{!13617}
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13615, file: !2, baseType: !1736, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!13618 = !DIDerivedType(tag: DW_TAG_member, scope: !13604, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!13619 = !{!13620, !13621, !13623}
!13620 = !DILocalVariable(name: "self", arg: 1, scope: !13601, file: !6760, line: 2167, type: !1711)
!13621 = !DILocalVariable(name: "v", scope: !13622, file: !6760, line: 2169, type: !765, align: 64)
!13622 = distinct !DILexicalBlock(scope: !13601, file: !6760, line: 2169, column: 13)
!13623 = !DILocalVariable(name: "e", scope: !13624, file: !6760, line: 2170, type: !87, align: 8)
!13624 = distinct !DILexicalBlock(scope: !13601, file: !6760, line: 2170, column: 13)
!13625 = !DILocation(line: 2168, column: 15, scope: !13601)
!13626 = !DILocation(line: 2167, column: 15, scope: !13601)
!13627 = !DILocation(line: 2168, column: 9, scope: !13601)
!13628 = !DILocation(line: 2170, column: 17, scope: !13601)
!13629 = !DILocation(line: 2170, column: 17, scope: !13624)
!13630 = !DILocation(line: 2170, column: 23, scope: !13624)
!13631 = !DILocation(line: 2170, column: 48, scope: !13601)
!13632 = !DILocation(line: 2169, column: 16, scope: !13601)
!13633 = !DILocation(line: 2169, column: 16, scope: !13622)
!13634 = !DILocation(line: 2169, column: 22, scope: !13622)
!13635 = !DILocation(line: 2169, column: 45, scope: !13601)
!13636 = !DILocation(line: 2172, column: 6, scope: !13601)
!13637 = distinct !DISubprogram(name: "branch<u8, ()>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha925cae9aa8519f6E", scope: !13426, file: !6760, line: 2167, type: !13638, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11649, retainedNodes: !13655)
!13638 = !DISubroutineType(types: !13639)
!13639 = !{!13640, !11641}
!13640 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, ()>, u8>", scope: !424, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !13641, templateParams: !14, identifier: "7f73160cb6cf90e9aea095ef149a86d1")
!13641 = !{!13642}
!13642 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13640, file: !2, size: 16, align: 8, elements: !13643, templateParams: !14, identifier: "33b4ff0b317d8cb96e7164c3eacbfc1e", discriminator: !13654)
!13643 = !{!13644, !13650}
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13642, file: !2, baseType: !13645, size: 16, align: 8, extraData: i8 0)
!13645 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13640, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !13646, templateParams: !13648, identifier: "5bfafb676304224f6fa964c0e4e0e139")
!13646 = !{!13647}
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13645, file: !2, baseType: !13, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!13648 = !{!13438, !13649}
!13649 = !DITemplateTypeParameter(name: "C", type: !13)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13642, file: !2, baseType: !13651, size: 16, align: 8, extraData: i8 1)
!13651 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13640, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !13652, templateParams: !13648, identifier: "cc89df9c97613c1d1d0c2e699f35e435")
!13652 = !{!13653}
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13651, file: !2, baseType: !991, align: 8, offset: 8, flags: DIFlagPublic)
!13654 = !DIDerivedType(tag: DW_TAG_member, scope: !13640, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!13655 = !{!13656, !13657, !13659}
!13656 = !DILocalVariable(name: "self", arg: 1, scope: !13637, file: !6760, line: 2167, type: !11641)
!13657 = !DILocalVariable(name: "v", scope: !13658, file: !6760, line: 2169, type: !13, align: 8)
!13658 = distinct !DILexicalBlock(scope: !13637, file: !6760, line: 2169, column: 13)
!13659 = !DILocalVariable(name: "e", scope: !13660, file: !6760, line: 2170, type: !7, align: 8)
!13660 = distinct !DILexicalBlock(scope: !13637, file: !6760, line: 2170, column: 13)
!13661 = !DILocation(line: 2167, column: 15, scope: !13637)
!13662 = !DILocation(line: 2170, column: 17, scope: !13660)
!13663 = !DILocation(line: 2168, column: 15, scope: !13637)
!13664 = !DILocation(line: 2168, column: 9, scope: !13637)
!13665 = !DILocation(line: 2170, column: 23, scope: !13660)
!13666 = !DILocation(line: 2170, column: 48, scope: !13637)
!13667 = !DILocation(line: 2169, column: 16, scope: !13637)
!13668 = !DILocation(line: 2169, column: 16, scope: !13658)
!13669 = !DILocation(line: 2169, column: 22, scope: !13658)
!13670 = !DILocation(line: 2169, column: 45, scope: !13637)
!13671 = !DILocation(line: 2172, column: 6, scope: !13637)
!13672 = distinct !DISubprogram(name: "branch<u8, rustc_demangle::v0::ParseError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb265c32027c10ef6E", scope: !13426, file: !6760, line: 2167, type: !13673, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !1933, retainedNodes: !13689)
!13673 = !DISubroutineType(types: !13674)
!13674 = !{!13675, !1925}
!13675 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, rustc_demangle::v0::ParseError>, u8>", scope: !424, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !13676, templateParams: !14, identifier: "b2b71eddf42d8eceeef6539975028a01")
!13676 = !{!13677}
!13677 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13675, file: !2, size: 16, align: 8, elements: !13678, templateParams: !14, identifier: "dcf4beb8d44b7553bcfd530dac463288", discriminator: !13688)
!13678 = !{!13679, !13684}
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13677, file: !2, baseType: !13680, size: 16, align: 8, extraData: i8 0)
!13680 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13675, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !13681, templateParams: !13683, identifier: "311a3535b7a112e0b615b0f5d535f1b6")
!13681 = !{!13682}
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13680, file: !2, baseType: !13, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!13683 = !{!13543, !13649}
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13677, file: !2, baseType: !13685, size: 16, align: 8, extraData: i8 1)
!13685 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13675, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !13686, templateParams: !13683, identifier: "103569d83afbda88b88c5e21e87f9e4")
!13686 = !{!13687}
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13685, file: !2, baseType: !1736, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!13688 = !DIDerivedType(tag: DW_TAG_member, scope: !13675, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!13689 = !{!13690, !13691, !13693}
!13690 = !DILocalVariable(name: "self", arg: 1, scope: !13672, file: !6760, line: 2167, type: !1925)
!13691 = !DILocalVariable(name: "v", scope: !13692, file: !6760, line: 2169, type: !13, align: 8)
!13692 = distinct !DILexicalBlock(scope: !13672, file: !6760, line: 2169, column: 13)
!13693 = !DILocalVariable(name: "e", scope: !13694, file: !6760, line: 2170, type: !87, align: 8)
!13694 = distinct !DILexicalBlock(scope: !13672, file: !6760, line: 2170, column: 13)
!13695 = !DILocation(line: 2167, column: 15, scope: !13672)
!13696 = !DILocation(line: 2168, column: 15, scope: !13672)
!13697 = !DILocation(line: 2168, column: 9, scope: !13672)
!13698 = !DILocation(line: 2170, column: 17, scope: !13672)
!13699 = !DILocation(line: 2170, column: 17, scope: !13694)
!13700 = !DILocation(line: 2170, column: 23, scope: !13694)
!13701 = !DILocation(line: 2170, column: 48, scope: !13672)
!13702 = !DILocation(line: 2169, column: 16, scope: !13672)
!13703 = !DILocation(line: 2169, column: 16, scope: !13692)
!13704 = !DILocation(line: 2169, column: 22, scope: !13692)
!13705 = !DILocation(line: 2169, column: 45, scope: !13672)
!13706 = !DILocation(line: 2172, column: 6, scope: !13672)
!13707 = distinct !DISubprogram(name: "branch<usize, ()>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb53bd88870b4a46dE", scope: !13426, file: !6760, line: 2167, type: !13708, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !11787, retainedNodes: !13724)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{!13710, !11779}
!13710 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, ()>, usize>", scope: !424, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13711, templateParams: !14, identifier: "1b950b4f1cb4cde9a12e787bd0ba0f8b")
!13711 = !{!13712}
!13712 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13710, file: !2, size: 64, align: 32, elements: !13713, templateParams: !14, identifier: "5f217470cf2f18c0e401574ff1a09793", discriminator: !13723)
!13713 = !{!13714, !13719}
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13712, file: !2, baseType: !13715, size: 64, align: 32, extraData: i32 0)
!13715 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13710, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13716, templateParams: !13718, identifier: "6ddc99390f4618031a095dc4e9d72d55")
!13716 = !{!13717}
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13715, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!13718 = !{!13438, !598}
!13719 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13712, file: !2, baseType: !13720, size: 64, align: 32, extraData: i32 1)
!13720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13710, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13721, templateParams: !13718, identifier: "b8d74c22098e9a0ea242ec8d757f041")
!13721 = !{!13722}
!13722 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13720, file: !2, baseType: !991, align: 8, offset: 32, flags: DIFlagPublic)
!13723 = !DIDerivedType(tag: DW_TAG_member, scope: !13710, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!13724 = !{!13725, !13726, !13728}
!13725 = !DILocalVariable(name: "self", arg: 1, scope: !13707, file: !6760, line: 2167, type: !11779)
!13726 = !DILocalVariable(name: "v", scope: !13727, file: !6760, line: 2169, type: !9, align: 32)
!13727 = distinct !DILexicalBlock(scope: !13707, file: !6760, line: 2169, column: 13)
!13728 = !DILocalVariable(name: "e", scope: !13729, file: !6760, line: 2170, type: !7, align: 8)
!13729 = distinct !DILexicalBlock(scope: !13707, file: !6760, line: 2170, column: 13)
!13730 = !DILocation(line: 2167, column: 15, scope: !13707)
!13731 = !DILocation(line: 2170, column: 17, scope: !13729)
!13732 = !DILocation(line: 2168, column: 15, scope: !13707)
!13733 = !DILocation(line: 2168, column: 9, scope: !13707)
!13734 = !DILocation(line: 2170, column: 23, scope: !13729)
!13735 = !DILocation(line: 2170, column: 48, scope: !13707)
!13736 = !DILocation(line: 2169, column: 16, scope: !13707)
!13737 = !DILocation(line: 2169, column: 16, scope: !13727)
!13738 = !DILocation(line: 2169, column: 22, scope: !13727)
!13739 = !DILocation(line: 2169, column: 45, scope: !13707)
!13740 = !DILocation(line: 2172, column: 6, scope: !13707)
!13741 = distinct !DISubprogram(name: "branch<&str, ()>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hcc4ddfcdc731c1bbE", scope: !13426, file: !6760, line: 2167, type: !13742, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !12400, retainedNodes: !13759)
!13742 = !DISubroutineType(types: !13743)
!13743 = !{!13744, !12392}
!13744 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, ()>, &str>", scope: !424, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13745, templateParams: !14, identifier: "3ce94b9382694467365e9140a9f0027e")
!13745 = !{!13746}
!13746 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13744, file: !2, size: 64, align: 32, elements: !13747, templateParams: !14, identifier: "a8cc1cae316fbe787fe8d5bb76b19405", discriminator: !13758)
!13747 = !{!13748, !13754}
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13746, file: !2, baseType: !13749, size: 64, align: 32)
!13749 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13744, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13750, templateParams: !13752, identifier: "2f8cf3a3909ca1e114d7d6f7631a9b32")
!13750 = !{!13751}
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13749, file: !2, baseType: !659, size: 64, align: 32, flags: DIFlagPublic)
!13752 = !{!13438, !13753}
!13753 = !DITemplateTypeParameter(name: "C", type: !659)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13746, file: !2, baseType: !13755, size: 64, align: 32, extraData: i32 0)
!13755 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13744, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13756, templateParams: !13752, identifier: "2971919582ece13ede0dddee8ddbd08f")
!13756 = !{!13757}
!13757 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13755, file: !2, baseType: !991, align: 8, flags: DIFlagPublic)
!13758 = !DIDerivedType(tag: DW_TAG_member, scope: !13744, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!13759 = !{!13760, !13761, !13763}
!13760 = !DILocalVariable(name: "self", arg: 1, scope: !13741, file: !6760, line: 2167, type: !12392)
!13761 = !DILocalVariable(name: "v", scope: !13762, file: !6760, line: 2169, type: !659, align: 32)
!13762 = distinct !DILexicalBlock(scope: !13741, file: !6760, line: 2169, column: 13)
!13763 = !DILocalVariable(name: "e", scope: !13764, file: !6760, line: 2170, type: !7, align: 8)
!13764 = distinct !DILexicalBlock(scope: !13741, file: !6760, line: 2170, column: 13)
!13765 = !DILocation(line: 2167, column: 15, scope: !13741)
!13766 = !DILocation(line: 2170, column: 17, scope: !13764)
!13767 = !DILocation(line: 2168, column: 15, scope: !13741)
!13768 = !DILocation(line: 2168, column: 9, scope: !13741)
!13769 = !DILocation(line: 2170, column: 23, scope: !13764)
!13770 = !DILocation(line: 2170, column: 48, scope: !13741)
!13771 = !DILocation(line: 2169, column: 16, scope: !13741)
!13772 = !DILocation(line: 2169, column: 16, scope: !13762)
!13773 = !DILocation(line: 2169, column: 22, scope: !13762)
!13774 = !DILocation(line: 2169, column: 45, scope: !13741)
!13775 = !DILocation(line: 2172, column: 6, scope: !13741)
!13776 = distinct !DISubprogram(name: "branch<rustc_demangle::v0::Parser, rustc_demangle::v0::ParseError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd5164492adef2e3cE", scope: !13426, file: !6760, line: 2167, type: !13777, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !2131, retainedNodes: !13794)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{!13779, !2123}
!13779 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, rustc_demangle::v0::ParseError>, rustc_demangle::v0::Parser>", scope: !424, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !13780, templateParams: !14, identifier: "9d3a640e1a7c50d9a5ea9779a7143240")
!13780 = !{!13781}
!13781 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13779, file: !2, size: 128, align: 32, elements: !13782, templateParams: !14, identifier: "5e46168060eb81ead47b3bdd635c2e84", discriminator: !13793)
!13782 = !{!13783, !13789}
!13783 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13781, file: !2, baseType: !13784, size: 128, align: 32)
!13784 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13779, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !13785, templateParams: !13787, identifier: "44db6b37223cf9d98aa5ef8dfda36d24")
!13785 = !{!13786}
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13784, file: !2, baseType: !1704, size: 128, align: 32, flags: DIFlagPublic)
!13787 = !{!13543, !13788}
!13788 = !DITemplateTypeParameter(name: "C", type: !1704)
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13781, file: !2, baseType: !13790, size: 128, align: 32, extraData: i32 0)
!13790 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13779, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !13791, templateParams: !13787, identifier: "34587bb22322c795fbc6ad72a5749ead")
!13791 = !{!13792}
!13792 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13790, file: !2, baseType: !1736, size: 8, align: 8, offset: 32, flags: DIFlagPublic)
!13793 = !DIDerivedType(tag: DW_TAG_member, scope: !13779, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!13794 = !{!13795, !13796, !13798}
!13795 = !DILocalVariable(name: "self", arg: 1, scope: !13776, file: !6760, line: 2167, type: !2123)
!13796 = !DILocalVariable(name: "v", scope: !13797, file: !6760, line: 2169, type: !1704, align: 32)
!13797 = distinct !DILexicalBlock(scope: !13776, file: !6760, line: 2169, column: 13)
!13798 = !DILocalVariable(name: "e", scope: !13799, file: !6760, line: 2170, type: !87, align: 8)
!13799 = distinct !DILexicalBlock(scope: !13776, file: !6760, line: 2170, column: 13)
!13800 = !DILocation(line: 2167, column: 15, scope: !13776)
!13801 = !DILocation(line: 2169, column: 16, scope: !13797)
!13802 = !DILocation(line: 2168, column: 15, scope: !13776)
!13803 = !DILocation(line: 2168, column: 9, scope: !13776)
!13804 = !DILocation(line: 2170, column: 17, scope: !13776)
!13805 = !DILocation(line: 2170, column: 17, scope: !13799)
!13806 = !DILocation(line: 2170, column: 23, scope: !13799)
!13807 = !DILocation(line: 2170, column: 48, scope: !13776)
!13808 = !DILocation(line: 2169, column: 16, scope: !13776)
!13809 = !DILocation(line: 2169, column: 22, scope: !13797)
!13810 = !DILocation(line: 2169, column: 45, scope: !13776)
!13811 = !DILocation(line: 2172, column: 6, scope: !13776)
!13812 = distinct !DISubprogram(name: "branch<char, ()>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hd57a36708ee5cf11E", scope: !13426, file: !6760, line: 2167, type: !13813, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !314, retainedNodes: !13830)
!13813 = !DISubroutineType(types: !13814)
!13814 = !{!13815, !306}
!13815 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, ()>, char>", scope: !424, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !13816, templateParams: !14, identifier: "7b650a092da6cb20643f7d3b65e5f4fc")
!13816 = !{!13817}
!13817 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13815, file: !2, size: 32, align: 32, elements: !13818, templateParams: !14, identifier: "e9a59dbd0faeda2812fae83c9568848", discriminator: !13829)
!13818 = !{!13819, !13825}
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13817, file: !2, baseType: !13820, size: 32, align: 32)
!13820 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13815, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !13821, templateParams: !13823, identifier: "d3df4f83776cb53995c13aae85fcc1b3")
!13821 = !{!13822}
!13822 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13820, file: !2, baseType: !252, size: 32, align: 32, flags: DIFlagPublic)
!13823 = !{!13438, !13824}
!13824 = !DITemplateTypeParameter(name: "C", type: !252)
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13817, file: !2, baseType: !13826, size: 32, align: 32, extraData: i32 1114112)
!13826 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13815, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !13827, templateParams: !13823, identifier: "5c4856480f18e382385ef7302f634e30")
!13827 = !{!13828}
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13826, file: !2, baseType: !991, align: 8, flags: DIFlagPublic)
!13829 = !DIDerivedType(tag: DW_TAG_member, scope: !13815, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!13830 = !{!13831, !13832, !13834}
!13831 = !DILocalVariable(name: "self", arg: 1, scope: !13812, file: !6760, line: 2167, type: !306)
!13832 = !DILocalVariable(name: "v", scope: !13833, file: !6760, line: 2169, type: !252, align: 32)
!13833 = distinct !DILexicalBlock(scope: !13812, file: !6760, line: 2169, column: 13)
!13834 = !DILocalVariable(name: "e", scope: !13835, file: !6760, line: 2170, type: !7, align: 8)
!13835 = distinct !DILexicalBlock(scope: !13812, file: !6760, line: 2170, column: 13)
!13836 = !DILocation(line: 2167, column: 15, scope: !13812)
!13837 = !DILocation(line: 2170, column: 17, scope: !13835)
!13838 = !DILocation(line: 2168, column: 15, scope: !13812)
!13839 = !DILocation(line: 2168, column: 9, scope: !13812)
!13840 = !DILocation(line: 2170, column: 23, scope: !13835)
!13841 = !DILocation(line: 2170, column: 48, scope: !13812)
!13842 = !DILocation(line: 2169, column: 16, scope: !13812)
!13843 = !DILocation(line: 2169, column: 16, scope: !13833)
!13844 = !DILocation(line: 2169, column: 22, scope: !13833)
!13845 = !DILocation(line: 2169, column: 45, scope: !13812)
!13846 = !DILocation(line: 2172, column: 6, scope: !13812)
!13847 = distinct !DISubprogram(name: "branch<usize, core::fmt::Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hfab4e429946d5dacE", scope: !13426, file: !6760, line: 2167, type: !13848, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !4685, retainedNodes: !13864)
!13848 = !DISubroutineType(types: !13849)
!13849 = !{!13850, !4677}
!13850 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, usize>", scope: !424, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13851, templateParams: !14, identifier: "3d6f78cc7b3cd70ebc22ab49cd59ebbd")
!13851 = !{!13852}
!13852 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13850, file: !2, size: 64, align: 32, elements: !13853, templateParams: !14, identifier: "5c3cdfb59373c215c6667b64ea83328a", discriminator: !13863)
!13853 = !{!13854, !13859}
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !13852, file: !2, baseType: !13855, size: 64, align: 32, extraData: i32 0)
!13855 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !13850, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13856, templateParams: !13858, identifier: "b5ef9ad4339f6687be3d5024f068dd29")
!13856 = !{!13857}
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13855, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!13858 = !{!13472, !598}
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !13852, file: !2, baseType: !13860, size: 64, align: 32, extraData: i32 1)
!13860 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !13850, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13861, templateParams: !13858, identifier: "ec87d63a1cba9cb84a1266b9219cb464")
!13861 = !{!13862}
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !13860, file: !2, baseType: !2336, align: 8, offset: 32, flags: DIFlagPublic)
!13863 = !DIDerivedType(tag: DW_TAG_member, scope: !13850, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!13864 = !{!13865, !13866, !13868}
!13865 = !DILocalVariable(name: "self", arg: 1, scope: !13847, file: !6760, line: 2167, type: !4677)
!13866 = !DILocalVariable(name: "v", scope: !13867, file: !6760, line: 2169, type: !9, align: 32)
!13867 = distinct !DILexicalBlock(scope: !13847, file: !6760, line: 2169, column: 13)
!13868 = !DILocalVariable(name: "e", scope: !13869, file: !6760, line: 2170, type: !1089, align: 8)
!13869 = distinct !DILexicalBlock(scope: !13847, file: !6760, line: 2170, column: 13)
!13870 = !DILocation(line: 2167, column: 15, scope: !13847)
!13871 = !DILocation(line: 2170, column: 17, scope: !13869)
!13872 = !DILocation(line: 2168, column: 15, scope: !13847)
!13873 = !DILocation(line: 2168, column: 9, scope: !13847)
!13874 = !DILocation(line: 2170, column: 23, scope: !13869)
!13875 = !DILocation(line: 2170, column: 48, scope: !13847)
!13876 = !DILocation(line: 2169, column: 16, scope: !13847)
!13877 = !DILocation(line: 2169, column: 16, scope: !13867)
!13878 = !DILocation(line: 2169, column: 22, scope: !13867)
!13879 = !DILocation(line: 2169, column: 45, scope: !13847)
!13880 = !DILocation(line: 2172, column: 6, scope: !13847)
!13881 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h9249f5fe1de63aecE", scope: !13882, file: !7077, line: 1171, type: !9595, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !13883)
!13882 = !DINamespace(name: "{impl#33}", scope: !3440)
!13883 = !{!13884, !13885, !13887, !13888, !13890}
!13884 = !DILocalVariable(name: "self", arg: 1, scope: !13881, file: !7077, line: 1171, type: !9597)
!13885 = !DILocalVariable(name: "a", scope: !13886, file: !7077, line: 1175, type: !9, align: 32)
!13886 = distinct !DILexicalBlock(scope: !13881, file: !7077, line: 1175, column: 21)
!13887 = !DILocalVariable(name: "b", scope: !13886, file: !7077, line: 1175, type: !9, align: 32)
!13888 = !DILocalVariable(name: "searcher", scope: !13889, file: !7077, line: 1180, type: !9303, align: 32)
!13889 = distinct !DILexicalBlock(scope: !13881, file: !7077, line: 1180, column: 13)
!13890 = !DILocalVariable(name: "is_long", scope: !13891, file: !7077, line: 1181, type: !706, align: 8)
!13891 = distinct !DILexicalBlock(scope: !13889, file: !7077, line: 1181, column: 17)
!13892 = !DILocation(line: 1171, column: 19, scope: !13881)
!13893 = !DILocation(line: 1172, column: 15, scope: !13881)
!13894 = !DILocation(line: 1172, column: 9, scope: !13881)
!13895 = !DILocation(line: 1180, column: 37, scope: !13881)
!13896 = !DILocation(line: 1180, column: 37, scope: !13889)
!13897 = !DILocation(line: 1181, column: 31, scope: !13889)
!13898 = !DILocation(line: 1181, column: 21, scope: !13891)
!13899 = !DILocation(line: 1184, column: 20, scope: !13891)
!13900 = !DILocation(line: 1174, column: 28, scope: !13881)
!13901 = !DILocation(line: 1174, column: 23, scope: !13881)
!13902 = !DILocation(line: 1174, column: 17, scope: !13881)
!13903 = !DILocation(line: 0, scope: !13904)
!13904 = !DILexicalBlockFile(scope: !13881, file: !626, discriminator: 0)
!13905 = !DILocation(line: 1175, column: 39, scope: !13881)
!13906 = !DILocation(line: 1175, column: 39, scope: !13886)
!13907 = !DILocation(line: 1175, column: 42, scope: !13881)
!13908 = !DILocation(line: 1175, column: 42, scope: !13886)
!13909 = !DILocation(line: 1175, column: 55, scope: !13886)
!13910 = !DILocation(line: 1176, column: 48, scope: !13881)
!13911 = !DILocation(line: 1176, column: 41, scope: !13881)
!13912 = !DILocation(line: 1199, column: 6, scope: !13881)
!13913 = !DILocation(line: 1192, column: 25, scope: !13891)
!13914 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !13915)
!13915 = distinct !DILocation(line: 1192, column: 39, scope: !13891)
!13916 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !13915)
!13917 = !DILocation(line: 1192, column: 39, scope: !13891)
!13918 = !DILocation(line: 1193, column: 25, scope: !13891)
!13919 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !13920)
!13920 = distinct !DILocation(line: 1193, column: 37, scope: !13891)
!13921 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !13920)
!13922 = !DILocation(line: 1193, column: 37, scope: !13891)
!13923 = !DILocation(line: 1191, column: 30, scope: !13891)
!13924 = !DILocation(line: 1186, column: 25, scope: !13891)
!13925 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !13926)
!13926 = distinct !DILocation(line: 1186, column: 39, scope: !13891)
!13927 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !13926)
!13928 = !DILocation(line: 1186, column: 39, scope: !13891)
!13929 = !DILocation(line: 1187, column: 25, scope: !13891)
!13930 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !13931)
!13931 = distinct !DILocation(line: 1187, column: 37, scope: !13891)
!13932 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !13931)
!13933 = !DILocation(line: 1187, column: 37, scope: !13891)
!13934 = !DILocation(line: 1185, column: 30, scope: !13891)
!13935 = distinct !DISubprogram(name: "next", linkageName: "_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17hba2273dbc027c833E", scope: !13882, file: !7077, line: 1119, type: !13936, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !13938)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!9431, !9597}
!13938 = !{!13939, !13940, !13943, !13945, !13947, !13949, !13951, !13953, !13955, !13956}
!13939 = !DILocalVariable(name: "self", arg: 1, scope: !13935, file: !7077, line: 1119, type: !9597)
!13940 = !DILocalVariable(name: "searcher", scope: !13941, file: !7077, line: 1121, type: !13942, align: 32)
!13941 = distinct !DILexicalBlock(scope: !13935, file: !7077, line: 1121, column: 13)
!13942 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::EmptyNeedle", baseType: !8871, size: 32, align: 32, dwarfAddressSpace: 0)
!13943 = !DILocalVariable(name: "is_match", scope: !13944, file: !7077, line: 1126, type: !706, align: 8)
!13944 = distinct !DILexicalBlock(scope: !13941, file: !7077, line: 1126, column: 17)
!13945 = !DILocalVariable(name: "pos", scope: !13946, file: !7077, line: 1128, type: !9, align: 32)
!13946 = distinct !DILexicalBlock(scope: !13944, file: !7077, line: 1128, column: 17)
!13947 = !DILocalVariable(name: "ch", scope: !13948, file: !7077, line: 1135, type: !252, align: 32)
!13948 = distinct !DILexicalBlock(scope: !13946, file: !7077, line: 1135, column: 21)
!13949 = !DILocalVariable(name: "searcher", scope: !13950, file: !7077, line: 1141, type: !9303, align: 32)
!13950 = distinct !DILexicalBlock(scope: !13935, file: !7077, line: 1141, column: 13)
!13951 = !DILocalVariable(name: "is_long", scope: !13952, file: !7077, line: 1150, type: !706, align: 8)
!13952 = distinct !DILexicalBlock(scope: !13950, file: !7077, line: 1150, column: 17)
!13953 = !DILocalVariable(name: "a", scope: !13954, file: !7077, line: 1156, type: !9, align: 32)
!13954 = distinct !DILexicalBlock(scope: !13952, file: !7077, line: 1156, column: 21)
!13955 = !DILocalVariable(name: "b", scope: !13954, file: !7077, line: 1156, type: !9, align: 32)
!13956 = !DILocalVariable(name: "otherwise", scope: !13957, file: !7077, line: 1164, type: !9431, align: 32)
!13957 = distinct !DILexicalBlock(scope: !13952, file: !7077, line: 1164, column: 21)
!13958 = !DILocation(line: 1119, column: 13, scope: !13935)
!13959 = !DILocation(line: 1164, column: 21, scope: !13957)
!13960 = !DILocation(line: 1156, column: 43, scope: !13954)
!13961 = !DILocation(line: 1120, column: 15, scope: !13935)
!13962 = !DILocation(line: 1120, column: 9, scope: !13935)
!13963 = !DILocation(line: 1141, column: 37, scope: !13935)
!13964 = !DILocation(line: 1141, column: 37, scope: !13950)
!13965 = !DILocation(line: 1147, column: 20, scope: !13950)
!13966 = !DILocation(line: 1147, column: 41, scope: !13950)
!13967 = !DILocation(line: 1147, column: 55, scope: !13950)
!13968 = !DILocation(line: 1121, column: 36, scope: !13935)
!13969 = !DILocation(line: 1121, column: 36, scope: !13941)
!13970 = !DILocation(line: 1122, column: 20, scope: !13941)
!13971 = !DILocation(line: 1126, column: 32, scope: !13941)
!13972 = !DILocation(line: 1126, column: 21, scope: !13944)
!13973 = !DILocation(line: 1127, column: 41, scope: !13944)
!13974 = !DILocation(line: 1127, column: 17, scope: !13944)
!13975 = !DILocation(line: 1128, column: 27, scope: !13944)
!13976 = !DILocation(line: 1128, column: 21, scope: !13946)
!13977 = !DILocation(line: 1129, column: 23, scope: !13946)
!13978 = !DILocation(line: 1129, column: 36, scope: !13946)
!13979 = !DILocation(line: 1129, column: 44, scope: !13946)
!13980 = !DILocation(line: 1129, column: 52, scope: !13946)
!13981 = !DILocation(line: 1130, column: 26, scope: !13946)
!13982 = !DILocation(line: 1123, column: 28, scope: !13941)
!13983 = !DILocation(line: 0, scope: !13984)
!13984 = !DILexicalBlockFile(scope: !13935, file: !626, discriminator: 0)
!13985 = !DILocation(line: 1129, column: 17, scope: !13946)
!13986 = !DILocation(line: 1130, column: 38, scope: !13946)
!13987 = !DILocation(line: 1130, column: 64, scope: !13946)
!13988 = !DILocation(line: 1135, column: 26, scope: !13946)
!13989 = !DILocation(line: 1135, column: 26, scope: !13948)
!13990 = !DILocation(line: 1136, column: 49, scope: !13948)
!13991 = !DILocation(line: 1136, column: 25, scope: !13948)
!13992 = !DILocation(line: 1132, column: 25, scope: !13946)
!13993 = !DILocation(line: 1133, column: 25, scope: !13946)
!13994 = !DILocation(line: 1168, column: 6, scope: !13935)
!13995 = !DILocation(line: 1137, column: 49, scope: !13948)
!13996 = !DILocation(line: 1137, column: 25, scope: !13948)
!13997 = !DILocation(line: 1138, column: 21, scope: !13946)
!13998 = !DILocation(line: 1150, column: 31, scope: !13950)
!13999 = !DILocation(line: 1150, column: 21, scope: !13952)
!14000 = !DILocation(line: 1152, column: 21, scope: !13952)
!14001 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !14002)
!14002 = distinct !DILocation(line: 1152, column: 35, scope: !13952)
!14003 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !14002)
!14004 = !DILocation(line: 1152, column: 35, scope: !13952)
!14005 = !DILocation(line: 1153, column: 21, scope: !13952)
!14006 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !14007)
!14007 = distinct !DILocation(line: 1153, column: 33, scope: !13952)
!14008 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !14007)
!14009 = !DILocation(line: 1153, column: 33, scope: !13952)
!14010 = !DILocation(line: 1151, column: 32, scope: !13952)
!14011 = !DILocation(line: 1151, column: 23, scope: !13952)
!14012 = !DILocation(line: 1151, column: 17, scope: !13952)
!14013 = !DILocation(line: 1148, column: 28, scope: !13950)
!14014 = !DILocation(line: 1156, column: 40, scope: !13952)
!14015 = !DILocation(line: 1156, column: 40, scope: !13954)
!14016 = !DILocation(line: 1156, column: 43, scope: !13952)
!14017 = !DILocation(line: 1158, column: 25, scope: !13954)
!14018 = !DILocation(line: 1164, column: 34, scope: !13957)
!14019 = !DILocation(line: 1164, column: 42, scope: !13952)
!14020 = !DILocation(line: 1158, column: 32, scope: !13954)
!14021 = !DILocation(line: 1158, column: 63, scope: !13954)
!14022 = !DILocation(line: 1158, column: 46, scope: !13954)
!14023 = !DILocation(line: 1159, column: 29, scope: !13954)
!14024 = !DILocation(line: 1161, column: 54, scope: !13954)
!14025 = !DILocation(line: 1161, column: 57, scope: !13954)
!14026 = !DILocation(line: 1161, column: 45, scope: !13954)
!14027 = !DILocation(line: 1161, column: 25, scope: !13954)
!14028 = !DILocation(line: 1162, column: 47, scope: !13954)
!14029 = !DILocation(line: 1162, column: 25, scope: !13954)
!14030 = !DILocation(line: 1163, column: 21, scope: !13952)
!14031 = distinct !DISubprogram(name: "any<rustc_demangle::legacy::demangle::{closure_env#0}>", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h4dec297513eb01a7E", scope: !14032, file: !9062, line: 327, type: !14033, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14038, retainedNodes: !14035)
!14032 = !DINamespace(name: "{impl#9}", scope: !521)
!14033 = !DISubroutineType(types: !14034)
!14034 = !{!706, !10880, !449}
!14035 = !{!14036, !14037}
!14036 = !DILocalVariable(name: "self", arg: 1, scope: !14031, file: !9062, line: 327, type: !10880)
!14037 = !DILocalVariable(name: "f", arg: 2, scope: !14031, file: !9062, line: 327, type: !449)
!14038 = !{!10286}
!14039 = !DILocation(line: 327, column: 15, scope: !14031)
!14040 = !DILocation(line: 327, column: 26, scope: !14031)
!14041 = !DILocation(line: 331, column: 16, scope: !14031)
!14042 = !DILocation(line: 332, column: 6, scope: !14031)
!14043 = distinct !DISubprogram(name: "any<rustc_demangle::v0::demangle::{closure_env#0}>", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17ha7ff31e633c9850aE", scope: !14032, file: !9062, line: 327, type: !14044, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14049, retainedNodes: !14046)
!14044 = !DISubroutineType(types: !14045)
!14045 = !{!706, !10880, !471}
!14046 = !{!14047, !14048}
!14047 = !DILocalVariable(name: "self", arg: 1, scope: !14043, file: !9062, line: 327, type: !10880)
!14048 = !DILocalVariable(name: "f", arg: 2, scope: !14043, file: !9062, line: 327, type: !471)
!14049 = !{!10300}
!14050 = !DILocation(line: 327, column: 15, scope: !14043)
!14051 = !DILocation(line: 327, column: 26, scope: !14043)
!14052 = !DILocation(line: 331, column: 16, scope: !14043)
!14053 = !DILocation(line: 332, column: 6, scope: !14043)
!14054 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h62f550c9487e9adaE", scope: !14032, file: !9062, line: 294, type: !14055, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14057)
!14055 = !DISubroutineType(types: !14056)
!14056 = !{!365, !10880}
!14057 = !{!14058}
!14058 = !DILocalVariable(name: "self", arg: 1, scope: !14054, file: !9062, line: 294, type: !10880)
!14059 = !DILocation(line: 294, column: 13, scope: !14054)
!14060 = !DILocation(line: 295, column: 16, scope: !14054)
!14061 = !DILocation(line: 296, column: 6, scope: !14054)
!14062 = distinct !DISubprogram(name: "rposition<rustc_demangle::v0::{impl#4}::ident::{closure_env#0}>", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9rposition17hc3e37590b7f78529E", scope: !14032, file: !9062, line: 351, type: !14063, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14068, retainedNodes: !14065)
!14063 = !DISubroutineType(types: !14064)
!14064 = !{!6624, !10880, !609}
!14065 = !{!14066, !14067}
!14066 = !DILocalVariable(name: "self", arg: 1, scope: !14062, file: !9062, line: 351, type: !10880)
!14067 = !DILocalVariable(name: "predicate", arg: 2, scope: !14062, file: !9062, line: 351, type: !609)
!14068 = !{!10685}
!14069 = !DILocation(line: 351, column: 21, scope: !14062)
!14070 = !DILocation(line: 351, column: 32, scope: !14062)
!14071 = !DILocation(line: 355, column: 16, scope: !14062)
!14072 = !DILocation(line: 356, column: 6, scope: !14062)
!14073 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4661398863890a7fE", scope: !14074, file: !9062, line: 39, type: !14075, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14077)
!14074 = !DINamespace(name: "{impl#0}", scope: !521)
!14075 = !DISubroutineType(types: !14076)
!14076 = !{!243, !10093}
!14077 = !{!14078}
!14078 = !DILocalVariable(name: "self", arg: 1, scope: !14073, file: !9062, line: 39, type: !10093)
!14079 = !DILocation(line: 39, column: 13, scope: !14073)
!14080 = !DILocation(line: 42, column: 18, scope: !14073)
!14081 = !DILocation(line: 42, column: 50, scope: !14073)
!14082 = !DILocation(line: 43, column: 6, scope: !14073)
!14083 = distinct !DISubprogram(name: "count", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$5count17h065e5dce4b5782bfE", scope: !14074, file: !9062, line: 46, type: !14084, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14086)
!14084 = !DISubroutineType(types: !14085)
!14085 = !{!9, !781}
!14086 = !{!14087}
!14087 = !DILocalVariable(name: "self", arg: 1, scope: !14083, file: !9062, line: 46, type: !781)
!14088 = !DILocation(line: 46, column: 14, scope: !14083)
!14089 = !DILocation(line: 47, column: 40, scope: !14083)
!14090 = !DILocation(line: 47, column: 9, scope: !14083)
!14091 = !DILocation(line: 48, column: 6, scope: !14083)
!14092 = distinct !DISubprogram(name: "next_match", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4faa49d588e2b0b4E", scope: !14093, file: !7077, line: 433, type: !14094, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14097)
!14093 = !DINamespace(name: "{impl#1}", scope: !3440)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{!9290, !14096}
!14096 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharSearcher", baseType: !3439, size: 32, align: 32, dwarfAddressSpace: 0)
!14097 = !{!14098, !14099, !14101, !14114, !14116, !14118, !14120, !14122}
!14098 = !DILocalVariable(name: "self", arg: 1, scope: !14092, file: !7077, line: 433, type: !14096)
!14099 = !DILocalVariable(name: "bytes", scope: !14100, file: !7077, line: 436, type: !281, align: 32)
!14100 = distinct !DILexicalBlock(scope: !14092, file: !7077, line: 436, column: 13)
!14101 = !DILocalVariable(name: "residual", scope: !14102, file: !7077, line: 436, type: !14103, align: 8)
!14102 = distinct !DILexicalBlock(scope: !14092, file: !7077, line: 436, column: 84)
!14103 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !244, file: !2, align: 8, flags: DIFlagPublic, elements: !14104, templateParams: !14, identifier: "9b6c9073db236d9ff1d56f0661f0ec14")
!14104 = !{!14105}
!14105 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14103, file: !2, align: 8, elements: !14106, templateParams: !14, identifier: "a233f30efe3bb8b1e75bd84589e6176e")
!14106 = !{!14107, !14110}
!14107 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !14105, file: !2, baseType: !14108, align: 8)
!14108 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !14103, file: !2, align: 8, flags: DIFlagPublic, elements: !14, templateParams: !14109, identifier: "6cefa6fa2abaa24ef975313467073b05")
!14109 = !{!1004}
!14110 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !14105, file: !2, baseType: !14111, align: 8)
!14111 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !14103, file: !2, align: 8, flags: DIFlagPublic, elements: !14112, templateParams: !14109, identifier: "7799c6cbd728f2f9bec7debffe6d8503")
!14112 = !{!14113}
!14113 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14111, file: !2, baseType: !999, align: 8, flags: DIFlagPublic)
!14114 = !DILocalVariable(name: "val", scope: !14115, file: !7077, line: 436, type: !281, align: 32)
!14115 = distinct !DILexicalBlock(scope: !14092, file: !7077, line: 436, column: 25)
!14116 = !DILocalVariable(name: "last_byte", scope: !14117, file: !7077, line: 439, type: !13, align: 8)
!14117 = distinct !DILexicalBlock(scope: !14100, file: !7077, line: 439, column: 13)
!14118 = !DILocalVariable(name: "index", scope: !14119, file: !7077, line: 440, type: !9, align: 32)
!14119 = distinct !DILexicalBlock(scope: !14117, file: !7077, line: 440, column: 67)
!14120 = !DILocalVariable(name: "found_char", scope: !14121, file: !7077, line: 460, type: !9, align: 32)
!14121 = distinct !DILexicalBlock(scope: !14119, file: !7077, line: 460, column: 21)
!14122 = !DILocalVariable(name: "slice", scope: !14123, file: !7077, line: 461, type: !281, align: 32)
!14123 = distinct !DILexicalBlock(scope: !14121, file: !7077, line: 461, column: 96)
!14124 = !DILocation(line: 433, column: 19, scope: !14092)
!14125 = !DILocation(line: 461, column: 33, scope: !14123)
!14126 = !DILocation(line: 436, column: 84, scope: !14102)
!14127 = !DILocation(line: 434, column: 9, scope: !14092)
!14128 = !DILocation(line: 436, column: 25, scope: !14092)
!14129 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 436, column: 39, scope: !14092)
!14131 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !14130)
!14132 = !DILocation(line: 436, column: 39, scope: !14092)
!14133 = !DILocation(line: 436, column: 54, scope: !14092)
!14134 = !DILocation(line: 436, column: 67, scope: !14092)
!14135 = !DILocation(line: 436, column: 50, scope: !14092)
!14136 = !DILocation(line: 436, column: 25, scope: !14102)
!14137 = !DILocation(line: 436, column: 17, scope: !14100)
!14138 = !DILocation(line: 436, column: 25, scope: !14115)
!14139 = !DILocation(line: 439, column: 39, scope: !14100)
!14140 = !DILocation(line: 439, column: 76, scope: !14100)
!14141 = !DILocation(line: 439, column: 71, scope: !14100)
!14142 = !DILocation(line: 439, column: 57, scope: !14100)
!14143 = !DILocation(line: 439, column: 38, scope: !14100)
!14144 = !DILocation(line: 439, column: 17, scope: !14117)
!14145 = !DILocation(line: 440, column: 34, scope: !14119)
!14146 = !DILocation(line: 440, column: 20, scope: !14119)
!14147 = !DILocation(line: 440, column: 25, scope: !14119)
!14148 = !DILocation(line: 458, column: 32, scope: !14119)
!14149 = !DILocation(line: 469, column: 31, scope: !14117)
!14150 = !DILocation(line: 469, column: 17, scope: !14117)
!14151 = !DILocation(line: 470, column: 24, scope: !14117)
!14152 = !DILocation(line: 470, column: 17, scope: !14117)
!14153 = !DILocation(line: 458, column: 17, scope: !14119)
!14154 = !DILocation(line: 459, column: 20, scope: !14119)
!14155 = !DILocation(line: 459, column: 40, scope: !14119)
!14156 = !DILocation(line: 460, column: 38, scope: !14119)
!14157 = !DILocation(line: 460, column: 57, scope: !14119)
!14158 = !DILocation(line: 460, column: 25, scope: !14121)
!14159 = !DILocation(line: 461, column: 42, scope: !14123)
!14160 = !DILocation(line: 486, column: 27, scope: !887, inlinedAt: !14161)
!14161 = distinct !DILocation(line: 461, column: 56, scope: !14123)
!14162 = !DILocation(line: 489, column: 6, scope: !887, inlinedAt: !14161)
!14163 = !DILocation(line: 461, column: 56, scope: !14123)
!14164 = !DILocation(line: 461, column: 83, scope: !14123)
!14165 = !DILocation(line: 461, column: 67, scope: !14123)
!14166 = !DILocation(line: 461, column: 28, scope: !14123)
!14167 = !DILocation(line: 462, column: 38, scope: !14123)
!14168 = !DILocation(line: 462, column: 64, scope: !14123)
!14169 = !DILocation(line: 462, column: 55, scope: !14123)
!14170 = !DILocation(line: 462, column: 37, scope: !14123)
!14171 = !DILocation(line: 462, column: 28, scope: !14123)
!14172 = !DILocation(line: 463, column: 54, scope: !14123)
!14173 = !DILocation(line: 463, column: 36, scope: !14123)
!14174 = !DILocation(line: 0, scope: !14175)
!14175 = !DILexicalBlockFile(scope: !14117, file: !626, discriminator: 0)
!14176 = !DILocation(line: 473, column: 6, scope: !14092)
!14177 = distinct !DISubprogram(name: "haystack", linkageName: "_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17hdd1f51eba4824427E", scope: !14093, file: !7077, line: 402, type: !14178, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14181)
!14178 = !DISubroutineType(types: !14179)
!14179 = !{!659, !14180}
!14180 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::pattern::CharSearcher", baseType: !3439, size: 32, align: 32, dwarfAddressSpace: 0)
!14181 = !{!14182}
!14182 = !DILocalVariable(name: "self", arg: 1, scope: !14177, file: !7077, line: 402, type: !14180)
!14183 = !DILocation(line: 402, column: 17, scope: !14177)
!14184 = !DILocation(line: 403, column: 9, scope: !14177)
!14185 = !DILocation(line: 404, column: 6, scope: !14177)
!14186 = distinct !DISubprogram(name: "next", linkageName: "_ZN82_$LT$core..char..EscapeDebug$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb25337508d5d68c8E", scope: !14187, file: !9642, line: 331, type: !14188, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14191)
!14187 = !DINamespace(name: "{impl#11}", scope: !5482)
!14188 = !DISubroutineType(types: !14189)
!14189 = !{!243, !14190}
!14190 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::EscapeDebug", baseType: !5481, size: 32, align: 32, dwarfAddressSpace: 0)
!14191 = !{!14192}
!14192 = !DILocalVariable(name: "self", arg: 1, scope: !14186, file: !9642, line: 331, type: !14190)
!14193 = !DILocation(line: 331, column: 13, scope: !14186)
!14194 = !DILocation(line: 332, column: 16, scope: !14186)
!14195 = !DILocation(line: 333, column: 6, scope: !14186)
!14196 = distinct !DISubprogram(name: "clone<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", linkageName: "_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h0f88fa48cf5f9b33E", scope: !14197, file: !236, line: 60, type: !14198, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !297, retainedNodes: !14201)
!14197 = !DINamespace(name: "{impl#13}", scope: !238)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!270, !14200}
!14200 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#1}>", baseType: !270, size: 32, align: 32, dwarfAddressSpace: 0)
!14201 = !{!14202}
!14202 = !DILocalVariable(name: "self", arg: 1, scope: !14196, file: !236, line: 60, type: !14200)
!14203 = !DILocation(line: 60, column: 10, scope: !14196)
!14204 = !DILocation(line: 63, column: 5, scope: !14196)
!14205 = !DILocation(line: 64, column: 5, scope: !14196)
!14206 = !DILocation(line: 60, column: 15, scope: !14196)
!14207 = distinct !DISubprogram(name: "clone<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", linkageName: "_ZN82_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h6bc1593a6e92bfc8E", scope: !14197, file: !236, line: 60, type: !14208, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !292, retainedNodes: !14211)
!14208 = !DISubroutineType(types: !14209)
!14209 = !{!273, !14210}
!14210 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::slice::iter::ChunksExact<u8>, rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#0}>", baseType: !273, size: 32, align: 32, dwarfAddressSpace: 0)
!14211 = !{!14212}
!14212 = !DILocalVariable(name: "self", arg: 1, scope: !14207, file: !236, line: 60, type: !14210)
!14213 = !DILocation(line: 60, column: 10, scope: !14207)
!14214 = !DILocation(line: 63, column: 5, scope: !14207)
!14215 = !DILocation(line: 64, column: 5, scope: !14207)
!14216 = !DILocation(line: 60, column: 15, scope: !14207)
!14217 = distinct !DISubprogram(name: "len<core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>", linkageName: "_ZN83_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h77442048bee26049E", scope: !14219, file: !14218, line: 155, type: !14221, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14226, retainedNodes: !14224)
!14218 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/exact_size.rs", directory: "", checksumkind: CSK_MD5, checksum: "b65df84932b5452054a09996bbfca6e2")
!14219 = !DINamespace(name: "{impl#0}", scope: !14220)
!14220 = !DINamespace(name: "exact_size", scope: !446)
!14221 = !DISubroutineType(types: !14222)
!14222 = !{!9, !14223}
!14223 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&mut core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>", baseType: !392, size: 32, align: 32, dwarfAddressSpace: 0)
!14224 = !{!14225}
!14225 = !DILocalVariable(name: "self", arg: 1, scope: !14217, file: !14218, line: 155, type: !14223)
!14226 = !{!14227}
!14227 = !DITemplateTypeParameter(name: "I", type: !393)
!14228 = !DILocation(line: 155, column: 12, scope: !14217)
!14229 = !DILocation(line: 156, column: 9, scope: !14217)
!14230 = !DILocation(line: 156, column: 18, scope: !14217)
!14231 = !DILocation(line: 157, column: 6, scope: !14217)
!14232 = distinct !DISubprogram(name: "write_str<&mut core::fmt::Formatter>", linkageName: "_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h15d60bbff95f40b2E", scope: !12436, file: !626, line: 301, type: !14233, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !72, retainedNodes: !14235)
!14233 = !DISubroutineType(types: !14234)
!14234 = !{!1079, !7367, !659}
!14235 = !{!14236, !14237}
!14236 = !DILocalVariable(name: "self", arg: 1, scope: !14232, file: !626, line: 301, type: !7367)
!14237 = !DILocalVariable(name: "s", arg: 2, scope: !14232, file: !626, line: 301, type: !659)
!14238 = !DILocation(line: 301, column: 18, scope: !14232)
!14239 = !DILocation(line: 301, column: 29, scope: !14232)
!14240 = !DILocation(line: 302, column: 26, scope: !14232)
!14241 = !DILocation(line: 304, column: 14, scope: !14232)
!14242 = !DILocation(line: 302, column: 9, scope: !14232)
!14243 = !DILocation(line: 306, column: 15, scope: !14232)
!14244 = !DILocation(line: 306, column: 9, scope: !14232)
!14245 = !DILocation(line: 308, column: 40, scope: !14232)
!14246 = !DILocation(line: 308, column: 54, scope: !14232)
!14247 = !DILocation(line: 307, column: 22, scope: !14232)
!14248 = !DILocation(line: 307, column: 33, scope: !14232)
!14249 = !DILocation(line: 310, column: 6, scope: !14232)
!14250 = distinct !DISubprogram(name: "{closure#0}<&mut core::fmt::Formatter>", linkageName: "_ZN83_$LT$rustc_demangle..SizeLimitedFmtAdapter$LT$F$GT$$u20$as$u20$core..fmt..Write$GT$9write_str28_$u7b$$u7b$closure$u7d$$u7d$17h6a74e2e22fa31566E", scope: !12435, file: !626, line: 304, type: !14251, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !72, retainedNodes: !14253)
!14251 = !DISubroutineType(types: !14252)
!14252 = !{!29, !12434, !9}
!14253 = !{!14254, !14255}
!14254 = !DILocalVariable(name: "r", arg: 2, scope: !14250, file: !626, line: 304, type: !9)
!14255 = !DILocalVariable(name: "s", scope: !14250, file: !626, line: 301, type: !659, align: 32)
!14256 = !DILocation(line: 301, column: 29, scope: !14250)
!14257 = !DILocation(line: 304, column: 24, scope: !14250)
!14258 = !DILocation(line: 304, column: 41, scope: !14250)
!14259 = !DILocation(line: 304, column: 43, scope: !14250)
!14260 = !DILocation(line: 304, column: 29, scope: !14250)
!14261 = !DILocation(line: 304, column: 50, scope: !14250)
!14262 = !DILocation(line: 304, column: 75, scope: !14250)
!14263 = distinct !DISubprogram(name: "clone<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>", linkageName: "_ZN84_$LT$core..iter..sources..from_fn..FromFn$LT$F$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h316aad9d6a4fa6c9E", scope: !14264, file: !486, line: 58, type: !14265, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !300, retainedNodes: !14268)
!14264 = !DINamespace(name: "{impl#2}", scope: !263)
!14265 = !DISubroutineType(types: !14266)
!14266 = !{!262, !14267}
!14267 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::sources::from_fn::FromFn<rustc_demangle::v0::{impl#3}::try_parse_str_chars::{closure_env#2}>", baseType: !262, size: 32, align: 32, dwarfAddressSpace: 0)
!14268 = !{!14269}
!14269 = !DILocalVariable(name: "self", arg: 1, scope: !14263, file: !486, line: 58, type: !14267)
!14270 = !DILocation(line: 58, column: 10, scope: !14263)
!14271 = !DILocation(line: 60, column: 22, scope: !14263)
!14272 = !DILocation(line: 58, column: 15, scope: !14263)
!14273 = distinct !DISubprogram(name: "use_early_reject", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17hc45f832b67faeefcE", scope: !14274, file: !7077, line: 1732, type: !12581, scopeLine: 1732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!14274 = !DINamespace(name: "{impl#36}", scope: !3440)
!14275 = !DILocation(line: 1734, column: 6, scope: !14273)
!14276 = distinct !DISubprogram(name: "matching", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hd4ee2994ec45a1b7E", scope: !14274, file: !7077, line: 1740, type: !14277, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14279)
!14277 = !DISubroutineType(types: !14278)
!14278 = !{!9290, !9, !9}
!14279 = !{!14280, !14281}
!14280 = !DILocalVariable(name: "a", arg: 1, scope: !14276, file: !7077, line: 1740, type: !9)
!14281 = !DILocalVariable(name: "b", arg: 2, scope: !14276, file: !7077, line: 1740, type: !9)
!14282 = !DILocation(line: 1740, column: 17, scope: !14276)
!14283 = !DILocation(line: 1740, column: 27, scope: !14276)
!14284 = !DILocation(line: 1741, column: 9, scope: !14276)
!14285 = !DILocation(line: 1742, column: 6, scope: !14276)
!14286 = distinct !DISubprogram(name: "rejecting", linkageName: "_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h65b9bb6d9416ffa0E", scope: !14274, file: !7077, line: 1736, type: !14277, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14287)
!14287 = !{!14288, !14289}
!14288 = !DILocalVariable(name: "_a", arg: 1, scope: !14286, file: !7077, line: 1736, type: !9)
!14289 = !DILocalVariable(name: "_b", arg: 2, scope: !14286, file: !7077, line: 1736, type: !9)
!14290 = !DILocation(line: 1736, column: 18, scope: !14286)
!14291 = !DILocation(line: 1736, column: 29, scope: !14286)
!14292 = !DILocation(line: 1737, column: 9, scope: !14286)
!14293 = !DILocation(line: 1738, column: 6, scope: !14286)
!14294 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN86_$LT$core..option..Item$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha5a296364cec88a3E", scope: !14295, file: !807, line: 2412, type: !14296, scopeLine: 2412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5456, retainedNodes: !14299)
!14295 = !DINamespace(name: "{impl#18}", scope: !244)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{!243, !14298}
!14298 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Item<char>", baseType: !5453, size: 32, align: 32, dwarfAddressSpace: 0)
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "self", arg: 1, scope: !14294, file: !807, line: 2412, type: !14298)
!14301 = !DILocation(line: 2412, column: 13, scope: !14294)
!14302 = !DILocation(line: 2413, column: 18, scope: !14294)
!14303 = !DILocation(line: 2414, column: 6, scope: !14294)
!14304 = distinct !DISubprogram(name: "next", linkageName: "_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc8bc538c53a8f8d4E", scope: !14305, file: !9062, line: 185, type: !14306, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14326)
!14305 = !DINamespace(name: "{impl#5}", scope: !521)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{!14308, !14325}
!14308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !244, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14309, templateParams: !14, identifier: "2a60c431e512f23a518e91c7d28dbb7c")
!14309 = !{!14310}
!14310 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14308, file: !2, size: 64, align: 32, elements: !14311, templateParams: !14, identifier: "fe5d922ac8c44029f1accb5aa8bc6b7a", discriminator: !14324)
!14311 = !{!14312, !14320}
!14312 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !14310, file: !2, baseType: !14313, size: 64, align: 32, extraData: i32 1114112)
!14313 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !14308, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14, templateParams: !14314, identifier: "d964fc557d309c02335c26811a136383")
!14314 = !{!14315}
!14315 = !DITemplateTypeParameter(name: "T", type: !14316)
!14316 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 64, align: 32, elements: !14317, templateParams: !14, identifier: "c5c06f363cf05391c7c1f3cdf0feb2c6")
!14317 = !{!14318, !14319}
!14318 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14316, file: !2, baseType: !9, size: 32, align: 32)
!14319 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !14316, file: !2, baseType: !252, size: 32, align: 32, offset: 32)
!14320 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !14310, file: !2, baseType: !14321, size: 64, align: 32)
!14321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !14308, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14322, templateParams: !14314, identifier: "6e427c2853410edb28a72557408a75f")
!14322 = !{!14323}
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14321, file: !2, baseType: !14316, size: 64, align: 32, flags: DIFlagPublic)
!14324 = !DIDerivedType(tag: DW_TAG_member, scope: !14308, file: !2, baseType: !48, size: 32, align: 32, offset: 32, flags: DIFlagArtificial)
!14325 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::CharIndices", baseType: !7092, size: 32, align: 32, dwarfAddressSpace: 0)
!14326 = !{!14327, !14328, !14330, !14332, !14334}
!14327 = !DILocalVariable(name: "self", arg: 1, scope: !14304, file: !9062, line: 185, type: !14325)
!14328 = !DILocalVariable(name: "pre_len", scope: !14329, file: !9062, line: 186, type: !9, align: 32)
!14329 = distinct !DILexicalBlock(scope: !14304, file: !9062, line: 186, column: 9)
!14330 = !DILocalVariable(name: "ch", scope: !14331, file: !9062, line: 189, type: !252, align: 32)
!14331 = distinct !DILexicalBlock(scope: !14329, file: !9062, line: 189, column: 13)
!14332 = !DILocalVariable(name: "index", scope: !14333, file: !9062, line: 190, type: !9, align: 32)
!14333 = distinct !DILexicalBlock(scope: !14331, file: !9062, line: 190, column: 17)
!14334 = !DILocalVariable(name: "len", scope: !14335, file: !9062, line: 191, type: !9, align: 32)
!14335 = distinct !DILexicalBlock(scope: !14333, file: !9062, line: 191, column: 17)
!14336 = !DILocation(line: 185, column: 13, scope: !14304)
!14337 = !DILocation(line: 141, column: 20, scope: !564, inlinedAt: !14338)
!14338 = distinct !DILocation(line: 186, column: 38, scope: !14304)
!14339 = !DILocation(line: 33, column: 72, scope: !564, inlinedAt: !14338)
!14340 = !DILocation(line: 33, column: 33, scope: !564, inlinedAt: !14338)
!14341 = !DILocation(line: 33, column: 17, scope: !574, inlinedAt: !14338)
!14342 = !DILocation(line: 57, column: 51, scope: !574, inlinedAt: !14338)
!14343 = !DILocation(line: 57, column: 30, scope: !574, inlinedAt: !14338)
!14344 = !DILocation(line: 143, column: 14, scope: !564, inlinedAt: !14338)
!14345 = !DILocation(line: 186, column: 38, scope: !14304)
!14346 = !DILocation(line: 186, column: 13, scope: !14329)
!14347 = !DILocation(line: 187, column: 25, scope: !14329)
!14348 = !DILocation(line: 187, column: 15, scope: !14329)
!14349 = !DILocation(line: 187, column: 9, scope: !14329)
!14350 = !DILocation(line: 189, column: 18, scope: !14329)
!14351 = !DILocation(line: 189, column: 18, scope: !14331)
!14352 = !DILocation(line: 190, column: 29, scope: !14331)
!14353 = !DILocation(line: 190, column: 21, scope: !14333)
!14354 = !DILocation(line: 141, column: 20, scope: !564, inlinedAt: !14355)
!14355 = distinct !DILocation(line: 191, column: 42, scope: !14333)
!14356 = !DILocation(line: 33, column: 72, scope: !564, inlinedAt: !14355)
!14357 = !DILocation(line: 33, column: 33, scope: !564, inlinedAt: !14355)
!14358 = !DILocation(line: 33, column: 17, scope: !574, inlinedAt: !14355)
!14359 = !DILocation(line: 57, column: 51, scope: !574, inlinedAt: !14355)
!14360 = !DILocation(line: 57, column: 30, scope: !574, inlinedAt: !14355)
!14361 = !DILocation(line: 143, column: 14, scope: !564, inlinedAt: !14355)
!14362 = !DILocation(line: 191, column: 42, scope: !14333)
!14363 = !DILocation(line: 191, column: 21, scope: !14335)
!14364 = !DILocation(line: 192, column: 38, scope: !14335)
!14365 = !DILocation(line: 188, column: 21, scope: !14329)
!14366 = !DILocation(line: 196, column: 6, scope: !14304)
!14367 = !DILocation(line: 192, column: 17, scope: !14335)
!14368 = !DILocation(line: 193, column: 17, scope: !14335)
!14369 = !DILocation(line: 194, column: 13, scope: !14329)
!14370 = distinct !DISubprogram(name: "spec_next<u64>", linkageName: "_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$9spec_next17h36cb11453b8c02b3E", scope: !14371, file: !7035, line: 764, type: !10033, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !763, retainedNodes: !14372)
!14371 = !DINamespace(name: "{impl#5}", scope: !7037)
!14372 = !{!14373, !14374}
!14373 = !DILocalVariable(name: "self", arg: 1, scope: !14370, file: !7035, line: 764, type: !10035)
!14374 = !DILocalVariable(name: "old", scope: !14375, file: !7035, line: 766, type: !765, align: 64)
!14375 = distinct !DILexicalBlock(scope: !14370, file: !7035, line: 766, column: 13)
!14376 = !DILocation(line: 764, column: 18, scope: !14370)
!14377 = !DILocation(line: 765, column: 25, scope: !14370)
!14378 = !DILocalVariable(name: "self", arg: 1, scope: !14379, file: !7115, line: 1903, type: !14383)
!14379 = distinct !DISubprogram(name: "lt", linkageName: "_ZN4core3cmp5impls55_$LT$impl$u20$core..cmp..PartialOrd$u20$for$u20$u64$GT$2lt17ha725217866637346E", scope: !14380, file: !7115, line: 1903, type: !14381, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14384)
!14380 = !DINamespace(name: "{impl#66}", scope: !7117)
!14381 = !DISubroutineType(types: !14382)
!14382 = !{!706, !14383, !14383}
!14383 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !765, size: 32, align: 32, dwarfAddressSpace: 0)
!14384 = !{!14378, !14385}
!14385 = !DILocalVariable(name: "other", arg: 2, scope: !14379, file: !7115, line: 1903, type: !14383)
!14386 = !DILocation(line: 1903, column: 19, scope: !14379, inlinedAt: !14387)
!14387 = distinct !DILocation(line: 765, column: 12, scope: !14370)
!14388 = !DILocation(line: 1903, column: 26, scope: !14379, inlinedAt: !14387)
!14389 = !DILocation(line: 1903, column: 50, scope: !14379, inlinedAt: !14387)
!14390 = !DILocation(line: 1903, column: 59, scope: !14379, inlinedAt: !14387)
!14391 = !DILocation(line: 765, column: 12, scope: !14370)
!14392 = !DILocation(line: 771, column: 13, scope: !14370)
!14393 = !DILocation(line: 765, column: 9, scope: !14370)
!14394 = !DILocation(line: 766, column: 23, scope: !14370)
!14395 = !DILocation(line: 766, column: 17, scope: !14375)
!14396 = !DILocation(line: 768, column: 35, scope: !14375)
!14397 = !DILocation(line: 768, column: 13, scope: !14375)
!14398 = !DILocation(line: 769, column: 13, scope: !14375)
!14399 = !DILocation(line: 773, column: 6, scope: !14370)
!14400 = distinct !DISubprogram(name: "use_early_reject", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h2ff111f15704fb28E", scope: !14401, file: !7077, line: 1752, type: !12581, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14)
!14401 = !DINamespace(name: "{impl#37}", scope: !3440)
!14402 = !DILocation(line: 1754, column: 6, scope: !14400)
!14403 = distinct !DISubprogram(name: "matching", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h4de4435520f26f01E", scope: !14401, file: !7077, line: 1760, type: !14404, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14406)
!14404 = !DISubroutineType(types: !14405)
!14405 = !{!9431, !9, !9}
!14406 = !{!14407, !14408}
!14407 = !DILocalVariable(name: "a", arg: 1, scope: !14403, file: !7077, line: 1760, type: !9)
!14408 = !DILocalVariable(name: "b", arg: 2, scope: !14403, file: !7077, line: 1760, type: !9)
!14409 = !DILocation(line: 1760, column: 17, scope: !14403)
!14410 = !DILocation(line: 1760, column: 27, scope: !14403)
!14411 = !DILocation(line: 1761, column: 9, scope: !14403)
!14412 = !DILocation(line: 1762, column: 6, scope: !14403)
!14413 = distinct !DISubprogram(name: "rejecting", linkageName: "_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17h1ff834da66e2ec58E", scope: !14401, file: !7077, line: 1756, type: !14404, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !14, retainedNodes: !14414)
!14414 = !{!14415, !14416}
!14415 = !DILocalVariable(name: "a", arg: 1, scope: !14413, file: !7077, line: 1756, type: !9)
!14416 = !DILocalVariable(name: "b", arg: 2, scope: !14413, file: !7077, line: 1756, type: !9)
!14417 = !DILocation(line: 1756, column: 18, scope: !14413)
!14418 = !DILocation(line: 1756, column: 28, scope: !14413)
!14419 = !DILocation(line: 1757, column: 9, scope: !14413)
!14420 = !DILocation(line: 1758, column: 6, scope: !14413)
!14421 = distinct !DISubprogram(name: "eq<(), ()>", linkageName: "_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h9924341d6b64f285E", scope: !14422, file: !6957, line: 87, type: !14423, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !433, retainedNodes: !14426)
!14422 = !DINamespace(name: "{impl#11}", scope: !424)
!14423 = !DISubroutineType(types: !14424)
!14424 = !{!706, !14425, !14425}
!14425 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ops::control_flow::ControlFlow<(), ()>", baseType: !423, size: 32, align: 32, dwarfAddressSpace: 0)
!14426 = !{!14427, !14428, !14429, !14431, !14433, !14435, !14436, !14438}
!14427 = !DILocalVariable(name: "self", arg: 1, scope: !14421, file: !6957, line: 87, type: !14425)
!14428 = !DILocalVariable(name: "other", arg: 2, scope: !14421, file: !6957, line: 87, type: !14425)
!14429 = !DILocalVariable(name: "__self_discr", scope: !14430, file: !6957, line: 87, type: !13327, align: 32)
!14430 = distinct !DILexicalBlock(scope: !14421, file: !6957, line: 87, column: 23)
!14431 = !DILocalVariable(name: "__arg1_discr", scope: !14432, file: !6957, line: 87, type: !13327, align: 32)
!14432 = distinct !DILexicalBlock(scope: !14430, file: !6957, line: 87, column: 23)
!14433 = !DILocalVariable(name: "__self_0", scope: !14434, file: !6957, line: 92, type: !1099, align: 32)
!14434 = distinct !DILexicalBlock(scope: !14432, file: !6957, line: 87, column: 23)
!14435 = !DILocalVariable(name: "__arg1_0", scope: !14434, file: !6957, line: 92, type: !1099, align: 32)
!14436 = !DILocalVariable(name: "__self_0", scope: !14437, file: !6957, line: 96, type: !1099, align: 32)
!14437 = distinct !DILexicalBlock(scope: !14432, file: !6957, line: 87, column: 23)
!14438 = !DILocalVariable(name: "__arg1_0", scope: !14437, file: !6957, line: 96, type: !1099, align: 32)
!14439 = !DILocation(line: 87, column: 23, scope: !14421)
!14440 = !DILocation(line: 92, column: 14, scope: !14434)
!14441 = !DILocation(line: 96, column: 11, scope: !14437)
!14442 = !DILocation(line: 87, column: 23, scope: !14430)
!14443 = !DILocation(line: 87, column: 23, scope: !14432)
!14444 = !DILocation(line: 87, column: 32, scope: !14421)
!14445 = !DILocation(line: 92, column: 14, scope: !14432)
!14446 = !DILocation(line: 96, column: 11, scope: !14432)
!14447 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN90_$LT$core..option..IntoIter$LT$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h64485ab535097cafE", scope: !14448, file: !807, line: 2546, type: !14449, scopeLine: 2546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !5456, retainedNodes: !14452)
!14448 = !DINamespace(name: "{impl#34}", scope: !244)
!14449 = !DISubroutineType(types: !14450)
!14450 = !{!243, !14451}
!14451 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::IntoIter<char>", baseType: !5450, size: 32, align: 32, dwarfAddressSpace: 0)
!14452 = !{!14453}
!14453 = !DILocalVariable(name: "self", arg: 1, scope: !14447, file: !807, line: 2546, type: !14451)
!14454 = !DILocation(line: 2546, column: 13, scope: !14447)
!14455 = !DILocation(line: 2547, column: 20, scope: !14447)
!14456 = !DILocation(line: 2548, column: 6, scope: !14447)
!14457 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hbf3248bfa90064b9E", scope: !14458, file: !9062, line: 514, type: !14459, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !3453, retainedNodes: !14462)
!14458 = !DINamespace(name: "{impl#61}", scope: !521)
!14459 = !DISubroutineType(types: !14460)
!14460 = !{!1256, !14461}
!14461 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Split<char>", baseType: !3431, size: 32, align: 32, dwarfAddressSpace: 0)
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "self", arg: 1, scope: !14457, file: !9062, line: 514, type: !14461)
!14464 = !DILocation(line: 514, column: 21, scope: !14457)
!14465 = !DILocation(line: 515, column: 24, scope: !14457)
!14466 = !DILocation(line: 516, column: 14, scope: !14457)
!14467 = distinct !DISubprogram(name: "into_iter<char>", linkageName: "_ZN91_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdf5a53d414a309b3E", scope: !14468, file: !807, line: 2254, type: !14469, scopeLine: 2254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !14471)
!14468 = !DINamespace(name: "{impl#8}", scope: !244)
!14469 = !DISubroutineType(types: !14470)
!14470 = !{!5450, !243}
!14471 = !{!14472}
!14472 = !DILocalVariable(name: "self", arg: 1, scope: !14467, file: !807, line: 2254, type: !243)
!14473 = !DILocation(line: 2254, column: 18, scope: !14467)
!14474 = !DILocation(line: 2256, column: 6, scope: !14467)
!14475 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hec7f0231dba8ce77E", scope: !14476, file: !565, line: 156, type: !14477, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !14480)
!14476 = !DINamespace(name: "{impl#166}", scope: !277)
!14477 = !DISubroutineType(types: !14478)
!14478 = !{!11119, !14479}
!14479 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<char>", baseType: !11144, size: 32, align: 32, dwarfAddressSpace: 0)
!14480 = !{!14481, !14482, !14484, !14486}
!14481 = !DILocalVariable(name: "self", arg: 1, scope: !14475, file: !565, line: 156, type: !14479)
!14482 = !DILocalVariable(name: "ptr", scope: !14483, file: !565, line: 160, type: !8630, align: 32)
!14483 = distinct !DILexicalBlock(scope: !14475, file: !565, line: 160, column: 17)
!14484 = !DILocalVariable(name: "end_or_len", scope: !14485, file: !565, line: 161, type: !8633, align: 32)
!14485 = distinct !DILexicalBlock(scope: !14483, file: !565, line: 161, column: 17)
!14486 = !DILocalVariable(name: "len", scope: !14487, file: !565, line: 166, type: !9, align: 32)
!14487 = distinct !DILexicalBlock(scope: !14485, file: !565, line: 166, column: 25)
!14488 = !DILocation(line: 156, column: 21, scope: !14475)
!14489 = !DILocation(line: 160, column: 21, scope: !14483)
!14490 = !DILocation(line: 160, column: 27, scope: !14475)
!14491 = !DILocation(line: 161, column: 34, scope: !14483)
!14492 = !DILocation(line: 161, column: 21, scope: !14485)
!14493 = !DILocation(line: 165, column: 24, scope: !14485)
!14494 = !DILocation(line: 179, column: 35, scope: !14485)
!14495 = !DILocation(line: 179, column: 28, scope: !14485)
!14496 = !DILocation(line: 184, column: 36, scope: !14485)
!14497 = !DILocalVariable(name: "self", arg: 1, scope: !14498, file: !8619, line: 651, type: !8630)
!14498 = distinct !DISubprogram(name: "add<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h6a84cacc71afad5bE", scope: !8630, file: !8619, line: 651, type: !14499, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !14501, retainedNodes: !14502)
!14499 = !DISubroutineType(types: !14500)
!14500 = !{!8630, !8630, !9}
!14501 = !DISubprogram(name: "add<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h6a84cacc71afad5bE", scope: !8630, file: !8619, line: 651, type: !14499, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!14502 = !{!14497, !14503}
!14503 = !DILocalVariable(name: "count", arg: 2, scope: !14498, file: !8619, line: 651, type: !9)
!14504 = !DILocation(line: 651, column: 29, scope: !14498, inlinedAt: !14505)
!14505 = distinct !DILocation(line: 184, column: 40, scope: !14485)
!14506 = !DILocation(line: 651, column: 35, scope: !14498, inlinedAt: !14505)
!14507 = !DILocation(line: 401, column: 25, scope: !11175, inlinedAt: !14508)
!14508 = distinct !DILocation(line: 659, column: 61, scope: !14498, inlinedAt: !14505)
!14509 = !DILocation(line: 659, column: 37, scope: !14498, inlinedAt: !14505)
!14510 = !DILocation(line: 184, column: 25, scope: !14485)
!14511 = !DILocation(line: 165, column: 21, scope: !14485)
!14512 = !DILocation(line: 180, column: 36, scope: !14485)
!14513 = !DILocation(line: 0, scope: !14514)
!14514 = !DILexicalBlockFile(scope: !14485, file: !626, discriminator: 0)
!14515 = !DILocation(line: 189, column: 27, scope: !14485)
!14516 = !DILocalVariable(name: "self", arg: 1, scope: !14517, file: !8619, line: 440, type: !13399)
!14517 = distinct !DISubprogram(name: "as_ref<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h1afdf2cf5b5bf86eE", scope: !8630, file: !8619, line: 440, type: !14518, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, declaration: !14520, retainedNodes: !14521)
!14518 = !DISubroutineType(types: !14519)
!14519 = !{!1676, !13399}
!14520 = !DISubprogram(name: "as_ref<char>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h1afdf2cf5b5bf86eE", scope: !8630, file: !8619, line: 440, type: !14518, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !250)
!14521 = !{!14516}
!14522 = !DILocation(line: 440, column: 36, scope: !14517, inlinedAt: !14523)
!14523 = distinct !DILocation(line: 189, column: 32, scope: !14485)
!14524 = !DILocation(line: 444, column: 20, scope: !14517, inlinedAt: !14523)
!14525 = !DILocation(line: 401, column: 25, scope: !11175, inlinedAt: !14526)
!14526 = distinct !DILocation(line: 444, column: 25, scope: !14517, inlinedAt: !14523)
!14527 = !DILocalVariable(name: "self", arg: 1, scope: !14528, file: !8537, line: 134, type: !11178)
!14528 = distinct !DISubprogram(name: "cast_const<char>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17h2bf132f7d924a4cbE", scope: !8523, file: !8537, line: 134, type: !14529, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !14531)
!14529 = !DISubroutineType(types: !14530)
!14530 = !{!8633, !11178}
!14531 = !{!14527}
!14532 = !DILocation(line: 134, column: 29, scope: !14528, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 444, column: 34, scope: !14517, inlinedAt: !14523)
!14534 = !DILocation(line: 189, column: 21, scope: !14485)
!14535 = !DILocation(line: 191, column: 14, scope: !14475)
!14536 = distinct !DISubprogram(name: "from_output<(), ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h9182605e95dd4ebaE", scope: !14537, file: !6957, line: 109, type: !14538, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !433, retainedNodes: !14540)
!14537 = !DINamespace(name: "{impl#0}", scope: !424)
!14538 = !DISubroutineType(types: !14539)
!14539 = !{!423, !7}
!14540 = !{!14541}
!14541 = !DILocalVariable(name: "output", arg: 1, scope: !14536, file: !6957, line: 109, type: !7)
!14542 = !DILocation(line: 109, column: 20, scope: !14536)
!14543 = !DILocation(line: 111, column: 6, scope: !14536)
!14544 = distinct !DISubprogram(name: "from_output<usize, usize>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h977b8170fcb89692E", scope: !14537, file: !6957, line: 109, type: !14545, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !596, retainedNodes: !14547)
!14545 = !DISubroutineType(types: !14546)
!14546 = !{!588, !9}
!14547 = !{!14548}
!14548 = !DILocalVariable(name: "output", arg: 1, scope: !14544, file: !6957, line: 109, type: !9)
!14549 = !DILocation(line: 109, column: 20, scope: !14544)
!14550 = !DILocation(line: 111, column: 6, scope: !14544)
!14551 = distinct !DISubprogram(name: "branch<(), ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h843339f4a67c9daaE", scope: !14537, file: !6957, line: 114, type: !14552, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !433, retainedNodes: !14569)
!14552 = !DISubroutineType(types: !14553)
!14553 = !{!14554, !423}
!14554 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<(), core::convert::Infallible>, ()>", scope: !424, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !14555, templateParams: !14, identifier: "bad842aafd993d19d381c404122e1b6c")
!14555 = !{!14556}
!14556 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14554, file: !2, size: 8, align: 8, elements: !14557, templateParams: !14, identifier: "dca7feb8a5460f875606e830879472d4", discriminator: !14568)
!14557 = !{!14558, !14564}
!14558 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !14556, file: !2, baseType: !14559, size: 8, align: 8, extraData: i8 0)
!14559 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !14554, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !14560, templateParams: !14562, identifier: "d160fd287b1e7414b63da59039c22f60")
!14560 = !{!14561}
!14561 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14559, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!14562 = !{!14563, !435}
!14563 = !DITemplateTypeParameter(name: "B", type: !6961)
!14564 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !14556, file: !2, baseType: !14565, size: 8, align: 8, extraData: i8 1)
!14565 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !14554, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !14566, templateParams: !14562, identifier: "b7232a0c0a8d4b13234f60bba9bd73f5")
!14566 = !{!14567}
!14567 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14565, file: !2, baseType: !6961, align: 8, offset: 8, flags: DIFlagPublic)
!14568 = !DIDerivedType(tag: DW_TAG_member, scope: !14554, file: !2, baseType: !13, size: 8, align: 8, flags: DIFlagArtificial)
!14569 = !{!14570, !14571, !14573}
!14570 = !DILocalVariable(name: "self", arg: 1, scope: !14551, file: !6957, line: 114, type: !423)
!14571 = !DILocalVariable(name: "c", scope: !14572, file: !6957, line: 116, type: !7, align: 8)
!14572 = distinct !DILexicalBlock(scope: !14551, file: !6957, line: 116, column: 13)
!14573 = !DILocalVariable(name: "b", scope: !14574, file: !6957, line: 117, type: !7, align: 8)
!14574 = distinct !DILexicalBlock(scope: !14551, file: !6957, line: 117, column: 13)
!14575 = !DILocation(line: 114, column: 15, scope: !14551)
!14576 = !DILocation(line: 116, column: 35, scope: !14572)
!14577 = !DILocation(line: 117, column: 32, scope: !14574)
!14578 = !DILocation(line: 115, column: 15, scope: !14551)
!14579 = !DILocation(line: 115, column: 9, scope: !14551)
!14580 = !DILocation(line: 117, column: 38, scope: !14574)
!14581 = !DILocation(line: 117, column: 78, scope: !14551)
!14582 = !DILocation(line: 116, column: 41, scope: !14572)
!14583 = !DILocation(line: 116, column: 64, scope: !14551)
!14584 = !DILocation(line: 119, column: 6, scope: !14551)
!14585 = distinct !DISubprogram(name: "branch<usize, usize>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf6e34bc1042a4210E", scope: !14537, file: !6957, line: 114, type: !14586, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !596, retainedNodes: !14603)
!14586 = !DISubroutineType(types: !14587)
!14587 = !{!14588, !588}
!14588 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>, usize>", scope: !424, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14589, templateParams: !14, identifier: "33848188c11a019fa4aa889a7a1429c6")
!14589 = !{!14590}
!14590 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14588, file: !2, size: 64, align: 32, elements: !14591, templateParams: !14, identifier: "f05b7320f9d907b1168074f18798a3f", discriminator: !14602)
!14591 = !{!14592, !14598}
!14592 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !14590, file: !2, baseType: !14593, size: 64, align: 32, extraData: i32 0)
!14593 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !14588, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14594, templateParams: !14596, identifier: "36fb65a1006cf0104849ad15d2f97b00")
!14594 = !{!14595}
!14595 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14593, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!14596 = !{!14597, !598}
!14597 = !DITemplateTypeParameter(name: "B", type: !6985)
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !14590, file: !2, baseType: !14599, size: 64, align: 32, extraData: i32 1)
!14599 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !14588, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !14600, templateParams: !14596, identifier: "6ffedda5741db67530788d88d69cb85c")
!14600 = !{!14601}
!14601 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14599, file: !2, baseType: !6985, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!14602 = !DIDerivedType(tag: DW_TAG_member, scope: !14588, file: !2, baseType: !48, size: 32, align: 32, flags: DIFlagArtificial)
!14603 = !{!14604, !14605, !14607}
!14604 = !DILocalVariable(name: "self", arg: 1, scope: !14585, file: !6957, line: 114, type: !588)
!14605 = !DILocalVariable(name: "c", scope: !14606, file: !6957, line: 116, type: !9, align: 32)
!14606 = distinct !DILexicalBlock(scope: !14585, file: !6957, line: 116, column: 13)
!14607 = !DILocalVariable(name: "b", scope: !14608, file: !6957, line: 117, type: !9, align: 32)
!14608 = distinct !DILexicalBlock(scope: !14585, file: !6957, line: 117, column: 13)
!14609 = !DILocation(line: 114, column: 15, scope: !14585)
!14610 = !DILocation(line: 115, column: 15, scope: !14585)
!14611 = !DILocation(line: 115, column: 9, scope: !14585)
!14612 = !DILocation(line: 117, column: 32, scope: !14585)
!14613 = !DILocation(line: 117, column: 32, scope: !14608)
!14614 = !DILocation(line: 117, column: 38, scope: !14608)
!14615 = !DILocation(line: 117, column: 78, scope: !14585)
!14616 = !DILocation(line: 116, column: 35, scope: !14585)
!14617 = !DILocation(line: 116, column: 35, scope: !14606)
!14618 = !DILocation(line: 116, column: 41, scope: !14606)
!14619 = !DILocation(line: 116, column: 64, scope: !14585)
!14620 = !DILocation(line: 119, column: 6, scope: !14585)
!14621 = distinct !DISubprogram(name: "into_searcher<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", linkageName: "_ZN95_$LT$core..str..pattern..MultiCharEqPattern$LT$C$GT$$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17heb499a14c747ce7fE", scope: !14622, file: !7077, line: 678, type: !14623, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7096, retainedNodes: !14628)
!14622 = !DINamespace(name: "{impl#9}", scope: !3440)
!14623 = !DISubroutineType(types: !14624)
!14624 = !{!7084, !14625, !659}
!14625 = !DICompositeType(tag: DW_TAG_structure_type, name: "MultiCharEqPattern<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", scope: !3440, file: !2, align: 8, flags: DIFlagPrivate, elements: !14626, templateParams: !7096, identifier: "bae7fa839551bf796a59f49d468dfcbe")
!14626 = !{!14627}
!14627 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14625, file: !2, baseType: !7087, align: 8, flags: DIFlagPrivate)
!14628 = !{!14629, !14630}
!14629 = !DILocalVariable(name: "self", arg: 1, scope: !14621, file: !7077, line: 678, type: !14625)
!14630 = !DILocalVariable(name: "haystack", arg: 2, scope: !14621, file: !7077, line: 678, type: !659)
!14631 = !DILocation(line: 678, column: 22, scope: !14621)
!14632 = !DILocation(line: 678, column: 28, scope: !14621)
!14633 = !DILocation(line: 679, column: 81, scope: !14621)
!14634 = !DILocation(line: 679, column: 9, scope: !14621)
!14635 = !DILocation(line: 680, column: 6, scope: !14621)
!14636 = distinct !DISubprogram(name: "next<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", linkageName: "_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17h2c6485f9480b3603E", scope: !14637, file: !7077, line: 690, type: !14638, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7096, retainedNodes: !14640)
!14637 = !DINamespace(name: "{impl#10}", scope: !3440)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{!9431, !9570}
!14640 = !{!14641, !14642, !14644, !14646, !14648, !14649, !14651}
!14641 = !DILocalVariable(name: "self", arg: 1, scope: !14636, file: !7077, line: 690, type: !9570)
!14642 = !DILocalVariable(name: "s", scope: !14643, file: !7077, line: 691, type: !14325, align: 32)
!14643 = distinct !DILexicalBlock(scope: !14636, file: !7077, line: 691, column: 9)
!14644 = !DILocalVariable(name: "pre_len", scope: !14645, file: !7077, line: 694, type: !9, align: 32)
!14645 = distinct !DILexicalBlock(scope: !14643, file: !7077, line: 694, column: 9)
!14646 = !DILocalVariable(name: "i", scope: !14647, file: !7077, line: 695, type: !9, align: 32)
!14647 = distinct !DILexicalBlock(scope: !14645, file: !7077, line: 695, column: 40)
!14648 = !DILocalVariable(name: "c", scope: !14647, file: !7077, line: 695, type: !252, align: 32)
!14649 = !DILocalVariable(name: "len", scope: !14650, file: !7077, line: 696, type: !9, align: 32)
!14650 = distinct !DILexicalBlock(scope: !14647, file: !7077, line: 696, column: 13)
!14651 = !DILocalVariable(name: "char_len", scope: !14652, file: !7077, line: 697, type: !9, align: 32)
!14652 = distinct !DILexicalBlock(scope: !14650, file: !7077, line: 697, column: 13)
!14653 = !DILocation(line: 690, column: 13, scope: !14636)
!14654 = !DILocation(line: 691, column: 17, scope: !14636)
!14655 = !DILocation(line: 691, column: 13, scope: !14643)
!14656 = !DILocation(line: 141, column: 20, scope: !564, inlinedAt: !14657)
!14657 = distinct !DILocation(line: 694, column: 35, scope: !14643)
!14658 = !DILocation(line: 33, column: 72, scope: !564, inlinedAt: !14657)
!14659 = !DILocation(line: 33, column: 33, scope: !564, inlinedAt: !14657)
!14660 = !DILocation(line: 33, column: 17, scope: !574, inlinedAt: !14657)
!14661 = !DILocation(line: 57, column: 51, scope: !574, inlinedAt: !14657)
!14662 = !DILocation(line: 57, column: 30, scope: !574, inlinedAt: !14657)
!14663 = !DILocation(line: 143, column: 14, scope: !564, inlinedAt: !14657)
!14664 = !DILocation(line: 694, column: 35, scope: !14643)
!14665 = !DILocation(line: 694, column: 13, scope: !14645)
!14666 = !DILocation(line: 695, column: 33, scope: !14647)
!14667 = !DILocation(line: 695, column: 31, scope: !14647)
!14668 = !DILocation(line: 695, column: 16, scope: !14647)
!14669 = !DILocation(line: 695, column: 22, scope: !14647)
!14670 = !DILocation(line: 695, column: 25, scope: !14647)
!14671 = !DILocation(line: 141, column: 20, scope: !564, inlinedAt: !14672)
!14672 = distinct !DILocation(line: 696, column: 35, scope: !14647)
!14673 = !DILocation(line: 33, column: 72, scope: !564, inlinedAt: !14672)
!14674 = !DILocation(line: 33, column: 33, scope: !564, inlinedAt: !14672)
!14675 = !DILocation(line: 33, column: 17, scope: !574, inlinedAt: !14672)
!14676 = !DILocation(line: 57, column: 51, scope: !574, inlinedAt: !14672)
!14677 = !DILocation(line: 57, column: 30, scope: !574, inlinedAt: !14672)
!14678 = !DILocation(line: 143, column: 14, scope: !564, inlinedAt: !14672)
!14679 = !DILocation(line: 696, column: 35, scope: !14647)
!14680 = !DILocation(line: 696, column: 17, scope: !14650)
!14681 = !DILocation(line: 697, column: 28, scope: !14650)
!14682 = !DILocation(line: 704, column: 9, scope: !14645)
!14683 = !DILocation(line: 705, column: 6, scope: !14636)
!14684 = !DILocation(line: 697, column: 17, scope: !14652)
!14685 = !DILocation(line: 698, column: 16, scope: !14652)
!14686 = !DILocation(line: 698, column: 29, scope: !14652)
!14687 = !DILocation(line: 701, column: 46, scope: !14652)
!14688 = !DILocation(line: 699, column: 45, scope: !14652)
!14689 = !DILocation(line: 701, column: 24, scope: !14652)
!14690 = !DILocation(line: 701, column: 17, scope: !14652)
!14691 = !DILocation(line: 699, column: 24, scope: !14652)
!14692 = !DILocation(line: 699, column: 17, scope: !14652)
!14693 = !DILocation(line: 690, column: 5, scope: !14636)
!14694 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN98_$LT$core..slice..iter..ChunksExact$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haca5222bd32edfbcE", scope: !14695, file: !11156, line: 1911, type: !14696, scopeLine: 1911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !288, retainedNodes: !14699)
!14695 = !DINamespace(name: "{impl#90}", scope: !277)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{!11539, !14698}
!14698 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::ChunksExact<u8>", baseType: !276, size: 32, align: 32, dwarfAddressSpace: 0)
!14699 = !{!14700, !14701, !14703}
!14700 = !DILocalVariable(name: "self", arg: 1, scope: !14694, file: !11156, line: 1911, type: !14698)
!14701 = !DILocalVariable(name: "fst", scope: !14702, file: !11156, line: 1915, type: !281, align: 32)
!14702 = distinct !DILexicalBlock(scope: !14694, file: !11156, line: 1915, column: 13)
!14703 = !DILocalVariable(name: "snd", scope: !14702, file: !11156, line: 1915, type: !281, align: 32)
!14704 = !DILocation(line: 1911, column: 13, scope: !14694)
!14705 = !DILocation(line: 1912, column: 12, scope: !14694)
!14706 = !DILocation(line: 1912, column: 27, scope: !14694)
!14707 = !DILocation(line: 1915, column: 30, scope: !14694)
!14708 = !DILocation(line: 1915, column: 46, scope: !14694)
!14709 = !DILocation(line: 1915, column: 37, scope: !14694)
!14710 = !DILocation(line: 1915, column: 18, scope: !14694)
!14711 = !DILocation(line: 1915, column: 18, scope: !14702)
!14712 = !DILocation(line: 1915, column: 23, scope: !14694)
!14713 = !DILocation(line: 1915, column: 23, scope: !14702)
!14714 = !DILocation(line: 1916, column: 13, scope: !14702)
!14715 = !DILocation(line: 1917, column: 13, scope: !14702)
!14716 = !DILocation(line: 1912, column: 9, scope: !14694)
!14717 = !DILocation(line: 1913, column: 13, scope: !14694)
!14718 = !DILocation(line: 1919, column: 6, scope: !14694)
!14719 = distinct !DISubprogram(name: "next<char>", linkageName: "_ZN99_$LT$core..iter..sources..once..Once$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he963aa5e8a4a6250E", scope: !14720, file: !10725, line: 74, type: !14721, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !250, retainedNodes: !14724)
!14720 = !DINamespace(name: "{impl#0}", scope: !5447)
!14721 = !DISubroutineType(types: !14722)
!14722 = !{!243, !14723}
!14723 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::sources::once::Once<char>", baseType: !5446, size: 32, align: 32, dwarfAddressSpace: 0)
!14724 = !{!14725}
!14725 = !DILocalVariable(name: "self", arg: 1, scope: !14719, file: !10725, line: 74, type: !14723)
!14726 = !DILocation(line: 74, column: 13, scope: !14719)
!14727 = !DILocation(line: 75, column: 20, scope: !14719)
!14728 = !DILocation(line: 76, column: 6, scope: !14719)
!14729 = distinct !DISubprogram(name: "next_match<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", linkageName: "_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h4182eb60dfa4f812E", scope: !14730, file: !7077, line: 785, type: !14731, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !75, templateParams: !7098, retainedNodes: !14734)
!14730 = !DINamespace(name: "{impl#26}", scope: !3440)
!14731 = !DISubroutineType(types: !14732)
!14732 = !{!9290, !14733}
!14733 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::pattern::CharPredicateSearcher<rustc_demangle::legacy::{impl#0}::fmt::{closure_env#1}>", baseType: !7081, size: 32, align: 32, dwarfAddressSpace: 0)
!14734 = !{!14735}
!14735 = !DILocalVariable(name: "self", arg: 1, scope: !14729, file: !7077, line: 785, type: !14733)
!14736 = !DILocation(line: 785, column: 23, scope: !14729)
!14737 = !DILocation(line: 786, column: 20, scope: !14729)
!14738 = !DILocation(line: 787, column: 10, scope: !14729)
