; ModuleID = 'miniz_oxide.7913174b45d8a707-cgu.0'
source_filename = "miniz_oxide.7913174b45d8a707-cgu.0"
target datalayout = "e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-i128:128-n32:64-S128-ni:1:10:20"
target triple = "wasm32-unknown-wasi"

%"inflate::core::HuffmanTable" = type { [1024 x i16], [576 x i16] }

@alloc_e5f068060171aa1e41bbfb541de8bf11 = private unnamed_addr constant [120 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/zip.rs\00", align 1
@alloc_bbdfae2fe7cc92e259c457cd83407a54 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e5f068060171aa1e41bbfb541de8bf11, [12 x i8] c"w\00\00\00H\01\00\00!\00\00\00" }>, align 4
@alloc_e73af6cd88521c856ab8b75d1360ee6c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e5f068060171aa1e41bbfb541de8bf11, [12 x i8] c"w\00\00\00I\01\00\00\13\00\00\00" }>, align 4
@alloc_12ced2a16964da5a644be74de4fba2a9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e5f068060171aa1e41bbfb541de8bf11, [12 x i8] c"w\00\00\00_\01\00\00\18\00\00\00" }>, align 4
@alloc_c7326983c8c8a873fe2d8ad8484cd14d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e5f068060171aa1e41bbfb541de8bf11, [12 x i8] c"w\00\00\00N\01\00\00\0D\00\00\00" }>, align 4
@alloc_7b34dd83f0cf9edd6d0ceac404f7a23a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e5f068060171aa1e41bbfb541de8bf11, [12 x i8] c"w\00\00\006\01\00\00\0D\00\00\00" }>, align 4
@alloc_f7da0010e26cd0e764cebe7d1f1fbe53 = private unnamed_addr constant [113 x i8] c"/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/output_buffer.rs\00", align 1
@alloc_60cf8681016101c24a80f577d300663f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\00U\00\00\00!\00\00\00" }>, align 4
@alloc_b6524e77c5b215334b9619c6da6c99b9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\000\00\00\00\09\00\00\00" }>, align 4
@alloc_df202adf7748939b4402c3c9e1609d1e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\00 \00\00\00\09\00\00\00" }>, align 4
@alloc_e56d209b40851450c53c00b9933c110f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\00!\00\00\00\09\00\00\00" }>, align 4
@alloc_36b6a8e2efc6648e46a4a577c64a1a0b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\00*\00\00\00#\00\00\00" }>, align 4
@alloc_d6e4e9325a87ba24894766152a8044ff = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\00*\00\00\00\13\00\00\00" }>, align 4
@alloc_b73edfb519854834448c80d12d703fdf = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\00*\00\00\008\00\00\00" }>, align 4
@alloc_67454fc05ee6b193761cf87e9055709c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_f7da0010e26cd0e764cebe7d1f1fbe53, [12 x i8] c"p\00\00\00+\00\00\00\09\00\00\00" }>, align 4
@alloc_c1df6a40ddb6dde8572a6b1926836fda = private unnamed_addr constant [104 x i8] c"/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs\00", align 1
@alloc_ba2293d5ec6a39f25eec392c028e54a9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\CB\05\00\00(\00\00\00" }>, align 4
@alloc_8772ee50e3e4c56a3646a74399c725c8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\0E\06\00\00<\00\00\00" }>, align 4
@alloc_e592376b20f064a63028f21fd14a1603 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\11\06\00\00\15\00\00\00" }>, align 4
@alloc_82a85487cf8fee771d62bc4916fe3e02 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1B\06\00\00$\00\00\00" }>, align 4
@alloc_e03767dcd3e63de63988192ee804a55d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\007\06\00\00=\00\00\00" }>, align 4
@alloc_138095e9d48be47a45b6b32f285fab2a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00H\06\00\00 \00\00\00" }>, align 4
@alloc_fdc4b8520286cc66f6dd7b77143c7fc4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00Z\06\00\00(\00\00\00" }>, align 4
@alloc_b588e018f6f13324d138f393c54e0d87 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00^\06\00\00(\00\00\00" }>, align 4
@alloc_f5d91488b1296019e6eaa7da649ef5fe = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00_\06\00\006\00\00\00" }>, align 4
@alloc_d7585beb40a673352e29cd0e494323bc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00_\06\00\00\1A\00\00\00" }>, align 4
@alloc_644363cb70dc5c621003c7051fbb7fca = private unnamed_addr constant [54 x i8] c"assertion failed: dist_table_start < r.len_codes.len()", align 1
@alloc_efb76216ca90b9720a0adb0db3f14681 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00b\06\00\00\15\00\00\00" }>, align 4
@alloc_2db51dfaaa6a70ef3b00c8e1b324529f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00c\06\00\00*\00\00\00" }>, align 4
@alloc_1e1f3a8e0f8ef838d28b0906471e3860 = private unnamed_addr constant [52 x i8] c"assertion failed: dist_table_end < r.len_codes.len()", align 1
@alloc_784a8b749d12c982d347fc7b8ee125f3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00f\06\00\00\15\00\00\00" }>, align 4
@alloc_6c27c8f5877b4ecde0c09b5f4d119c65 = private unnamed_addr constant [61 x i8] c"assertion failed: code_size_dist_end < r.code_size_dist.len()", align 1
@alloc_6ddb153666cfc467bdc7b03552733975 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00g\06\00\00\15\00\00\00" }>, align 4
@alloc_3b80ecbdb674d6a1c09829a144190954 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00j\06\00\00%\00\00\00" }>, align 4
@alloc_4d97e26b8eabb348f8a53a0c307d7489 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00k\06\00\006\00\00\00" }>, align 4
@alloc_9dd882ea0d3d5b586f499c5923600b17 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00k\06\00\00\1A\00\00\00" }>, align 4
@alloc_51081a2555aee1b22d6ba2131bd74d83 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00m\06\00\00\15\00\00\00" }>, align 4
@alloc_2c2e2ffe10e3e9c0a1c8f433d31a4136 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00s\06\00\00-\00\00\00" }>, align 4
@alloc_3ae6b81f5c66ca4e94bd1969b970d38e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B6\06\00\00\15\00\00\00" }>, align 4
@alloc_01a1e97474b1576c1633cfc169a47e0a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B7\06\00\00\15\00\00\00" }>, align 4
@alloc_c65de7265df0073c0455c52e428831ba = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C5\06\00\00\1D\00\00\00" }>, align 4
@alloc_72e08d77f2152f18c3e065bce5f1c5df = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C6\06\00\00\1D\00\00\00" }>, align 4
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@alloc_a44c1564d2bad8baee1b48b111a389ca = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\03\07\00\00-\00\00\00" }>, align 4
@alloc_97a08afd798c340c0356e59fbcafc7c0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00%\07\00\00-\00\00\00" }>, align 4
@alloc_50b2e5dc7be865a2dc089eb76a127829 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\EB\05\00\00\15\00\00\00" }>, align 4
@alloc_35433adcafeaa5cb494fa1d499f09066 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00`\07\00\00*\00\00\00" }>, align 4
@alloc_d29c7804675dbb43a5555132b2cb5b21 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00a\07\00\00\15\00\00\00" }>, align 4
@alloc_a75cd1f2f0cb96c7bcaed419f13443e5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00q\07\00\00'\00\00\00" }>, align 4
@alloc_33d8bc62ac344db1b441c61746e60e81 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00s\07\00\00?\00\00\00" }>, align 4
@alloc_0adc3717516104d9e7d9f60047cf502b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00s\07\00\00>\00\00\00" }>, align 4
@alloc_7f20358abcfaa17f09d05e7cfe61e4b9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00u\07\00\00\22\00\00\00" }>, align 4
@alloc_83ea17bf0c4f4a5a5a13d3ae7955acd0 = private unnamed_addr constant [4 x i8] zeroinitializer, align 4
@alloc_c0da86de96bb2c08281ea92b22f129fb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00v\07\00\00\15\00\00\00" }>, align 4
@anon.683cac6e6aca26ea7081415a78c2386a.0 = private unnamed_addr constant [32 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\05\05\05\05\00\00\00\00", align 1
@alloc_9fde70b9a5e79fb8bca56991ecd5829f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F6\06\00\00&\00\00\00" }>, align 4
@alloc_83392c40aa755fde80a4824bd6ad8dc0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F6\06\00\00\19\00\00\00" }>, align 4
@anon.683cac6e6aca26ea7081415a78c2386a.1 = private unnamed_addr constant [64 x i8] c"\03\00\04\00\05\00\06\00\07\00\08\00\09\00\0A\00\0B\00\0D\00\0F\00\11\00\13\00\17\00\1B\00\1F\00#\00+\003\00;\00C\00S\00c\00s\00\83\00\A3\00\C3\00\E3\00\02\01\00\02\00\02\00\02", align 2
@alloc_14c10b5211dd87592b7f7db6ecb145c8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F7\06\00\007\00\00\00" }>, align 4
@alloc_0bda7d9049113a7d3e9c8fe3b1e86b0e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F7\06\00\00+\00\00\00" }>, align 4
@alloc_20a42cc06fdf07688a646870f0819943 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\009\07\00\00)\00\00\00" }>, align 4
@alloc_d02226f4d9fcdaf8d57f08a272c8f75c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00>\07\00\003\00\00\00" }>, align 4
@alloc_637c3aea1ffec49567eb56fb56eaafe7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00O\07\00\00.\00\00\00" }>, align 4
@alloc_8821998f047ca62cad40e6bc4e4d87c4 = private unnamed_addr constant [1 x i8] c"\01", align 1
@alloc_bc3056290d0a3cafb97857a5bc9fd292 = private unnamed_addr constant [1 x i8] c"\FC", align 1
@alloc_7e52f3a7bec38ecb3038cb69ae3cf027 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B1\07\00\00\1C\00\00\00" }>, align 4
@alloc_fd7b49ff3b5a25770af2f455422c4744 = private unnamed_addr constant [1 x i8] c"\17", align 1
@alloc_e37f68d8fa94813c0eaad10211f2a0b4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\CD\07\00\00\12\00\00\00" }>, align 4
@alloc_eb529d767d746ea31eab85dce11cf03b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\D9\07\00\00M\00\00\00" }>, align 4
@alloc_ff0f0cee615df2a382dfac4b284a04b1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\EA\07\00\00\09\00\00\00" }>, align 4
@alloc_f24c3fc2b4d4d48f2275458deea8a526 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\EB\07\00\00\09\00\00\00" }>, align 4
@alloc_688be014eea27ca3eb41bd143b0421c1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00w\06\00\00.\00\00\00" }>, align 4
@alloc_3de72570aeeb130724fdd9c333d2728d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00w\06\00\00#\00\00\00" }>, align 4
@alloc_cab30e30a55a80564bafa1b246d5b89e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00w\06\00\00\15\00\00\00" }>, align 4
@alloc_ee6c06c87207ff7050f351d074d3878b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00y\06\00\00'\00\00\00" }>, align 4
@alloc_d274f32371e2d934f3265ef325fbfba3 = private unnamed_addr constant [60 x i8] c"assertion failed: l.counter as usize - 1 < r.len_codes.len()", align 1
@alloc_59535d81bb6e745a6b39c3aa40851b70 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00y\06\00\00\19\00\00\00" }>, align 4
@alloc_fe6d868f26357e3317887c352d0ad8d4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00z\06\00\00%\00\00\00" }>, align 4
@alloc_8e3f1a9ca55890031ea4585db3ff7fde = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00z\06\00\00\19\00\00\00" }>, align 4
@alloc_3df7da7bea14d9bf915f37681b80cae8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\80\06\00\00$\00\00\00" }>, align 4
@alloc_1980a86095aad29af26da5d6c76ba9ba = private unnamed_addr constant [48 x i8] c"assertion failed: fill_start < r.len_codes.len()", align 1
@alloc_6101ee6b7e5ffc69df7a8503dd942af8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\81\06\00\00\15\00\00\00" }>, align 4
@alloc_096497b42b231c81a01a95e9a371c34a = private unnamed_addr constant [46 x i8] c"assertion failed: fill_end < r.len_codes.len()", align 1
@alloc_4e27df34ca2c5d6d678b56821e9b1f85 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\82\06\00\00\15\00\00\00" }>, align 4
@alloc_15e9a958f1491937de9fa3b233b3a304 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\84\06\00\00 \00\00\00" }>, align 4
@alloc_66feee2604216fca384bdcb70893f785 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\87\06\00\00\15\00\00\00" }>, align 4
@alloc_5e84adfa63791312e5ac8c40aa171770 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BF\05\00\00\1D\00\00\00" }>, align 4
@alloc_1372d8f5b719b78fdd359ee734dcbaf7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C0\05\00\00\1D\00\00\00" }>, align 4
@alloc_6c96faa1ff13655967e754473c89c953 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\05\07\00\00\15\00\00\00" }>, align 4
@alloc_43fb75fa699cf18bfd62a91e638e7d3d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00'\07\00\00\15\00\00\00" }>, align 4
@alloc_2df53c69db8ead8c1eabe040773b60a3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\99\07\00\00\1D\00\00\00" }>, align 4
@anon.683cac6e6aca26ea7081415a78c2386a.2 = private unnamed_addr constant [6 x i8] c"\01\01\01\00\04\00", align 2
@alloc_3391909735e0ba41ecd4dfa559d15453 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1E\06\00\00+\00\00\00" }>, align 4
@alloc_f7010526fb81f513c8cfd2b3a076108c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1E\06\00\00\1D\00\00\00" }>, align 4
@alloc_653061401e5273e47d85bd25786a9a91 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1D\06\00\00\19\00\00\00" }>, align 4
@alloc_8dd131a8c31a3b44a17b1fc536681aa4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1F\06\00\00\19\00\00\00" }>, align 4
@alloc_d4dd0d14ef859b85bfba3f200290f694 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00U\06\00\00<\00\00\00" }>, align 4
@alloc_1635bf836886c3f4bcae80ec0c300d03 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00U\06\00\00/\00\00\00" }>, align 4
@alloc_b9ed8041781d5d5d3b38531e261333df = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00N\06\00\00!\00\00\00" }>, align 4
@alloc_88e1c229c861148f27b8a00add399984 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00O\06\00\00!\00\00\00" }>, align 4
@alloc_a500d906b91607583596fa15e63c2ada = private unnamed_addr constant [40 x i8] c"internal error: entered unreachable code", align 1
@alloc_56f8915c0ba96c9ce2361b5443a9784d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A6\05\00\00\1E\00\00\00" }>, align 4
@anon.683cac6e6aca26ea7081415a78c2386a.3 = private unnamed_addr constant [19 x i8] c"\10\11\12\00\08\07\09\06\0A\05\0B\04\0C\03\0D\02\0E\01\0F", align 1
@alloc_68774def5e47245aadae2051c2d4d89f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00<\06\00\00-\00\00\00" }>, align 4
@alloc_da1ae9051c677d518f08eeb841ac6b77 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00<\06\00\00\19\00\00\00" }>, align 4
@alloc_f42d2b3fa09626023f1905518f861e4f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00>\06\00\00\19\00\00\00" }>, align 4
@alloc_d012f0c6f9d023ef43d543008e9d191d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B9\05\00\00\1D\00\00\00" }>, align 4
@alloc_a085cdc1a9c698f1c88e838e4c3df755 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BA\05\00\00\1D\00\00\00" }>, align 4
@alloc_8af428b94b66314b737be1e7490a7a28 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\92\07\00\00\1D\00\00\00" }>, align 4
@anon.683cac6e6aca26ea7081415a78c2386a.4 = private unnamed_addr constant [60 x i8] c"\01\00\02\00\03\00\04\00\05\00\07\00\09\00\0D\00\11\00\19\00!\001\00A\00a\00\81\00\C1\00\01\01\81\01\01\02\01\03\01\04\01\06\01\08\01\0C\01\10\01\18\01 \010\01@\01`", align 2
@alloc_9000e0fdce7a4784ce72fddee922ed27 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1A\07\00\00(\00\00\00" }>, align 4
@alloc_2d08cbf06e87503989bd97c63411e504 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\0F\03\00\00\05\00\00\00" }>, align 4
@alloc_45d8b33a5572b2ef1b2bfbca4c99c763 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00_\04\00\002\00\00\00" }>, align 4
@alloc_870636dd47ebad01322db68f3b95ca3e = private unnamed_addr constant [76 x i8] c"assertion failed: out_pos.checked_add(match_len).unwrap() <= out_slice.len()", align 1
@alloc_a184293ac2bda417769b778016878c9e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00_\04\00\00\05\00\00\00" }>, align 4
@alloc_b3dec16b118ed5af4cf292c68a916406 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00e\04\00\003\00\00\00" }>, align 4
@alloc_8c3b7711ce0dbbdfa574c5afedd512b6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00j\04\00\00$\00\00\00" }>, align 4
@alloc_514e8c647772ae7ae0db15db7f500e32 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00k\04\00\00$\00\00\00" }>, align 4
@alloc_4aaee31ff10ac9f5fe90ab5f88ef0b2f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00o\04\00\00\11\00\00\00" }>, align 4
@alloc_49d2abcedf29c361e4c497e339a0d13b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00p\04\00\00\11\00\00\00" }>, align 4
@alloc_c25a6d2209d4297d7e5078000732e366 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00q\04\00\00\11\00\00\00" }>, align 4
@alloc_8083b8f66c361bfcc7ce0c2ced6783d9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\11\02\00\00(\00\00\00" }>, align 4
@alloc_dab597ca49fb41b4cba830829b007d36 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\002\00\00\00\09\00\00\00" }>, align 4
@alloc_c17ef81ba1b9878a690103e466e4385c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00>\00\00\00*\00\00\00" }>, align 4
@alloc_eb699e37a8e61fbb4e3fb56d93ae014e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00>\00\00\00\1E\00\00\00" }>, align 4
@alloc_06f754d058684aba70ac658d70657198 = private unnamed_addr constant [46 x i8] c"assertion failed: tree_index < self.tree.len()", align 1
@alloc_d2ec30714a7ffbb855ab3797808ad40c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00D\00\00\00\0D\00\00\00" }>, align 4
@alloc_dab99ae63ef122c8a27f0e18b4f190d2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00F\00\00\00\0D\00\00\00" }>, align 4
@alloc_9032127bfffe5394a50ae2dbe3fccdf9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00Y\00\00\000\00\00\00" }>, align 4
@alloc_46b860345d6802d806c2731fe7c05628 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BA\04\00\00\0D\00\00\00" }>, align 4
@alloc_6c1186cc8300e8c4a156ba8a743e890d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BB\04\00\00\0D\00\00\00" }>, align 4
@alloc_e722339b70948af583a52fb11fc07404 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C8\04\00\00\11\00\00\00" }>, align 4
@alloc_76a347374fa3dc18bcdd2bb55b6662bf = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C9\04\00\00\11\00\00\00" }>, align 4
@alloc_f086baa30b7f5d805291df18f8d9aafb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\E9\04\00\00(\00\00\00" }>, align 4
@alloc_475572b61634f7b594a641c229cef155 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\E9\04\00\00\1B\00\00\00" }>, align 4
@alloc_5c098469fc91ac316d34cc10970d9677 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\EA\04\00\00/\00\00\00" }>, align 4
@alloc_1b91eb880aa23324d149960b4c43d183 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\EA\04\00\00#\00\00\00" }>, align 4
@alloc_aec417571fd51376bd0ba66dd7a6c08e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F1\04\00\00/\00\00\00" }>, align 4
@alloc_5392b952cf7300658b04a51f5d717915 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F1\04\00\00.\00\00\00" }>, align 4
@alloc_8b5e5b622df2812ec7df268801c4a320 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F2\04\00\00\11\00\00\00" }>, align 4
@alloc_1e6f1cc6304bba04b7a6d9a7da948ee4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F3\04\00\00\11\00\00\00" }>, align 4
@alloc_667bc5788d600f1725d4733ee8de1ff3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F4\04\00\00\11\00\00\00" }>, align 4
@alloc_f14ea122542d0b67a7ef39363ecbf409 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\FF\04\00\00\0D\00\00\00" }>, align 4
@alloc_49e8e0a73e6c69e213669a2341b7c3f2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\00\05\00\00\0D\00\00\00" }>, align 4
@alloc_d9ca595dabaa4e00e7c4c59126fd46e9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\07\05\00\00 \00\00\00" }>, align 4
@alloc_5f185055166ccb4142dd5fd7c838b59e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\0B\05\00\00/\00\00\00" }>, align 4
@alloc_6ecc5c2ba9316dcb5c33cdfa46aaf153 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\0B\05\00\00.\00\00\00" }>, align 4
@alloc_e1d8e7878b051c71de591f05fd9bae39 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\0C\05\00\00\11\00\00\00" }>, align 4
@alloc_3de5f1b18078f4c8929485f32a16b0fd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\0D\05\00\00\11\00\00\00" }>, align 4
@alloc_286ba0af64d8cf124e1fa10da393d3eb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\0E\05\00\00\11\00\00\00" }>, align 4
@alloc_4a7a857b36602634c8a373ef2855bb50 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00$\05\00\00\22\00\00\00" }>, align 4
@alloc_835cc7da5e9face134744981e9f59911 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00.\02\00\00\16\00\00\00" }>, align 4
@alloc_3bcb661afc7fa054d0dd645575ff35de = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00/\02\00\00\09\00\00\00" }>, align 4
@alloc_e22bff6ea8f05d3d08eaef7e5645319b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\16\03\00\00\18\00\00\00" }>, align 4
@alloc_678f06292b8c60039c3d4e3ef9bb2ec6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\17\03\00\00\18\00\00\00" }>, align 4
@alloc_08c1153fe2e491ef67476ae281250a50 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\18\03\00\00\18\00\00\00" }>, align 4
@alloc_7b53e5bba78b563105cbcb99bd810d32 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\19\03\00\00\18\00\00\00" }>, align 4
@alloc_53464d65d4f92aaa9ee7b844bafa188d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1A\03\00\00\15\00\00\00" }>, align 4
@alloc_2b2838106b9c16bced83d3984f8fdeac = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\AC\02\00\00\1A\00\00\00" }>, align 4
@alloc_ec41b38738834a802c99909d4101a960 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\AD\02\00\00\0D\00\00\00" }>, align 4
@alloc_a5b2018e5dafea63de5bf3fc5f4233fa = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00{\02\00\00*\00\00\00" }>, align 4
@alloc_077fda8295f527d837c2e154fa2ec540 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\82\02\00\009\00\00\00" }>, align 4
@alloc_d0afabfd5ae89d05560d528421321a29 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\86\02\00\00\1D\00\00\00" }>, align 4
@alloc_a8bf95fd6d21c623751f4befdae5fda3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\87\02\00\00,\00\00\00" }>, align 4
@alloc_6f411ad70be1bdcc1931ba935fab83a0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\87\02\00\00\22\00\00\00" }>, align 4
@alloc_331d6237e0e062a07b9615becd556ecd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\89\02\00\00\19\00\00\00" }>, align 4
@alloc_417254301495c861b0fd81538a5e29e3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\8A\02\00\006\00\00\00" }>, align 4
@alloc_ea95518e223605bc4ba92c6aabe2dbae = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A0\02\00\00\1E\00\00\00" }>, align 4
@alloc_e8fc89260548ca3b0bb8d9359780de36 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A1\02\00\00\11\00\00\00" }>, align 4
@alloc_53c93c07783c0bf2fbf8ccc7de799521 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B2\02\00\00 \00\00\00" }>, align 4
@alloc_99ef17e350657092159ac7b9b635fff1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BD\02\00\00\13\00\00\00" }>, align 4
@alloc_96e01175af41f1858b89b6e986d44c7f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C2\02\00\00\05\00\00\00" }>, align 4
@alloc_169f4db56151f343266d09fcb2ca383b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C3\02\00\00\05\00\00\00" }>, align 4
@alloc_8797300dcb66f10a078ce11f5db6007f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00;\02\00\00\0B\00\00\00" }>, align 4
@alloc_18ec6e015d780168b03220cd81b8a45f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00;\02\00\00\0A\00\00\00" }>, align 4
@alloc_0c2df93ba136a9eb61819c40c8cdc36a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00B\02\00\00\1C\00\00\00" }>, align 4
@alloc_8f56d9addd0f3f51d7b1a89b36e385b4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00B\02\00\00\17\00\00\00" }>, align 4
@alloc_cdd030fce5c7e36fd38dbd45971d5cef = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00E\02\00\00\13\00\00\00" }>, align 4
@alloc_552728878a7a3dd05dac9ddff89d83bd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\15\04\00\00\09\00\00\00" }>, align 4
@alloc_492cfee548f2d16368661ae56a978ab0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\13\04\00\00\09\00\00\00" }>, align 4
@alloc_e5a1af3595ffb51724955a741d2524d6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1D\04\00\00\0D\00\00\00" }>, align 4
@alloc_54d8bfdbc8dd831cd66a5b7f2660688d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\1F\04\00\00\13\00\00\00" }>, align 4
@alloc_eec930054f7dbce62e025e3dfac6e097 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00!\04\00\00\13\00\00\00" }>, align 4
@alloc_6672551fa5aa9229c4b083b168b48ce8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\22\04\00\00\1E\00\00\00" }>, align 4
@alloc_555f9899a34725685591fa92b18ee834 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\22\04\00\00\14\00\00\00" }>, align 4
@alloc_7b7ffdde34ed8725d3aec395d85a67ef = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00#\04\00\00\12\00\00\00" }>, align 4
@alloc_28fba249518dca87b934457073f53758 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00%\04\00\00\16\00\00\00" }>, align 4
@alloc_3cfdf3ceed0e8fbdbdc687711e56665a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00)\04\00\008\00\00\00" }>, align 4
@alloc_81e3b126bdddbe808b00b09391aea969 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\006\04\00\00\15\00\00\00" }>, align 4
@alloc_475b2b3a6af68ae925a8b274d31188c3 = private unnamed_addr constant [47 x i8] c"assertion failed: out_pos + 3 < out_slice.len()", align 1
@alloc_684d3c192f2612b478daf1607cf91975 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\006\04\00\00\0D\00\00\00" }>, align 4
@alloc_9f164b4732fcbe0c480266e3ae8b8deb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\007\04\00\00\15\00\00\00" }>, align 4
@alloc_cb870baacb15067f7eee04f015be4c85 = private unnamed_addr constant [72 x i8] c"assertion failed: (source_pos + 3) & out_buf_size_mask < out_slice.len()", align 1
@alloc_378d2f5dadff213f985692c4f0bd61cb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\007\04\00\00\0D\00\00\00" }>, align 4
@alloc_27be3c42a398073c71dbd8a5ce1c7b76 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\009\04\00\00\22\00\00\00" }>, align 4
@alloc_dbe117f78e2a6f95b0639064f8eb7454 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\009\04\00\00\0D\00\00\00" }>, align 4
@alloc_6ec59f097fe0457b2ad7160e12f69aff = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00:\04\00\000\00\00\00" }>, align 4
@alloc_21bc1fc9a8f7b70597517f8eb8d8e8c7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00:\04\00\00&\00\00\00" }>, align 4
@alloc_c818ce2f32878cb5dc173bc623618590 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00:\04\00\00\17\00\00\00" }>, align 4
@alloc_2f42de2001f9a073e38c6556c536b341 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00:\04\00\00\0D\00\00\00" }>, align 4
@alloc_5891d7556965d2b44aa4acfe03b581e1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00;\04\00\000\00\00\00" }>, align 4
@alloc_d5252653e0b82f79388007976bfc536d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00;\04\00\00&\00\00\00" }>, align 4
@alloc_3560e3d11c64e917d585a0eb6b5878ef = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00;\04\00\00\17\00\00\00" }>, align 4
@alloc_eba39e8bbe3620bd53d33ae18acb6136 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00;\04\00\00\0D\00\00\00" }>, align 4
@alloc_d4a0092ea1ce1ab0a9d277f8b834644c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00<\04\00\000\00\00\00" }>, align 4
@alloc_35b19e0bc39e78c724896482d2716b3b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00<\04\00\00&\00\00\00" }>, align 4
@alloc_5967a6b2de30114bf3a08def4abfdcc2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00<\04\00\00\17\00\00\00" }>, align 4
@alloc_cc85ca97f1e3558327804a52d2005358 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00<\04\00\00\0D\00\00\00" }>, align 4
@alloc_41ab4c11a0e85bd7ff4dae4ff1ba35e8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00=\04\00\00\0D\00\00\00" }>, align 4
@alloc_8898e15373d558ff58a620a4339a2513 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00>\04\00\00\0D\00\00\00" }>, align 4
@alloc_8f6a80a9d5a68a426d17d5665a8c3b1b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00D\04\00\00#\00\00\00" }>, align 4
@alloc_9500ada91a9f296a1113d54991443d7a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00D\04\00\00\0E\00\00\00" }>, align 4
@alloc_994c70a4054c9de2ae62fc3406408789 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00F\04\00\00\15\00\00\00" }>, align 4
@alloc_066f04eb3e041085719e79614e097a5e = private unnamed_addr constant [47 x i8] c"assertion failed: out_pos + 1 < out_slice.len()", align 1
@alloc_a98ee7afe7873cc4f2220b0135a0d289 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00F\04\00\00\0D\00\00\00" }>, align 4
@alloc_9c1aa7a1ff60f97bb2b3c1c60f70193a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00G\04\00\00\15\00\00\00" }>, align 4
@alloc_a17e37ea90258503e4df48d65544dd27 = private unnamed_addr constant [72 x i8] c"assertion failed: (source_pos + 1) & out_buf_size_mask < out_slice.len()", align 1
@alloc_f0731fa00f565628f6b18660cc714075 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00G\04\00\00\0D\00\00\00" }>, align 4
@alloc_c0b4025b54d2106d67c6838e819af1dd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00H\04\00\00\22\00\00\00" }>, align 4
@alloc_0e16c122bd1c604927398a2b75ded7ec = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00H\04\00\00\0D\00\00\00" }>, align 4
@alloc_f1cadf214d3b0be28b7d4327ee60b431 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00I\04\00\000\00\00\00" }>, align 4
@alloc_0adea34eeb7c426515c6819a7bd426b6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00I\04\00\00&\00\00\00" }>, align 4
@alloc_1232bb683463b5b1116688e6c9280f09 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00I\04\00\00\17\00\00\00" }>, align 4
@alloc_d9f029dd91f5acfbd6002b30de69d2c9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00I\04\00\00\0D\00\00\00" }>, align 4
@alloc_ea0c7929c8fb0fedc5d51bd1cf7317c2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00L\04\00\00\15\00\00\00" }>, align 4
@alloc_3b4f078f60ab6dde3be227141156af98 = private unnamed_addr constant [47 x i8] c"assertion failed: out_pos + 2 < out_slice.len()", align 1
@alloc_d6d9b7d75e40bd33c15b76130760233e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00L\04\00\00\0D\00\00\00" }>, align 4
@alloc_2ff27d50fded060b527b6c8a2ef2cd10 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00M\04\00\00\15\00\00\00" }>, align 4
@alloc_8f8047d0a3b312b4c5681d2afe9ed2c6 = private unnamed_addr constant [72 x i8] c"assertion failed: (source_pos + 2) & out_buf_size_mask < out_slice.len()", align 1
@alloc_93dd719f28702fd6b81654b9f9987ae8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00M\04\00\00\0D\00\00\00" }>, align 4
@alloc_27cee705d6cc5a506788705d802820db = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00N\04\00\00\22\00\00\00" }>, align 4
@alloc_bdc61301e68a8ed252f194735d169b5a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00N\04\00\00\0D\00\00\00" }>, align 4
@alloc_65a89ce41f92ecfe80964d84a0abd4bf = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00O\04\00\000\00\00\00" }>, align 4
@alloc_2fac3a369121865d770ca206df35f5b0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00O\04\00\00&\00\00\00" }>, align 4
@alloc_4814987e0a7b0f5b8788e0fe0d02268c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00O\04\00\00\17\00\00\00" }>, align 4
@alloc_f6e35f8329203065c911b03f93564a53 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00O\04\00\00\0D\00\00\00" }>, align 4
@alloc_be01522e45d25f280f8f66838c1826a6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00P\04\00\000\00\00\00" }>, align 4
@alloc_83d704a4630b2b580b521f333c335f18 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00P\04\00\00&\00\00\00" }>, align 4
@alloc_8f95401d62627cd843eac458e7cec8cd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00P\04\00\00\17\00\00\00" }>, align 4
@alloc_1566557888b8837efc4043f984893224 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00P\04\00\00\0D\00\00\00" }>, align 4
@alloc_22373327ad96262e73084868a9725077 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00R\04\00\00\0E\00\00\00" }>, align 4
@alloc_529c0bfd5c9e94e858b873a336de0928 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00,\04\00\000\00\00\00" }>, align 4
@alloc_28a49f5564fa8db1bd1acb4f99ea9b24 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00,\04\00\00\17\00\00\00" }>, align 4
@alloc_a5598c6b78f66ce218dceca3817f3f4c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00-\04\00\00\0D\00\00\00" }>, align 4
@alloc_c228979867d695214fbcae6a128fe255 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00.\04\00\00\0D\00\00\00" }>, align 4
@alloc_fd0f167cd98bec8cb438b113dcd63ce4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00R\03\00\005\00\00\00" }>, align 4
@alloc_709d7dab23edc15208fc6a7322b8e5f9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00W\03\00\00\1A\00\00\00" }>, align 4
@alloc_fcebf7cc0b584fa66b8e7560fe0dc975 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00m\03\00\00\1A\00\00\00" }>, align 4
@alloc_e42f74ca67ed22dfa2863a1c5f14b483 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00r\03\00\00&\00\00\00" }>, align 4
@alloc_d16f04ed9cd9dfb6379b840288102644 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\80\03\00\00>\00\00\00" }>, align 4
@alloc_f12107921783e7f89359d35917c8bcfa = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\E3\03\00\00\09\00\00\00" }>, align 4
@alloc_6cfc08a328cb5c952a63aac442161278 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\9C\03\00\00\1D\00\00\00" }>, align 4
@alloc_75195312b4c6037b8e536e68cb9e2150 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A1\03\00\00\1C\00\00\00" }>, align 4
@alloc_f1b6a7c08fceb6de3e82d047197d3255 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A2\03\00\00\0D\00\00\00" }>, align 4
@alloc_b0bb74b1d6e13bc0a22f0f46f5707663 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A4\03\00\00.\00\00\00" }>, align 4
@alloc_c9cad49567170ef78707604d4df904a3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A4\03\00\00!\00\00\00" }>, align 4
@alloc_7d5854bf3ad25d35e0798e01000c1acb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\AF\03\00\00\12\00\00\00" }>, align 4
@alloc_d9b31d64cfc4f489766ced2cf3970dce = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\A6\03\00\00 \00\00\00" }>, align 4
@alloc_3d0584006e2a2fff73ac91bfe0e3bec4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BA\03\00\00 \00\00\00" }>, align 4
@alloc_d6eb5bacf10cdbdf576bd1d6f8377a58 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BC\03\00\00\11\00\00\00" }>, align 4
@alloc_f7b6b75ed1a27fdd40e56bc25df4b16d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\BE\03\00\00\11\00\00\00" }>, align 4
@alloc_4acf9319653e60ad954f09d8f5160e78 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\D3\03\00\00\0D\00\00\00" }>, align 4
@alloc_f0ebd5b02b6d0b0ca14e0b84a33f8319 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\D4\03\00\00\1F\00\00\00" }>, align 4
@alloc_4e4266533d68e1fa4afb86ce7e5e3eca = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\D4\03\00\00\1E\00\00\00" }>, align 4
@alloc_0445d5efef1a23def9446d8da8190811 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\D8\03\00\00\0D\00\00\00" }>, align 4
@alloc_9f8f5522c9a44310e93a62fb1bc60d61 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C4\03\00\00\11\00\00\00" }>, align 4
@alloc_167ae0599c291077d319823e3ee43c37 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C5\03\00\00#\00\00\00" }>, align 4
@alloc_b198154aec930f62091bb481d2b7fa82 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C5\03\00\00\22\00\00\00" }>, align 4
@alloc_32e04051e30ae77135131fe96cf1aa27 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\C9\03\00\00\14\00\00\00" }>, align 4
@alloc_42c7fc99230b37e1ba258d38a529b9ec = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\CA\03\00\00\15\00\00\00" }>, align 4
@alloc_ad7e1b170b9e02db21d40dec04589c0a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\CC\03\00\00\15\00\00\00" }>, align 4
@alloc_4f6ac3c56f88de2be1b6bff77442da67 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\CE\03\00\00 \00\00\00" }>, align 4
@alloc_91e234c94f77ef772bda84d26e12261e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B4\03\00\00\15\00\00\00" }>, align 4
@alloc_124cf75e1d65bd14ed8c4dbe6ca4449b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B5\03\00\00!\00\00\00" }>, align 4
@alloc_379c26e618708f9f4224a83a0e771685 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\B5\03\00\00\15\00\00\00" }>, align 4
@alloc_c45e15353cfcfe79646b8d85a82be8b9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\81\03\00\00\0D\00\00\00" }>, align 4
@alloc_8ad5cdaca9969f549eebff07583ada94 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\82\03\00\00\0D\00\00\00" }>, align 4
@alloc_2e426b6511a3e97df53e9398af6113c1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00z\03\00\00\0D\00\00\00" }>, align 4
@alloc_5098459050fb70f40f93eb133c14d62e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F4\02\00\00\1D\00\00\00" }>, align 4
@alloc_df28c055808506f44eb971997f1e4543 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F4\02\00\00\1C\00\00\00" }>, align 4
@alloc_28516df66aa939a4a20b5cc47ff995ce = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F5\02\00\00\05\00\00\00" }>, align 4
@alloc_c4912ccb00b9d43d1302993610812da8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\F6\02\00\00\05\00\00\00" }>, align 4
@alloc_f7b0772c1436a4555544fef732341e7e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\E9\02\00\00\1A\00\00\00" }>, align 4
@alloc_6fda78d50ef243f2d21a303aa753b3ba = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_c1df6a40ddb6dde8572a6b1926836fda, [12 x i8] c"g\00\00\00\EA\02\00\00\0D\00\00\00" }>, align 4
@alloc_0d97bde9555861f1f32215c1f3ce127d = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs\00", align 1
@alloc_44659632065e7bc5e1cc771c0ae76b73 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_0d97bde9555861f1f32215c1f3ce127d, [12 x i8] c"m\00\00\00r\02\00\00\09\00\00\00" }>, align 4
@alloc_5ee6cd0de5bab89c84438a39fb5fb08c = private unnamed_addr constant [221 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned and non-null\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_4fb4eca1f8b9d0ded0407faa6b2654bb = private unnamed_addr constant [214 x i8] c"unsafe precondition(s) violated: ptr::add requires that the address calculation does not overflow\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_e6a9d641f27e174baadc6997ecb4ffef = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs\00", align 1
@alloc_1ded1233f10ce63823f0773f448fe0b6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e6a9d641f27e174baadc6997ecb4ffef, [12 x i8] c"r\00\00\00\B9\03\00\00 \00\00\00" }>, align 4
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize", align 1
@alloc_de4e626d456b04760e72bc785ed7e52a = private unnamed_addr constant [201 x i8] c"unsafe precondition(s) violated: ptr::offset_from_unsigned requires `self >= origin`\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_0425c6f4a9d23edccb8e161ad54f3fb2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e5f068060171aa1e41bbfb541de8bf11, [12 x i8] c"w\00\00\00\1F\00\00\00\0D\00\00\00" }>, align 4
@alloc_1d6e4bfe7d2b96ab3af8255b2a238662 = private unnamed_addr constant [21 x i8] c"dest is out of bounds", align 1
@alloc_548c58979f636fee6e51e14f89242881 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_1d6e4bfe7d2b96ab3af8255b2a238662, [4 x i8] c"\15\00\00\00" }>, align 4
@alloc_57a8a8c930578b2e3ee501533f28ad28 = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs\00", align 1
@alloc_41ffb2ff0e6e27abbed97ecf5e7f1caf = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00\F2\00\00\00R\00\00\00" }>, align 4
@alloc_5f55955de67e57c79064b537689facea = private unnamed_addr constant [43 x i8] c"called `Option::unwrap()` on a `None` value", align 1
@alloc_e534af126d4f0c0d6698aaa5e548da66 = private unnamed_addr constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero", align 1
@alloc_4a5d1f504800cbe61e09126ad8023985 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_e534af126d4f0c0d6698aaa5e548da66, [4 x i8] c"9\00\00\00" }>, align 4
@alloc_7eec19d3416e3575f65ca3f5643d5a84 = private unnamed_addr constant [28 x i8] c"attempt to add with overflow", align 1
@alloc_491fd71eacc9ac6df50464189817658a = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_7eec19d3416e3575f65ca3f5643d5a84, [4 x i8] c"\1C\00\00\00" }>, align 4
@alloc_1482d7dc779f3e37c63e31d28eda18b3 = private unnamed_addr constant [33 x i8] c"attempt to multiply with overflow", align 1
@alloc_3a541098c7af55f2d1b57c8374ee944e = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_1482d7dc779f3e37c63e31d28eda18b3, [4 x i8] c"!\00\00\00" }>, align 4
@alloc_5eef71d104abe15a086a0c4d44c034c3 = private unnamed_addr constant [31 x i8] c"attempt to negate with overflow", align 1
@alloc_5de496b425986be16834231411267f24 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_5eef71d104abe15a086a0c4d44c034c3, [4 x i8] c"\1F\00\00\00" }>, align 4
@alloc_9f8e76db6a71f2507809208910629059 = private unnamed_addr constant [35 x i8] c"attempt to shift left with overflow", align 1
@alloc_26eab6319fe0d02af8105663e6a2ea8b = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_9f8e76db6a71f2507809208910629059, [4 x i8] c"#\00\00\00" }>, align 4
@alloc_53b7c2e50e2cec3eca67f872cc62c959 = private unnamed_addr constant [36 x i8] c"attempt to shift right with overflow", align 1
@alloc_0f75c28593fb3281511a86ba9b3adf6f = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_53b7c2e50e2cec3eca67f872cc62c959, [4 x i8] c"$\00\00\00" }>, align 4
@alloc_4668a6a56031a745778990d4b3d270b1 = private unnamed_addr constant [33 x i8] c"attempt to subtract with overflow", align 1
@alloc_7daa13c2a11e2a3dbea9e2a29716d6f6 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_4668a6a56031a745778990d4b3d270b1, [4 x i8] c"!\00\00\00" }>, align 4
@alloc_8407de24b9e131517d3488beb23d4c7f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00\8E\00\00\00\01\00\00\00" }>, align 4

; <core::iter::adapters::skip::Skip<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN100_$LT$core..iter..adapters..skip..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h99f11f3911703e15E"(ptr align 4 %self) unnamed_addr #0 !dbg !83 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !167, !DIExpression(), !168)
  %0 = getelementptr inbounds i8, ptr %self, i32 24, !dbg !169
  %_4 = load i32, ptr %0, align 4, !dbg !169
  %_3 = icmp ugt i32 %_4, 0, !dbg !169
  %1 = zext i1 %_3 to i8
  store i8 %1, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !170, !DIExpression(), !178)
  br i1 %_3, label %bb1.i, label %bb3.i, !dbg !180

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !181
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !182

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !183
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !182

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %2 = load i8, ptr %_0.i, align 1, !dbg !184
  %3 = trunc nuw i8 %2 to i1, !dbg !184
  br i1 %3, label %bb2, label %bb4, !dbg !185

bb4:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %4 = call { ptr, ptr } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53cde08552ac4939E"(ptr align 4 %self) #11, !dbg !186
  %5 = extractvalue { ptr, ptr } %4, 0, !dbg !186
  %6 = extractvalue { ptr, ptr } %4, 1, !dbg !186
  store ptr %5, ptr %_0, align 4, !dbg !186
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !186
  store ptr %6, ptr %7, align 4, !dbg !186
  br label %bb5, !dbg !186

bb2:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %_7 = getelementptr inbounds i8, ptr %self, i32 24, !dbg !187
; call core::mem::take
  %_6 = call i32 @_ZN4core3mem4take17h3beddaf645bd9814E(ptr align 4 %_7) #11, !dbg !188
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::nth
  %8 = call { ptr, ptr } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3nth17he9e61567c6bf8220E"(ptr align 4 %self, i32 %_6) #11, !dbg !189
  %9 = extractvalue { ptr, ptr } %8, 0, !dbg !189
  %10 = extractvalue { ptr, ptr } %8, 1, !dbg !189
  store ptr %9, ptr %_0, align 4, !dbg !189
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !189
  store ptr %10, ptr %11, align 4, !dbg !189
  br label %bb5, !dbg !189

bb5:                                              ; preds = %bb2, %bb4
  %12 = load ptr, ptr %_0, align 4, !dbg !190
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !190
  %14 = load ptr, ptr %13, align 4, !dbg !190
  %15 = insertvalue { ptr, ptr } poison, ptr %12, 0, !dbg !190
  %16 = insertvalue { ptr, ptr } %15, ptr %14, 1, !dbg !190
  ret { ptr, ptr } %16, !dbg !190
}

; <core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::start_bound
; Function Attrs: nounwind
define dso_local { i32, ptr } @"_ZN100_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h7d9ba89dc34726ccE"(ptr align 4 %self) unnamed_addr #1 !dbg !191 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !225, !DIExpression(), !228)
  %0 = insertvalue { i32, ptr } { i32 0, ptr poison }, ptr %self, 1, !dbg !229
  ret { i32, ptr } %0, !dbg !229
}

; <core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound
; Function Attrs: nounwind
define dso_local { i32, ptr } @"_ZN100_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h9c6a358da176cad8E"(ptr align 4 %self) unnamed_addr #1 !dbg !230 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !232, !DIExpression(), !233)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !234
  %1 = load i8, ptr %0, align 4, !dbg !234
  %_2 = trunc nuw i8 %1 to i1, !dbg !234
  br i1 %_2, label %bb1, label %bb2, !dbg !234

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !235
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !236
  store ptr %_4, ptr %2, align 4, !dbg !236
  store i32 0, ptr %_0, align 4, !dbg !236
  br label %bb3, !dbg !237

bb1:                                              ; preds = %start
  %_3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !238
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !239
  store ptr %_3, ptr %3, align 4, !dbg !239
  store i32 1, ptr %_0, align 4, !dbg !239
  br label %bb3, !dbg !237

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i32, ptr %_0, align 4, !dbg !240
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !240
  %6 = load ptr, ptr %5, align 4, !dbg !240
  %7 = insertvalue { i32, ptr } poison, i32 %4, 0, !dbg !240
  %8 = insertvalue { i32, ptr } %7, ptr %6, 1, !dbg !240
  ret { i32, ptr } %8, !dbg !240
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::nth
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3nth17he9e61567c6bf8220E"(ptr align 4 %self, i32 %n) unnamed_addr #0 !dbg !241 {
start:
  %n.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !248, !DIExpression(), !250)
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !249, !DIExpression(), !251)
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::nth
  %0 = call { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3nth17h3c754a0cc90e5638E"(ptr align 4 %self, i32 %n) #11, !dbg !252
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !252
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !252
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !253
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !253
  ret { ptr, ptr } %2, !dbg !253
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53cde08552ac4939E"(ptr align 4 %self) unnamed_addr #0 !dbg !254 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !258, !DIExpression(), !259)
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %0 = call { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hafd8f3112898d1c3E"(ptr align 4 %self) #11, !dbg !260
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !260
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !260
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !261
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !261
  ret { ptr, ptr } %2, !dbg !261
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h6bc0e2afcbbf7e69E"(i32 %self.0, i32 %self.1, ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !262 {
start:
  %ptr.dbg.spill2.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i = alloca [8 x i8], align 4
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !300, !DIExpression(), !305)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %1, align 4
    #dbg_declare(ptr %slice.dbg.spill, !301, !DIExpression(), !306)
; call core::num::<impl usize>::checked_sub
  %2 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 %self.1, i32 %self.0) #11, !dbg !307
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !307
  %4 = extractvalue { i32, i32 } %2, 1, !dbg !307
  store i32 %3, ptr %_3, align 4, !dbg !307
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !307
  store i32 %4, ptr %5, align 4, !dbg !307
  %_6 = load i32, ptr %_3, align 4, !dbg !307
  %6 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !307
  %7 = load i32, ptr %6, align 4, !dbg !307
  %8 = trunc nuw i32 %_6 to i1, !dbg !308
  br i1 %8, label %bb2, label %bb5, !dbg !308

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !309
  %new_len = load i32, ptr %9, align 4, !dbg !309
  store i32 %new_len, ptr %new_len.dbg.spill, align 4, !dbg !309
    #dbg_declare(ptr %new_len.dbg.spill, !302, !DIExpression(), !309)
  %_8 = icmp ule i32 %self.1, %slice.1, !dbg !310
  br i1 %_8, label %bb3, label %bb5, !dbg !310

bb5:                                              ; preds = %bb2, %start
  store ptr null, ptr %_0, align 4, !dbg !311
  br label %bb6, !dbg !312

bb3:                                              ; preds = %bb2
  store ptr %slice.0, ptr %ptr.dbg.spill.i, align 4
  %10 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i, i32 4
  store i32 %slice.1, ptr %10, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i, !313, !DIExpression(), !329)
  store i32 %self.0, ptr %offset.dbg.spill.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i, !322, !DIExpression(), !331)
  store i32 %new_len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !323, !DIExpression(), !332)
  store ptr %slice.0, ptr %ptr.dbg.spill1.i, align 4, !dbg !333
    #dbg_declare(ptr %ptr.dbg.spill1.i, !324, !DIExpression(), !334)
  %ptr.i = getelementptr inbounds nuw i8, ptr %slice.0, i32 %self.0, !dbg !335
  store ptr %ptr.i, ptr %ptr.dbg.spill2.i, align 4, !dbg !335
    #dbg_declare(ptr %ptr.dbg.spill2.i, !327, !DIExpression(), !336)
  %11 = insertvalue { ptr, i32 } poison, ptr %ptr.i, 0, !dbg !337
  %12 = insertvalue { ptr, i32 } %11, i32 %new_len, 1, !dbg !337
  %_12.0 = extractvalue { ptr, i32 } %12, 0, !dbg !338
  %_12.1 = extractvalue { ptr, i32 } %12, 1, !dbg !338
  store ptr %_12.0, ptr %_0, align 4, !dbg !339
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !339
  store i32 %_12.1, ptr %13, align 4, !dbg !339
  br label %bb6, !dbg !312

bb6:                                              ; preds = %bb5, %bb3
  %14 = load ptr, ptr %_0, align 4, !dbg !340
  %15 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !340
  %16 = load i32, ptr %15, align 4, !dbg !340
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0, !dbg !340
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1, !dbg !340
  ret { ptr, i32 } %18, !dbg !340

bb7:                                              ; No predecessors!
  unreachable, !dbg !341
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h20a51ce4b1cc36f3E"(i32 %self, ptr align 4 %slice.0, i32 %slice.1, ptr align 4 %0) unnamed_addr #0 !dbg !342 {
start:
  %ptr.dbg.spill2.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i = alloca [8 x i8], align 4
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !379, !DIExpression(), !383)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %1, align 4
    #dbg_declare(ptr %slice.dbg.spill, !380, !DIExpression(), !384)
  %_3 = icmp ugt i32 %self, %slice.1, !dbg !385
  br i1 %_3, label %bb1, label %bb2, !dbg !385

bb2:                                              ; preds = %start
  %new_len = sub nuw i32 %slice.1, %self, !dbg !386
  store i32 %new_len, ptr %new_len.dbg.spill, align 4, !dbg !386
    #dbg_declare(ptr %new_len.dbg.spill, !381, !DIExpression(), !387)
  store ptr %slice.0, ptr %ptr.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i, i32 4
  store i32 %slice.1, ptr %2, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i, !388, !DIExpression(), !403)
  store i32 %self, ptr %offset.dbg.spill.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i, !397, !DIExpression(), !405)
  store i32 %new_len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !398, !DIExpression(), !406)
  store ptr %slice.0, ptr %ptr.dbg.spill1.i, align 4, !dbg !407
    #dbg_declare(ptr %ptr.dbg.spill1.i, !399, !DIExpression(), !408)
  %ptr.i = getelementptr inbounds nuw i32, ptr %slice.0, i32 %self, !dbg !409
  store ptr %ptr.i, ptr %ptr.dbg.spill2.i, align 4, !dbg !409
    #dbg_declare(ptr %ptr.dbg.spill2.i, !401, !DIExpression(), !410)
  %3 = insertvalue { ptr, i32 } poison, ptr %ptr.i, 0, !dbg !411
  %4 = insertvalue { ptr, i32 } %3, i32 %new_len, 1, !dbg !411
  %_17.0 = extractvalue { ptr, i32 } %4, 0, !dbg !412
  %_17.1 = extractvalue { ptr, i32 } %4, 1, !dbg !412
  %5 = insertvalue { ptr, i32 } poison, ptr %_17.0, 0, !dbg !413
  %6 = insertvalue { ptr, i32 } %5, i32 %_17.1, 1, !dbg !413
  ret { ptr, i32 } %6, !dbg !413

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 %self, i32 %slice.1, i32 %slice.1, ptr align 4 %0) #12, !dbg !414
  unreachable, !dbg !414
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nounwind
define dso_local void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h0f63b83af19f0450E"(ptr sret([24 x i8]) align 4 %_0, ptr %0, ptr %1, ptr %2, ptr %3) unnamed_addr #1 !dbg !415 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %b = alloca [8 x i8], align 4
  %a = alloca [8 x i8], align 4
  store ptr %0, ptr %a, align 4
  %4 = getelementptr inbounds i8, ptr %a, i32 4
  store ptr %1, ptr %4, align 4
  store ptr %2, ptr %b, align 4
  %5 = getelementptr inbounds i8, ptr %b, i32 4
  store ptr %3, ptr %5, align 4
    #dbg_declare(ptr %a, !420, !DIExpression(), !424)
    #dbg_declare(ptr %b, !421, !DIExpression(), !425)
; call core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %_4 = call i32 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hde5f6f54d650d72dE(ptr align 4 %a) #11, !dbg !426
; call core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %_6 = call i32 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h4e5d54f78a8b03c3E(ptr align 4 %b) #11, !dbg !427
; call core::cmp::min
  %len = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %_4, i32 %_6) #11, !dbg !428
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !428
    #dbg_declare(ptr %len.dbg.spill, !422, !DIExpression(), !429)
  %_8.0 = load ptr, ptr %a, align 4, !dbg !430
  %6 = getelementptr inbounds i8, ptr %a, i32 4, !dbg !430
  %_8.1 = load ptr, ptr %6, align 4, !dbg !430
  %_9.0 = load ptr, ptr %b, align 4, !dbg !431
  %7 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !431
  %_9.1 = load ptr, ptr %7, align 4, !dbg !431
  store ptr %_8.0, ptr %_0, align 4, !dbg !432
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !432
  store ptr %_8.1, ptr %8, align 4, !dbg !432
  %9 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !432
  store ptr %_9.0, ptr %9, align 4, !dbg !432
  %10 = getelementptr inbounds i8, ptr %9, i32 4, !dbg !432
  store ptr %_9.1, ptr %10, align 4, !dbg !432
  %11 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !432
  store i32 0, ptr %11, align 4, !dbg !432
  %12 = getelementptr inbounds i8, ptr %_0, i32 20, !dbg !432
  store i32 %len, ptr %12, align 4, !dbg !432
  ret void, !dbg !433
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::nth
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3nth17h3c754a0cc90e5638E"(ptr align 4 %self, i32 %n) unnamed_addr #0 !dbg !434 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %delta.dbg.spill = alloca [4 x i8], align 4
  %n.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !436, !DIExpression(), !444)
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !437, !DIExpression(), !445)
  %0 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !446
  %_5 = load i32, ptr %0, align 4, !dbg !446
  %1 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !447
  %_6 = load i32, ptr %1, align 4, !dbg !447
  %_7.0 = sub i32 %_5, %_6, !dbg !446
  %_7.1 = icmp ult i32 %_5, %_6, !dbg !446
  br i1 %_7.1, label %panic, label %bb1, !dbg !446

bb1:                                              ; preds = %start
; call core::cmp::min
  %delta = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %n, i32 %_7.0) #11, !dbg !448
  store i32 %delta, ptr %delta.dbg.spill, align 4, !dbg !448
    #dbg_declare(ptr %delta.dbg.spill, !438, !DIExpression(), !449)
  %2 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !450
  %_9 = load i32, ptr %2, align 4, !dbg !450
  %_10.0 = add i32 %_9, %delta, !dbg !450
  %_10.1 = icmp ult i32 %_10.0, %_9, !dbg !450
  br i1 %_10.1, label %panic1, label %bb3, !dbg !450

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_bbdfae2fe7cc92e259c457cd83407a54) #12, !dbg !446
  unreachable, !dbg !446

bb3:                                              ; preds = %bb1
  store i32 %_10.0, ptr %end.dbg.spill, align 4, !dbg !450
    #dbg_declare(ptr %end.dbg.spill, !440, !DIExpression(), !451)
  br label %bb4, !dbg !452

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_e73af6cd88521c856ab8b75d1360ee6c) #12, !dbg !450
  unreachable, !dbg !450

bb4:                                              ; preds = %bb9, %bb3
  %3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !453
  %_12 = load i32, ptr %3, align 4, !dbg !453
  %_11 = icmp ult i32 %_12, %_10.0, !dbg !453
  br i1 %_11, label %bb5, label %bb12, !dbg !453

bb12:                                             ; preds = %bb4
  %_20.0 = sub i32 %n, %delta, !dbg !454
  %_20.1 = icmp ult i32 %n, %delta, !dbg !454
  br i1 %_20.1, label %panic2, label %bb13, !dbg !454

bb5:                                              ; preds = %bb4
  %4 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !455
  %i = load i32, ptr %4, align 4, !dbg !455
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !455
    #dbg_declare(ptr %i.dbg.spill, !442, !DIExpression(), !456)
  %5 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !457
  %6 = load i32, ptr %5, align 4, !dbg !457
  %_14.0 = add i32 %6, 1, !dbg !457
  %_14.1 = icmp ult i32 %_14.0, %6, !dbg !457
  br i1 %_14.1, label %panic3, label %bb6, !dbg !457

bb13:                                             ; preds = %bb12
; call core::iter::adapters::zip::Zip<A,B>::super_nth
  %7 = call { ptr, ptr } @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$9super_nth17hce7bcff7877d53e3E"(ptr align 4 %self, i32 %_20.0) #11, !dbg !458
  %_0.0 = extractvalue { ptr, ptr } %7, 0, !dbg !458
  %_0.1 = extractvalue { ptr, ptr } %7, 1, !dbg !458
  %8 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !459
  %9 = insertvalue { ptr, ptr } %8, ptr %_0.1, 1, !dbg !459
  ret { ptr, ptr } %9, !dbg !459

panic2:                                           ; preds = %bb12
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_12ced2a16964da5a644be74de4fba2a9) #12, !dbg !454
  unreachable, !dbg !454

bb6:                                              ; preds = %bb5
  %10 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !457
  store i32 %_14.0, ptr %10, align 4, !dbg !457
  br label %bb9, !dbg !460

panic3:                                           ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_c7326983c8c8a873fe2d8ad8484cd14d) #12, !dbg !457
  unreachable, !dbg !457

bb9:                                              ; preds = %bb6
  br label %bb4, !dbg !461

bb7:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  unreachable

bb10:                                             ; No predecessors!
  unreachable

bb11:                                             ; No predecessors!
  unreachable
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hafd8f3112898d1c3E"(ptr align 4 %self) unnamed_addr #0 !dbg !462 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !464, !DIExpression(), !467)
  %0 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !468
  %_3 = load i32, ptr %0, align 4, !dbg !468
  %1 = getelementptr inbounds i8, ptr %self, i32 20, !dbg !469
  %_4 = load i32, ptr %1, align 4, !dbg !469
  %_2 = icmp ult i32 %_3, %_4, !dbg !468
  br i1 %_2, label %bb1, label %bb5, !dbg !468

bb5:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !470
  br label %bb6, !dbg !471

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !472
  %i = load i32, ptr %2, align 4, !dbg !472
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !472
    #dbg_declare(ptr %i.dbg.spill, !465, !DIExpression(), !473)
  %3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !474
  %4 = load i32, ptr %3, align 4, !dbg !474
  %_6.0 = add i32 %4, 1, !dbg !474
  %_6.1 = icmp ult i32 %_6.0, %4, !dbg !474
  br i1 %_6.1, label %panic, label %bb2, !dbg !474

bb6:                                              ; preds = %bb2, %bb5
  %5 = load ptr, ptr %_0, align 4, !dbg !475
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !475
  %7 = load ptr, ptr %6, align 4, !dbg !475
  %8 = insertvalue { ptr, ptr } poison, ptr %5, 0, !dbg !475
  %9 = insertvalue { ptr, ptr } %8, ptr %7, 1, !dbg !475
  ret { ptr, ptr } %9, !dbg !475

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !474
  store i32 %_6.0, ptr %10, align 4, !dbg !474
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_8 = call align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hf83e2897f8d561edE"(ptr align 4 %self, i32 %i) #11, !dbg !476
  %_11 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !477
; call <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_10 = call align 4 ptr @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hc84ffe062fe7c832E"(ptr align 4 %_11, i32 %i) #11, !dbg !478
  store ptr %_8, ptr %_0, align 4, !dbg !479
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !479
  store ptr %_10, ptr %11, align 4, !dbg !479
  br label %bb6, !dbg !471

panic:                                            ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_7b34dd83f0cf9edd6d0ceac404f7a23a) #12, !dbg !474
  unreachable, !dbg !474
}

; miniz_oxide::shared::update_adler32
; Function Attrs: nounwind
define dso_local i32 @_ZN11miniz_oxide6shared14update_adler3217h6668bde8619c7d4aE(i32 %adler, ptr align 1 %data.0, i32 %data.1) unnamed_addr #1 !dbg !480 {
start:
  %data.dbg.spill = alloca [8 x i8], align 4
  %adler.dbg.spill = alloca [4 x i8], align 4
  %hash = alloca [4 x i8], align 2
  store i32 %adler, ptr %adler.dbg.spill, align 4
    #dbg_declare(ptr %adler.dbg.spill, !490, !DIExpression(), !499)
  store ptr %data.0, ptr %data.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %data.dbg.spill, i32 4
  store i32 %data.1, ptr %0, align 4
    #dbg_declare(ptr %data.dbg.spill, !491, !DIExpression(), !500)
    #dbg_declare(ptr %hash, !492, !DIExpression(), !501)
; call adler2::Adler32::from_checksum
  %1 = call { i16, i16 } @_ZN6adler27Adler3213from_checksum17h266684498a3499f2E(i32 %adler) #11, !dbg !502
  %2 = extractvalue { i16, i16 } %1, 0, !dbg !502
  %3 = extractvalue { i16, i16 } %1, 1, !dbg !502
  store i16 %2, ptr %hash, align 2, !dbg !502
  %4 = getelementptr inbounds i8, ptr %hash, i32 2, !dbg !502
  store i16 %3, ptr %4, align 2, !dbg !502
; call adler2::Adler32::write_slice
  call void @_ZN6adler27Adler3211write_slice17he94a0ba82146b68dE(ptr align 2 %hash, ptr align 1 %data.0, i32 %data.1) #11, !dbg !503
; call adler2::Adler32::checksum
  %_0 = call i32 @_ZN6adler27Adler328checksum17h4b33d198b898b04bE(ptr align 2 %hash) #11, !dbg !504
  ret i32 %_0, !dbg !505
}

; miniz_oxide::MZFlush::new
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN11miniz_oxide7MZFlush3new17h9ed99828ac9c9861E(i32 %flush) unnamed_addr #1 !dbg !506 {
start:
  %flush.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %flush, ptr %flush.dbg.spill, align 4
    #dbg_declare(ptr %flush.dbg.spill, !529, !DIExpression(), !530)
  switch i32 %flush, label %bb1 [
    i32 0, label %bb5
    i32 1, label %bb4
    i32 2, label %bb4
    i32 3, label %bb3
    i32 4, label %bb2
  ], !dbg !531

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !532
  store i32 -10000, ptr %0, align 4, !dbg !532
  store i32 1, ptr %_0, align 4, !dbg !532
  br label %bb6, !dbg !533

bb5:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !534
  store i32 0, ptr %1, align 4, !dbg !534
  store i32 0, ptr %_0, align 4, !dbg !534
  br label %bb6, !dbg !535

bb4:                                              ; preds = %start, %start
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !536
  store i32 2, ptr %2, align 4, !dbg !536
  store i32 0, ptr %_0, align 4, !dbg !536
  br label %bb6, !dbg !537

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !538
  store i32 3, ptr %3, align 4, !dbg !538
  store i32 0, ptr %_0, align 4, !dbg !538
  br label %bb6, !dbg !539

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !540
  store i32 4, ptr %4, align 4, !dbg !540
  store i32 0, ptr %_0, align 4, !dbg !540
  br label %bb6, !dbg !541

bb6:                                              ; preds = %bb1, %bb2, %bb3, %bb4, %bb5
  %5 = load i32, ptr %_0, align 4, !dbg !542
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !542
  %7 = load i32, ptr %6, align 4, !dbg !542
  %8 = insertvalue { i32, i32 } poison, i32 %5, 0, !dbg !542
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1, !dbg !542
  ret { i32, i32 } %9, !dbg !542
}

; miniz_oxide::inflate::TINFLStatus::from_i32
; Function Attrs: nounwind
define dso_local i8 @_ZN11miniz_oxide7inflate11TINFLStatus8from_i3217h684347e588ee034fE(i32 %value) unnamed_addr #1 !dbg !543 {
start:
  %value.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store i32 %value, ptr %value.dbg.spill, align 4
    #dbg_declare(ptr %value.dbg.spill, !562, !DIExpression(), !563)
  switch i32 %value, label %bb1 [
    i32 -4, label %bb8
    i32 -3, label %bb7
    i32 -2, label %bb6
    i32 -1, label %bb5
    i32 0, label %bb4
    i32 1, label %bb3
    i32 2, label %bb2
  ], !dbg !564

bb1:                                              ; preds = %start
  store i8 3, ptr %_0, align 1, !dbg !565
  br label %bb9, !dbg !565

bb8:                                              ; preds = %start
  store i8 -4, ptr %_0, align 1, !dbg !566
  br label %bb9, !dbg !567

bb7:                                              ; preds = %start
  store i8 -3, ptr %_0, align 1, !dbg !568
  br label %bb9, !dbg !569

bb6:                                              ; preds = %start
  store i8 -2, ptr %_0, align 1, !dbg !570
  br label %bb9, !dbg !571

bb5:                                              ; preds = %start
  store i8 -1, ptr %_0, align 1, !dbg !572
  br label %bb9, !dbg !573

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !574
  br label %bb9, !dbg !575

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !576
  br label %bb9, !dbg !577

bb2:                                              ; preds = %start
  store i8 2, ptr %_0, align 1, !dbg !578
  br label %bb9, !dbg !579

bb9:                                              ; preds = %bb1, %bb2, %bb3, %bb4, %bb5, %bb6, %bb7, %bb8
  %0 = load i8, ptr %_0, align 1, !dbg !580
  ret i8 %0, !dbg !580
}

; miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
; Function Attrs: inlinehint nounwind
define internal { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %self) unnamed_addr #0 !dbg !581 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !603, !DIExpression(), !604)
  %_4.0 = load ptr, ptr %self, align 4, !dbg !605
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !605
  %_4.1 = load i32, ptr %0, align 4, !dbg !605
; call core::slice::<impl [T]>::first
  %_2 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17ha6e757e66188c477E"(ptr align 1 %_4.0, i32 %_4.1) #11, !dbg !606
; call core::option::Option<T>::map
  %1 = call { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17hb4a4bad60bdf5feaE"(ptr align 1 %_2, ptr align 4 %self) #11, !dbg !607
  %_0.0 = extractvalue { i1, i8 } %1, 0, !dbg !607
  %_0.1 = extractvalue { i1, i8 } %1, 1, !dbg !607
  %2 = insertvalue { i1, i8 } poison, i1 %_0.0, 0, !dbg !608
  %3 = insertvalue { i1, i8 } %2, i8 %_0.1, 1, !dbg !608
  ret { i1, i8 } %3, !dbg !608
}

; miniz_oxide::inflate::output_buffer::InputWrapper::read_byte::{{closure}}
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte28_$u7b$$u7b$closure$u7d$$u7d$17h1ca3d217ad9b632aE"(ptr align 4 %_1, ptr align 1 %n) unnamed_addr #0 !dbg !609 {
start:
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %steps.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %n.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !620, !DIExpression(DW_OP_deref), !621)
  store ptr %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !619, !DIExpression(), !622)
  store ptr %_1, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !623, !DIExpression(), !630)
  store i32 1, ptr %steps.dbg.spill.i, align 4
    #dbg_declare(ptr %steps.dbg.spill.i, !629, !DIExpression(), !632)
  %_5.0.i = load ptr, ptr %_1, align 4, !dbg !633
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !633
  %_5.1.i = load i32, ptr %0, align 4, !dbg !633
  store ptr %_5.0.i, ptr %self.dbg.spill.i1, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %_5.1.i, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !634, !DIExpression(), !643)
  store i32 1, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !640, !DIExpression(), !645)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %2 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32 1, ptr align 1 %_5.0.i, i32 %_5.1.i, ptr align 4 @alloc_60cf8681016101c24a80f577d300663f) #11, !dbg !646
  %_0.0.i = extractvalue { ptr, i32 } %2, 0, !dbg !646
  %_0.1.i = extractvalue { ptr, i32 } %2, 1, !dbg !646
  %_3.0.i = extractvalue { ptr, i32 } %2, 0, !dbg !647
  %_3.1.i = extractvalue { ptr, i32 } %2, 1, !dbg !647
  store ptr %_3.0.i, ptr %_1, align 4, !dbg !648
  %3 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !648
  store i32 %_3.1.i, ptr %3, align 4, !dbg !648
  %_0 = load i8, ptr %n, align 1, !dbg !649
  ret i8 %_0, !dbg !650
}

; miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %self) unnamed_addr #0 !dbg !651 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !665, !DIExpression(), !666)
  %_6.0 = load ptr, ptr %self, align 4, !dbg !667
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !667
  %_6.1 = load i32, ptr %0, align 4, !dbg !667
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !668
  %_4 = load i32, ptr %1, align 4, !dbg !668
  %_5.0 = sub i32 %_6.1, %_4, !dbg !667
  %_5.1 = icmp ult i32 %_6.1, %_4, !dbg !667
  br i1 %_5.1, label %panic, label %bb1, !dbg !667

bb1:                                              ; preds = %start
  ret i32 %_5.0, !dbg !669

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_b6524e77c5b215334b9619c6da6c99b9) #12, !dbg !667
  unreachable, !dbg !667
}

; miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte
; Function Attrs: inlinehint nounwind
define internal void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E(ptr align 4 %self, i8 %byte) unnamed_addr #0 !dbg !670 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !676, !DIExpression(), !678)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !677, !DIExpression(), !679)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !680
  %_3 = load i32, ptr %0, align 4, !dbg !680
  %_8.0 = load ptr, ptr %self, align 4, !dbg !681
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !681
  %_8.1 = load i32, ptr %1, align 4, !dbg !681
  %_6 = icmp ult i32 %_3, %_8.1, !dbg !681
  br i1 %_6, label %bb1, label %panic, !dbg !681

bb1:                                              ; preds = %start
  %_9.0 = load ptr, ptr %self, align 4, !dbg !681
  %2 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !681
  %_9.1 = load i32, ptr %2, align 4, !dbg !681
  %3 = getelementptr inbounds nuw i8, ptr %_9.0, i32 %_3, !dbg !681
  store i8 %byte, ptr %3, align 1, !dbg !681
  %4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !682
  %5 = load i32, ptr %4, align 4, !dbg !682
  %_7.0 = add i32 %5, 1, !dbg !682
  %_7.1 = icmp ult i32 %_7.0, %5, !dbg !682
  br i1 %_7.1, label %panic1, label %bb2, !dbg !682

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_3, i32 %_8.1, ptr align 4 @alloc_df202adf7748939b4402c3c9e1609d1e) #12, !dbg !681
  unreachable, !dbg !681

bb2:                                              ; preds = %bb1
  %6 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !682
  store i32 %_7.0, ptr %6, align 4, !dbg !682
  ret void, !dbg !683

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_e56d209b40851450c53c00b9933c110f) #12, !dbg !682
  unreachable, !dbg !682
}

; miniz_oxide::inflate::output_buffer::OutputBuffer::write_slice
; Function Attrs: inlinehint nounwind
define internal void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer11write_slice17haa1dbbd03040dff4E(ptr align 4 %self, ptr align 1 %data.0, i32 %data.1) unnamed_addr #0 !dbg !684 {
start:
  %index.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !689, !DIExpression(), !693)
  store ptr %data.0, ptr %data.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %data.dbg.spill, i32 4
  store i32 %data.1, ptr %0, align 4
    #dbg_declare(ptr %data.dbg.spill, !690, !DIExpression(), !694)
  store i32 %data.1, ptr %len.dbg.spill, align 4, !dbg !695
    #dbg_declare(ptr %len.dbg.spill, !691, !DIExpression(), !696)
  %_13.0 = load ptr, ptr %self, align 4, !dbg !697
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !697
  %_13.1 = load i32, ptr %1, align 4, !dbg !697
  %2 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !698
  %_7 = load i32, ptr %2, align 4, !dbg !698
  %3 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !699
  %_9 = load i32, ptr %3, align 4, !dbg !699
  %_10.0 = add i32 %_9, %data.1, !dbg !699
  %_10.1 = icmp ult i32 %_10.0, %_9, !dbg !699
  br i1 %_10.1, label %panic, label %bb1, !dbg !699

bb1:                                              ; preds = %start
  store ptr %_13.0, ptr %self.dbg.spill.i, align 4
  %4 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_13.1, ptr %4, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !700, !DIExpression(), !709)
  store i32 %_7, ptr %index.dbg.spill.i, align 4
  %5 = getelementptr inbounds i8, ptr %index.dbg.spill.i, i32 4
  store i32 %_10.0, ptr %5, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !706, !DIExpression(), !711)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %6 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32 %_7, i32 %_10.0, ptr align 1 %_13.0, i32 %_13.1, ptr align 4 @alloc_d6e4e9325a87ba24894766152a8044ff) #11, !dbg !712
  %_0.0.i = extractvalue { ptr, i32 } %6, 0, !dbg !712
  %_0.1.i = extractvalue { ptr, i32 } %6, 1, !dbg !712
  %_5.0 = extractvalue { ptr, i32 } %6, 0, !dbg !713
  %_5.1 = extractvalue { ptr, i32 } %6, 1, !dbg !713
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h10a9bbe4ea233c0cE"(ptr align 1 %_5.0, i32 %_5.1, ptr align 1 %data.0, i32 %data.1, ptr align 4 @alloc_b73edfb519854834448c80d12d703fdf) #11, !dbg !714
  %7 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !715
  %8 = load i32, ptr %7, align 4, !dbg !715
  %_12.0 = add i32 %8, %data.1, !dbg !715
  %_12.1 = icmp ult i32 %_12.0, %8, !dbg !715
  br i1 %_12.1, label %panic1, label %bb4, !dbg !715

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_36b6a8e2efc6648e46a4a577c64a1a0b) #12, !dbg !699
  unreachable, !dbg !699

bb4:                                              ; preds = %bb1
  %9 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !715
  store i32 %_12.0, ptr %9, align 4, !dbg !715
  ret void, !dbg !716

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_67454fc05ee6b193761cf87e9055709c) #12, !dbg !715
  unreachable, !dbg !715
}

; miniz_oxide::inflate::output_buffer::OutputBuffer::from_slice_and_pos
; Function Attrs: inlinehint nounwind
define internal void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer18from_slice_and_pos17hbd5ae6e2f26ce0abE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %slice.0, i32 %slice.1, i32 %position) unnamed_addr #0 !dbg !717 {
start:
  %position.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !722, !DIExpression(), !724)
  store i32 %position, ptr %position.dbg.spill, align 4
    #dbg_declare(ptr %position.dbg.spill, !723, !DIExpression(), !725)
  store ptr %slice.0, ptr %_0, align 4, !dbg !726
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !726
  store i32 %slice.1, ptr %1, align 4, !dbg !726
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !726
  store i32 %position, ptr %2, align 4, !dbg !726
  ret void, !dbg !727
}

; miniz_oxide::inflate::core::decompress
; Function Attrs: nounwind
define dso_local void @_ZN11miniz_oxide7inflate4core10decompress17h5728ab399a716cb3E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %r, ptr align 1 %in_buf.0, i32 %in_buf.1, ptr align 1 %out.0, i32 %out.1, i32 %out_pos, i32 %0) unnamed_addr #1 !dbg !728 {
start:
  %small.dbg.spill.i263 = alloca [2 x i8], align 2
  %small.dbg.spill.i261 = alloca [2 x i8], align 2
  %small.dbg.spill.i259 = alloca [2 x i8], align 2
  %small.dbg.spill.i257 = alloca [2 x i8], align 2
  %small.dbg.spill.i255 = alloca [2 x i8], align 2
  %small.dbg.spill.i253 = alloca [2 x i8], align 2
  %small.dbg.spill.i251 = alloca [2 x i8], align 2
  %small.dbg.spill.i249 = alloca [1 x i8], align 1
  %small.dbg.spill.i247 = alloca [1 x i8], align 1
  %small.dbg.spill.i245 = alloca [1 x i8], align 1
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %ptr.dbg.spill2.i.i233 = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i234 = alloca [4 x i8], align 4
  %len.dbg.spill.i.i235 = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i236 = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i237 = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i238 = alloca [8 x i8], align 4
  %self.dbg.spill.i.i239 = alloca [8 x i8], align 4
  %_3.i.i = alloca [8 x i8], align 4
  %index.dbg.spill.i240 = alloca [8 x i8], align 4
  %self.dbg.spill.i241 = alloca [8 x i8], align 4
  %index.dbg.spill.i229 = alloca [4 x i8], align 4
  %self.dbg.spill.i230 = alloca [8 x i8], align 4
  %index.dbg.spill.i225 = alloca [4 x i8], align 4
  %self.dbg.spill.i226 = alloca [8 x i8], align 4
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i222 = alloca [8 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i219 = alloca [4 x i8], align 4
  %self.dbg.spill.i220 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i216 = alloca [4 x i8], align 4
  %self.dbg.spill.i217 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i213 = alloca [4 x i8], align 4
  %self.dbg.spill.i214 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i211 = alloca [4 x i8], align 4
  %in_iter.dbg.spill.i194 = alloca [4 x i8], align 4
  %l.dbg.spill.i195 = alloca [4 x i8], align 4
  %in_iter.dbg.spill.i = alloca [4 x i8], align 4
  %l.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i192 = alloca [4 x i8], align 4
  %self.dbg.spill.i190 = alloca [4 x i8], align 4
  %self.dbg.spill.i188 = alloca [4 x i8], align 4
  %self.dbg.spill.i186 = alloca [4 x i8], align 4
  %self.dbg.spill.i184 = alloca [4 x i8], align 4
  %self.dbg.spill.i182 = alloca [4 x i8], align 4
  %self.dbg.spill.i180 = alloca [4 x i8], align 4
  %self.dbg.spill.i179 = alloca [4 x i8], align 4
  %self.dbg.spill.i176 = alloca [4 x i8], align 4
  %self.dbg.spill.i173 = alloca [4 x i8], align 4
  %self.dbg.spill.i170 = alloca [4 x i8], align 4
  %self.dbg.spill.i167 = alloca [4 x i8], align 4
  %self.dbg.spill.i164 = alloca [4 x i8], align 4
  %position.dbg.spill.i162 = alloca [4 x i8], align 4
  %self.dbg.spill.i163 = alloca [4 x i8], align 4
  %position.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i161 = alloca [4 x i8], align 4
  %self.dbg.spill.i160 = alloca [4 x i8], align 4
  %steps.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i159 = alloca [4 x i8], align 4
  %slice.dbg.spill.i158 = alloca [8 x i8], align 4
  %slice.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i155 = alloca [4 x i8], align 4
  %self.dbg.spill.i152 = alloca [4 x i8], align 4
  %self.dbg.spill.i149 = alloca [4 x i8], align 4
  %self.dbg.spill.i146 = alloca [4 x i8], align 4
  %self.dbg.spill.i143 = alloca [4 x i8], align 4
  %self.dbg.spill.i140 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %out_buf_pos.dbg.spill = alloca [4 x i8], align 4
  %result.dbg.spill133 = alloca [1 x i8], align 1
  %new_state.dbg.spill131 = alloca [1 x i8], align 1
  %result.dbg.spill129 = alloca [1 x i8], align 1
  %new_state.dbg.spill127 = alloca [1 x i8], align 1
  %match_end_pos.dbg.spill = alloca [4 x i8], align 4
  %out_len.dbg.spill = alloca [4 x i8], align 4
  %source_pos.dbg.spill122 = alloca [4 x i8], align 4
  %out_pos.dbg.spill120 = alloca [4 x i8], align 4
  %result.dbg.spill118 = alloca [1 x i8], align 1
  %new_state.dbg.spill116 = alloca [1 x i8], align 1
  %result.dbg.spill110 = alloca [1 x i8], align 1
  %new_state.dbg.spill108 = alloca [1 x i8], align 1
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right_val.dbg.spill = alloca [4 x i8], align 4
  %left_val.dbg.spill = alloca [4 x i8], align 4
  %undo.dbg.spill = alloca [4 x i8], align 4
  %in_consumed.dbg.spill = alloca [4 x i8], align 4
  %result.dbg.spill102 = alloca [1 x i8], align 1
  %new_state.dbg.spill100 = alloca [1 x i8], align 1
  %len.dbg.spill = alloca [4 x i8], align 4
  %source_pos.dbg.spill = alloca [4 x i8], align 4
  %out_pos.dbg.spill96 = alloca [4 x i8], align 4
  %result.dbg.spill94 = alloca [1 x i8], align 1
  %new_state.dbg.spill92 = alloca [1 x i8], align 1
  %result.dbg.spill89 = alloca [1 x i8], align 1
  %new_state.dbg.spill87 = alloca [1 x i8], align 1
  %result.dbg.spill85 = alloca [1 x i8], align 1
  %new_state.dbg.spill83 = alloca [1 x i8], align 1
  %num_extra.dbg.spill81 = alloca [4 x i8], align 4
  %result.dbg.spill79 = alloca [1 x i8], align 1
  %new_state.dbg.spill77 = alloca [1 x i8], align 1
  %result.dbg.spill75 = alloca [1 x i8], align 1
  %new_state.dbg.spill73 = alloca [1 x i8], align 1
  %num_extra.dbg.spill71 = alloca [4 x i8], align 4
  %result.dbg.spill69 = alloca [1 x i8], align 1
  %new_state.dbg.spill67 = alloca [1 x i8], align 1
  %result.dbg.spill65 = alloca [1 x i8], align 1
  %new_state.dbg.spill63 = alloca [1 x i8], align 1
  %new_state.dbg.spill61 = alloca [1 x i8], align 1
  %code_len.dbg.spill58 = alloca [4 x i8], align 4
  %symbol.dbg.spill57 = alloca [4 x i8], align 4
  %code_len.dbg.spill = alloca [4 x i8], align 4
  %symbol.dbg.spill = alloca [4 x i8], align 4
  %result.dbg.spill54 = alloca [1 x i8], align 1
  %new_state.dbg.spill52 = alloca [1 x i8], align 1
  %num_extra.dbg.spill = alloca [4 x i8], align 4
  %result.dbg.spill50 = alloca [1 x i8], align 1
  %new_state.dbg.spill48 = alloca [1 x i8], align 1
  %dist_table_end.dbg.spill45 = alloca [4 x i8], align 4
  %dist_table_start.dbg.spill43 = alloca [4 x i8], align 4
  %code_size_dist_end.dbg.spill = alloca [4 x i8], align 4
  %dist_table_end.dbg.spill = alloca [4 x i8], align 4
  %dist_table_start.dbg.spill = alloca [4 x i8], align 4
  %result.dbg.spill38 = alloca [1 x i8], align 1
  %new_state.dbg.spill36 = alloca [1 x i8], align 1
  %result.dbg.spill34 = alloca [1 x i8], align 1
  %new_state.dbg.spill32 = alloca [1 x i8], align 1
  %num_bits.dbg.spill = alloca [4 x i8], align 4
  %result.dbg.spill29 = alloca [1 x i8], align 1
  %new_state.dbg.spill27 = alloca [1 x i8], align 1
  %bytes_to_copy.dbg.spill = alloca [4 x i8], align 4
  %space_left.dbg.spill = alloca [4 x i8], align 4
  %result.dbg.spill25 = alloca [1 x i8], align 1
  %new_state.dbg.spill23 = alloca [1 x i8], align 1
  %result.dbg.spill21 = alloca [1 x i8], align 1
  %new_state.dbg.spill19 = alloca [1 x i8], align 1
  %valid.dbg.spill = alloca [1 x i8], align 1
  %check.dbg.spill = alloca [2 x i8], align 2
  %length.dbg.spill = alloca [2 x i8], align 2
  %result.dbg.spill17 = alloca [1 x i8], align 1
  %new_state.dbg.spill15 = alloca [1 x i8], align 1
  %result.dbg.spill13 = alloca [1 x i8], align 1
  %new_state.dbg.spill11 = alloca [1 x i8], align 1
  %result.dbg.spill9 = alloca [1 x i8], align 1
  %new_state.dbg.spill7 = alloca [1 x i8], align 1
  %result.dbg.spill5 = alloca [1 x i8], align 1
  %new_state.dbg.spill3 = alloca [1 x i8], align 1
  %result.dbg.spill = alloca [1 x i8], align 1
  %new_state.dbg.spill = alloca [1 x i8], align 1
  %out_pos.dbg.spill = alloca [4 x i8], align 4
  %out.dbg.spill = alloca [8 x i8], align 4
  %in_buf.dbg.spill = alloca [8 x i8], align 4
  %r.dbg.spill = alloca [4 x i8], align 4
  %need_adler = alloca [1 x i8], align 1
  %in_undo = alloca [4 x i8], align 4
  %_597 = alloca [2 x i8], align 1
  %_589 = alloca [24 x i8], align 4
  %_568 = alloca [8 x i8], align 4
  %_551 = alloca [2 x i8], align 1
  %_517 = alloca [2 x i8], align 1
  %_457 = alloca [2 x i8], align 1
  %_449 = alloca [2 x i8], align 1
  %_443 = alloca [2 x i8], align 1
  %_435 = alloca [2 x i8], align 1
  %_422 = alloca [64 x i8], align 2
  %_413 = alloca [32 x i8], align 1
  %_406 = alloca [2 x i8], align 1
  %_390 = alloca [2 x i8], align 1
  %status1 = alloca [1 x i8], align 1
  %_326 = alloca [2 x i8], align 1
  %_316 = alloca [2 x i8], align 1
  %_220 = alloca [2 x i8], align 1
  %_200 = alloca [2 x i8], align 1
  %_176 = alloca [12 x i8], align 4
  %_172 = alloca [2 x i8], align 1
  %_146 = alloca [2 x i8], align 1
  %_136 = alloca [2 x i8], align 1
  %_120 = alloca [2 x i8], align 1
  %_114 = alloca [2 x i8], align 1
  %_66 = alloca [2 x i8], align 1
  %_60 = alloca [2 x i8], align 1
  %_53 = alloca [2 x i8], align 1
  %_45 = alloca [16 x i8], align 4
  %_43 = alloca [2 x i8], align 1
  %_36 = alloca [2 x i8], align 1
  %_29 = alloca [2 x i8], align 1
  %status = alloca [1 x i8], align 1
  %l = alloca [20 x i8], align 4
  %out_buf = alloca [12 x i8], align 4
  %state = alloca [1 x i8], align 1
  %in_iter = alloca [8 x i8], align 4
  %out_buf_size_mask = alloca [4 x i8], align 4
  %flags = alloca [4 x i8], align 4
  store i32 %0, ptr %flags, align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !790, !DIExpression(), !980)
  store ptr %in_buf.0, ptr %in_buf.dbg.spill, align 4
  %2 = getelementptr inbounds i8, ptr %in_buf.dbg.spill, i32 4
  store i32 %in_buf.1, ptr %2, align 4
    #dbg_declare(ptr %in_buf.dbg.spill, !791, !DIExpression(), !981)
  store ptr %out.0, ptr %out.dbg.spill, align 4
  %3 = getelementptr inbounds i8, ptr %out.dbg.spill, i32 4
  store i32 %out.1, ptr %3, align 4
    #dbg_declare(ptr %out.dbg.spill, !792, !DIExpression(), !982)
  store i32 %out_pos, ptr %out_pos.dbg.spill, align 4
    #dbg_declare(ptr %out_pos.dbg.spill, !793, !DIExpression(), !983)
    #dbg_declare(ptr %flags, !794, !DIExpression(), !984)
    #dbg_declare(ptr %out_buf_size_mask, !795, !DIExpression(), !985)
    #dbg_declare(ptr %in_iter, !797, !DIExpression(), !986)
    #dbg_declare(ptr %state, !799, !DIExpression(), !987)
    #dbg_declare(ptr %out_buf, !801, !DIExpression(), !988)
    #dbg_declare(ptr %l, !803, !DIExpression(), !989)
    #dbg_declare(ptr %status, !812, !DIExpression(), !990)
    #dbg_declare(ptr %status1, !894, !DIExpression(), !991)
    #dbg_declare(ptr %in_undo, !974, !DIExpression(), !992)
    #dbg_declare(ptr %need_adler, !976, !DIExpression(), !993)
  %4 = load i32, ptr %flags, align 4, !dbg !994
  %_7 = and i32 %4, 4, !dbg !994
  %5 = icmp eq i32 %_7, 0, !dbg !994
  br i1 %5, label %bb2, label %bb1, !dbg !994

bb2:                                              ; preds = %start
  store i32 %out.1, ptr %self.dbg.spill.i220, align 4
    #dbg_declare(ptr %self.dbg.spill.i220, !995, !DIExpression(), !1004)
  store i32 1, ptr %rhs.dbg.spill.i219, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i219, !1003, !DIExpression(), !1006)
  %6 = call i32 @llvm.usub.sat.i32(i32 %out.1, i32 1), !dbg !1007
  store i32 %6, ptr %1, align 4, !dbg !1007
  %_0.i221 = load i32, ptr %1, align 4, !dbg !1007
  store i32 %_0.i221, ptr %out_buf_size_mask, align 4, !dbg !1008
  br label %bb3, !dbg !1008

bb1:                                              ; preds = %start
  store i32 -1, ptr %out_buf_size_mask, align 4, !dbg !1009
  br label %bb3, !dbg !1010

bb3:                                              ; preds = %bb1, %bb2
  %_12 = load i32, ptr %out_buf_size_mask, align 4, !dbg !1011
  store i32 %_12, ptr %self.dbg.spill.i211, align 4
    #dbg_declare(ptr %self.dbg.spill.i211, !1012, !DIExpression(), !1016)
  store i32 1, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !1015, !DIExpression(), !1018)
  %_0.i212 = add i32 %_12, 1, !dbg !1019
  %_13 = load i32, ptr %out_buf_size_mask, align 4, !dbg !1020
  %_10 = and i32 %_0.i212, %_13, !dbg !1021
  %7 = icmp eq i32 %_10, 0, !dbg !1021
  br i1 %7, label %bb5, label %bb6, !dbg !1021

bb5:                                              ; preds = %bb3
  %_14 = icmp ugt i32 %out_pos, %out.1, !dbg !1022
  br i1 %_14, label %bb6, label %bb7, !dbg !1022

bb6:                                              ; preds = %bb5, %bb3
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1023
  store i8 -3, ptr %8, align 4, !dbg !1023
  store i32 0, ptr %_0, align 4, !dbg !1023
  %9 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !1023
  store i32 0, ptr %9, align 4, !dbg !1023
  br label %bb356, !dbg !1024

bb7:                                              ; preds = %bb5
  store ptr %in_buf.0, ptr %slice.dbg.spill.i158, align 4
  %10 = getelementptr inbounds i8, ptr %slice.dbg.spill.i158, i32 4
  store i32 %in_buf.1, ptr %10, align 4
    #dbg_declare(ptr %slice.dbg.spill.i158, !1025, !DIExpression(), !1031)
  %11 = insertvalue { ptr, i32 } poison, ptr %in_buf.0, 0, !dbg !1033
  %12 = insertvalue { ptr, i32 } %11, i32 %in_buf.1, 1, !dbg !1033
  %13 = extractvalue { ptr, i32 } %12, 0, !dbg !1034
  %14 = extractvalue { ptr, i32 } %12, 1, !dbg !1034
  store ptr %13, ptr %in_iter, align 4, !dbg !1034
  %15 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1034
  store i32 %14, ptr %15, align 4, !dbg !1034
  %16 = getelementptr inbounds i8, ptr %r, i32 10496, !dbg !1035
  %17 = load i8, ptr %16, align 4, !dbg !1035
  store i8 %17, ptr %state, align 1, !dbg !1035
; call miniz_oxide::inflate::output_buffer::OutputBuffer::from_slice_and_pos
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer18from_slice_and_pos17hbd5ae6e2f26ce0abE(ptr sret([12 x i8]) align 4 %out_buf, ptr align 1 %out.0, i32 %out.1, i32 %out_pos) #11, !dbg !1036
  %18 = getelementptr inbounds i8, ptr %r, i32 10460, !dbg !1037
  %_22 = load i32, ptr %18, align 4, !dbg !1037
  %19 = getelementptr inbounds i8, ptr %r, i32 10432, !dbg !1038
  %_23 = load i32, ptr %19, align 4, !dbg !1038
  %20 = getelementptr inbounds i8, ptr %r, i32 10452, !dbg !1039
  %_24 = load i32, ptr %20, align 4, !dbg !1039
  %21 = getelementptr inbounds i8, ptr %r, i32 10456, !dbg !1040
  %_25 = load i32, ptr %21, align 4, !dbg !1040
  %22 = getelementptr inbounds i8, ptr %r, i32 10476, !dbg !1041
  %_26 = load i8, ptr %22, align 4, !dbg !1041
  store i32 %_22, ptr %l, align 4, !dbg !1042
  %23 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1042
  store i32 %_23, ptr %23, align 4, !dbg !1042
  %24 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1042
  store i32 %_24, ptr %24, align 4, !dbg !1042
  %25 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1042
  store i32 %_25, ptr %25, align 4, !dbg !1042
  %26 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1042
  store i8 %_26, ptr %26, align 4, !dbg !1042
  br label %bb10, !dbg !1043

bb10:                                             ; preds = %bb317, %bb269, %bb228, %bb309, %bb288, %bb76, %bb64, %bb242, %bb237, %bb233, %bb213, %bb203, %bb169, %bb164, %bb124, %bb114, %bb101, %bb85, %bb60, %bb35, %bb31, %bb27, %bb23, %bb19, %bb7
  %27 = load i8, ptr %state, align 1, !dbg !1044
  %_28 = zext i8 %27 to i32, !dbg !1044
  switch i32 %_28, label %bb11 [
    i32 0, label %bb13
    i32 1, label %bb20
    i32 2, label %bb24
    i32 3, label %bb28
    i32 4, label %bb32
    i32 5, label %bb36
    i32 6, label %bb77
    i32 7, label %bb86
    i32 8, label %bb102
    i32 9, label %bb115
    i32 10, label %bb125
    i32 11, label %bb165
    i32 12, label %bb170
    i32 13, label %bb204
    i32 14, label %bb229
    i32 15, label %bb234
    i32 16, label %bb238
    i32 17, label %bb61
    i32 18, label %bb65
    i32 19, label %bb270
    i32 20, label %bb289
    i32 21, label %bb214
    i32 22, label %bb243
    i32 23, label %bb310
    i32 24, label %bb12
  ], !dbg !1045

bb11:                                             ; preds = %bb10
  store i8 -1, ptr %status, align 1, !dbg !1046
  br label %bb318, !dbg !1047

bb13:                                             ; preds = %bb16, %bb10
  store i32 0, ptr %l, align 4, !dbg !1048
  %28 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1049
  store i32 0, ptr %28, align 4, !dbg !1049
  %29 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1050
  store i32 0, ptr %29, align 4, !dbg !1050
  %30 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1051
  store i32 0, ptr %30, align 4, !dbg !1051
  %31 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1052
  store i8 0, ptr %31, align 4, !dbg !1052
  %32 = getelementptr inbounds i8, ptr %r, i32 10436, !dbg !1053
  store i32 0, ptr %32, align 4, !dbg !1053
  %33 = getelementptr inbounds i8, ptr %r, i32 10440, !dbg !1054
  store i32 0, ptr %33, align 4, !dbg !1054
  %34 = getelementptr inbounds i8, ptr %r, i32 10444, !dbg !1055
  store i32 1, ptr %34, align 4, !dbg !1055
  %35 = getelementptr inbounds i8, ptr %r, i32 10448, !dbg !1056
  store i32 1, ptr %35, align 4, !dbg !1056
  %36 = load i32, ptr %flags, align 4, !dbg !1057
  %_30 = and i32 %36, 1, !dbg !1057
  %37 = icmp eq i32 %_30, 0, !dbg !1057
  br i1 %37, label %bb15, label %bb14, !dbg !1057

bb20:                                             ; preds = %bb20, %bb10
  %_39 = getelementptr inbounds i8, ptr %r, i32 10436, !dbg !1058
  %38 = load i32, ptr %flags, align 4, !dbg !1059
; call miniz_oxide::inflate::core::read_byte
  %39 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h22ea5c72806c2d92E(ptr align 4 %in_iter, i32 %38, ptr align 4 %_39) #11, !dbg !1059
  %40 = extractvalue { i8, i8 } %39, 0, !dbg !1059
  %41 = extractvalue { i8, i8 } %39, 1, !dbg !1059
  store i8 %40, ptr %_36, align 1, !dbg !1059
  %42 = getelementptr inbounds i8, ptr %_36, i32 1, !dbg !1059
  store i8 %41, ptr %42, align 1, !dbg !1059
  %43 = load i8, ptr %_36, align 1, !dbg !1060
  %44 = getelementptr inbounds i8, ptr %_36, i32 1, !dbg !1060
  %45 = load i8, ptr %44, align 1, !dbg !1060
  %_40 = zext i8 %43 to i32, !dbg !1060
  switch i32 %_40, label %bb17 [
    i32 0, label %bb20
    i32 1, label %bb23
    i32 2, label %bb22
  ], !dbg !1061

bb24:                                             ; preds = %bb24, %bb10
  %_46 = getelementptr inbounds i8, ptr %r, i32 10436, !dbg !1062
  %_47 = getelementptr inbounds i8, ptr %r, i32 10440, !dbg !1062
  store ptr %_46, ptr %_45, align 4, !dbg !1062
  %46 = getelementptr inbounds i8, ptr %_45, i32 4, !dbg !1062
  store ptr %_47, ptr %46, align 4, !dbg !1062
  %47 = getelementptr inbounds i8, ptr %_45, i32 8, !dbg !1062
  store ptr %flags, ptr %47, align 4, !dbg !1062
  %48 = getelementptr inbounds i8, ptr %_45, i32 12, !dbg !1062
  store ptr %out_buf_size_mask, ptr %48, align 4, !dbg !1062
  %49 = load i32, ptr %flags, align 4, !dbg !1063
; call miniz_oxide::inflate::core::read_byte
  %50 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17he66975888a6d0044E(ptr align 4 %in_iter, i32 %49, ptr align 4 %_45) #11, !dbg !1063
  %51 = extractvalue { i8, i8 } %50, 0, !dbg !1063
  %52 = extractvalue { i8, i8 } %50, 1, !dbg !1063
  store i8 %51, ptr %_43, align 1, !dbg !1063
  %53 = getelementptr inbounds i8, ptr %_43, i32 1, !dbg !1063
  store i8 %52, ptr %53, align 1, !dbg !1063
  %54 = load i8, ptr %_43, align 1, !dbg !1064
  %55 = getelementptr inbounds i8, ptr %_43, i32 1, !dbg !1064
  %56 = load i8, ptr %55, align 1, !dbg !1064
  %_50 = zext i8 %54 to i32, !dbg !1064
  switch i32 %_50, label %bb17 [
    i32 0, label %bb24
    i32 1, label %bb27
    i32 2, label %bb26
  ], !dbg !1061

bb28:                                             ; preds = %bb28, %bb10
  %57 = load i32, ptr %flags, align 4, !dbg !1065
; call miniz_oxide::inflate::core::read_bits
  %58 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hae2123298af03554E(ptr align 4 %l, i32 3, ptr align 4 %in_iter, i32 %57, ptr align 4 %r) #11, !dbg !1065
  %59 = extractvalue { i8, i8 } %58, 0, !dbg !1065
  %60 = extractvalue { i8, i8 } %58, 1, !dbg !1065
  store i8 %59, ptr %_53, align 1, !dbg !1065
  %61 = getelementptr inbounds i8, ptr %_53, i32 1, !dbg !1065
  store i8 %60, ptr %61, align 1, !dbg !1065
  %62 = load i8, ptr %_53, align 1, !dbg !1066
  %63 = getelementptr inbounds i8, ptr %_53, i32 1, !dbg !1066
  %64 = load i8, ptr %63, align 1, !dbg !1066
  %_57 = zext i8 %62 to i32, !dbg !1066
  switch i32 %_57, label %bb17 [
    i32 0, label %bb28
    i32 1, label %bb31
    i32 2, label %bb30
  ], !dbg !1061

bb32:                                             ; preds = %bb32, %bb10
  %65 = load i32, ptr %flags, align 4, !dbg !1067
; call miniz_oxide::inflate::core::pad_to_bytes
  %66 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12pad_to_bytes17h0584dcd0c0b46f8fE(ptr align 4 %l, ptr align 4 %in_iter, i32 %65) #11, !dbg !1067
  %67 = extractvalue { i8, i8 } %66, 0, !dbg !1067
  %68 = extractvalue { i8, i8 } %66, 1, !dbg !1067
  store i8 %67, ptr %_60, align 1, !dbg !1067
  %69 = getelementptr inbounds i8, ptr %_60, i32 1, !dbg !1067
  store i8 %68, ptr %69, align 1, !dbg !1067
  %70 = load i8, ptr %_60, align 1, !dbg !1068
  %71 = getelementptr inbounds i8, ptr %_60, i32 1, !dbg !1068
  %72 = load i8, ptr %71, align 1, !dbg !1068
  %_63 = zext i8 %70 to i32, !dbg !1068
  switch i32 %_63, label %bb17 [
    i32 0, label %bb32
    i32 1, label %bb35
    i32 2, label %bb34
  ], !dbg !1061

bb36:                                             ; preds = %bb58, %bb10
  %73 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1069
  %_68 = load i32, ptr %73, align 4, !dbg !1069
  %_67 = icmp ult i32 %_68, 4, !dbg !1069
  br i1 %_67, label %bb37, label %bb40, !dbg !1069

bb77:                                             ; preds = %bb83, %bb10
  %74 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1070
  %_137 = load i32, ptr %74, align 4, !dbg !1070
  %75 = icmp eq i32 %_137, 0, !dbg !1070
  br i1 %75, label %bb78, label %bb79, !dbg !1070

bb86:                                             ; preds = %bb99, %bb10
  store ptr %in_iter, ptr %self.dbg.spill.i155, align 4
    #dbg_declare(ptr %self.dbg.spill.i155, !1071, !DIExpression(), !1078)
  %_2.0.i156 = load ptr, ptr %in_iter, align 4, !dbg !1080
  %76 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1080
  %_2.1.i157 = load i32, ptr %76, align 4, !dbg !1080
  %_147 = icmp ugt i32 %_2.1.i157, 0, !dbg !1081
  br i1 %_147, label %bb88, label %bb98, !dbg !1081

bb102:                                            ; preds = %bb112, %bb10
  %77 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1082
  %_174 = load i32, ptr %77, align 4, !dbg !1082
  %_173 = icmp ult i32 %_174, 3, !dbg !1082
  br i1 %_173, label %bb103, label %bb105, !dbg !1082

bb115:                                            ; preds = %bb122, %bb10
  %78 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1083
  %_202 = load i32, ptr %78, align 4, !dbg !1083
  %79 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1084
  %80 = getelementptr inbounds nuw i16, ptr %79, i32 2, !dbg !1084
  %_204 = load i16, ptr %80, align 4, !dbg !1084
; call <T as core::convert::Into<U>>::into
  %_203 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h241f1438f7071ec9E"(i16 %_204, ptr align 4 @alloc_e03767dcd3e63de63988192ee804a55d) #11, !dbg !1085
  %_201 = icmp ult i32 %_202, %_203, !dbg !1083
  br i1 %_201, label %bb118, label %bb119, !dbg !1083

bb125:                                            ; preds = %bb162, %bb10
  %81 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1086
  %_222 = load i32, ptr %81, align 4, !dbg !1086
  %82 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1087
  %83 = getelementptr inbounds nuw i16, ptr %82, i32 0, !dbg !1087
  %_225 = load i16, ptr %83, align 4, !dbg !1087
  store i16 %_225, ptr %small.dbg.spill.i263, align 2
    #dbg_declare(ptr %small.dbg.spill.i263, !1088, !DIExpression(), !1097)
  %_0.i264 = zext i16 %_225 to i32, !dbg !1099
  %84 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1100
  %85 = getelementptr inbounds nuw i16, ptr %84, i32 1, !dbg !1100
  %_229 = load i16, ptr %85, align 2, !dbg !1100
  store i16 %_229, ptr %small.dbg.spill.i261, align 2
    #dbg_declare(ptr %small.dbg.spill.i261, !1088, !DIExpression(), !1101)
  %_0.i262 = zext i16 %_229 to i32, !dbg !1103
  %_232.0 = add i32 %_0.i264, %_0.i262, !dbg !1104
  %_232.1 = icmp ult i32 %_232.0, %_0.i264, !dbg !1104
  br i1 %_232.1, label %panic39, label %bb130, !dbg !1104

bb165:                                            ; preds = %bb165, %bb10
  %86 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1105
  %_318 = load i8, ptr %86, align 4, !dbg !1105
; call <T as core::convert::Into<U>>::into
  %num_extra = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd2f0d712f59e2a35E"(i8 %_318, ptr align 4 @alloc_2c2e2ffe10e3e9c0a1c8f433d31a4136) #11, !dbg !1106
  store i32 %num_extra, ptr %num_extra.dbg.spill, align 4, !dbg !1106
    #dbg_declare(ptr %num_extra.dbg.spill, !888, !DIExpression(), !1107)
  %87 = load i32, ptr %flags, align 4, !dbg !1108
; call miniz_oxide::inflate::core::read_bits
  %88 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hc66494087bc7899aE(ptr align 4 %l, i32 %num_extra, ptr align 4 %in_iter, i32 %87, ptr align 1 %r) #11, !dbg !1108
  %89 = extractvalue { i8, i8 } %88, 0, !dbg !1108
  %90 = extractvalue { i8, i8 } %88, 1, !dbg !1108
  store i8 %89, ptr %_316, align 1, !dbg !1108
  %91 = getelementptr inbounds i8, ptr %_316, i32 1, !dbg !1108
  store i8 %90, ptr %91, align 1, !dbg !1108
  %92 = load i8, ptr %_316, align 1, !dbg !1109
  %93 = getelementptr inbounds i8, ptr %_316, i32 1, !dbg !1109
  %94 = load i8, ptr %93, align 1, !dbg !1109
  %_323 = zext i8 %92 to i32, !dbg !1109
  switch i32 %_323, label %bb17 [
    i32 0, label %bb165
    i32 1, label %bb169
    i32 2, label %bb168
  ], !dbg !1061

bb170:                                            ; preds = %bb201, %bb10
  store ptr %in_iter, ptr %self.dbg.spill.i149, align 4
    #dbg_declare(ptr %self.dbg.spill.i149, !1071, !DIExpression(), !1110)
  %_2.0.i150 = load ptr, ptr %in_iter, align 4, !dbg !1112
  %95 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1112
  %_2.1.i151 = load i32, ptr %95, align 4, !dbg !1112
  %_327 = icmp ult i32 %_2.1.i151, 4, !dbg !1113
  br i1 %_327, label %bb174, label %bb172, !dbg !1113

bb204:                                            ; preds = %bb211, %bb10
  %96 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1114
  %_392 = load i32, ptr %96, align 4, !dbg !1114
  %_391 = icmp uge i32 %_392, 256, !dbg !1114
  br i1 %_391, label %bb205, label %bb206, !dbg !1114

bb229:                                            ; preds = %bb229, %bb10
  %97 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1115
  %_437 = load i8, ptr %97, align 4, !dbg !1115
; call <T as core::convert::Into<U>>::into
  %num_extra70 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd2f0d712f59e2a35E"(i8 %_437, ptr align 4 @alloc_a44c1564d2bad8baee1b48b111a389ca) #11, !dbg !1116
  store i32 %num_extra70, ptr %num_extra.dbg.spill71, align 4, !dbg !1116
    #dbg_declare(ptr %num_extra.dbg.spill71, !915, !DIExpression(), !1117)
  %98 = load i32, ptr %flags, align 4, !dbg !1118
; call miniz_oxide::inflate::core::read_bits
  %99 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h288010cbd3bc759bE(ptr align 4 %l, i32 %num_extra70, ptr align 4 %in_iter, i32 %98) #11, !dbg !1118
  %100 = extractvalue { i8, i8 } %99, 0, !dbg !1118
  %101 = extractvalue { i8, i8 } %99, 1, !dbg !1118
  store i8 %100, ptr %_435, align 1, !dbg !1118
  %102 = getelementptr inbounds i8, ptr %_435, i32 1, !dbg !1118
  store i8 %101, ptr %102, align 1, !dbg !1118
  %103 = load i8, ptr %_435, align 1, !dbg !1119
  %104 = getelementptr inbounds i8, ptr %_435, i32 1, !dbg !1119
  %105 = load i8, ptr %104, align 1, !dbg !1119
  %_440 = zext i8 %103 to i32, !dbg !1119
  switch i32 %_440, label %bb17 [
    i32 0, label %bb229
    i32 1, label %bb233
    i32 2, label %bb232
  ], !dbg !1061

bb234:                                            ; preds = %bb234, %bb10
  %106 = load i32, ptr %flags, align 4, !dbg !1120
; call miniz_oxide::inflate::core::decode_huffman_code
  %107 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core19decode_huffman_code17he1f07a3fb7651905E(ptr align 4 %r, ptr align 4 %l, i32 1, i32 %106, ptr align 4 %in_iter) #11, !dbg !1120
  %108 = extractvalue { i8, i8 } %107, 0, !dbg !1120
  %109 = extractvalue { i8, i8 } %107, 1, !dbg !1120
  store i8 %108, ptr %_443, align 1, !dbg !1120
  %110 = getelementptr inbounds i8, ptr %_443, i32 1, !dbg !1120
  store i8 %109, ptr %110, align 1, !dbg !1120
  %111 = load i8, ptr %_443, align 1, !dbg !1121
  %112 = getelementptr inbounds i8, ptr %_443, i32 1, !dbg !1121
  %113 = load i8, ptr %112, align 1, !dbg !1121
  %_446 = zext i8 %111 to i32, !dbg !1121
  switch i32 %_446, label %bb17 [
    i32 0, label %bb234
    i32 1, label %bb237
    i32 2, label %bb236
  ], !dbg !1061

bb238:                                            ; preds = %bb238, %bb10
  %114 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1122
  %_451 = load i8, ptr %114, align 4, !dbg !1122
; call <T as core::convert::Into<U>>::into
  %num_extra80 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd2f0d712f59e2a35E"(i8 %_451, ptr align 4 @alloc_97a08afd798c340c0356e59fbcafc7c0) #11, !dbg !1123
  store i32 %num_extra80, ptr %num_extra.dbg.spill81, align 4, !dbg !1123
    #dbg_declare(ptr %num_extra.dbg.spill81, !925, !DIExpression(), !1124)
  %115 = load i32, ptr %flags, align 4, !dbg !1125
; call miniz_oxide::inflate::core::read_bits
  %116 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h6bec93435712bff5E(ptr align 4 %l, i32 %num_extra80, ptr align 4 %in_iter, i32 %115) #11, !dbg !1125
  %117 = extractvalue { i8, i8 } %116, 0, !dbg !1125
  %118 = extractvalue { i8, i8 } %116, 1, !dbg !1125
  store i8 %117, ptr %_449, align 1, !dbg !1125
  %119 = getelementptr inbounds i8, ptr %_449, i32 1, !dbg !1125
  store i8 %118, ptr %119, align 1, !dbg !1125
  %120 = load i8, ptr %_449, align 1, !dbg !1126
  %121 = getelementptr inbounds i8, ptr %_449, i32 1, !dbg !1126
  %122 = load i8, ptr %121, align 1, !dbg !1126
  %_454 = zext i8 %120 to i32, !dbg !1126
  switch i32 %_454, label %bb17 [
    i32 0, label %bb238
    i32 1, label %bb242
    i32 2, label %bb241
  ], !dbg !1061

bb61:                                             ; preds = %bb61, %bb10
  %123 = load i32, ptr %flags, align 4, !dbg !1127
; call miniz_oxide::inflate::core::read_bits
  %124 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h66e7e21f8e400e8bE(ptr align 4 %l, i32 8, ptr align 4 %in_iter, i32 %123) #11, !dbg !1127
  %125 = extractvalue { i8, i8 } %124, 0, !dbg !1127
  %126 = extractvalue { i8, i8 } %124, 1, !dbg !1127
  store i8 %125, ptr %_114, align 1, !dbg !1127
  %127 = getelementptr inbounds i8, ptr %_114, i32 1, !dbg !1127
  store i8 %126, ptr %127, align 1, !dbg !1127
  %128 = load i8, ptr %_114, align 1, !dbg !1128
  %129 = getelementptr inbounds i8, ptr %_114, i32 1, !dbg !1128
  %130 = load i8, ptr %129, align 1, !dbg !1128
  %_117 = zext i8 %128 to i32, !dbg !1128
  switch i32 %_117, label %bb17 [
    i32 0, label %bb61
    i32 1, label %bb64
    i32 2, label %bb63
  ], !dbg !1061

bb65:                                             ; preds = %bb74, %bb10
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_121 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1129
  %131 = icmp eq i32 %_121, 0, !dbg !1130
  br i1 %131, label %bb67, label %bb68, !dbg !1130

bb270:                                            ; preds = %bb286, %bb10
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_519 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1131
  %_518 = icmp ugt i32 %_519, 0, !dbg !1132
  br i1 %_518, label %bb272, label %bb285, !dbg !1132

bb289:                                            ; preds = %bb307, %bb10
  %132 = getelementptr inbounds i8, ptr %r, i32 10474, !dbg !1133
  %_552 = load i8, ptr %132, align 2, !dbg !1133
  %133 = icmp eq i8 %_552, 0, !dbg !1133
  br i1 %133, label %bb306, label %bb290, !dbg !1133

bb214:                                            ; preds = %bb226, %bb10
  %134 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1134
  %135 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1134
  %136 = load i32, ptr %135, align 4, !dbg !1134
  %137 = and i32 %136, 511, !dbg !1134
  store i32 %137, ptr %134, align 4, !dbg !1134
  %138 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1135
  %_407 = load i32, ptr %138, align 4, !dbg !1135
  %139 = icmp eq i32 %_407, 256, !dbg !1135
  br i1 %139, label %bb215, label %bb216, !dbg !1135

bb243:                                            ; preds = %bb267, %bb10
  %140 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1136
  %_460 = load i32, ptr %140, align 4, !dbg !1136
  store ptr %out_buf, ptr %self.dbg.spill.i188, align 4
    #dbg_declare(ptr %self.dbg.spill.i188, !1137, !DIExpression(), !1141)
  %141 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1143
  %_0.i189 = load i32, ptr %141, align 4, !dbg !1143
  %_458 = icmp ugt i32 %_460, %_0.i189, !dbg !1136
  br i1 %_458, label %bb245, label %bb246, !dbg !1136

bb310:                                            ; preds = %bb315, %bb10
  %142 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1144
  %_599 = load i32, ptr %142, align 4, !dbg !1144
  %_598 = icmp ult i32 %_599, 4, !dbg !1144
  br i1 %_598, label %bb311, label %bb314, !dbg !1144

bb12:                                             ; preds = %bb10
  store i8 0, ptr %status, align 1, !dbg !1145
  br label %bb318, !dbg !1146

bb15:                                             ; preds = %bb13
  %143 = getelementptr inbounds i8, ptr %_29, i32 1, !dbg !1147
  store i8 3, ptr %143, align 1, !dbg !1147
  store i8 1, ptr %_29, align 1, !dbg !1147
  br label %bb16, !dbg !1148

bb14:                                             ; preds = %bb13
  %144 = getelementptr inbounds i8, ptr %_29, i32 1, !dbg !1149
  store i8 1, ptr %144, align 1, !dbg !1149
  store i8 1, ptr %_29, align 1, !dbg !1149
  br label %bb16, !dbg !1148

bb16:                                             ; preds = %bb14, %bb15
  %145 = load i8, ptr %_29, align 1, !dbg !1150
  %146 = getelementptr inbounds i8, ptr %_29, i32 1, !dbg !1150
  %147 = load i8, ptr %146, align 1, !dbg !1150
  %_33 = zext i8 %145 to i32, !dbg !1150
  switch i32 %_33, label %bb17 [
    i32 0, label %bb13
    i32 1, label %bb19
    i32 2, label %bb18
  ], !dbg !1061

bb17:                                             ; preds = %bb315, %bb267, %bb226, %bb307, %bb286, %bb74, %bb61, %bb238, %bb234, %bb229, %bb211, %bb201, %bb165, %bb162, %bb122, %bb112, %bb99, %bb83, %bb58, %bb32, %bb28, %bb24, %bb20, %bb16
  unreachable, !dbg !1151

bb19:                                             ; preds = %bb16
  %148 = getelementptr inbounds i8, ptr %_29, i32 1, !dbg !1153
  %new_state = load i8, ptr %148, align 1, !dbg !1153
  store i8 %new_state, ptr %new_state.dbg.spill, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill, !814, !DIExpression(), !1154)
  store i8 %new_state, ptr %state, align 1, !dbg !1155
  br label %bb10, !dbg !1156

bb18:                                             ; preds = %bb16
  %149 = getelementptr inbounds i8, ptr %_29, i32 1, !dbg !1158
  %result = load i8, ptr %149, align 1, !dbg !1158
  store i8 %result, ptr %result.dbg.spill, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill, !816, !DIExpression(), !1159)
  store i8 %result, ptr %status, align 1, !dbg !1160
  br label %bb318, !dbg !1156

bb318:                                            ; preds = %bb11, %bb12, %bb316, %bb268, %bb227, %bb308, %bb287, %bb75, %bb63, %bb241, %bb236, %bb232, %bb212, %bb202, %bb168, %bb163, %bb123, %bb113, %bb100, %bb84, %bb59, %bb34, %bb30, %bb26, %bb22, %bb18
; call core::cmp::PartialEq::ne
  %_614 = call zeroext i1 @_ZN4core3cmp9PartialEq2ne17hbf384579b5eabf64E(ptr align 1 %status, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4) #11, !dbg !1161
  br i1 %_614, label %bb320, label %bb326, !dbg !1161

bb23:                                             ; preds = %bb20
  %150 = getelementptr inbounds i8, ptr %_36, i32 1, !dbg !1153
  %new_state2 = load i8, ptr %150, align 1, !dbg !1153
  store i8 %new_state2, ptr %new_state.dbg.spill3, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill3, !818, !DIExpression(), !1162)
  store i8 %new_state2, ptr %state, align 1, !dbg !1163
  br label %bb10, !dbg !1156

bb22:                                             ; preds = %bb20
  %151 = getelementptr inbounds i8, ptr %_36, i32 1, !dbg !1158
  %result4 = load i8, ptr %151, align 1, !dbg !1158
  store i8 %result4, ptr %result.dbg.spill5, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill5, !820, !DIExpression(), !1164)
  store i8 %result4, ptr %status, align 1, !dbg !1165
  br label %bb318, !dbg !1156

bb27:                                             ; preds = %bb24
  %152 = getelementptr inbounds i8, ptr %_43, i32 1, !dbg !1153
  %new_state6 = load i8, ptr %152, align 1, !dbg !1153
  store i8 %new_state6, ptr %new_state.dbg.spill7, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill7, !822, !DIExpression(), !1166)
  store i8 %new_state6, ptr %state, align 1, !dbg !1167
  br label %bb10, !dbg !1156

bb26:                                             ; preds = %bb24
  %153 = getelementptr inbounds i8, ptr %_43, i32 1, !dbg !1158
  %result8 = load i8, ptr %153, align 1, !dbg !1158
  store i8 %result8, ptr %result.dbg.spill9, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill9, !824, !DIExpression(), !1168)
  store i8 %result8, ptr %status, align 1, !dbg !1169
  br label %bb318, !dbg !1156

bb31:                                             ; preds = %bb28
  %154 = getelementptr inbounds i8, ptr %_53, i32 1, !dbg !1153
  %new_state10 = load i8, ptr %154, align 1, !dbg !1153
  store i8 %new_state10, ptr %new_state.dbg.spill11, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill11, !826, !DIExpression(), !1170)
  store i8 %new_state10, ptr %state, align 1, !dbg !1171
  br label %bb10, !dbg !1156

bb30:                                             ; preds = %bb28
  %155 = getelementptr inbounds i8, ptr %_53, i32 1, !dbg !1158
  %result12 = load i8, ptr %155, align 1, !dbg !1158
  store i8 %result12, ptr %result.dbg.spill13, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill13, !828, !DIExpression(), !1172)
  store i8 %result12, ptr %status, align 1, !dbg !1173
  br label %bb318, !dbg !1156

bb35:                                             ; preds = %bb32
  %156 = getelementptr inbounds i8, ptr %_60, i32 1, !dbg !1153
  %new_state14 = load i8, ptr %156, align 1, !dbg !1153
  store i8 %new_state14, ptr %new_state.dbg.spill15, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill15, !830, !DIExpression(), !1174)
  store i8 %new_state14, ptr %state, align 1, !dbg !1175
  br label %bb10, !dbg !1156

bb34:                                             ; preds = %bb32
  %157 = getelementptr inbounds i8, ptr %_60, i32 1, !dbg !1158
  %result16 = load i8, ptr %157, align 1, !dbg !1158
  store i8 %result16, ptr %result.dbg.spill17, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill17, !832, !DIExpression(), !1176)
  store i8 %result16, ptr %status, align 1, !dbg !1177
  br label %bb318, !dbg !1156

bb40:                                             ; preds = %bb36
  %158 = getelementptr inbounds i8, ptr %r, i32 10464, !dbg !1178
  %159 = getelementptr inbounds nuw i8, ptr %158, i32 0, !dbg !1178
  %_80 = load i8, ptr %159, align 4, !dbg !1178
  store i8 %_80, ptr %small.dbg.spill.i249, align 1
    #dbg_declare(ptr %small.dbg.spill.i249, !1179, !DIExpression(), !1185)
  %_0.i250 = zext i8 %_80 to i16, !dbg !1187
  %160 = getelementptr inbounds i8, ptr %r, i32 10464, !dbg !1188
  %161 = getelementptr inbounds nuw i8, ptr %160, i32 1, !dbg !1188
  %_85 = load i8, ptr %161, align 1, !dbg !1188
  store i8 %_85, ptr %small.dbg.spill.i247, align 1
    #dbg_declare(ptr %small.dbg.spill.i247, !1179, !DIExpression(), !1189)
  %_0.i248 = zext i8 %_85 to i16, !dbg !1191
  %_83 = shl i16 %_0.i248, 8, !dbg !1192
  %length = or i16 %_0.i250, %_83, !dbg !1193
  store i16 %length, ptr %length.dbg.spill, align 2, !dbg !1193
    #dbg_declare(ptr %length.dbg.spill, !834, !DIExpression(), !1194)
  %162 = getelementptr inbounds i8, ptr %r, i32 10464, !dbg !1195
  %163 = getelementptr inbounds nuw i8, ptr %162, i32 2, !dbg !1195
  %_92 = load i8, ptr %163, align 2, !dbg !1195
  store i8 %_92, ptr %small.dbg.spill.i245, align 1
    #dbg_declare(ptr %small.dbg.spill.i245, !1179, !DIExpression(), !1196)
  %_0.i246 = zext i8 %_92 to i16, !dbg !1198
  %164 = getelementptr inbounds i8, ptr %r, i32 10464, !dbg !1199
  %165 = getelementptr inbounds nuw i8, ptr %164, i32 3, !dbg !1199
  %_97 = load i8, ptr %165, align 1, !dbg !1199
  store i8 %_97, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1179, !DIExpression(), !1200)
  %_0.i244 = zext i8 %_97 to i16, !dbg !1202
  %_95 = shl i16 %_0.i244, 8, !dbg !1203
  %check = or i16 %_0.i246, %_95, !dbg !1204
  store i16 %check, ptr %check.dbg.spill, align 2, !dbg !1204
    #dbg_declare(ptr %check.dbg.spill, !836, !DIExpression(), !1205)
  %_103 = xor i16 %check, -1, !dbg !1206
  %valid = icmp eq i16 %length, %_103, !dbg !1207
  %166 = zext i1 %valid to i8, !dbg !1207
  store i8 %166, ptr %valid.dbg.spill, align 1, !dbg !1207
    #dbg_declare(ptr %valid.dbg.spill, !838, !DIExpression(), !1208)
; call <T as core::convert::Into<U>>::into
  %_104 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h241f1438f7071ec9E"(i16 %length, ptr align 4 @alloc_ba2293d5ec6a39f25eec392c028e54a9) #11, !dbg !1209
  %167 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1210
  store i32 %_104, ptr %167, align 4, !dbg !1210
  br i1 %valid, label %bb53, label %bb52, !dbg !1211

bb37:                                             ; preds = %bb36
  %168 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1212
  %_69 = load i32, ptr %168, align 4, !dbg !1212
  %169 = icmp eq i32 %_69, 0, !dbg !1212
  br i1 %169, label %bb39, label %bb38, !dbg !1212

bb52:                                             ; preds = %bb40
  %170 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1213
  store i8 31, ptr %170, align 1, !dbg !1213
  store i8 1, ptr %_66, align 1, !dbg !1213
  br label %bb58, !dbg !1214

bb53:                                             ; preds = %bb40
  %171 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1215
  %_106 = load i32, ptr %171, align 4, !dbg !1215
  %172 = icmp eq i32 %_106, 0, !dbg !1215
  br i1 %172, label %bb54, label %bb55, !dbg !1215

bb58:                                             ; preds = %bb38, %bb39, %bb56, %bb57, %bb54, %bb52
  %173 = load i8, ptr %_66, align 1, !dbg !1216
  %174 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1216
  %175 = load i8, ptr %174, align 1, !dbg !1216
  %_111 = zext i8 %173 to i32, !dbg !1216
  switch i32 %_111, label %bb17 [
    i32 0, label %bb36
    i32 1, label %bb60
    i32 2, label %bb59
  ], !dbg !1061

bb54:                                             ; preds = %bb53
  %176 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1217
  store i8 20, ptr %176, align 1, !dbg !1217
  store i8 1, ptr %_66, align 1, !dbg !1217
  br label %bb58, !dbg !1218

bb55:                                             ; preds = %bb53
  %177 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1219
  %_108 = load i32, ptr %177, align 4, !dbg !1219
  %178 = icmp eq i32 %_108, 0, !dbg !1219
  br i1 %178, label %bb57, label %bb56, !dbg !1219

bb57:                                             ; preds = %bb55
  %179 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1220
  store i8 6, ptr %179, align 1, !dbg !1220
  store i8 1, ptr %_66, align 1, !dbg !1220
  br label %bb58, !dbg !1221

bb56:                                             ; preds = %bb55
  %180 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1222
  store i8 17, ptr %180, align 1, !dbg !1222
  store i8 1, ptr %_66, align 1, !dbg !1222
  br label %bb58, !dbg !1221

bb39:                                             ; preds = %bb37
  %_76 = getelementptr inbounds i8, ptr %r, i32 10464, !dbg !1223
  %_77 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1223
  %181 = load i32, ptr %flags, align 4, !dbg !1224
; call miniz_oxide::inflate::core::read_byte
  %182 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17he38ae49676b797faE(ptr align 4 %in_iter, i32 %181, ptr align 1 %_76, ptr align 4 %_77) #11, !dbg !1224
  %183 = extractvalue { i8, i8 } %182, 0, !dbg !1224
  %184 = extractvalue { i8, i8 } %182, 1, !dbg !1224
  store i8 %183, ptr %_66, align 1, !dbg !1224
  %185 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1224
  store i8 %184, ptr %185, align 1, !dbg !1224
  br label %bb58, !dbg !1224

bb38:                                             ; preds = %bb37
  %_73 = getelementptr inbounds i8, ptr %r, i32 10464, !dbg !1225
  %186 = load i32, ptr %flags, align 4, !dbg !1226
; call miniz_oxide::inflate::core::read_bits
  %187 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hc11b12166584f99bE(ptr align 4 %l, i32 8, ptr align 4 %in_iter, i32 %186, ptr align 1 %_73) #11, !dbg !1226
  %188 = extractvalue { i8, i8 } %187, 0, !dbg !1226
  %189 = extractvalue { i8, i8 } %187, 1, !dbg !1226
  store i8 %188, ptr %_66, align 1, !dbg !1226
  %190 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1226
  store i8 %189, ptr %190, align 1, !dbg !1226
  br label %bb58, !dbg !1226

bb60:                                             ; preds = %bb58
  %191 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1153
  %new_state18 = load i8, ptr %191, align 1, !dbg !1153
  store i8 %new_state18, ptr %new_state.dbg.spill19, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill19, !840, !DIExpression(), !1227)
  store i8 %new_state18, ptr %state, align 1, !dbg !1228
  br label %bb10, !dbg !1156

bb59:                                             ; preds = %bb58
  %192 = getelementptr inbounds i8, ptr %_66, i32 1, !dbg !1158
  %result20 = load i8, ptr %192, align 1, !dbg !1158
  store i8 %result20, ptr %result.dbg.spill21, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill21, !842, !DIExpression(), !1229)
  store i8 %result20, ptr %status, align 1, !dbg !1230
  br label %bb318, !dbg !1156

bb78:                                             ; preds = %bb77
  %193 = getelementptr inbounds i8, ptr %_136, i32 1, !dbg !1231
  store i8 20, ptr %193, align 1, !dbg !1231
  store i8 1, ptr %_136, align 1, !dbg !1231
  br label %bb83, !dbg !1232

bb79:                                             ; preds = %bb77
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_139 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1233
  %194 = icmp eq i32 %_139, 0, !dbg !1234
  br i1 %194, label %bb81, label %bb82, !dbg !1234

bb83:                                             ; preds = %bb82, %bb81, %bb78
  %195 = load i8, ptr %_136, align 1, !dbg !1235
  %196 = getelementptr inbounds i8, ptr %_136, i32 1, !dbg !1235
  %197 = load i8, ptr %196, align 1, !dbg !1235
  %_143 = zext i8 %195 to i32, !dbg !1235
  switch i32 %_143, label %bb17 [
    i32 0, label %bb77
    i32 1, label %bb85
    i32 2, label %bb84
  ], !dbg !1061

bb81:                                             ; preds = %bb79
  %198 = getelementptr inbounds i8, ptr %_136, i32 1, !dbg !1236
  store i8 2, ptr %198, align 1, !dbg !1236
  store i8 2, ptr %_136, align 1, !dbg !1236
  br label %bb83, !dbg !1237

bb82:                                             ; preds = %bb79
  %199 = getelementptr inbounds i8, ptr %_136, i32 1, !dbg !1238
  store i8 7, ptr %199, align 1, !dbg !1238
  store i8 1, ptr %_136, align 1, !dbg !1238
  br label %bb83, !dbg !1237

bb85:                                             ; preds = %bb83
  %200 = getelementptr inbounds i8, ptr %_136, i32 1, !dbg !1153
  %new_state22 = load i8, ptr %200, align 1, !dbg !1153
  store i8 %new_state22, ptr %new_state.dbg.spill23, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill23, !852, !DIExpression(), !1239)
  store i8 %new_state22, ptr %state, align 1, !dbg !1240
  br label %bb10, !dbg !1156

bb84:                                             ; preds = %bb83
  %201 = getelementptr inbounds i8, ptr %_136, i32 1, !dbg !1158
  %result24 = load i8, ptr %201, align 1, !dbg !1158
  store i8 %result24, ptr %result.dbg.spill25, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill25, !854, !DIExpression(), !1241)
  store i8 %result24, ptr %status, align 1, !dbg !1242
  br label %bb318, !dbg !1156

bb98:                                             ; preds = %bb86
  %202 = load i32, ptr %flags, align 4, !dbg !1243
; call miniz_oxide::inflate::core::end_of_input
  %203 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %202) #11, !dbg !1243
  %204 = extractvalue { i8, i8 } %203, 0, !dbg !1243
  %205 = extractvalue { i8, i8 } %203, 1, !dbg !1243
  store i8 %204, ptr %_146, align 1, !dbg !1243
  %206 = getelementptr inbounds i8, ptr %_146, i32 1, !dbg !1243
  store i8 %205, ptr %206, align 1, !dbg !1243
  br label %bb99, !dbg !1243

bb88:                                             ; preds = %bb86
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %space_left = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1244
  store i32 %space_left, ptr %space_left.dbg.spill, align 4, !dbg !1244
    #dbg_declare(ptr %space_left.dbg.spill, !856, !DIExpression(), !1245)
  store ptr %in_iter, ptr %self.dbg.spill.i152, align 4
    #dbg_declare(ptr %self.dbg.spill.i152, !1071, !DIExpression(), !1246)
  %_2.0.i153 = load ptr, ptr %in_iter, align 4, !dbg !1248
  %207 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1248
  %_2.1.i154 = load i32, ptr %207, align 4, !dbg !1248
; call core::cmp::min
  %_153 = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %space_left, i32 %_2.1.i154) #11, !dbg !1249
  %208 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1250
  %_157 = load i32, ptr %208, align 4, !dbg !1250
; call core::cmp::min
  %bytes_to_copy = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %_153, i32 %_157) #11, !dbg !1251
  store i32 %bytes_to_copy, ptr %bytes_to_copy.dbg.spill, align 4, !dbg !1251
    #dbg_declare(ptr %bytes_to_copy.dbg.spill, !858, !DIExpression(), !1252)
  store ptr %in_iter, ptr %self.dbg.spill.i160, align 4
    #dbg_declare(ptr %self.dbg.spill.i160, !1253, !DIExpression(), !1259)
  %_0.0.i = load ptr, ptr %in_iter, align 4, !dbg !1261
  %209 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1261
  %_0.1.i = load i32, ptr %209, align 4, !dbg !1261
  %210 = insertvalue { ptr, i32 } poison, ptr %_0.0.i, 0, !dbg !1262
  %211 = insertvalue { ptr, i32 } %210, i32 %_0.1.i, 1, !dbg !1262
  %_161.0 = extractvalue { ptr, i32 } %211, 0, !dbg !1263
  %_161.1 = extractvalue { ptr, i32 } %211, 1, !dbg !1263
  store ptr %_161.0, ptr %self.dbg.spill.i222, align 4
  %212 = getelementptr inbounds i8, ptr %self.dbg.spill.i222, i32 4
  store i32 %_161.1, ptr %212, align 4
    #dbg_declare(ptr %self.dbg.spill.i222, !1264, !DIExpression(), !1275)
  store i32 %bytes_to_copy, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !1272, !DIExpression(), !1277)
  store i32 %bytes_to_copy, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !1278, !DIExpression(), !1285)
  store ptr %_161.0, ptr %slice.dbg.spill.i.i, align 4
  %213 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 %_161.1, ptr %213, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !1284, !DIExpression(), !1287)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %214 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 %bytes_to_copy, ptr %214, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !1288, !DIExpression(), !1295)
  store ptr %_161.0, ptr %slice.dbg.spill.i.i.i, align 4
  %215 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 %_161.1, ptr %215, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !1293, !DIExpression(), !1297)
; call core::num::<impl usize>::checked_sub
  %216 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 %bytes_to_copy, i32 0) #11, !dbg !1298
  %217 = extractvalue { i32, i32 } %216, 0, !dbg !1298
  %218 = extractvalue { i32, i32 } %216, 1, !dbg !1298
  store i32 %217, ptr %_3.i.i.i, align 4, !dbg !1298
  %219 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !1298
  store i32 %218, ptr %219, align 4, !dbg !1298
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !1298
  %220 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !1298
  %221 = load i32, ptr %220, align 4, !dbg !1298
  %222 = trunc nuw i32 %_6.i.i.i to i1, !dbg !1299
  br i1 %222, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !1299

bb2.i.i.i:                                        ; preds = %bb88
  %223 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !1300
  %new_len.i.i.i = load i32, ptr %223, align 4, !dbg !1300
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !1300
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !1294, !DIExpression(), !1300)
  %_8.i.i.i = icmp ule i32 %bytes_to_copy, %_161.1, !dbg !1301
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit", label %bb5.i.i.i, !dbg !1301

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %bb88
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 0, i32 %bytes_to_copy, i32 %_161.1, ptr align 4 @alloc_8772ee50e3e4c56a3646a74399c725c8) #12, !dbg !1302
  unreachable, !dbg !1302

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit": ; preds = %bb2.i.i.i
  store ptr %_161.0, ptr %ptr.dbg.spill.i.i, align 4
  %224 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 %_161.1, ptr %224, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1303, !DIExpression(), !1319)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !1312, !DIExpression(), !1321)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !1313, !DIExpression(), !1322)
  store ptr %_161.0, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !1323
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1314, !DIExpression(), !1324)
  store ptr %_161.0, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !1325
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !1317, !DIExpression(), !1326)
  %225 = insertvalue { ptr, i32 } %211, i32 %new_len.i.i.i, 1, !dbg !1327
  %226 = insertvalue { ptr, i32 } poison, ptr %_0.0.i, 0, !dbg !1328
  %227 = insertvalue { ptr, i32 } %226, i32 %new_len.i.i.i, 1, !dbg !1328
  %_160.0 = extractvalue { ptr, i32 } %227, 0, !dbg !1329
  %_160.1 = extractvalue { ptr, i32 } %227, 1, !dbg !1329
; call miniz_oxide::inflate::output_buffer::OutputBuffer::write_slice
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer11write_slice17haa1dbbd03040dff4E(ptr align 4 %out_buf, ptr align 1 %_160.0, i32 %_160.1) #11, !dbg !1330
  store ptr %in_iter, ptr %self.dbg.spill.i159, align 4
    #dbg_declare(ptr %self.dbg.spill.i159, !623, !DIExpression(), !1331)
  store i32 %bytes_to_copy, ptr %steps.dbg.spill.i, align 4
    #dbg_declare(ptr %steps.dbg.spill.i, !629, !DIExpression(), !1333)
  %_5.0.i = load ptr, ptr %in_iter, align 4, !dbg !1334
  %228 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1334
  %_5.1.i = load i32, ptr %228, align 4, !dbg !1334
  store ptr %_5.0.i, ptr %self.dbg.spill.i226, align 4
  %229 = getelementptr inbounds i8, ptr %self.dbg.spill.i226, i32 4
  store i32 %_5.1.i, ptr %229, align 4
    #dbg_declare(ptr %self.dbg.spill.i226, !634, !DIExpression(), !1335)
  store i32 %bytes_to_copy, ptr %index.dbg.spill.i225, align 4
    #dbg_declare(ptr %index.dbg.spill.i225, !640, !DIExpression(), !1337)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %230 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32 %bytes_to_copy, ptr align 1 %_5.0.i, i32 %_5.1.i, ptr align 4 @alloc_60cf8681016101c24a80f577d300663f) #11, !dbg !1338
  %_0.0.i227 = extractvalue { ptr, i32 } %230, 0, !dbg !1338
  %_0.1.i228 = extractvalue { ptr, i32 } %230, 1, !dbg !1338
  %_3.0.i = extractvalue { ptr, i32 } %230, 0, !dbg !1339
  %_3.1.i = extractvalue { ptr, i32 } %230, 1, !dbg !1339
  store ptr %_3.0.i, ptr %in_iter, align 4, !dbg !1340
  %231 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1340
  store i32 %_3.1.i, ptr %231, align 4, !dbg !1340
  %232 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1341
  %233 = load i32, ptr %232, align 4, !dbg !1341
  %_167.0 = sub i32 %233, %bytes_to_copy, !dbg !1341
  %_167.1 = icmp ult i32 %233, %bytes_to_copy, !dbg !1341
  br i1 %_167.1, label %panic, label %bb97, !dbg !1341

bb99:                                             ; preds = %bb97, %bb98
  %234 = load i8, ptr %_146, align 1, !dbg !1342
  %235 = getelementptr inbounds i8, ptr %_146, i32 1, !dbg !1342
  %236 = load i8, ptr %235, align 1, !dbg !1342
  %_169 = zext i8 %234 to i32, !dbg !1342
  switch i32 %_169, label %bb17 [
    i32 0, label %bb86
    i32 1, label %bb101
    i32 2, label %bb100
  ], !dbg !1061

bb97:                                             ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit"
  %237 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1341
  store i32 %_167.0, ptr %237, align 4, !dbg !1341
  %238 = getelementptr inbounds i8, ptr %_146, i32 1, !dbg !1343
  store i8 6, ptr %238, align 1, !dbg !1343
  store i8 1, ptr %_146, align 1, !dbg !1343
  br label %bb99, !dbg !1344

panic:                                            ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_e592376b20f064a63028f21fd14a1603) #12, !dbg !1341
  unreachable, !dbg !1341

bb101:                                            ; preds = %bb99
  %239 = getelementptr inbounds i8, ptr %_146, i32 1, !dbg !1153
  %new_state26 = load i8, ptr %239, align 1, !dbg !1153
  store i8 %new_state26, ptr %new_state.dbg.spill27, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill27, !860, !DIExpression(), !1345)
  store i8 %new_state26, ptr %state, align 1, !dbg !1346
  br label %bb10, !dbg !1156

bb100:                                            ; preds = %bb99
  %240 = getelementptr inbounds i8, ptr %_146, i32 1, !dbg !1158
  %result28 = load i8, ptr %240, align 1, !dbg !1158
  store i8 %result28, ptr %result.dbg.spill29, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill29, !862, !DIExpression(), !1347)
  store i8 %result28, ptr %status, align 1, !dbg !1348
  br label %bb318, !dbg !1156

bb105:                                            ; preds = %bb102
  %_186 = getelementptr inbounds i8, ptr %r, i32 10477, !dbg !1349
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_186, i32 19, i8 0) #11, !dbg !1350
  %241 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1351
  store i32 0, ptr %241, align 4, !dbg !1351
  %242 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1352
  %243 = getelementptr inbounds nuw i16, ptr %242, i32 0, !dbg !1352
  %_188 = load i16, ptr %243, align 4, !dbg !1352
  %_187 = icmp ule i16 %_188, 286, !dbg !1352
  br i1 %_187, label %bb108, label %bb111, !dbg !1352

bb103:                                            ; preds = %bb102
  %244 = getelementptr inbounds nuw i32, ptr %_176, i32 0, !dbg !1353
  store i32 5, ptr %244, align 4, !dbg !1353
  %245 = getelementptr inbounds nuw i32, ptr %_176, i32 1, !dbg !1353
  store i32 5, ptr %245, align 4, !dbg !1353
  %246 = getelementptr inbounds nuw i32, ptr %_176, i32 2, !dbg !1353
  store i32 4, ptr %246, align 4, !dbg !1353
  %247 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1354
  %_178 = load i32, ptr %247, align 4, !dbg !1354
  %_179 = icmp ult i32 %_178, 3, !dbg !1353
  br i1 %_179, label %bb104, label %panic30, !dbg !1353

bb111:                                            ; preds = %bb108, %bb105
  %248 = getelementptr inbounds i8, ptr %_172, i32 1, !dbg !1355
  store i8 27, ptr %248, align 1, !dbg !1355
  store i8 1, ptr %_172, align 1, !dbg !1355
  br label %bb112, !dbg !1356

bb108:                                            ; preds = %bb105
  %249 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1357
  %250 = getelementptr inbounds nuw i16, ptr %249, i32 1, !dbg !1357
  %_192 = load i16, ptr %250, align 2, !dbg !1357
  %_191 = icmp ule i16 %_192, 30, !dbg !1357
  br i1 %_191, label %bb110, label %bb111, !dbg !1357

bb110:                                            ; preds = %bb108
  %251 = getelementptr inbounds i8, ptr %_172, i32 1, !dbg !1358
  store i8 9, ptr %251, align 1, !dbg !1358
  store i8 1, ptr %_172, align 1, !dbg !1358
  br label %bb112, !dbg !1356

bb112:                                            ; preds = %bb104, %bb110, %bb111
  %252 = load i8, ptr %_172, align 1, !dbg !1359
  %253 = getelementptr inbounds i8, ptr %_172, i32 1, !dbg !1359
  %254 = load i8, ptr %253, align 1, !dbg !1359
  %_197 = zext i8 %252 to i32, !dbg !1359
  switch i32 %_197, label %bb17 [
    i32 0, label %bb102
    i32 1, label %bb114
    i32 2, label %bb113
  ], !dbg !1061

bb104:                                            ; preds = %bb103
  %255 = getelementptr inbounds nuw i32, ptr %_176, i32 %_178, !dbg !1353
  %num_bits = load i32, ptr %255, align 4, !dbg !1353
  store i32 %num_bits, ptr %num_bits.dbg.spill, align 4, !dbg !1353
    #dbg_declare(ptr %num_bits.dbg.spill, !864, !DIExpression(), !1360)
  %_183 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1361
  %256 = load i32, ptr %flags, align 4, !dbg !1362
; call miniz_oxide::inflate::core::read_bits
  %257 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h919057ec6bc2f307E(ptr align 4 %l, i32 %num_bits, ptr align 4 %in_iter, i32 %256, ptr align 2 %_183) #11, !dbg !1362
  %258 = extractvalue { i8, i8 } %257, 0, !dbg !1362
  %259 = extractvalue { i8, i8 } %257, 1, !dbg !1362
  store i8 %258, ptr %_172, align 1, !dbg !1362
  %260 = getelementptr inbounds i8, ptr %_172, i32 1, !dbg !1362
  store i8 %259, ptr %260, align 1, !dbg !1362
  br label %bb112, !dbg !1362

panic30:                                          ; preds = %bb103
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_178, i32 3, ptr align 4 @alloc_82a85487cf8fee771d62bc4916fe3e02) #12, !dbg !1353
  unreachable, !dbg !1353

bb114:                                            ; preds = %bb112
  %261 = getelementptr inbounds i8, ptr %_172, i32 1, !dbg !1153
  %new_state31 = load i8, ptr %261, align 1, !dbg !1153
  store i8 %new_state31, ptr %new_state.dbg.spill32, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill32, !866, !DIExpression(), !1363)
  store i8 %new_state31, ptr %state, align 1, !dbg !1364
  br label %bb10, !dbg !1156

bb113:                                            ; preds = %bb112
  %262 = getelementptr inbounds i8, ptr %_172, i32 1, !dbg !1158
  %result33 = load i8, ptr %262, align 1, !dbg !1158
  store i8 %result33, ptr %result.dbg.spill34, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill34, !868, !DIExpression(), !1365)
  store i8 %result33, ptr %status, align 1, !dbg !1366
  br label %bb318, !dbg !1156

bb119:                                            ; preds = %bb115
  %263 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1367
  %264 = getelementptr inbounds nuw i16, ptr %263, i32 2, !dbg !1367
  store i16 19, ptr %264, align 4, !dbg !1367
; call miniz_oxide::inflate::core::init_tree
  %265 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9init_tree17h8b4f6fe432835833E(ptr align 4 %r, ptr align 4 %l) #11, !dbg !1368
  %_213.0 = extractvalue { i8, i8 } %265, 0, !dbg !1368
  %_213.1 = extractvalue { i8, i8 } %265, 1, !dbg !1368
; call core::option::Option<T>::unwrap_or
  %266 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h57526fba8fdc257aE"(i8 %_213.0, i8 %_213.1, i8 2, i8 -1) #11, !dbg !1369
  %267 = extractvalue { i8, i8 } %266, 0, !dbg !1369
  %268 = extractvalue { i8, i8 } %266, 1, !dbg !1369
  store i8 %267, ptr %_200, align 1, !dbg !1369
  %269 = getelementptr inbounds i8, ptr %_200, i32 1, !dbg !1369
  store i8 %268, ptr %269, align 1, !dbg !1369
  br label %bb122, !dbg !1369

bb118:                                            ; preds = %bb115
  %_210 = getelementptr inbounds i8, ptr %r, i32 10477, !dbg !1370
  %270 = load i32, ptr %flags, align 4, !dbg !1371
; call miniz_oxide::inflate::core::read_bits
  %271 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hf0e00b4296fb0b08E(ptr align 4 %l, i32 3, ptr align 4 %in_iter, i32 %270, ptr align 1 %_210) #11, !dbg !1371
  %272 = extractvalue { i8, i8 } %271, 0, !dbg !1371
  %273 = extractvalue { i8, i8 } %271, 1, !dbg !1371
  store i8 %272, ptr %_200, align 1, !dbg !1371
  %274 = getelementptr inbounds i8, ptr %_200, i32 1, !dbg !1371
  store i8 %273, ptr %274, align 1, !dbg !1371
  br label %bb122, !dbg !1371

bb122:                                            ; preds = %bb118, %bb119
  %275 = load i8, ptr %_200, align 1, !dbg !1372
  %276 = getelementptr inbounds i8, ptr %_200, i32 1, !dbg !1372
  %277 = load i8, ptr %276, align 1, !dbg !1372
  %_217 = zext i8 %275 to i32, !dbg !1372
  switch i32 %_217, label %bb17 [
    i32 0, label %bb115
    i32 1, label %bb124
    i32 2, label %bb123
  ], !dbg !1061

bb124:                                            ; preds = %bb122
  %278 = getelementptr inbounds i8, ptr %_200, i32 1, !dbg !1153
  %new_state35 = load i8, ptr %278, align 1, !dbg !1153
  store i8 %new_state35, ptr %new_state.dbg.spill36, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill36, !870, !DIExpression(), !1373)
  store i8 %new_state35, ptr %state, align 1, !dbg !1374
  br label %bb10, !dbg !1156

bb123:                                            ; preds = %bb122
  %279 = getelementptr inbounds i8, ptr %_200, i32 1, !dbg !1158
  %result37 = load i8, ptr %279, align 1, !dbg !1158
  store i8 %result37, ptr %result.dbg.spill38, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill38, !872, !DIExpression(), !1375)
  store i8 %result37, ptr %status, align 1, !dbg !1376
  br label %bb318, !dbg !1156

bb130:                                            ; preds = %bb125
  %_221 = icmp ult i32 %_222, %_232.0, !dbg !1086
  br i1 %_221, label %bb131, label %bb132, !dbg !1086

panic39:                                          ; preds = %bb125
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_138095e9d48be47a45b6b32f285fab2a) #12, !dbg !1104
  unreachable, !dbg !1104

bb132:                                            ; preds = %bb130
  %280 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1377
  %_236 = load i32, ptr %280, align 4, !dbg !1377
  %281 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1378
  %282 = getelementptr inbounds nuw i16, ptr %281, i32 0, !dbg !1378
  %_239 = load i16, ptr %282, align 4, !dbg !1378
  store i16 %_239, ptr %small.dbg.spill.i259, align 2
    #dbg_declare(ptr %small.dbg.spill.i259, !1088, !DIExpression(), !1379)
  %_0.i260 = zext i16 %_239 to i32, !dbg !1381
  %283 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1382
  %284 = getelementptr inbounds nuw i16, ptr %283, i32 1, !dbg !1382
  %_243 = load i16, ptr %284, align 2, !dbg !1382
  store i16 %_243, ptr %small.dbg.spill.i257, align 2
    #dbg_declare(ptr %small.dbg.spill.i257, !1088, !DIExpression(), !1383)
  %_0.i258 = zext i16 %_243 to i32, !dbg !1385
  %_246.0 = add i32 %_0.i260, %_0.i258, !dbg !1386
  %_246.1 = icmp ult i32 %_246.0, %_0.i260, !dbg !1386
  br i1 %_246.1, label %panic40, label %bb137, !dbg !1386

bb131:                                            ; preds = %bb130
  %285 = load i32, ptr %flags, align 4, !dbg !1387
; call miniz_oxide::inflate::core::decode_huffman_code
  %286 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core19decode_huffman_code17h62cf9ab19ba26023E(ptr align 4 %r, ptr align 4 %l, i32 2, i32 %285, ptr align 4 %in_iter) #11, !dbg !1387
  %287 = extractvalue { i8, i8 } %286, 0, !dbg !1387
  %288 = extractvalue { i8, i8 } %286, 1, !dbg !1387
  store i8 %287, ptr %_220, align 1, !dbg !1387
  %289 = getelementptr inbounds i8, ptr %_220, i32 1, !dbg !1387
  store i8 %288, ptr %289, align 1, !dbg !1387
  br label %bb162, !dbg !1387

bb137:                                            ; preds = %bb132
  %_235 = icmp ne i32 %_236, %_246.0, !dbg !1377
  br i1 %_235, label %bb138, label %bb139, !dbg !1377

panic40:                                          ; preds = %bb132
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_fdc4b8520286cc66f6dd7b77143c7fc4) #12, !dbg !1386
  unreachable, !dbg !1386

bb139:                                            ; preds = %bb137
  %_250 = getelementptr inbounds i8, ptr %r, i32 10112, !dbg !1388
  %290 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1389
  %291 = getelementptr inbounds nuw i16, ptr %290, i32 0, !dbg !1389
  %_253 = load i16, ptr %291, align 4, !dbg !1389
  %_252 = zext i16 %_253 to i32, !dbg !1389
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %292 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17he6a8904f18621670E"(ptr align 1 %_250, i32 %_252, ptr align 4 @alloc_b588e018f6f13324d138f393c54e0d87) #11, !dbg !1390
  %_249.0 = extractvalue { ptr, i32 } %292, 0, !dbg !1390
  %_249.1 = extractvalue { ptr, i32 } %292, 1, !dbg !1390
  %293 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1391
  %294 = getelementptr inbounds nuw i16, ptr %293, i32 0, !dbg !1391
  %_261 = load i16, ptr %294, align 4, !dbg !1391
  %_260 = zext i16 %_261 to i32, !dbg !1391
  %_259 = and i32 %_260, 511, !dbg !1391
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %295 = call { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h6b15c0ee008fbbdbE"(ptr align 1 %r, i32 %_259, ptr align 4 @alloc_f5d91488b1296019e6eaa7da649ef5fe) #11, !dbg !1392
  %_256.0 = extractvalue { ptr, i32 } %295, 0, !dbg !1392
  %_256.1 = extractvalue { ptr, i32 } %295, 1, !dbg !1392
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h10a9bbe4ea233c0cE"(ptr align 1 %_249.0, i32 %_249.1, ptr align 1 %_256.0, i32 %_256.1, ptr align 4 @alloc_d7585beb40a673352e29cd0e494323bc) #11, !dbg !1393
  %296 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1394
  %297 = getelementptr inbounds nuw i16, ptr %296, i32 0, !dbg !1394
  %_265 = load i16, ptr %297, align 4, !dbg !1394
  %dist_table_start = zext i16 %_265 to i32, !dbg !1394
  store i32 %dist_table_start, ptr %dist_table_start.dbg.spill, align 4, !dbg !1394
    #dbg_declare(ptr %dist_table_start.dbg.spill, !874, !DIExpression(), !1395)
  %_268 = icmp ult i32 %dist_table_start, 512, !dbg !1396
  br i1 %_268, label %bb147, label %bb146, !dbg !1396

bb138:                                            ; preds = %bb137
  %298 = getelementptr inbounds i8, ptr %_220, i32 1, !dbg !1397
  store i8 26, ptr %298, align 1, !dbg !1397
  store i8 1, ptr %_220, align 1, !dbg !1397
  br label %bb162, !dbg !1398

bb146:                                            ; preds = %bb139
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_644363cb70dc5c621003c7051fbb7fca, i32 54, ptr align 4 @alloc_efb76216ca90b9720a0adb0db3f14681) #12, !dbg !1399
  unreachable, !dbg !1399

bb147:                                            ; preds = %bb139
  %299 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1400
  %300 = getelementptr inbounds nuw i16, ptr %299, i32 0, !dbg !1400
  %_275 = load i16, ptr %300, align 4, !dbg !1400
  %301 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1401
  %302 = getelementptr inbounds nuw i16, ptr %301, i32 1, !dbg !1401
  %_278 = load i16, ptr %302, align 2, !dbg !1401
  %_281.0 = add i16 %_275, %_278, !dbg !1402
  %_281.1 = icmp ult i16 %_281.0, %_275, !dbg !1402
  br i1 %_281.1, label %panic41, label %bb150, !dbg !1402

bb150:                                            ; preds = %bb147
  %dist_table_end = zext i16 %_281.0 to i32, !dbg !1402
  store i32 %dist_table_end, ptr %dist_table_end.dbg.spill, align 4, !dbg !1402
    #dbg_declare(ptr %dist_table_end.dbg.spill, !876, !DIExpression(), !1403)
  %303 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !1404
  %304 = getelementptr inbounds nuw i16, ptr %303, i32 1, !dbg !1404
  %_283 = load i16, ptr %304, align 2, !dbg !1404
  %code_size_dist_end = zext i16 %_283 to i32, !dbg !1404
  store i32 %code_size_dist_end, ptr %code_size_dist_end.dbg.spill, align 4, !dbg !1404
    #dbg_declare(ptr %code_size_dist_end.dbg.spill, !878, !DIExpression(), !1405)
  %_286 = icmp ult i32 %dist_table_end, 512, !dbg !1406
  br i1 %_286, label %bb153, label %bb152, !dbg !1406

panic41:                                          ; preds = %bb147
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_2db51dfaaa6a70ef3b00c8e1b324529f) #12, !dbg !1402
  unreachable, !dbg !1402

bb152:                                            ; preds = %bb150
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_1e1f3a8e0f8ef838d28b0906471e3860, i32 52, ptr align 4 @alloc_784a8b749d12c982d347fc7b8ee125f3) #12, !dbg !1407
  unreachable, !dbg !1407

bb153:                                            ; preds = %bb150
  %_294 = getelementptr inbounds i8, ptr %r, i32 10400, !dbg !1408
  %_291 = icmp ult i32 %code_size_dist_end, 32, !dbg !1409
  br i1 %_291, label %bb155, label %bb154, !dbg !1409

bb154:                                            ; preds = %bb153
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_6c27c8f5877b4ecde0c09b5f4d119c65, i32 61, ptr align 4 @alloc_6ddb153666cfc467bdc7b03552733975) #12, !dbg !1410
  unreachable, !dbg !1410

bb155:                                            ; preds = %bb153
  %dist_table_start42 = and i32 %dist_table_start, 511, !dbg !1411
  store i32 %dist_table_start42, ptr %dist_table_start.dbg.spill43, align 4, !dbg !1411
    #dbg_declare(ptr %dist_table_start.dbg.spill43, !880, !DIExpression(), !1412)
  %dist_table_end44 = and i32 %dist_table_end, 511, !dbg !1413
  store i32 %dist_table_end44, ptr %dist_table_end.dbg.spill45, align 4, !dbg !1413
    #dbg_declare(ptr %dist_table_end.dbg.spill45, !882, !DIExpression(), !1414)
  %_300 = getelementptr inbounds i8, ptr %r, i32 10400, !dbg !1415
  %_302 = and i32 %code_size_dist_end, 31, !dbg !1416
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %305 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h99e93e3445f2b238E"(ptr align 1 %_300, i32 %_302, ptr align 4 @alloc_3b80ecbdb674d6a1c09829a144190954) #11, !dbg !1417
  %_299.0 = extractvalue { ptr, i32 } %305, 0, !dbg !1417
  %_299.1 = extractvalue { ptr, i32 } %305, 1, !dbg !1417
; call core::array::<impl core::ops::index::Index<I> for [T; N]>::index
  %306 = call { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf8b0783de2c0beffE"(ptr align 1 %r, i32 %dist_table_start42, i32 %dist_table_end44, ptr align 4 @alloc_4d97e26b8eabb348f8a53a0c307d7489) #11, !dbg !1418
  %_305.0 = extractvalue { ptr, i32 } %306, 0, !dbg !1418
  %_305.1 = extractvalue { ptr, i32 } %306, 1, !dbg !1418
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h10a9bbe4ea233c0cE"(ptr align 1 %_299.0, i32 %_299.1, ptr align 1 %_305.0, i32 %_305.1, ptr align 4 @alloc_9dd882ea0d3d5b586f499c5923600b17) #11, !dbg !1419
  %307 = getelementptr inbounds i8, ptr %r, i32 10475, !dbg !1420
  %308 = load i8, ptr %307, align 1, !dbg !1420
  %_308.0 = sub i8 %308, 1, !dbg !1420
  %_308.1 = icmp ult i8 %308, 1, !dbg !1420
  br i1 %_308.1, label %panic46, label %bb160, !dbg !1420

bb160:                                            ; preds = %bb155
  %309 = getelementptr inbounds i8, ptr %r, i32 10475, !dbg !1420
  store i8 %_308.0, ptr %309, align 1, !dbg !1420
; call miniz_oxide::inflate::core::init_tree
  %310 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9init_tree17h8b4f6fe432835833E(ptr align 4 %r, ptr align 4 %l) #11, !dbg !1421
  %_309.0 = extractvalue { i8, i8 } %310, 0, !dbg !1421
  %_309.1 = extractvalue { i8, i8 } %310, 1, !dbg !1421
; call core::option::Option<T>::unwrap_or
  %311 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h57526fba8fdc257aE"(i8 %_309.0, i8 %_309.1, i8 2, i8 -1) #11, !dbg !1422
  %312 = extractvalue { i8, i8 } %311, 0, !dbg !1422
  %313 = extractvalue { i8, i8 } %311, 1, !dbg !1422
  store i8 %312, ptr %_220, align 1, !dbg !1422
  %314 = getelementptr inbounds i8, ptr %_220, i32 1, !dbg !1422
  store i8 %313, ptr %314, align 1, !dbg !1422
  br label %bb162, !dbg !1422

panic46:                                          ; preds = %bb155
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_51081a2555aee1b22d6ba2131bd74d83) #12, !dbg !1420
  unreachable, !dbg !1420

bb162:                                            ; preds = %bb131, %bb138, %bb160
  %315 = load i8, ptr %_220, align 1, !dbg !1423
  %316 = getelementptr inbounds i8, ptr %_220, i32 1, !dbg !1423
  %317 = load i8, ptr %316, align 1, !dbg !1423
  %_313 = zext i8 %315 to i32, !dbg !1423
  switch i32 %_313, label %bb17 [
    i32 0, label %bb125
    i32 1, label %bb164
    i32 2, label %bb163
  ], !dbg !1061

bb164:                                            ; preds = %bb162
  %318 = getelementptr inbounds i8, ptr %_220, i32 1, !dbg !1153
  %new_state47 = load i8, ptr %318, align 1, !dbg !1153
  store i8 %new_state47, ptr %new_state.dbg.spill48, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill48, !884, !DIExpression(), !1424)
  store i8 %new_state47, ptr %state, align 1, !dbg !1425
  br label %bb10, !dbg !1156

bb163:                                            ; preds = %bb162
  %319 = getelementptr inbounds i8, ptr %_220, i32 1, !dbg !1158
  %result49 = load i8, ptr %319, align 1, !dbg !1158
  store i8 %result49, ptr %result.dbg.spill50, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill50, !886, !DIExpression(), !1426)
  store i8 %result49, ptr %status, align 1, !dbg !1427
  br label %bb318, !dbg !1156

bb169:                                            ; preds = %bb165
  %320 = getelementptr inbounds i8, ptr %_316, i32 1, !dbg !1153
  %new_state51 = load i8, ptr %320, align 1, !dbg !1153
  store i8 %new_state51, ptr %new_state.dbg.spill52, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill52, !890, !DIExpression(), !1428)
  store i8 %new_state51, ptr %state, align 1, !dbg !1429
  br label %bb10, !dbg !1156

bb168:                                            ; preds = %bb165
  %321 = getelementptr inbounds i8, ptr %_316, i32 1, !dbg !1158
  %result53 = load i8, ptr %321, align 1, !dbg !1158
  store i8 %result53, ptr %result.dbg.spill54, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill54, !892, !DIExpression(), !1430)
  store i8 %result53, ptr %status, align 1, !dbg !1431
  br label %bb318, !dbg !1156

bb172:                                            ; preds = %bb170
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_331 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1432
  %_330 = icmp ult i32 %_331, 2, !dbg !1433
  br i1 %_330, label %bb174, label %bb175, !dbg !1433

bb174:                                            ; preds = %bb172, %bb170
  %322 = load i32, ptr %flags, align 4, !dbg !1434
; call miniz_oxide::inflate::core::decode_huffman_code
  %323 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core19decode_huffman_code17h493379bdce9e2514E(ptr align 4 %r, ptr align 4 %l, i32 0, i32 %322, ptr align 4 %in_iter) #11, !dbg !1434
  %324 = extractvalue { i8, i8 } %323, 0, !dbg !1434
  %325 = extractvalue { i8, i8 } %323, 1, !dbg !1434
  store i8 %324, ptr %_326, align 1, !dbg !1434
  %326 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1434
  store i8 %325, ptr %326, align 1, !dbg !1434
  br label %bb201, !dbg !1434

bb175:                                            ; preds = %bb172
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_336 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1435
  %_335 = icmp uge i32 %_336, 259, !dbg !1436
  br i1 %_335, label %bb177, label %bb184, !dbg !1436

bb184:                                            ; preds = %bb177, %bb175
  store ptr %l, ptr %l.dbg.spill.i195, align 4
    #dbg_declare(ptr %l.dbg.spill.i195, !1437, !DIExpression(), !1444)
  store ptr %in_iter, ptr %in_iter.dbg.spill.i194, align 4
    #dbg_declare(ptr %in_iter.dbg.spill.i194, !1443, !DIExpression(), !1446)
  %327 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1447
  %_4.i196 = load i32, ptr %327, align 4, !dbg !1447
  %_3.i197 = icmp ult i32 %_4.i196, 15, !dbg !1447
  br i1 %_3.i197, label %bb1.i198, label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit210, !dbg !1447

bb1.i198:                                         ; preds = %bb184
; call miniz_oxide::inflate::core::read_u16_le
  %_7.i199 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !1448
  store i16 %_7.i199, ptr %small.dbg.spill.i251, align 2
    #dbg_declare(ptr %small.dbg.spill.i251, !1088, !DIExpression(), !1449)
  %_0.i252 = zext i16 %_7.i199 to i32, !dbg !1451
  %328 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1452
  %_8.i201 = load i32, ptr %328, align 4, !dbg !1452
  %_9.i202 = icmp ult i32 %_8.i201, 32, !dbg !1453
  br i1 %_9.i202, label %bb4.i204, label %panic.i203, !dbg !1453

bb4.i204:                                         ; preds = %bb1.i198
  %329 = and i32 %_8.i201, 31, !dbg !1453
  %_5.i205 = shl i32 %_0.i252, %329, !dbg !1453
  %330 = load i32, ptr %l, align 4, !dbg !1454
  %331 = or i32 %330, %_5.i205, !dbg !1454
  store i32 %331, ptr %l, align 4, !dbg !1454
  %332 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1455
  %333 = load i32, ptr %332, align 4, !dbg !1455
  %_10.0.i206 = add i32 %333, 16, !dbg !1455
  %_10.1.i207 = icmp ult i32 %_10.0.i206, %333, !dbg !1455
  br i1 %_10.1.i207, label %panic1.i209, label %bb5.i208, !dbg !1455

panic.i203:                                       ; preds = %bb1.i198
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_835cc7da5e9face134744981e9f59911) #12, !dbg !1453
  unreachable, !dbg !1453

bb5.i208:                                         ; preds = %bb4.i204
  %334 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1455
  store i32 %_10.0.i206, ptr %334, align 4, !dbg !1455
  br label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit210, !dbg !1456

panic1.i209:                                      ; preds = %bb4.i204
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3bcb661afc7fa054d0dd645575ff35de) #12, !dbg !1455
  unreachable, !dbg !1455

_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit210: ; preds = %bb184, %bb5.i208
  %335 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !1457
  %_357 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %335, i32 0, !dbg !1457
  %_360 = load i32, ptr %l, align 4, !dbg !1458
; call miniz_oxide::inflate::core::HuffmanTable::lookup
  %336 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE(ptr align 2 %_357, i32 %_360) #11, !dbg !1459
  %_356.0 = extractvalue { i32, i32 } %336, 0, !dbg !1459
  %_356.1 = extractvalue { i32, i32 } %336, 1, !dbg !1459
  store i32 %_356.0, ptr %symbol.dbg.spill, align 4, !dbg !1460
    #dbg_declare(ptr %symbol.dbg.spill, !897, !DIExpression(), !1461)
  store i32 %_356.1, ptr %code_len.dbg.spill, align 4, !dbg !1462
    #dbg_declare(ptr %code_len.dbg.spill, !899, !DIExpression(), !1463)
  %337 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1464
  store i32 %_356.0, ptr %337, align 4, !dbg !1464
  %_361 = icmp ult i32 %_356.1, 32, !dbg !1465
  br i1 %_361, label %bb188, label %panic55, !dbg !1465

bb177:                                            ; preds = %bb175
  store ptr %in_iter, ptr %self.dbg.spill.i146, align 4
    #dbg_declare(ptr %self.dbg.spill.i146, !1071, !DIExpression(), !1466)
  %_2.0.i147 = load ptr, ptr %in_iter, align 4, !dbg !1468
  %338 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1468
  %_2.1.i148 = load i32, ptr %338, align 4, !dbg !1468
  %_338 = icmp uge i32 %_2.1.i148, 14, !dbg !1469
  br i1 %_338, label %bb179, label %bb184, !dbg !1469

bb179:                                            ; preds = %bb177
  %_347 = load i32, ptr %out_buf_size_mask, align 4, !dbg !1470
  %339 = load i32, ptr %flags, align 4, !dbg !1471
; call miniz_oxide::inflate::core::decompress_fast
  %340 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core15decompress_fast17h494e1c72c5e204c5E(ptr align 4 %r, ptr align 4 %in_iter, ptr align 4 %out_buf, i32 %339, ptr align 4 %l, i32 %_347) #11, !dbg !1471
  %_343.0 = extractvalue { i8, i8 } %340, 0, !dbg !1471
  %_343.1 = extractvalue { i8, i8 } %340, 1, !dbg !1471
  store i8 %_343.0, ptr %status1, align 1, !dbg !1472
  store i8 %_343.1, ptr %new_state.dbg.spill61, align 1, !dbg !1473
    #dbg_declare(ptr %new_state.dbg.spill61, !896, !DIExpression(), !1474)
  store i8 %_343.1, ptr %state, align 1, !dbg !1475
; call <miniz_oxide::inflate::TINFLStatus as core::cmp::PartialEq>::eq
  %_348 = call zeroext i1 @"_ZN74_$LT$miniz_oxide..inflate..TINFLStatus$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7c9044e26ac2fa86E"(ptr align 1 %status1, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #11, !dbg !1476
  br i1 %_348, label %bb182, label %bb183, !dbg !1476

bb188:                                            ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit210
  %341 = load i32, ptr %l, align 4, !dbg !1465
  %342 = and i32 %_356.1, 31, !dbg !1465
  %343 = lshr i32 %341, %342, !dbg !1465
  store i32 %343, ptr %l, align 4, !dbg !1465
  %344 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1477
  %345 = load i32, ptr %344, align 4, !dbg !1477
  %_362.0 = sub i32 %345, %_356.1, !dbg !1477
  %_362.1 = icmp ult i32 %345, %_356.1, !dbg !1477
  br i1 %_362.1, label %panic56, label %bb189, !dbg !1477

panic55:                                          ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit210
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_3ae6b81f5c66ca4e94bd1969b970d38e) #12, !dbg !1465
  unreachable, !dbg !1465

bb189:                                            ; preds = %bb188
  %346 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1477
  store i32 %_362.0, ptr %346, align 4, !dbg !1477
  %347 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1478
  %_364 = load i32, ptr %347, align 4, !dbg !1478
  %_363 = and i32 %_364, 256, !dbg !1479
  %348 = icmp eq i32 %_363, 0, !dbg !1479
  br i1 %348, label %bb191, label %bb190, !dbg !1479

panic56:                                          ; preds = %bb188
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_01a1e97474b1576c1633cfc169a47e0a) #12, !dbg !1477
  unreachable, !dbg !1477

bb191:                                            ; preds = %bb189
  store ptr %l, ptr %l.dbg.spill.i, align 4
    #dbg_declare(ptr %l.dbg.spill.i, !1437, !DIExpression(), !1480)
  store ptr %in_iter, ptr %in_iter.dbg.spill.i, align 4
    #dbg_declare(ptr %in_iter.dbg.spill.i, !1443, !DIExpression(), !1482)
  %349 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1483
  %_4.i = load i32, ptr %349, align 4, !dbg !1483
  %_3.i = icmp ult i32 %_4.i, 15, !dbg !1483
  br i1 %_3.i, label %bb1.i, label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit, !dbg !1483

bb1.i:                                            ; preds = %bb191
; call miniz_oxide::inflate::core::read_u16_le
  %_7.i = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !1484
  store i16 %_7.i, ptr %small.dbg.spill.i253, align 2
    #dbg_declare(ptr %small.dbg.spill.i253, !1088, !DIExpression(), !1485)
  %_0.i254 = zext i16 %_7.i to i32, !dbg !1487
  %350 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1488
  %_8.i = load i32, ptr %350, align 4, !dbg !1488
  %_9.i = icmp ult i32 %_8.i, 32, !dbg !1489
  br i1 %_9.i, label %bb4.i, label %panic.i, !dbg !1489

bb4.i:                                            ; preds = %bb1.i
  %351 = and i32 %_8.i, 31, !dbg !1489
  %_5.i = shl i32 %_0.i254, %351, !dbg !1489
  %352 = load i32, ptr %l, align 4, !dbg !1490
  %353 = or i32 %352, %_5.i, !dbg !1490
  store i32 %353, ptr %l, align 4, !dbg !1490
  %354 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1491
  %355 = load i32, ptr %354, align 4, !dbg !1491
  %_10.0.i = add i32 %355, 16, !dbg !1491
  %_10.1.i = icmp ult i32 %_10.0.i, %355, !dbg !1491
  br i1 %_10.1.i, label %panic1.i, label %bb5.i, !dbg !1491

panic.i:                                          ; preds = %bb1.i
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_835cc7da5e9face134744981e9f59911) #12, !dbg !1489
  unreachable, !dbg !1489

bb5.i:                                            ; preds = %bb4.i
  %356 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1491
  store i32 %_10.0.i, ptr %356, align 4, !dbg !1491
  br label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit, !dbg !1492

panic1.i:                                         ; preds = %bb4.i
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3bcb661afc7fa054d0dd645575ff35de) #12, !dbg !1491
  unreachable, !dbg !1491

_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit: ; preds = %bb191, %bb5.i
  %357 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !1493
  %_372 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %357, i32 0, !dbg !1493
  %_375 = load i32, ptr %l, align 4, !dbg !1494
; call miniz_oxide::inflate::core::HuffmanTable::lookup
  %358 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE(ptr align 2 %_372, i32 %_375) #11, !dbg !1495
  %_371.0 = extractvalue { i32, i32 } %358, 0, !dbg !1495
  %_371.1 = extractvalue { i32, i32 } %358, 1, !dbg !1495
  store i32 %_371.0, ptr %symbol.dbg.spill57, align 4, !dbg !1496
    #dbg_declare(ptr %symbol.dbg.spill57, !900, !DIExpression(), !1497)
  store i32 %_371.1, ptr %code_len.dbg.spill58, align 4, !dbg !1498
    #dbg_declare(ptr %code_len.dbg.spill58, !902, !DIExpression(), !1499)
  %_376 = icmp ult i32 %_371.1, 32, !dbg !1500
  br i1 %_376, label %bb195, label %panic59, !dbg !1500

bb190:                                            ; preds = %bb189
  %359 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1501
  store i8 21, ptr %359, align 1, !dbg !1501
  store i8 1, ptr %_326, align 1, !dbg !1501
  br label %bb201, !dbg !1502

bb195:                                            ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit
  %360 = load i32, ptr %l, align 4, !dbg !1500
  %361 = and i32 %_371.1, 31, !dbg !1500
  %362 = lshr i32 %360, %361, !dbg !1500
  store i32 %362, ptr %l, align 4, !dbg !1500
  %363 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1503
  %364 = load i32, ptr %363, align 4, !dbg !1503
  %_377.0 = sub i32 %364, %_371.1, !dbg !1503
  %_377.1 = icmp ult i32 %364, %_371.1, !dbg !1503
  br i1 %_377.1, label %panic60, label %bb196, !dbg !1503

panic59:                                          ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_c65de7265df0073c0455c52e428831ba) #12, !dbg !1500
  unreachable, !dbg !1500

bb196:                                            ; preds = %bb195
  %365 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1503
  store i32 %_377.0, ptr %365, align 4, !dbg !1503
  %366 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1504
  %_381 = load i32, ptr %366, align 4, !dbg !1504
  %_380 = trunc i32 %_381 to i8, !dbg !1504
; call miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E(ptr align 4 %out_buf, i8 %_380) #11, !dbg !1505
  %_382 = and i32 %_371.0, 256, !dbg !1506
  %367 = icmp eq i32 %_382, 0, !dbg !1506
  br i1 %367, label %bb199, label %bb198, !dbg !1506

panic60:                                          ; preds = %bb195
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_72e08d77f2152f18c3e065bce5f1c5df) #12, !dbg !1503
  unreachable, !dbg !1503

bb199:                                            ; preds = %bb196
  %_386 = trunc i32 %_371.0 to i8, !dbg !1507
; call miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E(ptr align 4 %out_buf, i8 %_386) #11, !dbg !1508
  store i8 0, ptr %_326, align 1, !dbg !1509
  br label %bb201, !dbg !1510

bb198:                                            ; preds = %bb196
  %368 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1511
  store i32 %_371.0, ptr %368, align 4, !dbg !1511
  %369 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1512
  store i8 21, ptr %369, align 1, !dbg !1512
  store i8 1, ptr %_326, align 1, !dbg !1512
  br label %bb201, !dbg !1510

bb201:                                            ; preds = %bb174, %bb182, %bb183, %bb190, %bb198, %bb199
  %370 = load i8, ptr %_326, align 1, !dbg !1513
  %371 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1513
  %372 = load i8, ptr %371, align 1, !dbg !1513
  %_387 = zext i8 %370 to i32, !dbg !1513
  switch i32 %_387, label %bb17 [
    i32 0, label %bb170
    i32 1, label %bb203
    i32 2, label %bb202
  ], !dbg !1061

bb183:                                            ; preds = %bb179
  %373 = load i8, ptr %status1, align 1, !dbg !1514
  %374 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1514
  store i8 %373, ptr %374, align 1, !dbg !1514
  store i8 2, ptr %_326, align 1, !dbg !1514
  br label %bb201, !dbg !1515

bb182:                                            ; preds = %bb179
  %375 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1516
  store i8 %_343.1, ptr %375, align 1, !dbg !1516
  store i8 1, ptr %_326, align 1, !dbg !1516
  br label %bb201, !dbg !1515

bb203:                                            ; preds = %bb201
  %376 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1153
  %new_state62 = load i8, ptr %376, align 1, !dbg !1153
  store i8 %new_state62, ptr %new_state.dbg.spill63, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill63, !903, !DIExpression(), !1517)
  store i8 %new_state62, ptr %state, align 1, !dbg !1518
  br label %bb10, !dbg !1156

bb202:                                            ; preds = %bb201
  %377 = getelementptr inbounds i8, ptr %_326, i32 1, !dbg !1158
  %result64 = load i8, ptr %377, align 1, !dbg !1158
  store i8 %result64, ptr %result.dbg.spill65, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill65, !905, !DIExpression(), !1519)
  store i8 %result64, ptr %status, align 1, !dbg !1520
  br label %bb318, !dbg !1156

bb206:                                            ; preds = %bb204
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_395 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1521
  %_394 = icmp ugt i32 %_395, 0, !dbg !1522
  br i1 %_394, label %bb208, label %bb210, !dbg !1522

bb205:                                            ; preds = %bb204
  %378 = getelementptr inbounds i8, ptr %_390, i32 1, !dbg !1523
  store i8 21, ptr %378, align 1, !dbg !1523
  store i8 1, ptr %_390, align 1, !dbg !1523
  br label %bb211, !dbg !1524

bb210:                                            ; preds = %bb206
  %379 = getelementptr inbounds i8, ptr %_390, i32 1, !dbg !1525
  store i8 2, ptr %379, align 1, !dbg !1525
  store i8 2, ptr %_390, align 1, !dbg !1525
  br label %bb211, !dbg !1526

bb208:                                            ; preds = %bb206
  %380 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1527
  %_400 = load i32, ptr %380, align 4, !dbg !1527
  %_399 = trunc i32 %_400 to i8, !dbg !1527
; call miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E(ptr align 4 %out_buf, i8 %_399) #11, !dbg !1528
  %381 = getelementptr inbounds i8, ptr %_390, i32 1, !dbg !1529
  store i8 12, ptr %381, align 1, !dbg !1529
  store i8 1, ptr %_390, align 1, !dbg !1529
  br label %bb211, !dbg !1526

bb211:                                            ; preds = %bb205, %bb208, %bb210
  %382 = load i8, ptr %_390, align 1, !dbg !1530
  %383 = getelementptr inbounds i8, ptr %_390, i32 1, !dbg !1530
  %384 = load i8, ptr %383, align 1, !dbg !1530
  %_403 = zext i8 %382 to i32, !dbg !1530
  switch i32 %_403, label %bb17 [
    i32 0, label %bb204
    i32 1, label %bb213
    i32 2, label %bb212
  ], !dbg !1061

bb213:                                            ; preds = %bb211
  %385 = getelementptr inbounds i8, ptr %_390, i32 1, !dbg !1153
  %new_state66 = load i8, ptr %385, align 1, !dbg !1153
  store i8 %new_state66, ptr %new_state.dbg.spill67, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill67, !907, !DIExpression(), !1531)
  store i8 %new_state66, ptr %state, align 1, !dbg !1532
  br label %bb10, !dbg !1156

bb212:                                            ; preds = %bb211
  %386 = getelementptr inbounds i8, ptr %_390, i32 1, !dbg !1158
  %result68 = load i8, ptr %386, align 1, !dbg !1158
  store i8 %result68, ptr %result.dbg.spill69, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill69, !909, !DIExpression(), !1533)
  store i8 %result68, ptr %status, align 1, !dbg !1534
  br label %bb318, !dbg !1156

bb233:                                            ; preds = %bb229
  %387 = getelementptr inbounds i8, ptr %_435, i32 1, !dbg !1153
  %new_state72 = load i8, ptr %387, align 1, !dbg !1153
  store i8 %new_state72, ptr %new_state.dbg.spill73, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill73, !917, !DIExpression(), !1535)
  store i8 %new_state72, ptr %state, align 1, !dbg !1536
  br label %bb10, !dbg !1156

bb232:                                            ; preds = %bb229
  %388 = getelementptr inbounds i8, ptr %_435, i32 1, !dbg !1158
  %result74 = load i8, ptr %388, align 1, !dbg !1158
  store i8 %result74, ptr %result.dbg.spill75, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill75, !919, !DIExpression(), !1537)
  store i8 %result74, ptr %status, align 1, !dbg !1538
  br label %bb318, !dbg !1156

bb237:                                            ; preds = %bb234
  %389 = getelementptr inbounds i8, ptr %_443, i32 1, !dbg !1153
  %new_state76 = load i8, ptr %389, align 1, !dbg !1153
  store i8 %new_state76, ptr %new_state.dbg.spill77, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill77, !921, !DIExpression(), !1539)
  store i8 %new_state76, ptr %state, align 1, !dbg !1540
  br label %bb10, !dbg !1156

bb236:                                            ; preds = %bb234
  %390 = getelementptr inbounds i8, ptr %_443, i32 1, !dbg !1158
  %result78 = load i8, ptr %390, align 1, !dbg !1158
  store i8 %result78, ptr %result.dbg.spill79, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill79, !923, !DIExpression(), !1541)
  store i8 %result78, ptr %status, align 1, !dbg !1542
  br label %bb318, !dbg !1156

bb242:                                            ; preds = %bb238
  %391 = getelementptr inbounds i8, ptr %_449, i32 1, !dbg !1153
  %new_state82 = load i8, ptr %391, align 1, !dbg !1153
  store i8 %new_state82, ptr %new_state.dbg.spill83, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill83, !927, !DIExpression(), !1543)
  store i8 %new_state82, ptr %state, align 1, !dbg !1544
  br label %bb10, !dbg !1156

bb241:                                            ; preds = %bb238
  %392 = getelementptr inbounds i8, ptr %_449, i32 1, !dbg !1158
  %result84 = load i8, ptr %392, align 1, !dbg !1158
  store i8 %result84, ptr %result.dbg.spill85, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill85, !929, !DIExpression(), !1545)
  store i8 %result84, ptr %status, align 1, !dbg !1546
  br label %bb318, !dbg !1156

bb64:                                             ; preds = %bb61
  %393 = getelementptr inbounds i8, ptr %_114, i32 1, !dbg !1153
  %new_state86 = load i8, ptr %393, align 1, !dbg !1153
  store i8 %new_state86, ptr %new_state.dbg.spill87, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill87, !844, !DIExpression(), !1547)
  store i8 %new_state86, ptr %state, align 1, !dbg !1548
  br label %bb10, !dbg !1156

bb63:                                             ; preds = %bb61
  %394 = getelementptr inbounds i8, ptr %_114, i32 1, !dbg !1158
  %result88 = load i8, ptr %394, align 1, !dbg !1158
  store i8 %result88, ptr %result.dbg.spill89, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill89, !846, !DIExpression(), !1549)
  store i8 %result88, ptr %status, align 1, !dbg !1550
  br label %bb318, !dbg !1156

bb67:                                             ; preds = %bb65
  %395 = getelementptr inbounds i8, ptr %_120, i32 1, !dbg !1551
  store i8 2, ptr %395, align 1, !dbg !1551
  store i8 2, ptr %_120, align 1, !dbg !1551
  br label %bb74, !dbg !1552

bb68:                                             ; preds = %bb65
  %396 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1553
  %_127 = load i32, ptr %396, align 4, !dbg !1553
  %_126 = trunc i32 %_127 to i8, !dbg !1553
; call miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E(ptr align 4 %out_buf, i8 %_126) #11, !dbg !1554
  %397 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1555
  %398 = load i32, ptr %397, align 4, !dbg !1555
  %_128.0 = sub i32 %398, 1, !dbg !1555
  %_128.1 = icmp ult i32 %398, 1, !dbg !1555
  br i1 %_128.1, label %panic90, label %bb70, !dbg !1555

bb74:                                             ; preds = %bb73, %bb72, %bb67
  %399 = load i8, ptr %_120, align 1, !dbg !1556
  %400 = getelementptr inbounds i8, ptr %_120, i32 1, !dbg !1556
  %401 = load i8, ptr %400, align 1, !dbg !1556
  %_133 = zext i8 %399 to i32, !dbg !1556
  switch i32 %_133, label %bb17 [
    i32 0, label %bb65
    i32 1, label %bb76
    i32 2, label %bb75
  ], !dbg !1061

bb70:                                             ; preds = %bb68
  %402 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1555
  store i32 %_128.0, ptr %402, align 4, !dbg !1555
  %403 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1557
  %_129 = load i32, ptr %403, align 4, !dbg !1557
  %404 = icmp eq i32 %_129, 0, !dbg !1557
  br i1 %404, label %bb72, label %bb71, !dbg !1557

panic90:                                          ; preds = %bb68
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_50b2e5dc7be865a2dc089eb76a127829) #12, !dbg !1555
  unreachable, !dbg !1555

bb72:                                             ; preds = %bb71, %bb70
  %405 = getelementptr inbounds i8, ptr %_120, i32 1, !dbg !1558
  store i8 6, ptr %405, align 1, !dbg !1558
  store i8 1, ptr %_120, align 1, !dbg !1558
  br label %bb74, !dbg !1559

bb71:                                             ; preds = %bb70
  %406 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1560
  %_130 = load i32, ptr %406, align 4, !dbg !1560
  %407 = icmp eq i32 %_130, 0, !dbg !1560
  br i1 %407, label %bb72, label %bb73, !dbg !1560

bb73:                                             ; preds = %bb71
  %408 = getelementptr inbounds i8, ptr %_120, i32 1, !dbg !1561
  store i8 17, ptr %408, align 1, !dbg !1561
  store i8 1, ptr %_120, align 1, !dbg !1561
  br label %bb74, !dbg !1559

bb76:                                             ; preds = %bb74
  %409 = getelementptr inbounds i8, ptr %_120, i32 1, !dbg !1153
  %new_state91 = load i8, ptr %409, align 1, !dbg !1153
  store i8 %new_state91, ptr %new_state.dbg.spill92, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill92, !848, !DIExpression(), !1562)
  store i8 %new_state91, ptr %state, align 1, !dbg !1563
  br label %bb10, !dbg !1156

bb75:                                             ; preds = %bb74
  %410 = getelementptr inbounds i8, ptr %_120, i32 1, !dbg !1158
  %result93 = load i8, ptr %410, align 1, !dbg !1158
  store i8 %result93, ptr %result.dbg.spill94, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill94, !850, !DIExpression(), !1564)
  store i8 %result93, ptr %status, align 1, !dbg !1565
  br label %bb318, !dbg !1156

bb285:                                            ; preds = %bb270
  %411 = getelementptr inbounds i8, ptr %_517, i32 1, !dbg !1566
  store i8 2, ptr %411, align 1, !dbg !1566
  store i8 2, ptr %_517, align 1, !dbg !1566
  br label %bb286, !dbg !1567

bb272:                                            ; preds = %bb270
  store ptr %out_buf, ptr %self.dbg.spill.i192, align 4
    #dbg_declare(ptr %self.dbg.spill.i192, !1137, !DIExpression(), !1568)
  %412 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1570
  %_0.i193 = load i32, ptr %412, align 4, !dbg !1570
  store i32 %_0.i193, ptr %out_pos.dbg.spill96, align 4, !dbg !1571
    #dbg_declare(ptr %out_pos.dbg.spill96, !943, !DIExpression(), !1572)
  store ptr %out_buf, ptr %self.dbg.spill.i190, align 4
    #dbg_declare(ptr %self.dbg.spill.i190, !1137, !DIExpression(), !1573)
  %413 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1575
  %_0.i191 = load i32, ptr %413, align 4, !dbg !1575
  %414 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1576
  %_528 = load i32, ptr %414, align 4, !dbg !1576
  store i32 %_0.i191, ptr %self.dbg.spill.i217, align 4
    #dbg_declare(ptr %self.dbg.spill.i217, !1577, !DIExpression(), !1581)
  store i32 %_528, ptr %rhs.dbg.spill.i216, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i216, !1580, !DIExpression(), !1583)
  %_0.i218 = sub i32 %_0.i191, %_528, !dbg !1584
  %_529 = load i32, ptr %out_buf_size_mask, align 4, !dbg !1585
  %source_pos = and i32 %_0.i218, %_529, !dbg !1586
  store i32 %source_pos, ptr %source_pos.dbg.spill, align 4, !dbg !1586
    #dbg_declare(ptr %source_pos.dbg.spill, !945, !DIExpression(), !1587)
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_531 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1588
  %415 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1589
  %_534 = load i32, ptr %415, align 4, !dbg !1589
; call core::cmp::min
  %len = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %_531, i32 %_534) #11, !dbg !1590
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !1590
    #dbg_declare(ptr %len.dbg.spill, !947, !DIExpression(), !1591)
  store ptr %out_buf, ptr %self.dbg.spill.i167, align 4
    #dbg_declare(ptr %self.dbg.spill.i167, !1592, !DIExpression(), !1598)
  %_0.0.i168 = load ptr, ptr %out_buf, align 4, !dbg !1600
  %416 = getelementptr inbounds i8, ptr %out_buf, i32 4, !dbg !1600
  %_0.1.i169 = load i32, ptr %416, align 4, !dbg !1600
  %417 = insertvalue { ptr, i32 } poison, ptr %_0.0.i168, 0, !dbg !1601
  %418 = insertvalue { ptr, i32 } %417, i32 %_0.1.i169, 1, !dbg !1601
  %_536.0 = extractvalue { ptr, i32 } %418, 0, !dbg !1602
  %_536.1 = extractvalue { ptr, i32 } %418, 1, !dbg !1602
  %_538 = load i32, ptr %out_buf_size_mask, align 4, !dbg !1603
; call miniz_oxide::inflate::core::transfer
  call void @_ZN11miniz_oxide7inflate4core8transfer17h1bd7e969a6e5edcdE(ptr align 1 %_536.0, i32 %_536.1, i32 %source_pos, i32 %_0.i193, i32 %len, i32 %_538) #11, !dbg !1604
  %_542.0 = add i32 %_0.i193, %len, !dbg !1605
  %_542.1 = icmp ult i32 %_542.0, %_0.i193, !dbg !1605
  br i1 %_542.1, label %panic97, label %bb280, !dbg !1605

bb286:                                            ; preds = %bb284, %bb283, %bb285
  %419 = load i8, ptr %_517, align 1, !dbg !1606
  %420 = getelementptr inbounds i8, ptr %_517, i32 1, !dbg !1606
  %421 = load i8, ptr %420, align 1, !dbg !1606
  %_548 = zext i8 %419 to i32, !dbg !1606
  switch i32 %_548, label %bb17 [
    i32 0, label %bb270
    i32 1, label %bb288
    i32 2, label %bb287
  ], !dbg !1061

bb280:                                            ; preds = %bb272
  store ptr %out_buf, ptr %self.dbg.spill.i163, align 4
    #dbg_declare(ptr %self.dbg.spill.i163, !1607, !DIExpression(), !1614)
  store i32 %_542.0, ptr %position.dbg.spill.i162, align 4
    #dbg_declare(ptr %position.dbg.spill.i162, !1613, !DIExpression(), !1616)
  %422 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1617
  store i32 %_542.0, ptr %422, align 4, !dbg !1617
  %423 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1618
  %424 = load i32, ptr %423, align 4, !dbg !1618
  %_544.0 = sub i32 %424, %len, !dbg !1618
  %_544.1 = icmp ult i32 %424, %len, !dbg !1618
  br i1 %_544.1, label %panic98, label %bb282, !dbg !1618

panic97:                                          ; preds = %bb272
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_35433adcafeaa5cb494fa1d499f09066) #12, !dbg !1605
  unreachable, !dbg !1605

bb282:                                            ; preds = %bb280
  %425 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1618
  store i32 %_544.0, ptr %425, align 4, !dbg !1618
  %426 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1619
  %_545 = load i32, ptr %426, align 4, !dbg !1619
  %427 = icmp eq i32 %_545, 0, !dbg !1619
  br i1 %427, label %bb283, label %bb284, !dbg !1619

panic98:                                          ; preds = %bb280
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_d29c7804675dbb43a5555132b2cb5b21) #12, !dbg !1618
  unreachable, !dbg !1618

bb283:                                            ; preds = %bb282
  %428 = getelementptr inbounds i8, ptr %_517, i32 1, !dbg !1620
  store i8 12, ptr %428, align 1, !dbg !1620
  store i8 1, ptr %_517, align 1, !dbg !1620
  br label %bb286, !dbg !1621

bb284:                                            ; preds = %bb282
  store i8 0, ptr %_517, align 1, !dbg !1622
  br label %bb286, !dbg !1621

bb288:                                            ; preds = %bb286
  %429 = getelementptr inbounds i8, ptr %_517, i32 1, !dbg !1153
  %new_state99 = load i8, ptr %429, align 1, !dbg !1153
  store i8 %new_state99, ptr %new_state.dbg.spill100, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill100, !949, !DIExpression(), !1623)
  store i8 %new_state99, ptr %state, align 1, !dbg !1624
  br label %bb10, !dbg !1156

bb287:                                            ; preds = %bb286
  %430 = getelementptr inbounds i8, ptr %_517, i32 1, !dbg !1158
  %result101 = load i8, ptr %430, align 1, !dbg !1158
  store i8 %result101, ptr %result.dbg.spill102, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill102, !951, !DIExpression(), !1625)
  store i8 %result101, ptr %status, align 1, !dbg !1626
  br label %bb318, !dbg !1156

bb306:                                            ; preds = %bb289
  %431 = getelementptr inbounds i8, ptr %_551, i32 1, !dbg !1627
  store i8 3, ptr %431, align 1, !dbg !1627
  store i8 1, ptr %_551, align 1, !dbg !1627
  br label %bb307, !dbg !1628

bb290:                                            ; preds = %bb289
  %432 = load i32, ptr %flags, align 4, !dbg !1629
; call miniz_oxide::inflate::core::pad_to_bytes
  %433 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12pad_to_bytes17hdb3a192994c0f1d1E(ptr align 4 %l, ptr align 4 %in_iter, i32 %432) #11, !dbg !1629
  %_553.0 = extractvalue { i8, i8 } %433, 0, !dbg !1629
  %_553.1 = extractvalue { i8, i8 } %433, 1, !dbg !1629
  store ptr %in_iter, ptr %self.dbg.spill.i143, align 4
    #dbg_declare(ptr %self.dbg.spill.i143, !1071, !DIExpression(), !1630)
  %_2.0.i144 = load ptr, ptr %in_iter, align 4, !dbg !1632
  %434 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1632
  %_2.1.i145 = load i32, ptr %434, align 4, !dbg !1632
  %_560.0 = sub i32 %in_buf.1, %_2.1.i145, !dbg !1633
  %_560.1 = icmp ult i32 %in_buf.1, %_2.1.i145, !dbg !1633
  br i1 %_560.1, label %panic103, label %bb293, !dbg !1633

bb307:                                            ; preds = %bb304, %bb305, %bb306
  %435 = load i8, ptr %_551, align 1, !dbg !1634
  %436 = getelementptr inbounds i8, ptr %_551, i32 1, !dbg !1634
  %437 = load i8, ptr %436, align 1, !dbg !1634
  %_594 = zext i8 %435 to i32, !dbg !1634
  switch i32 %_594, label %bb17 [
    i32 0, label %bb289
    i32 1, label %bb309
    i32 2, label %bb308
  ], !dbg !1061

bb293:                                            ; preds = %bb290
  store i32 %_560.0, ptr %in_consumed.dbg.spill, align 4, !dbg !1633
    #dbg_declare(ptr %in_consumed.dbg.spill, !953, !DIExpression(), !1635)
; call miniz_oxide::inflate::core::undo_bytes
  %_562 = call i32 @_ZN11miniz_oxide7inflate4core10undo_bytes17h38b70339048b5439E(ptr align 4 %l, i32 %_560.0) #11, !dbg !1636
  store i32 %_562, ptr %undo.dbg.spill, align 4, !dbg !1636
    #dbg_declare(ptr %undo.dbg.spill, !955, !DIExpression(), !1637)
  %_572.0 = sub i32 %_560.0, %_562, !dbg !1638
  %_572.1 = icmp ult i32 %_560.0, %_562, !dbg !1638
  br i1 %_572.1, label %panic104, label %bb295, !dbg !1638

panic103:                                         ; preds = %bb290
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_a75cd1f2f0cb96c7bcaed419f13443e5) #12, !dbg !1633
  unreachable, !dbg !1633

bb295:                                            ; preds = %bb293
  store ptr %in_buf.0, ptr %self.dbg.spill.i230, align 4
  %438 = getelementptr inbounds i8, ptr %self.dbg.spill.i230, i32 4
  store i32 %in_buf.1, ptr %438, align 4
    #dbg_declare(ptr %self.dbg.spill.i230, !634, !DIExpression(), !1639)
  store i32 %_572.0, ptr %index.dbg.spill.i229, align 4
    #dbg_declare(ptr %index.dbg.spill.i229, !640, !DIExpression(), !1641)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %439 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32 %_572.0, ptr align 1 %in_buf.0, i32 %in_buf.1, ptr align 4 @alloc_0adc3717516104d9e7d9f60047cf502b) #11, !dbg !1642
  %_0.0.i231 = extractvalue { ptr, i32 } %439, 0, !dbg !1642
  %_0.1.i232 = extractvalue { ptr, i32 } %439, 1, !dbg !1642
  %_569.0 = extractvalue { ptr, i32 } %439, 0, !dbg !1643
  %_569.1 = extractvalue { ptr, i32 } %439, 1, !dbg !1643
; call core::slice::<impl [T]>::iter
  %440 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %_569.0, i32 %_569.1) #11, !dbg !1644
  %441 = extractvalue { ptr, ptr } %440, 0, !dbg !1644
  %442 = extractvalue { ptr, ptr } %440, 1, !dbg !1644
  store ptr %441, ptr %_568, align 4, !dbg !1644
  %443 = getelementptr inbounds i8, ptr %_568, i32 4, !dbg !1644
  store ptr %442, ptr %443, align 4, !dbg !1644
; call core::slice::iter::Iter<T>::as_slice
  %444 = call { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4 %_568) #11, !dbg !1645
  %_566.0 = extractvalue { ptr, i32 } %444, 0, !dbg !1645
  %_566.1 = extractvalue { ptr, i32 } %444, 1, !dbg !1645
  store ptr %_566.0, ptr %slice.dbg.spill.i, align 4
  %445 = getelementptr inbounds i8, ptr %slice.dbg.spill.i, i32 4
  store i32 %_566.1, ptr %445, align 4
    #dbg_declare(ptr %slice.dbg.spill.i, !1025, !DIExpression(), !1646)
  %_565.0 = extractvalue { ptr, i32 } %444, 0, !dbg !1648
  %_565.1 = extractvalue { ptr, i32 } %444, 1, !dbg !1648
  store ptr %_565.0, ptr %in_iter, align 4, !dbg !1649
  %446 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1649
  store i32 %_565.1, ptr %446, align 4, !dbg !1649
  %447 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1650
  %_576 = load i32, ptr %447, align 4, !dbg !1650
  %_577 = icmp ult i32 %_576, 32, !dbg !1651
  br i1 %_577, label %bb300, label %panic105, !dbg !1651

panic104:                                         ; preds = %bb293
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_33d8bc62ac344db1b441c61746e60e81) #12, !dbg !1638
  unreachable, !dbg !1638

bb300:                                            ; preds = %bb295
  %448 = and i32 %_576, 31, !dbg !1651
  %_574 = shl i32 1, %448, !dbg !1651
  %_578.0 = sub i32 %_574, 1, !dbg !1651
  %_578.1 = icmp ult i32 %_574, 1, !dbg !1651
  br i1 %_578.1, label %panic106, label %bb301, !dbg !1651

panic105:                                         ; preds = %bb295
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_7f20358abcfaa17f09d05e7cfe61e4b9) #12, !dbg !1651
  unreachable, !dbg !1651

bb301:                                            ; preds = %bb300
  %449 = load i32, ptr %l, align 4, !dbg !1652
  %450 = and i32 %449, %_578.0, !dbg !1652
  store i32 %450, ptr %l, align 4, !dbg !1652
  %_580 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1653
  store ptr %_580, ptr %left_val.dbg.spill, align 4, !dbg !1653
    #dbg_declare(ptr %left_val.dbg.spill, !957, !DIExpression(), !1654)
  store ptr @alloc_83ea17bf0c4f4a5a5a13d3ae7955acd0, ptr %right_val.dbg.spill, align 4, !dbg !1653
    #dbg_declare(ptr %right_val.dbg.spill, !962, !DIExpression(), !1654)
  %_585 = load i32, ptr %_580, align 4, !dbg !1654
  %_586 = load i32, ptr @alloc_83ea17bf0c4f4a5a5a13d3ae7955acd0, align 4, !dbg !1654
  %_584 = icmp eq i32 %_585, %_586, !dbg !1654
  br i1 %_584, label %bb303, label %bb302, !dbg !1654

panic106:                                         ; preds = %bb300
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_7f20358abcfaa17f09d05e7cfe61e4b9) #12, !dbg !1651
  unreachable, !dbg !1651

bb302:                                            ; preds = %bb301
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !1654
    #dbg_declare(ptr %kind.dbg.spill, !963, !DIExpression(), !1655)
  store ptr null, ptr %_589, align 4, !dbg !1655
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h7b97e5ae31d89d41E(i8 0, ptr align 4 %_580, ptr align 4 @alloc_83ea17bf0c4f4a5a5a13d3ae7955acd0, ptr align 4 %_589, ptr align 4 @alloc_c0da86de96bb2c08281ea92b22f129fb) #12, !dbg !1655
  unreachable, !dbg !1655

bb303:                                            ; preds = %bb301
  %451 = load i32, ptr %flags, align 4, !dbg !1656
  %_590 = and i32 %451, 1, !dbg !1656
  %452 = icmp eq i32 %_590, 0, !dbg !1656
  br i1 %452, label %bb305, label %bb304, !dbg !1656

bb305:                                            ; preds = %bb303
  %453 = getelementptr inbounds i8, ptr %_551, i32 1, !dbg !1657
  store i8 24, ptr %453, align 1, !dbg !1657
  store i8 1, ptr %_551, align 1, !dbg !1657
  br label %bb307, !dbg !1658

bb304:                                            ; preds = %bb303
  %454 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1659
  store i32 0, ptr %454, align 4, !dbg !1659
  %455 = getelementptr inbounds i8, ptr %_551, i32 1, !dbg !1660
  store i8 23, ptr %455, align 1, !dbg !1660
  store i8 1, ptr %_551, align 1, !dbg !1660
  br label %bb307, !dbg !1658

bb309:                                            ; preds = %bb307
  %456 = getelementptr inbounds i8, ptr %_551, i32 1, !dbg !1153
  %new_state107 = load i8, ptr %456, align 1, !dbg !1153
  store i8 %new_state107, ptr %new_state.dbg.spill108, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill108, !966, !DIExpression(), !1661)
  store i8 %new_state107, ptr %state, align 1, !dbg !1662
  br label %bb10, !dbg !1156

bb308:                                            ; preds = %bb307
  %457 = getelementptr inbounds i8, ptr %_551, i32 1, !dbg !1158
  %result109 = load i8, ptr %457, align 1, !dbg !1158
  store i8 %result109, ptr %result.dbg.spill110, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill110, !968, !DIExpression(), !1663)
  store i8 %result109, ptr %status, align 1, !dbg !1664
  br label %bb318, !dbg !1156

bb215:                                            ; preds = %bb214
  %458 = getelementptr inbounds i8, ptr %_406, i32 1, !dbg !1665
  store i8 20, ptr %458, align 1, !dbg !1665
  store i8 1, ptr %_406, align 1, !dbg !1665
  br label %bb226, !dbg !1666

bb216:                                            ; preds = %bb214
  %459 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1667
  %_410 = load i32, ptr %459, align 4, !dbg !1667
  %_409 = icmp ugt i32 %_410, 285, !dbg !1667
  br i1 %_409, label %bb217, label %bb218, !dbg !1667

bb226:                                            ; preds = %bb217, %bb224, %bb225, %bb215
  %460 = load i8, ptr %_406, align 1, !dbg !1668
  %461 = getelementptr inbounds i8, ptr %_406, i32 1, !dbg !1668
  %462 = load i8, ptr %461, align 1, !dbg !1668
  %_432 = zext i8 %460 to i32, !dbg !1668
  switch i32 %_432, label %bb17 [
    i32 0, label %bb214
    i32 1, label %bb228
    i32 2, label %bb227
  ], !dbg !1061

bb218:                                            ; preds = %bb216
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_413, ptr align 1 @anon.683cac6e6aca26ea7081415a78c2386a.0, i32 32, i1 false), !dbg !1669
  %463 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1670
  %_417 = load i32, ptr %463, align 4, !dbg !1670
  %_418.0 = sub i32 %_417, 257, !dbg !1671
  %_418.1 = icmp ult i32 %_417, 257, !dbg !1671
  br i1 %_418.1, label %panic111, label %bb219, !dbg !1671

bb217:                                            ; preds = %bb216
  %464 = getelementptr inbounds i8, ptr %_406, i32 1, !dbg !1672
  store i8 33, ptr %464, align 1, !dbg !1672
  store i8 1, ptr %_406, align 1, !dbg !1672
  br label %bb226, !dbg !1673

bb219:                                            ; preds = %bb218
  %_414 = and i32 %_418.0, 31, !dbg !1671
  %_419 = icmp ult i32 %_414, 32, !dbg !1669
  br i1 %_419, label %bb220, label %panic112, !dbg !1669

panic111:                                         ; preds = %bb218
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_9fde70b9a5e79fb8bca56991ecd5829f) #12, !dbg !1671
  unreachable, !dbg !1671

bb220:                                            ; preds = %bb219
  %465 = getelementptr inbounds nuw i8, ptr %_413, i32 %_414, !dbg !1669
  %_412 = load i8, ptr %465, align 1, !dbg !1669
  %466 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1674
  store i8 %_412, ptr %466, align 4, !dbg !1674
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %_422, ptr align 2 @anon.683cac6e6aca26ea7081415a78c2386a.1, i32 64, i1 false), !dbg !1675
  %467 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1676
  %_426 = load i32, ptr %467, align 4, !dbg !1676
  %_427.0 = sub i32 %_426, 257, !dbg !1677
  %_427.1 = icmp ult i32 %_426, 257, !dbg !1677
  br i1 %_427.1, label %panic113, label %bb221, !dbg !1677

panic112:                                         ; preds = %bb219
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_414, i32 32, ptr align 4 @alloc_83392c40aa755fde80a4824bd6ad8dc0) #12, !dbg !1669
  unreachable, !dbg !1669

bb221:                                            ; preds = %bb220
  %_423 = and i32 %_427.0, 31, !dbg !1677
  %_428 = icmp ult i32 %_423, 32, !dbg !1675
  br i1 %_428, label %bb222, label %panic114, !dbg !1675

panic113:                                         ; preds = %bb220
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_14c10b5211dd87592b7f7db6ecb145c8) #12, !dbg !1677
  unreachable, !dbg !1677

bb222:                                            ; preds = %bb221
  %468 = getelementptr inbounds nuw i16, ptr %_422, i32 %_423, !dbg !1675
  %_421 = load i16, ptr %468, align 2, !dbg !1675
  store i16 %_421, ptr %small.dbg.spill.i255, align 2
    #dbg_declare(ptr %small.dbg.spill.i255, !1088, !DIExpression(), !1678)
  %_0.i256 = zext i16 %_421 to i32, !dbg !1680
  %469 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1681
  store i32 %_0.i256, ptr %469, align 4, !dbg !1681
  %470 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1682
  %_429 = load i8, ptr %470, align 4, !dbg !1682
  %471 = icmp eq i8 %_429, 0, !dbg !1682
  br i1 %471, label %bb225, label %bb224, !dbg !1682

panic114:                                         ; preds = %bb221
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_423, i32 32, ptr align 4 @alloc_0bda7d9049113a7d3e9c8fe3b1e86b0e) #12, !dbg !1675
  unreachable, !dbg !1675

bb225:                                            ; preds = %bb222
  %472 = getelementptr inbounds i8, ptr %_406, i32 1, !dbg !1683
  store i8 15, ptr %472, align 1, !dbg !1683
  store i8 1, ptr %_406, align 1, !dbg !1683
  br label %bb226, !dbg !1684

bb224:                                            ; preds = %bb222
  %473 = getelementptr inbounds i8, ptr %_406, i32 1, !dbg !1685
  store i8 14, ptr %473, align 1, !dbg !1685
  store i8 1, ptr %_406, align 1, !dbg !1685
  br label %bb226, !dbg !1684

bb228:                                            ; preds = %bb226
  %474 = getelementptr inbounds i8, ptr %_406, i32 1, !dbg !1153
  %new_state115 = load i8, ptr %474, align 1, !dbg !1153
  store i8 %new_state115, ptr %new_state.dbg.spill116, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill116, !911, !DIExpression(), !1686)
  store i8 %new_state115, ptr %state, align 1, !dbg !1687
  br label %bb10, !dbg !1156

bb227:                                            ; preds = %bb226
  %475 = getelementptr inbounds i8, ptr %_406, i32 1, !dbg !1158
  %result117 = load i8, ptr %475, align 1, !dbg !1158
  store i8 %result117, ptr %result.dbg.spill118, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill118, !913, !DIExpression(), !1688)
  store i8 %result117, ptr %status, align 1, !dbg !1689
  br label %bb318, !dbg !1156

bb246:                                            ; preds = %bb245, %bb243
  %476 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1690
  %_466 = load i32, ptr %476, align 4, !dbg !1690
  store ptr %out_buf, ptr %self.dbg.spill.i176, align 4
    #dbg_declare(ptr %self.dbg.spill.i176, !1691, !DIExpression(), !1697)
  %_2.0.i177 = load ptr, ptr %out_buf, align 4, !dbg !1699
  %477 = getelementptr inbounds i8, ptr %out_buf, i32 4, !dbg !1699
  %_2.1.i178 = load i32, ptr %477, align 4, !dbg !1699
  %478 = insertvalue { ptr, i32 } poison, ptr %_2.0.i177, 0, !dbg !1700
  %479 = insertvalue { ptr, i32 } %478, i32 %_2.1.i178, 1, !dbg !1700
  %_468.0 = extractvalue { ptr, i32 } %479, 0, !dbg !1701
  %_468.1 = extractvalue { ptr, i32 } %479, 1, !dbg !1701
  %_464 = icmp ugt i32 %_466, %_468.1, !dbg !1702
  br i1 %_464, label %bb248, label %bb249, !dbg !1702

bb245:                                            ; preds = %bb243
  %480 = load i32, ptr %flags, align 4, !dbg !1703
  %_463 = and i32 %480, 4, !dbg !1703
  %481 = icmp eq i32 %_463, 0, !dbg !1704
  br i1 %481, label %bb246, label %bb248, !dbg !1704

bb248:                                            ; preds = %bb246, %bb245
  %482 = getelementptr inbounds i8, ptr %_457, i32 1, !dbg !1705
  store i8 30, ptr %482, align 1, !dbg !1705
  store i8 1, ptr %_457, align 1, !dbg !1705
  br label %bb267, !dbg !1706

bb249:                                            ; preds = %bb246
  store ptr %out_buf, ptr %self.dbg.spill.i186, align 4
    #dbg_declare(ptr %self.dbg.spill.i186, !1137, !DIExpression(), !1707)
  %483 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1709
  %_0.i187 = load i32, ptr %483, align 4, !dbg !1709
  store i32 %_0.i187, ptr %out_pos.dbg.spill120, align 4, !dbg !1710
    #dbg_declare(ptr %out_pos.dbg.spill120, !931, !DIExpression(), !1711)
  store ptr %out_buf, ptr %self.dbg.spill.i184, align 4
    #dbg_declare(ptr %self.dbg.spill.i184, !1137, !DIExpression(), !1712)
  %484 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1714
  %_0.i185 = load i32, ptr %484, align 4, !dbg !1714
  %485 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1715
  %_478 = load i32, ptr %485, align 4, !dbg !1715
  store i32 %_0.i185, ptr %self.dbg.spill.i214, align 4
    #dbg_declare(ptr %self.dbg.spill.i214, !1577, !DIExpression(), !1716)
  store i32 %_478, ptr %rhs.dbg.spill.i213, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i213, !1580, !DIExpression(), !1718)
  %_0.i215 = sub i32 %_0.i185, %_478, !dbg !1719
  %_479 = load i32, ptr %out_buf_size_mask, align 4, !dbg !1720
  %source_pos121 = and i32 %_0.i215, %_479, !dbg !1721
  store i32 %source_pos121, ptr %source_pos.dbg.spill122, align 4, !dbg !1721
    #dbg_declare(ptr %source_pos.dbg.spill122, !933, !DIExpression(), !1722)
  store ptr %out_buf, ptr %self.dbg.spill.i173, align 4
    #dbg_declare(ptr %self.dbg.spill.i173, !1691, !DIExpression(), !1723)
  %_2.0.i174 = load ptr, ptr %out_buf, align 4, !dbg !1725
  %486 = getelementptr inbounds i8, ptr %out_buf, i32 4, !dbg !1725
  %_2.1.i175 = load i32, ptr %486, align 4, !dbg !1725
  %487 = insertvalue { ptr, i32 } poison, ptr %_2.0.i174, 0, !dbg !1726
  %488 = insertvalue { ptr, i32 } %487, i32 %_2.1.i175, 1, !dbg !1726
  %_481.0 = extractvalue { ptr, i32 } %488, 0, !dbg !1727
  %_481.1 = extractvalue { ptr, i32 } %488, 1, !dbg !1727
  store i32 %_481.1, ptr %out_len.dbg.spill, align 4, !dbg !1728
    #dbg_declare(ptr %out_len.dbg.spill, !935, !DIExpression(), !1729)
  store ptr %out_buf, ptr %self.dbg.spill.i182, align 4
    #dbg_declare(ptr %self.dbg.spill.i182, !1137, !DIExpression(), !1730)
  %489 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1732
  %_0.i183 = load i32, ptr %489, align 4, !dbg !1732
  %490 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1733
  %_487 = load i32, ptr %490, align 4, !dbg !1733
  %_488.0 = add i32 %_0.i183, %_487, !dbg !1734
  %_488.1 = icmp ult i32 %_488.0, %_0.i183, !dbg !1734
  br i1 %_488.1, label %panic123, label %bb255, !dbg !1734

bb255:                                            ; preds = %bb249
  store i32 %_488.0, ptr %match_end_pos.dbg.spill, align 4, !dbg !1734
    #dbg_declare(ptr %match_end_pos.dbg.spill, !937, !DIExpression(), !1735)
  %_489 = icmp ugt i32 %_488.0, %_481.1, !dbg !1736
  br i1 %_489, label %bb259, label %bb256, !dbg !1736

panic123:                                         ; preds = %bb249
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_20a42cc06fdf07688a646870f0819943) #12, !dbg !1734
  unreachable, !dbg !1734

bb256:                                            ; preds = %bb255
  %_490 = icmp uge i32 %source_pos121, %_0.i187, !dbg !1737
  br i1 %_490, label %bb257, label %bb262, !dbg !1737

bb259:                                            ; preds = %bb258, %bb255
  %491 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1738
  %_496 = load i32, ptr %491, align 4, !dbg !1738
  %492 = icmp eq i32 %_496, 0, !dbg !1738
  br i1 %492, label %bb260, label %bb261, !dbg !1738

bb262:                                            ; preds = %bb258, %bb256
  store ptr %out_buf, ptr %self.dbg.spill.i164, align 4
    #dbg_declare(ptr %self.dbg.spill.i164, !1592, !DIExpression(), !1739)
  %_0.0.i165 = load ptr, ptr %out_buf, align 4, !dbg !1741
  %493 = getelementptr inbounds i8, ptr %out_buf, i32 4, !dbg !1741
  %_0.1.i166 = load i32, ptr %493, align 4, !dbg !1741
  %494 = insertvalue { ptr, i32 } poison, ptr %_0.0.i165, 0, !dbg !1742
  %495 = insertvalue { ptr, i32 } %494, i32 %_0.1.i166, 1, !dbg !1742
  %_500.0 = extractvalue { ptr, i32 } %495, 0, !dbg !1743
  %_500.1 = extractvalue { ptr, i32 } %495, 1, !dbg !1743
  %496 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1744
  %_503 = load i32, ptr %496, align 4, !dbg !1744
  %497 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1745
  %_505 = load i32, ptr %497, align 4, !dbg !1745
  %_506 = load i32, ptr %out_buf_size_mask, align 4, !dbg !1746
; call miniz_oxide::inflate::core::apply_match
  call void @_ZN11miniz_oxide7inflate4core11apply_match17hc6e8d69c6bc09905E(ptr align 1 %_500.0, i32 %_500.1, i32 %_0.i187, i32 %_503, i32 %_505, i32 %_506) #11, !dbg !1747
  %498 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1748
  %_511 = load i32, ptr %498, align 4, !dbg !1748
  %_512.0 = add i32 %_0.i187, %_511, !dbg !1749
  %_512.1 = icmp ult i32 %_512.0, %_0.i187, !dbg !1749
  br i1 %_512.1, label %panic125, label %bb265, !dbg !1749

bb257:                                            ; preds = %bb256
  %_493.0 = sub i32 %source_pos121, %_0.i187, !dbg !1750
  %_493.1 = icmp ult i32 %source_pos121, %_0.i187, !dbg !1750
  br i1 %_493.1, label %panic124, label %bb258, !dbg !1750

bb258:                                            ; preds = %bb257
  %499 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1751
  %_495 = load i32, ptr %499, align 4, !dbg !1751
  %_491 = icmp ult i32 %_493.0, %_495, !dbg !1750
  br i1 %_491, label %bb259, label %bb262, !dbg !1750

panic124:                                         ; preds = %bb257
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_d02226f4d9fcdaf8d57f08a272c8f75c) #12, !dbg !1750
  unreachable, !dbg !1750

bb265:                                            ; preds = %bb262
  store ptr %out_buf, ptr %self.dbg.spill.i161, align 4
    #dbg_declare(ptr %self.dbg.spill.i161, !1607, !DIExpression(), !1752)
  store i32 %_512.0, ptr %position.dbg.spill.i, align 4
    #dbg_declare(ptr %position.dbg.spill.i, !1613, !DIExpression(), !1754)
  %500 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1755
  store i32 %_512.0, ptr %500, align 4, !dbg !1755
  %501 = getelementptr inbounds i8, ptr %_457, i32 1, !dbg !1756
  store i8 12, ptr %501, align 1, !dbg !1756
  store i8 1, ptr %_457, align 1, !dbg !1756
  br label %bb267, !dbg !1757

panic125:                                         ; preds = %bb262
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_637c3aea1ffec49567eb56fb56eaafe7) #12, !dbg !1749
  unreachable, !dbg !1749

bb267:                                            ; preds = %bb248, %bb261, %bb260, %bb265
  %502 = load i8, ptr %_457, align 1, !dbg !1758
  %503 = getelementptr inbounds i8, ptr %_457, i32 1, !dbg !1758
  %504 = load i8, ptr %503, align 1, !dbg !1758
  %_514 = zext i8 %502 to i32, !dbg !1758
  switch i32 %_514, label %bb17 [
    i32 0, label %bb243
    i32 1, label %bb269
    i32 2, label %bb268
  ], !dbg !1061

bb260:                                            ; preds = %bb259
  %505 = getelementptr inbounds i8, ptr %_457, i32 1, !dbg !1759
  store i8 12, ptr %505, align 1, !dbg !1759
  store i8 1, ptr %_457, align 1, !dbg !1759
  br label %bb267, !dbg !1760

bb261:                                            ; preds = %bb259
  %506 = getelementptr inbounds i8, ptr %_457, i32 1, !dbg !1761
  store i8 19, ptr %506, align 1, !dbg !1761
  store i8 1, ptr %_457, align 1, !dbg !1761
  br label %bb267, !dbg !1760

bb269:                                            ; preds = %bb267
  %507 = getelementptr inbounds i8, ptr %_457, i32 1, !dbg !1153
  %new_state126 = load i8, ptr %507, align 1, !dbg !1153
  store i8 %new_state126, ptr %new_state.dbg.spill127, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill127, !939, !DIExpression(), !1762)
  store i8 %new_state126, ptr %state, align 1, !dbg !1763
  br label %bb10, !dbg !1156

bb268:                                            ; preds = %bb267
  %508 = getelementptr inbounds i8, ptr %_457, i32 1, !dbg !1158
  %result128 = load i8, ptr %508, align 1, !dbg !1158
  store i8 %result128, ptr %result.dbg.spill129, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill129, !941, !DIExpression(), !1764)
  store i8 %result128, ptr %status, align 1, !dbg !1765
  br label %bb318, !dbg !1156

bb314:                                            ; preds = %bb310
  %509 = getelementptr inbounds i8, ptr %_597, i32 1, !dbg !1766
  store i8 24, ptr %509, align 1, !dbg !1766
  store i8 1, ptr %_597, align 1, !dbg !1766
  br label %bb315, !dbg !1767

bb311:                                            ; preds = %bb310
  %510 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1768
  %_600 = load i32, ptr %510, align 4, !dbg !1768
  %511 = icmp eq i32 %_600, 0, !dbg !1768
  br i1 %511, label %bb313, label %bb312, !dbg !1768

bb315:                                            ; preds = %bb312, %bb313, %bb314
  %512 = load i8, ptr %_597, align 1, !dbg !1769
  %513 = getelementptr inbounds i8, ptr %_597, i32 1, !dbg !1769
  %514 = load i8, ptr %513, align 1, !dbg !1769
  %_610 = zext i8 %512 to i32, !dbg !1769
  switch i32 %_610, label %bb17 [
    i32 0, label %bb310
    i32 1, label %bb317
    i32 2, label %bb316
  ], !dbg !1061

bb313:                                            ; preds = %bb311
  %_607 = getelementptr inbounds i8, ptr %r, i32 10444, !dbg !1770
  %_608 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1770
  %515 = load i32, ptr %flags, align 4, !dbg !1771
; call miniz_oxide::inflate::core::read_byte
  %516 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h79940f5754332d9dE(ptr align 4 %in_iter, i32 %515, ptr align 4 %_607, ptr align 4 %_608) #11, !dbg !1771
  %517 = extractvalue { i8, i8 } %516, 0, !dbg !1771
  %518 = extractvalue { i8, i8 } %516, 1, !dbg !1771
  store i8 %517, ptr %_597, align 1, !dbg !1771
  %519 = getelementptr inbounds i8, ptr %_597, i32 1, !dbg !1771
  store i8 %518, ptr %519, align 1, !dbg !1771
  br label %bb315, !dbg !1771

bb312:                                            ; preds = %bb311
  %_604 = getelementptr inbounds i8, ptr %r, i32 10444, !dbg !1772
  %520 = load i32, ptr %flags, align 4, !dbg !1773
; call miniz_oxide::inflate::core::read_bits
  %521 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hb0997e645d13c603E(ptr align 4 %l, i32 8, ptr align 4 %in_iter, i32 %520, ptr align 4 %_604) #11, !dbg !1773
  %522 = extractvalue { i8, i8 } %521, 0, !dbg !1773
  %523 = extractvalue { i8, i8 } %521, 1, !dbg !1773
  store i8 %522, ptr %_597, align 1, !dbg !1773
  %524 = getelementptr inbounds i8, ptr %_597, i32 1, !dbg !1773
  store i8 %523, ptr %524, align 1, !dbg !1773
  br label %bb315, !dbg !1773

bb317:                                            ; preds = %bb315
  %525 = getelementptr inbounds i8, ptr %_597, i32 1, !dbg !1153
  %new_state130 = load i8, ptr %525, align 1, !dbg !1153
  store i8 %new_state130, ptr %new_state.dbg.spill131, align 1, !dbg !1153
    #dbg_declare(ptr %new_state.dbg.spill131, !970, !DIExpression(), !1774)
  store i8 %new_state130, ptr %state, align 1, !dbg !1775
  br label %bb10, !dbg !1156

bb316:                                            ; preds = %bb315
  %526 = getelementptr inbounds i8, ptr %_597, i32 1, !dbg !1158
  %result132 = load i8, ptr %526, align 1, !dbg !1158
  store i8 %result132, ptr %result.dbg.spill133, align 1, !dbg !1158
    #dbg_declare(ptr %result.dbg.spill133, !972, !DIExpression(), !1776)
  store i8 %result132, ptr %status, align 1, !dbg !1777
  br label %bb318, !dbg !1156

bb326:                                            ; preds = %bb320, %bb318
  store i32 0, ptr %in_undo, align 4, !dbg !1778
  br label %bb327, !dbg !1779

bb320:                                            ; preds = %bb318
; call core::cmp::PartialEq::ne
  %_617 = call zeroext i1 @_ZN4core3cmp9PartialEq2ne17hbf384579b5eabf64E(ptr align 1 %status, ptr align 1 @alloc_bc3056290d0a3cafb97857a5bc9fd292) #11, !dbg !1780
  br i1 %_617, label %bb322, label %bb326, !dbg !1780

bb322:                                            ; preds = %bb320
  store ptr %in_iter, ptr %self.dbg.spill.i140, align 4
    #dbg_declare(ptr %self.dbg.spill.i140, !1071, !DIExpression(), !1781)
  %_2.0.i141 = load ptr, ptr %in_iter, align 4, !dbg !1783
  %527 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1783
  %_2.1.i142 = load i32, ptr %527, align 4, !dbg !1783
  %_627.0 = sub i32 %in_buf.1, %_2.1.i142, !dbg !1784
  %_627.1 = icmp ult i32 %in_buf.1, %_2.1.i142, !dbg !1784
  br i1 %_627.1, label %panic134, label %bb324, !dbg !1784

bb327:                                            ; preds = %bb324, %bb326
; call <miniz_oxide::inflate::TINFLStatus as core::cmp::PartialEq>::eq
  %_628 = call zeroext i1 @"_ZN74_$LT$miniz_oxide..inflate..TINFLStatus$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7c9044e26ac2fa86E"(ptr align 1 %status, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4) #11, !dbg !1785
  br i1 %_628, label %bb329, label %bb334, !dbg !1785

bb324:                                            ; preds = %bb322
; call miniz_oxide::inflate::core::undo_bytes
  %_620 = call i32 @_ZN11miniz_oxide7inflate4core10undo_bytes17h38b70339048b5439E(ptr align 4 %l, i32 %_627.0) #11, !dbg !1786
  store i32 %_620, ptr %in_undo, align 4, !dbg !1786
  br label %bb327, !dbg !1779

panic134:                                         ; preds = %bb322
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_7e52f3a7bec38ecb3038cb69ae3cf027) #12, !dbg !1784
  unreachable, !dbg !1784

bb334:                                            ; preds = %bb333, %bb331, %bb329, %bb327
  %_637 = load i8, ptr %state, align 1, !dbg !1787
  %528 = getelementptr inbounds i8, ptr %r, i32 10496, !dbg !1788
  store i8 %_637, ptr %528, align 4, !dbg !1788
  %_638 = load i32, ptr %l, align 4, !dbg !1789
  %529 = getelementptr inbounds i8, ptr %r, i32 10460, !dbg !1790
  store i32 %_638, ptr %529, align 4, !dbg !1790
  %530 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !1791
  %_639 = load i32, ptr %530, align 4, !dbg !1791
  %531 = getelementptr inbounds i8, ptr %r, i32 10432, !dbg !1792
  store i32 %_639, ptr %531, align 4, !dbg !1792
  %532 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1793
  %_640 = load i32, ptr %532, align 4, !dbg !1793
  %533 = getelementptr inbounds i8, ptr %r, i32 10452, !dbg !1794
  store i32 %_640, ptr %533, align 4, !dbg !1794
  %534 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1795
  %_641 = load i32, ptr %534, align 4, !dbg !1795
  %535 = getelementptr inbounds i8, ptr %r, i32 10456, !dbg !1796
  store i32 %_641, ptr %535, align 4, !dbg !1796
  %536 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !1797
  %_642 = load i8, ptr %536, align 4, !dbg !1797
  %537 = getelementptr inbounds i8, ptr %r, i32 10476, !dbg !1798
  store i8 %_642, ptr %537, align 4, !dbg !1798
  %538 = getelementptr inbounds i8, ptr %r, i32 10432, !dbg !1799
  %_646 = load i32, ptr %538, align 4, !dbg !1799
  %_647 = icmp ult i32 %_646, 32, !dbg !1800
  br i1 %_647, label %bb335, label %panic135, !dbg !1800

bb329:                                            ; preds = %bb327
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_631 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !1801
  %539 = icmp eq i32 %_631, 0, !dbg !1802
  br i1 %539, label %bb331, label %bb334, !dbg !1802

bb331:                                            ; preds = %bb329
; call core::cmp::PartialEq::ne
  %_633 = call zeroext i1 @_ZN4core3cmp9PartialEq2ne17hf276dde69ddaa528E(ptr align 1 %state, ptr align 1 @alloc_fd7b49ff3b5a25770af2f455422c4744) #11, !dbg !1803
  br i1 %_633, label %bb333, label %bb334, !dbg !1803

bb333:                                            ; preds = %bb331
  store i8 2, ptr %status, align 1, !dbg !1804
  br label %bb334, !dbg !1805

bb335:                                            ; preds = %bb334
  %540 = and i32 %_646, 31, !dbg !1800
  %_644 = shl i32 1, %540, !dbg !1800
  %_648.0 = sub i32 %_644, 1, !dbg !1800
  %_648.1 = icmp ult i32 %_644, 1, !dbg !1800
  br i1 %_648.1, label %panic136, label %bb336, !dbg !1800

panic135:                                         ; preds = %bb334
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_e37f68d8fa94813c0eaad10211f2a0b4) #12, !dbg !1800
  unreachable, !dbg !1800

bb336:                                            ; preds = %bb335
  %541 = getelementptr inbounds i8, ptr %r, i32 10460, !dbg !1806
  %542 = getelementptr inbounds i8, ptr %r, i32 10460, !dbg !1806
  %543 = load i32, ptr %542, align 4, !dbg !1806
  %544 = and i32 %543, %_648.0, !dbg !1806
  store i32 %544, ptr %541, align 4, !dbg !1806
  %545 = load i32, ptr %flags, align 4, !dbg !1807
  %_650 = and i32 %545, 64, !dbg !1807
  %546 = icmp eq i32 %_650, 0, !dbg !1807
  br i1 %546, label %bb337, label %bb338, !dbg !1807

panic136:                                         ; preds = %bb335
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_e37f68d8fa94813c0eaad10211f2a0b4) #12, !dbg !1800
  unreachable, !dbg !1800

bb337:                                            ; preds = %bb336
  %547 = load i32, ptr %flags, align 4, !dbg !1808
  %_651 = and i32 %547, 9, !dbg !1808
  %548 = icmp ne i32 %_651, 0, !dbg !1808
  %549 = zext i1 %548 to i8, !dbg !1808
  store i8 %549, ptr %need_adler, align 1, !dbg !1808
  br label %bb339, !dbg !1809

bb338:                                            ; preds = %bb336
  store i8 0, ptr %need_adler, align 1, !dbg !1810
  br label %bb339, !dbg !1809

bb339:                                            ; preds = %bb338, %bb337
  %550 = load i8, ptr %need_adler, align 1, !dbg !1811
  %_653 = trunc nuw i8 %550 to i1, !dbg !1811
  br i1 %_653, label %bb340, label %bb350, !dbg !1811

bb350:                                            ; preds = %bb349, %bb348, %bb347, %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8fc05b92c785a463E.exit", %bb340, %bb339
  %_674 = load i8, ptr %status, align 1, !dbg !1812
  store ptr %in_iter, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1071, !DIExpression(), !1813)
  %_2.0.i = load ptr, ptr %in_iter, align 4, !dbg !1815
  %551 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !1815
  %_2.1.i = load i32, ptr %551, align 4, !dbg !1815
  %_680.0 = sub i32 %in_buf.1, %_2.1.i, !dbg !1816
  %_680.1 = icmp ult i32 %in_buf.1, %_2.1.i, !dbg !1816
  br i1 %_680.1, label %panic137, label %bb352, !dbg !1816

bb340:                                            ; preds = %bb339
  %_656 = load i8, ptr %status, align 1, !dbg !1817
  %_655 = sext i8 %_656 to i32, !dbg !1817
  %_654 = icmp sge i32 %_655, 0, !dbg !1817
  br i1 %_654, label %bb341, label %bb350, !dbg !1817

bb341:                                            ; preds = %bb340
  store ptr %out_buf, ptr %self.dbg.spill.i180, align 4
    #dbg_declare(ptr %self.dbg.spill.i180, !1137, !DIExpression(), !1818)
  %552 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1820
  %_0.i181 = load i32, ptr %552, align 4, !dbg !1820
  store i32 %_0.i181, ptr %out_buf_pos.dbg.spill, align 4, !dbg !1821
    #dbg_declare(ptr %out_buf_pos.dbg.spill, !978, !DIExpression(), !1822)
  %553 = getelementptr inbounds i8, ptr %r, i32 10448, !dbg !1823
  %_661 = load i32, ptr %553, align 4, !dbg !1823
  store ptr %out_buf, ptr %self.dbg.spill.i170, align 4
    #dbg_declare(ptr %self.dbg.spill.i170, !1691, !DIExpression(), !1824)
  %_2.0.i171 = load ptr, ptr %out_buf, align 4, !dbg !1826
  %554 = getelementptr inbounds i8, ptr %out_buf, i32 4, !dbg !1826
  %_2.1.i172 = load i32, ptr %554, align 4, !dbg !1826
  %555 = insertvalue { ptr, i32 } poison, ptr %_2.0.i171, 0, !dbg !1827
  %556 = insertvalue { ptr, i32 } %555, i32 %_2.1.i172, 1, !dbg !1827
  %_663.0 = extractvalue { ptr, i32 } %556, 0, !dbg !1828
  %_663.1 = extractvalue { ptr, i32 } %556, 1, !dbg !1828
  store ptr %_663.0, ptr %self.dbg.spill.i241, align 4
  %557 = getelementptr inbounds i8, ptr %self.dbg.spill.i241, i32 4
  store i32 %_663.1, ptr %557, align 4
    #dbg_declare(ptr %self.dbg.spill.i241, !1829, !DIExpression(), !1835)
  store i32 %out_pos, ptr %index.dbg.spill.i240, align 4
  %558 = getelementptr inbounds i8, ptr %index.dbg.spill.i240, i32 4
  store i32 %_0.i181, ptr %558, align 4
    #dbg_declare(ptr %index.dbg.spill.i240, !1834, !DIExpression(), !1837)
  store i32 %out_pos, ptr %self.dbg.spill.i.i239, align 4
  %559 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i239, i32 4
  store i32 %_0.i181, ptr %559, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i239, !1288, !DIExpression(), !1838)
  store ptr %_663.0, ptr %slice.dbg.spill.i.i238, align 4
  %560 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i238, i32 4
  store i32 %_663.1, ptr %560, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i238, !1293, !DIExpression(), !1840)
; call core::num::<impl usize>::checked_sub
  %561 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 %_0.i181, i32 %out_pos) #11, !dbg !1841
  %562 = extractvalue { i32, i32 } %561, 0, !dbg !1841
  %563 = extractvalue { i32, i32 } %561, 1, !dbg !1841
  store i32 %562, ptr %_3.i.i, align 4, !dbg !1841
  %564 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !1841
  store i32 %563, ptr %564, align 4, !dbg !1841
  %_6.i.i = load i32, ptr %_3.i.i, align 4, !dbg !1841
  %565 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !1841
  %566 = load i32, ptr %565, align 4, !dbg !1841
  %567 = trunc nuw i32 %_6.i.i to i1, !dbg !1842
  br i1 %567, label %bb2.i.i, label %bb5.i.i, !dbg !1842

bb2.i.i:                                          ; preds = %bb341
  %568 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !1843
  %new_len.i.i = load i32, ptr %568, align 4, !dbg !1843
  store i32 %new_len.i.i, ptr %new_len.dbg.spill.i.i, align 4, !dbg !1843
    #dbg_declare(ptr %new_len.dbg.spill.i.i, !1294, !DIExpression(), !1843)
  %_8.i.i = icmp ule i32 %_0.i181, %_663.1, !dbg !1844
  br i1 %_8.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8fc05b92c785a463E.exit", label %bb5.i.i, !dbg !1844

bb5.i.i:                                          ; preds = %bb2.i.i, %bb341
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 %out_pos, i32 %_0.i181, i32 %_663.1, ptr align 4 @alloc_eb529d767d746ea31eab85dce11cf03b) #12, !dbg !1845
  unreachable, !dbg !1845

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8fc05b92c785a463E.exit": ; preds = %bb2.i.i
  store ptr %_663.0, ptr %ptr.dbg.spill.i.i237, align 4
  %569 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i237, i32 4
  store i32 %_663.1, ptr %569, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i237, !1303, !DIExpression(), !1846)
  store i32 %out_pos, ptr %offset.dbg.spill.i.i236, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i236, !1312, !DIExpression(), !1848)
  store i32 %new_len.i.i, ptr %len.dbg.spill.i.i235, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i235, !1313, !DIExpression(), !1849)
  store ptr %_663.0, ptr %ptr.dbg.spill1.i.i234, align 4, !dbg !1850
    #dbg_declare(ptr %ptr.dbg.spill1.i.i234, !1314, !DIExpression(), !1851)
  %ptr.i.i = getelementptr inbounds nuw i8, ptr %_663.0, i32 %out_pos, !dbg !1852
  store ptr %ptr.i.i, ptr %ptr.dbg.spill2.i.i233, align 4, !dbg !1852
    #dbg_declare(ptr %ptr.dbg.spill2.i.i233, !1317, !DIExpression(), !1853)
  %570 = insertvalue { ptr, i32 } poison, ptr %ptr.i.i, 0, !dbg !1854
  %571 = insertvalue { ptr, i32 } %570, i32 %new_len.i.i, 1, !dbg !1854
  %572 = insertvalue { ptr, i32 } poison, ptr %ptr.i.i, 0, !dbg !1855
  %573 = insertvalue { ptr, i32 } %572, i32 %new_len.i.i, 1, !dbg !1855
  %_662.0 = extractvalue { ptr, i32 } %573, 0, !dbg !1856
  %_662.1 = extractvalue { ptr, i32 } %573, 1, !dbg !1856
; call miniz_oxide::shared::update_adler32
  %_660 = call i32 @_ZN11miniz_oxide6shared14update_adler3217h6668bde8619c7d4aE(i32 %_661, ptr align 1 %_662.0, i32 %_662.1) #11, !dbg !1857
  %574 = getelementptr inbounds i8, ptr %r, i32 10448, !dbg !1858
  store i32 %_660, ptr %574, align 4, !dbg !1858
; call <miniz_oxide::inflate::TINFLStatus as core::cmp::PartialEq>::eq
  %_666 = call zeroext i1 @"_ZN74_$LT$miniz_oxide..inflate..TINFLStatus$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7c9044e26ac2fa86E"(ptr align 1 %status, ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1) #11, !dbg !1859
  br i1 %_666, label %bb347, label %bb350, !dbg !1859

bb347:                                            ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8fc05b92c785a463E.exit"
  %575 = load i32, ptr %flags, align 4, !dbg !1860
  %_669 = and i32 %575, 1, !dbg !1860
  %576 = icmp eq i32 %_669, 0, !dbg !1860
  br i1 %576, label %bb350, label %bb348, !dbg !1860

bb348:                                            ; preds = %bb347
  %577 = getelementptr inbounds i8, ptr %r, i32 10448, !dbg !1861
  %_671 = load i32, ptr %577, align 4, !dbg !1861
  %578 = getelementptr inbounds i8, ptr %r, i32 10444, !dbg !1862
  %_672 = load i32, ptr %578, align 4, !dbg !1862
  %_670 = icmp ne i32 %_671, %_672, !dbg !1861
  br i1 %_670, label %bb349, label %bb350, !dbg !1861

bb349:                                            ; preds = %bb348
  store i8 -2, ptr %status, align 1, !dbg !1863
  br label %bb350, !dbg !1864

bb352:                                            ; preds = %bb350
  %_681 = load i32, ptr %in_undo, align 4, !dbg !1865
  %_682.0 = sub i32 %_680.0, %_681, !dbg !1816
  %_682.1 = icmp ult i32 %_680.0, %_681, !dbg !1816
  br i1 %_682.1, label %panic138, label %bb353, !dbg !1816

panic137:                                         ; preds = %bb350
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_ff0f0cee615df2a382dfac4b284a04b1) #12, !dbg !1816
  unreachable, !dbg !1816

bb353:                                            ; preds = %bb352
  store ptr %out_buf, ptr %self.dbg.spill.i179, align 4
    #dbg_declare(ptr %self.dbg.spill.i179, !1137, !DIExpression(), !1866)
  %579 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !1868
  %_0.i = load i32, ptr %579, align 4, !dbg !1868
  %_686.0 = sub i32 %_0.i, %out_pos, !dbg !1869
  %_686.1 = icmp ult i32 %_0.i, %out_pos, !dbg !1869
  br i1 %_686.1, label %panic139, label %bb355, !dbg !1869

panic138:                                         ; preds = %bb352
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_ff0f0cee615df2a382dfac4b284a04b1) #12, !dbg !1816
  unreachable, !dbg !1816

bb355:                                            ; preds = %bb353
  %580 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1870
  store i8 %_674, ptr %580, align 4, !dbg !1870
  store i32 %_682.0, ptr %_0, align 4, !dbg !1870
  %581 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !1870
  store i32 %_686.0, ptr %581, align 4, !dbg !1870
  br label %bb356, !dbg !1024

panic139:                                         ; preds = %bb353
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_f24c3fc2b4d4d48f2275458deea8a526) #12, !dbg !1869
  unreachable, !dbg !1869

bb356:                                            ; preds = %bb6, %bb355
  ret void, !dbg !1024
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h0b4f6dd55cb5df91E"(ptr align 4 %_1, i8 %cmf) unnamed_addr #0 !dbg !1871 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %cmf.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1895, !DIExpression(DW_OP_deref), !1896)
  store i8 %cmf, ptr %cmf.dbg.spill, align 1
    #dbg_declare(ptr %cmf.dbg.spill, !1894, !DIExpression(), !1897)
  store i8 %cmf, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !1904)
  %_0.i = zext i8 %cmf to i32, !dbg !1906
  store i32 %_0.i, ptr %_1, align 4, !dbg !1907
  ret { i8, i8 } { i8 1, i8 2 }, !dbg !1908
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h171db5d0045c0787E"(ptr align 1 %_1, ptr align 4 %l, i32 %0) unnamed_addr #0 !dbg !1909 {
start:
  %fill_end.dbg.spill = alloca [4 x i8], align 4
  %fill_start.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %val = alloca [1 x i8], align 1
  %_5 = alloca [12 x i8], align 4
  %extra_bits = alloca [4 x i8], align 4
  store i32 %0, ptr %extra_bits, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1919, !DIExpression(DW_OP_deref), !1926)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !1917, !DIExpression(), !1927)
    #dbg_declare(ptr %extra_bits, !1918, !DIExpression(), !1928)
    #dbg_declare(ptr %val, !1920, !DIExpression(), !1929)
  %1 = getelementptr inbounds nuw i32, ptr %_5, i32 0, !dbg !1930
  store i32 3, ptr %1, align 4, !dbg !1930
  %2 = getelementptr inbounds nuw i32, ptr %_5, i32 1, !dbg !1930
  store i32 3, ptr %2, align 4, !dbg !1930
  %3 = getelementptr inbounds nuw i32, ptr %_5, i32 2, !dbg !1930
  store i32 11, ptr %3, align 4, !dbg !1930
  %4 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1931
  %_9 = load i32, ptr %4, align 4, !dbg !1931
  %_10.0 = sub i32 %_9, 16, !dbg !1932
  %_10.1 = icmp ult i32 %_9, 16, !dbg !1932
  br i1 %_10.1, label %panic, label %bb1, !dbg !1932

bb1:                                              ; preds = %start
  %_6 = and i32 %_10.0, 2, !dbg !1932
  %_11 = icmp ult i32 %_6, 3, !dbg !1930
  br i1 %_11, label %bb2, label %panic1, !dbg !1930

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_688be014eea27ca3eb41bd143b0421c1) #12, !dbg !1932
  unreachable, !dbg !1932

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds nuw i32, ptr %_5, i32 %_6, !dbg !1930
  %_4 = load i32, ptr %5, align 4, !dbg !1930
  %6 = load i32, ptr %extra_bits, align 4, !dbg !1933
  %_12.0 = add i32 %6, %_4, !dbg !1933
  %_12.1 = icmp ult i32 %_12.0, %6, !dbg !1933
  br i1 %_12.1, label %panic2, label %bb3, !dbg !1933

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_6, i32 3, ptr align 4 @alloc_3de72570aeeb130724fdd9c333d2728d) #12, !dbg !1930
  unreachable, !dbg !1930

bb3:                                              ; preds = %bb2
  store i32 %_12.0, ptr %extra_bits, align 4, !dbg !1933
  %7 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !1934
  %_14 = load i32, ptr %7, align 4, !dbg !1934
  %8 = icmp eq i32 %_14, 16, !dbg !1934
  br i1 %8, label %bb4, label %bb10, !dbg !1934

panic2:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_cab30e30a55a80564bafa1b246d5b89e) #12, !dbg !1933
  unreachable, !dbg !1933

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1935
  %_18 = load i32, ptr %9, align 4, !dbg !1935
  %_19.0 = sub i32 %_18, 1, !dbg !1935
  %_19.1 = icmp ult i32 %_18, 1, !dbg !1935
  br i1 %_19.1, label %panic3, label %bb5, !dbg !1935

bb10:                                             ; preds = %bb3
  store i8 0, ptr %val, align 1, !dbg !1936
  br label %bb11, !dbg !1937

bb5:                                              ; preds = %bb4
  %_15 = icmp ult i32 %_19.0, 512, !dbg !1935
  br i1 %_15, label %bb7, label %bb6, !dbg !1935

panic3:                                           ; preds = %bb4
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_ee6c06c87207ff7050f351d074d3878b) #12, !dbg !1935
  unreachable, !dbg !1935

bb6:                                              ; preds = %bb5
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_d274f32371e2d934f3265ef325fbfba3, i32 60, ptr align 4 @alloc_59535d81bb6e745a6b39c3aa40851b70) #12, !dbg !1938
  unreachable, !dbg !1938

bb7:                                              ; preds = %bb5
  %10 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1939
  %_27 = load i32, ptr %10, align 4, !dbg !1939
  %_28.0 = sub i32 %_27, 1, !dbg !1940
  %_28.1 = icmp ult i32 %_27, 1, !dbg !1940
  br i1 %_28.1, label %panic4, label %bb8, !dbg !1940

bb8:                                              ; preds = %bb7
  %_24 = and i32 %_28.0, 511, !dbg !1940
  %_29 = icmp ult i32 %_24, 512, !dbg !1941
  br i1 %_29, label %bb9, label %panic5, !dbg !1941

panic4:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_fe6d868f26357e3317887c352d0ad8d4) #12, !dbg !1940
  unreachable, !dbg !1940

bb9:                                              ; preds = %bb8
  %11 = getelementptr inbounds nuw i8, ptr %_1, i32 %_24, !dbg !1941
  %12 = load i8, ptr %11, align 1, !dbg !1941
  store i8 %12, ptr %val, align 1, !dbg !1941
  br label %bb11, !dbg !1937

panic5:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_24, i32 512, ptr align 4 @alloc_8e3f1a9ca55890031ea4585db3ff7fde) #12, !dbg !1941
  unreachable, !dbg !1941

bb11:                                             ; preds = %bb10, %bb9
  %13 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1942
  %_31 = load i32, ptr %13, align 4, !dbg !1942
  store i32 %_31, ptr %fill_start.dbg.spill, align 4, !dbg !1942
    #dbg_declare(ptr %fill_start.dbg.spill, !1922, !DIExpression(), !1943)
  %14 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1944
  %_34 = load i32, ptr %14, align 4, !dbg !1944
  %_36 = load i32, ptr %extra_bits, align 4, !dbg !1945
  %_37.0 = add i32 %_34, %_36, !dbg !1944
  %_37.1 = icmp ult i32 %_37.0, %_34, !dbg !1944
  br i1 %_37.1, label %panic6, label %bb12, !dbg !1944

bb12:                                             ; preds = %bb11
  store i32 %_37.0, ptr %fill_end.dbg.spill, align 4, !dbg !1944
    #dbg_declare(ptr %fill_end.dbg.spill, !1924, !DIExpression(), !1946)
  %_38 = icmp ult i32 %_31, 512, !dbg !1947
  br i1 %_38, label %bb14, label %bb13, !dbg !1947

panic6:                                           ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3df7da7bea14d9bf915f37681b80cae8) #12, !dbg !1944
  unreachable, !dbg !1944

bb13:                                             ; preds = %bb12
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_1980a86095aad29af26da5d6c76ba9ba, i32 48, ptr align 4 @alloc_6101ee6b7e5ffc69df7a8503dd942af8) #12, !dbg !1948
  unreachable, !dbg !1948

bb14:                                             ; preds = %bb12
  %_43 = icmp ult i32 %_37.0, 512, !dbg !1949
  br i1 %_43, label %bb16, label %bb15, !dbg !1949

bb15:                                             ; preds = %bb14
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_096497b42b231c81a01a95e9a371c34a, i32 46, ptr align 4 @alloc_4e27df34ca2c5d6d678b56821e9b1f85) #12, !dbg !1950
  unreachable, !dbg !1950

bb16:                                             ; preds = %bb14
  %_51 = and i32 %_31, 511, !dbg !1951
  %_52 = and i32 %_37.0, 511, !dbg !1952
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %15 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h1d3e6adad372abfdE"(ptr align 1 %_1, i32 %_51, i32 %_52, ptr align 4 @alloc_15e9a958f1491937de9fa3b233b3a304) #11, !dbg !1953
  %_49.0 = extractvalue { ptr, i32 } %15, 0, !dbg !1953
  %_49.1 = extractvalue { ptr, i32 } %15, 1, !dbg !1953
  %_53 = load i8, ptr %val, align 1, !dbg !1954
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_49.0, i32 %_49.1, i8 %_53) #11, !dbg !1955
  %_54 = load i32, ptr %extra_bits, align 4, !dbg !1956
  %16 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1957
  %17 = load i32, ptr %16, align 4, !dbg !1957
  %_55.0 = add i32 %17, %_54, !dbg !1957
  %_55.1 = icmp ult i32 %_55.0, %17, !dbg !1957
  br i1 %_55.1, label %panic7, label %bb19, !dbg !1957

bb19:                                             ; preds = %bb16
  %18 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !1957
  store i32 %_55.0, ptr %18, align 4, !dbg !1957
  ret { i8, i8 } { i8 1, i8 10 }, !dbg !1958

panic7:                                           ; preds = %bb16
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_66feee2604216fca384bdcb70893f785) #12, !dbg !1957
  unreachable, !dbg !1957
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h24b34e8c9df4be8cE"(ptr align 4 %_1, i8 %flg) unnamed_addr #0 !dbg !1959 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
    #dbg_declare(ptr %_1, !1970, !DIExpression(DW_OP_deref), !1974)
    #dbg_declare(ptr %_1, !1971, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !1974)
    #dbg_declare(ptr %_1, !1972, !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref), !1975)
    #dbg_declare(ptr %_1, !1973, !DIExpression(DW_OP_plus_uconst, 12, DW_OP_deref), !1976)
  %flg.dbg.spill = alloca [1 x i8], align 1
  store i8 %flg, ptr %flg.dbg.spill, align 1
    #dbg_declare(ptr %flg.dbg.spill, !1969, !DIExpression(), !1977)
  store i8 %flg, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !1978)
  %_0.i = zext i8 %flg to i32, !dbg !1980
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1981
  %_8 = load ptr, ptr %0, align 4, !dbg !1981
  store i32 %_0.i, ptr %_8, align 4, !dbg !1981
  %_9 = load ptr, ptr %_1, align 4, !dbg !1982
  %_4 = load i32, ptr %_9, align 4, !dbg !1982
  %1 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1983
  %_10 = load ptr, ptr %1, align 4, !dbg !1983
  %_5 = load i32, ptr %_10, align 4, !dbg !1983
  %2 = getelementptr inbounds i8, ptr %_1, i32 8, !dbg !1984
  %_11 = load ptr, ptr %2, align 4, !dbg !1984
  %_6 = load i32, ptr %_11, align 4, !dbg !1984
  %3 = getelementptr inbounds i8, ptr %_1, i32 12, !dbg !1985
  %_12 = load ptr, ptr %3, align 4, !dbg !1985
  %_7 = load i32, ptr %_12, align 4, !dbg !1985
; call miniz_oxide::inflate::core::validate_zlib_header
  %4 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core20validate_zlib_header17h2b66cafd9e179658E(i32 %_4, i32 %_5, i32 %_6, i32 %_7) #11, !dbg !1986
  %_0.0 = extractvalue { i8, i8 } %4, 0, !dbg !1986
  %_0.1 = extractvalue { i8, i8 } %4, 1, !dbg !1986
  %5 = insertvalue { i8, i8 } poison, i8 %_0.0, 0, !dbg !1987
  %6 = insertvalue { i8, i8 } %5, i8 %_0.1, 1, !dbg !1987
  ret { i8, i8 } %6, !dbg !1987
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h3de28129e4bf4651E"(ptr align 1 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !1988 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1998, !DIExpression(DW_OP_deref), !2000)
    #dbg_declare(ptr %_1.dbg.spill, !1999, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !2001)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !1997, !DIExpression(), !2002)
  %_4 = load i32, ptr %_1.1, align 4, !dbg !2003
  %_5 = icmp ult i32 %_4, 4, !dbg !2004
  br i1 %_5, label %bb1, label %panic, !dbg !2004

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds nuw i8, ptr %_1.0, i32 %_4, !dbg !2004
  store i8 %byte, ptr %1, align 1, !dbg !2004
  %2 = load i32, ptr %_1.1, align 4, !dbg !2005
  %_6.0 = add i32 %2, 1, !dbg !2005
  %_6.1 = icmp ult i32 %_6.0, %2, !dbg !2005
  br i1 %_6.1, label %panic1, label %bb2, !dbg !2005

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_4, i32 4, ptr align 4 @alloc_5e84adfa63791312e5ac8c40aa171770) #12, !dbg !2004
  unreachable, !dbg !2004

bb2:                                              ; preds = %bb1
  store i32 %_6.0, ptr %_1.1, align 4, !dbg !2005
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !2006

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_1372d8f5b719b78fdd359ee734dcbaf7) #12, !dbg !2005
  unreachable, !dbg !2005
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h542f16e863614498E"(ptr align 4 %l, i32 %extra_bits) unnamed_addr #0 !dbg !2007 {
start:
  %extra_bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2014, !DIExpression(), !2015)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2012, !DIExpression(), !2016)
  store i32 %extra_bits, ptr %extra_bits.dbg.spill, align 4
    #dbg_declare(ptr %extra_bits.dbg.spill, !2013, !DIExpression(), !2017)
  %0 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2018
  %1 = load i32, ptr %0, align 4, !dbg !2018
  %_4.0 = add i32 %1, %extra_bits, !dbg !2018
  %_4.1 = icmp ult i32 %_4.0, %1, !dbg !2018
  br i1 %_4.1, label %panic, label %bb1, !dbg !2018

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2018
  store i32 %_4.0, ptr %2, align 4, !dbg !2018
  ret { i8, i8 } { i8 1, i8 15 }, !dbg !2019

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6c96faa1ff13655967e754473c89c953) #12, !dbg !2018
  unreachable, !dbg !2018
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h54c014788c83db30E"(ptr align 4 %_2) unnamed_addr #0 !dbg !2020 {
start:
  %_2.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2025, !DIExpression(), !2027)
  store ptr %_2, ptr %_2.dbg.spill, align 4
    #dbg_declare(ptr %_2.dbg.spill, !2026, !DIExpression(), !2028)
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !2029
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h62cde2448a124dc1E"(ptr align 4 %l, i32 %extra_bits) unnamed_addr #0 !dbg !2030 {
start:
  %extra_bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2037, !DIExpression(), !2038)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2035, !DIExpression(), !2039)
  store i32 %extra_bits, ptr %extra_bits.dbg.spill, align 4
    #dbg_declare(ptr %extra_bits.dbg.spill, !2036, !DIExpression(), !2040)
  %0 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2041
  %1 = load i32, ptr %0, align 4, !dbg !2041
  %_4.0 = add i32 %1, %extra_bits, !dbg !2041
  %_4.1 = icmp ult i32 %_4.0, %1, !dbg !2041
  br i1 %_4.1, label %panic, label %bb1, !dbg !2041

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2041
  store i32 %_4.0, ptr %2, align 4, !dbg !2041
  ret { i8, i8 } { i8 1, i8 22 }, !dbg !2042

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_43fb75fa699cf18bfd62a91e638e7d3d) #12, !dbg !2041
  unreachable, !dbg !2041
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h7250651f0ed14b80E"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !2043 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2052, !DIExpression(DW_OP_deref), !2054)
    #dbg_declare(ptr %_1.dbg.spill, !2053, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !2055)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !2051, !DIExpression(), !2056)
  %1 = load i32, ptr %_1.0, align 4, !dbg !2057
  %2 = shl i32 %1, 8, !dbg !2057
  store i32 %2, ptr %_1.0, align 4, !dbg !2057
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !2058)
  %_0.i = zext i8 %byte to i32, !dbg !2060
  %3 = load i32, ptr %_1.0, align 4, !dbg !2061
  %4 = or i32 %3, %_0.i, !dbg !2061
  store i32 %4, ptr %_1.0, align 4, !dbg !2061
  %5 = load i32, ptr %_1.1, align 4, !dbg !2062
  %_6.0 = add i32 %5, 1, !dbg !2062
  %_6.1 = icmp ult i32 %_6.0, %5, !dbg !2062
  br i1 %_6.1, label %panic, label %bb3, !dbg !2062

bb3:                                              ; preds = %start
  store i32 %_6.0, ptr %_1.1, align 4, !dbg !2062
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !2063

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_2df53c69db8ead8c1eabe040773b60a3) #12, !dbg !2062
  unreachable, !dbg !2062
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h8ded89fe72afbb5fE"(ptr align 2 %_1, ptr align 4 %l, i32 %bits) unnamed_addr #0 !dbg !2064 {
start:
  %bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [6 x i8], align 2
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2074, !DIExpression(DW_OP_deref), !2075)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2072, !DIExpression(), !2076)
  store i32 %bits, ptr %bits.dbg.spill, align 4
    #dbg_declare(ptr %bits.dbg.spill, !2073, !DIExpression(), !2077)
  %_4 = trunc i32 %bits to i16, !dbg !2078
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %_6, ptr align 2 @anon.683cac6e6aca26ea7081415a78c2386a.2, i32 6, i1 false), !dbg !2079
  %0 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2080
  %_8 = load i32, ptr %0, align 4, !dbg !2080
  %_9 = icmp ult i32 %_8, 3, !dbg !2079
  br i1 %_9, label %bb1, label %panic, !dbg !2079

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds nuw i16, ptr %_6, i32 %_8, !dbg !2079
  %_5 = load i16, ptr %1, align 2, !dbg !2079
  %_10.0 = add i16 %_4, %_5, !dbg !2078
  %_10.1 = icmp ult i16 %_10.0, %_4, !dbg !2078
  br i1 %_10.1, label %panic1, label %bb2, !dbg !2078

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_8, i32 3, ptr align 4 @alloc_3391909735e0ba41ecd4dfa559d15453) #12, !dbg !2079
  unreachable, !dbg !2079

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2081
  %_12 = load i32, ptr %2, align 4, !dbg !2081
  %_13 = icmp ult i32 %_12, 3, !dbg !2082
  br i1 %_13, label %bb3, label %panic2, !dbg !2082

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_f7010526fb81f513c8cfd2b3a076108c) #12, !dbg !2078
  unreachable, !dbg !2078

bb3:                                              ; preds = %bb2
  %3 = getelementptr inbounds nuw i16, ptr %_1, i32 %_12, !dbg !2082
  store i16 %_10.0, ptr %3, align 2, !dbg !2082
  %4 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2083
  %5 = load i32, ptr %4, align 4, !dbg !2083
  %_14.0 = add i32 %5, 1, !dbg !2083
  %_14.1 = icmp ult i32 %_14.0, %5, !dbg !2083
  br i1 %_14.1, label %panic3, label %bb4, !dbg !2083

panic2:                                           ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_12, i32 3, ptr align 4 @alloc_653061401e5273e47d85bd25786a9a91) #12, !dbg !2082
  unreachable, !dbg !2082

bb4:                                              ; preds = %bb3
  %6 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2083
  store i32 %_14.0, ptr %6, align 4, !dbg !2083
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !2084

panic3:                                           ; preds = %bb3
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_8dd131a8c31a3b44a17b1fc536681aa4) #12, !dbg !2083
  unreachable, !dbg !2083
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h8fc9a9f9ce92ab8fE"(ptr align 4 %r, ptr align 4 %l, i32 %symbol) unnamed_addr #0 !dbg !2085 {
start:
  %symbol.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %r.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_17 = alloca [4 x i8], align 1
  %_0 = alloca [2 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2093, !DIExpression(), !2094)
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !2090, !DIExpression(), !2095)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2091, !DIExpression(), !2096)
  store i32 %symbol, ptr %symbol.dbg.spill, align 4
    #dbg_declare(ptr %symbol.dbg.spill, !2092, !DIExpression(), !2097)
  %0 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2098
  store i32 %symbol, ptr %0, align 4, !dbg !2098
  %1 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2099
  %_6 = load i32, ptr %1, align 4, !dbg !2099
  %_5 = icmp ult i32 %_6, 16, !dbg !2099
  br i1 %_5, label %bb1, label %bb4, !dbg !2099

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2100
  %_13 = load i32, ptr %2, align 4, !dbg !2100
  %3 = icmp eq i32 %_13, 16, !dbg !2100
  br i1 %3, label %bb5, label %bb7, !dbg !2100

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2101
  %_7 = load i32, ptr %4, align 4, !dbg !2101
  %5 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2102
  %_10 = load i32, ptr %5, align 4, !dbg !2102
  %_8 = and i32 %_10, 511, !dbg !2102
  %_11 = icmp ult i32 %_8, 512, !dbg !2103
  br i1 %_11, label %bb2, label %panic2, !dbg !2103

bb5:                                              ; preds = %bb4
  %6 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2104
  %_14 = load i32, ptr %6, align 4, !dbg !2104
  %7 = icmp eq i32 %_14, 0, !dbg !2104
  br i1 %7, label %bb6, label %bb7, !dbg !2104

bb7:                                              ; preds = %bb5, %bb4
  %8 = getelementptr inbounds nuw i8, ptr %_17, i32 0, !dbg !2105
  store i8 2, ptr %8, align 1, !dbg !2105
  %9 = getelementptr inbounds nuw i8, ptr %_17, i32 1, !dbg !2105
  store i8 3, ptr %9, align 1, !dbg !2105
  %10 = getelementptr inbounds nuw i8, ptr %_17, i32 2, !dbg !2105
  store i8 7, ptr %10, align 1, !dbg !2105
  %11 = getelementptr inbounds nuw i8, ptr %_17, i32 3, !dbg !2105
  store i8 0, ptr %11, align 1, !dbg !2105
  %12 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2106
  %_21 = load i32, ptr %12, align 4, !dbg !2106
  %_22.0 = sub i32 %_21, 16, !dbg !2107
  %_22.1 = icmp ult i32 %_21, 16, !dbg !2107
  br i1 %_22.1, label %panic, label %bb8, !dbg !2107

bb6:                                              ; preds = %bb5
  %13 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2108
  store i8 32, ptr %13, align 1, !dbg !2108
  store i8 1, ptr %_0, align 1, !dbg !2108
  br label %bb10, !dbg !2109

bb10:                                             ; preds = %bb3, %bb9, %bb6
  %14 = load i8, ptr %_0, align 1, !dbg !2110
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2110
  %16 = load i8, ptr %15, align 1, !dbg !2110
  %17 = insertvalue { i8, i8 } poison, i8 %14, 0, !dbg !2110
  %18 = insertvalue { i8, i8 } %17, i8 %16, 1, !dbg !2110
  ret { i8, i8 } %18, !dbg !2110

bb8:                                              ; preds = %bb7
  %_18 = and i32 %_22.0, 3, !dbg !2107
  %_23 = icmp ult i32 %_18, 4, !dbg !2105
  br i1 %_23, label %bb9, label %panic1, !dbg !2105

panic:                                            ; preds = %bb7
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_d4dd0d14ef859b85bfba3f200290f694) #12, !dbg !2107
  unreachable, !dbg !2107

bb9:                                              ; preds = %bb8
  %19 = getelementptr inbounds nuw i8, ptr %_17, i32 %_18, !dbg !2105
  %_16 = load i8, ptr %19, align 1, !dbg !2105
  %20 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2111
  store i8 %_16, ptr %20, align 4, !dbg !2111
  %21 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2112
  store i8 11, ptr %21, align 1, !dbg !2112
  store i8 1, ptr %_0, align 1, !dbg !2112
  br label %bb10, !dbg !2109

panic1:                                           ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_18, i32 4, ptr align 4 @alloc_1635bf836886c3f4bcae80ec0c300d03) #12, !dbg !2105
  unreachable, !dbg !2105

bb2:                                              ; preds = %bb1
  %22 = getelementptr inbounds nuw i8, ptr %r, i32 %_8, !dbg !2103
  %23 = trunc i32 %_7 to i8, !dbg !2103
  store i8 %23, ptr %22, align 1, !dbg !2103
  %24 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2113
  %25 = load i32, ptr %24, align 4, !dbg !2113
  %_12.0 = add i32 %25, 1, !dbg !2113
  %_12.1 = icmp ult i32 %_12.0, %25, !dbg !2113
  br i1 %_12.1, label %panic3, label %bb3, !dbg !2113

panic2:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_8, i32 512, ptr align 4 @alloc_b9ed8041781d5d5d3b38531e261333df) #12, !dbg !2103
  unreachable, !dbg !2103

bb3:                                              ; preds = %bb2
  %26 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2113
  store i32 %_12.0, ptr %26, align 4, !dbg !2113
  store i8 0, ptr %_0, align 1, !dbg !2114
  br label %bb10, !dbg !2115

panic3:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_88e1c229c861148f27b8a00add399984) #12, !dbg !2113
  unreachable, !dbg !2113
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h93baf7daff723fdaE"(ptr align 4 %_1, ptr align 4 %l, i32 %bits) unnamed_addr #0 !dbg !2116 {
start:
  %bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2125, !DIExpression(DW_OP_deref), !2126)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2123, !DIExpression(), !2127)
  store i32 %bits, ptr %bits.dbg.spill, align 4
    #dbg_declare(ptr %bits.dbg.spill, !2124, !DIExpression(), !2128)
  %_4 = and i32 %bits, 1, !dbg !2129
  %0 = getelementptr inbounds i8, ptr %_1, i32 10474, !dbg !2130
  %1 = trunc i32 %_4 to i8, !dbg !2130
  store i8 %1, ptr %0, align 2, !dbg !2130
  %_6 = lshr i32 %bits, 1, !dbg !2131
  %_5 = and i32 %_6, 3, !dbg !2132
  %2 = getelementptr inbounds i8, ptr %_1, i32 10475, !dbg !2133
  %3 = trunc i32 %_5 to i8, !dbg !2133
  store i8 %3, ptr %2, align 1, !dbg !2133
  %4 = getelementptr inbounds i8, ptr %_1, i32 10475, !dbg !2134
  %5 = load i8, ptr %4, align 1, !dbg !2134
  switch i8 %5, label %bb2 [
    i8 0, label %bb6
    i8 1, label %bb5
    i8 2, label %bb4
    i8 3, label %bb3
  ], !dbg !2134

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_a500d906b91607583596fa15e63c2ada, i32 40, ptr align 4 @alloc_56f8915c0ba96c9ce2361b5443a9784d) #12, !dbg !2135
  unreachable, !dbg !2135

bb6:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2136
  store i8 4, ptr %6, align 1, !dbg !2136
  store i8 1, ptr %_0, align 1, !dbg !2136
  br label %bb9, !dbg !2137

bb5:                                              ; preds = %start
; call miniz_oxide::inflate::core::start_static_table
  call void @_ZN11miniz_oxide7inflate4core18start_static_table17ha574721360599e59E(ptr align 4 %_1) #11, !dbg !2138
; call miniz_oxide::inflate::core::init_tree
  %7 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9init_tree17h8b4f6fe432835833E(ptr align 4 %_1, ptr align 4 %l) #11, !dbg !2139
  %_11.0 = extractvalue { i8, i8 } %7, 0, !dbg !2139
  %_11.1 = extractvalue { i8, i8 } %7, 1, !dbg !2139
; call core::option::Option<T>::unwrap_or
  %8 = call { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h57526fba8fdc257aE"(i8 %_11.0, i8 %_11.1, i8 2, i8 -1) #11, !dbg !2140
  %9 = extractvalue { i8, i8 } %8, 0, !dbg !2140
  %10 = extractvalue { i8, i8 } %8, 1, !dbg !2140
  store i8 %9, ptr %_0, align 1, !dbg !2140
  %11 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2140
  store i8 %10, ptr %11, align 1, !dbg !2140
  br label %bb9, !dbg !2140

bb4:                                              ; preds = %start
  %12 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2141
  store i32 0, ptr %12, align 4, !dbg !2141
  %13 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2142
  store i8 8, ptr %13, align 1, !dbg !2142
  store i8 1, ptr %_0, align 1, !dbg !2142
  br label %bb9, !dbg !2143

bb3:                                              ; preds = %start
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2144
  store i8 25, ptr %14, align 1, !dbg !2144
  store i8 1, ptr %_0, align 1, !dbg !2144
  br label %bb9, !dbg !2145

bb9:                                              ; preds = %bb3, %bb4, %bb5, %bb6
  %15 = load i8, ptr %_0, align 1, !dbg !2146
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2146
  %17 = load i8, ptr %16, align 1, !dbg !2146
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !2146
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !2146
  ret { i8, i8 } %19, !dbg !2146
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha4e769859de4a0f6E"(ptr align 1 %_1, ptr align 4 %l, i32 %bits) unnamed_addr #0 !dbg !2147 {
start:
  %bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [19 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2157, !DIExpression(DW_OP_deref), !2158)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2155, !DIExpression(), !2159)
  store i32 %bits, ptr %bits.dbg.spill, align 4
    #dbg_declare(ptr %bits.dbg.spill, !2156, !DIExpression(), !2160)
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_6, ptr align 1 @anon.683cac6e6aca26ea7081415a78c2386a.3, i32 19, i1 false), !dbg !2161
  %0 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2162
  %_8 = load i32, ptr %0, align 4, !dbg !2162
  %_9 = icmp ult i32 %_8, 19, !dbg !2161
  br i1 %_9, label %bb1, label %panic, !dbg !2161

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds nuw i8, ptr %_6, i32 %_8, !dbg !2161
  %_5 = load i8, ptr %1, align 1, !dbg !2161
  %_4 = zext i8 %_5 to i32, !dbg !2161
  %_10 = icmp ult i32 %_4, 19, !dbg !2163
  br i1 %_10, label %bb2, label %panic1, !dbg !2163

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_8, i32 19, ptr align 4 @alloc_68774def5e47245aadae2051c2d4d89f) #12, !dbg !2161
  unreachable, !dbg !2161

bb2:                                              ; preds = %bb1
  %2 = getelementptr inbounds nuw i8, ptr %_1, i32 %_4, !dbg !2163
  %3 = trunc i32 %bits to i8, !dbg !2163
  store i8 %3, ptr %2, align 1, !dbg !2163
  %4 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2164
  %5 = load i32, ptr %4, align 4, !dbg !2164
  %_11.0 = add i32 %5, 1, !dbg !2164
  %_11.1 = icmp ult i32 %_11.0, %5, !dbg !2164
  br i1 %_11.1, label %panic2, label %bb3, !dbg !2164

panic1:                                           ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_4, i32 19, ptr align 4 @alloc_da1ae9051c677d518f08eeb841ac6b77) #12, !dbg !2163
  unreachable, !dbg !2163

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2164
  store i32 %_11.0, ptr %6, align 4, !dbg !2164
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !2165

panic2:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_f42d2b3fa09626023f1905518f861e4f) #12, !dbg !2164
  unreachable, !dbg !2164
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha5a366ff3493ef81E"(ptr align 4 %_r, ptr align 4 %l, i32 %symbol) unnamed_addr #0 !dbg !2166 {
start:
  %symbol.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_r.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2174, !DIExpression(), !2175)
  store ptr %_r, ptr %_r.dbg.spill, align 4
    #dbg_declare(ptr %_r.dbg.spill, !2171, !DIExpression(), !2176)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2172, !DIExpression(), !2177)
  store i32 %symbol, ptr %symbol.dbg.spill, align 4
    #dbg_declare(ptr %symbol.dbg.spill, !2173, !DIExpression(), !2178)
  %0 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2179
  store i32 %symbol, ptr %0, align 4, !dbg !2179
  ret { i8, i8 } { i8 1, i8 13 }, !dbg !2180
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha87f2de35545e9adE"(ptr align 1 %_1, ptr align 4 %l, i32 %bits) unnamed_addr #0 !dbg !2181 {
start:
  %bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2190, !DIExpression(DW_OP_deref), !2191)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2188, !DIExpression(), !2192)
  store i32 %bits, ptr %bits.dbg.spill, align 4
    #dbg_declare(ptr %bits.dbg.spill, !2189, !DIExpression(), !2193)
  %0 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2194
  %_5 = load i32, ptr %0, align 4, !dbg !2194
  %_6 = icmp ult i32 %_5, 4, !dbg !2195
  br i1 %_6, label %bb1, label %panic, !dbg !2195

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds nuw i8, ptr %_1, i32 %_5, !dbg !2195
  %2 = trunc i32 %bits to i8, !dbg !2195
  store i8 %2, ptr %1, align 1, !dbg !2195
  %3 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2196
  %4 = load i32, ptr %3, align 4, !dbg !2196
  %_7.0 = add i32 %4, 1, !dbg !2196
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !2196
  br i1 %_7.1, label %panic1, label %bb2, !dbg !2196

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_5, i32 4, ptr align 4 @alloc_d012f0c6f9d023ef43d543008e9d191d) #12, !dbg !2195
  unreachable, !dbg !2195

bb2:                                              ; preds = %bb1
  %5 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2196
  store i32 %_7.0, ptr %5, align 4, !dbg !2196
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !2197

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_a085cdc1a9c698f1c88e838e4c3df755) #12, !dbg !2196
  unreachable, !dbg !2196
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17habebda03c230bb3cE"(ptr align 4 %l) unnamed_addr #0 !dbg !2198 {
start:
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2204, !DIExpression(), !2205)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2203, !DIExpression(), !2206)
  %0 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2207
  store i32 0, ptr %0, align 4, !dbg !2207
  ret { i8, i8 } { i8 1, i8 5 }, !dbg !2208
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hcad5797352f30decE"(ptr align 4 %l, i32 %bits) unnamed_addr #0 !dbg !2209 {
start:
  %bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2216, !DIExpression(), !2217)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2214, !DIExpression(), !2218)
  store i32 %bits, ptr %bits.dbg.spill, align 4
    #dbg_declare(ptr %bits.dbg.spill, !2215, !DIExpression(), !2219)
  %0 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2220
  store i32 %bits, ptr %0, align 4, !dbg !2220
  ret { i8, i8 } { i8 1, i8 18 }, !dbg !2221
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hd6b344c6490bb9f6E"(ptr align 4 %_1, ptr align 4 %l, i32 %bits) unnamed_addr #0 !dbg !2222 {
start:
  %bits.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2231, !DIExpression(DW_OP_deref), !2232)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2229, !DIExpression(), !2233)
  store i32 %bits, ptr %bits.dbg.spill, align 4
    #dbg_declare(ptr %bits.dbg.spill, !2230, !DIExpression(), !2234)
  %0 = load i32, ptr %_1, align 4, !dbg !2235
  %1 = shl i32 %0, 8, !dbg !2235
  store i32 %1, ptr %_1, align 4, !dbg !2235
  %2 = load i32, ptr %_1, align 4, !dbg !2236
  %3 = or i32 %2, %bits, !dbg !2236
  store i32 %3, ptr %_1, align 4, !dbg !2236
  %4 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2237
  %5 = load i32, ptr %4, align 4, !dbg !2237
  %_6.0 = add i32 %5, 1, !dbg !2237
  %_6.1 = icmp ult i32 %_6.0, %5, !dbg !2237
  br i1 %_6.1, label %panic, label %bb2, !dbg !2237

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2237
  store i32 %_6.0, ptr %6, align 4, !dbg !2237
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !2238

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_8af428b94b66314b737be1e7490a7a28) #12, !dbg !2237
  unreachable, !dbg !2237
}

; miniz_oxide::inflate::core::decompress::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hd9dcc9bebd5a63daE"(ptr align 4 %_r, ptr align 4 %l, i32 %symbol) unnamed_addr #0 !dbg !2239 {
start:
  %small.dbg.spill.i = alloca [2 x i8], align 2
  %0 = alloca [1 x i8], align 1
  %rhs.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i = alloca [1 x i8], align 1
  %c.dbg.spill.i = alloca [1 x i8], align 1
  %code.dbg.spill.i = alloca [1 x i8], align 1
  %symbol.dbg.spill1 = alloca [4 x i8], align 4
  %symbol.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_r.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_12 = alloca [60 x i8], align 2
  %_0 = alloca [2 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2249, !DIExpression(), !2250)
  store ptr %_r, ptr %_r.dbg.spill, align 4
    #dbg_declare(ptr %_r.dbg.spill, !2244, !DIExpression(), !2251)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2245, !DIExpression(), !2252)
  store i32 %symbol, ptr %symbol.dbg.spill, align 4
    #dbg_declare(ptr %symbol.dbg.spill, !2246, !DIExpression(), !2253)
  store i32 %symbol, ptr %symbol.dbg.spill1, align 4, !dbg !2254
    #dbg_declare(ptr %symbol.dbg.spill1, !2247, !DIExpression(), !2255)
  %_6 = icmp ugt i32 %symbol, 29, !dbg !2256
  br i1 %_6, label %bb1, label %bb2, !dbg !2256

bb2:                                              ; preds = %start
  %_9 = trunc i32 %symbol to i8, !dbg !2257
  store i8 %_9, ptr %code.dbg.spill.i, align 1
    #dbg_declare(ptr %code.dbg.spill.i, !2258, !DIExpression(), !2265)
  %c.i = lshr i8 %_9, 1, !dbg !2267
  store i8 %c.i, ptr %c.dbg.spill.i, align 1, !dbg !2267
    #dbg_declare(ptr %c.dbg.spill.i, !2263, !DIExpression(), !2268)
  store i8 %c.i, ptr %self.dbg.spill.i, align 1
    #dbg_declare(ptr %self.dbg.spill.i, !2269, !DIExpression(), !2276)
  store i8 1, ptr %rhs.dbg.spill.i, align 1
    #dbg_declare(ptr %rhs.dbg.spill.i, !2275, !DIExpression(), !2278)
  %1 = call i8 @llvm.usub.sat.i8(i8 %c.i, i8 1), !dbg !2279
  store i8 %1, ptr %0, align 1, !dbg !2279
  %_0.i2 = load i8, ptr %0, align 1, !dbg !2279
  %2 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2280
  store i8 %_0.i2, ptr %2, align 4, !dbg !2280
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %_12, ptr align 2 @anon.683cac6e6aca26ea7081415a78c2386a.4, i32 60, i1 false), !dbg !2281
  %_13 = icmp ult i32 %symbol, 30, !dbg !2281
  br i1 %_13, label %bb4, label %panic, !dbg !2281

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2282
  store i8 34, ptr %3, align 1, !dbg !2282
  store i8 1, ptr %_0, align 1, !dbg !2282
  br label %bb8, !dbg !2283

bb4:                                              ; preds = %bb2
  %4 = getelementptr inbounds nuw i16, ptr %_12, i32 %symbol, !dbg !2281
  %_11 = load i16, ptr %4, align 2, !dbg !2281
  store i16 %_11, ptr %small.dbg.spill.i, align 2
    #dbg_declare(ptr %small.dbg.spill.i, !1088, !DIExpression(), !2284)
  %_0.i = zext i16 %_11 to i32, !dbg !2286
  %5 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2287
  store i32 %_0.i, ptr %5, align 4, !dbg !2287
  %6 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2288
  %_14 = load i8, ptr %6, align 4, !dbg !2288
  %7 = icmp eq i8 %_14, 0, !dbg !2288
  br i1 %7, label %bb7, label %bb6, !dbg !2288

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %symbol, i32 30, ptr align 4 @alloc_9000e0fdce7a4784ce72fddee922ed27) #12, !dbg !2281
  unreachable, !dbg !2281

bb7:                                              ; preds = %bb4
  %8 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2289
  store i8 22, ptr %8, align 1, !dbg !2289
  store i8 1, ptr %_0, align 1, !dbg !2289
  br label %bb8, !dbg !2290

bb6:                                              ; preds = %bb4
  %9 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2291
  store i8 16, ptr %9, align 1, !dbg !2291
  store i8 1, ptr %_0, align 1, !dbg !2291
  br label %bb8, !dbg !2290

bb8:                                              ; preds = %bb1, %bb6, %bb7
  %10 = load i8, ptr %_0, align 1, !dbg !2283
  %11 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !2283
  %12 = load i8, ptr %11, align 1, !dbg !2283
  %13 = insertvalue { i8, i8 } poison, i8 %10, 0, !dbg !2283
  %14 = insertvalue { i8, i8 } %13, i8 %12, 1, !dbg !2283
  ret { i8, i8 } %14, !dbg !2283
}

; miniz_oxide::inflate::core::undo_bytes
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN11miniz_oxide7inflate4core10undo_bytes17h38b70339048b5439E(ptr align 4 %l, i32 %max) unnamed_addr #0 !dbg !2292 {
start:
  %res.dbg.spill = alloca [4 x i8], align 4
  %max.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2296, !DIExpression(), !2300)
  store i32 %max, ptr %max.dbg.spill, align 4
    #dbg_declare(ptr %max.dbg.spill, !2297, !DIExpression(), !2301)
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2302
  %_4 = load i32, ptr %0, align 4, !dbg !2302
  %_3 = lshr i32 %_4, 3, !dbg !2302
; call core::cmp::min
  %res = call i32 @_ZN4core3cmp3min17hcc5e1ffd201b4355E(i32 %_3, i32 %max) #11, !dbg !2303
  store i32 %res, ptr %res.dbg.spill, align 4, !dbg !2303
    #dbg_declare(ptr %res.dbg.spill, !2298, !DIExpression(), !2304)
  %_7 = shl i32 %res, 3, !dbg !2305
  %1 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2306
  %2 = load i32, ptr %1, align 4, !dbg !2306
  %_10.0 = sub i32 %2, %_7, !dbg !2306
  %_10.1 = icmp ult i32 %2, %_7, !dbg !2306
  br i1 %_10.1, label %panic, label %bb4, !dbg !2306

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2306
  store i32 %_10.0, ptr %3, align 4, !dbg !2306
  ret i32 %res, !dbg !2307

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_2d08cbf06e87503989bd97c63411e504) #12, !dbg !2306
  unreachable, !dbg !2306
}

; miniz_oxide::inflate::core::apply_match
; Function Attrs: inlinehint nounwind
define internal void @_ZN11miniz_oxide7inflate4core11apply_match17hc6e8d69c6bc09905E(ptr align 1 %out_slice.0, i32 %out_slice.1, i32 %out_pos, i32 %dist, i32 %match_len, i32 %out_buf_size_mask) unnamed_addr #0 !dbg !2308 {
start:
  %val.dbg.spill.i = alloca [4 x i8], align 4
  %self.i = alloca [8 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [8 x i8], align 4
  %out_slice.dbg.spill3 = alloca [8 x i8], align 4
  %source_pos.dbg.spill = alloca [4 x i8], align 4
  %out_buf_size_mask.dbg.spill = alloca [4 x i8], align 4
  %match_len.dbg.spill = alloca [4 x i8], align 4
  %dist.dbg.spill = alloca [4 x i8], align 4
  %out_pos.dbg.spill = alloca [4 x i8], align 4
  %out_slice.dbg.spill = alloca [8 x i8], align 4
  %src = alloca [12 x i8], align 4
  %_16 = alloca [8 x i8], align 4
  store ptr %out_slice.0, ptr %out_slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %out_slice.dbg.spill, i32 4
  store i32 %out_slice.1, ptr %0, align 4
    #dbg_declare(ptr %out_slice.dbg.spill, !2312, !DIExpression(), !2357)
  store i32 %out_pos, ptr %out_pos.dbg.spill, align 4
    #dbg_declare(ptr %out_pos.dbg.spill, !2313, !DIExpression(), !2358)
  store i32 %dist, ptr %dist.dbg.spill, align 4
    #dbg_declare(ptr %dist.dbg.spill, !2314, !DIExpression(), !2359)
  store i32 %match_len, ptr %match_len.dbg.spill, align 4
    #dbg_declare(ptr %match_len.dbg.spill, !2315, !DIExpression(), !2360)
  store i32 %out_buf_size_mask, ptr %out_buf_size_mask.dbg.spill, align 4
    #dbg_declare(ptr %out_buf_size_mask.dbg.spill, !2316, !DIExpression(), !2361)
    #dbg_declare(ptr %src, !2323, !DIExpression(), !2362)
; call core::num::<impl usize>::checked_add
  %1 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17he5f517207b521284E"(i32 %out_pos, i32 %match_len) #11, !dbg !2363
  %_8.0 = extractvalue { i32, i32 } %1, 0, !dbg !2363
  %_8.1 = extractvalue { i32, i32 } %1, 1, !dbg !2363
  store i32 %_8.0, ptr %self.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_8.1, ptr %2, align 4
    #dbg_declare(ptr %self.i, !2364, !DIExpression(), !2384)
  %_2.i = load i32, ptr %self.i, align 4, !dbg !2386
  %3 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !2386
  %4 = load i32, ptr %3, align 4, !dbg !2386
  %5 = trunc nuw i32 %_2.i to i1, !dbg !2387
  br i1 %5, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h0d7120ddc54efc88E.exit", label %bb2.i, !dbg !2387

bb2.i:                                            ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h6d7cea830e488295E(ptr align 4 @alloc_45d8b33a5572b2ef1b2bfbca4c99c763) #12, !dbg !2388
  unreachable, !dbg !2388

"_ZN4core6option15Option$LT$T$GT$6unwrap17h0d7120ddc54efc88E.exit": ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !2389
  %val.i = load i32, ptr %6, align 4, !dbg !2389
  store i32 %val.i, ptr %val.dbg.spill.i, align 4, !dbg !2389
    #dbg_declare(ptr %val.dbg.spill.i, !2382, !DIExpression(), !2390)
  %_6 = icmp ule i32 %val.i, %out_slice.1, !dbg !2391
  br i1 %_6, label %bb4, label %bb3, !dbg !2391

bb3:                                              ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h0d7120ddc54efc88E.exit"
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_870636dd47ebad01322db68f3b95ca3e, i32 76, ptr align 4 @alloc_a184293ac2bda417769b778016878c9e) #12, !dbg !2392
  unreachable, !dbg !2392

bb4:                                              ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h0d7120ddc54efc88E.exit"
  store i32 %out_pos, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1577, !DIExpression(), !2393)
  store i32 %dist, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !1580, !DIExpression(), !2395)
  %_0.i = sub i32 %out_pos, %dist, !dbg !2396
  %source_pos = and i32 %_0.i, %out_buf_size_mask, !dbg !2397
  store i32 %source_pos, ptr %source_pos.dbg.spill, align 4, !dbg !2397
    #dbg_declare(ptr %source_pos.dbg.spill, !2317, !DIExpression(), !2398)
  %7 = icmp eq i32 %match_len, 3, !dbg !2399
  br i1 %7, label %bb6, label %bb28, !dbg !2399

bb6:                                              ; preds = %bb4
; call core::cell::Cell<T>::from_mut
  %8 = call { ptr, i32 } @"_ZN4core4cell13Cell$LT$T$GT$8from_mut17hd850cd9c5ea46d5cE"(ptr align 1 %out_slice.0, i32 %out_slice.1) #11, !dbg !2400
  %_15.0 = extractvalue { ptr, i32 } %8, 0, !dbg !2400
  %_15.1 = extractvalue { ptr, i32 } %8, 1, !dbg !2400
; call core::cell::Cell<[T]>::as_slice_of_cells
  %9 = call { ptr, i32 } @"_ZN4core4cell23Cell$LT$$u5b$T$u5d$$GT$17as_slice_of_cells17hb8da9335b0a80a2aE"(ptr align 1 %_15.0, i32 %_15.1) #11, !dbg !2401
  %out_slice.01 = extractvalue { ptr, i32 } %9, 0, !dbg !2401
  %out_slice.12 = extractvalue { ptr, i32 } %9, 1, !dbg !2401
  store ptr %out_slice.01, ptr %out_slice.dbg.spill3, align 4, !dbg !2401
  %10 = getelementptr inbounds i8, ptr %out_slice.dbg.spill3, i32 4, !dbg !2401
  store i32 %out_slice.12, ptr %10, align 4, !dbg !2401
    #dbg_declare(ptr %out_slice.dbg.spill3, !2319, !DIExpression(), !2402)
  %_19.0 = add i32 %out_pos, 3, !dbg !2403
  %_19.1 = icmp ult i32 %_19.0, %out_pos, !dbg !2403
  br i1 %_19.1, label %panic, label %bb9, !dbg !2403

bb28:                                             ; preds = %bb4
; call miniz_oxide::inflate::core::transfer
  call void @_ZN11miniz_oxide7inflate4core8transfer17h1bd7e969a6e5edcdE(ptr align 1 %out_slice.0, i32 %out_slice.1, i32 %source_pos, i32 %out_pos, i32 %match_len, i32 %out_buf_size_mask) #11, !dbg !2404
  br label %bb29, !dbg !2404

bb9:                                              ; preds = %bb6
; call core::slice::<impl [T]>::get
  %11 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2be727552b9c5ca4E"(ptr align 1 %out_slice.01, i32 %out_slice.12, i32 %out_pos, i32 %_19.0) #11, !dbg !2405
  %12 = extractvalue { ptr, i32 } %11, 0, !dbg !2405
  %13 = extractvalue { ptr, i32 } %11, 1, !dbg !2405
  store ptr %12, ptr %_16, align 4, !dbg !2405
  %14 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !2405
  store i32 %13, ptr %14, align 4, !dbg !2405
  %15 = load ptr, ptr %_16, align 4, !dbg !2406
  %16 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !2406
  %17 = load i32, ptr %16, align 4, !dbg !2406
  %18 = ptrtoint ptr %15 to i32, !dbg !2406
  %19 = icmp eq i32 %18, 0, !dbg !2406
  %_20 = select i1 %19, i32 0, i32 1, !dbg !2406
  %20 = trunc nuw i32 %_20 to i1, !dbg !2407
  br i1 %20, label %bb11, label %bb29, !dbg !2407

panic:                                            ; preds = %bb6
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_b3dec16b118ed5af4cf292c68a916406) #12, !dbg !2403
  unreachable, !dbg !2403

bb11:                                             ; preds = %bb9
  %dst.0 = load ptr, ptr %_16, align 4, !dbg !2408
  %21 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !2408
  %dst.1 = load i32, ptr %21, align 4, !dbg !2408
  store ptr %dst.0, ptr %dst.dbg.spill, align 4, !dbg !2408
  %22 = getelementptr inbounds i8, ptr %dst.dbg.spill, i32 4, !dbg !2408
  store i32 %dst.1, ptr %22, align 4, !dbg !2408
    #dbg_declare(ptr %dst.dbg.spill, !2321, !DIExpression(), !2408)
; call core::slice::<impl [T]>::get
  %_24 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdca6b847bba43042E"(ptr align 1 %out_slice.01, i32 %out_slice.12, i32 %source_pos) #11, !dbg !2409
  %_28.0 = add i32 %source_pos, 1, !dbg !2410
  %_28.1 = icmp ult i32 %_28.0, %source_pos, !dbg !2410
  br i1 %_28.1, label %panic4, label %bb13, !dbg !2410

bb29:                                             ; preds = %bb28, %bb26, %bb16, %bb9
  ret void, !dbg !2411

bb13:                                             ; preds = %bb11
  %_26 = and i32 %_28.0, %out_buf_size_mask, !dbg !2410
; call core::slice::<impl [T]>::get
  %_25 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdca6b847bba43042E"(ptr align 1 %out_slice.01, i32 %out_slice.12, i32 %_26) #11, !dbg !2412
; call core::option::Option<T>::zip
  %23 = call { ptr, ptr } @"_ZN4core6option15Option$LT$T$GT$3zip17hd242cc20efa49b6bE"(ptr align 1 %_24, ptr align 1 %_25) #11, !dbg !2413
  %_23.0 = extractvalue { ptr, ptr } %23, 0, !dbg !2413
  %_23.1 = extractvalue { ptr, ptr } %23, 1, !dbg !2413
  %_32.0 = add i32 %source_pos, 2, !dbg !2414
  %_32.1 = icmp ult i32 %_32.0, %source_pos, !dbg !2414
  br i1 %_32.1, label %panic5, label %bb16, !dbg !2414

panic4:                                           ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_8c3b7711ce0dbbdfa574c5afedd512b6) #12, !dbg !2410
  unreachable, !dbg !2410

bb16:                                             ; preds = %bb13
  %_30 = and i32 %_32.0, %out_buf_size_mask, !dbg !2414
; call core::slice::<impl [T]>::get
  %_29 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdca6b847bba43042E"(ptr align 1 %out_slice.01, i32 %out_slice.12, i32 %_30) #11, !dbg !2415
; call core::option::Option<T>::zip
  call void @"_ZN4core6option15Option$LT$T$GT$3zip17hbdd62ad57f198f0cE"(ptr sret([12 x i8]) align 4 %src, ptr align 1 %_23.0, ptr %_23.1, ptr align 1 %_29) #11, !dbg !2416
  %24 = load ptr, ptr %src, align 4, !dbg !2417
  %25 = ptrtoint ptr %24 to i32, !dbg !2417
  %26 = icmp eq i32 %25, 0, !dbg !2417
  %_33 = select i1 %26, i32 0, i32 1, !dbg !2417
  %27 = trunc nuw i32 %_33 to i1, !dbg !2418
  br i1 %27, label %bb19, label %bb29, !dbg !2418

panic5:                                           ; preds = %bb13
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_514e8c647772ae7ae0db15db7f500e32) #12, !dbg !2414
  unreachable, !dbg !2414

bb19:                                             ; preds = %bb16
  %a = load ptr, ptr %src, align 4, !dbg !2419
  store ptr %a, ptr %a.dbg.spill, align 4, !dbg !2419
    #dbg_declare(ptr %a.dbg.spill, !2347, !DIExpression(), !2419)
  %28 = getelementptr inbounds i8, ptr %src, i32 4, !dbg !2420
  %b = load ptr, ptr %28, align 4, !dbg !2420
  store ptr %b, ptr %b.dbg.spill, align 4, !dbg !2420
    #dbg_declare(ptr %b.dbg.spill, !2349, !DIExpression(), !2420)
  %29 = getelementptr inbounds i8, ptr %src, i32 8, !dbg !2421
  %c = load ptr, ptr %29, align 4, !dbg !2421
  store ptr %c, ptr %c.dbg.spill, align 4, !dbg !2421
    #dbg_declare(ptr %c.dbg.spill, !2350, !DIExpression(), !2421)
  %_41 = icmp ult i32 0, %dst.1, !dbg !2422
  br i1 %_41, label %bb20, label %panic6, !dbg !2422

bb20:                                             ; preds = %bb19
  %_38 = getelementptr inbounds nuw i8, ptr %dst.0, i32 0, !dbg !2422
; call core::cell::Cell<T>::get
  %_42 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h1723e469f761e381E"(ptr align 1 %a) #11, !dbg !2423
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17hb929e55d2375c181E"(ptr align 1 %_38, i8 %_42) #11, !dbg !2424
  %_47 = icmp ult i32 1, %dst.1, !dbg !2425
  br i1 %_47, label %bb23, label %panic7, !dbg !2425

panic6:                                           ; preds = %bb19
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 0, i32 %dst.1, ptr align 4 @alloc_4aaee31ff10ac9f5fe90ab5f88ef0b2f) #12, !dbg !2422
  unreachable, !dbg !2422

bb23:                                             ; preds = %bb20
  %_44 = getelementptr inbounds nuw i8, ptr %dst.0, i32 1, !dbg !2425
; call core::cell::Cell<T>::get
  %_48 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h1723e469f761e381E"(ptr align 1 %b) #11, !dbg !2426
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17hb929e55d2375c181E"(ptr align 1 %_44, i8 %_48) #11, !dbg !2427
  %_53 = icmp ult i32 2, %dst.1, !dbg !2428
  br i1 %_53, label %bb26, label %panic8, !dbg !2428

panic7:                                           ; preds = %bb20
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 1, i32 %dst.1, ptr align 4 @alloc_49d2abcedf29c361e4c497e339a0d13b) #12, !dbg !2425
  unreachable, !dbg !2425

bb26:                                             ; preds = %bb23
  %_50 = getelementptr inbounds nuw i8, ptr %dst.0, i32 2, !dbg !2428
; call core::cell::Cell<T>::get
  %_54 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h1723e469f761e381E"(ptr align 1 %c) #11, !dbg !2429
; call core::cell::Cell<T>::set
  call void @"_ZN4core4cell13Cell$LT$T$GT$3set17hb929e55d2375c181E"(ptr align 1 %_50, i8 %_54) #11, !dbg !2430
  br label %bb29, !dbg !2430

panic8:                                           ; preds = %bb23
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 2, i32 %dst.1, ptr align 4 @alloc_c25a6d2209d4297d7e5078000732e366) #12, !dbg !2428
  unreachable, !dbg !2428

bb30:                                             ; No predecessors!
  unreachable, !dbg !2431
}

; miniz_oxide::inflate::core::read_u16_le
; Function Attrs: inlinehint nounwind
define internal i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %iter) unnamed_addr #0 !dbg !2432 {
start:
  %index.dbg.spill.i5 = alloca [4 x i8], align 4
  %self.dbg.spill.i6 = alloca [8 x i8], align 4
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i2 = alloca [8 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %steps.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ret.dbg.spill = alloca [2 x i8], align 2
  %0 = alloca [2 x i8], align 2
  %1 = alloca [2 x i8], align 1
  %2 = alloca [2 x i8], align 2
  %3 = alloca [4 x i8], align 4
  %4 = alloca [4 x i8], align 4
  %iter.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [3 x i8], align 1
  %two_bytes = alloca [2 x i8], align 1
  store ptr %iter, ptr %iter.dbg.spill, align 4
    #dbg_declare(ptr %iter.dbg.spill, !2436, !DIExpression(), !2444)
    #dbg_declare(ptr %two_bytes, !2439, !DIExpression(), !2445)
  store ptr %iter, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !1253, !DIExpression(), !2446)
  %_0.0.i = load ptr, ptr %iter, align 4, !dbg !2448
  %5 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !2448
  %_0.1.i = load i32, ptr %5, align 4, !dbg !2448
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0.i, 0, !dbg !2449
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1.i, 1, !dbg !2449
  %_5.0 = extractvalue { ptr, i32 } %7, 0, !dbg !2450
  %_5.1 = extractvalue { ptr, i32 } %7, 1, !dbg !2450
  store ptr %_5.0, ptr %self.dbg.spill.i2, align 4
  %8 = getelementptr inbounds i8, ptr %self.dbg.spill.i2, i32 4
  store i32 %_5.1, ptr %8, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !1264, !DIExpression(), !2451)
  store i32 2, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !1272, !DIExpression(), !2453)
  store i32 2, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !1278, !DIExpression(), !2454)
  store ptr %_5.0, ptr %slice.dbg.spill.i.i, align 4
  %9 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 %_5.1, ptr %9, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !1284, !DIExpression(), !2456)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %10 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 2, ptr %10, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !1288, !DIExpression(), !2457)
  store ptr %_5.0, ptr %slice.dbg.spill.i.i.i, align 4
  %11 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 %_5.1, ptr %11, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !1293, !DIExpression(), !2459)
; call core::num::<impl usize>::checked_sub
  %12 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 2, i32 0) #11, !dbg !2460
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !2460
  %14 = extractvalue { i32, i32 } %12, 1, !dbg !2460
  store i32 %13, ptr %_3.i.i.i, align 4, !dbg !2460
  %15 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !2460
  store i32 %14, ptr %15, align 4, !dbg !2460
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !2460
  %16 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !2460
  %17 = load i32, ptr %16, align 4, !dbg !2460
  %18 = trunc nuw i32 %_6.i.i.i to i1, !dbg !2461
  br i1 %18, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !2461

bb2.i.i.i:                                        ; preds = %start
  %19 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !2462
  %new_len.i.i.i = load i32, ptr %19, align 4, !dbg !2462
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !2462
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !1294, !DIExpression(), !2462)
  %_8.i.i.i = icmp ule i32 2, %_5.1, !dbg !2463
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit", label %bb5.i.i.i, !dbg !2463

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %start
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 0, i32 2, i32 %_5.1, ptr align 4 @alloc_8083b8f66c361bfcc7ce0c2ced6783d9) #12, !dbg !2464
  unreachable, !dbg !2464

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit": ; preds = %bb2.i.i.i
  store ptr %_5.0, ptr %ptr.dbg.spill.i.i, align 4
  %20 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 %_5.1, ptr %20, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1303, !DIExpression(), !2465)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !1312, !DIExpression(), !2467)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !1313, !DIExpression(), !2468)
  store ptr %_5.0, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !2469
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1314, !DIExpression(), !2470)
  store ptr %_5.0, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !2471
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !1317, !DIExpression(), !2472)
  %21 = insertvalue { ptr, i32 } %7, i32 %new_len.i.i.i, 1, !dbg !2473
  %22 = insertvalue { ptr, i32 } poison, ptr %_0.0.i, 0, !dbg !2474
  %23 = insertvalue { ptr, i32 } %22, i32 %new_len.i.i.i, 1, !dbg !2474
  %_4.0 = extractvalue { ptr, i32 } %23, 0, !dbg !2475
  %_4.1 = extractvalue { ptr, i32 } %23, 1, !dbg !2475
; call <T as core::convert::TryInto<U>>::try_into
  %24 = call i24 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h40a936c5f379619dE"(ptr align 1 %_4.0, i32 %_4.1) #11, !dbg !2476
  store i24 %24, ptr %4, align 4, !dbg !2476
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_3, ptr align 4 %4, i32 3, i1 false), !dbg !2476
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %3, ptr align 1 %_3, i32 3, i1 false), !dbg !2477
  %25 = load i24, ptr %3, align 4, !dbg !2477
; call core::result::Result<T,E>::unwrap_or_default
  %26 = call i16 @"_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17ha7872ef8f65c955dE"(i24 %25) #11, !dbg !2478
  store i16 %26, ptr %2, align 2, !dbg !2478
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %two_bytes, ptr align 2 %2, i32 2, i1 false), !dbg !2478
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %1, ptr align 1 %two_bytes, i32 2, i1 false), !dbg !2479
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %0, ptr align 1 %1, i32 2, i1 false), !dbg !2479
  %27 = load i16, ptr %0, align 2, !dbg !2479
; call core::num::<impl u16>::from_le_bytes
  %ret = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17hdea4d26633621f0cE"(i16 %27) #11, !dbg !2479
  store i16 %ret, ptr %ret.dbg.spill, align 2, !dbg !2479
    #dbg_declare(ptr %ret.dbg.spill, !2437, !DIExpression(), !2480)
  store ptr %iter, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !623, !DIExpression(), !2481)
  store i32 2, ptr %steps.dbg.spill.i, align 4
    #dbg_declare(ptr %steps.dbg.spill.i, !629, !DIExpression(), !2483)
  %_5.0.i = load ptr, ptr %iter, align 4, !dbg !2484
  %28 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !2484
  %_5.1.i = load i32, ptr %28, align 4, !dbg !2484
  store ptr %_5.0.i, ptr %self.dbg.spill.i6, align 4
  %29 = getelementptr inbounds i8, ptr %self.dbg.spill.i6, i32 4
  store i32 %_5.1.i, ptr %29, align 4
    #dbg_declare(ptr %self.dbg.spill.i6, !634, !DIExpression(), !2485)
  store i32 2, ptr %index.dbg.spill.i5, align 4
    #dbg_declare(ptr %index.dbg.spill.i5, !640, !DIExpression(), !2487)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %30 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32 2, ptr align 1 %_5.0.i, i32 %_5.1.i, ptr align 4 @alloc_60cf8681016101c24a80f577d300663f) #11, !dbg !2488
  %_0.0.i7 = extractvalue { ptr, i32 } %30, 0, !dbg !2488
  %_0.1.i8 = extractvalue { ptr, i32 } %30, 1, !dbg !2488
  %_3.0.i = extractvalue { ptr, i32 } %30, 0, !dbg !2489
  %_3.1.i = extractvalue { ptr, i32 } %30, 1, !dbg !2489
  store ptr %_3.0.i, ptr %iter, align 4, !dbg !2490
  %31 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !2490
  store i32 %_3.1.i, ptr %31, align 4, !dbg !2490
  ret i16 %ret, !dbg !2491
}

; miniz_oxide::inflate::core::HuffmanTable::fast_lookup
; Function Attrs: inlinehint nounwind
define internal i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %self, i32 %bit_buf) unnamed_addr #0 !dbg !2492 {
start:
  %small.dbg.spill.i = alloca [2 x i8], align 2
  %bit_buf.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2498, !DIExpression(), !2500)
  store i32 %bit_buf, ptr %bit_buf.dbg.spill, align 4
    #dbg_declare(ptr %bit_buf.dbg.spill, !2499, !DIExpression(), !2501)
  store i16 1023, ptr %small.dbg.spill.i, align 2
    #dbg_declare(ptr %small.dbg.spill.i, !1088, !DIExpression(), !2502)
  %_4 = and i32 %bit_buf, 1023, !dbg !2504
  %_8 = icmp ult i32 %_4, 1024, !dbg !2505
  br i1 %_8, label %bb3, label %panic, !dbg !2505

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds nuw i16, ptr %self, i32 %_4, !dbg !2505
  %_0 = load i16, ptr %0, align 2, !dbg !2505
  ret i16 %_0, !dbg !2506

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_4, i32 1024, ptr align 4 @alloc_dab597ca49fb41b4cba830829b007d36) #12, !dbg !2505
  unreachable, !dbg !2505
}

; miniz_oxide::inflate::core::HuffmanTable::tree_lookup
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable11tree_lookup17he82124e89c020007E(ptr align 2 %self, i32 %fast_symbol, i32 %bit_buf, i8 %0) unnamed_addr #0 !dbg !2507 {
start:
  %small.dbg.spill.i3 = alloca [2 x i8], align 2
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %tree_index.dbg.spill = alloca [4 x i8], align 4
  %bit_buf.dbg.spill = alloca [4 x i8], align 4
  %fast_symbol.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %symbol = alloca [4 x i8], align 4
  %code_len = alloca [1 x i8], align 1
  store i8 %0, ptr %code_len, align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2516, !DIExpression(), !2524)
  store i32 %fast_symbol, ptr %fast_symbol.dbg.spill, align 4
    #dbg_declare(ptr %fast_symbol.dbg.spill, !2517, !DIExpression(), !2525)
  store i32 %bit_buf, ptr %bit_buf.dbg.spill, align 4
    #dbg_declare(ptr %bit_buf.dbg.spill, !2518, !DIExpression(), !2526)
    #dbg_declare(ptr %code_len, !2519, !DIExpression(), !2527)
    #dbg_declare(ptr %symbol, !2520, !DIExpression(), !2528)
  store i32 %fast_symbol, ptr %symbol, align 4, !dbg !2529
  br label %bb1, !dbg !2530

bb1:                                              ; preds = %bb10, %start
  %_9 = load i32, ptr %symbol, align 4, !dbg !2531
  %_8 = xor i32 %_9, -1, !dbg !2532
  %_13 = load i8, ptr %code_len, align 1, !dbg !2533
  %_14 = icmp ult i8 %_13, 32, !dbg !2534
  br i1 %_14, label %bb2, label %panic, !dbg !2534

bb2:                                              ; preds = %bb1
  %1 = and i8 %_13, 31, !dbg !2534
  %2 = zext i8 %1 to i32, !dbg !2534
  %_12 = lshr i32 %bit_buf, %2, !dbg !2534
  %_11 = and i32 %_12, 1, !dbg !2535
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_8, i32 %_11), !dbg !2536
  %_15.0 = extractvalue { i32, i1 } %3, 0, !dbg !2536
  %_15.1 = extractvalue { i32, i1 } %3, 1, !dbg !2536
  br i1 %_15.1, label %panic1, label %bb3, !dbg !2536

panic:                                            ; preds = %bb1
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_c17ef81ba1b9878a690103e466e4385c) #12, !dbg !2534
  unreachable, !dbg !2534

bb3:                                              ; preds = %bb2
  store i32 %_15.0, ptr %tree_index.dbg.spill, align 4, !dbg !2536
    #dbg_declare(ptr %tree_index.dbg.spill, !2522, !DIExpression(), !2537)
  %_19 = getelementptr inbounds i8, ptr %self, i32 2048, !dbg !2538
  %_16 = icmp ult i32 %_15.0, 576, !dbg !2539
  br i1 %_16, label %bb5, label %bb4, !dbg !2539

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_eb699e37a8e61fbb4e3fb56d93ae014e) #12, !dbg !2536
  unreachable, !dbg !2536

bb4:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_06f754d058684aba70ac658d70657198, i32 46, ptr align 4 @alloc_d2ec30714a7ffbb855ab3797808ad40c) #12, !dbg !2540
  unreachable, !dbg !2540

bb5:                                              ; preds = %bb3
  %_26 = getelementptr inbounds i8, ptr %self, i32 2048, !dbg !2541
; call core::slice::<impl [T]>::get
  %_24 = call align 2 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb9a53d14c5232e3dE"(ptr align 2 %_26, i32 576, i32 %_15.0) #11, !dbg !2542
; call core::option::Option<&T>::copied
  %4 = call { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h1f2b2e3319bf76e1E"(ptr align 2 %_24) #11, !dbg !2543
  %_23.0 = extractvalue { i16, i16 } %4, 0, !dbg !2543
  %_23.1 = extractvalue { i16, i16 } %4, 1, !dbg !2543
; call core::option::Option<T>::unwrap_or
  %_22 = call i16 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h2aa2dcb795353ac3E"(i16 %_23.0, i16 %_23.1, i16 32767) #11, !dbg !2544
  store i16 %_22, ptr %small.dbg.spill.i3, align 2
    #dbg_declare(ptr %small.dbg.spill.i3, !2545, !DIExpression(), !2551)
  %_0.i4 = sext i16 %_22 to i32, !dbg !2553
  store i32 %_0.i4, ptr %symbol, align 4, !dbg !2554
  %5 = load i8, ptr %code_len, align 1, !dbg !2555
  %_27.0 = add i8 %5, 1, !dbg !2555
  %_27.1 = icmp ult i8 %_27.0, %5, !dbg !2555
  br i1 %_27.1, label %panic2, label %bb10, !dbg !2555

bb10:                                             ; preds = %bb5
  store i8 %_27.0, ptr %code_len, align 1, !dbg !2555
  %_29 = load i32, ptr %symbol, align 4, !dbg !2556
  %_28 = icmp sge i32 %_29, 0, !dbg !2556
  br i1 %_28, label %bb11, label %bb1, !dbg !2556

panic2:                                           ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_dab99ae63ef122c8a27f0e18b4f190d2) #12, !dbg !2555
  unreachable, !dbg !2555

bb11:                                             ; preds = %bb10
  %_30 = load i32, ptr %symbol, align 4, !dbg !2557
  %_32 = load i8, ptr %code_len, align 1, !dbg !2558
  store i8 %_32, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !2559)
  %_0.i = zext i8 %_32 to i32, !dbg !2561
  %6 = insertvalue { i32, i32 } poison, i32 %_30, 0, !dbg !2562
  %7 = insertvalue { i32, i32 } %6, i32 %_0.i, 1, !dbg !2562
  ret { i32, i32 } %7, !dbg !2562
}

; miniz_oxide::inflate::core::HuffmanTable::new
; Function Attrs: nounwind
define dso_local void @_ZN11miniz_oxide7inflate4core12HuffmanTable3new17hc7a28ef46ef9e94dE(ptr sret([3200 x i8]) align 2 %_0) unnamed_addr #1 !dbg !2563 {
start:
  %_2 = alloca [1152 x i8], align 2
  %_1 = alloca [2048 x i8], align 2
  call void @llvm.memset.p0.i32(ptr align 2 %_1, i8 0, i32 2048, i1 false), !dbg !2567
  call void @llvm.memset.p0.i32(ptr align 2 %_2, i8 0, i32 1152, i1 false), !dbg !2568
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %_0, ptr align 2 %_1, i32 2048, i1 false), !dbg !2569
  %0 = getelementptr inbounds i8, ptr %_0, i32 2048, !dbg !2569
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %0, ptr align 2 %_2, i32 1152, i1 false), !dbg !2569
  ret void, !dbg !2570
}

; miniz_oxide::inflate::core::HuffmanTable::lookup
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE(ptr align 2 %self, i32 %bit_buf) unnamed_addr #0 !dbg !2571 {
start:
  %length.dbg.spill = alloca [4 x i8], align 4
  %symbol.dbg.spill = alloca [4 x i8], align 4
  %bit_buf.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2576, !DIExpression(), !2582)
  store i32 %bit_buf, ptr %bit_buf.dbg.spill, align 4
    #dbg_declare(ptr %bit_buf.dbg.spill, !2577, !DIExpression(), !2583)
; call miniz_oxide::inflate::core::HuffmanTable::fast_lookup
  %_4 = call i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %self, i32 %bit_buf) #11, !dbg !2584
; call <T as core::convert::Into<U>>::into
  %symbol = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf90f24832a995a49E"(i16 %_4, ptr align 4 @alloc_9032127bfffe5394a50ae2dbe3fccdf9) #11, !dbg !2585
  store i32 %symbol, ptr %symbol.dbg.spill, align 4, !dbg !2585
    #dbg_declare(ptr %symbol.dbg.spill, !2578, !DIExpression(), !2586)
  %_5 = icmp sge i32 %symbol, 0, !dbg !2587
  br i1 %_5, label %bb3, label %bb5, !dbg !2587

bb5:                                              ; preds = %start
; call miniz_oxide::inflate::core::HuffmanTable::tree_lookup
  %0 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable11tree_lookup17he82124e89c020007E(ptr align 2 %self, i32 %symbol, i32 %bit_buf, i8 10) #11, !dbg !2588
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !2588
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !2588
  store i32 %1, ptr %_0, align 4, !dbg !2588
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2588
  store i32 %2, ptr %3, align 4, !dbg !2588
  br label %bb6, !dbg !2588

bb3:                                              ; preds = %start
  %_7 = ashr i32 %symbol, 9, !dbg !2589
  store i32 %_7, ptr %length.dbg.spill, align 4, !dbg !2589
    #dbg_declare(ptr %length.dbg.spill, !2580, !DIExpression(), !2590)
  store i32 %symbol, ptr %_0, align 4, !dbg !2591
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2591
  store i32 %_7, ptr %4, align 4, !dbg !2591
  br label %bb6, !dbg !2592

bb6:                                              ; preds = %bb3, %bb5
  %5 = load i32, ptr %_0, align 4, !dbg !2593
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2593
  %7 = load i32, ptr %6, align 4, !dbg !2593
  %8 = insertvalue { i32, i32 } poison, i32 %5, 0, !dbg !2593
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1, !dbg !2593
  ret { i32, i32 } %9, !dbg !2593
}

; miniz_oxide::inflate::core::end_of_input
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) unnamed_addr #0 !dbg !2594 {
start:
  %flags.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [1 x i8], align 1
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !2598, !DIExpression(), !2599)
  %_3 = and i32 %flags, 2, !dbg !2600
  %0 = icmp eq i32 %_3, 0, !dbg !2600
  br i1 %0, label %bb2, label %bb1, !dbg !2600

bb2:                                              ; preds = %start
  store i8 -4, ptr %_2, align 1, !dbg !2601
  br label %bb3, !dbg !2602

bb1:                                              ; preds = %start
  store i8 1, ptr %_2, align 1, !dbg !2603
  br label %bb3, !dbg !2602

bb3:                                              ; preds = %bb1, %bb2
  %_0.1 = load i8, ptr %_2, align 1, !dbg !2604
  %1 = insertvalue { i8, i8 } { i8 2, i8 poison }, i8 %_0.1, 1, !dbg !2605
  ret { i8, i8 } %1, !dbg !2605
}

; miniz_oxide::inflate::core::pad_to_bytes
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core12pad_to_bytes17h0584dcd0c0b46f8fE(ptr align 4 %l, ptr align 4 %in_iter, i32 %flags) unnamed_addr #0 !dbg !2606 {
start:
  %num_bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2610, !DIExpression(), !2618)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !2611, !DIExpression(), !2619)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !2612, !DIExpression(), !2620)
    #dbg_declare(ptr %f.dbg.spill, !2613, !DIExpression(), !2621)
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2622
  %_6 = load i32, ptr %0, align 4, !dbg !2622
  %num_bits = and i32 %_6, 7, !dbg !2622
  store i32 %num_bits, ptr %num_bits.dbg.spill, align 4, !dbg !2622
    #dbg_declare(ptr %num_bits.dbg.spill, !2614, !DIExpression(), !2623)
; call miniz_oxide::inflate::core::read_bits
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hc0ca427319091c08E(ptr align 4 %l, i32 %num_bits, ptr align 4 %in_iter, i32 %flags) #11, !dbg !2624
  %_0.0 = extractvalue { i8, i8 } %1, 0, !dbg !2624
  %_0.1 = extractvalue { i8, i8 } %1, 1, !dbg !2624
  %2 = insertvalue { i8, i8 } poison, i8 %_0.0, 0, !dbg !2625
  %3 = insertvalue { i8, i8 } %2, i8 %_0.1, 1, !dbg !2625
  ret { i8, i8 } %3, !dbg !2625
}

; miniz_oxide::inflate::core::pad_to_bytes
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core12pad_to_bytes17hdb3a192994c0f1d1E(ptr align 4 %l, ptr align 4 %in_iter, i32 %flags) unnamed_addr #0 !dbg !2626 {
start:
  %num_bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2630, !DIExpression(), !2638)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !2631, !DIExpression(), !2639)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !2632, !DIExpression(), !2640)
    #dbg_declare(ptr %f.dbg.spill, !2633, !DIExpression(), !2641)
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2642
  %_6 = load i32, ptr %0, align 4, !dbg !2642
  %num_bits = and i32 %_6, 7, !dbg !2642
  store i32 %num_bits, ptr %num_bits.dbg.spill, align 4, !dbg !2642
    #dbg_declare(ptr %num_bits.dbg.spill, !2634, !DIExpression(), !2643)
; call miniz_oxide::inflate::core::read_bits
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h88437ac8f8dc885dE(ptr align 4 %l, i32 %num_bits, ptr align 4 %in_iter, i32 %flags) #11, !dbg !2644
  %_0.0 = extractvalue { i8, i8 } %1, 0, !dbg !2644
  %_0.1 = extractvalue { i8, i8 } %1, 1, !dbg !2644
  %2 = insertvalue { i8, i8 } poison, i8 %_0.0, 0, !dbg !2645
  %3 = insertvalue { i8, i8 } %2, i8 %_0.1, 1, !dbg !2645
  ret { i8, i8 } %3, !dbg !2645
}

; miniz_oxide::inflate::core::pad_to_bytes::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core12pad_to_bytes28_$u7b$$u7b$closure$u7d$$u7d$17h2e691ca5772ee0efE"(ptr align 4 %l, i32 %_3) unnamed_addr #0 !dbg !2646 {
start:
  %_3.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2655, !DIExpression(), !2657)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2654, !DIExpression(), !2658)
  store i32 %_3, ptr %_3.dbg.spill, align 4
    #dbg_declare(ptr %_3.dbg.spill, !2656, !DIExpression(), !2659)
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %0 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h54c014788c83db30E"(ptr align 4 %l) #11, !dbg !2660
  %_0.0 = extractvalue { i8, i8 } %0, 0, !dbg !2660
  %_0.1 = extractvalue { i8, i8 } %0, 1, !dbg !2660
  %1 = insertvalue { i8, i8 } poison, i8 %_0.0, 0, !dbg !2661
  %2 = insertvalue { i8, i8 } %1, i8 %_0.1, 1, !dbg !2661
  ret { i8, i8 } %2, !dbg !2661
}

; miniz_oxide::inflate::core::pad_to_bytes::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core12pad_to_bytes28_$u7b$$u7b$closure$u7d$$u7d$17h86203c64ed86a615E"(ptr align 4 %l, i32 %_3) unnamed_addr #0 !dbg !2662 {
start:
  %_3.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2670, !DIExpression(), !2672)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !2669, !DIExpression(), !2673)
  store i32 %_3, ptr %_3.dbg.spill, align 4
    #dbg_declare(ptr %_3.dbg.spill, !2671, !DIExpression(), !2674)
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %0 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17habebda03c230bb3cE"(ptr align 4 %l) #11, !dbg !2675
  %_0.0 = extractvalue { i8, i8 } %0, 0, !dbg !2675
  %_0.1 = extractvalue { i8, i8 } %0, 1, !dbg !2675
  %1 = insertvalue { i8, i8 } poison, i8 %_0.0, 0, !dbg !2676
  %2 = insertvalue { i8, i8 } %1, i8 %_0.1, 1, !dbg !2676
  ret { i8, i8 } %2, !dbg !2676
}

; miniz_oxide::inflate::core::reverse_bits
; Function Attrs: inlinehint nounwind
define internal i16 @_ZN11miniz_oxide7inflate4core12reverse_bits17hfe29b955f271108dE(i16 %n) unnamed_addr #0 !dbg !2677 {
start:
  %0 = alloca [2 x i8], align 2
  %self.dbg.spill.i = alloca [2 x i8], align 2
  %n.dbg.spill = alloca [2 x i8], align 2
  store i16 %n, ptr %n.dbg.spill, align 2
    #dbg_declare(ptr %n.dbg.spill, !2681, !DIExpression(), !2682)
  store i16 %n, ptr %self.dbg.spill.i, align 2
    #dbg_declare(ptr %self.dbg.spill.i, !2683, !DIExpression(), !2687)
  %1 = call i16 @llvm.bitreverse.i16(i16 %n), !dbg !2689
  store i16 %1, ptr %0, align 2, !dbg !2689
  %_0.i = load i16, ptr %0, align 2, !dbg !2689
  ret i16 %_0.i, !dbg !2690
}

; miniz_oxide::inflate::core::decompress_fast
; Function Attrs: nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core15decompress_fast17h494e1c72c5e204c5E(ptr align 4 %r, ptr align 4 %in_iter, ptr align 4 %out_buf, i32 %flags, ptr align 4 %local_vars, i32 %out_buf_size_mask) unnamed_addr #1 !dbg !2691 {
start:
  %small.dbg.spill.i121 = alloca [2 x i8], align 2
  %small.dbg.spill.i119 = alloca [2 x i8], align 2
  %small.dbg.spill.i117 = alloca [2 x i8], align 2
  %small.dbg.spill.i115 = alloca [2 x i8], align 2
  %small.dbg.spill.i113 = alloca [2 x i8], align 2
  %small.dbg.spill.i111 = alloca [2 x i8], align 2
  %small.dbg.spill.i109 = alloca [2 x i8], align 2
  %small.dbg.spill.i107 = alloca [1 x i8], align 1
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %0 = alloca [1 x i8], align 1
  %rhs.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i104 = alloca [1 x i8], align 1
  %c.dbg.spill.i = alloca [1 x i8], align 1
  %code.dbg.spill.i = alloca [1 x i8], align 1
  %in_iter.dbg.spill.i86 = alloca [4 x i8], align 4
  %l.dbg.spill.i87 = alloca [4 x i8], align 4
  %in_iter.dbg.spill.i69 = alloca [4 x i8], align 4
  %l.dbg.spill.i70 = alloca [4 x i8], align 4
  %in_iter.dbg.spill.i52 = alloca [4 x i8], align 4
  %l.dbg.spill.i53 = alloca [4 x i8], align 4
  %in_iter.dbg.spill.i35 = alloca [4 x i8], align 4
  %l.dbg.spill.i36 = alloca [4 x i8], align 4
  %in_iter.dbg.spill.i = alloca [4 x i8], align 4
  %l.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i33 = alloca [4 x i8], align 4
  %self.dbg.spill.i32 = alloca [4 x i8], align 4
  %self.dbg.spill.i29 = alloca [4 x i8], align 4
  %self.dbg.spill.i28 = alloca [4 x i8], align 4
  %position.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i27 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %position.dbg.spill = alloca [4 x i8], align 4
  %extra_bits.dbg.spill22 = alloca [4 x i8], align 4
  %code_len.dbg.spill15 = alloca [4 x i8], align 4
  %extra_bits.dbg.spill = alloca [4 x i8], align 4
  %code_len.dbg.spill3 = alloca [4 x i8], align 4
  %symbol.dbg.spill2 = alloca [4 x i8], align 4
  %code_len.dbg.spill = alloca [4 x i8], align 4
  %symbol.dbg.spill = alloca [4 x i8], align 4
  %out_buf_size_mask.dbg.spill = alloca [4 x i8], align 4
  %local_vars.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %out_buf.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %r.dbg.spill = alloca [4 x i8], align 4
  %_159 = alloca [20 x i8], align 4
  %_111 = alloca [60 x i8], align 2
  %symbol = alloca [4 x i8], align 4
  %_67 = alloca [64 x i8], align 2
  %_58 = alloca [32 x i8], align 1
  %status = alloca [1 x i8], align 1
  %state = alloca [1 x i8], align 1
  %l = alloca [20 x i8], align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !2699, !DIExpression(), !2726)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !2700, !DIExpression(), !2727)
  store ptr %out_buf, ptr %out_buf.dbg.spill, align 4
    #dbg_declare(ptr %out_buf.dbg.spill, !2701, !DIExpression(), !2728)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !2702, !DIExpression(), !2729)
  store ptr %local_vars, ptr %local_vars.dbg.spill, align 4
    #dbg_declare(ptr %local_vars.dbg.spill, !2703, !DIExpression(), !2730)
  store i32 %out_buf_size_mask, ptr %out_buf_size_mask.dbg.spill, align 4
    #dbg_declare(ptr %out_buf_size_mask.dbg.spill, !2704, !DIExpression(), !2731)
    #dbg_declare(ptr %l, !2705, !DIExpression(), !2732)
    #dbg_declare(ptr %state, !2707, !DIExpression(), !2733)
    #dbg_declare(ptr %status, !2709, !DIExpression(), !2734)
    #dbg_declare(ptr %symbol, !2719, !DIExpression(), !2735)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %l, ptr align 4 %local_vars, i32 20, i1 false), !dbg !2736
  br label %bb1, !dbg !2737

bb1:                                              ; preds = %bb73, %start
  store i8 12, ptr %state, align 1, !dbg !2738
  br label %bb2, !dbg !2739

bb2:                                              ; preds = %bb21, %bb1
; call miniz_oxide::inflate::output_buffer::OutputBuffer::bytes_left
  %_12 = call i32 @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E(ptr align 4 %out_buf) #11, !dbg !2740
  %_11 = icmp ult i32 %_12, 259, !dbg !2741
  br i1 %_11, label %bb6, label %bb4, !dbg !2741

bb4:                                              ; preds = %bb2
  store ptr %in_iter, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1071, !DIExpression(), !2742)
  %_2.0.i = load ptr, ptr %in_iter, align 4, !dbg !2744
  %1 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !2744
  %_2.1.i = load i32, ptr %1, align 4, !dbg !2744
  %_14 = icmp ult i32 %_2.1.i, 14, !dbg !2745
  br i1 %_14, label %bb6, label %bb7, !dbg !2745

bb6:                                              ; preds = %bb4, %bb2
  store i8 12, ptr %state, align 1, !dbg !2746
  store i8 0, ptr %status, align 1, !dbg !2747
  br label %bb74, !dbg !2748

bb7:                                              ; preds = %bb4
  store ptr %l, ptr %l.dbg.spill.i87, align 4
    #dbg_declare(ptr %l.dbg.spill.i87, !1437, !DIExpression(), !2750)
  store ptr %in_iter, ptr %in_iter.dbg.spill.i86, align 4
    #dbg_declare(ptr %in_iter.dbg.spill.i86, !1443, !DIExpression(), !2752)
  %2 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2753
  %_4.i88 = load i32, ptr %2, align 4, !dbg !2753
  %_3.i89 = icmp ult i32 %_4.i88, 15, !dbg !2753
  br i1 %_3.i89, label %bb1.i90, label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit102, !dbg !2753

bb1.i90:                                          ; preds = %bb7
; call miniz_oxide::inflate::core::read_u16_le
  %_7.i91 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !2754
  store i16 %_7.i91, ptr %small.dbg.spill.i109, align 2
    #dbg_declare(ptr %small.dbg.spill.i109, !1088, !DIExpression(), !2755)
  %_0.i110 = zext i16 %_7.i91 to i32, !dbg !2757
  %3 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2758
  %_8.i93 = load i32, ptr %3, align 4, !dbg !2758
  %_9.i94 = icmp ult i32 %_8.i93, 32, !dbg !2759
  br i1 %_9.i94, label %bb4.i96, label %panic.i95, !dbg !2759

bb4.i96:                                          ; preds = %bb1.i90
  %4 = and i32 %_8.i93, 31, !dbg !2759
  %_5.i97 = shl i32 %_0.i110, %4, !dbg !2759
  %5 = load i32, ptr %l, align 4, !dbg !2760
  %6 = or i32 %5, %_5.i97, !dbg !2760
  store i32 %6, ptr %l, align 4, !dbg !2760
  %7 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2761
  %8 = load i32, ptr %7, align 4, !dbg !2761
  %_10.0.i98 = add i32 %8, 16, !dbg !2761
  %_10.1.i99 = icmp ult i32 %_10.0.i98, %8, !dbg !2761
  br i1 %_10.1.i99, label %panic1.i101, label %bb5.i100, !dbg !2761

panic.i95:                                        ; preds = %bb1.i90
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_835cc7da5e9face134744981e9f59911) #12, !dbg !2759
  unreachable, !dbg !2759

bb5.i100:                                         ; preds = %bb4.i96
  %9 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2761
  store i32 %_10.0.i98, ptr %9, align 4, !dbg !2761
  br label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit102, !dbg !2762

panic1.i101:                                      ; preds = %bb4.i96
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3bcb661afc7fa054d0dd645575ff35de) #12, !dbg !2761
  unreachable, !dbg !2761

_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit102: ; preds = %bb7, %bb5.i100
  %10 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !2763
  %_23 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %10, i32 0, !dbg !2763
  %_26 = load i32, ptr %l, align 4, !dbg !2764
; call miniz_oxide::inflate::core::HuffmanTable::lookup
  %11 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE(ptr align 2 %_23, i32 %_26) #11, !dbg !2765
  %_22.0 = extractvalue { i32, i32 } %11, 0, !dbg !2765
  %_22.1 = extractvalue { i32, i32 } %11, 1, !dbg !2765
  store i32 %_22.0, ptr %symbol.dbg.spill, align 4, !dbg !2766
    #dbg_declare(ptr %symbol.dbg.spill, !2711, !DIExpression(), !2767)
  store i32 %_22.1, ptr %code_len.dbg.spill, align 4, !dbg !2768
    #dbg_declare(ptr %code_len.dbg.spill, !2713, !DIExpression(), !2769)
  %12 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2770
  store i32 %_22.0, ptr %12, align 4, !dbg !2770
  %_27 = icmp ult i32 %_22.1, 32, !dbg !2771
  br i1 %_27, label %bb11, label %panic, !dbg !2771

bb11:                                             ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit102
  %13 = load i32, ptr %l, align 4, !dbg !2771
  %14 = and i32 %_22.1, 31, !dbg !2771
  %15 = lshr i32 %13, %14, !dbg !2771
  store i32 %15, ptr %l, align 4, !dbg !2771
  %16 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2772
  %17 = load i32, ptr %16, align 4, !dbg !2772
  %_28.0 = sub i32 %17, %_22.1, !dbg !2772
  %_28.1 = icmp ult i32 %17, %_22.1, !dbg !2772
  br i1 %_28.1, label %panic1, label %bb12, !dbg !2772

panic:                                            ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit102
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_46b860345d6802d806c2731fe7c05628) #12, !dbg !2771
  unreachable, !dbg !2771

bb12:                                             ; preds = %bb11
  %18 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2772
  store i32 %_28.0, ptr %18, align 4, !dbg !2772
  %19 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2773
  %_30 = load i32, ptr %19, align 4, !dbg !2773
  %_29 = and i32 %_30, 256, !dbg !2774
  %20 = icmp eq i32 %_29, 0, !dbg !2774
  br i1 %20, label %bb13, label %bb22, !dbg !2774

panic1:                                           ; preds = %bb11
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_6c1186cc8300e8c4a156ba8a743e890d) #12, !dbg !2772
  unreachable, !dbg !2772

bb13:                                             ; preds = %bb12
  store ptr %l, ptr %l.dbg.spill.i70, align 4
    #dbg_declare(ptr %l.dbg.spill.i70, !1437, !DIExpression(), !2775)
  store ptr %in_iter, ptr %in_iter.dbg.spill.i69, align 4
    #dbg_declare(ptr %in_iter.dbg.spill.i69, !1443, !DIExpression(), !2777)
  %21 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2778
  %_4.i71 = load i32, ptr %21, align 4, !dbg !2778
  %_3.i72 = icmp ult i32 %_4.i71, 15, !dbg !2778
  br i1 %_3.i72, label %bb1.i73, label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit85, !dbg !2778

bb1.i73:                                          ; preds = %bb13
; call miniz_oxide::inflate::core::read_u16_le
  %_7.i74 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !2779
  store i16 %_7.i74, ptr %small.dbg.spill.i111, align 2
    #dbg_declare(ptr %small.dbg.spill.i111, !1088, !DIExpression(), !2780)
  %_0.i112 = zext i16 %_7.i74 to i32, !dbg !2782
  %22 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2783
  %_8.i76 = load i32, ptr %22, align 4, !dbg !2783
  %_9.i77 = icmp ult i32 %_8.i76, 32, !dbg !2784
  br i1 %_9.i77, label %bb4.i79, label %panic.i78, !dbg !2784

bb4.i79:                                          ; preds = %bb1.i73
  %23 = and i32 %_8.i76, 31, !dbg !2784
  %_5.i80 = shl i32 %_0.i112, %23, !dbg !2784
  %24 = load i32, ptr %l, align 4, !dbg !2785
  %25 = or i32 %24, %_5.i80, !dbg !2785
  store i32 %25, ptr %l, align 4, !dbg !2785
  %26 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2786
  %27 = load i32, ptr %26, align 4, !dbg !2786
  %_10.0.i81 = add i32 %27, 16, !dbg !2786
  %_10.1.i82 = icmp ult i32 %_10.0.i81, %27, !dbg !2786
  br i1 %_10.1.i82, label %panic1.i84, label %bb5.i83, !dbg !2786

panic.i78:                                        ; preds = %bb1.i73
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_835cc7da5e9face134744981e9f59911) #12, !dbg !2784
  unreachable, !dbg !2784

bb5.i83:                                          ; preds = %bb4.i79
  %28 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2786
  store i32 %_10.0.i81, ptr %28, align 4, !dbg !2786
  br label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit85, !dbg !2787

panic1.i84:                                       ; preds = %bb4.i79
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3bcb661afc7fa054d0dd645575ff35de) #12, !dbg !2786
  unreachable, !dbg !2786

_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit85: ; preds = %bb13, %bb5.i83
  %29 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !2788
  %_36 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %29, i32 0, !dbg !2788
  %_39 = load i32, ptr %l, align 4, !dbg !2789
; call miniz_oxide::inflate::core::HuffmanTable::lookup
  %30 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE(ptr align 2 %_36, i32 %_39) #11, !dbg !2790
  %_35.0 = extractvalue { i32, i32 } %30, 0, !dbg !2790
  %_35.1 = extractvalue { i32, i32 } %30, 1, !dbg !2790
  store i32 %_35.0, ptr %symbol.dbg.spill2, align 4, !dbg !2791
    #dbg_declare(ptr %symbol.dbg.spill2, !2714, !DIExpression(), !2792)
  store i32 %_35.1, ptr %code_len.dbg.spill3, align 4, !dbg !2793
    #dbg_declare(ptr %code_len.dbg.spill3, !2716, !DIExpression(), !2794)
  %_40 = icmp ult i32 %_35.1, 32, !dbg !2795
  br i1 %_40, label %bb17, label %panic4, !dbg !2795

bb22:                                             ; preds = %bb20, %bb12
  %31 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2796
  %32 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2796
  %33 = load i32, ptr %32, align 4, !dbg !2796
  %34 = and i32 %33, 511, !dbg !2796
  store i32 %34, ptr %31, align 4, !dbg !2796
  %35 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2797
  %_48 = load i32, ptr %35, align 4, !dbg !2797
  %36 = icmp eq i32 %_48, 256, !dbg !2797
  br i1 %36, label %bb23, label %bb25, !dbg !2797

bb17:                                             ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit85
  %37 = load i32, ptr %l, align 4, !dbg !2795
  %38 = and i32 %_35.1, 31, !dbg !2795
  %39 = lshr i32 %37, %38, !dbg !2795
  store i32 %39, ptr %l, align 4, !dbg !2795
  %40 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2798
  %41 = load i32, ptr %40, align 4, !dbg !2798
  %_41.0 = sub i32 %41, %_35.1, !dbg !2798
  %_41.1 = icmp ult i32 %41, %_35.1, !dbg !2798
  br i1 %_41.1, label %panic5, label %bb18, !dbg !2798

panic4:                                           ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit85
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_e722339b70948af583a52fb11fc07404) #12, !dbg !2795
  unreachable, !dbg !2795

bb18:                                             ; preds = %bb17
  %42 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2798
  store i32 %_41.0, ptr %42, align 4, !dbg !2798
  %43 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2799
  %_44 = load i32, ptr %43, align 4, !dbg !2799
  %_43 = trunc i32 %_44 to i8, !dbg !2799
; call miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E(ptr align 4 %out_buf, i8 %_43) #11, !dbg !2800
  %_45 = and i32 %_35.0, 256, !dbg !2801
  %44 = icmp eq i32 %_45, 0, !dbg !2801
  br i1 %44, label %bb21, label %bb20, !dbg !2801

panic5:                                           ; preds = %bb17
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_76a347374fa3dc18bcdd2bb55b6662bf) #12, !dbg !2798
  unreachable, !dbg !2798

bb21:                                             ; preds = %bb18
  %_47 = trunc i32 %_35.0 to i8, !dbg !2802
; call miniz_oxide::inflate::output_buffer::OutputBuffer::write_byte
  call void @_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E(ptr align 4 %out_buf, i8 %_47) #11, !dbg !2803
  br label %bb2, !dbg !2803

bb20:                                             ; preds = %bb18
  %45 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2804
  store i32 %_35.0, ptr %45, align 4, !dbg !2804
  br label %bb22, !dbg !2805

bb23:                                             ; preds = %bb22
; call miniz_oxide::inflate::core::State::begin
  call void @_ZN11miniz_oxide7inflate4core5State5begin17h473fee2d18192297E(ptr align 1 %state, i8 20) #11, !dbg !2807
  store i8 0, ptr %status, align 1, !dbg !2808
  br label %bb74, !dbg !2809

bb25:                                             ; preds = %bb22
  %46 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2810
  %_53 = load i32, ptr %46, align 4, !dbg !2810
  %_52 = icmp ugt i32 %_53, 285, !dbg !2810
  br i1 %_52, label %bb26, label %bb28, !dbg !2810

bb74:                                             ; preds = %bb6, %bb26, %bb48, %bb68, %bb23
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_159, ptr align 4 %l, i32 20, i1 false), !dbg !2811
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %local_vars, ptr align 4 %_159, i32 20, i1 false), !dbg !2812
  %_160 = load i8, ptr %status, align 1, !dbg !2813
  %_161 = load i8, ptr %state, align 1, !dbg !2814
  %47 = insertvalue { i8, i8 } poison, i8 %_160, 0, !dbg !2815
  %48 = insertvalue { i8, i8 } %47, i8 %_161, 1, !dbg !2815
  ret { i8, i8 } %48, !dbg !2815

bb28:                                             ; preds = %bb25
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_58, ptr align 1 @anon.683cac6e6aca26ea7081415a78c2386a.0, i32 32, i1 false), !dbg !2816
  %49 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2817
  %_62 = load i32, ptr %49, align 4, !dbg !2817
  %_63.0 = sub i32 %_62, 257, !dbg !2818
  %_63.1 = icmp ult i32 %_62, 257, !dbg !2818
  br i1 %_63.1, label %panic6, label %bb29, !dbg !2818

bb26:                                             ; preds = %bb25
; call miniz_oxide::inflate::core::State::begin
  call void @_ZN11miniz_oxide7inflate4core5State5begin17h473fee2d18192297E(ptr align 1 %state, i8 33) #11, !dbg !2819
  store i8 -1, ptr %status, align 1, !dbg !2820
  br label %bb74, !dbg !2821

bb29:                                             ; preds = %bb28
  %_59 = and i32 %_63.0, 31, !dbg !2818
  %_64 = icmp ult i32 %_59, 32, !dbg !2816
  br i1 %_64, label %bb30, label %panic7, !dbg !2816

panic6:                                           ; preds = %bb28
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_f086baa30b7f5d805291df18f8d9aafb) #12, !dbg !2818
  unreachable, !dbg !2818

bb30:                                             ; preds = %bb29
  %50 = getelementptr inbounds nuw i8, ptr %_58, i32 %_59, !dbg !2816
  %_57 = load i8, ptr %50, align 1, !dbg !2816
  %51 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2822
  store i8 %_57, ptr %51, align 4, !dbg !2822
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %_67, ptr align 2 @anon.683cac6e6aca26ea7081415a78c2386a.1, i32 64, i1 false), !dbg !2823
  %52 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2824
  %_71 = load i32, ptr %52, align 4, !dbg !2824
  %_72.0 = sub i32 %_71, 257, !dbg !2825
  %_72.1 = icmp ult i32 %_71, 257, !dbg !2825
  br i1 %_72.1, label %panic8, label %bb31, !dbg !2825

panic7:                                           ; preds = %bb29
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_59, i32 32, ptr align 4 @alloc_475572b61634f7b594a641c229cef155) #12, !dbg !2816
  unreachable, !dbg !2816

bb31:                                             ; preds = %bb30
  %_68 = and i32 %_72.0, 31, !dbg !2825
  %_73 = icmp ult i32 %_68, 32, !dbg !2823
  br i1 %_73, label %bb32, label %panic9, !dbg !2823

panic8:                                           ; preds = %bb30
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_5c098469fc91ac316d34cc10970d9677) #12, !dbg !2825
  unreachable, !dbg !2825

bb32:                                             ; preds = %bb31
  %53 = getelementptr inbounds nuw i16, ptr %_67, i32 %_68, !dbg !2823
  %_66 = load i16, ptr %53, align 2, !dbg !2823
  store i16 %_66, ptr %small.dbg.spill.i121, align 2
    #dbg_declare(ptr %small.dbg.spill.i121, !1088, !DIExpression(), !2826)
  %_0.i122 = zext i16 %_66 to i32, !dbg !2828
  %54 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2829
  store i32 %_0.i122, ptr %54, align 4, !dbg !2829
  store ptr %l, ptr %l.dbg.spill.i53, align 4
    #dbg_declare(ptr %l.dbg.spill.i53, !1437, !DIExpression(), !2830)
  store ptr %in_iter, ptr %in_iter.dbg.spill.i52, align 4
    #dbg_declare(ptr %in_iter.dbg.spill.i52, !1443, !DIExpression(), !2832)
  %55 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2833
  %_4.i54 = load i32, ptr %55, align 4, !dbg !2833
  %_3.i55 = icmp ult i32 %_4.i54, 15, !dbg !2833
  br i1 %_3.i55, label %bb1.i56, label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit68, !dbg !2833

bb1.i56:                                          ; preds = %bb32
; call miniz_oxide::inflate::core::read_u16_le
  %_7.i57 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !2834
  store i16 %_7.i57, ptr %small.dbg.spill.i113, align 2
    #dbg_declare(ptr %small.dbg.spill.i113, !1088, !DIExpression(), !2835)
  %_0.i114 = zext i16 %_7.i57 to i32, !dbg !2837
  %56 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2838
  %_8.i59 = load i32, ptr %56, align 4, !dbg !2838
  %_9.i60 = icmp ult i32 %_8.i59, 32, !dbg !2839
  br i1 %_9.i60, label %bb4.i62, label %panic.i61, !dbg !2839

bb4.i62:                                          ; preds = %bb1.i56
  %57 = and i32 %_8.i59, 31, !dbg !2839
  %_5.i63 = shl i32 %_0.i114, %57, !dbg !2839
  %58 = load i32, ptr %l, align 4, !dbg !2840
  %59 = or i32 %58, %_5.i63, !dbg !2840
  store i32 %59, ptr %l, align 4, !dbg !2840
  %60 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2841
  %61 = load i32, ptr %60, align 4, !dbg !2841
  %_10.0.i64 = add i32 %61, 16, !dbg !2841
  %_10.1.i65 = icmp ult i32 %_10.0.i64, %61, !dbg !2841
  br i1 %_10.1.i65, label %panic1.i67, label %bb5.i66, !dbg !2841

panic.i61:                                        ; preds = %bb1.i56
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_835cc7da5e9face134744981e9f59911) #12, !dbg !2839
  unreachable, !dbg !2839

bb5.i66:                                          ; preds = %bb4.i62
  %62 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2841
  store i32 %_10.0.i64, ptr %62, align 4, !dbg !2841
  br label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit68, !dbg !2842

panic1.i67:                                       ; preds = %bb4.i62
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3bcb661afc7fa054d0dd645575ff35de) #12, !dbg !2841
  unreachable, !dbg !2841

_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit68: ; preds = %bb32, %bb5.i66
  %63 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2843
  %_76 = load i8, ptr %63, align 4, !dbg !2843
  %64 = icmp eq i8 %_76, 0, !dbg !2843
  br i1 %64, label %bb42, label %bb35, !dbg !2843

panic9:                                           ; preds = %bb31
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_68, i32 32, ptr align 4 @alloc_1b91eb880aa23324d149960b4c43d183) #12, !dbg !2823
  unreachable, !dbg !2823

bb42:                                             ; preds = %bb41, %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit68
  store ptr %l, ptr %l.dbg.spill.i36, align 4
    #dbg_declare(ptr %l.dbg.spill.i36, !1437, !DIExpression(), !2844)
  store ptr %in_iter, ptr %in_iter.dbg.spill.i35, align 4
    #dbg_declare(ptr %in_iter.dbg.spill.i35, !1443, !DIExpression(), !2846)
  %65 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2847
  %_4.i37 = load i32, ptr %65, align 4, !dbg !2847
  %_3.i38 = icmp ult i32 %_4.i37, 15, !dbg !2847
  br i1 %_3.i38, label %bb1.i39, label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit51, !dbg !2847

bb1.i39:                                          ; preds = %bb42
; call miniz_oxide::inflate::core::read_u16_le
  %_7.i40 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !2848
  store i16 %_7.i40, ptr %small.dbg.spill.i115, align 2
    #dbg_declare(ptr %small.dbg.spill.i115, !1088, !DIExpression(), !2849)
  %_0.i116 = zext i16 %_7.i40 to i32, !dbg !2851
  %66 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2852
  %_8.i42 = load i32, ptr %66, align 4, !dbg !2852
  %_9.i43 = icmp ult i32 %_8.i42, 32, !dbg !2853
  br i1 %_9.i43, label %bb4.i45, label %panic.i44, !dbg !2853

bb4.i45:                                          ; preds = %bb1.i39
  %67 = and i32 %_8.i42, 31, !dbg !2853
  %_5.i46 = shl i32 %_0.i116, %67, !dbg !2853
  %68 = load i32, ptr %l, align 4, !dbg !2854
  %69 = or i32 %68, %_5.i46, !dbg !2854
  store i32 %69, ptr %l, align 4, !dbg !2854
  %70 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2855
  %71 = load i32, ptr %70, align 4, !dbg !2855
  %_10.0.i47 = add i32 %71, 16, !dbg !2855
  %_10.1.i48 = icmp ult i32 %_10.0.i47, %71, !dbg !2855
  br i1 %_10.1.i48, label %panic1.i50, label %bb5.i49, !dbg !2855

panic.i44:                                        ; preds = %bb1.i39
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_835cc7da5e9face134744981e9f59911) #12, !dbg !2853
  unreachable, !dbg !2853

bb5.i49:                                          ; preds = %bb4.i45
  %72 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2855
  store i32 %_10.0.i47, ptr %72, align 4, !dbg !2855
  br label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit51, !dbg !2856

panic1.i50:                                       ; preds = %bb4.i45
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3bcb661afc7fa054d0dd645575ff35de) #12, !dbg !2855
  unreachable, !dbg !2855

_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit51: ; preds = %bb42, %bb5.i49
  %73 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !2857
  %_95 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %73, i32 1, !dbg !2857
  %_98 = load i32, ptr %l, align 4, !dbg !2858
; call miniz_oxide::inflate::core::HuffmanTable::lookup
  %74 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE(ptr align 2 %_95, i32 %_98) #11, !dbg !2859
  %_94.0 = extractvalue { i32, i32 } %74, 0, !dbg !2859
  %_94.1 = extractvalue { i32, i32 } %74, 1, !dbg !2859
  store i32 %_94.0, ptr %symbol, align 4, !dbg !2860
  store i32 %_94.1, ptr %code_len.dbg.spill15, align 4, !dbg !2861
    #dbg_declare(ptr %code_len.dbg.spill15, !2721, !DIExpression(), !2862)
  %75 = load i32, ptr %symbol, align 4, !dbg !2863
  %76 = and i32 %75, 511, !dbg !2863
  store i32 %76, ptr %symbol, align 4, !dbg !2863
  %_99 = icmp ult i32 %_94.1, 32, !dbg !2864
  br i1 %_99, label %bb46, label %panic16, !dbg !2864

bb35:                                             ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit68
  %_78 = load i32, ptr %l, align 4, !dbg !2865
  %77 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2866
  %_81 = load i8, ptr %77, align 4, !dbg !2866
  %_82 = icmp ult i8 %_81, 32, !dbg !2867
  br i1 %_82, label %bb36, label %panic10, !dbg !2867

bb36:                                             ; preds = %bb35
  %78 = and i8 %_81, 31, !dbg !2867
  %79 = zext i8 %78 to i32, !dbg !2867
  %_80 = shl i32 1, %79, !dbg !2867
  %_83.0 = sub i32 %_80, 1, !dbg !2868
  %_83.1 = icmp ult i32 %_80, 1, !dbg !2868
  br i1 %_83.1, label %panic11, label %bb37, !dbg !2868

panic10:                                          ; preds = %bb35
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_aec417571fd51376bd0ba66dd7a6c08e) #12, !dbg !2867
  unreachable, !dbg !2867

bb37:                                             ; preds = %bb36
  %extra_bits = and i32 %_78, %_83.0, !dbg !2865
  store i32 %extra_bits, ptr %extra_bits.dbg.spill, align 4, !dbg !2865
    #dbg_declare(ptr %extra_bits.dbg.spill, !2717, !DIExpression(), !2869)
  %80 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2870
  %_84 = load i8, ptr %80, align 4, !dbg !2870
  %_85 = icmp ult i8 %_84, 32, !dbg !2871
  br i1 %_85, label %bb38, label %panic12, !dbg !2871

panic11:                                          ; preds = %bb36
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_5392b952cf7300658b04a51f5d717915) #12, !dbg !2868
  unreachable, !dbg !2868

bb38:                                             ; preds = %bb37
  %81 = load i32, ptr %l, align 4, !dbg !2871
  %82 = and i8 %_84, 31, !dbg !2871
  %83 = zext i8 %82 to i32, !dbg !2871
  %84 = lshr i32 %81, %83, !dbg !2871
  store i32 %84, ptr %l, align 4, !dbg !2871
  %85 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2872
  %_87 = load i8, ptr %85, align 4, !dbg !2872
  store i8 %_87, ptr %small.dbg.spill.i107, align 1
    #dbg_declare(ptr %small.dbg.spill.i107, !1898, !DIExpression(), !2873)
  %_0.i108 = zext i8 %_87 to i32, !dbg !2875
  %86 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2876
  %87 = load i32, ptr %86, align 4, !dbg !2876
  %_88.0 = sub i32 %87, %_0.i108, !dbg !2876
  %_88.1 = icmp ult i32 %87, %_0.i108, !dbg !2876
  br i1 %_88.1, label %panic13, label %bb40, !dbg !2876

panic12:                                          ; preds = %bb37
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_8b5e5b622df2812ec7df268801c4a320) #12, !dbg !2871
  unreachable, !dbg !2871

bb40:                                             ; preds = %bb38
  %88 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2876
  store i32 %_88.0, ptr %88, align 4, !dbg !2876
  %89 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2877
  %90 = load i32, ptr %89, align 4, !dbg !2877
  %_89.0 = add i32 %90, %extra_bits, !dbg !2877
  %_89.1 = icmp ult i32 %_89.0, %90, !dbg !2877
  br i1 %_89.1, label %panic14, label %bb41, !dbg !2877

panic13:                                          ; preds = %bb38
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_1e6f1cc6304bba04b7a6d9a7da948ee4) #12, !dbg !2876
  unreachable, !dbg !2876

bb41:                                             ; preds = %bb40
  %91 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2877
  store i32 %_89.0, ptr %91, align 4, !dbg !2877
  br label %bb42, !dbg !2878

panic14:                                          ; preds = %bb40
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_667bc5788d600f1725d4733ee8de1ff3) #12, !dbg !2877
  unreachable, !dbg !2877

bb46:                                             ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit51
  %92 = load i32, ptr %l, align 4, !dbg !2864
  %93 = and i32 %_94.1, 31, !dbg !2864
  %94 = lshr i32 %92, %93, !dbg !2864
  store i32 %94, ptr %l, align 4, !dbg !2864
  %95 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2879
  %96 = load i32, ptr %95, align 4, !dbg !2879
  %_100.0 = sub i32 %96, %_94.1, !dbg !2879
  %_100.1 = icmp ult i32 %96, %_94.1, !dbg !2879
  br i1 %_100.1, label %panic17, label %bb47, !dbg !2879

panic16:                                          ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit51
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_f14ea122542d0b67a7ef39363ecbf409) #12, !dbg !2864
  unreachable, !dbg !2864

bb47:                                             ; preds = %bb46
  %97 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2879
  store i32 %_100.0, ptr %97, align 4, !dbg !2879
  %_102 = load i32, ptr %symbol, align 4, !dbg !2880
  %_101 = icmp sgt i32 %_102, 29, !dbg !2880
  br i1 %_101, label %bb48, label %bb50, !dbg !2880

panic17:                                          ; preds = %bb46
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_49e8e0a73e6c69e213669a2341b7c3f2) #12, !dbg !2879
  unreachable, !dbg !2879

bb50:                                             ; preds = %bb47
  %_108 = load i32, ptr %symbol, align 4, !dbg !2881
  %_107 = trunc i32 %_108 to i8, !dbg !2881
  store i8 %_107, ptr %code.dbg.spill.i, align 1
    #dbg_declare(ptr %code.dbg.spill.i, !2258, !DIExpression(), !2882)
  %c.i = lshr i8 %_107, 1, !dbg !2884
  store i8 %c.i, ptr %c.dbg.spill.i, align 1, !dbg !2884
    #dbg_declare(ptr %c.dbg.spill.i, !2263, !DIExpression(), !2885)
  store i8 %c.i, ptr %self.dbg.spill.i104, align 1
    #dbg_declare(ptr %self.dbg.spill.i104, !2269, !DIExpression(), !2886)
  store i8 1, ptr %rhs.dbg.spill.i, align 1
    #dbg_declare(ptr %rhs.dbg.spill.i, !2275, !DIExpression(), !2888)
  %98 = call i8 @llvm.usub.sat.i8(i8 %c.i, i8 1), !dbg !2889
  store i8 %98, ptr %0, align 1, !dbg !2889
  %_0.i105 = load i8, ptr %0, align 1, !dbg !2889
  %99 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2890
  store i8 %_0.i105, ptr %99, align 4, !dbg !2890
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %_111, ptr align 2 @anon.683cac6e6aca26ea7081415a78c2386a.4, i32 60, i1 false), !dbg !2891
  %_113 = load i32, ptr %symbol, align 4, !dbg !2892
  %_114 = icmp ult i32 %_113, 30, !dbg !2891
  br i1 %_114, label %bb52, label %panic18, !dbg !2891

bb48:                                             ; preds = %bb47
; call miniz_oxide::inflate::core::State::begin
  call void @_ZN11miniz_oxide7inflate4core5State5begin17h473fee2d18192297E(ptr align 1 %state, i8 34) #11, !dbg !2893
  store i8 -1, ptr %status, align 1, !dbg !2894
  br label %bb74, !dbg !2895

bb52:                                             ; preds = %bb50
  %100 = getelementptr inbounds nuw i16, ptr %_111, i32 %_113, !dbg !2891
  %_110 = load i16, ptr %100, align 2, !dbg !2891
  store i16 %_110, ptr %small.dbg.spill.i119, align 2
    #dbg_declare(ptr %small.dbg.spill.i119, !1088, !DIExpression(), !2897)
  %_0.i120 = zext i16 %_110 to i32, !dbg !2899
  %101 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2900
  store i32 %_0.i120, ptr %101, align 4, !dbg !2900
  %102 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2901
  %_115 = load i8, ptr %102, align 4, !dbg !2901
  %103 = icmp eq i8 %_115, 0, !dbg !2901
  br i1 %103, label %bb62, label %bb54, !dbg !2901

panic18:                                          ; preds = %bb50
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_113, i32 30, ptr align 4 @alloc_d9ca595dabaa4e00e7c4c59126fd46e9) #12, !dbg !2891
  unreachable, !dbg !2891

bb62:                                             ; preds = %bb61, %bb52
  store ptr %out_buf, ptr %self.dbg.spill.i33, align 4
    #dbg_declare(ptr %self.dbg.spill.i33, !1137, !DIExpression(), !2902)
  %104 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !2904
  %_0.i34 = load i32, ptr %104, align 4, !dbg !2904
  store i32 %_0.i34, ptr %position.dbg.spill, align 4, !dbg !2905
    #dbg_declare(ptr %position.dbg.spill, !2724, !DIExpression(), !2906)
  %105 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2907
  %_135 = load i32, ptr %105, align 4, !dbg !2907
  store ptr %out_buf, ptr %self.dbg.spill.i32, align 4
    #dbg_declare(ptr %self.dbg.spill.i32, !1137, !DIExpression(), !2908)
  %106 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !2910
  %_0.i = load i32, ptr %106, align 4, !dbg !2910
  %_133 = icmp ugt i32 %_135, %_0.i, !dbg !2907
  br i1 %_133, label %bb65, label %bb66, !dbg !2907

bb54:                                             ; preds = %bb52
  store ptr %l, ptr %l.dbg.spill.i, align 4
    #dbg_declare(ptr %l.dbg.spill.i, !1437, !DIExpression(), !2911)
  store ptr %in_iter, ptr %in_iter.dbg.spill.i, align 4
    #dbg_declare(ptr %in_iter.dbg.spill.i, !1443, !DIExpression(), !2913)
  %107 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2914
  %_4.i = load i32, ptr %107, align 4, !dbg !2914
  %_3.i = icmp ult i32 %_4.i, 15, !dbg !2914
  br i1 %_3.i, label %bb1.i, label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit, !dbg !2914

bb1.i:                                            ; preds = %bb54
; call miniz_oxide::inflate::core::read_u16_le
  %_7.i = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !2915
  store i16 %_7.i, ptr %small.dbg.spill.i117, align 2
    #dbg_declare(ptr %small.dbg.spill.i117, !1088, !DIExpression(), !2916)
  %_0.i118 = zext i16 %_7.i to i32, !dbg !2918
  %108 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2919
  %_8.i = load i32, ptr %108, align 4, !dbg !2919
  %_9.i = icmp ult i32 %_8.i, 32, !dbg !2920
  br i1 %_9.i, label %bb4.i, label %panic.i, !dbg !2920

bb4.i:                                            ; preds = %bb1.i
  %109 = and i32 %_8.i, 31, !dbg !2920
  %_5.i = shl i32 %_0.i118, %109, !dbg !2920
  %110 = load i32, ptr %l, align 4, !dbg !2921
  %111 = or i32 %110, %_5.i, !dbg !2921
  store i32 %111, ptr %l, align 4, !dbg !2921
  %112 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2922
  %113 = load i32, ptr %112, align 4, !dbg !2922
  %_10.0.i = add i32 %113, 16, !dbg !2922
  %_10.1.i = icmp ult i32 %_10.0.i, %113, !dbg !2922
  br i1 %_10.1.i, label %panic1.i, label %bb5.i, !dbg !2922

panic.i:                                          ; preds = %bb1.i
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_835cc7da5e9face134744981e9f59911) #12, !dbg !2920
  unreachable, !dbg !2920

bb5.i:                                            ; preds = %bb4.i
  %114 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2922
  store i32 %_10.0.i, ptr %114, align 4, !dbg !2922
  br label %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit, !dbg !2923

panic1.i:                                         ; preds = %bb4.i
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3bcb661afc7fa054d0dd645575ff35de) #12, !dbg !2922
  unreachable, !dbg !2922

_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit: ; preds = %bb54, %bb5.i
  %_119 = load i32, ptr %l, align 4, !dbg !2924
  %115 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2925
  %_122 = load i8, ptr %115, align 4, !dbg !2925
  %_123 = icmp ult i8 %_122, 32, !dbg !2926
  br i1 %_123, label %bb56, label %panic19, !dbg !2926

bb56:                                             ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit
  %116 = and i8 %_122, 31, !dbg !2926
  %117 = zext i8 %116 to i32, !dbg !2926
  %_121 = shl i32 1, %117, !dbg !2926
  %_124.0 = sub i32 %_121, 1, !dbg !2927
  %_124.1 = icmp ult i32 %_121, 1, !dbg !2927
  br i1 %_124.1, label %panic20, label %bb57, !dbg !2927

panic19:                                          ; preds = %_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E.exit
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5f185055166ccb4142dd5fd7c838b59e) #12, !dbg !2926
  unreachable, !dbg !2926

bb57:                                             ; preds = %bb56
  %extra_bits21 = and i32 %_119, %_124.0, !dbg !2924
  store i32 %extra_bits21, ptr %extra_bits.dbg.spill22, align 4, !dbg !2924
    #dbg_declare(ptr %extra_bits.dbg.spill22, !2722, !DIExpression(), !2928)
  %118 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2929
  %_125 = load i8, ptr %118, align 4, !dbg !2929
  %_126 = icmp ult i8 %_125, 32, !dbg !2930
  br i1 %_126, label %bb58, label %panic23, !dbg !2930

panic20:                                          ; preds = %bb56
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_6ecc5c2ba9316dcb5c33cdfa46aaf153) #12, !dbg !2927
  unreachable, !dbg !2927

bb58:                                             ; preds = %bb57
  %119 = load i32, ptr %l, align 4, !dbg !2930
  %120 = and i8 %_125, 31, !dbg !2930
  %121 = zext i8 %120 to i32, !dbg !2930
  %122 = lshr i32 %119, %121, !dbg !2930
  store i32 %122, ptr %l, align 4, !dbg !2930
  %123 = getelementptr inbounds i8, ptr %l, i32 16, !dbg !2931
  %_128 = load i8, ptr %123, align 4, !dbg !2931
  store i8 %_128, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !2932)
  %_0.i106 = zext i8 %_128 to i32, !dbg !2934
  %124 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2935
  %125 = load i32, ptr %124, align 4, !dbg !2935
  %_129.0 = sub i32 %125, %_0.i106, !dbg !2935
  %_129.1 = icmp ult i32 %125, %_0.i106, !dbg !2935
  br i1 %_129.1, label %panic24, label %bb60, !dbg !2935

panic23:                                          ; preds = %bb57
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_e1d8e7878b051c71de591f05fd9bae39) #12, !dbg !2930
  unreachable, !dbg !2930

bb60:                                             ; preds = %bb58
  %126 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !2935
  store i32 %_129.0, ptr %126, align 4, !dbg !2935
  %127 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2936
  %128 = load i32, ptr %127, align 4, !dbg !2936
  %_130.0 = add i32 %128, %extra_bits21, !dbg !2936
  %_130.1 = icmp ult i32 %_130.0, %128, !dbg !2936
  br i1 %_130.1, label %panic25, label %bb61, !dbg !2936

panic24:                                          ; preds = %bb58
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_3de5f1b18078f4c8929485f32a16b0fd) #12, !dbg !2935
  unreachable, !dbg !2935

bb61:                                             ; preds = %bb60
  %129 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2936
  store i32 %_130.0, ptr %129, align 4, !dbg !2936
  br label %bb62, !dbg !2937

panic25:                                          ; preds = %bb60
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_286ba0af64d8cf124e1fa10da393d3eb) #12, !dbg !2936
  unreachable, !dbg !2936

bb66:                                             ; preds = %bb65, %bb62
  %130 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2938
  %_141 = load i32, ptr %130, align 4, !dbg !2938
  store ptr %out_buf, ptr %self.dbg.spill.i29, align 4
    #dbg_declare(ptr %self.dbg.spill.i29, !1691, !DIExpression(), !2939)
  %_2.0.i30 = load ptr, ptr %out_buf, align 4, !dbg !2941
  %131 = getelementptr inbounds i8, ptr %out_buf, i32 4, !dbg !2941
  %_2.1.i31 = load i32, ptr %131, align 4, !dbg !2941
  %132 = insertvalue { ptr, i32 } poison, ptr %_2.0.i30, 0, !dbg !2942
  %133 = insertvalue { ptr, i32 } %132, i32 %_2.1.i31, 1, !dbg !2942
  %_143.0 = extractvalue { ptr, i32 } %133, 0, !dbg !2943
  %_143.1 = extractvalue { ptr, i32 } %133, 1, !dbg !2943
  %_139 = icmp ugt i32 %_141, %_143.1, !dbg !2944
  br i1 %_139, label %bb68, label %bb70, !dbg !2944

bb65:                                             ; preds = %bb62
  %_138 = and i32 %flags, 4, !dbg !2945
  %134 = icmp eq i32 %_138, 0, !dbg !2946
  br i1 %134, label %bb66, label %bb68, !dbg !2946

bb68:                                             ; preds = %bb66, %bb65
; call miniz_oxide::inflate::core::State::begin
  call void @_ZN11miniz_oxide7inflate4core5State5begin17h473fee2d18192297E(ptr align 1 %state, i8 30) #11, !dbg !2947
  store i8 -1, ptr %status, align 1, !dbg !2948
  br label %bb74, !dbg !2895

bb70:                                             ; preds = %bb66
  store ptr %out_buf, ptr %self.dbg.spill.i28, align 4
    #dbg_declare(ptr %self.dbg.spill.i28, !1592, !DIExpression(), !2949)
  %_0.0.i = load ptr, ptr %out_buf, align 4, !dbg !2951
  %135 = getelementptr inbounds i8, ptr %out_buf, i32 4, !dbg !2951
  %_0.1.i = load i32, ptr %135, align 4, !dbg !2951
  %136 = insertvalue { ptr, i32 } poison, ptr %_0.0.i, 0, !dbg !2952
  %137 = insertvalue { ptr, i32 } %136, i32 %_0.1.i, 1, !dbg !2952
  %_149.0 = extractvalue { ptr, i32 } %137, 0, !dbg !2953
  %_149.1 = extractvalue { ptr, i32 } %137, 1, !dbg !2953
  %138 = getelementptr inbounds i8, ptr %l, i32 8, !dbg !2954
  %_151 = load i32, ptr %138, align 4, !dbg !2954
  %139 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2955
  %_153 = load i32, ptr %139, align 4, !dbg !2955
; call miniz_oxide::inflate::core::apply_match
  call void @_ZN11miniz_oxide7inflate4core11apply_match17hc6e8d69c6bc09905E(ptr align 1 %_149.0, i32 %_149.1, i32 %_0.i34, i32 %_151, i32 %_153, i32 %out_buf_size_mask) #11, !dbg !2956
  %140 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !2957
  %_157 = load i32, ptr %140, align 4, !dbg !2957
  %_158.0 = add i32 %_0.i34, %_157, !dbg !2958
  %_158.1 = icmp ult i32 %_158.0, %_0.i34, !dbg !2958
  br i1 %_158.1, label %panic26, label %bb73, !dbg !2958

bb73:                                             ; preds = %bb70
  store ptr %out_buf, ptr %self.dbg.spill.i27, align 4
    #dbg_declare(ptr %self.dbg.spill.i27, !1607, !DIExpression(), !2959)
  store i32 %_158.0, ptr %position.dbg.spill.i, align 4
    #dbg_declare(ptr %position.dbg.spill.i, !1613, !DIExpression(), !2961)
  %141 = getelementptr inbounds i8, ptr %out_buf, i32 8, !dbg !2962
  store i32 %_158.0, ptr %141, align 4, !dbg !2962
  br label %bb1, !dbg !2963

panic26:                                          ; preds = %bb70
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_4a7a857b36602634c8a373ef2855bb50) #12, !dbg !2958
  unreachable, !dbg !2958
}

; miniz_oxide::inflate::core::DecompressorOxide::new
; Function Attrs: nounwind
define dso_local void @_ZN11miniz_oxide7inflate4core17DecompressorOxide3new17h3cb69b0a583d6dd2E(ptr sret([10500 x i8]) align 4 %_0) unnamed_addr #1 !dbg !2964 {
start:
  %_11.i = alloca [512 x i8], align 1
  %_10.i = alloca [4 x i8], align 1
  %_9.i = alloca [19 x i8], align 1
  %_8.i = alloca [32 x i8], align 1
  %_7.i = alloca [288 x i8], align 1
  %_6.i = alloca [3200 x i8], align 2
  %_5.i = alloca [3200 x i8], align 2
  %_4.i = alloca [3200 x i8], align 2
  %_3.i = alloca [9600 x i8], align 2
  %_2.i = alloca [6 x i8], align 2
  call void @llvm.memset.p0.i32(ptr align 2 %_2.i, i8 0, i32 6, i1 false), !dbg !2968
; call miniz_oxide::inflate::core::HuffmanTable::new
  call void @_ZN11miniz_oxide7inflate4core12HuffmanTable3new17hc7a28ef46ef9e94dE(ptr sret([3200 x i8]) align 2 %_4.i) #11, !dbg !2972
; call miniz_oxide::inflate::core::HuffmanTable::new
  call void @_ZN11miniz_oxide7inflate4core12HuffmanTable3new17hc7a28ef46ef9e94dE(ptr sret([3200 x i8]) align 2 %_5.i) #11, !dbg !2973
; call miniz_oxide::inflate::core::HuffmanTable::new
  call void @_ZN11miniz_oxide7inflate4core12HuffmanTable3new17hc7a28ef46ef9e94dE(ptr sret([3200 x i8]) align 2 %_6.i) #11, !dbg !2974
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %_3.i, ptr align 2 %_4.i, i32 3200, i1 false), !dbg !2975
  %0 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %_3.i, i32 1, !dbg !2975
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %0, ptr align 2 %_5.i, i32 3200, i1 false), !dbg !2975
  %1 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %_3.i, i32 2, !dbg !2975
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 2 %_6.i, i32 3200, i1 false), !dbg !2975
  call void @llvm.memset.p0.i32(ptr align 1 %_7.i, i8 0, i32 288, i1 false), !dbg !2976
  call void @llvm.memset.p0.i32(ptr align 1 %_8.i, i8 0, i32 32, i1 false), !dbg !2977
  call void @llvm.memset.p0.i32(ptr align 1 %_9.i, i8 0, i32 19, i1 false), !dbg !2978
  call void @llvm.memset.p0.i32(ptr align 1 %_10.i, i8 0, i32 4, i1 false), !dbg !2979
  call void @llvm.memset.p0.i32(ptr align 1 %_11.i, i8 0, i32 512, i1 false), !dbg !2980
  %2 = getelementptr inbounds i8, ptr %_0, i32 10496, !dbg !2981
  store i8 0, ptr %2, align 4, !dbg !2981
  %3 = getelementptr inbounds i8, ptr %_0, i32 10432, !dbg !2981
  store i32 0, ptr %3, align 4, !dbg !2981
  %4 = getelementptr inbounds i8, ptr %_0, i32 10436, !dbg !2981
  store i32 0, ptr %4, align 4, !dbg !2981
  %5 = getelementptr inbounds i8, ptr %_0, i32 10440, !dbg !2981
  store i32 0, ptr %5, align 4, !dbg !2981
  %6 = getelementptr inbounds i8, ptr %_0, i32 10444, !dbg !2981
  store i32 0, ptr %6, align 4, !dbg !2981
  %7 = getelementptr inbounds i8, ptr %_0, i32 10474, !dbg !2981
  store i8 0, ptr %7, align 2, !dbg !2981
  %8 = getelementptr inbounds i8, ptr %_0, i32 10475, !dbg !2981
  store i8 0, ptr %8, align 1, !dbg !2981
  %9 = getelementptr inbounds i8, ptr %_0, i32 10448, !dbg !2981
  store i32 0, ptr %9, align 4, !dbg !2981
  %10 = getelementptr inbounds i8, ptr %_0, i32 10452, !dbg !2981
  store i32 0, ptr %10, align 4, !dbg !2981
  %11 = getelementptr inbounds i8, ptr %_0, i32 10456, !dbg !2981
  store i32 0, ptr %11, align 4, !dbg !2981
  %12 = getelementptr inbounds i8, ptr %_0, i32 10476, !dbg !2981
  store i8 0, ptr %12, align 4, !dbg !2981
  %13 = getelementptr inbounds i8, ptr %_0, i32 10468, !dbg !2981
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %13, ptr align 2 %_2.i, i32 6, i1 false), !dbg !2981
  %14 = getelementptr inbounds i8, ptr %_0, i32 10460, !dbg !2981
  store i32 0, ptr %14, align 4, !dbg !2981
  %15 = getelementptr inbounds i8, ptr %_0, i32 512, !dbg !2981
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %15, ptr align 2 %_3.i, i32 9600, i1 false), !dbg !2981
  %16 = getelementptr inbounds i8, ptr %_0, i32 10112, !dbg !2981
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %16, ptr align 1 %_7.i, i32 288, i1 false), !dbg !2981
  %17 = getelementptr inbounds i8, ptr %_0, i32 10400, !dbg !2981
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %17, ptr align 1 %_8.i, i32 32, i1 false), !dbg !2981
  %18 = getelementptr inbounds i8, ptr %_0, i32 10477, !dbg !2981
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %18, ptr align 1 %_9.i, i32 19, i1 false), !dbg !2981
  %19 = getelementptr inbounds i8, ptr %_0, i32 10464, !dbg !2981
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %19, ptr align 1 %_10.i, i32 4, i1 false), !dbg !2981
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 1 %_11.i, i32 512, i1 false), !dbg !2981
  ret void, !dbg !2982
}

; miniz_oxide::inflate::core::start_static_table
; Function Attrs: nounwind
define internal void @_ZN11miniz_oxide7inflate4core18start_static_table17ha574721360599e59E(ptr align 4 %r) unnamed_addr #1 !dbg !2983 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !2987, !DIExpression(), !2988)
  %0 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !2989
  %1 = getelementptr inbounds nuw i16, ptr %0, i32 0, !dbg !2989
  store i16 288, ptr %1, align 4, !dbg !2989
  %2 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !2990
  %3 = getelementptr inbounds nuw i16, ptr %2, i32 1, !dbg !2990
  store i16 32, ptr %3, align 2, !dbg !2990
  %_8 = getelementptr inbounds i8, ptr %r, i32 10112, !dbg !2991
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %4 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8e8d37a24ff0bf64E"(ptr align 1 %_8, i32 0, i32 144, ptr align 4 @alloc_e22bff6ea8f05d3d08eaef7e5645319b) #11, !dbg !2992
  %_7.0 = extractvalue { ptr, i32 } %4, 0, !dbg !2992
  %_7.1 = extractvalue { ptr, i32 } %4, 1, !dbg !2992
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_7.0, i32 %_7.1, i8 8) #11, !dbg !2993
  %_12 = getelementptr inbounds i8, ptr %r, i32 10112, !dbg !2994
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %5 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8e8d37a24ff0bf64E"(ptr align 1 %_12, i32 144, i32 256, ptr align 4 @alloc_678f06292b8c60039c3d4e3ef9bb2ec6) #11, !dbg !2995
  %_11.0 = extractvalue { ptr, i32 } %5, 0, !dbg !2995
  %_11.1 = extractvalue { ptr, i32 } %5, 1, !dbg !2995
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_11.0, i32 %_11.1, i8 9) #11, !dbg !2996
  %_16 = getelementptr inbounds i8, ptr %r, i32 10112, !dbg !2997
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %6 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8e8d37a24ff0bf64E"(ptr align 1 %_16, i32 256, i32 280, ptr align 4 @alloc_08c1153fe2e491ef67476ae281250a50) #11, !dbg !2998
  %_15.0 = extractvalue { ptr, i32 } %6, 0, !dbg !2998
  %_15.1 = extractvalue { ptr, i32 } %6, 1, !dbg !2998
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_15.0, i32 %_15.1, i8 7) #11, !dbg !2999
  %_20 = getelementptr inbounds i8, ptr %r, i32 10112, !dbg !3000
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %7 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8e8d37a24ff0bf64E"(ptr align 1 %_20, i32 280, i32 288, ptr align 4 @alloc_7b53e5bba78b563105cbcb99bd810d32) #11, !dbg !3001
  %_19.0 = extractvalue { ptr, i32 } %7, 0, !dbg !3001
  %_19.1 = extractvalue { ptr, i32 } %7, 1, !dbg !3001
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_19.0, i32 %_19.1, i8 8) #11, !dbg !3002
  %_24 = getelementptr inbounds i8, ptr %r, i32 10400, !dbg !3003
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %8 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h2c932d847dda7250E"(ptr align 1 %_24, i32 0, i32 32, ptr align 4 @alloc_53464d65d4f92aaa9ee7b844bafa188d) #11, !dbg !3004
  %_23.0 = extractvalue { ptr, i32 } %8, 0, !dbg !3004
  %_23.1 = extractvalue { ptr, i32 } %8, 1, !dbg !3004
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_23.0, i32 %_23.1, i8 5) #11, !dbg !3005
  ret void, !dbg !3006
}

; miniz_oxide::inflate::core::decode_huffman_code
; Function Attrs: nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core19decode_huffman_code17h493379bdce9e2514E(ptr align 4 %r, ptr align 4 %l, i32 %table, i32 %flags, ptr align 4 %in_iter) unnamed_addr #1 !dbg !3007 {
start:
  %small.dbg.spill.i23 = alloca [2 x i8], align 2
  %small.dbg.spill.i21 = alloca [2 x i8], align 2
  %small.dbg.spill.i19 = alloca [2 x i8], align 2
  %small.dbg.spill.i17 = alloca [2 x i8], align 2
  %small.dbg.spill.i16 = alloca [1 x i8], align 1
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %res.dbg.spill = alloca [8 x i8], align 4
  %a.dbg.spill = alloca [2 x i8], align 1
  %code_len.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %table.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %r.dbg.spill = alloca [4 x i8], align 4
  %_98 = alloca [12 x i8], align 4
  %code_len1 = alloca [4 x i8], align 4
  %symbol = alloca [4 x i8], align 4
  %byte = alloca [1 x i8], align 1
  %code_len = alloca [4 x i8], align 4
  %temp = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !3011, !DIExpression(), !3035)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !3012, !DIExpression(), !3036)
  store i32 %table, ptr %table.dbg.spill, align 4
    #dbg_declare(ptr %table.dbg.spill, !3013, !DIExpression(), !3037)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !3014, !DIExpression(), !3038)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !3015, !DIExpression(), !3039)
    #dbg_declare(ptr %f.dbg.spill, !3016, !DIExpression(), !3040)
    #dbg_declare(ptr %temp, !3017, !DIExpression(), !3041)
    #dbg_declare(ptr %code_len, !3021, !DIExpression(), !3042)
    #dbg_declare(ptr %byte, !3023, !DIExpression(), !3043)
    #dbg_declare(ptr %symbol, !3027, !DIExpression(), !3044)
    #dbg_declare(ptr %code_len1, !3029, !DIExpression(), !3045)
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3046
  %_8 = load i32, ptr %0, align 4, !dbg !3046
  %_7 = icmp ult i32 %_8, 15, !dbg !3046
  br i1 %_7, label %bb1, label %bb35, !dbg !3046

bb35:                                             ; preds = %bb29, %bb9, %bb22, %bb34, %start
  %_77 = icmp ult i32 %table, 3, !dbg !3047
  br i1 %_77, label %bb36, label %panic12, !dbg !3047

bb1:                                              ; preds = %start
  store ptr %in_iter, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1071, !DIExpression(), !3048)
  %_2.0.i = load ptr, ptr %in_iter, align 4, !dbg !3050
  %1 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !3050
  %_2.1.i = load i32, ptr %1, align 4, !dbg !3050
  %_9 = icmp ult i32 %_2.1.i, 2, !dbg !3051
  br i1 %_9, label %bb3, label %bb30, !dbg !3051

bb30:                                             ; preds = %bb1
; call miniz_oxide::inflate::core::read_u16_le
  %_70 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !3052
  store i16 %_70, ptr %small.dbg.spill.i23, align 2
    #dbg_declare(ptr %small.dbg.spill.i23, !1088, !DIExpression(), !3053)
  %_0.i24 = zext i16 %_70 to i32, !dbg !3055
  %2 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3056
  %_71 = load i32, ptr %2, align 4, !dbg !3056
  %_72 = icmp ult i32 %_71, 32, !dbg !3057
  br i1 %_72, label %bb33, label %panic, !dbg !3057

bb3:                                              ; preds = %bb29, %bb1
  %_15 = icmp ult i32 %table, 3, !dbg !3058
  br i1 %_15, label %bb4, label %panic3, !dbg !3058

bb33:                                             ; preds = %bb30
  %3 = and i32 %_71, 31, !dbg !3057
  %_68 = shl i32 %_0.i24, %3, !dbg !3057
  %4 = load i32, ptr %l, align 4, !dbg !3059
  %5 = or i32 %4, %_68, !dbg !3059
  store i32 %5, ptr %l, align 4, !dbg !3059
  %6 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3060
  %7 = load i32, ptr %6, align 4, !dbg !3060
  %_73.0 = add i32 %7, 16, !dbg !3060
  %_73.1 = icmp ult i32 %_73.0, %7, !dbg !3060
  br i1 %_73.1, label %panic2, label %bb34, !dbg !3060

panic:                                            ; preds = %bb30
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_2b2838106b9c16bced83d3984f8fdeac) #12, !dbg !3057
  unreachable, !dbg !3057

bb34:                                             ; preds = %bb33
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3060
  store i32 %_73.0, ptr %8, align 4, !dbg !3060
  br label %bb35, !dbg !3061

panic2:                                           ; preds = %bb33
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_ec41b38738834a802c99909d4101a960) #12, !dbg !3060
  unreachable, !dbg !3060

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3058
  %_14 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %9, i32 %table, !dbg !3058
  %_16 = load i32, ptr %l, align 4, !dbg !3062
; call miniz_oxide::inflate::core::HuffmanTable::fast_lookup
  %_13 = call i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %_14, i32 %_16) #11, !dbg !3063
  store i16 %_13, ptr %small.dbg.spill.i21, align 2
    #dbg_declare(ptr %small.dbg.spill.i21, !2545, !DIExpression(), !3064)
  %_0.i22 = sext i16 %_13 to i32, !dbg !3066
  store i32 %_0.i22, ptr %temp, align 4, !dbg !3067
  %_18 = load i32, ptr %temp, align 4, !dbg !3068
  %_17 = icmp sge i32 %_18, 0, !dbg !3068
  br i1 %_17, label %bb7, label %bb10, !dbg !3068

panic3:                                           ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_a5b2018e5dafea63de5bf3fc5f4233fa) #12, !dbg !3058
  unreachable, !dbg !3058

bb10:                                             ; preds = %bb4
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3069
  %_27 = load i32, ptr %10, align 4, !dbg !3069
; call <T as core::convert::Into<U>>::into
  %_28 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd2f0d712f59e2a35E"(i8 10, ptr align 4 @alloc_077fda8295f527d837c2e154fa2ec540) #11, !dbg !3070
  %_26 = icmp ugt i32 %_27, %_28, !dbg !3069
  br i1 %_26, label %bb12, label %bb23, !dbg !3069

bb7:                                              ; preds = %bb4
  %_21 = load i32, ptr %temp, align 4, !dbg !3071
  %_20 = ashr i32 %_21, 9, !dbg !3072
  store i32 %_20, ptr %code_len.dbg.spill, align 4, !dbg !3072
    #dbg_declare(ptr %code_len.dbg.spill, !3019, !DIExpression(), !3073)
  %11 = icmp eq i32 %_20, 0, !dbg !3074
  br i1 %11, label %bb23, label %bb9, !dbg !3074

bb23:                                             ; preds = %bb9, %bb7, %bb22, %bb10
  store i8 0, ptr %byte, align 1, !dbg !3075
; call miniz_oxide::inflate::core::read_byte
  %12 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h7b1b2fa669b71c3bE(ptr align 4 %in_iter, i32 %flags, ptr align 1 %byte) #11, !dbg !3076
  %a.0 = extractvalue { i8, i8 } %12, 0, !dbg !3076
  %a.1 = extractvalue { i8, i8 } %12, 1, !dbg !3076
  store i8 %a.0, ptr %a.dbg.spill, align 1, !dbg !3076
  %13 = getelementptr inbounds i8, ptr %a.dbg.spill, i32 1, !dbg !3076
  store i8 %a.1, ptr %13, align 1, !dbg !3076
    #dbg_declare(ptr %a.dbg.spill, !3025, !DIExpression(), !3077)
  %_59 = zext i8 %a.0 to i32, !dbg !3076
  %14 = icmp eq i32 %_59, 2, !dbg !3077
  br i1 %14, label %bb25, label %bb26, !dbg !3077

bb12:                                             ; preds = %bb10
  store i8 10, ptr %small.dbg.spill.i16, align 1
    #dbg_declare(ptr %small.dbg.spill.i16, !1898, !DIExpression(), !3078)
  store i32 10, ptr %code_len, align 4, !dbg !3080
  br label %bb13, !dbg !3080

bb13:                                             ; preds = %bb21, %bb12
  %_32 = icmp ult i32 %table, 3, !dbg !3081
  br i1 %_32, label %bb14, label %panic4, !dbg !3081

bb14:                                             ; preds = %bb13
  %_36 = load i32, ptr %temp, align 4, !dbg !3082
  %_35 = xor i32 %_36, -1, !dbg !3083
  %_40 = load i32, ptr %l, align 4, !dbg !3084
  %_41 = load i32, ptr %code_len, align 4, !dbg !3085
  %_42 = icmp ult i32 %_41, 32, !dbg !3086
  br i1 %_42, label %bb15, label %panic5, !dbg !3086

panic4:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_d0afabfd5ae89d05560d528421321a29) #12, !dbg !3081
  unreachable, !dbg !3081

bb15:                                             ; preds = %bb14
  %15 = and i32 %_41, 31, !dbg !3086
  %_39 = lshr i32 %_40, %15, !dbg !3086
  %_38 = and i32 %_39, 1, !dbg !3087
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_35, i32 %_38), !dbg !3088
  %_43.0 = extractvalue { i32, i1 } %16, 0, !dbg !3088
  %_43.1 = extractvalue { i32, i1 } %16, 1, !dbg !3088
  br i1 %_43.1, label %panic6, label %bb16, !dbg !3088

panic5:                                           ; preds = %bb14
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_a8bf95fd6d21c623751f4befdae5fda3) #12, !dbg !3086
  unreachable, !dbg !3086

bb16:                                             ; preds = %bb15
  %_44 = icmp ult i32 %_43.0, 576, !dbg !3081
  br i1 %_44, label %bb17, label %panic7, !dbg !3081

panic6:                                           ; preds = %bb15
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6f411ad70be1bdcc1931ba935fab83a0) #12, !dbg !3088
  unreachable, !dbg !3088

bb17:                                             ; preds = %bb16
  %17 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3081
  %18 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %17, i32 %table, !dbg !3081
  %19 = getelementptr inbounds i8, ptr %18, i32 2048, !dbg !3081
  %20 = getelementptr inbounds nuw i16, ptr %19, i32 %_43.0, !dbg !3081
  %_31 = load i16, ptr %20, align 2, !dbg !3081
  store i16 %_31, ptr %small.dbg.spill.i19, align 2
    #dbg_declare(ptr %small.dbg.spill.i19, !2545, !DIExpression(), !3089)
  %_0.i20 = sext i16 %_31 to i32, !dbg !3091
  store i32 %_0.i20, ptr %temp, align 4, !dbg !3092
  %21 = load i32, ptr %code_len, align 4, !dbg !3093
  %_45.0 = add i32 %21, 1, !dbg !3093
  %_45.1 = icmp ult i32 %_45.0, %21, !dbg !3093
  br i1 %_45.1, label %panic8, label %bb19, !dbg !3093

panic7:                                           ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_43.0, i32 576, ptr align 4 @alloc_d0afabfd5ae89d05560d528421321a29) #12, !dbg !3081
  unreachable, !dbg !3081

bb19:                                             ; preds = %bb17
  store i32 %_45.0, ptr %code_len, align 4, !dbg !3093
  %_47 = load i32, ptr %temp, align 4, !dbg !3094
  %_46 = icmp sge i32 %_47, 0, !dbg !3094
  br i1 %_46, label %bb22, label %bb20, !dbg !3094

panic8:                                           ; preds = %bb17
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_331d6237e0e062a07b9615becd556ecd) #12, !dbg !3093
  unreachable, !dbg !3093

bb20:                                             ; preds = %bb19
  %22 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3095
  %_49 = load i32, ptr %22, align 4, !dbg !3095
  %_51 = load i32, ptr %code_len, align 4, !dbg !3096
  %_52.0 = add i32 %_51, 1, !dbg !3096
  %_52.1 = icmp ult i32 %_52.0, %_51, !dbg !3096
  br i1 %_52.1, label %panic9, label %bb21, !dbg !3096

bb22:                                             ; preds = %bb21, %bb19
  %_54 = load i32, ptr %temp, align 4, !dbg !3097
  %_53 = icmp sge i32 %_54, 0, !dbg !3097
  br i1 %_53, label %bb35, label %bb23, !dbg !3097

bb21:                                             ; preds = %bb20
  %_48 = icmp ult i32 %_49, %_52.0, !dbg !3095
  br i1 %_48, label %bb22, label %bb13, !dbg !3095

panic9:                                           ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_417254301495c861b0fd81538a5e29e3) #12, !dbg !3096
  unreachable, !dbg !3096

bb9:                                              ; preds = %bb7
  %23 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3098
  %_25 = load i32, ptr %23, align 4, !dbg !3098
  %_24 = icmp uge i32 %_25, %_20, !dbg !3099
  br i1 %_24, label %bb35, label %bb23, !dbg !3099

bb25:                                             ; preds = %bb23
  store i8 %a.0, ptr %_0, align 1, !dbg !3100
  %24 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3100
  store i8 %a.1, ptr %24, align 1, !dbg !3100
  br label %bb47, !dbg !3101

bb26:                                             ; preds = %bb23
  %_62 = load i8, ptr %byte, align 1, !dbg !3102
  store i8 %_62, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !3103)
  %_0.i = zext i8 %_62 to i32, !dbg !3105
  %25 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3106
  %_63 = load i32, ptr %25, align 4, !dbg !3106
  %_64 = icmp ult i32 %_63, 32, !dbg !3107
  br i1 %_64, label %bb28, label %panic10, !dbg !3107

bb47:                                             ; preds = %bb46, %bb25
  %26 = load i8, ptr %_0, align 1, !dbg !3108
  %27 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3108
  %28 = load i8, ptr %27, align 1, !dbg !3108
  %29 = insertvalue { i8, i8 } poison, i8 %26, 0, !dbg !3108
  %30 = insertvalue { i8, i8 } %29, i8 %28, 1, !dbg !3108
  ret { i8, i8 } %30, !dbg !3108

bb28:                                             ; preds = %bb26
  %31 = and i32 %_63, 31, !dbg !3107
  %_60 = shl i32 %_0.i, %31, !dbg !3107
  %32 = load i32, ptr %l, align 4, !dbg !3109
  %33 = or i32 %32, %_60, !dbg !3109
  store i32 %33, ptr %l, align 4, !dbg !3109
  %34 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3110
  %35 = load i32, ptr %34, align 4, !dbg !3110
  %_65.0 = add i32 %35, 8, !dbg !3110
  %_65.1 = icmp ult i32 %_65.0, %35, !dbg !3110
  br i1 %_65.1, label %panic11, label %bb29, !dbg !3110

panic10:                                          ; preds = %bb26
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_ea95518e223605bc4ba92c6aabe2dbae) #12, !dbg !3107
  unreachable, !dbg !3107

bb29:                                             ; preds = %bb28
  %36 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3110
  store i32 %_65.0, ptr %36, align 4, !dbg !3110
  %37 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3111
  %_67 = load i32, ptr %37, align 4, !dbg !3111
  %_66 = icmp uge i32 %_67, 15, !dbg !3111
  br i1 %_66, label %bb35, label %bb3, !dbg !3111

panic11:                                          ; preds = %bb28
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_e8fc89260548ca3b0bb8d9359780de36) #12, !dbg !3110
  unreachable, !dbg !3110

bb36:                                             ; preds = %bb35
  %38 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3047
  %_76 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %38, i32 %table, !dbg !3047
  %_78 = load i32, ptr %l, align 4, !dbg !3112
; call miniz_oxide::inflate::core::HuffmanTable::fast_lookup
  %_75 = call i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %_76, i32 %_78) #11, !dbg !3113
  store i16 %_75, ptr %small.dbg.spill.i17, align 2
    #dbg_declare(ptr %small.dbg.spill.i17, !2545, !DIExpression(), !3114)
  %_0.i18 = sext i16 %_75 to i32, !dbg !3116
  store i32 %_0.i18, ptr %symbol, align 4, !dbg !3117
  %_81 = load i32, ptr %symbol, align 4, !dbg !3118
  %_80 = icmp sge i32 %_81, 0, !dbg !3118
  br i1 %_80, label %bb39, label %bb41, !dbg !3118

panic12:                                          ; preds = %bb35
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_53c93c07783c0bf2fbf8ccc7de799521) #12, !dbg !3047
  unreachable, !dbg !3047

bb41:                                             ; preds = %bb36
  %_88 = icmp ult i32 %table, 3, !dbg !3119
  br i1 %_88, label %bb42, label %panic13, !dbg !3119

bb39:                                             ; preds = %bb36
  %_83 = load i32, ptr %symbol, align 4, !dbg !3120
  %_82 = ashr i32 %_83, 9, !dbg !3121
  store i32 %_82, ptr %code_len1, align 4, !dbg !3122
  %39 = load i32, ptr %symbol, align 4, !dbg !3123
  %40 = and i32 %39, 511, !dbg !3123
  store i32 %40, ptr %symbol, align 4, !dbg !3123
  br label %bb44, !dbg !3124

bb42:                                             ; preds = %bb41
  %41 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3119
  %_87 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %41, i32 %table, !dbg !3119
  %_89 = load i32, ptr %symbol, align 4, !dbg !3125
  %_90 = load i32, ptr %l, align 4, !dbg !3126
; call miniz_oxide::inflate::core::HuffmanTable::tree_lookup
  %42 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable11tree_lookup17he82124e89c020007E(ptr align 2 %_87, i32 %_89, i32 %_90, i8 10) #11, !dbg !3127
  %res.0 = extractvalue { i32, i32 } %42, 0, !dbg !3127
  %res.1 = extractvalue { i32, i32 } %42, 1, !dbg !3127
  store i32 %res.0, ptr %res.dbg.spill, align 4, !dbg !3127
  %43 = getelementptr inbounds i8, ptr %res.dbg.spill, i32 4, !dbg !3127
  store i32 %res.1, ptr %43, align 4, !dbg !3127
    #dbg_declare(ptr %res.dbg.spill, !3031, !DIExpression(), !3128)
  store i32 %res.0, ptr %symbol, align 4, !dbg !3129
  store i32 %res.1, ptr %code_len1, align 4, !dbg !3130
  br label %bb44, !dbg !3124

panic13:                                          ; preds = %bb41
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_99ef17e350657092159ac7b9b635fff1) #12, !dbg !3119
  unreachable, !dbg !3119

bb44:                                             ; preds = %bb39, %bb42
  %_93 = load i32, ptr %code_len1, align 4, !dbg !3131
  %_94 = icmp ult i32 %_93, 32, !dbg !3132
  br i1 %_94, label %bb45, label %panic14, !dbg !3132

bb45:                                             ; preds = %bb44
  %44 = load i32, ptr %l, align 4, !dbg !3132
  %45 = and i32 %_93, 31, !dbg !3132
  %46 = lshr i32 %44, %45, !dbg !3132
  store i32 %46, ptr %l, align 4, !dbg !3132
  %_95 = load i32, ptr %code_len1, align 4, !dbg !3133
  %47 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3134
  %48 = load i32, ptr %47, align 4, !dbg !3134
  %_96.0 = sub i32 %48, %_95, !dbg !3134
  %_96.1 = icmp ult i32 %48, %_95, !dbg !3134
  br i1 %_96.1, label %panic15, label %bb46, !dbg !3134

panic14:                                          ; preds = %bb44
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_96e01175af41f1858b89b6e986d44c7f) #12, !dbg !3132
  unreachable, !dbg !3132

bb46:                                             ; preds = %bb45
  %49 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3134
  store i32 %_96.0, ptr %49, align 4, !dbg !3134
  %_99 = load i32, ptr %symbol, align 4, !dbg !3135
  store ptr %r, ptr %_98, align 4, !dbg !3136
  %50 = getelementptr inbounds i8, ptr %_98, i32 4, !dbg !3136
  store ptr %l, ptr %50, align 4, !dbg !3136
  %51 = getelementptr inbounds i8, ptr %_98, i32 8, !dbg !3136
  store i32 %_99, ptr %51, align 4, !dbg !3136
  %52 = load ptr, ptr %_98, align 4, !dbg !3136
  %53 = getelementptr inbounds i8, ptr %_98, i32 4, !dbg !3136
  %54 = load ptr, ptr %53, align 4, !dbg !3136
  %55 = getelementptr inbounds i8, ptr %_98, i32 8, !dbg !3136
  %56 = load i32, ptr %55, align 4, !dbg !3136
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %57 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha5a366ff3493ef81E"(ptr align 4 %52, ptr align 4 %54, i32 %56) #11, !dbg !3136
  %58 = extractvalue { i8, i8 } %57, 0, !dbg !3136
  %59 = extractvalue { i8, i8 } %57, 1, !dbg !3136
  store i8 %58, ptr %_0, align 1, !dbg !3136
  %60 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3136
  store i8 %59, ptr %60, align 1, !dbg !3136
  br label %bb47, !dbg !3136

panic15:                                          ; preds = %bb45
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_169f4db56151f343266d09fcb2ca383b) #12, !dbg !3134
  unreachable, !dbg !3134
}

; miniz_oxide::inflate::core::decode_huffman_code
; Function Attrs: nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core19decode_huffman_code17h62cf9ab19ba26023E(ptr align 4 %r, ptr align 4 %l, i32 %table, i32 %flags, ptr align 4 %in_iter) unnamed_addr #1 !dbg !3137 {
start:
  %small.dbg.spill.i23 = alloca [2 x i8], align 2
  %small.dbg.spill.i21 = alloca [2 x i8], align 2
  %small.dbg.spill.i19 = alloca [2 x i8], align 2
  %small.dbg.spill.i17 = alloca [2 x i8], align 2
  %small.dbg.spill.i16 = alloca [1 x i8], align 1
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %res.dbg.spill = alloca [8 x i8], align 4
  %a.dbg.spill = alloca [2 x i8], align 1
  %code_len.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %table.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %r.dbg.spill = alloca [4 x i8], align 4
  %_98 = alloca [12 x i8], align 4
  %code_len1 = alloca [4 x i8], align 4
  %symbol = alloca [4 x i8], align 4
  %byte = alloca [1 x i8], align 1
  %code_len = alloca [4 x i8], align 4
  %temp = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !3141, !DIExpression(), !3165)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !3142, !DIExpression(), !3166)
  store i32 %table, ptr %table.dbg.spill, align 4
    #dbg_declare(ptr %table.dbg.spill, !3143, !DIExpression(), !3167)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !3144, !DIExpression(), !3168)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !3145, !DIExpression(), !3169)
    #dbg_declare(ptr %f.dbg.spill, !3146, !DIExpression(), !3170)
    #dbg_declare(ptr %temp, !3147, !DIExpression(), !3171)
    #dbg_declare(ptr %code_len, !3151, !DIExpression(), !3172)
    #dbg_declare(ptr %byte, !3153, !DIExpression(), !3173)
    #dbg_declare(ptr %symbol, !3157, !DIExpression(), !3174)
    #dbg_declare(ptr %code_len1, !3159, !DIExpression(), !3175)
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3176
  %_8 = load i32, ptr %0, align 4, !dbg !3176
  %_7 = icmp ult i32 %_8, 15, !dbg !3176
  br i1 %_7, label %bb1, label %bb35, !dbg !3176

bb35:                                             ; preds = %bb29, %bb9, %bb22, %bb34, %start
  %_77 = icmp ult i32 %table, 3, !dbg !3177
  br i1 %_77, label %bb36, label %panic12, !dbg !3177

bb1:                                              ; preds = %start
  store ptr %in_iter, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1071, !DIExpression(), !3178)
  %_2.0.i = load ptr, ptr %in_iter, align 4, !dbg !3180
  %1 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !3180
  %_2.1.i = load i32, ptr %1, align 4, !dbg !3180
  %_9 = icmp ult i32 %_2.1.i, 2, !dbg !3181
  br i1 %_9, label %bb3, label %bb30, !dbg !3181

bb30:                                             ; preds = %bb1
; call miniz_oxide::inflate::core::read_u16_le
  %_70 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !3182
  store i16 %_70, ptr %small.dbg.spill.i23, align 2
    #dbg_declare(ptr %small.dbg.spill.i23, !1088, !DIExpression(), !3183)
  %_0.i24 = zext i16 %_70 to i32, !dbg !3185
  %2 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3186
  %_71 = load i32, ptr %2, align 4, !dbg !3186
  %_72 = icmp ult i32 %_71, 32, !dbg !3187
  br i1 %_72, label %bb33, label %panic, !dbg !3187

bb3:                                              ; preds = %bb29, %bb1
  %_15 = icmp ult i32 %table, 3, !dbg !3188
  br i1 %_15, label %bb4, label %panic3, !dbg !3188

bb33:                                             ; preds = %bb30
  %3 = and i32 %_71, 31, !dbg !3187
  %_68 = shl i32 %_0.i24, %3, !dbg !3187
  %4 = load i32, ptr %l, align 4, !dbg !3189
  %5 = or i32 %4, %_68, !dbg !3189
  store i32 %5, ptr %l, align 4, !dbg !3189
  %6 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3190
  %7 = load i32, ptr %6, align 4, !dbg !3190
  %_73.0 = add i32 %7, 16, !dbg !3190
  %_73.1 = icmp ult i32 %_73.0, %7, !dbg !3190
  br i1 %_73.1, label %panic2, label %bb34, !dbg !3190

panic:                                            ; preds = %bb30
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_2b2838106b9c16bced83d3984f8fdeac) #12, !dbg !3187
  unreachable, !dbg !3187

bb34:                                             ; preds = %bb33
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3190
  store i32 %_73.0, ptr %8, align 4, !dbg !3190
  br label %bb35, !dbg !3191

panic2:                                           ; preds = %bb33
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_ec41b38738834a802c99909d4101a960) #12, !dbg !3190
  unreachable, !dbg !3190

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3188
  %_14 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %9, i32 %table, !dbg !3188
  %_16 = load i32, ptr %l, align 4, !dbg !3192
; call miniz_oxide::inflate::core::HuffmanTable::fast_lookup
  %_13 = call i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %_14, i32 %_16) #11, !dbg !3193
  store i16 %_13, ptr %small.dbg.spill.i21, align 2
    #dbg_declare(ptr %small.dbg.spill.i21, !2545, !DIExpression(), !3194)
  %_0.i22 = sext i16 %_13 to i32, !dbg !3196
  store i32 %_0.i22, ptr %temp, align 4, !dbg !3197
  %_18 = load i32, ptr %temp, align 4, !dbg !3198
  %_17 = icmp sge i32 %_18, 0, !dbg !3198
  br i1 %_17, label %bb7, label %bb10, !dbg !3198

panic3:                                           ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_a5b2018e5dafea63de5bf3fc5f4233fa) #12, !dbg !3188
  unreachable, !dbg !3188

bb10:                                             ; preds = %bb4
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3199
  %_27 = load i32, ptr %10, align 4, !dbg !3199
; call <T as core::convert::Into<U>>::into
  %_28 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd2f0d712f59e2a35E"(i8 10, ptr align 4 @alloc_077fda8295f527d837c2e154fa2ec540) #11, !dbg !3200
  %_26 = icmp ugt i32 %_27, %_28, !dbg !3199
  br i1 %_26, label %bb12, label %bb23, !dbg !3199

bb7:                                              ; preds = %bb4
  %_21 = load i32, ptr %temp, align 4, !dbg !3201
  %_20 = ashr i32 %_21, 9, !dbg !3202
  store i32 %_20, ptr %code_len.dbg.spill, align 4, !dbg !3202
    #dbg_declare(ptr %code_len.dbg.spill, !3149, !DIExpression(), !3203)
  %11 = icmp eq i32 %_20, 0, !dbg !3204
  br i1 %11, label %bb23, label %bb9, !dbg !3204

bb23:                                             ; preds = %bb9, %bb7, %bb22, %bb10
  store i8 0, ptr %byte, align 1, !dbg !3205
; call miniz_oxide::inflate::core::read_byte
  %12 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17ha995b252fff8c9f5E(ptr align 4 %in_iter, i32 %flags, ptr align 1 %byte) #11, !dbg !3206
  %a.0 = extractvalue { i8, i8 } %12, 0, !dbg !3206
  %a.1 = extractvalue { i8, i8 } %12, 1, !dbg !3206
  store i8 %a.0, ptr %a.dbg.spill, align 1, !dbg !3206
  %13 = getelementptr inbounds i8, ptr %a.dbg.spill, i32 1, !dbg !3206
  store i8 %a.1, ptr %13, align 1, !dbg !3206
    #dbg_declare(ptr %a.dbg.spill, !3155, !DIExpression(), !3207)
  %_59 = zext i8 %a.0 to i32, !dbg !3206
  %14 = icmp eq i32 %_59, 2, !dbg !3207
  br i1 %14, label %bb25, label %bb26, !dbg !3207

bb12:                                             ; preds = %bb10
  store i8 10, ptr %small.dbg.spill.i16, align 1
    #dbg_declare(ptr %small.dbg.spill.i16, !1898, !DIExpression(), !3208)
  store i32 10, ptr %code_len, align 4, !dbg !3210
  br label %bb13, !dbg !3210

bb13:                                             ; preds = %bb21, %bb12
  %_32 = icmp ult i32 %table, 3, !dbg !3211
  br i1 %_32, label %bb14, label %panic4, !dbg !3211

bb14:                                             ; preds = %bb13
  %_36 = load i32, ptr %temp, align 4, !dbg !3212
  %_35 = xor i32 %_36, -1, !dbg !3213
  %_40 = load i32, ptr %l, align 4, !dbg !3214
  %_41 = load i32, ptr %code_len, align 4, !dbg !3215
  %_42 = icmp ult i32 %_41, 32, !dbg !3216
  br i1 %_42, label %bb15, label %panic5, !dbg !3216

panic4:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_d0afabfd5ae89d05560d528421321a29) #12, !dbg !3211
  unreachable, !dbg !3211

bb15:                                             ; preds = %bb14
  %15 = and i32 %_41, 31, !dbg !3216
  %_39 = lshr i32 %_40, %15, !dbg !3216
  %_38 = and i32 %_39, 1, !dbg !3217
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_35, i32 %_38), !dbg !3218
  %_43.0 = extractvalue { i32, i1 } %16, 0, !dbg !3218
  %_43.1 = extractvalue { i32, i1 } %16, 1, !dbg !3218
  br i1 %_43.1, label %panic6, label %bb16, !dbg !3218

panic5:                                           ; preds = %bb14
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_a8bf95fd6d21c623751f4befdae5fda3) #12, !dbg !3216
  unreachable, !dbg !3216

bb16:                                             ; preds = %bb15
  %_44 = icmp ult i32 %_43.0, 576, !dbg !3211
  br i1 %_44, label %bb17, label %panic7, !dbg !3211

panic6:                                           ; preds = %bb15
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6f411ad70be1bdcc1931ba935fab83a0) #12, !dbg !3218
  unreachable, !dbg !3218

bb17:                                             ; preds = %bb16
  %17 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3211
  %18 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %17, i32 %table, !dbg !3211
  %19 = getelementptr inbounds i8, ptr %18, i32 2048, !dbg !3211
  %20 = getelementptr inbounds nuw i16, ptr %19, i32 %_43.0, !dbg !3211
  %_31 = load i16, ptr %20, align 2, !dbg !3211
  store i16 %_31, ptr %small.dbg.spill.i19, align 2
    #dbg_declare(ptr %small.dbg.spill.i19, !2545, !DIExpression(), !3219)
  %_0.i20 = sext i16 %_31 to i32, !dbg !3221
  store i32 %_0.i20, ptr %temp, align 4, !dbg !3222
  %21 = load i32, ptr %code_len, align 4, !dbg !3223
  %_45.0 = add i32 %21, 1, !dbg !3223
  %_45.1 = icmp ult i32 %_45.0, %21, !dbg !3223
  br i1 %_45.1, label %panic8, label %bb19, !dbg !3223

panic7:                                           ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_43.0, i32 576, ptr align 4 @alloc_d0afabfd5ae89d05560d528421321a29) #12, !dbg !3211
  unreachable, !dbg !3211

bb19:                                             ; preds = %bb17
  store i32 %_45.0, ptr %code_len, align 4, !dbg !3223
  %_47 = load i32, ptr %temp, align 4, !dbg !3224
  %_46 = icmp sge i32 %_47, 0, !dbg !3224
  br i1 %_46, label %bb22, label %bb20, !dbg !3224

panic8:                                           ; preds = %bb17
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_331d6237e0e062a07b9615becd556ecd) #12, !dbg !3223
  unreachable, !dbg !3223

bb20:                                             ; preds = %bb19
  %22 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3225
  %_49 = load i32, ptr %22, align 4, !dbg !3225
  %_51 = load i32, ptr %code_len, align 4, !dbg !3226
  %_52.0 = add i32 %_51, 1, !dbg !3226
  %_52.1 = icmp ult i32 %_52.0, %_51, !dbg !3226
  br i1 %_52.1, label %panic9, label %bb21, !dbg !3226

bb22:                                             ; preds = %bb21, %bb19
  %_54 = load i32, ptr %temp, align 4, !dbg !3227
  %_53 = icmp sge i32 %_54, 0, !dbg !3227
  br i1 %_53, label %bb35, label %bb23, !dbg !3227

bb21:                                             ; preds = %bb20
  %_48 = icmp ult i32 %_49, %_52.0, !dbg !3225
  br i1 %_48, label %bb22, label %bb13, !dbg !3225

panic9:                                           ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_417254301495c861b0fd81538a5e29e3) #12, !dbg !3226
  unreachable, !dbg !3226

bb9:                                              ; preds = %bb7
  %23 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3228
  %_25 = load i32, ptr %23, align 4, !dbg !3228
  %_24 = icmp uge i32 %_25, %_20, !dbg !3229
  br i1 %_24, label %bb35, label %bb23, !dbg !3229

bb25:                                             ; preds = %bb23
  store i8 %a.0, ptr %_0, align 1, !dbg !3230
  %24 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3230
  store i8 %a.1, ptr %24, align 1, !dbg !3230
  br label %bb47, !dbg !3231

bb26:                                             ; preds = %bb23
  %_62 = load i8, ptr %byte, align 1, !dbg !3232
  store i8 %_62, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !3233)
  %_0.i = zext i8 %_62 to i32, !dbg !3235
  %25 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3236
  %_63 = load i32, ptr %25, align 4, !dbg !3236
  %_64 = icmp ult i32 %_63, 32, !dbg !3237
  br i1 %_64, label %bb28, label %panic10, !dbg !3237

bb47:                                             ; preds = %bb46, %bb25
  %26 = load i8, ptr %_0, align 1, !dbg !3238
  %27 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3238
  %28 = load i8, ptr %27, align 1, !dbg !3238
  %29 = insertvalue { i8, i8 } poison, i8 %26, 0, !dbg !3238
  %30 = insertvalue { i8, i8 } %29, i8 %28, 1, !dbg !3238
  ret { i8, i8 } %30, !dbg !3238

bb28:                                             ; preds = %bb26
  %31 = and i32 %_63, 31, !dbg !3237
  %_60 = shl i32 %_0.i, %31, !dbg !3237
  %32 = load i32, ptr %l, align 4, !dbg !3239
  %33 = or i32 %32, %_60, !dbg !3239
  store i32 %33, ptr %l, align 4, !dbg !3239
  %34 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3240
  %35 = load i32, ptr %34, align 4, !dbg !3240
  %_65.0 = add i32 %35, 8, !dbg !3240
  %_65.1 = icmp ult i32 %_65.0, %35, !dbg !3240
  br i1 %_65.1, label %panic11, label %bb29, !dbg !3240

panic10:                                          ; preds = %bb26
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_ea95518e223605bc4ba92c6aabe2dbae) #12, !dbg !3237
  unreachable, !dbg !3237

bb29:                                             ; preds = %bb28
  %36 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3240
  store i32 %_65.0, ptr %36, align 4, !dbg !3240
  %37 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3241
  %_67 = load i32, ptr %37, align 4, !dbg !3241
  %_66 = icmp uge i32 %_67, 15, !dbg !3241
  br i1 %_66, label %bb35, label %bb3, !dbg !3241

panic11:                                          ; preds = %bb28
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_e8fc89260548ca3b0bb8d9359780de36) #12, !dbg !3240
  unreachable, !dbg !3240

bb36:                                             ; preds = %bb35
  %38 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3177
  %_76 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %38, i32 %table, !dbg !3177
  %_78 = load i32, ptr %l, align 4, !dbg !3242
; call miniz_oxide::inflate::core::HuffmanTable::fast_lookup
  %_75 = call i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %_76, i32 %_78) #11, !dbg !3243
  store i16 %_75, ptr %small.dbg.spill.i17, align 2
    #dbg_declare(ptr %small.dbg.spill.i17, !2545, !DIExpression(), !3244)
  %_0.i18 = sext i16 %_75 to i32, !dbg !3246
  store i32 %_0.i18, ptr %symbol, align 4, !dbg !3247
  %_81 = load i32, ptr %symbol, align 4, !dbg !3248
  %_80 = icmp sge i32 %_81, 0, !dbg !3248
  br i1 %_80, label %bb39, label %bb41, !dbg !3248

panic12:                                          ; preds = %bb35
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_53c93c07783c0bf2fbf8ccc7de799521) #12, !dbg !3177
  unreachable, !dbg !3177

bb41:                                             ; preds = %bb36
  %_88 = icmp ult i32 %table, 3, !dbg !3249
  br i1 %_88, label %bb42, label %panic13, !dbg !3249

bb39:                                             ; preds = %bb36
  %_83 = load i32, ptr %symbol, align 4, !dbg !3250
  %_82 = ashr i32 %_83, 9, !dbg !3251
  store i32 %_82, ptr %code_len1, align 4, !dbg !3252
  %39 = load i32, ptr %symbol, align 4, !dbg !3253
  %40 = and i32 %39, 511, !dbg !3253
  store i32 %40, ptr %symbol, align 4, !dbg !3253
  br label %bb44, !dbg !3254

bb42:                                             ; preds = %bb41
  %41 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3249
  %_87 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %41, i32 %table, !dbg !3249
  %_89 = load i32, ptr %symbol, align 4, !dbg !3255
  %_90 = load i32, ptr %l, align 4, !dbg !3256
; call miniz_oxide::inflate::core::HuffmanTable::tree_lookup
  %42 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable11tree_lookup17he82124e89c020007E(ptr align 2 %_87, i32 %_89, i32 %_90, i8 10) #11, !dbg !3257
  %res.0 = extractvalue { i32, i32 } %42, 0, !dbg !3257
  %res.1 = extractvalue { i32, i32 } %42, 1, !dbg !3257
  store i32 %res.0, ptr %res.dbg.spill, align 4, !dbg !3257
  %43 = getelementptr inbounds i8, ptr %res.dbg.spill, i32 4, !dbg !3257
  store i32 %res.1, ptr %43, align 4, !dbg !3257
    #dbg_declare(ptr %res.dbg.spill, !3161, !DIExpression(), !3258)
  store i32 %res.0, ptr %symbol, align 4, !dbg !3259
  store i32 %res.1, ptr %code_len1, align 4, !dbg !3260
  br label %bb44, !dbg !3254

panic13:                                          ; preds = %bb41
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_99ef17e350657092159ac7b9b635fff1) #12, !dbg !3249
  unreachable, !dbg !3249

bb44:                                             ; preds = %bb39, %bb42
  %_93 = load i32, ptr %code_len1, align 4, !dbg !3261
  %_94 = icmp ult i32 %_93, 32, !dbg !3262
  br i1 %_94, label %bb45, label %panic14, !dbg !3262

bb45:                                             ; preds = %bb44
  %44 = load i32, ptr %l, align 4, !dbg !3262
  %45 = and i32 %_93, 31, !dbg !3262
  %46 = lshr i32 %44, %45, !dbg !3262
  store i32 %46, ptr %l, align 4, !dbg !3262
  %_95 = load i32, ptr %code_len1, align 4, !dbg !3263
  %47 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3264
  %48 = load i32, ptr %47, align 4, !dbg !3264
  %_96.0 = sub i32 %48, %_95, !dbg !3264
  %_96.1 = icmp ult i32 %48, %_95, !dbg !3264
  br i1 %_96.1, label %panic15, label %bb46, !dbg !3264

panic14:                                          ; preds = %bb44
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_96e01175af41f1858b89b6e986d44c7f) #12, !dbg !3262
  unreachable, !dbg !3262

bb46:                                             ; preds = %bb45
  %49 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3264
  store i32 %_96.0, ptr %49, align 4, !dbg !3264
  %_99 = load i32, ptr %symbol, align 4, !dbg !3265
  store ptr %r, ptr %_98, align 4, !dbg !3266
  %50 = getelementptr inbounds i8, ptr %_98, i32 4, !dbg !3266
  store ptr %l, ptr %50, align 4, !dbg !3266
  %51 = getelementptr inbounds i8, ptr %_98, i32 8, !dbg !3266
  store i32 %_99, ptr %51, align 4, !dbg !3266
  %52 = load ptr, ptr %_98, align 4, !dbg !3266
  %53 = getelementptr inbounds i8, ptr %_98, i32 4, !dbg !3266
  %54 = load ptr, ptr %53, align 4, !dbg !3266
  %55 = getelementptr inbounds i8, ptr %_98, i32 8, !dbg !3266
  %56 = load i32, ptr %55, align 4, !dbg !3266
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %57 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h8fc9a9f9ce92ab8fE"(ptr align 4 %52, ptr align 4 %54, i32 %56) #11, !dbg !3266
  %58 = extractvalue { i8, i8 } %57, 0, !dbg !3266
  %59 = extractvalue { i8, i8 } %57, 1, !dbg !3266
  store i8 %58, ptr %_0, align 1, !dbg !3266
  %60 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3266
  store i8 %59, ptr %60, align 1, !dbg !3266
  br label %bb47, !dbg !3266

panic15:                                          ; preds = %bb45
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_169f4db56151f343266d09fcb2ca383b) #12, !dbg !3264
  unreachable, !dbg !3264
}

; miniz_oxide::inflate::core::decode_huffman_code
; Function Attrs: nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core19decode_huffman_code17he1f07a3fb7651905E(ptr align 4 %r, ptr align 4 %l, i32 %table, i32 %flags, ptr align 4 %in_iter) unnamed_addr #1 !dbg !3267 {
start:
  %small.dbg.spill.i23 = alloca [2 x i8], align 2
  %small.dbg.spill.i21 = alloca [2 x i8], align 2
  %small.dbg.spill.i19 = alloca [2 x i8], align 2
  %small.dbg.spill.i17 = alloca [2 x i8], align 2
  %small.dbg.spill.i16 = alloca [1 x i8], align 1
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %res.dbg.spill = alloca [8 x i8], align 4
  %a.dbg.spill = alloca [2 x i8], align 1
  %code_len.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %table.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %r.dbg.spill = alloca [4 x i8], align 4
  %_98 = alloca [12 x i8], align 4
  %code_len1 = alloca [4 x i8], align 4
  %symbol = alloca [4 x i8], align 4
  %byte = alloca [1 x i8], align 1
  %code_len = alloca [4 x i8], align 4
  %temp = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !3271, !DIExpression(), !3295)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !3272, !DIExpression(), !3296)
  store i32 %table, ptr %table.dbg.spill, align 4
    #dbg_declare(ptr %table.dbg.spill, !3273, !DIExpression(), !3297)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !3274, !DIExpression(), !3298)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !3275, !DIExpression(), !3299)
    #dbg_declare(ptr %f.dbg.spill, !3276, !DIExpression(), !3300)
    #dbg_declare(ptr %temp, !3277, !DIExpression(), !3301)
    #dbg_declare(ptr %code_len, !3281, !DIExpression(), !3302)
    #dbg_declare(ptr %byte, !3283, !DIExpression(), !3303)
    #dbg_declare(ptr %symbol, !3287, !DIExpression(), !3304)
    #dbg_declare(ptr %code_len1, !3289, !DIExpression(), !3305)
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3306
  %_8 = load i32, ptr %0, align 4, !dbg !3306
  %_7 = icmp ult i32 %_8, 15, !dbg !3306
  br i1 %_7, label %bb1, label %bb35, !dbg !3306

bb35:                                             ; preds = %bb29, %bb9, %bb22, %bb34, %start
  %_77 = icmp ult i32 %table, 3, !dbg !3307
  br i1 %_77, label %bb36, label %panic12, !dbg !3307

bb1:                                              ; preds = %start
  store ptr %in_iter, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1071, !DIExpression(), !3308)
  %_2.0.i = load ptr, ptr %in_iter, align 4, !dbg !3310
  %1 = getelementptr inbounds i8, ptr %in_iter, i32 4, !dbg !3310
  %_2.1.i = load i32, ptr %1, align 4, !dbg !3310
  %_9 = icmp ult i32 %_2.1.i, 2, !dbg !3311
  br i1 %_9, label %bb3, label %bb30, !dbg !3311

bb30:                                             ; preds = %bb1
; call miniz_oxide::inflate::core::read_u16_le
  %_70 = call i16 @_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E(ptr align 4 %in_iter) #11, !dbg !3312
  store i16 %_70, ptr %small.dbg.spill.i23, align 2
    #dbg_declare(ptr %small.dbg.spill.i23, !1088, !DIExpression(), !3313)
  %_0.i24 = zext i16 %_70 to i32, !dbg !3315
  %2 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3316
  %_71 = load i32, ptr %2, align 4, !dbg !3316
  %_72 = icmp ult i32 %_71, 32, !dbg !3317
  br i1 %_72, label %bb33, label %panic, !dbg !3317

bb3:                                              ; preds = %bb29, %bb1
  %_15 = icmp ult i32 %table, 3, !dbg !3318
  br i1 %_15, label %bb4, label %panic3, !dbg !3318

bb33:                                             ; preds = %bb30
  %3 = and i32 %_71, 31, !dbg !3317
  %_68 = shl i32 %_0.i24, %3, !dbg !3317
  %4 = load i32, ptr %l, align 4, !dbg !3319
  %5 = or i32 %4, %_68, !dbg !3319
  store i32 %5, ptr %l, align 4, !dbg !3319
  %6 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3320
  %7 = load i32, ptr %6, align 4, !dbg !3320
  %_73.0 = add i32 %7, 16, !dbg !3320
  %_73.1 = icmp ult i32 %_73.0, %7, !dbg !3320
  br i1 %_73.1, label %panic2, label %bb34, !dbg !3320

panic:                                            ; preds = %bb30
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_2b2838106b9c16bced83d3984f8fdeac) #12, !dbg !3317
  unreachable, !dbg !3317

bb34:                                             ; preds = %bb33
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3320
  store i32 %_73.0, ptr %8, align 4, !dbg !3320
  br label %bb35, !dbg !3321

panic2:                                           ; preds = %bb33
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_ec41b38738834a802c99909d4101a960) #12, !dbg !3320
  unreachable, !dbg !3320

bb4:                                              ; preds = %bb3
  %9 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3318
  %_14 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %9, i32 %table, !dbg !3318
  %_16 = load i32, ptr %l, align 4, !dbg !3322
; call miniz_oxide::inflate::core::HuffmanTable::fast_lookup
  %_13 = call i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %_14, i32 %_16) #11, !dbg !3323
  store i16 %_13, ptr %small.dbg.spill.i21, align 2
    #dbg_declare(ptr %small.dbg.spill.i21, !2545, !DIExpression(), !3324)
  %_0.i22 = sext i16 %_13 to i32, !dbg !3326
  store i32 %_0.i22, ptr %temp, align 4, !dbg !3327
  %_18 = load i32, ptr %temp, align 4, !dbg !3328
  %_17 = icmp sge i32 %_18, 0, !dbg !3328
  br i1 %_17, label %bb7, label %bb10, !dbg !3328

panic3:                                           ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_a5b2018e5dafea63de5bf3fc5f4233fa) #12, !dbg !3318
  unreachable, !dbg !3318

bb10:                                             ; preds = %bb4
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3329
  %_27 = load i32, ptr %10, align 4, !dbg !3329
; call <T as core::convert::Into<U>>::into
  %_28 = call i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd2f0d712f59e2a35E"(i8 10, ptr align 4 @alloc_077fda8295f527d837c2e154fa2ec540) #11, !dbg !3330
  %_26 = icmp ugt i32 %_27, %_28, !dbg !3329
  br i1 %_26, label %bb12, label %bb23, !dbg !3329

bb7:                                              ; preds = %bb4
  %_21 = load i32, ptr %temp, align 4, !dbg !3331
  %_20 = ashr i32 %_21, 9, !dbg !3332
  store i32 %_20, ptr %code_len.dbg.spill, align 4, !dbg !3332
    #dbg_declare(ptr %code_len.dbg.spill, !3279, !DIExpression(), !3333)
  %11 = icmp eq i32 %_20, 0, !dbg !3334
  br i1 %11, label %bb23, label %bb9, !dbg !3334

bb23:                                             ; preds = %bb9, %bb7, %bb22, %bb10
  store i8 0, ptr %byte, align 1, !dbg !3335
; call miniz_oxide::inflate::core::read_byte
  %12 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h505e12e5a9d5fe03E(ptr align 4 %in_iter, i32 %flags, ptr align 1 %byte) #11, !dbg !3336
  %a.0 = extractvalue { i8, i8 } %12, 0, !dbg !3336
  %a.1 = extractvalue { i8, i8 } %12, 1, !dbg !3336
  store i8 %a.0, ptr %a.dbg.spill, align 1, !dbg !3336
  %13 = getelementptr inbounds i8, ptr %a.dbg.spill, i32 1, !dbg !3336
  store i8 %a.1, ptr %13, align 1, !dbg !3336
    #dbg_declare(ptr %a.dbg.spill, !3285, !DIExpression(), !3337)
  %_59 = zext i8 %a.0 to i32, !dbg !3336
  %14 = icmp eq i32 %_59, 2, !dbg !3337
  br i1 %14, label %bb25, label %bb26, !dbg !3337

bb12:                                             ; preds = %bb10
  store i8 10, ptr %small.dbg.spill.i16, align 1
    #dbg_declare(ptr %small.dbg.spill.i16, !1898, !DIExpression(), !3338)
  store i32 10, ptr %code_len, align 4, !dbg !3340
  br label %bb13, !dbg !3340

bb13:                                             ; preds = %bb21, %bb12
  %_32 = icmp ult i32 %table, 3, !dbg !3341
  br i1 %_32, label %bb14, label %panic4, !dbg !3341

bb14:                                             ; preds = %bb13
  %_36 = load i32, ptr %temp, align 4, !dbg !3342
  %_35 = xor i32 %_36, -1, !dbg !3343
  %_40 = load i32, ptr %l, align 4, !dbg !3344
  %_41 = load i32, ptr %code_len, align 4, !dbg !3345
  %_42 = icmp ult i32 %_41, 32, !dbg !3346
  br i1 %_42, label %bb15, label %panic5, !dbg !3346

panic4:                                           ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_d0afabfd5ae89d05560d528421321a29) #12, !dbg !3341
  unreachable, !dbg !3341

bb15:                                             ; preds = %bb14
  %15 = and i32 %_41, 31, !dbg !3346
  %_39 = lshr i32 %_40, %15, !dbg !3346
  %_38 = and i32 %_39, 1, !dbg !3347
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %_35, i32 %_38), !dbg !3348
  %_43.0 = extractvalue { i32, i1 } %16, 0, !dbg !3348
  %_43.1 = extractvalue { i32, i1 } %16, 1, !dbg !3348
  br i1 %_43.1, label %panic6, label %bb16, !dbg !3348

panic5:                                           ; preds = %bb14
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_a8bf95fd6d21c623751f4befdae5fda3) #12, !dbg !3346
  unreachable, !dbg !3346

bb16:                                             ; preds = %bb15
  %_44 = icmp ult i32 %_43.0, 576, !dbg !3341
  br i1 %_44, label %bb17, label %panic7, !dbg !3341

panic6:                                           ; preds = %bb15
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6f411ad70be1bdcc1931ba935fab83a0) #12, !dbg !3348
  unreachable, !dbg !3348

bb17:                                             ; preds = %bb16
  %17 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3341
  %18 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %17, i32 %table, !dbg !3341
  %19 = getelementptr inbounds i8, ptr %18, i32 2048, !dbg !3341
  %20 = getelementptr inbounds nuw i16, ptr %19, i32 %_43.0, !dbg !3341
  %_31 = load i16, ptr %20, align 2, !dbg !3341
  store i16 %_31, ptr %small.dbg.spill.i19, align 2
    #dbg_declare(ptr %small.dbg.spill.i19, !2545, !DIExpression(), !3349)
  %_0.i20 = sext i16 %_31 to i32, !dbg !3351
  store i32 %_0.i20, ptr %temp, align 4, !dbg !3352
  %21 = load i32, ptr %code_len, align 4, !dbg !3353
  %_45.0 = add i32 %21, 1, !dbg !3353
  %_45.1 = icmp ult i32 %_45.0, %21, !dbg !3353
  br i1 %_45.1, label %panic8, label %bb19, !dbg !3353

panic7:                                           ; preds = %bb16
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_43.0, i32 576, ptr align 4 @alloc_d0afabfd5ae89d05560d528421321a29) #12, !dbg !3341
  unreachable, !dbg !3341

bb19:                                             ; preds = %bb17
  store i32 %_45.0, ptr %code_len, align 4, !dbg !3353
  %_47 = load i32, ptr %temp, align 4, !dbg !3354
  %_46 = icmp sge i32 %_47, 0, !dbg !3354
  br i1 %_46, label %bb22, label %bb20, !dbg !3354

panic8:                                           ; preds = %bb17
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_331d6237e0e062a07b9615becd556ecd) #12, !dbg !3353
  unreachable, !dbg !3353

bb20:                                             ; preds = %bb19
  %22 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3355
  %_49 = load i32, ptr %22, align 4, !dbg !3355
  %_51 = load i32, ptr %code_len, align 4, !dbg !3356
  %_52.0 = add i32 %_51, 1, !dbg !3356
  %_52.1 = icmp ult i32 %_52.0, %_51, !dbg !3356
  br i1 %_52.1, label %panic9, label %bb21, !dbg !3356

bb22:                                             ; preds = %bb21, %bb19
  %_54 = load i32, ptr %temp, align 4, !dbg !3357
  %_53 = icmp sge i32 %_54, 0, !dbg !3357
  br i1 %_53, label %bb35, label %bb23, !dbg !3357

bb21:                                             ; preds = %bb20
  %_48 = icmp ult i32 %_49, %_52.0, !dbg !3355
  br i1 %_48, label %bb22, label %bb13, !dbg !3355

panic9:                                           ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_417254301495c861b0fd81538a5e29e3) #12, !dbg !3356
  unreachable, !dbg !3356

bb9:                                              ; preds = %bb7
  %23 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3358
  %_25 = load i32, ptr %23, align 4, !dbg !3358
  %_24 = icmp uge i32 %_25, %_20, !dbg !3359
  br i1 %_24, label %bb35, label %bb23, !dbg !3359

bb25:                                             ; preds = %bb23
  store i8 %a.0, ptr %_0, align 1, !dbg !3360
  %24 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3360
  store i8 %a.1, ptr %24, align 1, !dbg !3360
  br label %bb47, !dbg !3361

bb26:                                             ; preds = %bb23
  %_62 = load i8, ptr %byte, align 1, !dbg !3362
  store i8 %_62, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !3363)
  %_0.i = zext i8 %_62 to i32, !dbg !3365
  %25 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3366
  %_63 = load i32, ptr %25, align 4, !dbg !3366
  %_64 = icmp ult i32 %_63, 32, !dbg !3367
  br i1 %_64, label %bb28, label %panic10, !dbg !3367

bb47:                                             ; preds = %bb46, %bb25
  %26 = load i8, ptr %_0, align 1, !dbg !3368
  %27 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3368
  %28 = load i8, ptr %27, align 1, !dbg !3368
  %29 = insertvalue { i8, i8 } poison, i8 %26, 0, !dbg !3368
  %30 = insertvalue { i8, i8 } %29, i8 %28, 1, !dbg !3368
  ret { i8, i8 } %30, !dbg !3368

bb28:                                             ; preds = %bb26
  %31 = and i32 %_63, 31, !dbg !3367
  %_60 = shl i32 %_0.i, %31, !dbg !3367
  %32 = load i32, ptr %l, align 4, !dbg !3369
  %33 = or i32 %32, %_60, !dbg !3369
  store i32 %33, ptr %l, align 4, !dbg !3369
  %34 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3370
  %35 = load i32, ptr %34, align 4, !dbg !3370
  %_65.0 = add i32 %35, 8, !dbg !3370
  %_65.1 = icmp ult i32 %_65.0, %35, !dbg !3370
  br i1 %_65.1, label %panic11, label %bb29, !dbg !3370

panic10:                                          ; preds = %bb26
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_ea95518e223605bc4ba92c6aabe2dbae) #12, !dbg !3367
  unreachable, !dbg !3367

bb29:                                             ; preds = %bb28
  %36 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3370
  store i32 %_65.0, ptr %36, align 4, !dbg !3370
  %37 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3371
  %_67 = load i32, ptr %37, align 4, !dbg !3371
  %_66 = icmp uge i32 %_67, 15, !dbg !3371
  br i1 %_66, label %bb35, label %bb3, !dbg !3371

panic11:                                          ; preds = %bb28
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_e8fc89260548ca3b0bb8d9359780de36) #12, !dbg !3370
  unreachable, !dbg !3370

bb36:                                             ; preds = %bb35
  %38 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3307
  %_76 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %38, i32 %table, !dbg !3307
  %_78 = load i32, ptr %l, align 4, !dbg !3372
; call miniz_oxide::inflate::core::HuffmanTable::fast_lookup
  %_75 = call i16 @_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E(ptr align 2 %_76, i32 %_78) #11, !dbg !3373
  store i16 %_75, ptr %small.dbg.spill.i17, align 2
    #dbg_declare(ptr %small.dbg.spill.i17, !2545, !DIExpression(), !3374)
  %_0.i18 = sext i16 %_75 to i32, !dbg !3376
  store i32 %_0.i18, ptr %symbol, align 4, !dbg !3377
  %_81 = load i32, ptr %symbol, align 4, !dbg !3378
  %_80 = icmp sge i32 %_81, 0, !dbg !3378
  br i1 %_80, label %bb39, label %bb41, !dbg !3378

panic12:                                          ; preds = %bb35
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_53c93c07783c0bf2fbf8ccc7de799521) #12, !dbg !3307
  unreachable, !dbg !3307

bb41:                                             ; preds = %bb36
  %_88 = icmp ult i32 %table, 3, !dbg !3379
  br i1 %_88, label %bb42, label %panic13, !dbg !3379

bb39:                                             ; preds = %bb36
  %_83 = load i32, ptr %symbol, align 4, !dbg !3380
  %_82 = ashr i32 %_83, 9, !dbg !3381
  store i32 %_82, ptr %code_len1, align 4, !dbg !3382
  %39 = load i32, ptr %symbol, align 4, !dbg !3383
  %40 = and i32 %39, 511, !dbg !3383
  store i32 %40, ptr %symbol, align 4, !dbg !3383
  br label %bb44, !dbg !3384

bb42:                                             ; preds = %bb41
  %41 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3379
  %_87 = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %41, i32 %table, !dbg !3379
  %_89 = load i32, ptr %symbol, align 4, !dbg !3385
  %_90 = load i32, ptr %l, align 4, !dbg !3386
; call miniz_oxide::inflate::core::HuffmanTable::tree_lookup
  %42 = call { i32, i32 } @_ZN11miniz_oxide7inflate4core12HuffmanTable11tree_lookup17he82124e89c020007E(ptr align 2 %_87, i32 %_89, i32 %_90, i8 10) #11, !dbg !3387
  %res.0 = extractvalue { i32, i32 } %42, 0, !dbg !3387
  %res.1 = extractvalue { i32, i32 } %42, 1, !dbg !3387
  store i32 %res.0, ptr %res.dbg.spill, align 4, !dbg !3387
  %43 = getelementptr inbounds i8, ptr %res.dbg.spill, i32 4, !dbg !3387
  store i32 %res.1, ptr %43, align 4, !dbg !3387
    #dbg_declare(ptr %res.dbg.spill, !3291, !DIExpression(), !3388)
  store i32 %res.0, ptr %symbol, align 4, !dbg !3389
  store i32 %res.1, ptr %code_len1, align 4, !dbg !3390
  br label %bb44, !dbg !3384

panic13:                                          ; preds = %bb41
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %table, i32 3, ptr align 4 @alloc_99ef17e350657092159ac7b9b635fff1) #12, !dbg !3379
  unreachable, !dbg !3379

bb44:                                             ; preds = %bb39, %bb42
  %_93 = load i32, ptr %code_len1, align 4, !dbg !3391
  %_94 = icmp ult i32 %_93, 32, !dbg !3392
  br i1 %_94, label %bb45, label %panic14, !dbg !3392

bb45:                                             ; preds = %bb44
  %44 = load i32, ptr %l, align 4, !dbg !3392
  %45 = and i32 %_93, 31, !dbg !3392
  %46 = lshr i32 %44, %45, !dbg !3392
  store i32 %46, ptr %l, align 4, !dbg !3392
  %_95 = load i32, ptr %code_len1, align 4, !dbg !3393
  %47 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3394
  %48 = load i32, ptr %47, align 4, !dbg !3394
  %_96.0 = sub i32 %48, %_95, !dbg !3394
  %_96.1 = icmp ult i32 %48, %_95, !dbg !3394
  br i1 %_96.1, label %panic15, label %bb46, !dbg !3394

panic14:                                          ; preds = %bb44
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_96e01175af41f1858b89b6e986d44c7f) #12, !dbg !3392
  unreachable, !dbg !3392

bb46:                                             ; preds = %bb45
  %49 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3394
  store i32 %_96.0, ptr %49, align 4, !dbg !3394
  %_99 = load i32, ptr %symbol, align 4, !dbg !3395
  store ptr %r, ptr %_98, align 4, !dbg !3396
  %50 = getelementptr inbounds i8, ptr %_98, i32 4, !dbg !3396
  store ptr %l, ptr %50, align 4, !dbg !3396
  %51 = getelementptr inbounds i8, ptr %_98, i32 8, !dbg !3396
  store i32 %_99, ptr %51, align 4, !dbg !3396
  %52 = load ptr, ptr %_98, align 4, !dbg !3396
  %53 = getelementptr inbounds i8, ptr %_98, i32 4, !dbg !3396
  %54 = load ptr, ptr %53, align 4, !dbg !3396
  %55 = getelementptr inbounds i8, ptr %_98, i32 8, !dbg !3396
  %56 = load i32, ptr %55, align 4, !dbg !3396
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %57 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hd9dcc9bebd5a63daE"(ptr align 4 %52, ptr align 4 %54, i32 %56) #11, !dbg !3396
  %58 = extractvalue { i8, i8 } %57, 0, !dbg !3396
  %59 = extractvalue { i8, i8 } %57, 1, !dbg !3396
  store i8 %58, ptr %_0, align 1, !dbg !3396
  %60 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3396
  store i8 %59, ptr %60, align 1, !dbg !3396
  br label %bb47, !dbg !3396

panic15:                                          ; preds = %bb45
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_169f4db56151f343266d09fcb2ca383b) #12, !dbg !3394
  unreachable, !dbg !3394
}

; miniz_oxide::inflate::core::decode_huffman_code::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17h54553a1da39d5e2fE"(ptr align 1 %_1, i8 %b) unnamed_addr #0 !dbg !3397 {
start:
  %b.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3407, !DIExpression(DW_OP_deref), !3408)
  store i8 %b, ptr %b.dbg.spill, align 1
    #dbg_declare(ptr %b.dbg.spill, !3406, !DIExpression(), !3409)
  store i8 %b, ptr %_1, align 1, !dbg !3410
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !3411
}

; miniz_oxide::inflate::core::decode_huffman_code::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17hc9622de99ccb8765E"(ptr align 1 %_1, i8 %b) unnamed_addr #0 !dbg !3412 {
start:
  %b.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3420, !DIExpression(DW_OP_deref), !3421)
  store i8 %b, ptr %b.dbg.spill, align 1
    #dbg_declare(ptr %b.dbg.spill, !3419, !DIExpression(), !3422)
  store i8 %b, ptr %_1, align 1, !dbg !3423
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !3424
}

; miniz_oxide::inflate::core::decode_huffman_code::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17hf5d27689e5c7d0b5E"(ptr align 1 %_1, i8 %b) unnamed_addr #0 !dbg !3425 {
start:
  %b.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3433, !DIExpression(DW_OP_deref), !3434)
  store i8 %b, ptr %b.dbg.spill, align 1
    #dbg_declare(ptr %b.dbg.spill, !3432, !DIExpression(), !3435)
  store i8 %b, ptr %_1, align 1, !dbg !3436
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !3437
}

; miniz_oxide::inflate::core::validate_zlib_header
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core20validate_zlib_header17h2b66cafd9e179658E(i32 %cmf, i32 %flg, i32 %flags, i32 %mask) unnamed_addr #0 !dbg !3438 {
start:
  %window_size.dbg.spill = alloca [4 x i8], align 4
  %mask.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %flg.dbg.spill = alloca [4 x i8], align 4
  %cmf.dbg.spill = alloca [4 x i8], align 4
  %failed = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store i32 %cmf, ptr %cmf.dbg.spill, align 4
    #dbg_declare(ptr %cmf.dbg.spill, !3442, !DIExpression(), !3450)
  store i32 %flg, ptr %flg.dbg.spill, align 4
    #dbg_declare(ptr %flg.dbg.spill, !3443, !DIExpression(), !3451)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !3444, !DIExpression(), !3452)
  store i32 %mask, ptr %mask.dbg.spill, align 4
    #dbg_declare(ptr %mask.dbg.spill, !3445, !DIExpression(), !3453)
    #dbg_declare(ptr %failed, !3446, !DIExpression(), !3454)
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %cmf, i32 256), !dbg !3455
  %_9.0 = extractvalue { i32, i1 } %0, 0, !dbg !3455
  %_9.1 = extractvalue { i32, i1 } %0, 1, !dbg !3455
  br i1 %_9.1, label %panic, label %bb1, !dbg !3455

bb1:                                              ; preds = %start
  %_10.0 = add i32 %_9.0, %flg, !dbg !3456
  %_10.1 = icmp ult i32 %_10.0, %_9.0, !dbg !3456
  br i1 %_10.1, label %panic1, label %bb2, !dbg !3456

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hc3e0d809b0a12a70E(ptr align 4 @alloc_8797300dcb66f10a078ce11f5db6007f) #12, !dbg !3455
  unreachable, !dbg !3455

bb2:                                              ; preds = %bb1
  %_6 = urem i32 %_10.0, 31, !dbg !3456
  %1 = icmp eq i32 %_6, 0, !dbg !3457
  br i1 %1, label %bb4, label %bb5, !dbg !3457

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_18ec6e015d780168b03220cd81b8a45f) #12, !dbg !3456
  unreachable, !dbg !3456

bb4:                                              ; preds = %bb2
  %_12 = and i32 %flg, 32, !dbg !3458
  %2 = icmp eq i32 %_12, 0, !dbg !3459
  br i1 %2, label %bb6, label %bb5, !dbg !3459

bb5:                                              ; preds = %bb4, %bb2
  store i8 1, ptr %failed, align 1, !dbg !3457
  br label %bb7, !dbg !3457

bb6:                                              ; preds = %bb4
  %_13 = and i32 %cmf, 15, !dbg !3460
  %3 = icmp ne i32 %_13, 8, !dbg !3461
  %4 = zext i1 %3 to i8, !dbg !3461
  store i8 %4, ptr %failed, align 1, !dbg !3461
  br label %bb7, !dbg !3457

bb7:                                              ; preds = %bb5, %bb6
  %_16 = lshr i32 %cmf, 4, !dbg !3462
  %_19.0 = add i32 %_16, 8, !dbg !3463
  %_19.1 = icmp ult i32 %_19.0, %_16, !dbg !3463
  br i1 %_19.1, label %panic2, label %bb9, !dbg !3463

bb9:                                              ; preds = %bb7
  %_20 = icmp ult i32 %_19.0, 32, !dbg !3464
  br i1 %_20, label %bb10, label %panic3, !dbg !3464

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_0c2df93ba136a9eb61819c40c8cdc36a) #12, !dbg !3463
  unreachable, !dbg !3463

bb10:                                             ; preds = %bb9
  %5 = and i32 %_19.0, 31, !dbg !3464
  %window_size = shl i32 1, %5, !dbg !3464
  store i32 %window_size, ptr %window_size.dbg.spill, align 4, !dbg !3464
    #dbg_declare(ptr %window_size.dbg.spill, !3448, !DIExpression(), !3465)
  %_21 = and i32 %flags, 4, !dbg !3466
  %6 = icmp eq i32 %_21, 0, !dbg !3466
  br i1 %6, label %bb11, label %bb13, !dbg !3466

panic3:                                           ; preds = %bb9
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_8f56d9addd0f3f51d7b1a89b36e385b4) #12, !dbg !3464
  unreachable, !dbg !3464

bb11:                                             ; preds = %bb10
  %_24.0 = add i32 %mask, 1, !dbg !3467
  %_24.1 = icmp ult i32 %_24.0, %mask, !dbg !3467
  br i1 %_24.1, label %panic4, label %bb12, !dbg !3467

bb13:                                             ; preds = %bb12, %bb10
  %_25 = icmp ugt i32 %window_size, 32768, !dbg !3468
  %7 = load i8, ptr %failed, align 1, !dbg !3469
  %8 = trunc nuw i8 %7 to i1, !dbg !3469
  %9 = or i1 %8, %_25, !dbg !3469
  %10 = zext i1 %9 to i8, !dbg !3469
  store i8 %10, ptr %failed, align 1, !dbg !3469
  %11 = load i8, ptr %failed, align 1, !dbg !3470
  %_26 = trunc nuw i8 %11 to i1, !dbg !3470
  br i1 %_26, label %bb14, label %bb15, !dbg !3470

bb12:                                             ; preds = %bb11
  %_22 = icmp ult i32 %_24.0, %window_size, !dbg !3467
  %12 = load i8, ptr %failed, align 1, !dbg !3471
  %13 = trunc nuw i8 %12 to i1, !dbg !3471
  %14 = or i1 %13, %_22, !dbg !3471
  %15 = zext i1 %14 to i8, !dbg !3471
  store i8 %15, ptr %failed, align 1, !dbg !3471
  br label %bb13, !dbg !3472

panic4:                                           ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_cdd030fce5c7e36fd38dbd45971d5cef) #12, !dbg !3467
  unreachable, !dbg !3467

bb15:                                             ; preds = %bb13
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3473
  store i8 3, ptr %16, align 1, !dbg !3473
  store i8 1, ptr %_0, align 1, !dbg !3473
  br label %bb16, !dbg !3474

bb14:                                             ; preds = %bb13
  %17 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3475
  store i8 29, ptr %17, align 1, !dbg !3475
  store i8 1, ptr %_0, align 1, !dbg !3475
  br label %bb16, !dbg !3474

bb16:                                             ; preds = %bb14, %bb15
  %18 = load i8, ptr %_0, align 1, !dbg !3476
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3476
  %20 = load i8, ptr %19, align 1, !dbg !3476
  %21 = insertvalue { i8, i8 } poison, i8 %18, 0, !dbg !3476
  %22 = insertvalue { i8, i8 } %21, i8 %20, 1, !dbg !3476
  ret { i8, i8 } %22, !dbg !3476
}

; miniz_oxide::inflate::core::State::begin
; Function Attrs: inlinehint nounwind
define internal void @_ZN11miniz_oxide7inflate4core5State5begin17h473fee2d18192297E(ptr align 1 %self, i8 %new_state) unnamed_addr #0 !dbg !3477 {
start:
  %new_state.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3483, !DIExpression(), !3485)
  store i8 %new_state, ptr %new_state.dbg.spill, align 1
    #dbg_declare(ptr %new_state.dbg.spill, !3484, !DIExpression(), !3486)
  store i8 %new_state, ptr %self, align 1, !dbg !3487
  ret void, !dbg !3488
}

; miniz_oxide::inflate::core::transfer
; Function Attrs: inlinehint nounwind
define internal void @_ZN11miniz_oxide7inflate4core8transfer17h1bd7e969a6e5edcdE(ptr align 1 %out_slice.0, i32 %out_slice.1, i32 %0, i32 %1, i32 %match_len, i32 %out_buf_size_mask) unnamed_addr #0 !dbg !3489 {
start:
  %index.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i63 = alloca [8 x i8], align 4
  %2 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i60 = alloca [4 x i8], align 4
  %self.dbg.spill.i61 = alloca [4 x i8], align 4
  %3 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i57 = alloca [4 x i8], align 4
  %self.dbg.spill.i58 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %end_pos.dbg.spill31 = alloca [4 x i8], align 4
  %end_pos.dbg.spill11 = alloca [4 x i8], align 4
  %init.dbg.spill = alloca [1 x i8], align 1
  %end.dbg.spill = alloca [4 x i8], align 4
  %end_pos.dbg.spill = alloca [4 x i8], align 4
  %out_buf_size_mask.dbg.spill = alloca [4 x i8], align 4
  %match_len.dbg.spill = alloca [4 x i8], align 4
  %out_slice.dbg.spill = alloca [8 x i8], align 4
  %_73 = alloca [12 x i8], align 4
  %not_wrapping = alloca [1 x i8], align 1
  %source_diff = alloca [4 x i8], align 4
  %out_pos = alloca [4 x i8], align 4
  %source_pos = alloca [4 x i8], align 4
  store i32 %0, ptr %source_pos, align 4
  store i32 %1, ptr %out_pos, align 4
  store ptr %out_slice.0, ptr %out_slice.dbg.spill, align 4
  %4 = getelementptr inbounds i8, ptr %out_slice.dbg.spill, i32 4
  store i32 %out_slice.1, ptr %4, align 4
    #dbg_declare(ptr %out_slice.dbg.spill, !3491, !DIExpression(), !3510)
    #dbg_declare(ptr %source_pos, !3492, !DIExpression(), !3511)
    #dbg_declare(ptr %out_pos, !3493, !DIExpression(), !3512)
  store i32 %match_len, ptr %match_len.dbg.spill, align 4
    #dbg_declare(ptr %match_len.dbg.spill, !3494, !DIExpression(), !3513)
  store i32 %out_buf_size_mask, ptr %out_buf_size_mask.dbg.spill, align 4
    #dbg_declare(ptr %out_buf_size_mask.dbg.spill, !3495, !DIExpression(), !3514)
    #dbg_declare(ptr %source_diff, !3496, !DIExpression(), !3515)
    #dbg_declare(ptr %not_wrapping, !3498, !DIExpression(), !3516)
  %_8 = load i32, ptr %source_pos, align 4, !dbg !3517
  %_9 = load i32, ptr %out_pos, align 4, !dbg !3518
  %_7 = icmp ugt i32 %_8, %_9, !dbg !3517
  br i1 %_7, label %bb1, label %bb3, !dbg !3517

bb3:                                              ; preds = %start
  %_13 = load i32, ptr %out_pos, align 4, !dbg !3519
  %_14 = load i32, ptr %source_pos, align 4, !dbg !3520
  %_15.0 = sub i32 %_13, %_14, !dbg !3519
  %_15.1 = icmp ult i32 %_13, %_14, !dbg !3519
  br i1 %_15.1, label %panic, label %bb4, !dbg !3519

bb1:                                              ; preds = %start
  %_10 = load i32, ptr %source_pos, align 4, !dbg !3521
  %_11 = load i32, ptr %out_pos, align 4, !dbg !3522
  %_12.0 = sub i32 %_10, %_11, !dbg !3521
  %_12.1 = icmp ult i32 %_10, %_11, !dbg !3521
  br i1 %_12.1, label %panic1, label %bb2, !dbg !3521

bb4:                                              ; preds = %bb3
  store i32 %_15.0, ptr %source_diff, align 4, !dbg !3519
  br label %bb5, !dbg !3523

panic:                                            ; preds = %bb3
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_552728878a7a3dd05dac9ddff89d83bd) #12, !dbg !3519
  unreachable, !dbg !3519

bb5:                                              ; preds = %bb2, %bb4
  %_17 = icmp eq i32 %out_buf_size_mask, -1, !dbg !3524
  br i1 %_17, label %bb6, label %bb7, !dbg !3524

bb2:                                              ; preds = %bb1
  store i32 %_12.0, ptr %source_diff, align 4, !dbg !3521
  br label %bb5, !dbg !3523

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_492cfee548f2d16368661ae56a978ab0) #12, !dbg !3521
  unreachable, !dbg !3521

bb7:                                              ; preds = %bb5
  %_20 = load i32, ptr %source_pos, align 4, !dbg !3525
  %_21.0 = add i32 %_20, %match_len, !dbg !3526
  %_21.1 = icmp ult i32 %_21.0, %_20, !dbg !3526
  br i1 %_21.1, label %panic2, label %bb8, !dbg !3526

bb6:                                              ; preds = %bb5
  store i8 1, ptr %not_wrapping, align 1, !dbg !3524
  br label %bb10, !dbg !3524

bb8:                                              ; preds = %bb7
  store i32 %_21.0, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1577, !DIExpression(), !3527)
  store i32 3, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !1580, !DIExpression(), !3529)
  %_0.i = sub i32 %_21.0, 3, !dbg !3530
  %5 = icmp ult i32 %_0.i, %out_slice.1, !dbg !3531
  %6 = zext i1 %5 to i8, !dbg !3531
  store i8 %6, ptr %not_wrapping, align 1, !dbg !3531
  br label %bb10, !dbg !3524

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_e5a1af3595ffb51724955a741d2524d6) #12, !dbg !3526
  unreachable, !dbg !3526

bb10:                                             ; preds = %bb6, %bb8
  %_26 = lshr i32 %match_len, 2, !dbg !3532
  %7 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_26, i32 4), !dbg !3533
  %_29.0 = extractvalue { i32, i1 } %7, 0, !dbg !3533
  %_29.1 = extractvalue { i32, i1 } %7, 1, !dbg !3533
  br i1 %_29.1, label %panic3, label %bb12, !dbg !3533

bb12:                                             ; preds = %bb10
  %_30 = load i32, ptr %out_pos, align 4, !dbg !3534
  %_31.0 = add i32 %_29.0, %_30, !dbg !3533
  %_31.1 = icmp ult i32 %_31.0, %_29.0, !dbg !3533
  br i1 %_31.1, label %panic4, label %bb13, !dbg !3533

panic3:                                           ; preds = %bb10
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hc3e0d809b0a12a70E(ptr align 4 @alloc_54d8bfdbc8dd831cd66a5b7f2660688d) #12, !dbg !3533
  unreachable, !dbg !3533

bb13:                                             ; preds = %bb12
  store i32 %_31.0, ptr %end_pos.dbg.spill, align 4, !dbg !3533
    #dbg_declare(ptr %end_pos.dbg.spill, !3500, !DIExpression(), !3535)
  %8 = load i8, ptr %not_wrapping, align 1, !dbg !3536
  %_32 = trunc nuw i8 %8 to i1, !dbg !3536
  br i1 %_32, label %bb14, label %bb25, !dbg !3536

panic4:                                           ; preds = %bb12
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_54d8bfdbc8dd831cd66a5b7f2660688d) #12, !dbg !3533
  unreachable, !dbg !3533

bb25:                                             ; preds = %bb15, %bb14, %bb13
  %9 = load i8, ptr %not_wrapping, align 1, !dbg !3537
  %_57 = trunc nuw i8 %9 to i1, !dbg !3537
  br i1 %_57, label %bb26, label %bb38, !dbg !3537

bb14:                                             ; preds = %bb13
  %_33 = load i32, ptr %source_diff, align 4, !dbg !3538
  %10 = icmp eq i32 %_33, 1, !dbg !3538
  br i1 %10, label %bb15, label %bb25, !dbg !3538

bb15:                                             ; preds = %bb14
  %_35 = load i32, ptr %out_pos, align 4, !dbg !3539
  %_36 = load i32, ptr %source_pos, align 4, !dbg !3540
  %_34 = icmp ugt i32 %_35, %_36, !dbg !3539
  br i1 %_34, label %bb16, label %bb25, !dbg !3539

bb16:                                             ; preds = %bb15
  %_39 = lshr i32 %match_len, 2, !dbg !3541
  %11 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_39, i32 4), !dbg !3541
  %_42.0 = extractvalue { i32, i1 } %11, 0, !dbg !3541
  %_42.1 = extractvalue { i32, i1 } %11, 1, !dbg !3541
  br i1 %_42.1, label %panic5, label %bb18, !dbg !3541

bb18:                                             ; preds = %bb16
  %_43 = load i32, ptr %out_pos, align 4, !dbg !3542
  %_44.0 = add i32 %_42.0, %_43, !dbg !3541
  %_44.1 = icmp ult i32 %_44.0, %_42.0, !dbg !3541
  br i1 %_44.1, label %panic6, label %bb19, !dbg !3541

panic5:                                           ; preds = %bb16
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hc3e0d809b0a12a70E(ptr align 4 @alloc_eec930054f7dbce62e025e3dfac6e097) #12, !dbg !3541
  unreachable, !dbg !3541

bb19:                                             ; preds = %bb18
  store i32 %_44.0, ptr %end.dbg.spill, align 4, !dbg !3541
    #dbg_declare(ptr %end.dbg.spill, !3502, !DIExpression(), !3543)
  %_47 = load i32, ptr %out_pos, align 4, !dbg !3544
  %_48.0 = sub i32 %_47, 1, !dbg !3544
  %_48.1 = icmp ult i32 %_47, 1, !dbg !3544
  br i1 %_48.1, label %panic7, label %bb20, !dbg !3544

panic6:                                           ; preds = %bb18
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_eec930054f7dbce62e025e3dfac6e097) #12, !dbg !3541
  unreachable, !dbg !3541

bb20:                                             ; preds = %bb19
  %_51 = icmp ult i32 %_48.0, %out_slice.1, !dbg !3545
  br i1 %_51, label %bb21, label %panic8, !dbg !3545

panic7:                                           ; preds = %bb19
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_6672551fa5aa9229c4b083b168b48ce8) #12, !dbg !3544
  unreachable, !dbg !3544

bb21:                                             ; preds = %bb20
  %12 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_48.0, !dbg !3545
  %init = load i8, ptr %12, align 1, !dbg !3545
  store i8 %init, ptr %init.dbg.spill, align 1, !dbg !3545
    #dbg_declare(ptr %init.dbg.spill, !3504, !DIExpression(), !3546)
  %_55 = load i32, ptr %out_pos, align 4, !dbg !3547
  store ptr %out_slice.0, ptr %self.dbg.spill.i63, align 4
  %13 = getelementptr inbounds i8, ptr %self.dbg.spill.i63, i32 4
  store i32 %out_slice.1, ptr %13, align 4
    #dbg_declare(ptr %self.dbg.spill.i63, !700, !DIExpression(), !3548)
  store i32 %_55, ptr %index.dbg.spill.i, align 4
  %14 = getelementptr inbounds i8, ptr %index.dbg.spill.i, i32 4
  store i32 %_44.0, ptr %14, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !706, !DIExpression(), !3550)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %15 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32 %_55, i32 %_44.0, ptr align 1 %out_slice.0, i32 %out_slice.1, ptr align 4 @alloc_7b7ffdde34ed8725d3aec395d85a67ef) #11, !dbg !3551
  %_0.0.i = extractvalue { ptr, i32 } %15, 0, !dbg !3551
  %_0.1.i = extractvalue { ptr, i32 } %15, 1, !dbg !3551
  %_53.0 = extractvalue { ptr, i32 } %15, 0, !dbg !3552
  %_53.1 = extractvalue { ptr, i32 } %15, 1, !dbg !3552
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1 %_53.0, i32 %_53.1, i8 %init) #11, !dbg !3553
  store i32 %_44.0, ptr %out_pos, align 4, !dbg !3554
  %_56.0 = sub i32 %_44.0, 1, !dbg !3555
  %_56.1 = icmp ult i32 %_44.0, 1, !dbg !3555
  br i1 %_56.1, label %panic9, label %bb24, !dbg !3555

panic8:                                           ; preds = %bb20
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_48.0, i32 %out_slice.1, ptr align 4 @alloc_555f9899a34725685591fa92b18ee834) #12, !dbg !3545
  unreachable, !dbg !3545

bb24:                                             ; preds = %bb21
  store i32 %_56.0, ptr %source_pos, align 4, !dbg !3556
  br label %bb64, !dbg !3557

panic9:                                           ; preds = %bb21
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_28fba249518dca87b934457073f53758) #12, !dbg !3555
  unreachable, !dbg !3555

bb64:                                             ; preds = %bb31, %bb40, %bb24
  %_156 = and i32 %match_len, 3, !dbg !3558
  switch i32 %_156, label %bb65 [
    i32 0, label %bb99
    i32 1, label %bb68
    i32 2, label %bb67
    i32 3, label %bb66
  ], !dbg !3559

bb38:                                             ; preds = %bb28, %bb26, %bb25
  store i32 %out_slice.1, ptr %self.dbg.spill.i61, align 4
    #dbg_declare(ptr %self.dbg.spill.i61, !995, !DIExpression(), !3560)
  store i32 3, ptr %rhs.dbg.spill.i60, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i60, !1003, !DIExpression(), !3562)
  %16 = call i32 @llvm.usub.sat.i32(i32 %out_slice.1, i32 3), !dbg !3563
  store i32 %16, ptr %2, align 4, !dbg !3563
  %_0.i62 = load i32, ptr %2, align 4, !dbg !3563
; call core::cmp::min
  %end_pos = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %_31.0, i32 %_0.i62) #11, !dbg !3564
  store i32 %end_pos, ptr %end_pos.dbg.spill11, align 4, !dbg !3564
    #dbg_declare(ptr %end_pos.dbg.spill11, !3508, !DIExpression(), !3565)
  br label %bb40, !dbg !3564

bb26:                                             ; preds = %bb25
  %_59 = load i32, ptr %out_pos, align 4, !dbg !3566
  %_60 = load i32, ptr %source_pos, align 4, !dbg !3567
  %_58 = icmp ugt i32 %_59, %_60, !dbg !3566
  br i1 %_58, label %bb27, label %bb38, !dbg !3566

bb27:                                             ; preds = %bb26
  %_63 = load i32, ptr %out_pos, align 4, !dbg !3568
  %_64 = load i32, ptr %source_pos, align 4, !dbg !3569
  %_65.0 = sub i32 %_63, %_64, !dbg !3568
  %_65.1 = icmp ult i32 %_63, %_64, !dbg !3568
  br i1 %_65.1, label %panic10, label %bb28, !dbg !3568

bb28:                                             ; preds = %bb27
  %_61 = icmp uge i32 %_65.0, 4, !dbg !3570
  br i1 %_61, label %bb29, label %bb38, !dbg !3570

panic10:                                          ; preds = %bb27
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_3cfdf3ceed0e8fbdbdc687711e56665a) #12, !dbg !3568
  unreachable, !dbg !3568

bb29:                                             ; preds = %bb28
  store i32 %out_slice.1, ptr %self.dbg.spill.i58, align 4
    #dbg_declare(ptr %self.dbg.spill.i58, !995, !DIExpression(), !3571)
  store i32 3, ptr %rhs.dbg.spill.i57, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i57, !1003, !DIExpression(), !3573)
  %17 = call i32 @llvm.usub.sat.i32(i32 %out_slice.1, i32 3), !dbg !3574
  store i32 %17, ptr %3, align 4, !dbg !3574
  %_0.i59 = load i32, ptr %3, align 4, !dbg !3574
; call core::cmp::min
  %end_pos30 = call i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32 %_31.0, i32 %_0.i59) #11, !dbg !3575
  store i32 %end_pos30, ptr %end_pos.dbg.spill31, align 4, !dbg !3575
    #dbg_declare(ptr %end_pos.dbg.spill31, !3506, !DIExpression(), !3576)
  br label %bb31, !dbg !3575

bb40:                                             ; preds = %bb63, %bb38
  %_86 = load i32, ptr %out_pos, align 4, !dbg !3577
  %_85 = icmp ult i32 %_86, %end_pos, !dbg !3577
  br i1 %_85, label %bb41, label %bb64, !dbg !3577

bb41:                                             ; preds = %bb40
  %_89 = load i32, ptr %out_pos, align 4, !dbg !3578
  %_90.0 = add i32 %_89, 3, !dbg !3578
  %_90.1 = icmp ult i32 %_90.0, %_89, !dbg !3578
  br i1 %_90.1, label %panic12, label %bb42, !dbg !3578

bb42:                                             ; preds = %bb41
  %_87 = icmp ult i32 %_90.0, %out_slice.1, !dbg !3578
  br i1 %_87, label %bb43, label %bb44, !dbg !3578

panic12:                                          ; preds = %bb41
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_81e3b126bdddbe808b00b09391aea969) #12, !dbg !3578
  unreachable, !dbg !3578

bb44:                                             ; preds = %bb42
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_475b2b3a6af68ae925a8b274d31188c3, i32 47, ptr align 4 @alloc_684d3c192f2612b478daf1607cf91975) #12, !dbg !3579
  unreachable, !dbg !3579

bb43:                                             ; preds = %bb42
  %_97 = load i32, ptr %source_pos, align 4, !dbg !3580
  %_98.0 = add i32 %_97, 3, !dbg !3581
  %_98.1 = icmp ult i32 %_98.0, %_97, !dbg !3581
  br i1 %_98.1, label %panic13, label %bb45, !dbg !3581

bb45:                                             ; preds = %bb43
  %_95 = and i32 %_98.0, %out_buf_size_mask, !dbg !3581
  %_94 = icmp ult i32 %_95, %out_slice.1, !dbg !3581
  br i1 %_94, label %bb46, label %bb47, !dbg !3581

panic13:                                          ; preds = %bb43
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_9f164b4732fcbe0c480266e3ae8b8deb) #12, !dbg !3581
  unreachable, !dbg !3581

bb47:                                             ; preds = %bb45
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_cb870baacb15067f7eee04f015be4c85, i32 72, ptr align 4 @alloc_378d2f5dadff213f985692c4f0bd61cb) #12, !dbg !3582
  unreachable, !dbg !3582

bb46:                                             ; preds = %bb45
  %_104 = load i32, ptr %source_pos, align 4, !dbg !3583
  %_103 = and i32 %_104, %out_buf_size_mask, !dbg !3583
  %_107 = icmp ult i32 %_103, %out_slice.1, !dbg !3584
  br i1 %_107, label %bb48, label %panic14, !dbg !3584

bb48:                                             ; preds = %bb46
  %18 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_103, !dbg !3584
  %_102 = load i8, ptr %18, align 1, !dbg !3584
  %_108 = load i32, ptr %out_pos, align 4, !dbg !3585
  %_111 = icmp ult i32 %_108, %out_slice.1, !dbg !3586
  br i1 %_111, label %bb49, label %panic15, !dbg !3586

panic14:                                          ; preds = %bb46
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_103, i32 %out_slice.1, ptr align 4 @alloc_27be3c42a398073c71dbd8a5ce1c7b76) #12, !dbg !3584
  unreachable, !dbg !3584

bb49:                                             ; preds = %bb48
  %19 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_108, !dbg !3586
  store i8 %_102, ptr %19, align 1, !dbg !3586
  %_115 = load i32, ptr %source_pos, align 4, !dbg !3587
  %_116.0 = add i32 %_115, 1, !dbg !3588
  %_116.1 = icmp ult i32 %_116.0, %_115, !dbg !3588
  br i1 %_116.1, label %panic16, label %bb50, !dbg !3588

panic15:                                          ; preds = %bb48
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_108, i32 %out_slice.1, ptr align 4 @alloc_dbe117f78e2a6f95b0639064f8eb7454) #12, !dbg !3586
  unreachable, !dbg !3586

bb50:                                             ; preds = %bb49
  %_113 = and i32 %_116.0, %out_buf_size_mask, !dbg !3588
  %_119 = icmp ult i32 %_113, %out_slice.1, !dbg !3589
  br i1 %_119, label %bb51, label %panic17, !dbg !3589

panic16:                                          ; preds = %bb49
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6ec59f097fe0457b2ad7160e12f69aff) #12, !dbg !3588
  unreachable, !dbg !3588

bb51:                                             ; preds = %bb50
  %20 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_113, !dbg !3589
  %_112 = load i8, ptr %20, align 1, !dbg !3589
  %_121 = load i32, ptr %out_pos, align 4, !dbg !3590
  %_122.0 = add i32 %_121, 1, !dbg !3590
  %_122.1 = icmp ult i32 %_122.0, %_121, !dbg !3590
  br i1 %_122.1, label %panic18, label %bb52, !dbg !3590

panic17:                                          ; preds = %bb50
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_113, i32 %out_slice.1, ptr align 4 @alloc_21bc1fc9a8f7b70597517f8eb8d8e8c7) #12, !dbg !3589
  unreachable, !dbg !3589

bb52:                                             ; preds = %bb51
  %_125 = icmp ult i32 %_122.0, %out_slice.1, !dbg !3591
  br i1 %_125, label %bb53, label %panic19, !dbg !3591

panic18:                                          ; preds = %bb51
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_c818ce2f32878cb5dc173bc623618590) #12, !dbg !3590
  unreachable, !dbg !3590

bb53:                                             ; preds = %bb52
  %21 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_122.0, !dbg !3591
  store i8 %_112, ptr %21, align 1, !dbg !3591
  %_129 = load i32, ptr %source_pos, align 4, !dbg !3592
  %_130.0 = add i32 %_129, 2, !dbg !3593
  %_130.1 = icmp ult i32 %_130.0, %_129, !dbg !3593
  br i1 %_130.1, label %panic20, label %bb54, !dbg !3593

panic19:                                          ; preds = %bb52
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_122.0, i32 %out_slice.1, ptr align 4 @alloc_2f42de2001f9a073e38c6556c536b341) #12, !dbg !3591
  unreachable, !dbg !3591

bb54:                                             ; preds = %bb53
  %_127 = and i32 %_130.0, %out_buf_size_mask, !dbg !3593
  %_133 = icmp ult i32 %_127, %out_slice.1, !dbg !3594
  br i1 %_133, label %bb55, label %panic21, !dbg !3594

panic20:                                          ; preds = %bb53
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_5891d7556965d2b44aa4acfe03b581e1) #12, !dbg !3593
  unreachable, !dbg !3593

bb55:                                             ; preds = %bb54
  %22 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_127, !dbg !3594
  %_126 = load i8, ptr %22, align 1, !dbg !3594
  %_135 = load i32, ptr %out_pos, align 4, !dbg !3595
  %_136.0 = add i32 %_135, 2, !dbg !3595
  %_136.1 = icmp ult i32 %_136.0, %_135, !dbg !3595
  br i1 %_136.1, label %panic22, label %bb56, !dbg !3595

panic21:                                          ; preds = %bb54
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_127, i32 %out_slice.1, ptr align 4 @alloc_d5252653e0b82f79388007976bfc536d) #12, !dbg !3594
  unreachable, !dbg !3594

bb56:                                             ; preds = %bb55
  %_139 = icmp ult i32 %_136.0, %out_slice.1, !dbg !3596
  br i1 %_139, label %bb57, label %panic23, !dbg !3596

panic22:                                          ; preds = %bb55
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_3560e3d11c64e917d585a0eb6b5878ef) #12, !dbg !3595
  unreachable, !dbg !3595

bb57:                                             ; preds = %bb56
  %23 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_136.0, !dbg !3596
  store i8 %_126, ptr %23, align 1, !dbg !3596
  %_143 = load i32, ptr %source_pos, align 4, !dbg !3597
  %_144.0 = add i32 %_143, 3, !dbg !3598
  %_144.1 = icmp ult i32 %_144.0, %_143, !dbg !3598
  br i1 %_144.1, label %panic24, label %bb58, !dbg !3598

panic23:                                          ; preds = %bb56
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_136.0, i32 %out_slice.1, ptr align 4 @alloc_eba39e8bbe3620bd53d33ae18acb6136) #12, !dbg !3596
  unreachable, !dbg !3596

bb58:                                             ; preds = %bb57
  %_141 = and i32 %_144.0, %out_buf_size_mask, !dbg !3598
  %_147 = icmp ult i32 %_141, %out_slice.1, !dbg !3599
  br i1 %_147, label %bb59, label %panic25, !dbg !3599

panic24:                                          ; preds = %bb57
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_d4a0092ea1ce1ab0a9d277f8b834644c) #12, !dbg !3598
  unreachable, !dbg !3598

bb59:                                             ; preds = %bb58
  %24 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_141, !dbg !3599
  %_140 = load i8, ptr %24, align 1, !dbg !3599
  %_149 = load i32, ptr %out_pos, align 4, !dbg !3600
  %_150.0 = add i32 %_149, 3, !dbg !3600
  %_150.1 = icmp ult i32 %_150.0, %_149, !dbg !3600
  br i1 %_150.1, label %panic26, label %bb60, !dbg !3600

panic25:                                          ; preds = %bb58
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_141, i32 %out_slice.1, ptr align 4 @alloc_35b19e0bc39e78c724896482d2716b3b) #12, !dbg !3599
  unreachable, !dbg !3599

bb60:                                             ; preds = %bb59
  %_153 = icmp ult i32 %_150.0, %out_slice.1, !dbg !3601
  br i1 %_153, label %bb61, label %panic27, !dbg !3601

panic26:                                          ; preds = %bb59
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_5967a6b2de30114bf3a08def4abfdcc2) #12, !dbg !3600
  unreachable, !dbg !3600

bb61:                                             ; preds = %bb60
  %25 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_150.0, !dbg !3601
  store i8 %_140, ptr %25, align 1, !dbg !3601
  %26 = load i32, ptr %source_pos, align 4, !dbg !3602
  %_154.0 = add i32 %26, 4, !dbg !3602
  %_154.1 = icmp ult i32 %_154.0, %26, !dbg !3602
  br i1 %_154.1, label %panic28, label %bb62, !dbg !3602

panic27:                                          ; preds = %bb60
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_150.0, i32 %out_slice.1, ptr align 4 @alloc_cc85ca97f1e3558327804a52d2005358) #12, !dbg !3601
  unreachable, !dbg !3601

bb62:                                             ; preds = %bb61
  store i32 %_154.0, ptr %source_pos, align 4, !dbg !3602
  %27 = load i32, ptr %out_pos, align 4, !dbg !3603
  %_155.0 = add i32 %27, 4, !dbg !3603
  %_155.1 = icmp ult i32 %_155.0, %27, !dbg !3603
  br i1 %_155.1, label %panic29, label %bb63, !dbg !3603

panic28:                                          ; preds = %bb61
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_41ab4c11a0e85bd7ff4dae4ff1ba35e8) #12, !dbg !3602
  unreachable, !dbg !3602

bb63:                                             ; preds = %bb62
  store i32 %_155.0, ptr %out_pos, align 4, !dbg !3603
  br label %bb40, !dbg !3604

panic29:                                          ; preds = %bb62
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_8898e15373d558ff58a620a4339a2513) #12, !dbg !3603
  unreachable, !dbg !3603

bb31:                                             ; preds = %bb37, %bb29
  %_71 = load i32, ptr %out_pos, align 4, !dbg !3605
  %_70 = icmp ult i32 %_71, %end_pos30, !dbg !3605
  br i1 %_70, label %bb32, label %bb64, !dbg !3605

bb32:                                             ; preds = %bb31
  %_74 = load i32, ptr %source_pos, align 4, !dbg !3606
  %_76 = load i32, ptr %source_pos, align 4, !dbg !3607
  %_77.0 = add i32 %_76, 3, !dbg !3607
  %_77.1 = icmp ult i32 %_77.0, %_76, !dbg !3607
  br i1 %_77.1, label %panic54, label %bb33, !dbg !3607

bb65:                                             ; preds = %bb64
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_a500d906b91607583596fa15e63c2ada, i32 40, ptr align 4 @alloc_22373327ad96262e73084868a9725077) #12, !dbg !3608
  unreachable, !dbg !3608

bb99:                                             ; preds = %bb98, %bb82, %bb70, %bb64
  ret void, !dbg !3609

bb68:                                             ; preds = %bb64
  %_159 = load i32, ptr %source_pos, align 4, !dbg !3610
  %_158 = and i32 %_159, %out_buf_size_mask, !dbg !3610
  %_162 = icmp ult i32 %_158, %out_slice.1, !dbg !3611
  br i1 %_162, label %bb69, label %panic32, !dbg !3611

bb67:                                             ; preds = %bb64
  %_169 = load i32, ptr %out_pos, align 4, !dbg !3612
  %_170.0 = add i32 %_169, 1, !dbg !3612
  %_170.1 = icmp ult i32 %_170.0, %_169, !dbg !3612
  br i1 %_170.1, label %panic34, label %bb71, !dbg !3612

bb66:                                             ; preds = %bb64
  %_208 = load i32, ptr %out_pos, align 4, !dbg !3613
  %_209.0 = add i32 %_208, 2, !dbg !3613
  %_209.1 = icmp ult i32 %_209.0, %_208, !dbg !3613
  br i1 %_209.1, label %panic42, label %bb83, !dbg !3613

bb69:                                             ; preds = %bb68
  %28 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_158, !dbg !3611
  %_157 = load i8, ptr %28, align 1, !dbg !3611
  %_163 = load i32, ptr %out_pos, align 4, !dbg !3614
  %_166 = icmp ult i32 %_163, %out_slice.1, !dbg !3615
  br i1 %_166, label %bb70, label %panic33, !dbg !3615

panic32:                                          ; preds = %bb68
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_158, i32 %out_slice.1, ptr align 4 @alloc_8f6a80a9d5a68a426d17d5665a8c3b1b) #12, !dbg !3611
  unreachable, !dbg !3611

bb70:                                             ; preds = %bb69
  %29 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_163, !dbg !3615
  store i8 %_157, ptr %29, align 1, !dbg !3615
  br label %bb99, !dbg !3616

panic33:                                          ; preds = %bb69
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_163, i32 %out_slice.1, ptr align 4 @alloc_9500ada91a9f296a1113d54991443d7a) #12, !dbg !3615
  unreachable, !dbg !3615

bb71:                                             ; preds = %bb67
  %_167 = icmp ult i32 %_170.0, %out_slice.1, !dbg !3612
  br i1 %_167, label %bb72, label %bb73, !dbg !3612

panic34:                                          ; preds = %bb67
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_994c70a4054c9de2ae62fc3406408789) #12, !dbg !3612
  unreachable, !dbg !3612

bb73:                                             ; preds = %bb71
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_066f04eb3e041085719e79614e097a5e, i32 47, ptr align 4 @alloc_a98ee7afe7873cc4f2220b0135a0d289) #12, !dbg !3617
  unreachable, !dbg !3617

bb72:                                             ; preds = %bb71
  %_177 = load i32, ptr %source_pos, align 4, !dbg !3618
  %_178.0 = add i32 %_177, 1, !dbg !3619
  %_178.1 = icmp ult i32 %_178.0, %_177, !dbg !3619
  br i1 %_178.1, label %panic35, label %bb74, !dbg !3619

bb74:                                             ; preds = %bb72
  %_175 = and i32 %_178.0, %out_buf_size_mask, !dbg !3619
  %_174 = icmp ult i32 %_175, %out_slice.1, !dbg !3619
  br i1 %_174, label %bb75, label %bb76, !dbg !3619

panic35:                                          ; preds = %bb72
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_9c1aa7a1ff60f97bb2b3c1c60f70193a) #12, !dbg !3619
  unreachable, !dbg !3619

bb76:                                             ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_a17e37ea90258503e4df48d65544dd27, i32 72, ptr align 4 @alloc_f0731fa00f565628f6b18660cc714075) #12, !dbg !3620
  unreachable, !dbg !3620

bb75:                                             ; preds = %bb74
  %_184 = load i32, ptr %source_pos, align 4, !dbg !3621
  %_183 = and i32 %_184, %out_buf_size_mask, !dbg !3621
  %_187 = icmp ult i32 %_183, %out_slice.1, !dbg !3622
  br i1 %_187, label %bb77, label %panic36, !dbg !3622

bb77:                                             ; preds = %bb75
  %30 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_183, !dbg !3622
  %_182 = load i8, ptr %30, align 1, !dbg !3622
  %_188 = load i32, ptr %out_pos, align 4, !dbg !3623
  %_191 = icmp ult i32 %_188, %out_slice.1, !dbg !3624
  br i1 %_191, label %bb78, label %panic37, !dbg !3624

panic36:                                          ; preds = %bb75
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_183, i32 %out_slice.1, ptr align 4 @alloc_c0b4025b54d2106d67c6838e819af1dd) #12, !dbg !3622
  unreachable, !dbg !3622

bb78:                                             ; preds = %bb77
  %31 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_188, !dbg !3624
  store i8 %_182, ptr %31, align 1, !dbg !3624
  %_195 = load i32, ptr %source_pos, align 4, !dbg !3625
  %_196.0 = add i32 %_195, 1, !dbg !3626
  %_196.1 = icmp ult i32 %_196.0, %_195, !dbg !3626
  br i1 %_196.1, label %panic38, label %bb79, !dbg !3626

panic37:                                          ; preds = %bb77
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_188, i32 %out_slice.1, ptr align 4 @alloc_0e16c122bd1c604927398a2b75ded7ec) #12, !dbg !3624
  unreachable, !dbg !3624

bb79:                                             ; preds = %bb78
  %_193 = and i32 %_196.0, %out_buf_size_mask, !dbg !3626
  %_199 = icmp ult i32 %_193, %out_slice.1, !dbg !3627
  br i1 %_199, label %bb80, label %panic39, !dbg !3627

panic38:                                          ; preds = %bb78
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_f1cadf214d3b0be28b7d4327ee60b431) #12, !dbg !3626
  unreachable, !dbg !3626

bb80:                                             ; preds = %bb79
  %32 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_193, !dbg !3627
  %_192 = load i8, ptr %32, align 1, !dbg !3627
  %_201 = load i32, ptr %out_pos, align 4, !dbg !3628
  %_202.0 = add i32 %_201, 1, !dbg !3628
  %_202.1 = icmp ult i32 %_202.0, %_201, !dbg !3628
  br i1 %_202.1, label %panic40, label %bb81, !dbg !3628

panic39:                                          ; preds = %bb79
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_193, i32 %out_slice.1, ptr align 4 @alloc_0adea34eeb7c426515c6819a7bd426b6) #12, !dbg !3627
  unreachable, !dbg !3627

bb81:                                             ; preds = %bb80
  %_205 = icmp ult i32 %_202.0, %out_slice.1, !dbg !3629
  br i1 %_205, label %bb82, label %panic41, !dbg !3629

panic40:                                          ; preds = %bb80
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_1232bb683463b5b1116688e6c9280f09) #12, !dbg !3628
  unreachable, !dbg !3628

bb82:                                             ; preds = %bb81
  %33 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_202.0, !dbg !3629
  store i8 %_192, ptr %33, align 1, !dbg !3629
  br label %bb99, !dbg !3630

panic41:                                          ; preds = %bb81
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_202.0, i32 %out_slice.1, ptr align 4 @alloc_d9f029dd91f5acfbd6002b30de69d2c9) #12, !dbg !3629
  unreachable, !dbg !3629

bb83:                                             ; preds = %bb66
  %_206 = icmp ult i32 %_209.0, %out_slice.1, !dbg !3613
  br i1 %_206, label %bb84, label %bb85, !dbg !3613

panic42:                                          ; preds = %bb66
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_ea0c7929c8fb0fedc5d51bd1cf7317c2) #12, !dbg !3613
  unreachable, !dbg !3613

bb85:                                             ; preds = %bb83
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_3b4f078f60ab6dde3be227141156af98, i32 47, ptr align 4 @alloc_d6d9b7d75e40bd33c15b76130760233e) #12, !dbg !3631
  unreachable, !dbg !3631

bb84:                                             ; preds = %bb83
  %_216 = load i32, ptr %source_pos, align 4, !dbg !3632
  %_217.0 = add i32 %_216, 2, !dbg !3633
  %_217.1 = icmp ult i32 %_217.0, %_216, !dbg !3633
  br i1 %_217.1, label %panic43, label %bb86, !dbg !3633

bb86:                                             ; preds = %bb84
  %_214 = and i32 %_217.0, %out_buf_size_mask, !dbg !3633
  %_213 = icmp ult i32 %_214, %out_slice.1, !dbg !3633
  br i1 %_213, label %bb87, label %bb88, !dbg !3633

panic43:                                          ; preds = %bb84
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_2ff27d50fded060b527b6c8a2ef2cd10) #12, !dbg !3633
  unreachable, !dbg !3633

bb88:                                             ; preds = %bb86
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_8f8047d0a3b312b4c5681d2afe9ed2c6, i32 72, ptr align 4 @alloc_93dd719f28702fd6b81654b9f9987ae8) #12, !dbg !3634
  unreachable, !dbg !3634

bb87:                                             ; preds = %bb86
  %_223 = load i32, ptr %source_pos, align 4, !dbg !3635
  %_222 = and i32 %_223, %out_buf_size_mask, !dbg !3635
  %_226 = icmp ult i32 %_222, %out_slice.1, !dbg !3636
  br i1 %_226, label %bb89, label %panic44, !dbg !3636

bb89:                                             ; preds = %bb87
  %34 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_222, !dbg !3636
  %_221 = load i8, ptr %34, align 1, !dbg !3636
  %_227 = load i32, ptr %out_pos, align 4, !dbg !3637
  %_230 = icmp ult i32 %_227, %out_slice.1, !dbg !3638
  br i1 %_230, label %bb90, label %panic45, !dbg !3638

panic44:                                          ; preds = %bb87
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_222, i32 %out_slice.1, ptr align 4 @alloc_27cee705d6cc5a506788705d802820db) #12, !dbg !3636
  unreachable, !dbg !3636

bb90:                                             ; preds = %bb89
  %35 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_227, !dbg !3638
  store i8 %_221, ptr %35, align 1, !dbg !3638
  %_234 = load i32, ptr %source_pos, align 4, !dbg !3639
  %_235.0 = add i32 %_234, 1, !dbg !3640
  %_235.1 = icmp ult i32 %_235.0, %_234, !dbg !3640
  br i1 %_235.1, label %panic46, label %bb91, !dbg !3640

panic45:                                          ; preds = %bb89
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_227, i32 %out_slice.1, ptr align 4 @alloc_bdc61301e68a8ed252f194735d169b5a) #12, !dbg !3638
  unreachable, !dbg !3638

bb91:                                             ; preds = %bb90
  %_232 = and i32 %_235.0, %out_buf_size_mask, !dbg !3640
  %_238 = icmp ult i32 %_232, %out_slice.1, !dbg !3641
  br i1 %_238, label %bb92, label %panic47, !dbg !3641

panic46:                                          ; preds = %bb90
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_65a89ce41f92ecfe80964d84a0abd4bf) #12, !dbg !3640
  unreachable, !dbg !3640

bb92:                                             ; preds = %bb91
  %36 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_232, !dbg !3641
  %_231 = load i8, ptr %36, align 1, !dbg !3641
  %_240 = load i32, ptr %out_pos, align 4, !dbg !3642
  %_241.0 = add i32 %_240, 1, !dbg !3642
  %_241.1 = icmp ult i32 %_241.0, %_240, !dbg !3642
  br i1 %_241.1, label %panic48, label %bb93, !dbg !3642

panic47:                                          ; preds = %bb91
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_232, i32 %out_slice.1, ptr align 4 @alloc_2fac3a369121865d770ca206df35f5b0) #12, !dbg !3641
  unreachable, !dbg !3641

bb93:                                             ; preds = %bb92
  %_244 = icmp ult i32 %_241.0, %out_slice.1, !dbg !3643
  br i1 %_244, label %bb94, label %panic49, !dbg !3643

panic48:                                          ; preds = %bb92
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_4814987e0a7b0f5b8788e0fe0d02268c) #12, !dbg !3642
  unreachable, !dbg !3642

bb94:                                             ; preds = %bb93
  %37 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_241.0, !dbg !3643
  store i8 %_231, ptr %37, align 1, !dbg !3643
  %_248 = load i32, ptr %source_pos, align 4, !dbg !3644
  %_249.0 = add i32 %_248, 2, !dbg !3645
  %_249.1 = icmp ult i32 %_249.0, %_248, !dbg !3645
  br i1 %_249.1, label %panic50, label %bb95, !dbg !3645

panic49:                                          ; preds = %bb93
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_241.0, i32 %out_slice.1, ptr align 4 @alloc_f6e35f8329203065c911b03f93564a53) #12, !dbg !3643
  unreachable, !dbg !3643

bb95:                                             ; preds = %bb94
  %_246 = and i32 %_249.0, %out_buf_size_mask, !dbg !3645
  %_252 = icmp ult i32 %_246, %out_slice.1, !dbg !3646
  br i1 %_252, label %bb96, label %panic51, !dbg !3646

panic50:                                          ; preds = %bb94
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_be01522e45d25f280f8f66838c1826a6) #12, !dbg !3645
  unreachable, !dbg !3645

bb96:                                             ; preds = %bb95
  %38 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_246, !dbg !3646
  %_245 = load i8, ptr %38, align 1, !dbg !3646
  %_254 = load i32, ptr %out_pos, align 4, !dbg !3647
  %_255.0 = add i32 %_254, 2, !dbg !3647
  %_255.1 = icmp ult i32 %_255.0, %_254, !dbg !3647
  br i1 %_255.1, label %panic52, label %bb97, !dbg !3647

panic51:                                          ; preds = %bb95
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_246, i32 %out_slice.1, ptr align 4 @alloc_83d704a4630b2b580b521f333c335f18) #12, !dbg !3646
  unreachable, !dbg !3646

bb97:                                             ; preds = %bb96
  %_258 = icmp ult i32 %_255.0, %out_slice.1, !dbg !3648
  br i1 %_258, label %bb98, label %panic53, !dbg !3648

panic52:                                          ; preds = %bb96
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_8f95401d62627cd843eac458e7cec8cd) #12, !dbg !3647
  unreachable, !dbg !3647

bb98:                                             ; preds = %bb97
  %39 = getelementptr inbounds nuw i8, ptr %out_slice.0, i32 %_255.0, !dbg !3648
  store i8 %_245, ptr %39, align 1, !dbg !3648
  br label %bb99, !dbg !3649

panic53:                                          ; preds = %bb97
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_255.0, i32 %out_slice.1, ptr align 4 @alloc_1566557888b8837efc4043f984893224) #12, !dbg !3648
  unreachable, !dbg !3648

bb33:                                             ; preds = %bb32
; call core::ops::range::RangeInclusive<Idx>::new
  call void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h418dc35af1cac930E"(ptr sret([12 x i8]) align 4 %_73, i32 %_74, i32 %_77.0) #11, !dbg !3606
  %_78 = load i32, ptr %out_pos, align 4, !dbg !3650
; call core::slice::<impl [T]>::copy_within
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11copy_within17h36c24b2d6f1e9e9eE"(ptr align 1 %out_slice.0, i32 %out_slice.1, ptr align 4 %_73, i32 %_78, ptr align 4 @alloc_28a49f5564fa8db1bd1acb4f99ea9b24) #11, !dbg !3651
  %40 = load i32, ptr %source_pos, align 4, !dbg !3652
  %_79.0 = add i32 %40, 4, !dbg !3652
  %_79.1 = icmp ult i32 %_79.0, %40, !dbg !3652
  br i1 %_79.1, label %panic55, label %bb36, !dbg !3652

panic54:                                          ; preds = %bb32
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_529c0bfd5c9e94e858b873a336de0928) #12, !dbg !3607
  unreachable, !dbg !3607

bb36:                                             ; preds = %bb33
  store i32 %_79.0, ptr %source_pos, align 4, !dbg !3652
  %41 = load i32, ptr %out_pos, align 4, !dbg !3653
  %_80.0 = add i32 %41, 4, !dbg !3653
  %_80.1 = icmp ult i32 %_80.0, %41, !dbg !3653
  br i1 %_80.1, label %panic56, label %bb37, !dbg !3653

panic55:                                          ; preds = %bb33
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_a5598c6b78f66ce218dceca3817f3f4c) #12, !dbg !3652
  unreachable, !dbg !3652

bb37:                                             ; preds = %bb36
  store i32 %_80.0, ptr %out_pos, align 4, !dbg !3653
  br label %bb31, !dbg !3654

panic56:                                          ; preds = %bb36
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_c228979867d695214fbcae6a128fe255) #12, !dbg !3653
  unreachable, !dbg !3653
}

; miniz_oxide::inflate::core::init_tree
; Function Attrs: nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9init_tree17h8b4f6fe432835833E(ptr align 4 %r, ptr align 4 %l) unnamed_addr #1 !dbg !3655 {
start:
  %small.dbg.spill.i41 = alloca [2 x i8], align 2
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i39 = alloca [8 x i8], align 4
  %0 = alloca [2 x i8], align 2
  %self.dbg.spill.i = alloca [2 x i8], align 2
  %cs.dbg.spill = alloca [4 x i8], align 4
  %code_size.dbg.spill36 = alloca [1 x i8], align 1
  %next.dbg.spill = alloca [4 x i8], align 4
  %ts.dbg.spill = alloca [2 x i8], align 2
  %k.dbg.spill = alloca [2 x i8], align 2
  %tree_index.dbg.spill25 = alloca [4 x i8], align 4
  %tree_index.dbg.spill = alloca [4 x i8], align 4
  %n.dbg.spill = alloca [2 x i8], align 2
  %cur_code.dbg.spill = alloca [4 x i8], align 4
  %code_size.dbg.spill = alloca [1 x i8], align 1
  %symbol_index.dbg.spill = alloca [4 x i8], align 4
  %table_size.dbg.spill = alloca [4 x i8], align 4
  %table.dbg.spill = alloca [4 x i8], align 4
  %bt.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %r.dbg.spill = alloca [4 x i8], align 4
  %iter3 = alloca [2 x i8], align 1
  %tree_cur = alloca [2 x i8], align 2
  %_99 = alloca [2 x i8], align 2
  %rev_code = alloca [2 x i8], align 2
  %_77 = alloca [8 x i8], align 4
  %iter2 = alloca [8 x i8], align 4
  %tree_next = alloca [2 x i8], align 2
  %_56 = alloca [8 x i8], align 4
  %iter1 = alloca [28 x i8], align 4
  %_47 = alloca [24 x i8], align 4
  %_46 = alloca [28 x i8], align 4
  %_45 = alloca [28 x i8], align 4
  %total = alloca [4 x i8], align 4
  %used_symbols = alloca [2 x i8], align 2
  %_32 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %next_code = alloca [68 x i8], align 4
  %total_symbols = alloca [32 x i8], align 2
  %code_sizes = alloca [8 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !3672, !DIExpression(), !3749)
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !3673, !DIExpression(), !3750)
    #dbg_declare(ptr %code_sizes, !3676, !DIExpression(), !3751)
    #dbg_declare(ptr %total_symbols, !3681, !DIExpression(), !3752)
    #dbg_declare(ptr %next_code, !3686, !DIExpression(), !3753)
    #dbg_declare(ptr %iter, !3693, !DIExpression(), !3754)
    #dbg_declare(ptr %used_symbols, !3710, !DIExpression(), !3755)
    #dbg_declare(ptr %total, !3712, !DIExpression(), !3756)
    #dbg_declare(ptr %iter1, !3714, !DIExpression(), !3757)
    #dbg_declare(ptr %tree_next, !3719, !DIExpression(), !3758)
    #dbg_declare(ptr %iter2, !3721, !DIExpression(), !3759)
    #dbg_declare(ptr %rev_code, !3731, !DIExpression(), !3760)
    #dbg_declare(ptr %tree_cur, !3735, !DIExpression(), !3761)
    #dbg_declare(ptr %iter3, !3737, !DIExpression(), !3762)
  br label %bb1, !dbg !3763

bb1:                                              ; preds = %bb108, %start
  %1 = getelementptr inbounds i8, ptr %r, i32 10475, !dbg !3764
  %_4 = load i8, ptr %1, align 1, !dbg !3764
  %bt = zext i8 %_4 to i32, !dbg !3764
  store i32 %bt, ptr %bt.dbg.spill, align 4, !dbg !3764
    #dbg_declare(ptr %bt.dbg.spill, !3674, !DIExpression(), !3765)
  switch i32 %bt, label %bb2 [
    i32 0, label %bb5
    i32 1, label %bb4
    i32 2, label %bb3
  ], !dbg !3766

bb2:                                              ; preds = %bb1
  store i8 3, ptr %_0, align 1, !dbg !3767
  br label %bb109, !dbg !3768

bb5:                                              ; preds = %bb1
  %_7 = getelementptr inbounds i8, ptr %r, i32 10112, !dbg !3769
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %2 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h5d132efd8fd7d668E"(ptr align 1 %_7, ptr align 4 @alloc_fd0f167cd98bec8cb438b113dcd63ce4) #11, !dbg !3770
  %_6.0 = extractvalue { ptr, i32 } %2, 0, !dbg !3770
  %_6.1 = extractvalue { ptr, i32 } %2, 1, !dbg !3770
  store ptr %_6.0, ptr %code_sizes, align 4, !dbg !3771
  %3 = getelementptr inbounds i8, ptr %code_sizes, i32 4, !dbg !3771
  store i32 %_6.1, ptr %3, align 4, !dbg !3771
  br label %bb7, !dbg !3771

bb4:                                              ; preds = %bb1
  %_8 = getelementptr inbounds i8, ptr %r, i32 10400, !dbg !3772
  store ptr %_8, ptr %code_sizes, align 4, !dbg !3772
  %4 = getelementptr inbounds i8, ptr %code_sizes, i32 4, !dbg !3772
  store i32 32, ptr %4, align 4, !dbg !3772
  br label %bb7, !dbg !3773

bb3:                                              ; preds = %bb1
  %_9 = getelementptr inbounds i8, ptr %r, i32 10477, !dbg !3774
  store ptr %_9, ptr %code_sizes, align 4, !dbg !3774
  %5 = getelementptr inbounds i8, ptr %code_sizes, i32 4, !dbg !3774
  store i32 19, ptr %5, align 4, !dbg !3774
  br label %bb7, !dbg !3775

bb7:                                              ; preds = %bb3, %bb4, %bb5
  %_11 = icmp ult i32 %bt, 3, !dbg !3776
  br i1 %_11, label %bb8, label %panic, !dbg !3776

bb8:                                              ; preds = %bb7
  %6 = getelementptr inbounds i8, ptr %r, i32 512, !dbg !3777
  %table = getelementptr inbounds nuw %"inflate::core::HuffmanTable", ptr %6, i32 %bt, !dbg !3777
  store ptr %table, ptr %table.dbg.spill, align 4, !dbg !3777
    #dbg_declare(ptr %table.dbg.spill, !3678, !DIExpression(), !3778)
  call void @llvm.memset.p0.i32(ptr align 2 %total_symbols, i8 0, i32 32, i1 false), !dbg !3779
  call void @llvm.memset.p0.i32(ptr align 4 %next_code, i8 0, i32 68, i1 false), !dbg !3780
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17hc32ffbeed66354ebE"(ptr align 2 %table, i32 1024, i16 798) #11, !dbg !3781
  %_17 = icmp ne i32 %bt, 2, !dbg !3782
  br i1 %_17, label %bb10, label %bb11, !dbg !3782

panic:                                            ; preds = %bb7
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %bt, i32 3, ptr align 4 @alloc_709d7dab23edc15208fc6a7322b8e5f9) #12, !dbg !3776
  unreachable, !dbg !3776

bb11:                                             ; preds = %bb10, %bb8
  %_23 = icmp ult i32 %bt, 3, !dbg !3783
  br i1 %_23, label %bb12, label %panic4, !dbg !3783

bb10:                                             ; preds = %bb8
  %_20 = getelementptr inbounds i8, ptr %table, i32 2048, !dbg !3784
; call core::slice::<impl [T]>::fill
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17hc32ffbeed66354ebE"(ptr align 2 %_20, i32 576, i16 0) #11, !dbg !3785
  br label %bb11, !dbg !3785

bb12:                                             ; preds = %bb11
  %7 = getelementptr inbounds i8, ptr %r, i32 10468, !dbg !3783
  %8 = getelementptr inbounds nuw i16, ptr %7, i32 %bt, !dbg !3783
  %_22 = load i16, ptr %8, align 2, !dbg !3783
  %table_size = zext i16 %_22 to i32, !dbg !3783
  store i32 %table_size, ptr %table_size.dbg.spill, align 4, !dbg !3783
    #dbg_declare(ptr %table_size.dbg.spill, !3691, !DIExpression(), !3786)
  %_26.0 = load ptr, ptr %code_sizes, align 4, !dbg !3787
  %9 = getelementptr inbounds i8, ptr %code_sizes, i32 4, !dbg !3787
  %_26.1 = load i32, ptr %9, align 4, !dbg !3787
  %_24 = icmp ugt i32 %table_size, %_26.1, !dbg !3788
  br i1 %_24, label %bb13, label %bb14, !dbg !3788

panic4:                                           ; preds = %bb11
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %bt, i32 3, ptr align 4 @alloc_fcebf7cc0b584fa66b8e7560fe0dc975) #12, !dbg !3783
  unreachable, !dbg !3783

bb14:                                             ; preds = %bb12
  %_29.0 = load ptr, ptr %code_sizes, align 4, !dbg !3789
  %10 = getelementptr inbounds i8, ptr %code_sizes, i32 4, !dbg !3789
  %_29.1 = load i32, ptr %10, align 4, !dbg !3789
  store ptr %_29.0, ptr %self.dbg.spill.i39, align 4
  %11 = getelementptr inbounds i8, ptr %self.dbg.spill.i39, i32 4
  store i32 %_29.1, ptr %11, align 4
    #dbg_declare(ptr %self.dbg.spill.i39, !1264, !DIExpression(), !3790)
  store i32 %table_size, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !1272, !DIExpression(), !3792)
  store i32 %table_size, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !1278, !DIExpression(), !3793)
  store ptr %_29.0, ptr %slice.dbg.spill.i.i, align 4
  %12 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 %_29.1, ptr %12, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !1284, !DIExpression(), !3795)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %13 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 %table_size, ptr %13, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !1288, !DIExpression(), !3796)
  store ptr %_29.0, ptr %slice.dbg.spill.i.i.i, align 4
  %14 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 %_29.1, ptr %14, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !1293, !DIExpression(), !3798)
; call core::num::<impl usize>::checked_sub
  %15 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 %table_size, i32 0) #11, !dbg !3799
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !3799
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !3799
  store i32 %16, ptr %_3.i.i.i, align 4, !dbg !3799
  %18 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !3799
  store i32 %17, ptr %18, align 4, !dbg !3799
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !3799
  %19 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !3799
  %20 = load i32, ptr %19, align 4, !dbg !3799
  %21 = trunc nuw i32 %_6.i.i.i to i1, !dbg !3800
  br i1 %21, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !3800

bb2.i.i.i:                                        ; preds = %bb14
  %22 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !3801
  %new_len.i.i.i = load i32, ptr %22, align 4, !dbg !3801
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !3801
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !1294, !DIExpression(), !3801)
  %_8.i.i.i = icmp ule i32 %table_size, %_29.1, !dbg !3802
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit", label %bb5.i.i.i, !dbg !3802

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %bb14
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 0, i32 %table_size, i32 %_29.1, ptr align 4 @alloc_e42f74ca67ed22dfa2863a1c5f14b483) #12, !dbg !3803
  unreachable, !dbg !3803

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit": ; preds = %bb2.i.i.i
  store ptr %_29.0, ptr %ptr.dbg.spill.i.i, align 4
  %23 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 %_29.1, ptr %23, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1303, !DIExpression(), !3804)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !1312, !DIExpression(), !3806)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !1313, !DIExpression(), !3807)
  store ptr %_29.0, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !3808
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1314, !DIExpression(), !3809)
  store ptr %_29.0, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !3810
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !1317, !DIExpression(), !3811)
  %24 = insertvalue { ptr, i32 } poison, ptr %_29.0, 0, !dbg !3812
  %25 = insertvalue { ptr, i32 } %24, i32 %new_len.i.i.i, 1, !dbg !3812
  %26 = insertvalue { ptr, i32 } poison, ptr %_29.0, 0, !dbg !3813
  %27 = insertvalue { ptr, i32 } %26, i32 %new_len.i.i.i, 1, !dbg !3813
  %_28.0 = extractvalue { ptr, i32 } %27, 0, !dbg !3814
  %_28.1 = extractvalue { ptr, i32 } %27, 1, !dbg !3814
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %28 = call { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h0dc5fdff266f268dE"(ptr align 1 %_28.0, i32 %_28.1) #11, !dbg !3815
  %_27.0 = extractvalue { ptr, ptr } %28, 0, !dbg !3815
  %_27.1 = extractvalue { ptr, ptr } %28, 1, !dbg !3815
  store ptr %_27.0, ptr %iter, align 4, !dbg !3815
  %29 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !3815
  store ptr %_27.1, ptr %29, align 4, !dbg !3815
  br label %bb17, !dbg !3816

bb13:                                             ; preds = %bb12
  store i8 3, ptr %_0, align 1, !dbg !3817
  br label %bb109, !dbg !3818

bb17:                                             ; preds = %bb25, %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit"
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %30 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #11, !dbg !3754
  store ptr %30, ptr %_32, align 4, !dbg !3754
  %31 = load ptr, ptr %_32, align 4, !dbg !3754
  %32 = ptrtoint ptr %31 to i32, !dbg !3754
  %33 = icmp eq i32 %32, 0, !dbg !3754
  %_34 = select i1 %33, i32 0, i32 1, !dbg !3754
  %34 = trunc nuw i32 %_34 to i1, !dbg !3754
  br i1 %34, label %bb20, label %bb21, !dbg !3754

bb20:                                             ; preds = %bb17
  %_200 = load ptr, ptr %_32, align 4, !dbg !3820
  %code_size35 = load i8, ptr %_200, align 1, !dbg !3820
  store i8 %code_size35, ptr %code_size.dbg.spill36, align 1, !dbg !3820
    #dbg_declare(ptr %code_size.dbg.spill36, !3706, !DIExpression(), !3821)
  %cs = zext i8 %code_size35 to i32, !dbg !3822
  store i32 %cs, ptr %cs.dbg.spill, align 4, !dbg !3822
    #dbg_declare(ptr %cs.dbg.spill, !3708, !DIExpression(), !3823)
  %_37 = icmp uge i32 %cs, 16, !dbg !3824
  br i1 %_37, label %bb22, label %bb23, !dbg !3824

bb21:                                             ; preds = %bb17
  store i16 0, ptr %used_symbols, align 2, !dbg !3825
  store i32 0, ptr %total, align 4, !dbg !3826
; call core::slice::<impl [T]>::iter
  %35 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbadac3e2abbd3b18E"(ptr align 2 %total_symbols, i32 16) #11, !dbg !3827
  %_48.0 = extractvalue { ptr, ptr } %35, 0, !dbg !3827
  %_48.1 = extractvalue { ptr, ptr } %35, 1, !dbg !3827
; call core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
  %36 = call { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hd5947eac7d05e6efE"(ptr align 4 %next_code, i32 1, ptr align 4 @alloc_d16f04ed9cd9dfb6379b840288102644) #11, !dbg !3828
  %_52.0 = extractvalue { ptr, i32 } %36, 0, !dbg !3828
  %_52.1 = extractvalue { ptr, i32 } %36, 1, !dbg !3828
; call core::slice::<impl [T]>::iter_mut
  %37 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hc27b9f73608afd5aE"(ptr align 4 %_52.0, i32 %_52.1) #11, !dbg !3829
  %_51.0 = extractvalue { ptr, ptr } %37, 0, !dbg !3829
  %_51.1 = extractvalue { ptr, ptr } %37, 1, !dbg !3829
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17h858e5b296985fe89E(ptr sret([24 x i8]) align 4 %_47, ptr %_48.0, ptr %_48.1, ptr %_51.0, ptr %_51.1) #11, !dbg !3830
; call core::iter::traits::iterator::Iterator::skip
  call void @_ZN4core4iter6traits8iterator8Iterator4skip17h3a74484b2de80b85E(ptr sret([28 x i8]) align 4 %_46, ptr align 4 %_47, i32 1) #11, !dbg !3831
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h343835d0ac7718bfE"(ptr sret([28 x i8]) align 4 %_45, ptr align 4 %_46) #11, !dbg !3832
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter1, ptr align 4 %_45, i32 28, i1 false), !dbg !3832
  br label %bb32, !dbg !3833

bb32:                                             ; preds = %bb38, %bb21
; call <core::iter::adapters::skip::Skip<I> as core::iter::traits::iterator::Iterator>::next
  %38 = call { ptr, ptr } @"_ZN100_$LT$core..iter..adapters..skip..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h99f11f3911703e15E"(ptr align 4 %iter1) #11, !dbg !3757
  %39 = extractvalue { ptr, ptr } %38, 0, !dbg !3757
  %40 = extractvalue { ptr, ptr } %38, 1, !dbg !3757
  store ptr %39, ptr %_56, align 4, !dbg !3757
  %41 = getelementptr inbounds i8, ptr %_56, i32 4, !dbg !3757
  store ptr %40, ptr %41, align 4, !dbg !3757
  %42 = load ptr, ptr %_56, align 4, !dbg !3757
  %43 = getelementptr inbounds i8, ptr %_56, i32 4, !dbg !3757
  %44 = load ptr, ptr %43, align 4, !dbg !3757
  %45 = ptrtoint ptr %42 to i32, !dbg !3757
  %46 = icmp eq i32 %45, 0, !dbg !3757
  %_58 = select i1 %46, i32 0, i32 1, !dbg !3757
  %47 = trunc nuw i32 %_58 to i1, !dbg !3757
  br i1 %47, label %bb34, label %bb35, !dbg !3757

bb34:                                             ; preds = %bb32
  %_201 = load ptr, ptr %_56, align 4, !dbg !3834
  %ts = load i16, ptr %_201, align 2, !dbg !3834
  store i16 %ts, ptr %ts.dbg.spill, align 2, !dbg !3834
    #dbg_declare(ptr %ts.dbg.spill, !3716, !DIExpression(), !3835)
  %48 = getelementptr inbounds i8, ptr %_56, i32 4, !dbg !3836
  %next = load ptr, ptr %48, align 4, !dbg !3836
  store ptr %next, ptr %next.dbg.spill, align 4, !dbg !3836
    #dbg_declare(ptr %next.dbg.spill, !3718, !DIExpression(), !3837)
  %49 = load i16, ptr %used_symbols, align 2, !dbg !3838
  %_61.0 = add i16 %49, %ts, !dbg !3838
  %_61.1 = icmp ult i16 %_61.0, %49, !dbg !3838
  br i1 %_61.1, label %panic33, label %bb36, !dbg !3838

bb35:                                             ; preds = %bb32
  %_67 = load i32, ptr %total, align 4, !dbg !3839
  %50 = icmp eq i32 %_67, 65536, !dbg !3839
  br i1 %50, label %bb43, label %bb40, !dbg !3839

bb43:                                             ; preds = %bb41, %bb35
  store i16 -1, ptr %tree_next, align 2, !dbg !3840
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %51 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 0, i32 %table_size) #11, !dbg !3841
  %_74.0 = extractvalue { i32, i32 } %51, 0, !dbg !3841
  %_74.1 = extractvalue { i32, i32 } %51, 1, !dbg !3841
  store i32 %_74.0, ptr %iter2, align 4, !dbg !3841
  %52 = getelementptr inbounds i8, ptr %iter2, i32 4, !dbg !3841
  store i32 %_74.1, ptr %52, align 4, !dbg !3841
  br label %bb45, !dbg !3842

bb40:                                             ; preds = %bb35
  %_69 = load i16, ptr %used_symbols, align 2, !dbg !3843
  %_68 = icmp ugt i16 %_69, 1, !dbg !3843
  br i1 %_68, label %bb42, label %bb41, !dbg !3843

bb41:                                             ; preds = %bb40
  %_70 = icmp eq i32 %bt, 2, !dbg !3844
  br i1 %_70, label %bb42, label %bb43, !dbg !3844

bb42:                                             ; preds = %bb41, %bb40
  store i8 1, ptr %_0, align 1, !dbg !3845
  %53 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3845
  store i8 28, ptr %53, align 1, !dbg !3845
  br label %bb109, !dbg !3846

bb45:                                             ; preds = %bb64, %bb103, %bb49, %bb43
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %54 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter2) #11, !dbg !3759
  %55 = extractvalue { i32, i32 } %54, 0, !dbg !3759
  %56 = extractvalue { i32, i32 } %54, 1, !dbg !3759
  store i32 %55, ptr %_77, align 4, !dbg !3759
  %57 = getelementptr inbounds i8, ptr %_77, i32 4, !dbg !3759
  store i32 %56, ptr %57, align 4, !dbg !3759
  %_79 = load i32, ptr %_77, align 4, !dbg !3759
  %58 = getelementptr inbounds i8, ptr %_77, i32 4, !dbg !3759
  %59 = load i32, ptr %58, align 4, !dbg !3759
  %60 = trunc nuw i32 %_79 to i1, !dbg !3759
  br i1 %60, label %bb47, label %bb48, !dbg !3759

bb47:                                             ; preds = %bb45
  %61 = getelementptr inbounds i8, ptr %_77, i32 4, !dbg !3848
  %symbol_index = load i32, ptr %61, align 4, !dbg !3848
  store i32 %symbol_index, ptr %symbol_index.dbg.spill, align 4, !dbg !3848
    #dbg_declare(ptr %symbol_index.dbg.spill, !3723, !DIExpression(), !3849)
  %_83.0 = load ptr, ptr %code_sizes, align 4, !dbg !3850
  %62 = getelementptr inbounds i8, ptr %code_sizes, i32 4, !dbg !3850
  %_83.1 = load i32, ptr %62, align 4, !dbg !3850
  %_85 = icmp ult i32 %symbol_index, %_83.1, !dbg !3850
  br i1 %_85, label %bb49, label %panic6, !dbg !3850

bb48:                                             ; preds = %bb45
  %63 = getelementptr inbounds i8, ptr %r, i32 10475, !dbg !3851
  %_190 = load i8, ptr %63, align 1, !dbg !3851
  %_189 = icmp eq i8 %_190, 2, !dbg !3851
  br i1 %_189, label %bb104, label %bb105, !dbg !3851

bb105:                                            ; preds = %bb48
  %64 = getelementptr inbounds i8, ptr %r, i32 10475, !dbg !3852
  %_195 = load i8, ptr %64, align 1, !dbg !3852
  %_194 = icmp eq i8 %_195, 0, !dbg !3852
  br i1 %_194, label %bb106, label %bb107, !dbg !3852

bb104:                                            ; preds = %bb48
  %65 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !3853
  store i32 0, ptr %65, align 4, !dbg !3853
  store i8 1, ptr %_0, align 1, !dbg !3854
  %66 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3854
  store i8 10, ptr %66, align 1, !dbg !3854
  br label %bb109, !dbg !3855

bb107:                                            ; preds = %bb105
  %67 = getelementptr inbounds i8, ptr %r, i32 10475, !dbg !3857
  %68 = load i8, ptr %67, align 1, !dbg !3857
  %_197.0 = sub i8 %68, 1, !dbg !3857
  %_197.1 = icmp ult i8 %68, 1, !dbg !3857
  br i1 %_197.1, label %panic5, label %bb108, !dbg !3857

bb106:                                            ; preds = %bb105
  %69 = getelementptr inbounds i8, ptr %l, i32 12, !dbg !3858
  store i32 0, ptr %69, align 4, !dbg !3858
  store i8 1, ptr %_0, align 1, !dbg !3859
  %70 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3859
  store i8 12, ptr %70, align 1, !dbg !3859
  br label %bb109, !dbg !3860

bb108:                                            ; preds = %bb107
  %71 = getelementptr inbounds i8, ptr %r, i32 10475, !dbg !3857
  store i8 %_197.0, ptr %71, align 1, !dbg !3857
  br label %bb1, !dbg !3763

panic5:                                           ; preds = %bb107
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_f12107921783e7f89359d35917c8bcfa) #12, !dbg !3857
  unreachable, !dbg !3857

bb109:                                            ; preds = %bb2, %bb13, %bb22, %bb42, %bb89, %bb101, %bb104, %bb106
  %72 = load i8, ptr %_0, align 1, !dbg !3860
  %73 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3860
  %74 = load i8, ptr %73, align 1, !dbg !3860
  %75 = insertvalue { i8, i8 } poison, i8 %72, 0, !dbg !3860
  %76 = insertvalue { i8, i8 } %75, i8 %74, 1, !dbg !3860
  ret { i8, i8 } %76, !dbg !3860

bb49:                                             ; preds = %bb47
  %77 = load ptr, ptr %code_sizes, align 4, !dbg !3850
  %78 = getelementptr inbounds i8, ptr %code_sizes, i32 4, !dbg !3850
  %79 = load i32, ptr %78, align 4, !dbg !3850
  %80 = getelementptr inbounds nuw i8, ptr %77, i32 %symbol_index, !dbg !3850
  %_82 = load i8, ptr %80, align 1, !dbg !3850
  %code_size = and i8 %_82, 15, !dbg !3850
  store i8 %code_size, ptr %code_size.dbg.spill, align 1, !dbg !3850
    #dbg_declare(ptr %code_size.dbg.spill, !3725, !DIExpression(), !3861)
  %81 = icmp eq i8 %code_size, 0, !dbg !3862
  br i1 %81, label %bb45, label %bb50, !dbg !3862

panic6:                                           ; preds = %bb47
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %symbol_index, i32 %_83.1, ptr align 4 @alloc_6cfc08a328cb5c952a63aac442161278) #12, !dbg !3850
  unreachable, !dbg !3850

bb50:                                             ; preds = %bb49
  %_87 = zext i8 %code_size to i32, !dbg !3863
  %_88 = icmp ult i32 %_87, 17, !dbg !3864
  br i1 %_88, label %bb51, label %panic7, !dbg !3864

bb51:                                             ; preds = %bb50
  %82 = getelementptr inbounds nuw i32, ptr %next_code, i32 %_87, !dbg !3864
  %cur_code = load i32, ptr %82, align 4, !dbg !3864
  store i32 %cur_code, ptr %cur_code.dbg.spill, align 4, !dbg !3864
    #dbg_declare(ptr %cur_code.dbg.spill, !3727, !DIExpression(), !3865)
  %_89 = zext i8 %code_size to i32, !dbg !3866
  %_90 = icmp ult i32 %_89, 17, !dbg !3867
  br i1 %_90, label %bb52, label %panic8, !dbg !3867

panic7:                                           ; preds = %bb50
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_87, i32 17, ptr align 4 @alloc_75195312b4c6037b8e536e68cb9e2150) #12, !dbg !3864
  unreachable, !dbg !3864

bb52:                                             ; preds = %bb51
  %83 = getelementptr inbounds nuw i32, ptr %next_code, i32 %_89, !dbg !3867
  %84 = load i32, ptr %83, align 4, !dbg !3867
  %_91.0 = add i32 %84, 1, !dbg !3867
  %_91.1 = icmp ult i32 %_91.0, %84, !dbg !3867
  br i1 %_91.1, label %panic9, label %bb53, !dbg !3867

panic8:                                           ; preds = %bb51
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_89, i32 17, ptr align 4 @alloc_f1b6a7c08fceb6de3e82d047197d3255) #12, !dbg !3867
  unreachable, !dbg !3867

bb53:                                             ; preds = %bb52
  %85 = getelementptr inbounds nuw i32, ptr %next_code, i32 %_89, !dbg !3867
  store i32 %_91.0, ptr %85, align 4, !dbg !3867
  %_96.0 = sub i8 32, %code_size, !dbg !3868
  %_96.1 = icmp ult i8 32, %code_size, !dbg !3868
  br i1 %_96.1, label %panic10, label %bb54, !dbg !3868

panic9:                                           ; preds = %bb52
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_f1b6a7c08fceb6de3e82d047197d3255) #12, !dbg !3867
  unreachable, !dbg !3867

bb54:                                             ; preds = %bb53
  %_97 = icmp ult i8 %_96.0, 32, !dbg !3869
  br i1 %_97, label %bb55, label %panic11, !dbg !3869

panic10:                                          ; preds = %bb53
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_b0bb74b1d6e13bc0a22f0f46f5707663) #12, !dbg !3868
  unreachable, !dbg !3868

bb55:                                             ; preds = %bb54
  %86 = and i8 %_96.0, 31, !dbg !3869
  %87 = zext i8 %86 to i32, !dbg !3869
  %_94 = lshr i32 -1, %87, !dbg !3869
  %_93 = and i32 %cur_code, %_94, !dbg !3870
  %n = trunc i32 %_93 to i16, !dbg !3870
  store i16 %n, ptr %n.dbg.spill, align 2, !dbg !3870
    #dbg_declare(ptr %n.dbg.spill, !3729, !DIExpression(), !3871)
  %_100 = icmp ult i16 %n, 512, !dbg !3872
  br i1 %_100, label %bb56, label %bb57, !dbg !3872

panic11:                                          ; preds = %bb54
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_c9cad49567170ef78707604d4df904a3) #12, !dbg !3869
  unreachable, !dbg !3869

bb57:                                             ; preds = %bb55
  store i16 %n, ptr %self.dbg.spill.i, align 2
    #dbg_declare(ptr %self.dbg.spill.i, !2683, !DIExpression(), !3873)
  %88 = call i16 @llvm.bitreverse.i16(i16 %n), !dbg !3875
  store i16 %88, ptr %0, align 2, !dbg !3875
  %_0.i = load i16, ptr %0, align 2, !dbg !3875
  store i16 %_0.i, ptr %_99, align 2, !dbg !3876
  br label %bb58, !dbg !3876

bb56:                                             ; preds = %bb55
; call miniz_oxide::inflate::core::reverse_bits
  %89 = call i16 @_ZN11miniz_oxide7inflate4core12reverse_bits17hfe29b955f271108dE(i16 %n) #11, !dbg !3877
  store i16 %89, ptr %_99, align 2, !dbg !3877
  br label %bb58, !dbg !3877

bb58:                                             ; preds = %bb56, %bb57
  %_102.0 = sub i8 16, %code_size, !dbg !3878
  %_102.1 = icmp ult i8 16, %code_size, !dbg !3878
  br i1 %_102.1, label %panic12, label %bb59, !dbg !3878

bb59:                                             ; preds = %bb58
  %_103 = icmp ult i8 %_102.0, 16, !dbg !3879
  br i1 %_103, label %bb60, label %panic13, !dbg !3879

panic12:                                          ; preds = %bb58
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_7d5854bf3ad25d35e0798e01000c1acb) #12, !dbg !3878
  unreachable, !dbg !3878

bb60:                                             ; preds = %bb59
  %90 = load i16, ptr %_99, align 2, !dbg !3879
  %91 = and i8 %_102.0, 15, !dbg !3879
  %92 = zext i8 %91 to i16, !dbg !3879
  %93 = lshr i16 %90, %92, !dbg !3879
  store i16 %93, ptr %rev_code, align 2, !dbg !3879
  %_104 = icmp ule i8 %code_size, 10, !dbg !3880
  br i1 %_104, label %bb61, label %bb69, !dbg !3880

panic13:                                          ; preds = %bb59
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_d9b31d64cfc4f489766ced2cf3970dce) #12, !dbg !3879
  unreachable, !dbg !3879

bb69:                                             ; preds = %bb60
  %_122 = load i16, ptr %rev_code, align 2, !dbg !3881
  %_121 = and i16 %_122, 1023, !dbg !3882
  %_120 = zext i16 %_121 to i32, !dbg !3882
  %_125 = icmp ult i32 %_120, 1024, !dbg !3883
  br i1 %_125, label %bb71, label %panic14, !dbg !3883

bb61:                                             ; preds = %bb60
  store i8 %code_size, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !3884, !DIExpression(), !3890)
  %_0.i40 = zext i8 %code_size to i16, !dbg !3892
  %_106 = shl i16 %_0.i40, 9, !dbg !3893
  %_110 = trunc i32 %symbol_index to i16, !dbg !3894
  %k = or i16 %_106, %_110, !dbg !3893
  store i16 %k, ptr %k.dbg.spill, align 2, !dbg !3893
    #dbg_declare(ptr %k.dbg.spill, !3733, !DIExpression(), !3895)
  br label %bb64, !dbg !3896

bb71:                                             ; preds = %bb69
  %94 = getelementptr inbounds nuw i16, ptr %table, i32 %_120, !dbg !3883
  %95 = load i16, ptr %94, align 2, !dbg !3883
  store i16 %95, ptr %tree_cur, align 2, !dbg !3883
  %_127 = load i16, ptr %tree_cur, align 2, !dbg !3897
  %_126 = icmp eq i16 %_127, 798, !dbg !3897
  br i1 %_126, label %bb72, label %bb76, !dbg !3897

panic14:                                          ; preds = %bb69
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_120, i32 1024, ptr align 4 @alloc_3d0584006e2a2fff73ac91bfe0e3bec4) #12, !dbg !3883
  unreachable, !dbg !3883

bb76:                                             ; preds = %bb75, %bb71
  %96 = load i16, ptr %rev_code, align 2, !dbg !3898
  %97 = lshr i16 %96, 9, !dbg !3898
  store i16 %97, ptr %rev_code, align 2, !dbg !3898
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %98 = call { i8, i8 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h350134702857a6b3E"(i8 11, i8 %code_size) #11, !dbg !3899
  %_140.0 = extractvalue { i8, i8 } %98, 0, !dbg !3899
  %_140.1 = extractvalue { i8, i8 } %98, 1, !dbg !3899
  store i8 %_140.0, ptr %iter3, align 1, !dbg !3899
  %99 = getelementptr inbounds i8, ptr %iter3, i32 1, !dbg !3899
  store i8 %_140.1, ptr %99, align 1, !dbg !3899
  br label %bb81, !dbg !3900

bb72:                                             ; preds = %bb71
  %_128 = load i16, ptr %tree_next, align 2, !dbg !3901
  %_131 = load i16, ptr %rev_code, align 2, !dbg !3902
  %_130 = and i16 %_131, 1023, !dbg !3903
  %_129 = zext i16 %_130 to i32, !dbg !3903
  %_134 = icmp ult i32 %_129, 1024, !dbg !3904
  br i1 %_134, label %bb74, label %panic15, !dbg !3904

bb74:                                             ; preds = %bb72
  %100 = getelementptr inbounds nuw i16, ptr %table, i32 %_129, !dbg !3904
  store i16 %_128, ptr %100, align 2, !dbg !3904
  %_135 = load i16, ptr %tree_next, align 2, !dbg !3905
  store i16 %_135, ptr %tree_cur, align 2, !dbg !3906
  %101 = load i16, ptr %tree_next, align 2, !dbg !3907
  %102 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %101, i16 2), !dbg !3907
  %_136.0 = extractvalue { i16, i1 } %102, 0, !dbg !3907
  %_136.1 = extractvalue { i16, i1 } %102, 1, !dbg !3907
  br i1 %_136.1, label %panic16, label %bb75, !dbg !3907

panic15:                                          ; preds = %bb72
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_129, i32 1024, ptr align 4 @alloc_d6eb5bacf10cdbdf576bd1d6f8377a58) #12, !dbg !3904
  unreachable, !dbg !3904

bb75:                                             ; preds = %bb74
  store i16 %_136.0, ptr %tree_next, align 2, !dbg !3907
  br label %bb76, !dbg !3908

panic16:                                          ; preds = %bb74
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_f7b6b75ed1a27fdd40e56bc25df4b16d) #12, !dbg !3907
  unreachable, !dbg !3907

bb81:                                             ; preds = %bb96, %bb94, %bb76
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %103 = call { i1, i8 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd6c9ee0b3ee3d632E"(ptr align 1 %iter3) #11, !dbg !3762
  %_145.0 = extractvalue { i1, i8 } %103, 0, !dbg !3762
  %_145.1 = extractvalue { i1, i8 } %103, 1, !dbg !3762
  %_147 = zext i1 %_145.0 to i32, !dbg !3762
  %104 = trunc nuw i32 %_147 to i1, !dbg !3762
  br i1 %104, label %bb83, label %bb84, !dbg !3762

bb83:                                             ; preds = %bb81
  %105 = load i16, ptr %rev_code, align 2, !dbg !3909
  %106 = lshr i16 %105, 1, !dbg !3909
  store i16 %106, ptr %rev_code, align 2, !dbg !3909
  %_152 = load i16, ptr %rev_code, align 2, !dbg !3910
  %_151 = and i16 %_152, 1, !dbg !3911
  %107 = load i16, ptr %tree_cur, align 2, !dbg !3912
  %108 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %107, i16 %_151), !dbg !3912
  %_153.0 = extractvalue { i16, i1 } %108, 0, !dbg !3912
  %_153.1 = extractvalue { i16, i1 } %108, 1, !dbg !3912
  br i1 %_153.1, label %panic21, label %bb86, !dbg !3912

bb84:                                             ; preds = %bb81
  %109 = load i16, ptr %rev_code, align 2, !dbg !3913
  %110 = lshr i16 %109, 1, !dbg !3913
  store i16 %110, ptr %rev_code, align 2, !dbg !3913
  %_176 = load i16, ptr %rev_code, align 2, !dbg !3914
  %_175 = and i16 %_176, 1, !dbg !3915
  %111 = load i16, ptr %tree_cur, align 2, !dbg !3916
  %112 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %111, i16 %_175), !dbg !3916
  %_177.0 = extractvalue { i16, i1 } %112, 0, !dbg !3916
  %_177.1 = extractvalue { i16, i1 } %112, 1, !dbg !3916
  br i1 %_177.1, label %panic17, label %bb98, !dbg !3916

bb98:                                             ; preds = %bb84
  store i16 %_177.0, ptr %tree_cur, align 2, !dbg !3916
  %_181 = load i16, ptr %tree_cur, align 2, !dbg !3917
  %_182 = icmp eq i16 %_181, -32768, !dbg !3918
  br i1 %_182, label %panic18, label %bb99, !dbg !3918

panic17:                                          ; preds = %bb84
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_4acf9319653e60ad954f09d8f5160e78) #12, !dbg !3916
  unreachable, !dbg !3916

bb99:                                             ; preds = %bb98
  %_180 = sub i16 0, %_181, !dbg !3918
  %113 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %_180, i16 1), !dbg !3919
  %_183.0 = extractvalue { i16, i1 } %113, 0, !dbg !3919
  %_183.1 = extractvalue { i16, i1 } %113, 1, !dbg !3919
  br i1 %_183.1, label %panic19, label %bb100, !dbg !3919

panic18:                                          ; preds = %bb98
; call core::panicking::panic_const::panic_const_neg_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_neg_overflow17h371e6116aede4348E(ptr align 4 @alloc_f0ebd5b02b6d0b0ca14e0b84a33f8319) #12, !dbg !3918
  unreachable, !dbg !3918

bb100:                                            ; preds = %bb99
  %tree_index = sext i16 %_183.0 to i32, !dbg !3919
  store i32 %tree_index, ptr %tree_index.dbg.spill, align 4, !dbg !3919
    #dbg_declare(ptr %tree_index.dbg.spill, !3747, !DIExpression(), !3920)
  %_187 = getelementptr inbounds i8, ptr %table, i32 2048, !dbg !3921
  %_184 = icmp uge i32 %tree_index, 576, !dbg !3922
  br i1 %_184, label %bb101, label %bb102, !dbg !3922

panic19:                                          ; preds = %bb99
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_4e4266533d68e1fa4afb86ce7e5e3eca) #12, !dbg !3919
  unreachable, !dbg !3919

bb102:                                            ; preds = %bb100
  %_188 = icmp ult i32 %tree_index, 576, !dbg !3923
  br i1 %_188, label %bb103, label %panic20, !dbg !3923

bb101:                                            ; preds = %bb100
  store i8 3, ptr %_0, align 1, !dbg !3924
  br label %bb109, !dbg !3925

bb103:                                            ; preds = %bb102
  %114 = getelementptr inbounds i8, ptr %table, i32 2048, !dbg !3923
  %115 = getelementptr inbounds nuw i16, ptr %114, i32 %tree_index, !dbg !3923
  %116 = trunc i32 %symbol_index to i16, !dbg !3923
  store i16 %116, ptr %115, align 2, !dbg !3923
  br label %bb45, !dbg !3842

panic20:                                          ; preds = %bb102
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %tree_index, i32 576, ptr align 4 @alloc_0445d5efef1a23def9446d8da8190811) #12, !dbg !3923
  unreachable, !dbg !3923

bb86:                                             ; preds = %bb83
  store i16 %_153.0, ptr %tree_cur, align 2, !dbg !3912
  %_157 = load i16, ptr %tree_cur, align 2, !dbg !3927
  %_158 = icmp eq i16 %_157, -32768, !dbg !3928
  br i1 %_158, label %panic22, label %bb87, !dbg !3928

panic21:                                          ; preds = %bb83
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_9f8f5522c9a44310e93a62fb1bc60d61) #12, !dbg !3912
  unreachable, !dbg !3912

bb87:                                             ; preds = %bb86
  %_156 = sub i16 0, %_157, !dbg !3928
  %117 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %_156, i16 1), !dbg !3929
  %_159.0 = extractvalue { i16, i1 } %117, 0, !dbg !3929
  %_159.1 = extractvalue { i16, i1 } %117, 1, !dbg !3929
  br i1 %_159.1, label %panic23, label %bb88, !dbg !3929

panic22:                                          ; preds = %bb86
; call core::panicking::panic_const::panic_const_neg_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_neg_overflow17h371e6116aede4348E(ptr align 4 @alloc_167ae0599c291077d319823e3ee43c37) #12, !dbg !3928
  unreachable, !dbg !3928

bb88:                                             ; preds = %bb87
  %tree_index24 = sext i16 %_159.0 to i32, !dbg !3929
  store i32 %tree_index24, ptr %tree_index.dbg.spill25, align 4, !dbg !3929
    #dbg_declare(ptr %tree_index.dbg.spill25, !3745, !DIExpression(), !3930)
  %_163 = getelementptr inbounds i8, ptr %table, i32 2048, !dbg !3931
  %_160 = icmp uge i32 %tree_index24, 576, !dbg !3932
  br i1 %_160, label %bb89, label %bb90, !dbg !3932

panic23:                                          ; preds = %bb87
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_b198154aec930f62091bb481d2b7fa82) #12, !dbg !3929
  unreachable, !dbg !3929

bb90:                                             ; preds = %bb88
  %_165 = icmp ult i32 %tree_index24, 576, !dbg !3933
  br i1 %_165, label %bb91, label %panic26, !dbg !3933

bb89:                                             ; preds = %bb88
  store i8 3, ptr %_0, align 1, !dbg !3934
  br label %bb109, !dbg !3925

bb91:                                             ; preds = %bb90
  %118 = getelementptr inbounds i8, ptr %table, i32 2048, !dbg !3933
  %119 = getelementptr inbounds nuw i16, ptr %118, i32 %tree_index24, !dbg !3933
  %_164 = load i16, ptr %119, align 2, !dbg !3933
  %120 = icmp eq i16 %_164, 0, !dbg !3933
  br i1 %120, label %bb92, label %bb95, !dbg !3933

panic26:                                          ; preds = %bb90
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %tree_index24, i32 576, ptr align 4 @alloc_32e04051e30ae77135131fe96cf1aa27) #12, !dbg !3933
  unreachable, !dbg !3933

bb92:                                             ; preds = %bb91
  %_166 = load i16, ptr %tree_next, align 2, !dbg !3935
  %_167 = icmp ult i32 %tree_index24, 576, !dbg !3936
  br i1 %_167, label %bb93, label %panic27, !dbg !3936

bb95:                                             ; preds = %bb91
  %_171 = icmp ult i32 %tree_index24, 576, !dbg !3937
  br i1 %_171, label %bb96, label %panic29, !dbg !3937

bb93:                                             ; preds = %bb92
  %121 = getelementptr inbounds i8, ptr %table, i32 2048, !dbg !3936
  %122 = getelementptr inbounds nuw i16, ptr %121, i32 %tree_index24, !dbg !3936
  store i16 %_166, ptr %122, align 2, !dbg !3936
  %_168 = load i16, ptr %tree_next, align 2, !dbg !3938
  store i16 %_168, ptr %tree_cur, align 2, !dbg !3939
  %123 = load i16, ptr %tree_next, align 2, !dbg !3940
  %124 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %123, i16 2), !dbg !3940
  %_169.0 = extractvalue { i16, i1 } %124, 0, !dbg !3940
  %_169.1 = extractvalue { i16, i1 } %124, 1, !dbg !3940
  br i1 %_169.1, label %panic28, label %bb94, !dbg !3940

panic27:                                          ; preds = %bb92
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %tree_index24, i32 576, ptr align 4 @alloc_42c7fc99230b37e1ba258d38a529b9ec) #12, !dbg !3936
  unreachable, !dbg !3936

bb94:                                             ; preds = %bb93
  store i16 %_169.0, ptr %tree_next, align 2, !dbg !3940
  br label %bb81, !dbg !3941

panic28:                                          ; preds = %bb93
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_ad7e1b170b9e02db21d40dec04589c0a) #12, !dbg !3940
  unreachable, !dbg !3940

bb96:                                             ; preds = %bb95
  %125 = getelementptr inbounds i8, ptr %table, i32 2048, !dbg !3937
  %126 = getelementptr inbounds nuw i16, ptr %125, i32 %tree_index24, !dbg !3937
  %_170 = load i16, ptr %126, align 2, !dbg !3937
  store i16 %_170, ptr %tree_cur, align 2, !dbg !3942
  br label %bb81, !dbg !3941

panic29:                                          ; preds = %bb95
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %tree_index24, i32 576, ptr align 4 @alloc_4f6ac3c56f88de2be1b6bff77442da67) #12, !dbg !3937
  unreachable, !dbg !3937

bb64:                                             ; preds = %bb68, %bb61
  %_112 = load i16, ptr %rev_code, align 2, !dbg !3943
  %_111 = icmp ult i16 %_112, 1024, !dbg !3943
  br i1 %_111, label %bb65, label %bb45, !dbg !3943

bb65:                                             ; preds = %bb64
  %_114 = load i16, ptr %rev_code, align 2, !dbg !3944
  %_113 = zext i16 %_114 to i32, !dbg !3944
  %_115 = icmp ult i32 %_113, 1024, !dbg !3945
  br i1 %_115, label %bb66, label %panic30, !dbg !3945

bb66:                                             ; preds = %bb65
  %127 = getelementptr inbounds nuw i16, ptr %table, i32 %_113, !dbg !3945
  store i16 %k, ptr %127, align 2, !dbg !3945
  %_117 = icmp ult i8 %code_size, 16, !dbg !3946
  br i1 %_117, label %bb67, label %panic31, !dbg !3946

panic30:                                          ; preds = %bb65
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %_113, i32 1024, ptr align 4 @alloc_91e234c94f77ef772bda84d26e12261e) #12, !dbg !3945
  unreachable, !dbg !3945

bb67:                                             ; preds = %bb66
  %128 = and i8 %code_size, 15, !dbg !3946
  %129 = zext i8 %128 to i16, !dbg !3946
  %_116 = shl i16 1, %129, !dbg !3946
  %130 = load i16, ptr %rev_code, align 2, !dbg !3947
  %_118.0 = add i16 %130, %_116, !dbg !3947
  %_118.1 = icmp ult i16 %_118.0, %130, !dbg !3947
  br i1 %_118.1, label %panic32, label %bb68, !dbg !3947

panic31:                                          ; preds = %bb66
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_124cf75e1d65bd14ed8c4dbe6ca4449b) #12, !dbg !3946
  unreachable, !dbg !3946

bb68:                                             ; preds = %bb67
  store i16 %_118.0, ptr %rev_code, align 2, !dbg !3947
  br label %bb64, !dbg !3896

panic32:                                          ; preds = %bb67
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_379c26e618708f9f4224a83a0e771685) #12, !dbg !3947
  unreachable, !dbg !3947

bb36:                                             ; preds = %bb34
  store i16 %_61.0, ptr %used_symbols, align 2, !dbg !3838
  store i16 %ts, ptr %small.dbg.spill.i41, align 2
    #dbg_declare(ptr %small.dbg.spill.i41, !1088, !DIExpression(), !3948)
  %_0.i42 = zext i16 %ts to i32, !dbg !3950
  %131 = load i32, ptr %total, align 4, !dbg !3951
  %_63.0 = add i32 %131, %_0.i42, !dbg !3951
  %_63.1 = icmp ult i32 %_63.0, %131, !dbg !3951
  br i1 %_63.1, label %panic34, label %bb38, !dbg !3951

panic33:                                          ; preds = %bb34
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_c45e15353cfcfe79646b8d85a82be8b9) #12, !dbg !3838
  unreachable, !dbg !3838

bb38:                                             ; preds = %bb36
  store i32 %_63.0, ptr %total, align 4, !dbg !3951
  %132 = load i32, ptr %total, align 4, !dbg !3952
  %133 = shl i32 %132, 1, !dbg !3952
  store i32 %133, ptr %total, align 4, !dbg !3952
  %_66 = load i32, ptr %total, align 4, !dbg !3953
  store i32 %_66, ptr %next, align 4, !dbg !3954
  br label %bb32, !dbg !3833

panic34:                                          ; preds = %bb36
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_8ad5cdaca9969f549eebff07583ada94) #12, !dbg !3951
  unreachable, !dbg !3951

bb23:                                             ; preds = %bb20
  %_41 = icmp ult i32 %cs, 16, !dbg !3955
  br i1 %_41, label %bb24, label %panic37, !dbg !3955

bb22:                                             ; preds = %bb20
  store i8 3, ptr %_0, align 1, !dbg !3956
  br label %bb109, !dbg !3818

bb24:                                             ; preds = %bb23
  %134 = getelementptr inbounds nuw i16, ptr %total_symbols, i32 %cs, !dbg !3955
  %135 = load i16, ptr %134, align 2, !dbg !3955
  %_42.0 = add i16 %135, 1, !dbg !3955
  %_42.1 = icmp ult i16 %_42.0, %135, !dbg !3955
  br i1 %_42.1, label %panic38, label %bb25, !dbg !3955

panic37:                                          ; preds = %bb23
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %cs, i32 16, ptr align 4 @alloc_2e426b6511a3e97df53e9398af6113c1) #12, !dbg !3955
  unreachable, !dbg !3955

bb25:                                             ; preds = %bb24
  %136 = getelementptr inbounds nuw i16, ptr %total_symbols, i32 %cs, !dbg !3955
  store i16 %_42.0, ptr %136, align 2, !dbg !3955
  br label %bb17, !dbg !3816

panic38:                                          ; preds = %bb24
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_2e426b6511a3e97df53e9398af6113c1) #12, !dbg !3955
  unreachable, !dbg !3955

bb19:                                             ; No predecessors!
  unreachable, !dbg !3957
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h288010cbd3bc759bE(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags) unnamed_addr #0 !dbg !3959 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !3963, !DIExpression(), !3974)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !3964, !DIExpression(), !3975)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !3965, !DIExpression(), !3976)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !3966, !DIExpression(), !3977)
    #dbg_declare(ptr %f.dbg.spill, !3967, !DIExpression(), !3978)
  br label %bb1, !dbg !3979

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3980
  %_7 = load i32, ptr %0, align 4, !dbg !3980
  %_6 = icmp ult i32 %_7, %amount, !dbg !3980
  br i1 %_6, label %bb2, label %bb5, !dbg !3980

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !3981
  %_17 = icmp ult i32 %amount, 32, !dbg !3982
  br i1 %_17, label %bb6, label %panic, !dbg !3982

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3983
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h9b620a4596d5e189E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !3984
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !3984
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !3984
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !3984
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !3984
  store i8 %action.1, ptr %2, align 1, !dbg !3984
    #dbg_declare(ptr %action.dbg.spill, !3968, !DIExpression(), !3985)
  %_12 = zext i8 %action.0 to i32, !dbg !3986
  %3 = icmp eq i32 %_12, 0, !dbg !3987
  br i1 %3, label %bb1, label %bb4, !dbg !3987

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !3982
  %_16 = shl i32 1, %4, !dbg !3982
  %_18.0 = sub i32 %_16, 1, !dbg !3988
  %_18.1 = icmp ult i32 %_16, 1, !dbg !3988
  br i1 %_18.1, label %panic1, label %bb7, !dbg !3988

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !3982
  unreachable, !dbg !3982

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !3981
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !3981
    #dbg_declare(ptr %bits.dbg.spill, !3970, !DIExpression(), !3989)
  %_19 = icmp ult i32 %amount, 32, !dbg !3990
  br i1 %_19, label %bb8, label %panic2, !dbg !3990

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !3988
  unreachable, !dbg !3988

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !3990
  %6 = and i32 %amount, 31, !dbg !3990
  %7 = lshr i32 %5, %6, !dbg !3990
  store i32 %7, ptr %l, align 4, !dbg !3990
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3991
  %9 = load i32, ptr %8, align 4, !dbg !3991
  %_20.0 = sub i32 %9, %amount, !dbg !3991
  %_20.1 = icmp ult i32 %9, %amount, !dbg !3991
  br i1 %_20.1, label %panic3, label %bb9, !dbg !3991

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !3990
  unreachable, !dbg !3990

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !3991
  store i32 %_20.0, ptr %10, align 4, !dbg !3991
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h542f16e863614498E"(ptr align 4 %l, i32 %bits) #11, !dbg !3992
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !3992
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !3992
  store i8 %12, ptr %_0, align 1, !dbg !3992
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3992
  store i8 %13, ptr %14, align 1, !dbg !3992
  br label %bb10, !dbg !3992

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !3991
  unreachable, !dbg !3991

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !3993
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3993
  %17 = load i8, ptr %16, align 1, !dbg !3993
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !3993
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !3993
  ret { i8, i8 } %19, !dbg !3993

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !3994
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !3994
  store i8 %action.1, ptr %20, align 1, !dbg !3994
  br label %bb10, !dbg !3995
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h66e7e21f8e400e8bE(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags) unnamed_addr #0 !dbg !3996 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4000, !DIExpression(), !4011)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4001, !DIExpression(), !4012)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4002, !DIExpression(), !4013)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4003, !DIExpression(), !4014)
    #dbg_declare(ptr %f.dbg.spill, !4004, !DIExpression(), !4015)
  br label %bb1, !dbg !4016

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4017
  %_7 = load i32, ptr %0, align 4, !dbg !4017
  %_6 = icmp ult i32 %_7, %amount, !dbg !4017
  br i1 %_6, label %bb2, label %bb5, !dbg !4017

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4018
  %_17 = icmp ult i32 %amount, 32, !dbg !4019
  br i1 %_17, label %bb6, label %panic, !dbg !4019

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4020
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17hb3043eb4b3ee2bd7E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4021
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4021
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4021
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4021
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4021
  store i8 %action.1, ptr %2, align 1, !dbg !4021
    #dbg_declare(ptr %action.dbg.spill, !4005, !DIExpression(), !4022)
  %_12 = zext i8 %action.0 to i32, !dbg !4023
  %3 = icmp eq i32 %_12, 0, !dbg !4024
  br i1 %3, label %bb1, label %bb4, !dbg !4024

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4019
  %_16 = shl i32 1, %4, !dbg !4019
  %_18.0 = sub i32 %_16, 1, !dbg !4025
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4025
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4025

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4019
  unreachable, !dbg !4019

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4018
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4018
    #dbg_declare(ptr %bits.dbg.spill, !4007, !DIExpression(), !4026)
  %_19 = icmp ult i32 %amount, 32, !dbg !4027
  br i1 %_19, label %bb8, label %panic2, !dbg !4027

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4025
  unreachable, !dbg !4025

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4027
  %6 = and i32 %amount, 31, !dbg !4027
  %7 = lshr i32 %5, %6, !dbg !4027
  store i32 %7, ptr %l, align 4, !dbg !4027
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4028
  %9 = load i32, ptr %8, align 4, !dbg !4028
  %_20.0 = sub i32 %9, %amount, !dbg !4028
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4028
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4028

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4027
  unreachable, !dbg !4027

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4028
  store i32 %_20.0, ptr %10, align 4, !dbg !4028
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hcad5797352f30decE"(ptr align 4 %l, i32 %bits) #11, !dbg !4029
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4029
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4029
  store i8 %12, ptr %_0, align 1, !dbg !4029
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4029
  store i8 %13, ptr %14, align 1, !dbg !4029
  br label %bb10, !dbg !4029

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4028
  unreachable, !dbg !4028

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4030
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4030
  %17 = load i8, ptr %16, align 1, !dbg !4030
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4030
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4030
  ret { i8, i8 } %19, !dbg !4030

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4031
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4031
  store i8 %action.1, ptr %20, align 1, !dbg !4031
  br label %bb10, !dbg !4032
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h6bec93435712bff5E(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags) unnamed_addr #0 !dbg !4033 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4037, !DIExpression(), !4048)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4038, !DIExpression(), !4049)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4039, !DIExpression(), !4050)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4040, !DIExpression(), !4051)
    #dbg_declare(ptr %f.dbg.spill, !4041, !DIExpression(), !4052)
  br label %bb1, !dbg !4053

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4054
  %_7 = load i32, ptr %0, align 4, !dbg !4054
  %_6 = icmp ult i32 %_7, %amount, !dbg !4054
  br i1 %_6, label %bb2, label %bb5, !dbg !4054

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4055
  %_17 = icmp ult i32 %amount, 32, !dbg !4056
  br i1 %_17, label %bb6, label %panic, !dbg !4056

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4057
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17hdb3583234b2c66d8E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4058
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4058
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4058
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4058
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4058
  store i8 %action.1, ptr %2, align 1, !dbg !4058
    #dbg_declare(ptr %action.dbg.spill, !4042, !DIExpression(), !4059)
  %_12 = zext i8 %action.0 to i32, !dbg !4060
  %3 = icmp eq i32 %_12, 0, !dbg !4061
  br i1 %3, label %bb1, label %bb4, !dbg !4061

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4056
  %_16 = shl i32 1, %4, !dbg !4056
  %_18.0 = sub i32 %_16, 1, !dbg !4062
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4062
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4062

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4056
  unreachable, !dbg !4056

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4055
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4055
    #dbg_declare(ptr %bits.dbg.spill, !4044, !DIExpression(), !4063)
  %_19 = icmp ult i32 %amount, 32, !dbg !4064
  br i1 %_19, label %bb8, label %panic2, !dbg !4064

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4062
  unreachable, !dbg !4062

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4064
  %6 = and i32 %amount, 31, !dbg !4064
  %7 = lshr i32 %5, %6, !dbg !4064
  store i32 %7, ptr %l, align 4, !dbg !4064
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4065
  %9 = load i32, ptr %8, align 4, !dbg !4065
  %_20.0 = sub i32 %9, %amount, !dbg !4065
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4065
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4065

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4064
  unreachable, !dbg !4064

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4065
  store i32 %_20.0, ptr %10, align 4, !dbg !4065
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h62cde2448a124dc1E"(ptr align 4 %l, i32 %bits) #11, !dbg !4066
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4066
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4066
  store i8 %12, ptr %_0, align 1, !dbg !4066
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4066
  store i8 %13, ptr %14, align 1, !dbg !4066
  br label %bb10, !dbg !4066

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4065
  unreachable, !dbg !4065

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4067
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4067
  %17 = load i8, ptr %16, align 1, !dbg !4067
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4067
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4067
  ret { i8, i8 } %19, !dbg !4067

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4068
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4068
  store i8 %action.1, ptr %20, align 1, !dbg !4068
  br label %bb10, !dbg !4069
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h88437ac8f8dc885dE(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags) unnamed_addr #0 !dbg !4070 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4074, !DIExpression(), !4085)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4075, !DIExpression(), !4086)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4076, !DIExpression(), !4087)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4077, !DIExpression(), !4088)
    #dbg_declare(ptr %f.dbg.spill, !4078, !DIExpression(), !4089)
  br label %bb1, !dbg !4090

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4091
  %_7 = load i32, ptr %0, align 4, !dbg !4091
  %_6 = icmp ult i32 %_7, %amount, !dbg !4091
  br i1 %_6, label %bb2, label %bb5, !dbg !4091

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4092
  %_17 = icmp ult i32 %amount, 32, !dbg !4093
  br i1 %_17, label %bb6, label %panic, !dbg !4093

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4094
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h04a480ce863f1ffdE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4095
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4095
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4095
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4095
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4095
  store i8 %action.1, ptr %2, align 1, !dbg !4095
    #dbg_declare(ptr %action.dbg.spill, !4079, !DIExpression(), !4096)
  %_12 = zext i8 %action.0 to i32, !dbg !4097
  %3 = icmp eq i32 %_12, 0, !dbg !4098
  br i1 %3, label %bb1, label %bb4, !dbg !4098

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4093
  %_16 = shl i32 1, %4, !dbg !4093
  %_18.0 = sub i32 %_16, 1, !dbg !4099
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4099
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4099

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4093
  unreachable, !dbg !4093

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4092
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4092
    #dbg_declare(ptr %bits.dbg.spill, !4081, !DIExpression(), !4100)
  %_19 = icmp ult i32 %amount, 32, !dbg !4101
  br i1 %_19, label %bb8, label %panic2, !dbg !4101

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4099
  unreachable, !dbg !4099

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4101
  %6 = and i32 %amount, 31, !dbg !4101
  %7 = lshr i32 %5, %6, !dbg !4101
  store i32 %7, ptr %l, align 4, !dbg !4101
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4102
  %9 = load i32, ptr %8, align 4, !dbg !4102
  %_20.0 = sub i32 %9, %amount, !dbg !4102
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4102
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4102

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4101
  unreachable, !dbg !4101

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4102
  store i32 %_20.0, ptr %10, align 4, !dbg !4102
; call miniz_oxide::inflate::core::pad_to_bytes::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core12pad_to_bytes28_$u7b$$u7b$closure$u7d$$u7d$17h2e691ca5772ee0efE"(ptr align 4 %l, i32 %bits) #11, !dbg !4103
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4103
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4103
  store i8 %12, ptr %_0, align 1, !dbg !4103
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4103
  store i8 %13, ptr %14, align 1, !dbg !4103
  br label %bb10, !dbg !4103

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4102
  unreachable, !dbg !4102

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4104
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4104
  %17 = load i8, ptr %16, align 1, !dbg !4104
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4104
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4104
  ret { i8, i8 } %19, !dbg !4104

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4105
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4105
  store i8 %action.1, ptr %20, align 1, !dbg !4105
  br label %bb10, !dbg !4106
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17h919057ec6bc2f307E(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags, ptr align 2 %f) unnamed_addr #0 !dbg !4107 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4111, !DIExpression(), !4122)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4112, !DIExpression(), !4123)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4113, !DIExpression(), !4124)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4114, !DIExpression(), !4125)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4115, !DIExpression(), !4126)
  br label %bb1, !dbg !4127

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4128
  %_7 = load i32, ptr %0, align 4, !dbg !4128
  %_6 = icmp ult i32 %_7, %amount, !dbg !4128
  br i1 %_6, label %bb2, label %bb5, !dbg !4128

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4129
  %_17 = icmp ult i32 %amount, 32, !dbg !4130
  br i1 %_17, label %bb6, label %panic, !dbg !4130

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4131
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h5b3bc57ed22294d3E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4132
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4132
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4132
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4132
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4132
  store i8 %action.1, ptr %2, align 1, !dbg !4132
    #dbg_declare(ptr %action.dbg.spill, !4116, !DIExpression(), !4133)
  %_12 = zext i8 %action.0 to i32, !dbg !4134
  %3 = icmp eq i32 %_12, 0, !dbg !4135
  br i1 %3, label %bb1, label %bb4, !dbg !4135

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4130
  %_16 = shl i32 1, %4, !dbg !4130
  %_18.0 = sub i32 %_16, 1, !dbg !4136
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4136
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4136

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4130
  unreachable, !dbg !4130

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4129
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4129
    #dbg_declare(ptr %bits.dbg.spill, !4118, !DIExpression(), !4137)
  %_19 = icmp ult i32 %amount, 32, !dbg !4138
  br i1 %_19, label %bb8, label %panic2, !dbg !4138

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4136
  unreachable, !dbg !4136

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4138
  %6 = and i32 %amount, 31, !dbg !4138
  %7 = lshr i32 %5, %6, !dbg !4138
  store i32 %7, ptr %l, align 4, !dbg !4138
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4139
  %9 = load i32, ptr %8, align 4, !dbg !4139
  %_20.0 = sub i32 %9, %amount, !dbg !4139
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4139
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4139

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4138
  unreachable, !dbg !4138

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4139
  store i32 %_20.0, ptr %10, align 4, !dbg !4139
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h8ded89fe72afbb5fE"(ptr align 2 %f, ptr align 4 %l, i32 %bits) #11, !dbg !4140
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4140
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4140
  store i8 %12, ptr %_0, align 1, !dbg !4140
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4140
  store i8 %13, ptr %14, align 1, !dbg !4140
  br label %bb10, !dbg !4140

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4139
  unreachable, !dbg !4139

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4141
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4141
  %17 = load i8, ptr %16, align 1, !dbg !4141
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4141
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4141
  ret { i8, i8 } %19, !dbg !4141

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4142
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4142
  store i8 %action.1, ptr %20, align 1, !dbg !4142
  br label %bb10, !dbg !4143
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hae2123298af03554E(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags, ptr align 4 %f) unnamed_addr #0 !dbg !4144 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4148, !DIExpression(), !4159)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4149, !DIExpression(), !4160)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4150, !DIExpression(), !4161)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4151, !DIExpression(), !4162)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4152, !DIExpression(), !4163)
  br label %bb1, !dbg !4164

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4165
  %_7 = load i32, ptr %0, align 4, !dbg !4165
  %_6 = icmp ult i32 %_7, %amount, !dbg !4165
  br i1 %_6, label %bb2, label %bb5, !dbg !4165

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4166
  %_17 = icmp ult i32 %amount, 32, !dbg !4167
  br i1 %_17, label %bb6, label %panic, !dbg !4167

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4168
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h3ad176f6a8a88fb8E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4169
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4169
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4169
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4169
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4169
  store i8 %action.1, ptr %2, align 1, !dbg !4169
    #dbg_declare(ptr %action.dbg.spill, !4153, !DIExpression(), !4170)
  %_12 = zext i8 %action.0 to i32, !dbg !4171
  %3 = icmp eq i32 %_12, 0, !dbg !4172
  br i1 %3, label %bb1, label %bb4, !dbg !4172

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4167
  %_16 = shl i32 1, %4, !dbg !4167
  %_18.0 = sub i32 %_16, 1, !dbg !4173
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4173
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4173

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4167
  unreachable, !dbg !4167

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4166
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4166
    #dbg_declare(ptr %bits.dbg.spill, !4155, !DIExpression(), !4174)
  %_19 = icmp ult i32 %amount, 32, !dbg !4175
  br i1 %_19, label %bb8, label %panic2, !dbg !4175

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4173
  unreachable, !dbg !4173

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4175
  %6 = and i32 %amount, 31, !dbg !4175
  %7 = lshr i32 %5, %6, !dbg !4175
  store i32 %7, ptr %l, align 4, !dbg !4175
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4176
  %9 = load i32, ptr %8, align 4, !dbg !4176
  %_20.0 = sub i32 %9, %amount, !dbg !4176
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4176
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4176

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4175
  unreachable, !dbg !4175

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4176
  store i32 %_20.0, ptr %10, align 4, !dbg !4176
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h93baf7daff723fdaE"(ptr align 4 %f, ptr align 4 %l, i32 %bits) #11, !dbg !4177
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4177
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4177
  store i8 %12, ptr %_0, align 1, !dbg !4177
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4177
  store i8 %13, ptr %14, align 1, !dbg !4177
  br label %bb10, !dbg !4177

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4176
  unreachable, !dbg !4176

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4178
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4178
  %17 = load i8, ptr %16, align 1, !dbg !4178
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4178
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4178
  ret { i8, i8 } %19, !dbg !4178

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4179
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4179
  store i8 %action.1, ptr %20, align 1, !dbg !4179
  br label %bb10, !dbg !4180
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hb0997e645d13c603E(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags, ptr align 4 %f) unnamed_addr #0 !dbg !4181 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4185, !DIExpression(), !4196)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4186, !DIExpression(), !4197)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4187, !DIExpression(), !4198)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4188, !DIExpression(), !4199)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4189, !DIExpression(), !4200)
  br label %bb1, !dbg !4201

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4202
  %_7 = load i32, ptr %0, align 4, !dbg !4202
  %_6 = icmp ult i32 %_7, %amount, !dbg !4202
  br i1 %_6, label %bb2, label %bb5, !dbg !4202

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4203
  %_17 = icmp ult i32 %amount, 32, !dbg !4204
  br i1 %_17, label %bb6, label %panic, !dbg !4204

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4205
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h43c235ca5659b11fE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4206
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4206
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4206
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4206
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4206
  store i8 %action.1, ptr %2, align 1, !dbg !4206
    #dbg_declare(ptr %action.dbg.spill, !4190, !DIExpression(), !4207)
  %_12 = zext i8 %action.0 to i32, !dbg !4208
  %3 = icmp eq i32 %_12, 0, !dbg !4209
  br i1 %3, label %bb1, label %bb4, !dbg !4209

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4204
  %_16 = shl i32 1, %4, !dbg !4204
  %_18.0 = sub i32 %_16, 1, !dbg !4210
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4210
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4210

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4204
  unreachable, !dbg !4204

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4203
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4203
    #dbg_declare(ptr %bits.dbg.spill, !4192, !DIExpression(), !4211)
  %_19 = icmp ult i32 %amount, 32, !dbg !4212
  br i1 %_19, label %bb8, label %panic2, !dbg !4212

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4210
  unreachable, !dbg !4210

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4212
  %6 = and i32 %amount, 31, !dbg !4212
  %7 = lshr i32 %5, %6, !dbg !4212
  store i32 %7, ptr %l, align 4, !dbg !4212
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4213
  %9 = load i32, ptr %8, align 4, !dbg !4213
  %_20.0 = sub i32 %9, %amount, !dbg !4213
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4213
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4213

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4212
  unreachable, !dbg !4212

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4213
  store i32 %_20.0, ptr %10, align 4, !dbg !4213
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hd6b344c6490bb9f6E"(ptr align 4 %f, ptr align 4 %l, i32 %bits) #11, !dbg !4214
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4214
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4214
  store i8 %12, ptr %_0, align 1, !dbg !4214
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4214
  store i8 %13, ptr %14, align 1, !dbg !4214
  br label %bb10, !dbg !4214

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4213
  unreachable, !dbg !4213

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4215
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4215
  %17 = load i8, ptr %16, align 1, !dbg !4215
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4215
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4215
  ret { i8, i8 } %19, !dbg !4215

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4216
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4216
  store i8 %action.1, ptr %20, align 1, !dbg !4216
  br label %bb10, !dbg !4217
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hc0ca427319091c08E(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags) unnamed_addr #0 !dbg !4218 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4222, !DIExpression(), !4233)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4223, !DIExpression(), !4234)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4224, !DIExpression(), !4235)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4225, !DIExpression(), !4236)
    #dbg_declare(ptr %f.dbg.spill, !4226, !DIExpression(), !4237)
  br label %bb1, !dbg !4238

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4239
  %_7 = load i32, ptr %0, align 4, !dbg !4239
  %_6 = icmp ult i32 %_7, %amount, !dbg !4239
  br i1 %_6, label %bb2, label %bb5, !dbg !4239

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4240
  %_17 = icmp ult i32 %amount, 32, !dbg !4241
  br i1 %_17, label %bb6, label %panic, !dbg !4241

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4242
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h34575ab945af68ccE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4243
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4243
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4243
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4243
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4243
  store i8 %action.1, ptr %2, align 1, !dbg !4243
    #dbg_declare(ptr %action.dbg.spill, !4227, !DIExpression(), !4244)
  %_12 = zext i8 %action.0 to i32, !dbg !4245
  %3 = icmp eq i32 %_12, 0, !dbg !4246
  br i1 %3, label %bb1, label %bb4, !dbg !4246

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4241
  %_16 = shl i32 1, %4, !dbg !4241
  %_18.0 = sub i32 %_16, 1, !dbg !4247
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4247
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4247

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4241
  unreachable, !dbg !4241

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4240
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4240
    #dbg_declare(ptr %bits.dbg.spill, !4229, !DIExpression(), !4248)
  %_19 = icmp ult i32 %amount, 32, !dbg !4249
  br i1 %_19, label %bb8, label %panic2, !dbg !4249

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4247
  unreachable, !dbg !4247

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4249
  %6 = and i32 %amount, 31, !dbg !4249
  %7 = lshr i32 %5, %6, !dbg !4249
  store i32 %7, ptr %l, align 4, !dbg !4249
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4250
  %9 = load i32, ptr %8, align 4, !dbg !4250
  %_20.0 = sub i32 %9, %amount, !dbg !4250
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4250
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4250

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4249
  unreachable, !dbg !4249

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4250
  store i32 %_20.0, ptr %10, align 4, !dbg !4250
; call miniz_oxide::inflate::core::pad_to_bytes::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core12pad_to_bytes28_$u7b$$u7b$closure$u7d$$u7d$17h86203c64ed86a615E"(ptr align 4 %l, i32 %bits) #11, !dbg !4251
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4251
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4251
  store i8 %12, ptr %_0, align 1, !dbg !4251
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4251
  store i8 %13, ptr %14, align 1, !dbg !4251
  br label %bb10, !dbg !4251

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4250
  unreachable, !dbg !4250

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4252
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4252
  %17 = load i8, ptr %16, align 1, !dbg !4252
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4252
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4252
  ret { i8, i8 } %19, !dbg !4252

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4253
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4253
  store i8 %action.1, ptr %20, align 1, !dbg !4253
  br label %bb10, !dbg !4254
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hc11b12166584f99bE(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags, ptr align 1 %f) unnamed_addr #0 !dbg !4255 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4259, !DIExpression(), !4270)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4260, !DIExpression(), !4271)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4261, !DIExpression(), !4272)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4262, !DIExpression(), !4273)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4263, !DIExpression(), !4274)
  br label %bb1, !dbg !4275

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4276
  %_7 = load i32, ptr %0, align 4, !dbg !4276
  %_6 = icmp ult i32 %_7, %amount, !dbg !4276
  br i1 %_6, label %bb2, label %bb5, !dbg !4276

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4277
  %_17 = icmp ult i32 %amount, 32, !dbg !4278
  br i1 %_17, label %bb6, label %panic, !dbg !4278

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4279
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17ha31f4ea8d6eeb955E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4280
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4280
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4280
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4280
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4280
  store i8 %action.1, ptr %2, align 1, !dbg !4280
    #dbg_declare(ptr %action.dbg.spill, !4264, !DIExpression(), !4281)
  %_12 = zext i8 %action.0 to i32, !dbg !4282
  %3 = icmp eq i32 %_12, 0, !dbg !4283
  br i1 %3, label %bb1, label %bb4, !dbg !4283

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4278
  %_16 = shl i32 1, %4, !dbg !4278
  %_18.0 = sub i32 %_16, 1, !dbg !4284
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4284
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4284

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4278
  unreachable, !dbg !4278

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4277
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4277
    #dbg_declare(ptr %bits.dbg.spill, !4266, !DIExpression(), !4285)
  %_19 = icmp ult i32 %amount, 32, !dbg !4286
  br i1 %_19, label %bb8, label %panic2, !dbg !4286

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4284
  unreachable, !dbg !4284

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4286
  %6 = and i32 %amount, 31, !dbg !4286
  %7 = lshr i32 %5, %6, !dbg !4286
  store i32 %7, ptr %l, align 4, !dbg !4286
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4287
  %9 = load i32, ptr %8, align 4, !dbg !4287
  %_20.0 = sub i32 %9, %amount, !dbg !4287
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4287
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4287

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4286
  unreachable, !dbg !4286

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4287
  store i32 %_20.0, ptr %10, align 4, !dbg !4287
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha87f2de35545e9adE"(ptr align 1 %f, ptr align 4 %l, i32 %bits) #11, !dbg !4288
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4288
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4288
  store i8 %12, ptr %_0, align 1, !dbg !4288
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4288
  store i8 %13, ptr %14, align 1, !dbg !4288
  br label %bb10, !dbg !4288

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4287
  unreachable, !dbg !4287

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4289
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4289
  %17 = load i8, ptr %16, align 1, !dbg !4289
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4289
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4289
  ret { i8, i8 } %19, !dbg !4289

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4290
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4290
  store i8 %action.1, ptr %20, align 1, !dbg !4290
  br label %bb10, !dbg !4291
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hc66494087bc7899aE(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags, ptr align 1 %f) unnamed_addr #0 !dbg !4292 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4296, !DIExpression(), !4307)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4297, !DIExpression(), !4308)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4298, !DIExpression(), !4309)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4299, !DIExpression(), !4310)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4300, !DIExpression(), !4311)
  br label %bb1, !dbg !4312

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4313
  %_7 = load i32, ptr %0, align 4, !dbg !4313
  %_6 = icmp ult i32 %_7, %amount, !dbg !4313
  br i1 %_6, label %bb2, label %bb5, !dbg !4313

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4314
  %_17 = icmp ult i32 %amount, 32, !dbg !4315
  br i1 %_17, label %bb6, label %panic, !dbg !4315

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4316
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h8e4b3e18bd02443aE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4317
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4317
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4317
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4317
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4317
  store i8 %action.1, ptr %2, align 1, !dbg !4317
    #dbg_declare(ptr %action.dbg.spill, !4301, !DIExpression(), !4318)
  %_12 = zext i8 %action.0 to i32, !dbg !4319
  %3 = icmp eq i32 %_12, 0, !dbg !4320
  br i1 %3, label %bb1, label %bb4, !dbg !4320

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4315
  %_16 = shl i32 1, %4, !dbg !4315
  %_18.0 = sub i32 %_16, 1, !dbg !4321
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4321
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4321

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4315
  unreachable, !dbg !4315

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4314
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4314
    #dbg_declare(ptr %bits.dbg.spill, !4303, !DIExpression(), !4322)
  %_19 = icmp ult i32 %amount, 32, !dbg !4323
  br i1 %_19, label %bb8, label %panic2, !dbg !4323

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4321
  unreachable, !dbg !4321

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4323
  %6 = and i32 %amount, 31, !dbg !4323
  %7 = lshr i32 %5, %6, !dbg !4323
  store i32 %7, ptr %l, align 4, !dbg !4323
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4324
  %9 = load i32, ptr %8, align 4, !dbg !4324
  %_20.0 = sub i32 %9, %amount, !dbg !4324
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4324
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4324

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4323
  unreachable, !dbg !4323

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4324
  store i32 %_20.0, ptr %10, align 4, !dbg !4324
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h171db5d0045c0787E"(ptr align 1 %f, ptr align 4 %l, i32 %bits) #11, !dbg !4325
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4325
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4325
  store i8 %12, ptr %_0, align 1, !dbg !4325
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4325
  store i8 %13, ptr %14, align 1, !dbg !4325
  br label %bb10, !dbg !4325

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4324
  unreachable, !dbg !4324

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4326
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4326
  %17 = load i8, ptr %16, align 1, !dbg !4326
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4326
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4326
  ret { i8, i8 } %19, !dbg !4326

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4327
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4327
  store i8 %action.1, ptr %20, align 1, !dbg !4327
  br label %bb10, !dbg !4328
}

; miniz_oxide::inflate::core::read_bits
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_bits17hf0e00b4296fb0b08E(ptr align 4 %l, i32 %amount, ptr align 4 %in_iter, i32 %flags, ptr align 1 %f) unnamed_addr #0 !dbg !4329 {
start:
  %action.dbg.spill = alloca [2 x i8], align 1
  %bits.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %amount.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %l, ptr %l.dbg.spill, align 4
    #dbg_declare(ptr %l.dbg.spill, !4333, !DIExpression(), !4344)
  store i32 %amount, ptr %amount.dbg.spill, align 4
    #dbg_declare(ptr %amount.dbg.spill, !4334, !DIExpression(), !4345)
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4335, !DIExpression(), !4346)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4336, !DIExpression(), !4347)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4337, !DIExpression(), !4348)
  br label %bb1, !dbg !4349

bb1:                                              ; preds = %bb2, %start
  %0 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4350
  %_7 = load i32, ptr %0, align 4, !dbg !4350
  %_6 = icmp ult i32 %_7, %amount, !dbg !4350
  br i1 %_6, label %bb2, label %bb5, !dbg !4350

bb5:                                              ; preds = %bb1
  %_14 = load i32, ptr %l, align 4, !dbg !4351
  %_17 = icmp ult i32 %amount, 32, !dbg !4352
  br i1 %_17, label %bb6, label %panic, !dbg !4352

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4353
; call miniz_oxide::inflate::core::read_byte
  %1 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17ha2c461d1d3b8597bE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %l, ptr align 4 %_11) #11, !dbg !4354
  %action.0 = extractvalue { i8, i8 } %1, 0, !dbg !4354
  %action.1 = extractvalue { i8, i8 } %1, 1, !dbg !4354
  store i8 %action.0, ptr %action.dbg.spill, align 1, !dbg !4354
  %2 = getelementptr inbounds i8, ptr %action.dbg.spill, i32 1, !dbg !4354
  store i8 %action.1, ptr %2, align 1, !dbg !4354
    #dbg_declare(ptr %action.dbg.spill, !4338, !DIExpression(), !4355)
  %_12 = zext i8 %action.0 to i32, !dbg !4356
  %3 = icmp eq i32 %_12, 0, !dbg !4357
  br i1 %3, label %bb1, label %bb4, !dbg !4357

bb6:                                              ; preds = %bb5
  %4 = and i32 %amount, 31, !dbg !4352
  %_16 = shl i32 1, %4, !dbg !4352
  %_18.0 = sub i32 %_16, 1, !dbg !4358
  %_18.1 = icmp ult i32 %_16, 1, !dbg !4358
  br i1 %_18.1, label %panic1, label %bb7, !dbg !4358

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_5098459050fb70f40f93eb133c14d62e) #12, !dbg !4352
  unreachable, !dbg !4352

bb7:                                              ; preds = %bb6
  %bits = and i32 %_14, %_18.0, !dbg !4351
  store i32 %bits, ptr %bits.dbg.spill, align 4, !dbg !4351
    #dbg_declare(ptr %bits.dbg.spill, !4340, !DIExpression(), !4359)
  %_19 = icmp ult i32 %amount, 32, !dbg !4360
  br i1 %_19, label %bb8, label %panic2, !dbg !4360

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_df28c055808506f44eb971997f1e4543) #12, !dbg !4358
  unreachable, !dbg !4358

bb8:                                              ; preds = %bb7
  %5 = load i32, ptr %l, align 4, !dbg !4360
  %6 = and i32 %amount, 31, !dbg !4360
  %7 = lshr i32 %5, %6, !dbg !4360
  store i32 %7, ptr %l, align 4, !dbg !4360
  %8 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4361
  %9 = load i32, ptr %8, align 4, !dbg !4361
  %_20.0 = sub i32 %9, %amount, !dbg !4361
  %_20.1 = icmp ult i32 %9, %amount, !dbg !4361
  br i1 %_20.1, label %panic3, label %bb9, !dbg !4361

panic2:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 @alloc_28516df66aa939a4a20b5cc47ff995ce) #12, !dbg !4360
  unreachable, !dbg !4360

bb9:                                              ; preds = %bb8
  %10 = getelementptr inbounds i8, ptr %l, i32 4, !dbg !4361
  store i32 %_20.0, ptr %10, align 4, !dbg !4361
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha4e769859de4a0f6E"(ptr align 1 %f, ptr align 4 %l, i32 %bits) #11, !dbg !4362
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4362
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4362
  store i8 %12, ptr %_0, align 1, !dbg !4362
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4362
  store i8 %13, ptr %14, align 1, !dbg !4362
  br label %bb10, !dbg !4362

panic3:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_c4912ccb00b9d43d1302993610812da8) #12, !dbg !4361
  unreachable, !dbg !4361

bb10:                                             ; preds = %bb4, %bb9
  %15 = load i8, ptr %_0, align 1, !dbg !4363
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4363
  %17 = load i8, ptr %16, align 1, !dbg !4363
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !4363
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !4363
  ret { i8, i8 } %19, !dbg !4363

bb4:                                              ; preds = %bb2
  store i8 %action.0, ptr %_0, align 1, !dbg !4364
  %20 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4364
  store i8 %action.1, ptr %20, align 1, !dbg !4364
  br label %bb10, !dbg !4365
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h00f5c09a34d5d694E"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4366 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4376, !DIExpression(DW_OP_deref), !4378)
    #dbg_declare(ptr %_1.dbg.spill, !4377, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4378)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4375, !DIExpression(), !4379)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4380)
  %_0.i = zext i8 %byte to i32, !dbg !4382
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4383
  %_6 = icmp ult i32 %_5, 32, !dbg !4384
  br i1 %_6, label %bb2, label %panic, !dbg !4384

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4384
  %_3 = shl i32 %_0.i, %1, !dbg !4384
  %2 = load i32, ptr %_1.0, align 4, !dbg !4385
  %3 = or i32 %2, %_3, !dbg !4385
  store i32 %3, ptr %_1.0, align 4, !dbg !4385
  %4 = load i32, ptr %_1.1, align 4, !dbg !4386
  %_7.0 = add i32 %4, 8, !dbg !4386
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4386
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4386

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4384
  unreachable, !dbg !4384

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4386
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4387

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4386
  unreachable, !dbg !4386
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h03662553eb0fdff4E"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4388 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4397, !DIExpression(DW_OP_deref), !4399)
    #dbg_declare(ptr %_1.dbg.spill, !4398, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4399)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4396, !DIExpression(), !4400)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4401)
  %_0.i = zext i8 %byte to i32, !dbg !4403
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4404
  %_6 = icmp ult i32 %_5, 32, !dbg !4405
  br i1 %_6, label %bb2, label %panic, !dbg !4405

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4405
  %_3 = shl i32 %_0.i, %1, !dbg !4405
  %2 = load i32, ptr %_1.0, align 4, !dbg !4406
  %3 = or i32 %2, %_3, !dbg !4406
  store i32 %3, ptr %_1.0, align 4, !dbg !4406
  %4 = load i32, ptr %_1.1, align 4, !dbg !4407
  %_7.0 = add i32 %4, 8, !dbg !4407
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4407
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4407

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4405
  unreachable, !dbg !4405

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4407
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4408

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4407
  unreachable, !dbg !4407
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h17a62425fdf17ef9E"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4409 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4418, !DIExpression(DW_OP_deref), !4420)
    #dbg_declare(ptr %_1.dbg.spill, !4419, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4420)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4417, !DIExpression(), !4421)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4422)
  %_0.i = zext i8 %byte to i32, !dbg !4424
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4425
  %_6 = icmp ult i32 %_5, 32, !dbg !4426
  br i1 %_6, label %bb2, label %panic, !dbg !4426

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4426
  %_3 = shl i32 %_0.i, %1, !dbg !4426
  %2 = load i32, ptr %_1.0, align 4, !dbg !4427
  %3 = or i32 %2, %_3, !dbg !4427
  store i32 %3, ptr %_1.0, align 4, !dbg !4427
  %4 = load i32, ptr %_1.1, align 4, !dbg !4428
  %_7.0 = add i32 %4, 8, !dbg !4428
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4428
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4428

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4426
  unreachable, !dbg !4426

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4428
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4429

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4428
  unreachable, !dbg !4428
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h1ae344eee6993bedE"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4430 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4439, !DIExpression(DW_OP_deref), !4441)
    #dbg_declare(ptr %_1.dbg.spill, !4440, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4441)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4438, !DIExpression(), !4442)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4443)
  %_0.i = zext i8 %byte to i32, !dbg !4445
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4446
  %_6 = icmp ult i32 %_5, 32, !dbg !4447
  br i1 %_6, label %bb2, label %panic, !dbg !4447

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4447
  %_3 = shl i32 %_0.i, %1, !dbg !4447
  %2 = load i32, ptr %_1.0, align 4, !dbg !4448
  %3 = or i32 %2, %_3, !dbg !4448
  store i32 %3, ptr %_1.0, align 4, !dbg !4448
  %4 = load i32, ptr %_1.1, align 4, !dbg !4449
  %_7.0 = add i32 %4, 8, !dbg !4449
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4449
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4449

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4447
  unreachable, !dbg !4447

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4449
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4450

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4449
  unreachable, !dbg !4449
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h4fe98832bd8ac2d6E"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4451 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4460, !DIExpression(DW_OP_deref), !4462)
    #dbg_declare(ptr %_1.dbg.spill, !4461, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4462)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4459, !DIExpression(), !4463)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4464)
  %_0.i = zext i8 %byte to i32, !dbg !4466
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4467
  %_6 = icmp ult i32 %_5, 32, !dbg !4468
  br i1 %_6, label %bb2, label %panic, !dbg !4468

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4468
  %_3 = shl i32 %_0.i, %1, !dbg !4468
  %2 = load i32, ptr %_1.0, align 4, !dbg !4469
  %3 = or i32 %2, %_3, !dbg !4469
  store i32 %3, ptr %_1.0, align 4, !dbg !4469
  %4 = load i32, ptr %_1.1, align 4, !dbg !4470
  %_7.0 = add i32 %4, 8, !dbg !4470
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4470
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4470

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4468
  unreachable, !dbg !4468

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4470
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4471

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4470
  unreachable, !dbg !4470
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h69ba590f493e13d7E"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4472 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4481, !DIExpression(DW_OP_deref), !4483)
    #dbg_declare(ptr %_1.dbg.spill, !4482, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4483)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4480, !DIExpression(), !4484)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4485)
  %_0.i = zext i8 %byte to i32, !dbg !4487
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4488
  %_6 = icmp ult i32 %_5, 32, !dbg !4489
  br i1 %_6, label %bb2, label %panic, !dbg !4489

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4489
  %_3 = shl i32 %_0.i, %1, !dbg !4489
  %2 = load i32, ptr %_1.0, align 4, !dbg !4490
  %3 = or i32 %2, %_3, !dbg !4490
  store i32 %3, ptr %_1.0, align 4, !dbg !4490
  %4 = load i32, ptr %_1.1, align 4, !dbg !4491
  %_7.0 = add i32 %4, 8, !dbg !4491
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4491
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4491

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4489
  unreachable, !dbg !4489

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4491
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4492

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4491
  unreachable, !dbg !4491
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h81614364f5c81b1bE"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4493 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4502, !DIExpression(DW_OP_deref), !4504)
    #dbg_declare(ptr %_1.dbg.spill, !4503, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4504)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4501, !DIExpression(), !4505)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4506)
  %_0.i = zext i8 %byte to i32, !dbg !4508
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4509
  %_6 = icmp ult i32 %_5, 32, !dbg !4510
  br i1 %_6, label %bb2, label %panic, !dbg !4510

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4510
  %_3 = shl i32 %_0.i, %1, !dbg !4510
  %2 = load i32, ptr %_1.0, align 4, !dbg !4511
  %3 = or i32 %2, %_3, !dbg !4511
  store i32 %3, ptr %_1.0, align 4, !dbg !4511
  %4 = load i32, ptr %_1.1, align 4, !dbg !4512
  %_7.0 = add i32 %4, 8, !dbg !4512
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4512
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4512

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4510
  unreachable, !dbg !4510

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4512
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4513

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4512
  unreachable, !dbg !4512
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h83879e1d4971c2abE"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4514 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4523, !DIExpression(DW_OP_deref), !4525)
    #dbg_declare(ptr %_1.dbg.spill, !4524, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4525)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4522, !DIExpression(), !4526)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4527)
  %_0.i = zext i8 %byte to i32, !dbg !4529
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4530
  %_6 = icmp ult i32 %_5, 32, !dbg !4531
  br i1 %_6, label %bb2, label %panic, !dbg !4531

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4531
  %_3 = shl i32 %_0.i, %1, !dbg !4531
  %2 = load i32, ptr %_1.0, align 4, !dbg !4532
  %3 = or i32 %2, %_3, !dbg !4532
  store i32 %3, ptr %_1.0, align 4, !dbg !4532
  %4 = load i32, ptr %_1.1, align 4, !dbg !4533
  %_7.0 = add i32 %4, 8, !dbg !4533
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4533
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4533

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4531
  unreachable, !dbg !4531

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4533
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4534

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4533
  unreachable, !dbg !4533
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hb7e8f5a29fc109c0E"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4535 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4544, !DIExpression(DW_OP_deref), !4546)
    #dbg_declare(ptr %_1.dbg.spill, !4545, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4546)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4543, !DIExpression(), !4547)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4548)
  %_0.i = zext i8 %byte to i32, !dbg !4550
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4551
  %_6 = icmp ult i32 %_5, 32, !dbg !4552
  br i1 %_6, label %bb2, label %panic, !dbg !4552

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4552
  %_3 = shl i32 %_0.i, %1, !dbg !4552
  %2 = load i32, ptr %_1.0, align 4, !dbg !4553
  %3 = or i32 %2, %_3, !dbg !4553
  store i32 %3, ptr %_1.0, align 4, !dbg !4553
  %4 = load i32, ptr %_1.1, align 4, !dbg !4554
  %_7.0 = add i32 %4, 8, !dbg !4554
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4554
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4554

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4552
  unreachable, !dbg !4552

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4554
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4555

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4554
  unreachable, !dbg !4554
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hebc225c5e39b0acaE"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4556 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4565, !DIExpression(DW_OP_deref), !4567)
    #dbg_declare(ptr %_1.dbg.spill, !4566, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4567)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4564, !DIExpression(), !4568)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4569)
  %_0.i = zext i8 %byte to i32, !dbg !4571
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4572
  %_6 = icmp ult i32 %_5, 32, !dbg !4573
  br i1 %_6, label %bb2, label %panic, !dbg !4573

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4573
  %_3 = shl i32 %_0.i, %1, !dbg !4573
  %2 = load i32, ptr %_1.0, align 4, !dbg !4574
  %3 = or i32 %2, %_3, !dbg !4574
  store i32 %3, ptr %_1.0, align 4, !dbg !4574
  %4 = load i32, ptr %_1.1, align 4, !dbg !4575
  %_7.0 = add i32 %4, 8, !dbg !4575
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4575
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4575

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4573
  unreachable, !dbg !4573

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4575
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4576

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4575
  unreachable, !dbg !4575
}

; miniz_oxide::inflate::core::read_bits::{{closure}}
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hf17f43e0a34f374eE"(ptr align 4 %_1.0, ptr align 4 %_1.1, i8 %byte) unnamed_addr #0 !dbg !4577 {
start:
  %small.dbg.spill.i = alloca [1 x i8], align 1
  %byte.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [8 x i8], align 4
  store ptr %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store ptr %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !4586, !DIExpression(DW_OP_deref), !4588)
    #dbg_declare(ptr %_1.dbg.spill, !4587, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_deref), !4588)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4585, !DIExpression(), !4589)
  store i8 %byte, ptr %small.dbg.spill.i, align 1
    #dbg_declare(ptr %small.dbg.spill.i, !1898, !DIExpression(), !4590)
  %_0.i = zext i8 %byte to i32, !dbg !4592
  %_5 = load i32, ptr %_1.1, align 4, !dbg !4593
  %_6 = icmp ult i32 %_5, 32, !dbg !4594
  br i1 %_6, label %bb2, label %panic, !dbg !4594

bb2:                                              ; preds = %start
  %1 = and i32 %_5, 31, !dbg !4594
  %_3 = shl i32 %_0.i, %1, !dbg !4594
  %2 = load i32, ptr %_1.0, align 4, !dbg !4595
  %3 = or i32 %2, %_3, !dbg !4595
  store i32 %3, ptr %_1.0, align 4, !dbg !4595
  %4 = load i32, ptr %_1.1, align 4, !dbg !4596
  %_7.0 = add i32 %4, 8, !dbg !4596
  %_7.1 = icmp ult i32 %_7.0, %4, !dbg !4596
  br i1 %_7.1, label %panic1, label %bb3, !dbg !4596

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shl_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 @alloc_f7b0772c1436a4555544fef732341e7e) #12, !dbg !4594
  unreachable, !dbg !4594

bb3:                                              ; preds = %bb2
  store i32 %_7.0, ptr %_1.1, align 4, !dbg !4596
  ret { i8, i8 } { i8 0, i8 undef }, !dbg !4597

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 @alloc_6fda78d50ef243f2d21a303aa753b3ba) #12, !dbg !4596
  unreachable, !dbg !4596
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h04a480ce863f1ffdE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4598 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4602, !DIExpression(), !4609)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4603, !DIExpression(), !4610)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4604, !DIExpression(), !4611)
  store i8 0, ptr %_9, align 1, !dbg !4612
  store i8 1, ptr %_9, align 1, !dbg !4612
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4613
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4613
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4613
  %4 = zext i1 %2 to i8, !dbg !4613
  store i8 %4, ptr %_4, align 1, !dbg !4613
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4613
  store i8 %3, ptr %5, align 1, !dbg !4613
  %6 = load i8, ptr %_4, align 1, !dbg !4612
  %7 = trunc nuw i8 %6 to i1, !dbg !4612
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4612
  %9 = load i8, ptr %8, align 1, !dbg !4612
  %_5 = zext i1 %7 to i32, !dbg !4612
  %10 = trunc nuw i32 %_5 to i1, !dbg !4614
  br i1 %10, label %bb3, label %bb4, !dbg !4614

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4615
  %byte = load i8, ptr %11, align 1, !dbg !4615
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4615
    #dbg_declare(ptr %byte.dbg.spill, !4605, !DIExpression(), !4616)
  store i8 0, ptr %_9, align 1, !dbg !4617
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h81614364f5c81b1bE"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4617
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4617
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4617
  store i8 %13, ptr %_0, align 1, !dbg !4617
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4617
  store i8 %14, ptr %15, align 1, !dbg !4617
  br label %bb5, !dbg !4617

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4618
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4618
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4618
  store i8 %17, ptr %_0, align 1, !dbg !4618
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4618
  store i8 %18, ptr %19, align 1, !dbg !4618
  br label %bb5, !dbg !4618

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4619
  %21 = trunc nuw i8 %20 to i1, !dbg !4619
  br i1 %21, label %bb7, label %bb6, !dbg !4619

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4620
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4620
  %24 = load i8, ptr %23, align 1, !dbg !4620
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4620
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4620
  ret { i8, i8 } %26, !dbg !4620

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4619

bb2:                                              ; No predecessors!
  unreachable, !dbg !4612
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h22ea5c72806c2d92E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f) unnamed_addr #0 !dbg !4621 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4625, !DIExpression(), !4632)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4626, !DIExpression(), !4633)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4627, !DIExpression(), !4634)
  store i8 0, ptr %_9, align 1, !dbg !4635
  store i8 1, ptr %_9, align 1, !dbg !4635
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %0 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4636
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !4636
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !4636
  %3 = zext i1 %1 to i8, !dbg !4636
  store i8 %3, ptr %_4, align 1, !dbg !4636
  %4 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4636
  store i8 %2, ptr %4, align 1, !dbg !4636
  %5 = load i8, ptr %_4, align 1, !dbg !4635
  %6 = trunc nuw i8 %5 to i1, !dbg !4635
  %7 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4635
  %8 = load i8, ptr %7, align 1, !dbg !4635
  %_5 = zext i1 %6 to i32, !dbg !4635
  %9 = trunc nuw i32 %_5 to i1, !dbg !4637
  br i1 %9, label %bb3, label %bb4, !dbg !4637

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4638
  %byte = load i8, ptr %10, align 1, !dbg !4638
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4638
    #dbg_declare(ptr %byte.dbg.spill, !4628, !DIExpression(), !4639)
  store i8 0, ptr %_9, align 1, !dbg !4640
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h0b4f6dd55cb5df91E"(ptr align 4 %f, i8 %byte) #11, !dbg !4640
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4640
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4640
  store i8 %12, ptr %_0, align 1, !dbg !4640
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4640
  store i8 %13, ptr %14, align 1, !dbg !4640
  br label %bb5, !dbg !4640

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %15 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4641
  %16 = extractvalue { i8, i8 } %15, 0, !dbg !4641
  %17 = extractvalue { i8, i8 } %15, 1, !dbg !4641
  store i8 %16, ptr %_0, align 1, !dbg !4641
  %18 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4641
  store i8 %17, ptr %18, align 1, !dbg !4641
  br label %bb5, !dbg !4641

bb5:                                              ; preds = %bb3, %bb4
  %19 = load i8, ptr %_9, align 1, !dbg !4642
  %20 = trunc nuw i8 %19 to i1, !dbg !4642
  br i1 %20, label %bb7, label %bb6, !dbg !4642

bb6:                                              ; preds = %bb7, %bb5
  %21 = load i8, ptr %_0, align 1, !dbg !4643
  %22 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4643
  %23 = load i8, ptr %22, align 1, !dbg !4643
  %24 = insertvalue { i8, i8 } poison, i8 %21, 0, !dbg !4643
  %25 = insertvalue { i8, i8 } %24, i8 %23, 1, !dbg !4643
  ret { i8, i8 } %25, !dbg !4643

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4642

bb2:                                              ; No predecessors!
  unreachable, !dbg !4635
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h34575ab945af68ccE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4644 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4648, !DIExpression(), !4655)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4649, !DIExpression(), !4656)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4650, !DIExpression(), !4657)
  store i8 0, ptr %_9, align 1, !dbg !4658
  store i8 1, ptr %_9, align 1, !dbg !4658
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4659
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4659
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4659
  %4 = zext i1 %2 to i8, !dbg !4659
  store i8 %4, ptr %_4, align 1, !dbg !4659
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4659
  store i8 %3, ptr %5, align 1, !dbg !4659
  %6 = load i8, ptr %_4, align 1, !dbg !4658
  %7 = trunc nuw i8 %6 to i1, !dbg !4658
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4658
  %9 = load i8, ptr %8, align 1, !dbg !4658
  %_5 = zext i1 %7 to i32, !dbg !4658
  %10 = trunc nuw i32 %_5 to i1, !dbg !4660
  br i1 %10, label %bb3, label %bb4, !dbg !4660

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4661
  %byte = load i8, ptr %11, align 1, !dbg !4661
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4661
    #dbg_declare(ptr %byte.dbg.spill, !4651, !DIExpression(), !4662)
  store i8 0, ptr %_9, align 1, !dbg !4663
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h17a62425fdf17ef9E"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4663
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4663
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4663
  store i8 %13, ptr %_0, align 1, !dbg !4663
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4663
  store i8 %14, ptr %15, align 1, !dbg !4663
  br label %bb5, !dbg !4663

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4664
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4664
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4664
  store i8 %17, ptr %_0, align 1, !dbg !4664
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4664
  store i8 %18, ptr %19, align 1, !dbg !4664
  br label %bb5, !dbg !4664

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4665
  %21 = trunc nuw i8 %20 to i1, !dbg !4665
  br i1 %21, label %bb7, label %bb6, !dbg !4665

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4666
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4666
  %24 = load i8, ptr %23, align 1, !dbg !4666
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4666
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4666
  ret { i8, i8 } %26, !dbg !4666

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4665

bb2:                                              ; No predecessors!
  unreachable, !dbg !4658
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h3ad176f6a8a88fb8E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4667 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4671, !DIExpression(), !4678)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4672, !DIExpression(), !4679)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4673, !DIExpression(), !4680)
  store i8 0, ptr %_9, align 1, !dbg !4681
  store i8 1, ptr %_9, align 1, !dbg !4681
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4682
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4682
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4682
  %4 = zext i1 %2 to i8, !dbg !4682
  store i8 %4, ptr %_4, align 1, !dbg !4682
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4682
  store i8 %3, ptr %5, align 1, !dbg !4682
  %6 = load i8, ptr %_4, align 1, !dbg !4681
  %7 = trunc nuw i8 %6 to i1, !dbg !4681
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4681
  %9 = load i8, ptr %8, align 1, !dbg !4681
  %_5 = zext i1 %7 to i32, !dbg !4681
  %10 = trunc nuw i32 %_5 to i1, !dbg !4683
  br i1 %10, label %bb3, label %bb4, !dbg !4683

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4684
  %byte = load i8, ptr %11, align 1, !dbg !4684
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4684
    #dbg_declare(ptr %byte.dbg.spill, !4674, !DIExpression(), !4685)
  store i8 0, ptr %_9, align 1, !dbg !4686
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h00f5c09a34d5d694E"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4686
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4686
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4686
  store i8 %13, ptr %_0, align 1, !dbg !4686
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4686
  store i8 %14, ptr %15, align 1, !dbg !4686
  br label %bb5, !dbg !4686

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4687
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4687
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4687
  store i8 %17, ptr %_0, align 1, !dbg !4687
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4687
  store i8 %18, ptr %19, align 1, !dbg !4687
  br label %bb5, !dbg !4687

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4688
  %21 = trunc nuw i8 %20 to i1, !dbg !4688
  br i1 %21, label %bb7, label %bb6, !dbg !4688

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4689
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4689
  %24 = load i8, ptr %23, align 1, !dbg !4689
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4689
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4689
  ret { i8, i8 } %26, !dbg !4689

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4688

bb2:                                              ; No predecessors!
  unreachable, !dbg !4681
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h43c235ca5659b11fE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4690 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4694, !DIExpression(), !4701)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4695, !DIExpression(), !4702)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4696, !DIExpression(), !4703)
  store i8 0, ptr %_9, align 1, !dbg !4704
  store i8 1, ptr %_9, align 1, !dbg !4704
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4705
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4705
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4705
  %4 = zext i1 %2 to i8, !dbg !4705
  store i8 %4, ptr %_4, align 1, !dbg !4705
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4705
  store i8 %3, ptr %5, align 1, !dbg !4705
  %6 = load i8, ptr %_4, align 1, !dbg !4704
  %7 = trunc nuw i8 %6 to i1, !dbg !4704
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4704
  %9 = load i8, ptr %8, align 1, !dbg !4704
  %_5 = zext i1 %7 to i32, !dbg !4704
  %10 = trunc nuw i32 %_5 to i1, !dbg !4706
  br i1 %10, label %bb3, label %bb4, !dbg !4706

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4707
  %byte = load i8, ptr %11, align 1, !dbg !4707
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4707
    #dbg_declare(ptr %byte.dbg.spill, !4697, !DIExpression(), !4708)
  store i8 0, ptr %_9, align 1, !dbg !4709
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hebc225c5e39b0acaE"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4709
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4709
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4709
  store i8 %13, ptr %_0, align 1, !dbg !4709
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4709
  store i8 %14, ptr %15, align 1, !dbg !4709
  br label %bb5, !dbg !4709

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4710
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4710
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4710
  store i8 %17, ptr %_0, align 1, !dbg !4710
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4710
  store i8 %18, ptr %19, align 1, !dbg !4710
  br label %bb5, !dbg !4710

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4711
  %21 = trunc nuw i8 %20 to i1, !dbg !4711
  br i1 %21, label %bb7, label %bb6, !dbg !4711

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4712
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4712
  %24 = load i8, ptr %23, align 1, !dbg !4712
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4712
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4712
  ret { i8, i8 } %26, !dbg !4712

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4711

bb2:                                              ; No predecessors!
  unreachable, !dbg !4704
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h505e12e5a9d5fe03E(ptr align 4 %in_iter, i32 %flags, ptr align 1 %f) unnamed_addr #0 !dbg !4713 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4717, !DIExpression(), !4724)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4718, !DIExpression(), !4725)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4719, !DIExpression(), !4726)
  store i8 0, ptr %_9, align 1, !dbg !4727
  store i8 1, ptr %_9, align 1, !dbg !4727
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %0 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4728
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !4728
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !4728
  %3 = zext i1 %1 to i8, !dbg !4728
  store i8 %3, ptr %_4, align 1, !dbg !4728
  %4 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4728
  store i8 %2, ptr %4, align 1, !dbg !4728
  %5 = load i8, ptr %_4, align 1, !dbg !4727
  %6 = trunc nuw i8 %5 to i1, !dbg !4727
  %7 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4727
  %8 = load i8, ptr %7, align 1, !dbg !4727
  %_5 = zext i1 %6 to i32, !dbg !4727
  %9 = trunc nuw i32 %_5 to i1, !dbg !4729
  br i1 %9, label %bb3, label %bb4, !dbg !4729

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4730
  %byte = load i8, ptr %10, align 1, !dbg !4730
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4730
    #dbg_declare(ptr %byte.dbg.spill, !4720, !DIExpression(), !4731)
  store i8 0, ptr %_9, align 1, !dbg !4732
; call miniz_oxide::inflate::core::decode_huffman_code::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17h54553a1da39d5e2fE"(ptr align 1 %f, i8 %byte) #11, !dbg !4732
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4732
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4732
  store i8 %12, ptr %_0, align 1, !dbg !4732
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4732
  store i8 %13, ptr %14, align 1, !dbg !4732
  br label %bb5, !dbg !4732

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %15 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4733
  %16 = extractvalue { i8, i8 } %15, 0, !dbg !4733
  %17 = extractvalue { i8, i8 } %15, 1, !dbg !4733
  store i8 %16, ptr %_0, align 1, !dbg !4733
  %18 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4733
  store i8 %17, ptr %18, align 1, !dbg !4733
  br label %bb5, !dbg !4733

bb5:                                              ; preds = %bb3, %bb4
  %19 = load i8, ptr %_9, align 1, !dbg !4734
  %20 = trunc nuw i8 %19 to i1, !dbg !4734
  br i1 %20, label %bb7, label %bb6, !dbg !4734

bb6:                                              ; preds = %bb7, %bb5
  %21 = load i8, ptr %_0, align 1, !dbg !4735
  %22 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4735
  %23 = load i8, ptr %22, align 1, !dbg !4735
  %24 = insertvalue { i8, i8 } poison, i8 %21, 0, !dbg !4735
  %25 = insertvalue { i8, i8 } %24, i8 %23, 1, !dbg !4735
  ret { i8, i8 } %25, !dbg !4735

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4734

bb2:                                              ; No predecessors!
  unreachable, !dbg !4727
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h5b3bc57ed22294d3E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4736 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4740, !DIExpression(), !4747)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4741, !DIExpression(), !4748)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4742, !DIExpression(), !4749)
  store i8 0, ptr %_9, align 1, !dbg !4750
  store i8 1, ptr %_9, align 1, !dbg !4750
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4751
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4751
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4751
  %4 = zext i1 %2 to i8, !dbg !4751
  store i8 %4, ptr %_4, align 1, !dbg !4751
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4751
  store i8 %3, ptr %5, align 1, !dbg !4751
  %6 = load i8, ptr %_4, align 1, !dbg !4750
  %7 = trunc nuw i8 %6 to i1, !dbg !4750
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4750
  %9 = load i8, ptr %8, align 1, !dbg !4750
  %_5 = zext i1 %7 to i32, !dbg !4750
  %10 = trunc nuw i32 %_5 to i1, !dbg !4752
  br i1 %10, label %bb3, label %bb4, !dbg !4752

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4753
  %byte = load i8, ptr %11, align 1, !dbg !4753
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4753
    #dbg_declare(ptr %byte.dbg.spill, !4743, !DIExpression(), !4754)
  store i8 0, ptr %_9, align 1, !dbg !4755
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hf17f43e0a34f374eE"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4755
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4755
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4755
  store i8 %13, ptr %_0, align 1, !dbg !4755
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4755
  store i8 %14, ptr %15, align 1, !dbg !4755
  br label %bb5, !dbg !4755

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4756
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4756
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4756
  store i8 %17, ptr %_0, align 1, !dbg !4756
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4756
  store i8 %18, ptr %19, align 1, !dbg !4756
  br label %bb5, !dbg !4756

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4757
  %21 = trunc nuw i8 %20 to i1, !dbg !4757
  br i1 %21, label %bb7, label %bb6, !dbg !4757

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4758
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4758
  %24 = load i8, ptr %23, align 1, !dbg !4758
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4758
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4758
  ret { i8, i8 } %26, !dbg !4758

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4757

bb2:                                              ; No predecessors!
  unreachable, !dbg !4750
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h79940f5754332d9dE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4759 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4763, !DIExpression(), !4770)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4764, !DIExpression(), !4771)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4765, !DIExpression(), !4772)
  store i8 0, ptr %_9, align 1, !dbg !4773
  store i8 1, ptr %_9, align 1, !dbg !4773
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4774
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4774
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4774
  %4 = zext i1 %2 to i8, !dbg !4774
  store i8 %4, ptr %_4, align 1, !dbg !4774
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4774
  store i8 %3, ptr %5, align 1, !dbg !4774
  %6 = load i8, ptr %_4, align 1, !dbg !4773
  %7 = trunc nuw i8 %6 to i1, !dbg !4773
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4773
  %9 = load i8, ptr %8, align 1, !dbg !4773
  %_5 = zext i1 %7 to i32, !dbg !4773
  %10 = trunc nuw i32 %_5 to i1, !dbg !4775
  br i1 %10, label %bb3, label %bb4, !dbg !4775

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4776
  %byte = load i8, ptr %11, align 1, !dbg !4776
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4776
    #dbg_declare(ptr %byte.dbg.spill, !4766, !DIExpression(), !4777)
  store i8 0, ptr %_9, align 1, !dbg !4778
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h7250651f0ed14b80E"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4778
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4778
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4778
  store i8 %13, ptr %_0, align 1, !dbg !4778
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4778
  store i8 %14, ptr %15, align 1, !dbg !4778
  br label %bb5, !dbg !4778

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4779
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4779
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4779
  store i8 %17, ptr %_0, align 1, !dbg !4779
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4779
  store i8 %18, ptr %19, align 1, !dbg !4779
  br label %bb5, !dbg !4779

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4780
  %21 = trunc nuw i8 %20 to i1, !dbg !4780
  br i1 %21, label %bb7, label %bb6, !dbg !4780

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4781
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4781
  %24 = load i8, ptr %23, align 1, !dbg !4781
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4781
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4781
  ret { i8, i8 } %26, !dbg !4781

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4780

bb2:                                              ; No predecessors!
  unreachable, !dbg !4773
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h7b1b2fa669b71c3bE(ptr align 4 %in_iter, i32 %flags, ptr align 1 %f) unnamed_addr #0 !dbg !4782 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4786, !DIExpression(), !4793)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4787, !DIExpression(), !4794)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4788, !DIExpression(), !4795)
  store i8 0, ptr %_9, align 1, !dbg !4796
  store i8 1, ptr %_9, align 1, !dbg !4796
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %0 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4797
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !4797
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !4797
  %3 = zext i1 %1 to i8, !dbg !4797
  store i8 %3, ptr %_4, align 1, !dbg !4797
  %4 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4797
  store i8 %2, ptr %4, align 1, !dbg !4797
  %5 = load i8, ptr %_4, align 1, !dbg !4796
  %6 = trunc nuw i8 %5 to i1, !dbg !4796
  %7 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4796
  %8 = load i8, ptr %7, align 1, !dbg !4796
  %_5 = zext i1 %6 to i32, !dbg !4796
  %9 = trunc nuw i32 %_5 to i1, !dbg !4798
  br i1 %9, label %bb3, label %bb4, !dbg !4798

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4799
  %byte = load i8, ptr %10, align 1, !dbg !4799
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4799
    #dbg_declare(ptr %byte.dbg.spill, !4789, !DIExpression(), !4800)
  store i8 0, ptr %_9, align 1, !dbg !4801
; call miniz_oxide::inflate::core::decode_huffman_code::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17hf5d27689e5c7d0b5E"(ptr align 1 %f, i8 %byte) #11, !dbg !4801
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4801
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4801
  store i8 %12, ptr %_0, align 1, !dbg !4801
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4801
  store i8 %13, ptr %14, align 1, !dbg !4801
  br label %bb5, !dbg !4801

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %15 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4802
  %16 = extractvalue { i8, i8 } %15, 0, !dbg !4802
  %17 = extractvalue { i8, i8 } %15, 1, !dbg !4802
  store i8 %16, ptr %_0, align 1, !dbg !4802
  %18 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4802
  store i8 %17, ptr %18, align 1, !dbg !4802
  br label %bb5, !dbg !4802

bb5:                                              ; preds = %bb3, %bb4
  %19 = load i8, ptr %_9, align 1, !dbg !4803
  %20 = trunc nuw i8 %19 to i1, !dbg !4803
  br i1 %20, label %bb7, label %bb6, !dbg !4803

bb6:                                              ; preds = %bb7, %bb5
  %21 = load i8, ptr %_0, align 1, !dbg !4804
  %22 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4804
  %23 = load i8, ptr %22, align 1, !dbg !4804
  %24 = insertvalue { i8, i8 } poison, i8 %21, 0, !dbg !4804
  %25 = insertvalue { i8, i8 } %24, i8 %23, 1, !dbg !4804
  ret { i8, i8 } %25, !dbg !4804

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4803

bb2:                                              ; No predecessors!
  unreachable, !dbg !4796
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h8e4b3e18bd02443aE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4805 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4809, !DIExpression(), !4816)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4810, !DIExpression(), !4817)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4811, !DIExpression(), !4818)
  store i8 0, ptr %_9, align 1, !dbg !4819
  store i8 1, ptr %_9, align 1, !dbg !4819
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4820
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4820
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4820
  %4 = zext i1 %2 to i8, !dbg !4820
  store i8 %4, ptr %_4, align 1, !dbg !4820
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4820
  store i8 %3, ptr %5, align 1, !dbg !4820
  %6 = load i8, ptr %_4, align 1, !dbg !4819
  %7 = trunc nuw i8 %6 to i1, !dbg !4819
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4819
  %9 = load i8, ptr %8, align 1, !dbg !4819
  %_5 = zext i1 %7 to i32, !dbg !4819
  %10 = trunc nuw i32 %_5 to i1, !dbg !4821
  br i1 %10, label %bb3, label %bb4, !dbg !4821

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4822
  %byte = load i8, ptr %11, align 1, !dbg !4822
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4822
    #dbg_declare(ptr %byte.dbg.spill, !4812, !DIExpression(), !4823)
  store i8 0, ptr %_9, align 1, !dbg !4824
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h69ba590f493e13d7E"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4824
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4824
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4824
  store i8 %13, ptr %_0, align 1, !dbg !4824
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4824
  store i8 %14, ptr %15, align 1, !dbg !4824
  br label %bb5, !dbg !4824

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4825
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4825
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4825
  store i8 %17, ptr %_0, align 1, !dbg !4825
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4825
  store i8 %18, ptr %19, align 1, !dbg !4825
  br label %bb5, !dbg !4825

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4826
  %21 = trunc nuw i8 %20 to i1, !dbg !4826
  br i1 %21, label %bb7, label %bb6, !dbg !4826

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4827
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4827
  %24 = load i8, ptr %23, align 1, !dbg !4827
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4827
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4827
  ret { i8, i8 } %26, !dbg !4827

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4826

bb2:                                              ; No predecessors!
  unreachable, !dbg !4819
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17h9b620a4596d5e189E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4828 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4832, !DIExpression(), !4839)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4833, !DIExpression(), !4840)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4834, !DIExpression(), !4841)
  store i8 0, ptr %_9, align 1, !dbg !4842
  store i8 1, ptr %_9, align 1, !dbg !4842
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4843
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4843
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4843
  %4 = zext i1 %2 to i8, !dbg !4843
  store i8 %4, ptr %_4, align 1, !dbg !4843
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4843
  store i8 %3, ptr %5, align 1, !dbg !4843
  %6 = load i8, ptr %_4, align 1, !dbg !4842
  %7 = trunc nuw i8 %6 to i1, !dbg !4842
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4842
  %9 = load i8, ptr %8, align 1, !dbg !4842
  %_5 = zext i1 %7 to i32, !dbg !4842
  %10 = trunc nuw i32 %_5 to i1, !dbg !4844
  br i1 %10, label %bb3, label %bb4, !dbg !4844

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4845
  %byte = load i8, ptr %11, align 1, !dbg !4845
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4845
    #dbg_declare(ptr %byte.dbg.spill, !4835, !DIExpression(), !4846)
  store i8 0, ptr %_9, align 1, !dbg !4847
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hb7e8f5a29fc109c0E"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4847
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4847
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4847
  store i8 %13, ptr %_0, align 1, !dbg !4847
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4847
  store i8 %14, ptr %15, align 1, !dbg !4847
  br label %bb5, !dbg !4847

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4848
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4848
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4848
  store i8 %17, ptr %_0, align 1, !dbg !4848
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4848
  store i8 %18, ptr %19, align 1, !dbg !4848
  br label %bb5, !dbg !4848

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4849
  %21 = trunc nuw i8 %20 to i1, !dbg !4849
  br i1 %21, label %bb7, label %bb6, !dbg !4849

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4850
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4850
  %24 = load i8, ptr %23, align 1, !dbg !4850
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4850
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4850
  ret { i8, i8 } %26, !dbg !4850

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4849

bb2:                                              ; No predecessors!
  unreachable, !dbg !4842
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17ha2c461d1d3b8597bE(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4851 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4855, !DIExpression(), !4862)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4856, !DIExpression(), !4863)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4857, !DIExpression(), !4864)
  store i8 0, ptr %_9, align 1, !dbg !4865
  store i8 1, ptr %_9, align 1, !dbg !4865
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4866
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4866
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4866
  %4 = zext i1 %2 to i8, !dbg !4866
  store i8 %4, ptr %_4, align 1, !dbg !4866
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4866
  store i8 %3, ptr %5, align 1, !dbg !4866
  %6 = load i8, ptr %_4, align 1, !dbg !4865
  %7 = trunc nuw i8 %6 to i1, !dbg !4865
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4865
  %9 = load i8, ptr %8, align 1, !dbg !4865
  %_5 = zext i1 %7 to i32, !dbg !4865
  %10 = trunc nuw i32 %_5 to i1, !dbg !4867
  br i1 %10, label %bb3, label %bb4, !dbg !4867

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4868
  %byte = load i8, ptr %11, align 1, !dbg !4868
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4868
    #dbg_declare(ptr %byte.dbg.spill, !4858, !DIExpression(), !4869)
  store i8 0, ptr %_9, align 1, !dbg !4870
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h03662553eb0fdff4E"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4870
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4870
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4870
  store i8 %13, ptr %_0, align 1, !dbg !4870
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4870
  store i8 %14, ptr %15, align 1, !dbg !4870
  br label %bb5, !dbg !4870

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4871
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4871
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4871
  store i8 %17, ptr %_0, align 1, !dbg !4871
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4871
  store i8 %18, ptr %19, align 1, !dbg !4871
  br label %bb5, !dbg !4871

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4872
  %21 = trunc nuw i8 %20 to i1, !dbg !4872
  br i1 %21, label %bb7, label %bb6, !dbg !4872

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4873
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4873
  %24 = load i8, ptr %23, align 1, !dbg !4873
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4873
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4873
  ret { i8, i8 } %26, !dbg !4873

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4872

bb2:                                              ; No predecessors!
  unreachable, !dbg !4865
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17ha31f4ea8d6eeb955E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4874 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4878, !DIExpression(), !4885)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4879, !DIExpression(), !4886)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4880, !DIExpression(), !4887)
  store i8 0, ptr %_9, align 1, !dbg !4888
  store i8 1, ptr %_9, align 1, !dbg !4888
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4889
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4889
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4889
  %4 = zext i1 %2 to i8, !dbg !4889
  store i8 %4, ptr %_4, align 1, !dbg !4889
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4889
  store i8 %3, ptr %5, align 1, !dbg !4889
  %6 = load i8, ptr %_4, align 1, !dbg !4888
  %7 = trunc nuw i8 %6 to i1, !dbg !4888
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4888
  %9 = load i8, ptr %8, align 1, !dbg !4888
  %_5 = zext i1 %7 to i32, !dbg !4888
  %10 = trunc nuw i32 %_5 to i1, !dbg !4890
  br i1 %10, label %bb3, label %bb4, !dbg !4890

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4891
  %byte = load i8, ptr %11, align 1, !dbg !4891
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4891
    #dbg_declare(ptr %byte.dbg.spill, !4881, !DIExpression(), !4892)
  store i8 0, ptr %_9, align 1, !dbg !4893
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h4fe98832bd8ac2d6E"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4893
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4893
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4893
  store i8 %13, ptr %_0, align 1, !dbg !4893
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4893
  store i8 %14, ptr %15, align 1, !dbg !4893
  br label %bb5, !dbg !4893

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4894
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4894
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4894
  store i8 %17, ptr %_0, align 1, !dbg !4894
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4894
  store i8 %18, ptr %19, align 1, !dbg !4894
  br label %bb5, !dbg !4894

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4895
  %21 = trunc nuw i8 %20 to i1, !dbg !4895
  br i1 %21, label %bb7, label %bb6, !dbg !4895

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4896
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4896
  %24 = load i8, ptr %23, align 1, !dbg !4896
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4896
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4896
  ret { i8, i8 } %26, !dbg !4896

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4895

bb2:                                              ; No predecessors!
  unreachable, !dbg !4888
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17ha995b252fff8c9f5E(ptr align 4 %in_iter, i32 %flags, ptr align 1 %f) unnamed_addr #0 !dbg !4897 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [4 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4901, !DIExpression(), !4908)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4902, !DIExpression(), !4909)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !4903, !DIExpression(), !4910)
  store i8 0, ptr %_9, align 1, !dbg !4911
  store i8 1, ptr %_9, align 1, !dbg !4911
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %0 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4912
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !4912
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !4912
  %3 = zext i1 %1 to i8, !dbg !4912
  store i8 %3, ptr %_4, align 1, !dbg !4912
  %4 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4912
  store i8 %2, ptr %4, align 1, !dbg !4912
  %5 = load i8, ptr %_4, align 1, !dbg !4911
  %6 = trunc nuw i8 %5 to i1, !dbg !4911
  %7 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4911
  %8 = load i8, ptr %7, align 1, !dbg !4911
  %_5 = zext i1 %6 to i32, !dbg !4911
  %9 = trunc nuw i32 %_5 to i1, !dbg !4913
  br i1 %9, label %bb3, label %bb4, !dbg !4913

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4914
  %byte = load i8, ptr %10, align 1, !dbg !4914
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4914
    #dbg_declare(ptr %byte.dbg.spill, !4904, !DIExpression(), !4915)
  store i8 0, ptr %_9, align 1, !dbg !4916
; call miniz_oxide::inflate::core::decode_huffman_code::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17hc9622de99ccb8765E"(ptr align 1 %f, i8 %byte) #11, !dbg !4916
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !4916
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !4916
  store i8 %12, ptr %_0, align 1, !dbg !4916
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4916
  store i8 %13, ptr %14, align 1, !dbg !4916
  br label %bb5, !dbg !4916

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %15 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4917
  %16 = extractvalue { i8, i8 } %15, 0, !dbg !4917
  %17 = extractvalue { i8, i8 } %15, 1, !dbg !4917
  store i8 %16, ptr %_0, align 1, !dbg !4917
  %18 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4917
  store i8 %17, ptr %18, align 1, !dbg !4917
  br label %bb5, !dbg !4917

bb5:                                              ; preds = %bb3, %bb4
  %19 = load i8, ptr %_9, align 1, !dbg !4918
  %20 = trunc nuw i8 %19 to i1, !dbg !4918
  br i1 %20, label %bb7, label %bb6, !dbg !4918

bb6:                                              ; preds = %bb7, %bb5
  %21 = load i8, ptr %_0, align 1, !dbg !4919
  %22 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4919
  %23 = load i8, ptr %22, align 1, !dbg !4919
  %24 = insertvalue { i8, i8 } poison, i8 %21, 0, !dbg !4919
  %25 = insertvalue { i8, i8 } %24, i8 %23, 1, !dbg !4919
  ret { i8, i8 } %25, !dbg !4919

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4918

bb2:                                              ; No predecessors!
  unreachable, !dbg !4911
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17hb3043eb4b3ee2bd7E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4920 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4924, !DIExpression(), !4931)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4925, !DIExpression(), !4932)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4926, !DIExpression(), !4933)
  store i8 0, ptr %_9, align 1, !dbg !4934
  store i8 1, ptr %_9, align 1, !dbg !4934
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4935
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4935
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4935
  %4 = zext i1 %2 to i8, !dbg !4935
  store i8 %4, ptr %_4, align 1, !dbg !4935
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4935
  store i8 %3, ptr %5, align 1, !dbg !4935
  %6 = load i8, ptr %_4, align 1, !dbg !4934
  %7 = trunc nuw i8 %6 to i1, !dbg !4934
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4934
  %9 = load i8, ptr %8, align 1, !dbg !4934
  %_5 = zext i1 %7 to i32, !dbg !4934
  %10 = trunc nuw i32 %_5 to i1, !dbg !4936
  br i1 %10, label %bb3, label %bb4, !dbg !4936

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4937
  %byte = load i8, ptr %11, align 1, !dbg !4937
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4937
    #dbg_declare(ptr %byte.dbg.spill, !4927, !DIExpression(), !4938)
  store i8 0, ptr %_9, align 1, !dbg !4939
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h83879e1d4971c2abE"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4939
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4939
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4939
  store i8 %13, ptr %_0, align 1, !dbg !4939
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4939
  store i8 %14, ptr %15, align 1, !dbg !4939
  br label %bb5, !dbg !4939

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4940
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4940
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4940
  store i8 %17, ptr %_0, align 1, !dbg !4940
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4940
  store i8 %18, ptr %19, align 1, !dbg !4940
  br label %bb5, !dbg !4940

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4941
  %21 = trunc nuw i8 %20 to i1, !dbg !4941
  br i1 %21, label %bb7, label %bb6, !dbg !4941

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4942
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4942
  %24 = load i8, ptr %23, align 1, !dbg !4942
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4942
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4942
  ret { i8, i8 } %26, !dbg !4942

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4941

bb2:                                              ; No predecessors!
  unreachable, !dbg !4934
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17hdb3583234b2c66d8E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4943 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4947, !DIExpression(), !4954)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4948, !DIExpression(), !4955)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4949, !DIExpression(), !4956)
  store i8 0, ptr %_9, align 1, !dbg !4957
  store i8 1, ptr %_9, align 1, !dbg !4957
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4958
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4958
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4958
  %4 = zext i1 %2 to i8, !dbg !4958
  store i8 %4, ptr %_4, align 1, !dbg !4958
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4958
  store i8 %3, ptr %5, align 1, !dbg !4958
  %6 = load i8, ptr %_4, align 1, !dbg !4957
  %7 = trunc nuw i8 %6 to i1, !dbg !4957
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4957
  %9 = load i8, ptr %8, align 1, !dbg !4957
  %_5 = zext i1 %7 to i32, !dbg !4957
  %10 = trunc nuw i32 %_5 to i1, !dbg !4959
  br i1 %10, label %bb3, label %bb4, !dbg !4959

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4960
  %byte = load i8, ptr %11, align 1, !dbg !4960
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4960
    #dbg_declare(ptr %byte.dbg.spill, !4950, !DIExpression(), !4961)
  store i8 0, ptr %_9, align 1, !dbg !4962
; call miniz_oxide::inflate::core::read_bits::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h1ae344eee6993bedE"(ptr align 4 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4962
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4962
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4962
  store i8 %13, ptr %_0, align 1, !dbg !4962
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4962
  store i8 %14, ptr %15, align 1, !dbg !4962
  br label %bb5, !dbg !4962

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4963
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4963
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4963
  store i8 %17, ptr %_0, align 1, !dbg !4963
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4963
  store i8 %18, ptr %19, align 1, !dbg !4963
  br label %bb5, !dbg !4963

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4964
  %21 = trunc nuw i8 %20 to i1, !dbg !4964
  br i1 %21, label %bb7, label %bb6, !dbg !4964

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4965
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4965
  %24 = load i8, ptr %23, align 1, !dbg !4965
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4965
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4965
  ret { i8, i8 } %26, !dbg !4965

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4964

bb2:                                              ; No predecessors!
  unreachable, !dbg !4957
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17he38ae49676b797faE(ptr align 4 %in_iter, i32 %flags, ptr align 1 %f.0, ptr align 4 %f.1) unnamed_addr #0 !dbg !4966 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %f.dbg.spill = alloca [8 x i8], align 4
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4970, !DIExpression(), !4977)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4971, !DIExpression(), !4978)
  store ptr %f.0, ptr %f.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %f.dbg.spill, i32 4
  store ptr %f.1, ptr %0, align 4
    #dbg_declare(ptr %f.dbg.spill, !4972, !DIExpression(), !4979)
  store i8 0, ptr %_9, align 1, !dbg !4980
  store i8 1, ptr %_9, align 1, !dbg !4980
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %1 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !4981
  %2 = extractvalue { i1, i8 } %1, 0, !dbg !4981
  %3 = extractvalue { i1, i8 } %1, 1, !dbg !4981
  %4 = zext i1 %2 to i8, !dbg !4981
  store i8 %4, ptr %_4, align 1, !dbg !4981
  %5 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4981
  store i8 %3, ptr %5, align 1, !dbg !4981
  %6 = load i8, ptr %_4, align 1, !dbg !4980
  %7 = trunc nuw i8 %6 to i1, !dbg !4980
  %8 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4980
  %9 = load i8, ptr %8, align 1, !dbg !4980
  %_5 = zext i1 %7 to i32, !dbg !4980
  %10 = trunc nuw i32 %_5 to i1, !dbg !4982
  br i1 %10, label %bb3, label %bb4, !dbg !4982

bb3:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !4983
  %byte = load i8, ptr %11, align 1, !dbg !4983
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !4983
    #dbg_declare(ptr %byte.dbg.spill, !4973, !DIExpression(), !4984)
  store i8 0, ptr %_9, align 1, !dbg !4985
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %12 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h3de28129e4bf4651E"(ptr align 1 %f.0, ptr align 4 %f.1, i8 %byte) #11, !dbg !4985
  %13 = extractvalue { i8, i8 } %12, 0, !dbg !4985
  %14 = extractvalue { i8, i8 } %12, 1, !dbg !4985
  store i8 %13, ptr %_0, align 1, !dbg !4985
  %15 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4985
  store i8 %14, ptr %15, align 1, !dbg !4985
  br label %bb5, !dbg !4985

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %16 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !4986
  %17 = extractvalue { i8, i8 } %16, 0, !dbg !4986
  %18 = extractvalue { i8, i8 } %16, 1, !dbg !4986
  store i8 %17, ptr %_0, align 1, !dbg !4986
  %19 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4986
  store i8 %18, ptr %19, align 1, !dbg !4986
  br label %bb5, !dbg !4986

bb5:                                              ; preds = %bb3, %bb4
  %20 = load i8, ptr %_9, align 1, !dbg !4987
  %21 = trunc nuw i8 %20 to i1, !dbg !4987
  br i1 %21, label %bb7, label %bb6, !dbg !4987

bb6:                                              ; preds = %bb7, %bb5
  %22 = load i8, ptr %_0, align 1, !dbg !4988
  %23 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !4988
  %24 = load i8, ptr %23, align 1, !dbg !4988
  %25 = insertvalue { i8, i8 } poison, i8 %22, 0, !dbg !4988
  %26 = insertvalue { i8, i8 } %25, i8 %24, 1, !dbg !4988
  ret { i8, i8 } %26, !dbg !4988

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !4987

bb2:                                              ; No predecessors!
  unreachable, !dbg !4980
}

; miniz_oxide::inflate::core::read_byte
; Function Attrs: inlinehint nounwind
define internal { i8, i8 } @_ZN11miniz_oxide7inflate4core9read_byte17he66975888a6d0044E(ptr align 4 %in_iter, i32 %flags, ptr align 4 %f) unnamed_addr #0 !dbg !4989 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %flags.dbg.spill = alloca [4 x i8], align 4
  %in_iter.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_7 = alloca [16 x i8], align 4
  %_4 = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  store ptr %in_iter, ptr %in_iter.dbg.spill, align 4
    #dbg_declare(ptr %in_iter.dbg.spill, !4993, !DIExpression(), !5000)
  store i32 %flags, ptr %flags.dbg.spill, align 4
    #dbg_declare(ptr %flags.dbg.spill, !4994, !DIExpression(), !5001)
    #dbg_declare(ptr %f, !4995, !DIExpression(), !5002)
  store i8 0, ptr %_9, align 1, !dbg !5003
  store i8 1, ptr %_9, align 1, !dbg !5003
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte
  %0 = call { i1, i8 } @_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE(ptr align 4 %in_iter) #11, !dbg !5004
  %1 = extractvalue { i1, i8 } %0, 0, !dbg !5004
  %2 = extractvalue { i1, i8 } %0, 1, !dbg !5004
  %3 = zext i1 %1 to i8, !dbg !5004
  store i8 %3, ptr %_4, align 1, !dbg !5004
  %4 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !5004
  store i8 %2, ptr %4, align 1, !dbg !5004
  %5 = load i8, ptr %_4, align 1, !dbg !5003
  %6 = trunc nuw i8 %5 to i1, !dbg !5003
  %7 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !5003
  %8 = load i8, ptr %7, align 1, !dbg !5003
  %_5 = zext i1 %6 to i32, !dbg !5003
  %9 = trunc nuw i32 %_5 to i1, !dbg !5005
  br i1 %9, label %bb3, label %bb4, !dbg !5005

bb3:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_4, i32 1, !dbg !5006
  %byte = load i8, ptr %10, align 1, !dbg !5006
  store i8 %byte, ptr %byte.dbg.spill, align 1, !dbg !5006
    #dbg_declare(ptr %byte.dbg.spill, !4996, !DIExpression(), !5007)
  store i8 0, ptr %_9, align 1, !dbg !5008
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_7, ptr align 4 %f, i32 16, i1 false), !dbg !5008
; call miniz_oxide::inflate::core::decompress::{{closure}}
  %11 = call { i8, i8 } @"_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h24b34e8c9df4be8cE"(ptr align 4 %_7, i8 %byte) #11, !dbg !5008
  %12 = extractvalue { i8, i8 } %11, 0, !dbg !5008
  %13 = extractvalue { i8, i8 } %11, 1, !dbg !5008
  store i8 %12, ptr %_0, align 1, !dbg !5008
  %14 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !5008
  store i8 %13, ptr %14, align 1, !dbg !5008
  br label %bb5, !dbg !5008

bb4:                                              ; preds = %start
; call miniz_oxide::inflate::core::end_of_input
  %15 = call { i8, i8 } @_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE(i32 %flags) #11, !dbg !5009
  %16 = extractvalue { i8, i8 } %15, 0, !dbg !5009
  %17 = extractvalue { i8, i8 } %15, 1, !dbg !5009
  store i8 %16, ptr %_0, align 1, !dbg !5009
  %18 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !5009
  store i8 %17, ptr %18, align 1, !dbg !5009
  br label %bb5, !dbg !5009

bb5:                                              ; preds = %bb3, %bb4
  %19 = load i8, ptr %_9, align 1, !dbg !5010
  %20 = trunc nuw i8 %19 to i1, !dbg !5010
  br i1 %20, label %bb7, label %bb6, !dbg !5010

bb6:                                              ; preds = %bb7, %bb5
  %21 = load i8, ptr %_0, align 1, !dbg !5011
  %22 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !5011
  %23 = load i8, ptr %22, align 1, !dbg !5011
  %24 = insertvalue { i8, i8 } poison, i8 %21, 0, !dbg !5011
  %25 = insertvalue { i8, i8 } %24, i8 %23, 1, !dbg !5011
  ret { i8, i8 } %25, !dbg !5011

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !5010

bb2:                                              ; No predecessors!
  unreachable, !dbg !5003
}

; core::intrinsics::is_val_statically_known
; Function Attrs: nounwind
define dso_local zeroext i1 @_ZN4core10intrinsics23is_val_statically_known17h00c798ef7a1e8c45E(i16 %_arg) unnamed_addr #1 !dbg !5012 {
start:
  %_arg.dbg.spill = alloca [2 x i8], align 2
  store i16 %_arg, ptr %_arg.dbg.spill, align 2
    #dbg_declare(ptr %_arg.dbg.spill, !5016, !DIExpression(), !5019)
  ret i1 false, !dbg !5020
}

; core::intrinsics::cold_path
; Function Attrs: cold nounwind
define internal void @_ZN4core10intrinsics9cold_path17h142e372fc723bcf5E() unnamed_addr #2 !dbg !5021 {
start:
  ret void, !dbg !5024
}

; core::cmp::min
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3cmp3min17hcc5e1ffd201b4355E(i32 %v1, i32 %v2) unnamed_addr #0 !dbg !5025 {
start:
  %v2.dbg.spill = alloca [4 x i8], align 4
  %v1.dbg.spill = alloca [4 x i8], align 4
  store i32 %v1, ptr %v1.dbg.spill, align 4
    #dbg_declare(ptr %v1.dbg.spill, !5031, !DIExpression(), !5033)
  store i32 %v2, ptr %v2.dbg.spill, align 4
    #dbg_declare(ptr %v2.dbg.spill, !5032, !DIExpression(), !5034)
; call core::cmp::Ord::min
  %_0 = call i32 @_ZN4core3cmp3Ord3min17h2d69b5fda03716b4E(i32 %v1, i32 %v2) #11, !dbg !5035
  ret i32 %_0, !dbg !5036
}

; core::cmp::PartialEq::ne
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core3cmp9PartialEq2ne17hbf384579b5eabf64E(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !5037 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5043, !DIExpression(), !5048)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !5044, !DIExpression(), !5049)
; call <miniz_oxide::inflate::TINFLStatus as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN74_$LT$miniz_oxide..inflate..TINFLStatus$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7c9044e26ac2fa86E"(ptr align 1 %self, ptr align 1 %other) #11, !dbg !5050
  %_0 = xor i1 %_3, true, !dbg !5051
  ret i1 %_0, !dbg !5052
}

; core::cmp::PartialEq::ne
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core3cmp9PartialEq2ne17hf276dde69ddaa528E(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !5053 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5058, !DIExpression(), !5063)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !5059, !DIExpression(), !5064)
; call <miniz_oxide::inflate::core::State as core::cmp::PartialEq>::eq
  %_3 = call zeroext i1 @"_ZN74_$LT$miniz_oxide..inflate..core..State$u20$as$u20$core..cmp..PartialEq$GT$2eq17h171aee10e239d376E"(ptr align 1 %self, ptr align 1 %other) #11, !dbg !5065
  %_0 = xor i1 %_3, true, !dbg !5066
  ret i1 %_0, !dbg !5067
}

; core::mem::take
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem4take17h3beddaf645bd9814E(ptr align 4 %dest) unnamed_addr #0 !dbg !5068 {
start:
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !5075, !DIExpression(), !5076)
; call core::mem::replace
  %_0 = call i32 @_ZN4core3mem7replace17h1dab8f49bc06feffE(ptr align 4 %dest, i32 0) #11, !dbg !5077
  ret i32 %_0, !dbg !5078
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local i8 @_ZN4core3mem7replace17h18bdf782477fce2bE(ptr align 1 %dest, i8 %src) unnamed_addr #0 !dbg !5079 {
start:
  %result.dbg.spill = alloca [1 x i8], align 1
  %src.dbg.spill = alloca [1 x i8], align 1
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !5083, !DIExpression(), !5087)
  store i8 %src, ptr %src.dbg.spill, align 1
    #dbg_declare(ptr %src.dbg.spill, !5084, !DIExpression(), !5088)
  %result = load i8, ptr %dest, align 1, !dbg !5089
  store i8 %result, ptr %result.dbg.spill, align 1, !dbg !5089
    #dbg_declare(ptr %result.dbg.spill, !5085, !DIExpression(), !5090)
  store i8 %src, ptr %dest, align 1, !dbg !5091
  ret i8 %result, !dbg !5092
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem7replace17h1dab8f49bc06feffE(ptr align 4 %dest, i32 %src) unnamed_addr #0 !dbg !5093 {
start:
  %result.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !5097, !DIExpression(), !5101)
  store i32 %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !5098, !DIExpression(), !5102)
  %result = load i32, ptr %dest, align 4, !dbg !5103
  store i32 %result, ptr %result.dbg.spill, align 4, !dbg !5103
    #dbg_declare(ptr %result.dbg.spill, !5099, !DIExpression(), !5104)
  store i32 %src, ptr %dest, align 4, !dbg !5105
  ret i32 %result, !dbg !5106
}

; core::num::<impl i16>::to_ne_bytes
; Function Attrs: inlinehint nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$i16$GT$11to_ne_bytes17h6d4eaa791e22a22eE"(i16 %self) unnamed_addr #0 !dbg !5107 {
start:
  %self.dbg.spill = alloca [2 x i8], align 2
  %_0 = alloca [2 x i8], align 1
  store i16 %self, ptr %self.dbg.spill, align 2
    #dbg_declare(ptr %self.dbg.spill, !5113, !DIExpression(), !5114)
  store i16 %self, ptr %_0, align 1, !dbg !5115
  %0 = load i16, ptr %_0, align 1, !dbg !5116
  ret i16 %0, !dbg !5116
}

; core::num::<impl i16>::from_ne_bytes
; Function Attrs: inlinehint nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$i16$GT$13from_ne_bytes17hf31c1ce6309596eeE"(i16 %0) unnamed_addr #0 !dbg !5117 {
start:
  %1 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %1, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %bytes, ptr align 2 %1, i32 2, i1 false)
    #dbg_declare(ptr %bytes, !5121, !DIExpression(), !5122)
  %_0 = load i16, ptr %bytes, align 1, !dbg !5123
  ret i16 %_0, !dbg !5124
}

; core::num::<impl u16>::from_le_bytes
; Function Attrs: inlinehint nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17hdea4d26633621f0cE"(i16 %0) unnamed_addr #0 !dbg !5125 {
start:
  %x.dbg.spill.i = alloca [2 x i8], align 2
  %1 = alloca [2 x i8], align 2
  %2 = alloca [2 x i8], align 1
  %3 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %3, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %bytes, ptr align 2 %3, i32 2, i1 false)
    #dbg_declare(ptr %bytes, !5129, !DIExpression(), !5130)
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %2, ptr align 1 %bytes, i32 2, i1 false), !dbg !5131
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %2, i32 2, i1 false), !dbg !5131
  %4 = load i16, ptr %1, align 2, !dbg !5131
; call core::num::<impl u16>::from_ne_bytes
  %_2 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17hc5a88110f2c949b8E"(i16 %4) #11, !dbg !5131
  store i16 %_2, ptr %x.dbg.spill.i, align 2
    #dbg_declare(ptr %x.dbg.spill.i, !5132, !DIExpression(), !5135)
  ret i16 %_2, !dbg !5137
}

; core::num::<impl u16>::from_ne_bytes
; Function Attrs: inlinehint nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17hc5a88110f2c949b8E"(i16 %0) unnamed_addr #0 !dbg !5138 {
start:
  %1 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %1, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %bytes, ptr align 2 %1, i32 2, i1 false)
    #dbg_declare(ptr %bytes, !5140, !DIExpression(), !5141)
  %_0 = load i16, ptr %bytes, align 1, !dbg !5142
  ret i16 %_0, !dbg !5143
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17he5f517207b521284E"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !5144 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5148, !DIExpression(), !5150)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !5149, !DIExpression(), !5151)
  %_5.0 = add i32 %self, %rhs, !dbg !5152
  %_5.1 = icmp ult i32 %_5.0, %self, !dbg !5152
  %0 = zext i1 %_5.1 to i8
  store i8 %0, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !170, !DIExpression(), !5153)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !5155

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !5156
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !5157

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !5158
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !5157

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %1 = load i8, ptr %_0.i, align 1, !dbg !5159
  %2 = trunc nuw i8 %1 to i1, !dbg !5159
  br i1 %2, label %bb2, label %bb3, !dbg !5160

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %_6 = add nuw i32 %self, %rhs, !dbg !5161
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5162
  store i32 %_6, ptr %3, align 4, !dbg !5162
  store i32 1, ptr %_0, align 4, !dbg !5162
  br label %bb4, !dbg !5163

bb2:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !5164
  br label %bb4, !dbg !5163

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4, !dbg !5165
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5165
  %6 = load i32, ptr %5, align 4, !dbg !5165
  %7 = insertvalue { i32, i32 } poison, i32 %4, 0, !dbg !5165
  %8 = insertvalue { i32, i32 } %7, i32 %6, 1, !dbg !5165
  ret { i32, i32 } %8, !dbg !5165
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5bd1e07b9018e6ddE"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !5166 {
start:
  %b.dbg.spill.i1 = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [4 x i8], align 4
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5168, !DIExpression(), !5173)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !5169, !DIExpression(), !5174)
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5175, !DIExpression(), !5188)
  store i32 %rhs, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !5184, !DIExpression(), !5190)
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %self, i32 %rhs), !dbg !5191
  %_5.0.i = extractvalue { i32, i1 } %0, 0, !dbg !5191
  %_5.1.i = extractvalue { i32, i1 } %0, 1, !dbg !5191
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !5192
    #dbg_declare(ptr %a.dbg.spill.i, !5185, !DIExpression(), !5193)
  %1 = zext i1 %_5.1.i to i8, !dbg !5194
  store i8 %1, ptr %b.dbg.spill.i1, align 1, !dbg !5194
    #dbg_declare(ptr %b.dbg.spill.i1, !5187, !DIExpression(), !5195)
  %_5.0 = extractvalue { i32, i1 } %0, 0, !dbg !5196
  %_5.1 = extractvalue { i32, i1 } %0, 1, !dbg !5196
  store i32 %_5.0, ptr %a.dbg.spill, align 4, !dbg !5197
    #dbg_declare(ptr %a.dbg.spill, !5170, !DIExpression(), !5198)
  %2 = zext i1 %_5.1 to i8, !dbg !5199
  store i8 %2, ptr %b.dbg.spill, align 1, !dbg !5199
    #dbg_declare(ptr %b.dbg.spill, !5172, !DIExpression(), !5200)
  %3 = zext i1 %_5.1 to i8
  store i8 %3, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !170, !DIExpression(), !5201)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !5203

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !5204
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !5205

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !5206
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !5205

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %4 = load i8, ptr %_0.i, align 1, !dbg !5207
  %5 = trunc nuw i8 %4 to i1, !dbg !5207
  br i1 %5, label %bb3, label %bb4, !dbg !5208

bb4:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5209
  store i32 %_5.0, ptr %6, align 4, !dbg !5209
  store i32 1, ptr %_0, align 4, !dbg !5209
  br label %bb5, !dbg !5210

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !5211
  br label %bb5, !dbg !5210

bb5:                                              ; preds = %bb3, %bb4
  %7 = load i32, ptr %_0, align 4, !dbg !5212
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5212
  %9 = load i32, ptr %8, align 4, !dbg !5212
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !5212
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !5212
  ret { i32, i32 } %11, !dbg !5212
}

; core::num::<impl usize>::checked_sub
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 %self, i32 %rhs) unnamed_addr #0 !dbg !5213 {
start:
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5215, !DIExpression(), !5217)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !5216, !DIExpression(), !5218)
  %_3 = icmp ult i32 %self, %rhs, !dbg !5219
  br i1 %_3, label %bb1, label %bb2, !dbg !5219

bb2:                                              ; preds = %start
  %_4 = sub nuw i32 %self, %rhs, !dbg !5220
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5221
  store i32 %_4, ptr %0, align 4, !dbg !5221
  store i32 1, ptr %_0, align 4, !dbg !5221
  br label %bb3, !dbg !5222

bb1:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !5223
  br label %bb3, !dbg !5222

bb3:                                              ; preds = %bb1, %bb2
  %1 = load i32, ptr %_0, align 4, !dbg !5224
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5224
  %3 = load i32, ptr %2, align 4, !dbg !5224
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !5224
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !5224
  ret { i32, i32 } %5, !dbg !5224
}

; core::ops::range::RangeInclusive<Idx>::new
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h418dc35af1cac930E"(ptr sret([12 x i8]) align 4 %_0, i32 %start1, i32 %end) unnamed_addr #0 !dbg !5225 {
start:
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  store i32 %start1, ptr %start.dbg.spill, align 4
    #dbg_declare(ptr %start.dbg.spill, !5230, !DIExpression(), !5232)
  store i32 %end, ptr %end.dbg.spill, align 4
    #dbg_declare(ptr %end.dbg.spill, !5231, !DIExpression(), !5233)
  store i32 %start1, ptr %_0, align 4, !dbg !5234
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5234
  store i32 %end, ptr %0, align 4, !dbg !5234
  %1 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !5234
  store i8 0, ptr %1, align 4, !dbg !5234
  ret void, !dbg !5235
}

; core::ptr::copy::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3ptr4copy18precondition_check17hf00f2d5f4207ae3aE(ptr %src, ptr %dst, i32 %align, i1 zeroext %zero_size, ptr align 4 %0) unnamed_addr #0 !dbg !5236 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %zero_size.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %_11 = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !5245, !DIExpression(), !5251)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !5246, !DIExpression(), !5251)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !5247, !DIExpression(), !5251)
  %1 = zext i1 %zero_size to i8
  store i8 %1, ptr %zero_size.dbg.spill, align 1
    #dbg_declare(ptr %zero_size.dbg.spill, !5248, !DIExpression(), !5251)
  store ptr @alloc_5ee6cd0de5bab89c84438a39fb5fb08c, ptr %msg.dbg.spill, align 4, !dbg !5252
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !5252
  store i32 221, ptr %2, align 4, !dbg !5252
    #dbg_declare(ptr %msg.dbg.spill, !5249, !DIExpression(), !5252)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_5 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h356dc4b78abe46e9E(ptr %src, i32 %align, i1 zeroext %zero_size) #11, !dbg !5253
  br i1 %_5, label %bb2, label %bb5, !dbg !5253

bb5:                                              ; preds = %bb2, %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_11, i32 0, !dbg !5256
  store ptr @alloc_5ee6cd0de5bab89c84438a39fb5fb08c, ptr %3, align 4, !dbg !5256
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !5256
  store i32 221, ptr %4, align 4, !dbg !5256
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 %_11) #11, !dbg !5257
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17hcf45dfa946aa2fa2E(ptr align 4 %_9, i1 zeroext false, ptr align 4 %0) #12, !dbg !5258
  unreachable, !dbg !5258

bb2:                                              ; preds = %start
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_6 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h356dc4b78abe46e9E(ptr %dst, i32 %align, i1 zeroext %zero_size) #11, !dbg !5259
  br i1 %_6, label %bb4, label %bb5, !dbg !5259

bb4:                                              ; preds = %bb2
  ret void, !dbg !5260
}

; core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17hd7e01c805eeb86a2E"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #0 !dbg !5261 {
start:
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5269, !DIExpression(), !5271)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !5270, !DIExpression(), !5272)
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17h51caf91d94ad2869E"(ptr %self, ptr %origin, ptr align 4 %0) #11, !dbg !5273
  ret i32 %_0, !dbg !5274
}

; core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hee37ac0066823501E"(ptr %this, i32 %count, i32 %size, ptr align 4 %0) unnamed_addr #0 !dbg !5275 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !5280, !DIExpression(), !5285)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !5281, !DIExpression(), !5285)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !5282, !DIExpression(), !5285)
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %msg.dbg.spill, align 4, !dbg !5286
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !5286
  store i32 214, ptr %1, align 4, !dbg !5286
    #dbg_declare(ptr %msg.dbg.spill, !5283, !DIExpression(), !5286)
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h890525b7f75e70f4E"(ptr %this, i32 %count, i32 %size) #11, !dbg !5287
  br i1 %_4, label %bb2, label %bb3, !dbg !5287

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !5289
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %2, align 4, !dbg !5289
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !5289
  store i32 214, ptr %3, align 4, !dbg !5289
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #11, !dbg !5290
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17hcf45dfa946aa2fa2E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #12, !dbg !5291
  unreachable, !dbg !5291

bb2:                                              ; preds = %start
  ret void, !dbg !5292
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h890525b7f75e70f4E"(ptr %this, i32 %count, i32 %size) unnamed_addr #0 !dbg !5293 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !5297, !DIExpression(), !5300)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !5298, !DIExpression(), !5301)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !5299, !DIExpression(), !5302)
  store ptr %this, ptr %_4, align 4, !dbg !5303
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !5303
  store i32 %count, ptr %0, align 4, !dbg !5303
  %1 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !5303
  store i32 %size, ptr %1, align 4, !dbg !5303
  %2 = load ptr, ptr %_4, align 4, !dbg !5305
  %3 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !5305
  %4 = load i32, ptr %3, align 4, !dbg !5305
  %5 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !5305
  %6 = load i32, ptr %5, align 4, !dbg !5305
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17h78e17df217b11fdbE"(ptr %2, i32 %4, i32 %6) #11, !dbg !5305
  ret i1 %_0, !dbg !5306
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17h78e17df217b11fdbE"(ptr %this, i32 %count, i32 %size) unnamed_addr #0 !dbg !5307 {
start:
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %overflow.dbg.spill = alloca [1 x i8], align 1
  %byte_offset.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !5310, !DIExpression(), !5317)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !5311, !DIExpression(), !5317)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !5312, !DIExpression(), !5317)
; call core::num::<impl usize>::checked_mul
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5bd1e07b9018e6ddE"(i32 %count, i32 %size) #11, !dbg !5318
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !5318
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !5318
  store i32 %1, ptr %_5, align 4, !dbg !5318
  %3 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !5318
  store i32 %2, ptr %3, align 4, !dbg !5318
  %_6 = load i32, ptr %_5, align 4, !dbg !5320
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !5320
  %5 = load i32, ptr %4, align 4, !dbg !5320
  %6 = trunc nuw i32 %_6 to i1, !dbg !5321
  br i1 %6, label %bb2, label %bb3, !dbg !5321

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !5322
  %byte_offset = load i32, ptr %7, align 4, !dbg !5322
  store i32 %byte_offset, ptr %byte_offset.dbg.spill, align 4, !dbg !5322
    #dbg_declare(ptr %byte_offset.dbg.spill, !5313, !DIExpression(), !5323)
  store ptr %this, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !5324, !DIExpression(), !5334)
  store ptr %this, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !5336, !DIExpression(), !5343)
  %_0.i = ptrtoint ptr %this to i32, !dbg !5345
  store i32 %_0.i, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5346, !DIExpression(), !5353)
  store i32 %byte_offset, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !5349, !DIExpression(), !5355)
  %_5.0.i = add i32 %_0.i, %byte_offset, !dbg !5356
  %_5.1.i = icmp ult i32 %_5.0.i, %_0.i, !dbg !5356
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !5357
    #dbg_declare(ptr %a.dbg.spill.i, !5350, !DIExpression(), !5358)
  %8 = zext i1 %_5.1.i to i8, !dbg !5359
  store i8 %8, ptr %b.dbg.spill.i, align 1, !dbg !5359
    #dbg_declare(ptr %b.dbg.spill.i, !5352, !DIExpression(), !5360)
  %9 = insertvalue { i32, i1 } poison, i32 %_5.0.i, 0, !dbg !5361
  %10 = insertvalue { i32, i1 } %9, i1 %_5.1.i, 1, !dbg !5361
  %_8.0 = extractvalue { i32, i1 } %10, 0, !dbg !5362
  %_8.1 = extractvalue { i32, i1 } %10, 1, !dbg !5362
  %11 = zext i1 %_8.1 to i8, !dbg !5363
  store i8 %11, ptr %overflow.dbg.spill, align 1, !dbg !5363
    #dbg_declare(ptr %overflow.dbg.spill, !5315, !DIExpression(), !5364)
  %_10 = icmp ule i32 %byte_offset, 2147483647, !dbg !5365
  br i1 %_10, label %bb6, label %bb7, !dbg !5365

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !5366
  br label %bb8, !dbg !5367

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !5365
  br label %bb8, !dbg !5365

bb6:                                              ; preds = %bb2
  %12 = xor i1 %_8.1, true, !dbg !5368
  %13 = zext i1 %12 to i8, !dbg !5368
  store i8 %13, ptr %_0, align 1, !dbg !5368
  br label %bb8, !dbg !5365

bb8:                                              ; preds = %bb3, %bb6, %bb7
  %14 = load i8, ptr %_0, align 1, !dbg !5369
  %15 = trunc nuw i8 %14 to i1, !dbg !5369
  ret i1 %15, !dbg !5369

bb9:                                              ; No predecessors!
  unreachable, !dbg !5370
}

; core::ptr::non_null::NonNull<T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hf273321d1a9eecb7E"(ptr %self, ptr %subtracted) unnamed_addr #0 !dbg !5371 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %subtracted.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5377, !DIExpression(), !5379)
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 4
    #dbg_declare(ptr %subtracted.dbg.spill, !5378, !DIExpression(), !5380)
  store ptr %self, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !5381, !DIExpression(), !5387)
  store ptr %subtracted, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5381, !DIExpression(), !5389)
; call core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17hd7e01c805eeb86a2E"(ptr %self, ptr %subtracted, ptr align 4 @alloc_1ded1233f10ce63823f0773f448fe0b6) #11, !dbg !5391
  ret i32 %_0, !dbg !5392
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8d0689e32ac1dd3cE"(ptr %self.0, i32 %self.1) unnamed_addr #0 !dbg !5393 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5412, !DIExpression(), !5413)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5414, !DIExpression(), !5424)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !5426
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !5426
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !5427
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !5427
  ret ptr %_4.0, !dbg !5428
}

; core::ptr::non_null::NonNull<T>::from_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h5b94ff678d25e24bE"(ptr align 2 %r.0, i32 %r.1) unnamed_addr #0 !dbg !5429 {
start:
  %r.dbg.spill = alloca [8 x i8], align 4
  store ptr %r.0, ptr %r.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i32 4
  store i32 %r.1, ptr %0, align 4
    #dbg_declare(ptr %r.dbg.spill, !5438, !DIExpression(), !5439)
  %1 = insertvalue { ptr, i32 } poison, ptr %r.0, 0, !dbg !5440
  %2 = insertvalue { ptr, i32 } %1, i32 %r.1, 1, !dbg !5440
  ret { ptr, i32 } %2, !dbg !5440
}

; core::ptr::const_ptr::<impl *const T>::cast_array
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10cast_array17h1afd9d08ed414bfdE"(ptr %self) unnamed_addr #0 !dbg !5441 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5447, !DIExpression(), !5448)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5449, !DIExpression(), !5454)
  ret ptr %self, !dbg !5456
}

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17h51caf91d94ad2869E"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #0 !dbg !5457 {
start:
  %1 = alloca [4 x i8], align 4
  %pointee_size.dbg.spill = alloca [4 x i8], align 4
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5461, !DIExpression(), !5465)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !5462, !DIExpression(), !5466)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E() #11, !dbg !5467
  br i1 %_3, label %bb2, label %bb3, !dbg !5467

bb3:                                              ; preds = %bb2, %start
  store i32 2, ptr %pointee_size.dbg.spill, align 4, !dbg !5469
    #dbg_declare(ptr %pointee_size.dbg.spill, !5463, !DIExpression(), !5470)
  %_8 = icmp ult i32 0, 2, !dbg !5471
  br i1 %_8, label %bb5, label %bb7, !dbg !5471

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h17cc6a60e958048cE"(ptr %self, ptr %origin, ptr align 4 %0) #11, !dbg !5472
  br label %bb3, !dbg !5472

bb7:                                              ; preds = %bb5, %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i32 73, ptr align 4 %0) #12, !dbg !5473
  unreachable, !dbg !5473

bb5:                                              ; preds = %bb3
  %_9 = icmp ule i32 2, 2147483647, !dbg !5474
  br i1 %_9, label %bb6, label %bb7, !dbg !5474

bb6:                                              ; preds = %bb5
  %2 = ptrtoint ptr %self to i32, !dbg !5475
  %3 = ptrtoint ptr %origin to i32, !dbg !5475
  %4 = sub nuw i32 %2, %3, !dbg !5475
  %5 = udiv exact i32 %4, 2, !dbg !5475
  store i32 %5, ptr %1, align 4, !dbg !5475
  %_0 = load i32, ptr %1, align 4, !dbg !5475
  ret i32 %_0, !dbg !5476
}

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h17cc6a60e958048cE"(ptr %this, ptr %origin, ptr align 4 %0) unnamed_addr #0 !dbg !5477 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %origin.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !5482, !DIExpression(), !5486)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !5483, !DIExpression(), !5486)
  store ptr @alloc_de4e626d456b04760e72bc785ed7e52a, ptr %msg.dbg.spill, align 4, !dbg !5487
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !5487
  store i32 201, ptr %1, align 4, !dbg !5487
    #dbg_declare(ptr %msg.dbg.spill, !5484, !DIExpression(), !5487)
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned14runtime_ptr_ge17hc98e65b971afd35aE"(ptr %this, ptr %origin) #11, !dbg !5488
  br i1 %_3, label %bb2, label %bb3, !dbg !5488

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_7, i32 0, !dbg !5490
  store ptr @alloc_de4e626d456b04760e72bc785ed7e52a, ptr %2, align 4, !dbg !5490
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !5490
  store i32 201, ptr %3, align 4, !dbg !5490
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 %_7) #11, !dbg !5491
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17hcf45dfa946aa2fa2E(ptr align 4 %_5, i1 zeroext false, ptr align 4 %0) #12, !dbg !5492
  unreachable, !dbg !5492

bb2:                                              ; preds = %start
  ret void, !dbg !5493
}

; core::cell::Cell<T>::get
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN4core4cell13Cell$LT$T$GT$3get17h1723e469f761e381E"(ptr align 1 %self) unnamed_addr #0 !dbg !5494 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5500, !DIExpression(), !5501)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5502, !DIExpression(), !5510)
  %_0 = load i8, ptr %self, align 1, !dbg !5512
  ret i8 %_0, !dbg !5513
}

; core::cell::Cell<T>::set
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4cell13Cell$LT$T$GT$3set17hb929e55d2375c181E"(ptr align 1 %self, i8 %val) unnamed_addr #0 !dbg !5514 {
start:
  %val.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5519, !DIExpression(), !5521)
  store i8 %val, ptr %val.dbg.spill, align 1
    #dbg_declare(ptr %val.dbg.spill, !5520, !DIExpression(), !5522)
; call core::cell::Cell<T>::replace
  %_3 = call i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h95257c6f91a9c408E"(ptr align 1 %self, i8 %val) #11, !dbg !5523
  ret void, !dbg !5524
}

; core::cell::Cell<T>::replace
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN4core4cell13Cell$LT$T$GT$7replace17h95257c6f91a9c408E"(ptr align 1 %self, i8 %val) unnamed_addr #0 !dbg !5525 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5530, !DIExpression(), !5532)
  store i8 %val, ptr %val.dbg.spill, align 1
    #dbg_declare(ptr %val.dbg.spill, !5531, !DIExpression(), !5533)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5502, !DIExpression(), !5534)
; call core::mem::replace
  %_0 = call i8 @_ZN4core3mem7replace17h18bdf782477fce2bE(ptr align 1 %self, i8 %val) #11, !dbg !5536
  ret i8 %_0, !dbg !5537
}

; core::cell::Cell<T>::from_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core4cell13Cell$LT$T$GT$8from_mut17hd850cd9c5ea46d5cE"(ptr align 1 %t.0, i32 %t.1) unnamed_addr #0 !dbg !5538 {
start:
  %t.dbg.spill = alloca [8 x i8], align 4
  store ptr %t.0, ptr %t.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4
  store i32 %t.1, ptr %0, align 4
    #dbg_declare(ptr %t.dbg.spill, !5554, !DIExpression(), !5555)
  %1 = insertvalue { ptr, i32 } poison, ptr %t.0, 0, !dbg !5556
  %2 = insertvalue { ptr, i32 } %1, i32 %t.1, 1, !dbg !5556
  ret { ptr, i32 } %2, !dbg !5556
}

; core::cell::Cell<[T]>::as_slice_of_cells
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN4core4cell23Cell$LT$$u5b$T$u5d$$GT$17as_slice_of_cells17hb8da9335b0a80a2aE"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !5557 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5562, !DIExpression(), !5563)
  %1 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !5564
  %2 = insertvalue { ptr, i32 } %1, i32 %self.1, 1, !dbg !5564
  ret { ptr, i32 } %2, !dbg !5564
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3zip17h858e5b296985fe89E(ptr sret([24 x i8]) align 4 %_0, ptr %self.0, ptr %self.1, ptr %other.0, ptr %other.1) unnamed_addr #0 !dbg !5565 {
start:
  %other.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5571, !DIExpression(), !5576)
  store ptr %other.0, ptr %other.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %other.dbg.spill, i32 4
  store ptr %other.1, ptr %1, align 4
    #dbg_declare(ptr %other.dbg.spill, !5572, !DIExpression(), !5577)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %2 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h657e6563b344c1feE"(ptr %other.0, ptr %other.1) #11, !dbg !5578
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !5578
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !5578
; call core::iter::adapters::zip::Zip<A,B>::new
  call void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h6878644d592c1249E"(ptr sret([24 x i8]) align 4 %_0, ptr %self.0, ptr %self.1, ptr %_3.0, ptr %_3.1) #11, !dbg !5579
  ret void, !dbg !5580
}

; core::iter::traits::iterator::Iterator::skip
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator4skip17h3a74484b2de80b85E(ptr sret([28 x i8]) align 4 %_0, ptr align 4 %self, i32 %n) unnamed_addr #0 !dbg !5581 {
start:
    #dbg_declare(ptr %self, !5585, !DIExpression(), !5589)
  %n.dbg.spill = alloca [4 x i8], align 4
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !5586, !DIExpression(), !5590)
; call core::iter::adapters::skip::Skip<I>::new
  call void @"_ZN4core4iter8adapters4skip13Skip$LT$I$GT$3new17he9278e8620fa244cE"(ptr sret([28 x i8]) align 4 %_0, ptr align 4 %self, i32 %n) #11, !dbg !5591
  ret void, !dbg !5592
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h6878644d592c1249E"(ptr sret([24 x i8]) align 4 %_0, ptr %a.0, ptr %a.1, ptr %b.0, ptr %b.1) unnamed_addr #1 !dbg !5593 {
start:
  %b.dbg.spill = alloca [8 x i8], align 4
  %a.dbg.spill = alloca [8 x i8], align 4
  store ptr %a.0, ptr %a.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %a.dbg.spill, i32 4
  store ptr %a.1, ptr %0, align 4
    #dbg_declare(ptr %a.dbg.spill, !5596, !DIExpression(), !5598)
  store ptr %b.0, ptr %b.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %b.dbg.spill, i32 4
  store ptr %b.1, ptr %1, align 4
    #dbg_declare(ptr %b.dbg.spill, !5597, !DIExpression(), !5599)
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h0f63b83af19f0450E"(ptr sret([24 x i8]) align 4 %_0, ptr %a.0, ptr %a.1, ptr %b.0, ptr %b.1) #11, !dbg !5600
  ret void, !dbg !5601
}

; core::iter::adapters::zip::Zip<A,B>::super_nth
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$9super_nth17hce7bcff7877d53e3E"(ptr align 4 %self, i32 %0) unnamed_addr #1 !dbg !5602 {
start:
  %x.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %n = alloca [4 x i8], align 4
  store i32 %0, ptr %n, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5605, !DIExpression(), !5609)
    #dbg_declare(ptr %n, !5606, !DIExpression(), !5610)
  br label %bb1, !dbg !5611

bb1:                                              ; preds = %bb6, %start
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %1 = call { ptr, ptr } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53cde08552ac4939E"(ptr align 4 %self) #11, !dbg !5612
  %2 = extractvalue { ptr, ptr } %1, 0, !dbg !5612
  %3 = extractvalue { ptr, ptr } %1, 1, !dbg !5612
  store ptr %2, ptr %_3, align 4, !dbg !5612
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !5612
  store ptr %3, ptr %4, align 4, !dbg !5612
  %5 = load ptr, ptr %_3, align 4, !dbg !5612
  %6 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !5612
  %7 = load ptr, ptr %6, align 4, !dbg !5612
  %8 = ptrtoint ptr %5 to i32, !dbg !5612
  %9 = icmp eq i32 %8, 0, !dbg !5612
  %_4 = select i1 %9, i32 0, i32 1, !dbg !5612
  %10 = trunc nuw i32 %_4 to i1, !dbg !5613
  br i1 %10, label %bb3, label %bb7, !dbg !5613

bb3:                                              ; preds = %bb1
  %x.0 = load ptr, ptr %_3, align 4, !dbg !5614
  %11 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !5614
  %x.1 = load ptr, ptr %11, align 4, !dbg !5614
  store ptr %x.0, ptr %x.dbg.spill, align 4, !dbg !5614
  %12 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 4, !dbg !5614
  store ptr %x.1, ptr %12, align 4, !dbg !5614
    #dbg_declare(ptr %x.dbg.spill, !5607, !DIExpression(), !5614)
  %_6 = load i32, ptr %n, align 4, !dbg !5615
  %13 = icmp eq i32 %_6, 0, !dbg !5615
  br i1 %13, label %bb4, label %bb5, !dbg !5615

bb7:                                              ; preds = %bb1
  store ptr null, ptr %_0, align 4, !dbg !5616
  br label %bb8, !dbg !5617

bb4:                                              ; preds = %bb3
  store ptr %x.0, ptr %_0, align 4, !dbg !5618
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5618
  store ptr %x.1, ptr %14, align 4, !dbg !5618
  br label %bb8, !dbg !5617

bb5:                                              ; preds = %bb3
  %15 = load i32, ptr %n, align 4, !dbg !5619
  %_8.0 = sub i32 %15, 1, !dbg !5619
  %_8.1 = icmp ult i32 %15, 1, !dbg !5619
  br i1 %_8.1, label %panic, label %bb6, !dbg !5619

bb8:                                              ; preds = %bb7, %bb4
  %16 = load ptr, ptr %_0, align 4, !dbg !5617
  %17 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5617
  %18 = load ptr, ptr %17, align 4, !dbg !5617
  %19 = insertvalue { ptr, ptr } poison, ptr %16, 0, !dbg !5617
  %20 = insertvalue { ptr, ptr } %19, ptr %18, 1, !dbg !5617
  ret { ptr, ptr } %20, !dbg !5617

bb6:                                              ; preds = %bb5
  store i32 %_8.0, ptr %n, align 4, !dbg !5619
  br label %bb1, !dbg !5620

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 @alloc_0425c6f4a9d23edccb8e161ad54f3fb2) #12, !dbg !5619
  unreachable, !dbg !5619

bb9:                                              ; No predecessors!
  unreachable, !dbg !5621
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nounwind
define dso_local i32 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hde5f6f54d650d72dE(ptr align 4 %self) unnamed_addr #1 !dbg !5622 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5628, !DIExpression(), !5630)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h369cd18bb8bc73a0E"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %self) #11, !dbg !5631
  %_0 = load i32, ptr %_2, align 4, !dbg !5632
  ret i32 %_0, !dbg !5633
}

; core::iter::adapters::skip::Skip<I>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters4skip13Skip$LT$I$GT$3new17he9278e8620fa244cE"(ptr sret([28 x i8]) align 4 %_0, ptr align 4 %iter, i32 %n) unnamed_addr #1 !dbg !5634 {
start:
    #dbg_declare(ptr %iter, !5637, !DIExpression(), !5639)
  %n.dbg.spill = alloca [4 x i8], align 4
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !5638, !DIExpression(), !5640)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %iter, i32 24, i1 false), !dbg !5641
  %0 = getelementptr inbounds i8, ptr %_0, i32 24, !dbg !5641
  store i32 %n, ptr %0, align 4, !dbg !5641
  ret void, !dbg !5642
}

; core::array::<impl core::convert::TryFrom<&[T]> for &[T; N]>::try_from
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core5array102_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$RF$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17h2c3b80aca23f7e9bE"(ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !5643 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !5670, !DIExpression(), !5671)
; call core::slice::<impl [T]>::as_array
  %_2 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8as_array17he2707928a4c7ab3dE"(ptr align 1 %slice.0, i32 %slice.1) #11, !dbg !5672
; call core::option::Option<T>::ok_or
  %_0 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hdcfaa0ce463e6a8dE"(ptr align 1 %_2) #11, !dbg !5673
  ret ptr %_0, !dbg !5674
}

; core::array::<impl core::default::Default for [T; 2]>::default
; Function Attrs: nounwind
define dso_local i16 @"_ZN4core5array75_$LT$impl$u20$core..default..Default$u20$for$u20$$u5b$T$u3b$$u20$2$u5d$$GT$7default17h4482b52665d997b4E"() unnamed_addr #1 !dbg !5675 {
start:
  %_0 = alloca [2 x i8], align 1
  %0 = getelementptr inbounds nuw i8, ptr %_0, i32 0, !dbg !5679
  store i8 0, ptr %0, align 1, !dbg !5679
  %1 = getelementptr inbounds nuw i8, ptr %_0, i32 1, !dbg !5679
  store i8 0, ptr %1, align 1, !dbg !5679
  %2 = load i16, ptr %_0, align 1, !dbg !5680
  ret i16 %2, !dbg !5680
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h6b15c0ee008fbbdbE"(ptr align 1 %self, i32 %index, ptr align 4 %0) unnamed_addr #0 !dbg !5681 {
start:
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5687, !DIExpression(), !5689)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !5688, !DIExpression(), !5690)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 512, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1264, !DIExpression(), !5691)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !1272, !DIExpression(), !5693)
  store i32 %index, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !1278, !DIExpression(), !5694)
  store ptr %self, ptr %slice.dbg.spill.i.i, align 4
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 512, ptr %2, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !1284, !DIExpression(), !5696)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 %index, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !1288, !DIExpression(), !5697)
  store ptr %self, ptr %slice.dbg.spill.i.i.i, align 4
  %4 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 512, ptr %4, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !1293, !DIExpression(), !5699)
; call core::num::<impl usize>::checked_sub
  %5 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 %index, i32 0) #11, !dbg !5700
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !5700
  %7 = extractvalue { i32, i32 } %5, 1, !dbg !5700
  store i32 %6, ptr %_3.i.i.i, align 4, !dbg !5700
  %8 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !5700
  store i32 %7, ptr %8, align 4, !dbg !5700
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !5700
  %9 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !5700
  %10 = load i32, ptr %9, align 4, !dbg !5700
  %11 = trunc nuw i32 %_6.i.i.i to i1, !dbg !5701
  br i1 %11, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !5701

bb2.i.i.i:                                        ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !5702
  %new_len.i.i.i = load i32, ptr %12, align 4, !dbg !5702
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !5702
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !1294, !DIExpression(), !5702)
  %_8.i.i.i = icmp ule i32 %index, 512, !dbg !5703
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit", label %bb5.i.i.i, !dbg !5703

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %start
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 0, i32 %index, i32 512, ptr align 4 %0) #12, !dbg !5704
  unreachable, !dbg !5704

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E.exit": ; preds = %bb2.i.i.i
  store ptr %self, ptr %ptr.dbg.spill.i.i, align 4
  %13 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 512, ptr %13, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1303, !DIExpression(), !5705)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !1312, !DIExpression(), !5707)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !1313, !DIExpression(), !5708)
  store ptr %self, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !5709
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1314, !DIExpression(), !5710)
  store ptr %self, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !5711
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !1317, !DIExpression(), !5712)
  %14 = insertvalue { ptr, i32 } poison, ptr %self, 0, !dbg !5713
  %15 = insertvalue { ptr, i32 } %14, i32 %new_len.i.i.i, 1, !dbg !5713
  %16 = insertvalue { ptr, i32 } poison, ptr %self, 0, !dbg !5714
  %17 = insertvalue { ptr, i32 } %16, i32 %new_len.i.i.i, 1, !dbg !5714
  %_0.0 = extractvalue { ptr, i32 } %17, 0, !dbg !5715
  %_0.1 = extractvalue { ptr, i32 } %17, 1, !dbg !5715
  %18 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5716
  %19 = insertvalue { ptr, i32 } %18, i32 %_0.1, 1, !dbg !5716
  ret { ptr, i32 } %19, !dbg !5716
}

; core::array::<impl core::ops::index::Index<I> for [T; N]>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf8b0783de2c0beffE"(ptr align 1 %self, i32 %index.0, i32 %index.1, ptr align 4 %0) unnamed_addr #0 !dbg !5717 {
start:
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [8 x i8], align 4
  %_3.i.i = alloca [8 x i8], align 4
  %index.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5721, !DIExpression(), !5723)
  store i32 %index.0, ptr %index.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %index.dbg.spill, i32 4
  store i32 %index.1, ptr %1, align 4
    #dbg_declare(ptr %index.dbg.spill, !5722, !DIExpression(), !5724)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 512, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1829, !DIExpression(), !5725)
  store i32 %index.0, ptr %index.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %index.dbg.spill.i, i32 4
  store i32 %index.1, ptr %3, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !1834, !DIExpression(), !5727)
  store i32 %index.0, ptr %self.dbg.spill.i.i, align 4
  %4 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i, i32 4
  store i32 %index.1, ptr %4, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !1288, !DIExpression(), !5728)
  store ptr %self, ptr %slice.dbg.spill.i.i, align 4
  %5 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 512, ptr %5, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !1293, !DIExpression(), !5730)
; call core::num::<impl usize>::checked_sub
  %6 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE"(i32 %index.1, i32 %index.0) #11, !dbg !5731
  %7 = extractvalue { i32, i32 } %6, 0, !dbg !5731
  %8 = extractvalue { i32, i32 } %6, 1, !dbg !5731
  store i32 %7, ptr %_3.i.i, align 4, !dbg !5731
  %9 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !5731
  store i32 %8, ptr %9, align 4, !dbg !5731
  %_6.i.i = load i32, ptr %_3.i.i, align 4, !dbg !5731
  %10 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !5731
  %11 = load i32, ptr %10, align 4, !dbg !5731
  %12 = trunc nuw i32 %_6.i.i to i1, !dbg !5732
  br i1 %12, label %bb2.i.i, label %bb5.i.i, !dbg !5732

bb2.i.i:                                          ; preds = %start
  %13 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !5733
  %new_len.i.i = load i32, ptr %13, align 4, !dbg !5733
  store i32 %new_len.i.i, ptr %new_len.dbg.spill.i.i, align 4, !dbg !5733
    #dbg_declare(ptr %new_len.dbg.spill.i.i, !1294, !DIExpression(), !5733)
  %_8.i.i = icmp ule i32 %index.1, 512, !dbg !5734
  br i1 %_8.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8fc05b92c785a463E.exit", label %bb5.i.i, !dbg !5734

bb5.i.i:                                          ; preds = %bb2.i.i, %start
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 %index.0, i32 %index.1, i32 512, ptr align 4 %0) #12, !dbg !5735
  unreachable, !dbg !5735

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8fc05b92c785a463E.exit": ; preds = %bb2.i.i
  store ptr %self, ptr %ptr.dbg.spill.i.i, align 4
  %14 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 512, ptr %14, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1303, !DIExpression(), !5736)
  store i32 %index.0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !1312, !DIExpression(), !5738)
  store i32 %new_len.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !1313, !DIExpression(), !5739)
  store ptr %self, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !5740
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1314, !DIExpression(), !5741)
  %ptr.i.i = getelementptr inbounds nuw i8, ptr %self, i32 %index.0, !dbg !5742
  store ptr %ptr.i.i, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !5742
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !1317, !DIExpression(), !5743)
  %15 = insertvalue { ptr, i32 } poison, ptr %ptr.i.i, 0, !dbg !5744
  %16 = insertvalue { ptr, i32 } %15, i32 %new_len.i.i, 1, !dbg !5744
  %17 = insertvalue { ptr, i32 } poison, ptr %ptr.i.i, 0, !dbg !5745
  %18 = insertvalue { ptr, i32 } %17, i32 %new_len.i.i, 1, !dbg !5745
  %_0.0 = extractvalue { ptr, i32 } %18, 0, !dbg !5746
  %_0.1 = extractvalue { ptr, i32 } %18, 1, !dbg !5746
  %19 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5747
  %20 = insertvalue { ptr, i32 } %19, i32 %_0.1, 1, !dbg !5747
  ret { ptr, i32 } %20, !dbg !5747
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h1d3e6adad372abfdE"(ptr align 1 %self, i32 %index.0, i32 %index.1, ptr align 4 %0) unnamed_addr #0 !dbg !5748 {
start:
  %index.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5753, !DIExpression(), !5755)
  store i32 %index.0, ptr %index.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %index.dbg.spill, i32 4
  store i32 %index.1, ptr %1, align 4
    #dbg_declare(ptr %index.dbg.spill, !5754, !DIExpression(), !5756)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 512, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !700, !DIExpression(), !5757)
  store i32 %index.0, ptr %index.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %index.dbg.spill.i, i32 4
  store i32 %index.1, ptr %3, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !706, !DIExpression(), !5759)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32 %index.0, i32 %index.1, ptr align 1 %self, i32 512, ptr align 4 %0) #11, !dbg !5760
  %_0.0.i = extractvalue { ptr, i32 } %4, 0, !dbg !5760
  %_0.1.i = extractvalue { ptr, i32 } %4, 1, !dbg !5760
  %_0.0 = extractvalue { ptr, i32 } %4, 0, !dbg !5761
  %_0.1 = extractvalue { ptr, i32 } %4, 1, !dbg !5761
  %5 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5762
  %6 = insertvalue { ptr, i32 } %5, i32 %_0.1, 1, !dbg !5762
  ret { ptr, i32 } %6, !dbg !5762
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h2c932d847dda7250E"(ptr align 1 %self, i32 %index.0, i32 %index.1, ptr align 4 %0) unnamed_addr #0 !dbg !5763 {
start:
  %index.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5768, !DIExpression(), !5770)
  store i32 %index.0, ptr %index.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %index.dbg.spill, i32 4
  store i32 %index.1, ptr %1, align 4
    #dbg_declare(ptr %index.dbg.spill, !5769, !DIExpression(), !5771)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 32, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !700, !DIExpression(), !5772)
  store i32 %index.0, ptr %index.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %index.dbg.spill.i, i32 4
  store i32 %index.1, ptr %3, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !706, !DIExpression(), !5774)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32 %index.0, i32 %index.1, ptr align 1 %self, i32 32, ptr align 4 %0) #11, !dbg !5775
  %_0.0.i = extractvalue { ptr, i32 } %4, 0, !dbg !5775
  %_0.1.i = extractvalue { ptr, i32 } %4, 1, !dbg !5775
  %_0.0 = extractvalue { ptr, i32 } %4, 0, !dbg !5776
  %_0.1 = extractvalue { ptr, i32 } %4, 1, !dbg !5776
  %5 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5777
  %6 = insertvalue { ptr, i32 } %5, i32 %_0.1, 1, !dbg !5777
  ret { ptr, i32 } %6, !dbg !5777
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h5d132efd8fd7d668E"(ptr align 1 %self, ptr align 4 %0) unnamed_addr #0 !dbg !5778 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5784, !DIExpression(), !5788)
    #dbg_declare(ptr %index.dbg.spill, !5785, !DIExpression(), !5789)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 288, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5790, !DIExpression(), !5796)
    #dbg_declare(ptr poison, !5795, !DIExpression(), !5798)
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
  %2 = call { ptr, i32 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb684f07608ac643eE"(ptr align 1 %self, i32 288, ptr align 4 %0) #11, !dbg !5799
  %_0.0.i = extractvalue { ptr, i32 } %2, 0, !dbg !5799
  %_0.1.i = extractvalue { ptr, i32 } %2, 1, !dbg !5799
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !5800
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !5800
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5801
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !5801
  ret { ptr, i32 } %4, !dbg !5801
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8e8d37a24ff0bf64E"(ptr align 1 %self, i32 %index.0, i32 %index.1, ptr align 4 %0) unnamed_addr #0 !dbg !5802 {
start:
  %index.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5806, !DIExpression(), !5808)
  store i32 %index.0, ptr %index.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %index.dbg.spill, i32 4
  store i32 %index.1, ptr %1, align 4
    #dbg_declare(ptr %index.dbg.spill, !5807, !DIExpression(), !5809)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 288, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !700, !DIExpression(), !5810)
  store i32 %index.0, ptr %index.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %index.dbg.spill.i, i32 4
  store i32 %index.1, ptr %3, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !706, !DIExpression(), !5812)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %4 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32 %index.0, i32 %index.1, ptr align 1 %self, i32 288, ptr align 4 %0) #11, !dbg !5813
  %_0.0.i = extractvalue { ptr, i32 } %4, 0, !dbg !5813
  %_0.1.i = extractvalue { ptr, i32 } %4, 1, !dbg !5813
  %_0.0 = extractvalue { ptr, i32 } %4, 0, !dbg !5814
  %_0.1 = extractvalue { ptr, i32 } %4, 1, !dbg !5814
  %5 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5815
  %6 = insertvalue { ptr, i32 } %5, i32 %_0.1, 1, !dbg !5815
  ret { ptr, i32 } %6, !dbg !5815
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h99e93e3445f2b238E"(ptr align 1 %self, i32 %index, ptr align 4 %0) unnamed_addr #0 !dbg !5816 {
start:
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5820, !DIExpression(), !5822)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !5821, !DIExpression(), !5823)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 32, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5824, !DIExpression(), !5830)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !5829, !DIExpression(), !5832)
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %2 = call { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d8d7a2c7075cea6E"(i32 %index, ptr align 1 %self, i32 32, ptr align 4 %0) #11, !dbg !5833
  %_0.0.i = extractvalue { ptr, i32 } %2, 0, !dbg !5833
  %_0.1.i = extractvalue { ptr, i32 } %2, 1, !dbg !5833
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !5834
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !5834
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5835
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !5835
  ret { ptr, i32 } %4, !dbg !5835
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hd5947eac7d05e6efE"(ptr align 4 %self, i32 %index, ptr align 4 %0) unnamed_addr #0 !dbg !5836 {
start:
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5841, !DIExpression(), !5844)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !5842, !DIExpression(), !5845)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 17, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5846, !DIExpression(), !5852)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !5851, !DIExpression(), !5854)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %2 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h20a51ce4b1cc36f3E"(i32 %index, ptr align 4 %self, i32 17, ptr align 4 %0) #11, !dbg !5855
  %_0.0.i = extractvalue { ptr, i32 } %2, 0, !dbg !5855
  %_0.1.i = extractvalue { ptr, i32 } %2, 1, !dbg !5855
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !5856
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !5856
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5857
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !5857
  ret { ptr, i32 } %4, !dbg !5857
}

; core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17he6a8904f18621670E"(ptr align 1 %self, i32 %index, ptr align 4 %0) unnamed_addr #0 !dbg !5858 {
start:
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5862, !DIExpression(), !5864)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !5863, !DIExpression(), !5865)
  store ptr %self, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 288, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5824, !DIExpression(), !5866)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !5829, !DIExpression(), !5868)
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %2 = call { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d8d7a2c7075cea6E"(i32 %index, ptr align 1 %self, i32 288, ptr align 4 %0) #11, !dbg !5869
  %_0.0.i = extractvalue { ptr, i32 } %2, 0, !dbg !5869
  %_0.1.i = extractvalue { ptr, i32 } %2, 1, !dbg !5869
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !5870
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !5870
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5871
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !5871
  ret { ptr, i32 } %4, !dbg !5871
}

; core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from
; Function Attrs: inlinehint nounwind
define dso_local i24 @"_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17hf3eb7cd57859e752E"(ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !5872 {
start:
  %0 = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [4 x i8], align 1
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %1, align 4
    #dbg_declare(ptr %slice.dbg.spill, !5892, !DIExpression(), !5893)
; call core::array::<impl core::convert::TryFrom<&[T]> for &[T; N]>::try_from
  %_2 = call align 1 ptr @"_ZN4core5array102_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$RF$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17h2c3b80aca23f7e9bE"(ptr align 1 %slice.0, i32 %slice.1) #11, !dbg !5894
; call core::result::Result<&T,E>::copied
  %2 = call i24 @"_ZN4core6result23Result$LT$$RF$T$C$E$GT$6copied17hda34cc0a46634f63E"(ptr align 1 %_2) #11, !dbg !5895
  store i24 %2, ptr %0, align 4, !dbg !5895
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_0, ptr align 4 %0, i32 3, i1 false), !dbg !5895
  %3 = load i24, ptr %_0, align 1, !dbg !5896
  ret i24 %3, !dbg !5896
}

; core::slice::<impl [T]>::copy_within
; Function Attrs: nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11copy_within17h36c24b2d6f1e9e9eE"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %src, i32 %dest, ptr align 4 %0) unnamed_addr #1 !dbg !5897 {
start:
  %self.dbg.spill.i10 = alloca [8 x i8], align 4
  %count.dbg.spill.i4 = alloca [4 x i8], align 4
  %self.dbg.spill.i5 = alloca [4 x i8], align 4
  %count.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %_9.i = alloca [1 x i8], align 1
  %dest_ptr.dbg.spill = alloca [4 x i8], align 4
  %src_ptr.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %src_end.dbg.spill = alloca [4 x i8], align 4
  %src_start.dbg.spill = alloca [4 x i8], align 4
  %dest.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_18 = alloca [24 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !5903, !DIExpression(), !5919)
    #dbg_declare(ptr %src, !5904, !DIExpression(), !5920)
  store i32 %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !5905, !DIExpression(), !5921)
; call core::slice::index::range
  %2 = call { i32, i32 } @_ZN4core5slice5index5range17hfffd9f9a98dbf0c4E(ptr align 4 %src, i32 %self.1, ptr align 4 %0) #11, !dbg !5922
  %_6.0 = extractvalue { i32, i32 } %2, 0, !dbg !5922
  %_6.1 = extractvalue { i32, i32 } %2, 1, !dbg !5922
  store i32 %_6.0, ptr %src_start.dbg.spill, align 4, !dbg !5923
    #dbg_declare(ptr %src_start.dbg.spill, !5906, !DIExpression(), !5924)
  store i32 %_6.1, ptr %src_end.dbg.spill, align 4, !dbg !5925
    #dbg_declare(ptr %src_end.dbg.spill, !5908, !DIExpression(), !5926)
  %_11.0 = sub i32 %_6.1, %_6.0, !dbg !5927
  %_11.1 = icmp ult i32 %_6.1, %_6.0, !dbg !5927
  br i1 %_11.1, label %panic, label %bb2, !dbg !5927

bb2:                                              ; preds = %start
  store i32 %_11.0, ptr %count.dbg.spill, align 4, !dbg !5927
    #dbg_declare(ptr %count.dbg.spill, !5909, !DIExpression(), !5928)
  %_16.0 = sub i32 %self.1, %_11.0, !dbg !5929
  %_16.1 = icmp ult i32 %self.1, %_11.0, !dbg !5929
  br i1 %_16.1, label %panic1, label %bb3, !dbg !5929

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 %0) #12, !dbg !5927
  unreachable, !dbg !5927

bb3:                                              ; preds = %bb2
  %_12 = icmp ule i32 %dest, %_16.0, !dbg !5930
  br i1 %_12, label %bb4, label %bb5, !dbg !5930

panic1:                                           ; preds = %bb2
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 %0) #12, !dbg !5929
  unreachable, !dbg !5929

bb5:                                              ; preds = %bb3
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_18, ptr align 4 @alloc_548c58979f636fee6e51e14f89242881) #11, !dbg !5931
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_18, ptr align 4 %0) #12, !dbg !5931
  unreachable, !dbg !5931

bb4:                                              ; preds = %bb3
  store ptr %self.0, ptr %self.dbg.spill.i10, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i10, i32 4
  store i32 %self.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i10, !5932, !DIExpression(), !5937)
  store ptr %self.0, ptr %ptr.dbg.spill, align 4, !dbg !5939
    #dbg_declare(ptr %ptr.dbg.spill, !5911, !DIExpression(), !5940)
  store ptr %self.0, ptr %self.dbg.spill.i5, align 4
    #dbg_declare(ptr %self.dbg.spill.i5, !5941, !DIExpression(), !5947)
  store i32 %_6.0, ptr %count.dbg.spill.i4, align 4
    #dbg_declare(ptr %count.dbg.spill.i4, !5946, !DIExpression(), !5949)
; call core::ub_checks::check_language_ub
  %_3.i6 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E() #11, !dbg !5950
  br i1 %_3.i6, label %bb2.i8, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit9", !dbg !5950

bb2.i8:                                           ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hee37ac0066823501E"(ptr %self.0, i32 %_6.0, i32 1, ptr align 4 %0) #11, !dbg !5952
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit9", !dbg !5952

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit9": ; preds = %bb4, %bb2.i8
  %_0.i7 = getelementptr inbounds nuw i8, ptr %self.0, i32 %_6.0, !dbg !5953
  store ptr %_0.i7, ptr %src_ptr.dbg.spill, align 4, !dbg !5954
    #dbg_declare(ptr %src_ptr.dbg.spill, !5913, !DIExpression(), !5955)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5941, !DIExpression(), !5956)
  store i32 %dest, ptr %count.dbg.spill.i2, align 4
    #dbg_declare(ptr %count.dbg.spill.i2, !5946, !DIExpression(), !5958)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E() #11, !dbg !5959
  br i1 %_3.i, label %bb2.i3, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit", !dbg !5959

bb2.i3:                                           ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit9"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hee37ac0066823501E"(ptr %self.0, i32 %dest, i32 1, ptr align 4 %0) #11, !dbg !5960
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit", !dbg !5960

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit": ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit9", %bb2.i3
  %_0.i = getelementptr inbounds nuw i8, ptr %self.0, i32 %dest, !dbg !5961
  store ptr %_0.i, ptr %dest_ptr.dbg.spill, align 4, !dbg !5962
    #dbg_declare(ptr %dest_ptr.dbg.spill, !5915, !DIExpression(), !5963)
  store ptr %_0.i7, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !5964, !DIExpression(), !5971)
  store ptr %_0.i, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !5969, !DIExpression(), !5973)
  store i32 %_11.0, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !5970, !DIExpression(), !5974)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E() #11, !dbg !5975
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr4copy17h2533b510f468f96dE.exit, !dbg !5975

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit"
  %4 = icmp eq i32 %_11.0, 0, !dbg !5977
  %5 = zext i1 %4 to i8, !dbg !5977
  store i8 %5, ptr %_9.i, align 1, !dbg !5977
  %6 = load i8, ptr %_9.i, align 1, !dbg !5978
  %7 = trunc nuw i8 %6 to i1, !dbg !5978
; call core::ptr::copy::precondition_check
  call void @_ZN4core3ptr4copy18precondition_check17hf00f2d5f4207ae3aE(ptr %_0.i7, ptr %_0.i, i32 1, i1 zeroext %7, ptr align 4 @alloc_44659632065e7bc5e1cc771c0ae76b73) #11, !dbg !5978
  br label %_ZN4core3ptr4copy17h2533b510f468f96dE.exit, !dbg !5978

_ZN4core3ptr4copy17h2533b510f468f96dE.exit:       ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE.exit", %bb2.i
  call void @llvm.memmove.p0.p0.i32(ptr align 1 %_0.i, ptr align 1 %_0.i7, i32 %_11.0, i1 false), !dbg !5979
  ret void, !dbg !5980
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2be727552b9c5ca4E"(ptr align 1 %self.0, i32 %self.1, i32 %index.0, i32 %index.1) unnamed_addr #0 !dbg !5981 {
start:
  %index.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5985, !DIExpression(), !5988)
  store i32 %index.0, ptr %index.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %index.dbg.spill, i32 4
  store i32 %index.1, ptr %1, align 4
    #dbg_declare(ptr %index.dbg.spill, !5986, !DIExpression(), !5989)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %2 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h6bc0e2afcbbf7e69E"(i32 %index.0, i32 %index.1, ptr align 1 %self.0, i32 %self.1) #11, !dbg !5990
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !5990
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !5990
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5991
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !5991
  ret { ptr, i32 } %4, !dbg !5991
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nounwind
define dso_local align 2 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb9a53d14c5232e3dE"(ptr align 2 %self.0, i32 %self.1, i32 %index) unnamed_addr #0 !dbg !5992 {
start:
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6014, !DIExpression(), !6018)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !6015, !DIExpression(), !6019)
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %_0 = call align 2 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h13ac0713d620d1c3E"(i32 %index, ptr align 2 %self.0, i32 %self.1) #11, !dbg !6020
  ret ptr %_0, !dbg !6021
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdca6b847bba43042E"(ptr align 1 %self.0, i32 %self.1, i32 %index) unnamed_addr #0 !dbg !6022 {
start:
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6039, !DIExpression(), !6042)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !6040, !DIExpression(), !6043)
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %_0 = call align 1 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17he077b6ed7bbbf197E"(i32 %index, ptr align 1 %self.0, i32 %self.1) #11, !dbg !6044
  ret ptr %_0, !dbg !6045
}

; core::slice::<impl [T]>::fill
; Function Attrs: nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17hc32ffbeed66354ebE"(ptr align 2 %self.0, i32 %self.1, i16 %value) unnamed_addr #1 !dbg !6046 {
start:
  %value.dbg.spill = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6050, !DIExpression(), !6052)
  store i16 %value, ptr %value.dbg.spill, align 2
    #dbg_declare(ptr %value.dbg.spill, !6051, !DIExpression(), !6053)
; call <[i16] as core::slice::specialize::SpecFill<i16>>::spec_fill
  call void @"_ZN78_$LT$$u5b$i16$u5d$$u20$as$u20$core..slice..specialize..SpecFill$LT$i16$GT$$GT$9spec_fill17hddafaa17e17af481E"(ptr align 2 %self.0, i32 %self.1, i16 %value) #11, !dbg !6054
  ret void, !dbg !6055
}

; core::slice::<impl [T]>::as_array
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8as_array17he2707928a4c7ab3dE"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !6056 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %me.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6072, !DIExpression(), !6077)
  %_2 = icmp eq i32 %self.1, 2, !dbg !6078
  br i1 %_2, label %bb1, label %bb4, !dbg !6078

bb4:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !6079
  br label %bb5, !dbg !6080

bb1:                                              ; preds = %start
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !6081, !DIExpression(), !6086)
; call core::ptr::const_ptr::<impl *const T>::cast_array
  %ptr = call ptr @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10cast_array17h1afd9d08ed414bfdE"(ptr %self.0) #11, !dbg !6088
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !6088
    #dbg_declare(ptr %ptr.dbg.spill, !6073, !DIExpression(), !6089)
  store ptr %ptr, ptr %me.dbg.spill, align 4, !dbg !6090
    #dbg_declare(ptr %me.dbg.spill, !6075, !DIExpression(), !6091)
  store ptr %ptr, ptr %_0, align 4, !dbg !6092
  br label %bb5, !dbg !6080

bb5:                                              ; preds = %bb1, %bb4
  %2 = load ptr, ptr %_0, align 4, !dbg !6093
  ret ptr %2, !dbg !6093
}

; core::slice::<impl [T]>::iter_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h1cd9560b2848fd3bE"(ptr align 2 %self.0, i32 %self.1) unnamed_addr #0 !dbg !6094 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6108, !DIExpression(), !6109)
; call core::slice::iter::IterMut<T>::new
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17hbf72e5509935aa8eE"(ptr align 2 %self.0, i32 %self.1) #11, !dbg !6110
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !6110
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !6110
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !6111
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !6111
  ret { ptr, ptr } %3, !dbg !6111
}

; core::slice::iter::IterMut<T>::new
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice4iter16IterMut$LT$T$GT$3new17hbf72e5509935aa8eE"(ptr align 2 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !6112 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %end_or_len = alloca [4 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !6116, !DIExpression(), !6123)
    #dbg_declare(ptr %end_or_len, !6121, !DIExpression(), !6124)
  store i32 %slice.1, ptr %len.dbg.spill, align 4, !dbg !6125
    #dbg_declare(ptr %len.dbg.spill, !6117, !DIExpression(), !6126)
; call core::ptr::non_null::NonNull<T>::from_mut
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h5b94ff678d25e24bE"(ptr align 2 %slice.0, i32 %slice.1) #11, !dbg !6127
  %_5.0 = extractvalue { ptr, i32 } %1, 0, !dbg !6127
  %_5.1 = extractvalue { ptr, i32 } %1, 1, !dbg !6127
; call core::ptr::non_null::NonNull<T>::cast
  %ptr = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8d0689e32ac1dd3cE"(ptr %_5.0, i32 %_5.1) #11, !dbg !6128
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !6128
    #dbg_declare(ptr %ptr.dbg.spill, !6119, !DIExpression(), !6129)
  br label %bb4, !dbg !6130

bb4:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !6131, !DIExpression(), !6137)
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !6139, !DIExpression(), !6145)
  store i32 %slice.1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !6144, !DIExpression(), !6147)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E() #11, !dbg !6148
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc38b428b9c766912E.exit", !dbg !6148

bb2.i:                                            ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hee37ac0066823501E"(ptr %ptr, i32 %slice.1, i32 2, ptr align 4 @alloc_41ffb2ff0e6e27abbed97ecf5e7f1caf) #11, !dbg !6150
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc38b428b9c766912E.exit", !dbg !6150

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc38b428b9c766912E.exit": ; preds = %bb4, %bb2.i
  %_0.i = getelementptr inbounds nuw i16, ptr %ptr, i32 %slice.1, !dbg !6151
  store ptr %_0.i, ptr %end_or_len, align 4, !dbg !6152
  br label %bb6, !dbg !6152

bb6:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc38b428b9c766912E.exit"
  %_8 = load ptr, ptr %end_or_len, align 4, !dbg !6153
  %2 = insertvalue { ptr, ptr } poison, ptr %ptr, 0, !dbg !6154
  %3 = insertvalue { ptr, ptr } %2, ptr %_8, 1, !dbg !6154
  ret { ptr, ptr } %3, !dbg !6154

bb3:                                              ; No predecessors!
  unreachable
}

; core::slice::index::slice_index_fail
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 %start1, i32 %end, i32 %len, ptr align 4 %0) unnamed_addr #3 !dbg !6155 {
start:
  %end.dbg.spill.i5 = alloca [4 x i8], align 4
  %start.dbg.spill.i6 = alloca [4 x i8], align 4
  %len.dbg.spill.i3 = alloca [4 x i8], align 4
  %end.dbg.spill.i4 = alloca [4 x i8], align 4
  %len.dbg.spill.i2 = alloca [4 x i8], align 4
  %start.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  store i32 %start1, ptr %start.dbg.spill, align 4
    #dbg_declare(ptr %start.dbg.spill, !6159, !DIExpression(), !6162)
  store i32 %end, ptr %end.dbg.spill, align 4
    #dbg_declare(ptr %end.dbg.spill, !6160, !DIExpression(), !6163)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !6161, !DIExpression(), !6164)
  %_4 = icmp ugt i32 %start1, %len, !dbg !6165
  br i1 %_4, label %bb1, label %bb2, !dbg !6165

bb2:                                              ; preds = %start
  %_6 = icmp ugt i32 %end, %len, !dbg !6166
  br i1 %_6, label %bb3, label %bb4, !dbg !6166

bb1:                                              ; preds = %start
  store i32 %start1, ptr %start.dbg.spill.i, align 4
    #dbg_declare(ptr %start.dbg.spill.i, !6167, !DIExpression(), !6175)
  store i32 %len, ptr %len.dbg.spill.i2, align 4
    #dbg_declare(ptr %len.dbg.spill.i2, !6174, !DIExpression(), !6175)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h6c3d7c12f3ee175fE(i32 %start1, i32 %len, ptr align 4 %0) #12, !dbg !6178
  unreachable, !dbg !6178

_ZN4core5slice5index16slice_index_fail8do_panic17h7b5eeb3cd5064bf8E.exit: ; No predecessors!
  unreachable, !dbg !6180

bb4:                                              ; preds = %bb2
  %_8 = icmp ugt i32 %start1, %end, !dbg !6181
  br i1 %_8, label %bb5, label %bb6, !dbg !6181

bb3:                                              ; preds = %bb2
  store i32 %end, ptr %end.dbg.spill.i4, align 4
    #dbg_declare(ptr %end.dbg.spill.i4, !6182, !DIExpression(), !6186)
  store i32 %len, ptr %len.dbg.spill.i3, align 4
    #dbg_declare(ptr %len.dbg.spill.i3, !6185, !DIExpression(), !6186)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h26c13eef9ac779e8E(i32 %end, i32 %len, ptr align 4 %0) #12, !dbg !6188
  unreachable, !dbg !6188

_ZN4core5slice5index16slice_index_fail8do_panic17ha4978ed09fb396c5E.exit: ; No predecessors!
  unreachable, !dbg !6180

bb6:                                              ; preds = %bb4
  store i32 %end, ptr %end.dbg.spill.i, align 4
    #dbg_declare(ptr %end.dbg.spill.i, !6190, !DIExpression(), !6194)
  store i32 %len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !6193, !DIExpression(), !6194)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17hc2ae076305a9deb2E(i32 %end, i32 %len, ptr align 4 %0) #12, !dbg !6196
  unreachable, !dbg !6196

_ZN4core5slice5index16slice_index_fail8do_panic17h23a360d8865a5df8E.exit: ; No predecessors!
  unreachable, !dbg !6180

bb5:                                              ; preds = %bb4
  store i32 %start1, ptr %start.dbg.spill.i6, align 4
    #dbg_declare(ptr %start.dbg.spill.i6, !6198, !DIExpression(), !6202)
  store i32 %end, ptr %end.dbg.spill.i5, align 4
    #dbg_declare(ptr %end.dbg.spill.i5, !6201, !DIExpression(), !6202)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h13d72b053e4c8ae7E(i32 %start1, i32 %end, ptr align 4 %0) #12, !dbg !6204
  unreachable, !dbg !6204

_ZN4core5slice5index16slice_index_fail8do_panic17hdddde5dc9635833dE.exit: ; No predecessors!
  unreachable, !dbg !6180
}

; core::slice::index::range
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN4core5slice5index5range17hfffd9f9a98dbf0c4E(ptr align 4 %range, i32 %bounds, ptr align 4 %0) unnamed_addr #1 !dbg !6206 {
start:
  %start.dbg.spill24 = alloca [4 x i8], align 4
  %start.dbg.spill21 = alloca [4 x i8], align 4
  %start.dbg.spill19 = alloca [4 x i8], align 4
  %start.dbg.spill17 = alloca [4 x i8], align 4
  %start.dbg.spill15 = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill12 = alloca [4 x i8], align 4
  %end.dbg.spill10 = alloca [4 x i8], align 4
  %end.dbg.spill8 = alloca [4 x i8], align 4
  %end.dbg.spill6 = alloca [4 x i8], align 4
  %end.dbg.spill4 = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %bounds.dbg.spill = alloca [4 x i8], align 4
  %_20 = alloca [8 x i8], align 4
  %start1 = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %end = alloca [4 x i8], align 4
    #dbg_declare(ptr %range, !6210, !DIExpression(), !6239)
  store i32 %bounds, ptr %bounds.dbg.spill, align 4
    #dbg_declare(ptr %bounds.dbg.spill, !6211, !DIExpression(), !6240)
    #dbg_declare(ptr %end, !6214, !DIExpression(), !6241)
    #dbg_declare(ptr %start1, !6226, !DIExpression(), !6242)
  store i32 %bounds, ptr %len.dbg.spill, align 4, !dbg !6243
    #dbg_declare(ptr %len.dbg.spill, !6212, !DIExpression(), !6244)
; call <core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound
  %1 = call { i32, ptr } @"_ZN100_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h9c6a358da176cad8E"(ptr align 4 %range) #11, !dbg !6245
  %2 = extractvalue { i32, ptr } %1, 0, !dbg !6245
  %3 = extractvalue { i32, ptr } %1, 1, !dbg !6245
  store i32 %2, ptr %_5, align 4, !dbg !6245
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6245
  store ptr %3, ptr %4, align 4, !dbg !6245
  %_7 = load i32, ptr %_5, align 4, !dbg !6246
  %5 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6246
  %6 = load ptr, ptr %5, align 4, !dbg !6246
  switch i32 %_7, label %bb2 [
    i32 0, label %bb5
    i32 1, label %bb4
    i32 2, label %bb3
  ], !dbg !6247

bb2:                                              ; preds = %bb11, %start
  unreachable, !dbg !6248

bb5:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6250
  %end2 = load ptr, ptr %7, align 4, !dbg !6250
  store ptr %end2, ptr %end.dbg.spill, align 4, !dbg !6250
    #dbg_declare(ptr %end.dbg.spill, !6218, !DIExpression(), !6251)
  %_10 = load i32, ptr %end2, align 4, !dbg !6252
  %_9 = icmp uge i32 %_10, %bounds, !dbg !6252
  br i1 %_9, label %bb6, label %bb7, !dbg !6252

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6253
  %end7 = load ptr, ptr %8, align 4, !dbg !6253
  store ptr %end7, ptr %end.dbg.spill8, align 4, !dbg !6253
    #dbg_declare(ptr %end.dbg.spill8, !6223, !DIExpression(), !6254)
  %_16 = load i32, ptr %end7, align 4, !dbg !6255
  %_15 = icmp ugt i32 %_16, %bounds, !dbg !6255
  br i1 %_15, label %bb9, label %bb10, !dbg !6255

bb3:                                              ; preds = %start
  store i32 %bounds, ptr %end, align 4, !dbg !6256
  br label %bb11, !dbg !6256

bb7:                                              ; preds = %bb5
  %9 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6257
  %_43 = load ptr, ptr %9, align 4, !dbg !6257
  %end3 = load i32, ptr %_43, align 4, !dbg !6257
  store i32 %end3, ptr %end.dbg.spill4, align 4, !dbg !6257
    #dbg_declare(ptr %end.dbg.spill4, !6219, !DIExpression(), !6258)
  %_13.0 = add i32 %end3, 1, !dbg !6259
  %_13.1 = icmp ult i32 %_13.0, %end3, !dbg !6259
  br i1 %_13.1, label %panic, label %bb8, !dbg !6259

bb6:                                              ; preds = %bb5
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6250
  %_42 = load ptr, ptr %10, align 4, !dbg !6250
  %end5 = load i32, ptr %_42, align 4, !dbg !6250
  store i32 %end5, ptr %end.dbg.spill6, align 4, !dbg !6250
    #dbg_declare(ptr %end.dbg.spill6, !6216, !DIExpression(), !6251)
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 0, i32 %end5, i32 %bounds, ptr align 4 %0) #12, !dbg !6260
  unreachable, !dbg !6260

bb8:                                              ; preds = %bb7
  store i32 %_13.0, ptr %end, align 4, !dbg !6259
  br label %bb11, !dbg !6261

panic:                                            ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 %0) #12, !dbg !6259
  unreachable, !dbg !6259

bb11:                                             ; preds = %bb3, %bb10, %bb8
; call <core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::start_bound
  %11 = call { i32, ptr } @"_ZN100_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h7d9ba89dc34726ccE"(ptr align 4 %range) #11, !dbg !6262
  %12 = extractvalue { i32, ptr } %11, 0, !dbg !6262
  %13 = extractvalue { i32, ptr } %11, 1, !dbg !6262
  store i32 %12, ptr %_20, align 4, !dbg !6262
  %14 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6262
  store ptr %13, ptr %14, align 4, !dbg !6262
  %_22 = load i32, ptr %_20, align 4, !dbg !6263
  %15 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6263
  %16 = load ptr, ptr %15, align 4, !dbg !6263
  switch i32 %_22, label %bb2 [
    i32 0, label %bb14
    i32 1, label %bb15
    i32 2, label %bb13
  ], !dbg !6264

bb10:                                             ; preds = %bb4
  %17 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6265
  %_45 = load ptr, ptr %17, align 4, !dbg !6265
  %end9 = load i32, ptr %_45, align 4, !dbg !6265
  store i32 %end9, ptr %end.dbg.spill10, align 4, !dbg !6265
    #dbg_declare(ptr %end.dbg.spill10, !6224, !DIExpression(), !6266)
  store i32 %end9, ptr %end, align 4, !dbg !6267
  br label %bb11, !dbg !6268

bb9:                                              ; preds = %bb4
  %18 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !6253
  %_44 = load ptr, ptr %18, align 4, !dbg !6253
  %end11 = load i32, ptr %_44, align 4, !dbg !6253
  store i32 %end11, ptr %end.dbg.spill12, align 4, !dbg !6253
    #dbg_declare(ptr %end.dbg.spill12, !6221, !DIExpression(), !6254)
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 0, i32 %end11, i32 %bounds, ptr align 4 %0) #12, !dbg !6269
  unreachable, !dbg !6269

bb14:                                             ; preds = %bb11
  %19 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6270
  %start13 = load ptr, ptr %19, align 4, !dbg !6270
  store ptr %start13, ptr %start.dbg.spill, align 4, !dbg !6270
    #dbg_declare(ptr %start.dbg.spill, !6235, !DIExpression(), !6271)
  %_33 = load i32, ptr %start13, align 4, !dbg !6272
  %_34 = load i32, ptr %end, align 4, !dbg !6273
  %_32 = icmp ugt i32 %_33, %_34, !dbg !6272
  br i1 %_32, label %bb19, label %bb20, !dbg !6272

bb15:                                             ; preds = %bb11
  %20 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6274
  %start18 = load ptr, ptr %20, align 4, !dbg !6274
  store ptr %start18, ptr %start.dbg.spill19, align 4, !dbg !6274
    #dbg_declare(ptr %start.dbg.spill19, !6230, !DIExpression(), !6275)
  %_25 = load i32, ptr %start18, align 4, !dbg !6276
  %_26 = load i32, ptr %end, align 4, !dbg !6277
  %_24 = icmp uge i32 %_25, %_26, !dbg !6276
  br i1 %_24, label %bb16, label %bb17, !dbg !6276

bb13:                                             ; preds = %bb11
  store i32 0, ptr %start1, align 4, !dbg !6278
  br label %bb21, !dbg !6278

bb20:                                             ; preds = %bb14
  %21 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6279
  %_51 = load ptr, ptr %21, align 4, !dbg !6279
  %start14 = load i32, ptr %_51, align 4, !dbg !6279
  store i32 %start14, ptr %start.dbg.spill15, align 4, !dbg !6279
    #dbg_declare(ptr %start.dbg.spill15, !6236, !DIExpression(), !6280)
  store i32 %start14, ptr %start1, align 4, !dbg !6281
  br label %bb21, !dbg !6282

bb19:                                             ; preds = %bb14
  %22 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6270
  %_50 = load ptr, ptr %22, align 4, !dbg !6270
  %start16 = load i32, ptr %_50, align 4, !dbg !6270
  store i32 %start16, ptr %start.dbg.spill17, align 4, !dbg !6270
    #dbg_declare(ptr %start.dbg.spill17, !6233, !DIExpression(), !6271)
  %_36 = load i32, ptr %end, align 4, !dbg !6283
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 %start16, i32 %_36, i32 %bounds, ptr align 4 %0) #12, !dbg !6284
  unreachable, !dbg !6284

bb21:                                             ; preds = %bb13, %bb18, %bb20
  %_38 = load i32, ptr %start1, align 4, !dbg !6285
  %_39 = load i32, ptr %end, align 4, !dbg !6286
  %23 = insertvalue { i32, i32 } poison, i32 %_38, 0, !dbg !6287
  %24 = insertvalue { i32, i32 } %23, i32 %_39, 1, !dbg !6287
  ret { i32, i32 } %24, !dbg !6287

bb17:                                             ; preds = %bb15
  %25 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6288
  %_49 = load ptr, ptr %25, align 4, !dbg !6288
  %start20 = load i32, ptr %_49, align 4, !dbg !6288
  store i32 %start20, ptr %start.dbg.spill21, align 4, !dbg !6288
    #dbg_declare(ptr %start.dbg.spill21, !6231, !DIExpression(), !6289)
  %_30.0 = add i32 %start20, 1, !dbg !6290
  %_30.1 = icmp ult i32 %_30.0, %start20, !dbg !6290
  br i1 %_30.1, label %panic22, label %bb18, !dbg !6290

bb16:                                             ; preds = %bb15
  %26 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6274
  %_48 = load ptr, ptr %26, align 4, !dbg !6274
  %start23 = load i32, ptr %_48, align 4, !dbg !6274
  store i32 %start23, ptr %start.dbg.spill24, align 4, !dbg !6274
    #dbg_declare(ptr %start.dbg.spill24, !6228, !DIExpression(), !6275)
  %_28 = load i32, ptr %end, align 4, !dbg !6291
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E(i32 %start23, i32 %_28, i32 %bounds, ptr align 4 %0) #12, !dbg !6292
  unreachable, !dbg !6292

bb18:                                             ; preds = %bb17
  store i32 %_30.0, ptr %start1, align 4, !dbg !6290
  br label %bb21, !dbg !6293

panic22:                                          ; preds = %bb17
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 %0) #12, !dbg !6290
  unreachable, !dbg !6290
}

; core::option::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
define internal void @_ZN4core6option13unwrap_failed17h6d7cea830e488295E(ptr align 4 %0) unnamed_addr #4 !dbg !6294 {
start:
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 @alloc_5f55955de67e57c79064b537689facea, i32 43, ptr align 4 %0) #12, !dbg !6297
  unreachable, !dbg !6297
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN4core6option15Option$LT$T$GT$3map17hb4a4bad60bdf5feaE"(ptr align 1 %0, ptr align 4 %f) unnamed_addr #0 !dbg !6298 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !6317, !DIExpression(), !6321)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6318, !DIExpression(), !6322)
  store i8 0, ptr %_8, align 1, !dbg !6323
  store i8 1, ptr %_8, align 1, !dbg !6323
  %1 = load ptr, ptr %self, align 4, !dbg !6323
  %2 = ptrtoint ptr %1 to i32, !dbg !6323
  %3 = icmp eq i32 %2, 0, !dbg !6323
  %_3 = select i1 %3, i32 0, i32 1, !dbg !6323
  %4 = trunc nuw i32 %_3 to i1, !dbg !6324
  br i1 %4, label %bb3, label %bb2, !dbg !6324

bb3:                                              ; preds = %start
  %x = load ptr, ptr %self, align 4, !dbg !6325
  store ptr %x, ptr %x.dbg.spill, align 4, !dbg !6325
    #dbg_declare(ptr %x.dbg.spill, !6319, !DIExpression(), !6326)
  store i8 0, ptr %_8, align 1, !dbg !6327
; call miniz_oxide::inflate::output_buffer::InputWrapper::read_byte::{{closure}}
  %_5 = call i8 @"_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte28_$u7b$$u7b$closure$u7d$$u7d$17h1ca3d217ad9b632aE"(ptr align 4 %f, ptr align 1 %x) #11, !dbg !6327
  %5 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6328
  store i8 %_5, ptr %5, align 1, !dbg !6328
  store i8 1, ptr %_0, align 1, !dbg !6328
  br label %bb7, !dbg !6329

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !6330
  br label %bb7, !dbg !6330

bb7:                                              ; preds = %bb3, %bb2
  %6 = load i8, ptr %_8, align 1, !dbg !6331
  %7 = trunc nuw i8 %6 to i1, !dbg !6331
  br i1 %7, label %bb6, label %bb5, !dbg !6331

bb5:                                              ; preds = %bb6, %bb7
  %8 = load i8, ptr %_0, align 1, !dbg !6332
  %9 = trunc nuw i8 %8 to i1, !dbg !6332
  %10 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6332
  %11 = load i8, ptr %10, align 1, !dbg !6332
  %12 = insertvalue { i1, i8 } poison, i1 %9, 0, !dbg !6332
  %13 = insertvalue { i1, i8 } %12, i8 %11, 1, !dbg !6332
  ret { i1, i8 } %13, !dbg !6332

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !6331

bb1:                                              ; No predecessors!
  unreachable, !dbg !6323
}

; core::option::Option<T>::zip
; Function Attrs: nounwind
define dso_local void @"_ZN4core6option15Option$LT$T$GT$3zip17hbdd62ad57f198f0cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, ptr %self.1, ptr align 1 %other) unnamed_addr #1 !dbg !6333 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [8 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_10 = alloca [1 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_8 = alloca [12 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6353, !DIExpression(), !6358)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !6354, !DIExpression(), !6359)
  store i8 0, ptr %_10, align 1, !dbg !6360
  store i8 0, ptr %_9, align 1, !dbg !6360
  store i8 1, ptr %_9, align 1, !dbg !6360
  store i8 1, ptr %_10, align 1, !dbg !6360
  store ptr %self.0, ptr %_3, align 4, !dbg !6360
  %1 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6360
  store ptr %self.1, ptr %1, align 4, !dbg !6360
  %2 = getelementptr inbounds i8, ptr %_3, i32 8, !dbg !6360
  store ptr %other, ptr %2, align 4, !dbg !6360
  %3 = load ptr, ptr %_3, align 4, !dbg !6360
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6360
  %5 = load ptr, ptr %4, align 4, !dbg !6360
  %6 = ptrtoint ptr %3 to i32, !dbg !6360
  %7 = icmp eq i32 %6, 0, !dbg !6360
  %_5 = select i1 %7, i32 0, i32 1, !dbg !6360
  %8 = trunc nuw i32 %_5 to i1, !dbg !6361
  br i1 %8, label %bb2, label %bb1, !dbg !6361

bb2:                                              ; preds = %start
  %9 = getelementptr inbounds i8, ptr %_3, i32 8, !dbg !6360
  %10 = load ptr, ptr %9, align 4, !dbg !6360
  %11 = ptrtoint ptr %10 to i32, !dbg !6360
  %12 = icmp eq i32 %11, 0, !dbg !6360
  %_4 = select i1 %12, i32 0, i32 1, !dbg !6360
  %13 = trunc nuw i32 %_4 to i1, !dbg !6361
  br i1 %13, label %bb3, label %bb1, !dbg !6361

bb1:                                              ; preds = %bb2, %start
  store ptr null, ptr %_0, align 4, !dbg !6362
  br label %bb10, !dbg !6362

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_10, align 1, !dbg !6363
  %a.0 = load ptr, ptr %_3, align 4, !dbg !6363
  %14 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6363
  %a.1 = load ptr, ptr %14, align 4, !dbg !6363
  store ptr %a.0, ptr %a.dbg.spill, align 4, !dbg !6363
  %15 = getelementptr inbounds i8, ptr %a.dbg.spill, i32 4, !dbg !6363
  store ptr %a.1, ptr %15, align 4, !dbg !6363
    #dbg_declare(ptr %a.dbg.spill, !6355, !DIExpression(), !6364)
  store i8 0, ptr %_9, align 1, !dbg !6365
  %16 = getelementptr inbounds i8, ptr %_3, i32 8, !dbg !6365
  %b = load ptr, ptr %16, align 4, !dbg !6365
  store ptr %b, ptr %b.dbg.spill, align 4, !dbg !6365
    #dbg_declare(ptr %b.dbg.spill, !6357, !DIExpression(), !6366)
  store ptr %a.0, ptr %_8, align 4, !dbg !6367
  %17 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !6367
  store ptr %a.1, ptr %17, align 4, !dbg !6367
  %18 = getelementptr inbounds i8, ptr %_8, i32 8, !dbg !6367
  store ptr %b, ptr %18, align 4, !dbg !6367
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_8, i32 12, i1 false), !dbg !6368
  br label %bb10, !dbg !6369

bb10:                                             ; preds = %bb1, %bb3
  %19 = load ptr, ptr %_3, align 4, !dbg !6370
  %20 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6370
  %21 = load ptr, ptr %20, align 4, !dbg !6370
  %22 = ptrtoint ptr %19 to i32, !dbg !6370
  %23 = icmp eq i32 %22, 0, !dbg !6370
  %_12 = select i1 %23, i32 0, i32 1, !dbg !6370
  %24 = trunc nuw i32 %_12 to i1, !dbg !6370
  br i1 %24, label %bb8, label %bb7, !dbg !6370

bb8:                                              ; preds = %bb10
  %25 = load i8, ptr %_10, align 1, !dbg !6370
  %26 = trunc nuw i8 %25 to i1, !dbg !6370
  br i1 %26, label %bb9, label %bb7, !dbg !6370

bb7:                                              ; preds = %bb9, %bb8, %bb10
  %27 = getelementptr inbounds i8, ptr %_3, i32 8, !dbg !6370
  %28 = load ptr, ptr %27, align 4, !dbg !6370
  %29 = ptrtoint ptr %28 to i32, !dbg !6370
  %30 = icmp eq i32 %29, 0, !dbg !6370
  %_11 = select i1 %30, i32 0, i32 1, !dbg !6370
  %31 = trunc nuw i32 %_11 to i1, !dbg !6370
  br i1 %31, label %bb5, label %bb4, !dbg !6370

bb9:                                              ; preds = %bb8
  br label %bb7, !dbg !6370

bb5:                                              ; preds = %bb7
  %32 = load i8, ptr %_9, align 1, !dbg !6370
  %33 = trunc nuw i8 %32 to i1, !dbg !6370
  br i1 %33, label %bb6, label %bb4, !dbg !6370

bb4:                                              ; preds = %bb6, %bb5, %bb7
  store i8 0, ptr %_9, align 1, !dbg !6370
  store i8 0, ptr %_10, align 1, !dbg !6370
  ret void, !dbg !6371

bb6:                                              ; preds = %bb5
  br label %bb4, !dbg !6370

bb11:                                             ; No predecessors!
  unreachable, !dbg !6372
}

; core::option::Option<T>::zip
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core6option15Option$LT$T$GT$3zip17hd242cc20efa49b6bE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #1 !dbg !6373 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_10 = alloca [1 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6379, !DIExpression(), !6384)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !6380, !DIExpression(), !6385)
  store i8 0, ptr %_10, align 1, !dbg !6386
  store i8 0, ptr %_9, align 1, !dbg !6386
  store i8 1, ptr %_9, align 1, !dbg !6386
  store i8 1, ptr %_10, align 1, !dbg !6386
  store ptr %self, ptr %_3, align 4, !dbg !6386
  %0 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6386
  store ptr %other, ptr %0, align 4, !dbg !6386
  %1 = load ptr, ptr %_3, align 4, !dbg !6386
  %2 = ptrtoint ptr %1 to i32, !dbg !6386
  %3 = icmp eq i32 %2, 0, !dbg !6386
  %_5 = select i1 %3, i32 0, i32 1, !dbg !6386
  %4 = trunc nuw i32 %_5 to i1, !dbg !6387
  br i1 %4, label %bb2, label %bb1, !dbg !6387

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6386
  %6 = load ptr, ptr %5, align 4, !dbg !6386
  %7 = ptrtoint ptr %6 to i32, !dbg !6386
  %8 = icmp eq i32 %7, 0, !dbg !6386
  %_4 = select i1 %8, i32 0, i32 1, !dbg !6386
  %9 = trunc nuw i32 %_4 to i1, !dbg !6387
  br i1 %9, label %bb3, label %bb1, !dbg !6387

bb1:                                              ; preds = %bb2, %start
  store ptr null, ptr %_0, align 4, !dbg !6388
  br label %bb10, !dbg !6388

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_10, align 1, !dbg !6389
  %a = load ptr, ptr %_3, align 4, !dbg !6389
  store ptr %a, ptr %a.dbg.spill, align 4, !dbg !6389
    #dbg_declare(ptr %a.dbg.spill, !6381, !DIExpression(), !6390)
  store i8 0, ptr %_9, align 1, !dbg !6391
  %10 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6391
  %b = load ptr, ptr %10, align 4, !dbg !6391
  store ptr %b, ptr %b.dbg.spill, align 4, !dbg !6391
    #dbg_declare(ptr %b.dbg.spill, !6383, !DIExpression(), !6392)
  store ptr %a, ptr %_0, align 4, !dbg !6393
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6393
  store ptr %b, ptr %11, align 4, !dbg !6393
  br label %bb10, !dbg !6394

bb10:                                             ; preds = %bb1, %bb3
  %12 = load ptr, ptr %_3, align 4, !dbg !6395
  %13 = ptrtoint ptr %12 to i32, !dbg !6395
  %14 = icmp eq i32 %13, 0, !dbg !6395
  %_12 = select i1 %14, i32 0, i32 1, !dbg !6395
  %15 = trunc nuw i32 %_12 to i1, !dbg !6395
  br i1 %15, label %bb8, label %bb7, !dbg !6395

bb8:                                              ; preds = %bb10
  %16 = load i8, ptr %_10, align 1, !dbg !6395
  %17 = trunc nuw i8 %16 to i1, !dbg !6395
  br i1 %17, label %bb9, label %bb7, !dbg !6395

bb7:                                              ; preds = %bb9, %bb8, %bb10
  %18 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6395
  %19 = load ptr, ptr %18, align 4, !dbg !6395
  %20 = ptrtoint ptr %19 to i32, !dbg !6395
  %21 = icmp eq i32 %20, 0, !dbg !6395
  %_11 = select i1 %21, i32 0, i32 1, !dbg !6395
  %22 = trunc nuw i32 %_11 to i1, !dbg !6395
  br i1 %22, label %bb5, label %bb4, !dbg !6395

bb9:                                              ; preds = %bb8
  br label %bb7, !dbg !6395

bb5:                                              ; preds = %bb7
  %23 = load i8, ptr %_9, align 1, !dbg !6395
  %24 = trunc nuw i8 %23 to i1, !dbg !6395
  br i1 %24, label %bb6, label %bb4, !dbg !6395

bb4:                                              ; preds = %bb6, %bb5, %bb7
  store i8 0, ptr %_9, align 1, !dbg !6395
  store i8 0, ptr %_10, align 1, !dbg !6395
  %25 = load ptr, ptr %_0, align 4, !dbg !6396
  %26 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6396
  %27 = load ptr, ptr %26, align 4, !dbg !6396
  %28 = insertvalue { ptr, ptr } poison, ptr %25, 0, !dbg !6396
  %29 = insertvalue { ptr, ptr } %28, ptr %27, 1, !dbg !6396
  ret { ptr, ptr } %29, !dbg !6396

bb6:                                              ; preds = %bb5
  br label %bb4, !dbg !6395

bb11:                                             ; No predecessors!
  unreachable, !dbg !6397
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17hdcfaa0ce463e6a8dE"(ptr align 1 %0) unnamed_addr #0 !dbg !6398 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !6403, !DIExpression(), !6407)
    #dbg_declare(ptr %err.dbg.spill, !6404, !DIExpression(), !6408)
  store i8 0, ptr %_6, align 1, !dbg !6409
  store i8 1, ptr %_6, align 1, !dbg !6409
  %1 = load ptr, ptr %self, align 4, !dbg !6409
  %2 = ptrtoint ptr %1 to i32, !dbg !6409
  %3 = icmp eq i32 %2, 0, !dbg !6409
  %_3 = select i1 %3, i32 0, i32 1, !dbg !6409
  %4 = trunc nuw i32 %_3 to i1, !dbg !6410
  br i1 %4, label %bb3, label %bb2, !dbg !6410

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 4, !dbg !6411
  store ptr %v, ptr %v.dbg.spill, align 4, !dbg !6411
    #dbg_declare(ptr %v.dbg.spill, !6405, !DIExpression(), !6412)
  store ptr %v, ptr %_0, align 4, !dbg !6413
  br label %bb6, !dbg !6414

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !6415
  store ptr null, ptr %_0, align 4, !dbg !6416
  br label %bb6, !dbg !6417

bb6:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_6, align 1, !dbg !6418
  %6 = trunc nuw i8 %5 to i1, !dbg !6418
  br i1 %6, label %bb5, label %bb4, !dbg !6418

bb4:                                              ; preds = %bb5, %bb6
  %7 = load ptr, ptr %_0, align 4, !dbg !6419
  ret ptr %7, !dbg !6419

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !6418

bb1:                                              ; No predecessors!
  unreachable, !dbg !6409
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nounwind
define dso_local i16 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h2aa2dcb795353ac3E"(i16 %0, i16 %1, i16 %default) unnamed_addr #0 !dbg !6420 {
start:
  %x.dbg.spill = alloca [2 x i8], align 2
  %default.dbg.spill = alloca [2 x i8], align 2
  %_5 = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 2
  %self = alloca [4 x i8], align 2
  store i16 %0, ptr %self, align 2
  %2 = getelementptr inbounds i8, ptr %self, i32 2
  store i16 %1, ptr %2, align 2
    #dbg_declare(ptr %self, !6436, !DIExpression(), !6440)
  store i16 %default, ptr %default.dbg.spill, align 2
    #dbg_declare(ptr %default.dbg.spill, !6437, !DIExpression(), !6441)
  store i8 0, ptr %_5, align 1, !dbg !6442
  store i8 1, ptr %_5, align 1, !dbg !6442
  %3 = load i16, ptr %self, align 2, !dbg !6442
  %4 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !6442
  %5 = load i16, ptr %4, align 2, !dbg !6442
  %_3 = zext i16 %3 to i32, !dbg !6442
  %6 = trunc nuw i32 %_3 to i1, !dbg !6443
  br i1 %6, label %bb3, label %bb2, !dbg !6443

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !6444
  %x = load i16, ptr %7, align 2, !dbg !6444
  store i16 %x, ptr %x.dbg.spill, align 2, !dbg !6444
    #dbg_declare(ptr %x.dbg.spill, !6438, !DIExpression(), !6445)
  store i16 %x, ptr %_0, align 2, !dbg !6446
  br label %bb6, !dbg !6447

bb2:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !6448
  store i16 %default, ptr %_0, align 2, !dbg !6448
  br label %bb6, !dbg !6448

bb6:                                              ; preds = %bb3, %bb2
  %8 = load i8, ptr %_5, align 1, !dbg !6449
  %9 = trunc nuw i8 %8 to i1, !dbg !6449
  br i1 %9, label %bb5, label %bb4, !dbg !6449

bb4:                                              ; preds = %bb5, %bb6
  %10 = load i16, ptr %_0, align 2, !dbg !6450
  ret i16 %10, !dbg !6450

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !6449

bb1:                                              ; No predecessors!
  unreachable, !dbg !6442
}

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nounwind
define dso_local { i8, i8 } @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17h57526fba8fdc257aE"(i8 %0, i8 %1, i8 %default.0, i8 %default.1) unnamed_addr #0 !dbg !6451 {
start:
  %x.dbg.spill = alloca [2 x i8], align 1
  %default.dbg.spill = alloca [2 x i8], align 1
  %_5 = alloca [1 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %self = alloca [2 x i8], align 1
  store i8 %0, ptr %self, align 1
  %2 = getelementptr inbounds i8, ptr %self, i32 1
  store i8 %1, ptr %2, align 1
    #dbg_declare(ptr %self, !6456, !DIExpression(), !6460)
  store i8 %default.0, ptr %default.dbg.spill, align 1
  %3 = getelementptr inbounds i8, ptr %default.dbg.spill, i32 1
  store i8 %default.1, ptr %3, align 1
    #dbg_declare(ptr %default.dbg.spill, !6457, !DIExpression(), !6461)
  store i8 0, ptr %_5, align 1, !dbg !6462
  store i8 1, ptr %_5, align 1, !dbg !6462
  %4 = load i8, ptr %self, align 1, !dbg !6462
  %5 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !6462
  %6 = load i8, ptr %5, align 1, !dbg !6462
  %7 = icmp eq i8 %4, 3, !dbg !6462
  %_3 = select i1 %7, i32 0, i32 1, !dbg !6462
  %8 = trunc nuw i32 %_3 to i1, !dbg !6463
  br i1 %8, label %bb3, label %bb2, !dbg !6463

bb3:                                              ; preds = %start
  %x.0 = load i8, ptr %self, align 1, !dbg !6464
  %9 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !6464
  %x.1 = load i8, ptr %9, align 1, !dbg !6464
  store i8 %x.0, ptr %x.dbg.spill, align 1, !dbg !6464
  %10 = getelementptr inbounds i8, ptr %x.dbg.spill, i32 1, !dbg !6464
  store i8 %x.1, ptr %10, align 1, !dbg !6464
    #dbg_declare(ptr %x.dbg.spill, !6458, !DIExpression(), !6465)
  store i8 %x.0, ptr %_0, align 1, !dbg !6466
  %11 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6466
  store i8 %x.1, ptr %11, align 1, !dbg !6466
  br label %bb6, !dbg !6467

bb2:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !6468
  store i8 %default.0, ptr %_0, align 1, !dbg !6468
  %12 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6468
  store i8 %default.1, ptr %12, align 1, !dbg !6468
  br label %bb6, !dbg !6468

bb6:                                              ; preds = %bb3, %bb2
  %13 = load i8, ptr %_5, align 1, !dbg !6469
  %14 = trunc nuw i8 %13 to i1, !dbg !6469
  br i1 %14, label %bb5, label %bb4, !dbg !6469

bb4:                                              ; preds = %bb5, %bb6
  %15 = load i8, ptr %_0, align 1, !dbg !6470
  %16 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6470
  %17 = load i8, ptr %16, align 1, !dbg !6470
  %18 = insertvalue { i8, i8 } poison, i8 %15, 0, !dbg !6470
  %19 = insertvalue { i8, i8 } %18, i8 %17, 1, !dbg !6470
  ret { i8, i8 } %19, !dbg !6470

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !6469

bb1:                                              ; No predecessors!
  unreachable, !dbg !6462
}

; core::option::Option<&T>::copied
; Function Attrs: nounwind
define dso_local { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h1f2b2e3319bf76e1E"(ptr align 2 %0) unnamed_addr #1 !dbg !6471 {
start:
  %v.dbg.spill = alloca [2 x i8], align 2
  %_0 = alloca [4 x i8], align 2
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !6476, !DIExpression(), !6479)
  %1 = load ptr, ptr %self, align 4, !dbg !6480
  %2 = ptrtoint ptr %1 to i32, !dbg !6480
  %3 = icmp eq i32 %2, 0, !dbg !6480
  %_2 = select i1 %3, i32 0, i32 1, !dbg !6480
  %4 = trunc nuw i32 %_2 to i1, !dbg !6481
  br i1 %4, label %bb3, label %bb2, !dbg !6481

bb3:                                              ; preds = %start
  %_4 = load ptr, ptr %self, align 4, !dbg !6482
  %v = load i16, ptr %_4, align 2, !dbg !6482
  store i16 %v, ptr %v.dbg.spill, align 2, !dbg !6482
    #dbg_declare(ptr %v.dbg.spill, !6477, !DIExpression(), !6483)
  %5 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !6484
  store i16 %v, ptr %5, align 2, !dbg !6484
  store i16 1, ptr %_0, align 2, !dbg !6484
  br label %bb4, !dbg !6485

bb2:                                              ; preds = %start
  store i16 0, ptr %_0, align 2, !dbg !6486
  br label %bb4, !dbg !6486

bb4:                                              ; preds = %bb3, %bb2
  %6 = load i16, ptr %_0, align 2, !dbg !6487
  %7 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !6487
  %8 = load i16, ptr %7, align 2, !dbg !6487
  %9 = insertvalue { i16, i16 } poison, i16 %6, 0, !dbg !6487
  %10 = insertvalue { i16, i16 } %9, i16 %8, 1, !dbg !6487
  ret { i16, i16 } %10, !dbg !6487

bb1:                                              ; No predecessors!
  unreachable, !dbg !6480
}

; core::result::Result<T,E>::unwrap_or_default
; Function Attrs: inlinehint nounwind
define dso_local i16 @"_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17ha7872ef8f65c955dE"(i24 %0) unnamed_addr #0 !dbg !6488 {
start:
  %1 = alloca [2 x i8], align 2
  %x = alloca [2 x i8], align 1
  %_0 = alloca [2 x i8], align 1
  %2 = alloca [4 x i8], align 4
  %self = alloca [3 x i8], align 1
  store i24 %0, ptr %2, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %self, ptr align 4 %2, i32 3, i1 false)
    #dbg_declare(ptr %self, !6494, !DIExpression(), !6497)
    #dbg_declare(ptr %x, !6495, !DIExpression(), !6498)
  %3 = load i8, ptr %self, align 1, !dbg !6499
  %4 = trunc nuw i8 %3 to i1, !dbg !6499
  %_2 = zext i1 %4 to i32, !dbg !6499
  %5 = trunc nuw i32 %_2 to i1, !dbg !6500
  br i1 %5, label %bb2, label %bb3, !dbg !6500

bb2:                                              ; preds = %start
; call core::array::<impl core::default::Default for [T; 2]>::default
  %6 = call i16 @"_ZN4core5array75_$LT$impl$u20$core..default..Default$u20$for$u20$$u5b$T$u3b$$u20$2$u5d$$GT$7default17h4482b52665d997b4E"() #11, !dbg !6501
  store i16 %6, ptr %1, align 2, !dbg !6501
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_0, ptr align 2 %1, i32 2, i1 false), !dbg !6501
  br label %bb6, !dbg !6501

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !6502
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %x, ptr align 1 %7, i32 2, i1 false), !dbg !6502
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_0, ptr align 1 %x, i32 2, i1 false), !dbg !6503
  br label %bb6, !dbg !6504

bb6:                                              ; preds = %bb2, %bb3
  %8 = load i8, ptr %self, align 1, !dbg !6505
  %9 = trunc nuw i8 %8 to i1, !dbg !6505
  %_4 = zext i1 %9 to i32, !dbg !6505
  %10 = trunc nuw i32 %_4 to i1, !dbg !6505
  br i1 %10, label %bb5, label %bb4, !dbg !6505

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !6505

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i16, ptr %_0, align 1, !dbg !6506
  ret i16 %11, !dbg !6506

bb1:                                              ; No predecessors!
  unreachable, !dbg !6499
}

; core::result::Result<&T,E>::copied
; Function Attrs: inlinehint nounwind
define dso_local i24 @"_ZN4core6result23Result$LT$$RF$T$C$E$GT$6copied17hda34cc0a46634f63E"(ptr align 1 %0) unnamed_addr #0 !dbg !6507 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %v = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 1
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !6512, !DIExpression(), !6517)
    #dbg_declare(ptr %v, !6513, !DIExpression(), !6518)
    #dbg_declare(ptr %e.dbg.spill, !6515, !DIExpression(), !6519)
  %1 = load ptr, ptr %self, align 4, !dbg !6520
  %2 = ptrtoint ptr %1 to i32, !dbg !6520
  %3 = icmp eq i32 %2, 0, !dbg !6520
  %_2 = select i1 %3, i32 1, i32 0, !dbg !6520
  %4 = trunc nuw i32 %_2 to i1, !dbg !6521
  br i1 %4, label %bb2, label %bb3, !dbg !6521

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !6522
  br label %bb4, !dbg !6523

bb3:                                              ; preds = %start
  %_5 = load ptr, ptr %self, align 4, !dbg !6524
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %v, ptr align 1 %_5, i32 2, i1 false), !dbg !6524
  %5 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !6525
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %5, ptr align 1 %v, i32 2, i1 false), !dbg !6525
  store i8 0, ptr %_0, align 1, !dbg !6525
  br label %bb4, !dbg !6526

bb4:                                              ; preds = %bb2, %bb3
  %6 = load i24, ptr %_0, align 1, !dbg !6527
  ret i24 %6, !dbg !6527

bb1:                                              ; No predecessors!
  unreachable, !dbg !6520
}

; core::panicking::panic_const::panic_const_rem_by_zero
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h27874f65d9a73bf9E(ptr align 4 %0) unnamed_addr #3 !dbg !6528 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_4a5d1f504800cbe61e09126ad8023985) #11, !dbg !6531
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_2, ptr align 4 %0) #12, !dbg !6532
  unreachable, !dbg !6532
}

; core::panicking::panic_const::panic_const_add_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E(ptr align 4 %0) unnamed_addr #3 !dbg !6533 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_491fd71eacc9ac6df50464189817658a) #11, !dbg !6534
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_2, ptr align 4 %0) #12, !dbg !6535
  unreachable, !dbg !6535
}

; core::panicking::panic_const::panic_const_mul_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hc3e0d809b0a12a70E(ptr align 4 %0) unnamed_addr #3 !dbg !6536 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_3a541098c7af55f2d1b57c8374ee944e) #11, !dbg !6537
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_2, ptr align 4 %0) #12, !dbg !6538
  unreachable, !dbg !6538
}

; core::panicking::panic_const::panic_const_neg_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_neg_overflow17h371e6116aede4348E(ptr align 4 %0) unnamed_addr #3 !dbg !6539 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_5de496b425986be16834231411267f24) #11, !dbg !6540
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_2, ptr align 4 %0) #12, !dbg !6541
  unreachable, !dbg !6541
}

; core::panicking::panic_const::panic_const_shl_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE(ptr align 4 %0) unnamed_addr #3 !dbg !6542 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_26eab6319fe0d02af8105663e6a2ea8b) #11, !dbg !6543
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_2, ptr align 4 %0) #12, !dbg !6544
  unreachable, !dbg !6544
}

; core::panicking::panic_const::panic_const_shr_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E(ptr align 4 %0) unnamed_addr #3 !dbg !6545 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_0f75c28593fb3281511a86ba9b3adf6f) #11, !dbg !6546
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_2, ptr align 4 %0) #12, !dbg !6547
  unreachable, !dbg !6547
}

; core::panicking::panic_const::panic_const_sub_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE(ptr align 4 %0) unnamed_addr #3 !dbg !6548 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_7daa13c2a11e2a3dbea9e2a29716d6f6) #11, !dbg !6549
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_2, ptr align 4 %0) #12, !dbg !6550
  unreachable, !dbg !6550
}

; core::panicking::panic_bounds_check
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E(i32 %index, i32 %len, ptr align 4 %0) unnamed_addr #3 !dbg !6551 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !6553, !DIExpression(), !6632)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !6554, !DIExpression(), !6633)
  call void @llvm.trap(), !dbg !6634
  unreachable, !dbg !6634
}

; core::panicking::panic_nounwind_fmt
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_nounwind_fmt17hcf45dfa946aa2fa2E(ptr align 4 %fmt, i1 zeroext %force_no_backtrace, ptr align 4 %0) unnamed_addr #3 !dbg !6635 {
start:
  %force_no_backtrace.dbg.spill = alloca [1 x i8], align 1
  %_3 = alloca [28 x i8], align 4
    #dbg_declare(ptr %fmt, !6693, !DIExpression(), !6695)
  %1 = zext i1 %force_no_backtrace to i8
  store i8 %1, ptr %force_no_backtrace.dbg.spill, align 1
    #dbg_declare(ptr %force_no_backtrace.dbg.spill, !6694, !DIExpression(), !6696)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %fmt, i32 24, i1 false), !dbg !6697
  %2 = getelementptr inbounds i8, ptr %_3, i32 24, !dbg !6697
  %3 = zext i1 %force_no_backtrace to i8, !dbg !6697
  store i8 %3, ptr %2, align 4, !dbg !6697
  %4 = getelementptr inbounds i8, ptr %_3, i32 24, !dbg !6699
  %5 = load i8, ptr %4, align 4, !dbg !6699
  %6 = trunc nuw i8 %5 to i1, !dbg !6699
; call core::panicking::panic_nounwind_fmt::runtime
  call void @_ZN4core9panicking18panic_nounwind_fmt7runtime17h671cc84060e11c33E(ptr align 4 %_3, i1 zeroext %6, ptr align 4 %0) #12, !dbg !6699
  unreachable, !dbg !6699
}

; core::panicking::panic_nounwind_fmt::runtime
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_nounwind_fmt7runtime17h671cc84060e11c33E(ptr align 4 %fmt, i1 zeroext %force_no_backtrace, ptr align 4 %0) unnamed_addr #3 !dbg !6700 {
start:
    #dbg_declare(ptr %fmt, !6703, !DIExpression(), !6715)
  %force_no_backtrace.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %force_no_backtrace to i8
  store i8 %1, ptr %force_no_backtrace.dbg.spill, align 1
    #dbg_declare(ptr %force_no_backtrace.dbg.spill, !6704, !DIExpression(), !6715)
  call void @llvm.trap(), !dbg !6716
  unreachable, !dbg !6716
}

; core::panicking::panic
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE(ptr align 1 %expr.0, i32 %expr.1, ptr align 4 %0) unnamed_addr #3 !dbg !6718 {
start:
  %expr.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  store ptr %expr.0, ptr %expr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %expr.dbg.spill, i32 4
  store i32 %expr.1, ptr %1, align 4
    #dbg_declare(ptr %expr.dbg.spill, !6722, !DIExpression(), !6723)
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_5, i32 0, !dbg !6724
  store ptr %expr.0, ptr %2, align 4, !dbg !6724
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !6724
  store i32 %expr.1, ptr %3, align 4, !dbg !6724
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 %_5) #11, !dbg !6725
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %_3, ptr align 4 %0) #12, !dbg !6726
  unreachable, !dbg !6726
}

; core::panicking::panic_fmt
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E(ptr align 4 %fmt, ptr align 4 %0) unnamed_addr #3 !dbg !6727 {
start:
    #dbg_declare(ptr %fmt, !6731, !DIExpression(), !6734)
  call void @llvm.trap(), !dbg !6735
  unreachable, !dbg !6735
}

; core::ub_checks::maybe_is_aligned
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned17h9d138b3859146c03E(ptr %ptr, i32 %align) unnamed_addr #0 !dbg !6736 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !6741, !DIExpression(), !6743)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !6742, !DIExpression(), !6744)
; call core::ub_checks::maybe_is_aligned::runtime
  %_0 = call zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned7runtime17h4d6789122cc752f4E(ptr %ptr, i32 %align) #11, !dbg !6745
  ret i1 %_0, !dbg !6747
}

; core::ub_checks::maybe_is_aligned::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned7runtime17h4d6789122cc752f4E(ptr %ptr, i32 %align) unnamed_addr #0 !dbg !6748 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !6751, !DIExpression(), !6753)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !6752, !DIExpression(), !6753)
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h9d68787d1567a990E"(ptr %ptr, i32 %align) #11, !dbg !6754
  ret i1 %_0, !dbg !6756
}

; core::ub_checks::check_language_ub
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E() unnamed_addr #0 !dbg !6757 {
start:
  %_0 = alloca [1 x i8], align 1
  br label %bb1, !dbg !6760

bb1:                                              ; preds = %start
; call core::ub_checks::check_language_ub::runtime
  %0 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17h42d0275699dcd24aE() #11, !dbg !6761
  %1 = zext i1 %0 to i8, !dbg !6761
  store i8 %1, ptr %_0, align 1, !dbg !6761
  br label %bb3, !dbg !6761

bb3:                                              ; preds = %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !6763
  %3 = trunc nuw i8 %2 to i1, !dbg !6763
  ret i1 %3, !dbg !6763

bb2:                                              ; No predecessors!
  unreachable
}

; core::ub_checks::check_language_ub::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17h42d0275699dcd24aE() unnamed_addr #0 !dbg !6764 {
start:
  ret i1 true, !dbg !6766
}

; core::ub_checks::maybe_is_aligned_and_not_null
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h356dc4b78abe46e9E(ptr %ptr, i32 %align, i1 zeroext %is_zst) unnamed_addr #0 !dbg !6767 {
start:
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !6771, !DIExpression(), !6774)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !6772, !DIExpression(), !6775)
  %0 = zext i1 %is_zst to i8
  store i8 %0, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !6773, !DIExpression(), !6776)
; call core::ub_checks::maybe_is_aligned
  %_4 = call zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned17h9d138b3859146c03E(ptr %ptr, i32 %align) #11, !dbg !6777
  br i1 %_4, label %bb2, label %bb3, !dbg !6777

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !6777
  br label %bb7, !dbg !6777

bb2:                                              ; preds = %start
  br i1 %is_zst, label %bb4, label %bb5, !dbg !6778

bb7:                                              ; preds = %bb4, %bb5, %bb3
  %1 = load i8, ptr %_0, align 1, !dbg !6779
  %2 = trunc nuw i8 %1 to i1, !dbg !6779
  ret i1 %2, !dbg !6779

bb5:                                              ; preds = %bb2
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf56eacc16313c5f5E"(ptr %ptr) #11, !dbg !6780
  %3 = xor i1 %_5, true, !dbg !6781
  %4 = zext i1 %3 to i8, !dbg !6781
  store i8 %4, ptr %_0, align 1, !dbg !6781
  br label %bb7, !dbg !6782

bb4:                                              ; preds = %bb2
  store i8 1, ptr %_0, align 1, !dbg !6782
  br label %bb7, !dbg !6782
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h241f1438f7071ec9E"(i16 %self, ptr align 4 %0) unnamed_addr #0 !dbg !6783 {
start:
  %small.dbg.spill.i = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [2 x i8], align 2
  store i16 %self, ptr %self.dbg.spill, align 2
    #dbg_declare(ptr %self.dbg.spill, !6789, !DIExpression(), !6792)
  store i16 %self, ptr %small.dbg.spill.i, align 2
    #dbg_declare(ptr %small.dbg.spill.i, !1088, !DIExpression(), !6793)
  %_0.i = zext i16 %self to i32, !dbg !6795
  ret i32 %_0.i, !dbg !6796
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf90f24832a995a49E"(i16 %self, ptr align 4 %0) unnamed_addr #0 !dbg !6797 {
start:
  %small.dbg.spill.i = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [2 x i8], align 2
  store i16 %self, ptr %self.dbg.spill, align 2
    #dbg_declare(ptr %self.dbg.spill, !6801, !DIExpression(), !6804)
  store i16 %self, ptr %small.dbg.spill.i, align 2
    #dbg_declare(ptr %small.dbg.spill.i, !2545, !DIExpression(), !6805)
  %_0.i = sext i16 %self to i32, !dbg !6807
  ret i32 %_0.i, !dbg !6808
}

; <T as core::convert::TryInto<U>>::try_into
; Function Attrs: inlinehint nounwind
define dso_local i24 @"_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h40a936c5f379619dE"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #0 !dbg !6809 {
start:
  %0 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [4 x i8], align 1
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !6812, !DIExpression(), !6815)
; call core::array::<impl core::convert::TryFrom<&[T]> for [T; N]>::try_from
  %2 = call i24 @"_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17hf3eb7cd57859e752E"(ptr align 1 %self.0, i32 %self.1) #11, !dbg !6816
  store i24 %2, ptr %0, align 4, !dbg !6816
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_0, ptr align 4 %0, i32 3, i1 false), !dbg !6816
  %3 = load i24, ptr %_0, align 1, !dbg !6817
  ret i24 %3, !dbg !6817
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h343835d0ac7718bfE"(ptr sret([28 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !6818 {
start:
    #dbg_declare(ptr %self, !6825, !DIExpression(), !6828)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 28, i1 false), !dbg !6829
  ret void, !dbg !6830
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local { i8, i8 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h350134702857a6b3E"(i8 %self.0, i8 %self.1) unnamed_addr #0 !dbg !6831 {
start:
  %self.dbg.spill = alloca [2 x i8], align 1
  store i8 %self.0, ptr %self.dbg.spill, align 1
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 1
  store i8 %self.1, ptr %0, align 1
    #dbg_declare(ptr %self.dbg.spill, !6835, !DIExpression(), !6838)
  %1 = insertvalue { i8, i8 } poison, i8 %self.0, 0, !dbg !6839
  %2 = insertvalue { i8, i8 } %1, i8 %self.1, 1, !dbg !6839
  ret { i8, i8 } %2, !dbg !6839
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b888a6049822196E"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !6840 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6844, !DIExpression(), !6847)
  %1 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !6848
  %2 = insertvalue { ptr, ptr } %1, ptr %self.1, 1, !dbg !6848
  ret { ptr, ptr } %2, !dbg !6848
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h657e6563b344c1feE"(ptr %self.0, ptr %self.1) unnamed_addr #0 !dbg !6849 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6853, !DIExpression(), !6856)
  %1 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !6857
  %2 = insertvalue { ptr, ptr } %1, ptr %self.1, 1, !dbg !6857
  ret { ptr, ptr } %2, !dbg !6857
}

; adler2::Adler32::from_checksum
; Function Attrs: inlinehint nounwind
define internal { i16, i16 } @_ZN6adler27Adler3213from_checksum17h266684498a3499f2E(i32 %sum) unnamed_addr #0 !dbg !6858 {
start:
  %sum.dbg.spill = alloca [4 x i8], align 4
  store i32 %sum, ptr %sum.dbg.spill, align 4
    #dbg_declare(ptr %sum.dbg.spill, !6864, !DIExpression(), !6865)
  %_2 = trunc i32 %sum to i16, !dbg !6866
  %_4 = lshr i32 %sum, 16, !dbg !6867
  %_3 = trunc i32 %_4 to i16, !dbg !6867
  %0 = insertvalue { i16, i16 } poison, i16 %_2, 0, !dbg !6868
  %1 = insertvalue { i16, i16 } %0, i16 %_3, 1, !dbg !6868
  ret { i16, i16 } %1, !dbg !6868
}

; adler2::Adler32::checksum
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN6adler27Adler328checksum17h4b33d198b898b04bE(ptr align 2 %self) unnamed_addr #0 !dbg !6869 {
start:
  %small.dbg.spill.i1 = alloca [2 x i8], align 2
  %small.dbg.spill.i = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6875, !DIExpression(), !6876)
  %0 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !6877
  %_4 = load i16, ptr %0, align 2, !dbg !6877
  store i16 %_4, ptr %small.dbg.spill.i1, align 2
    #dbg_declare(ptr %small.dbg.spill.i1, !1088, !DIExpression(), !6878)
  %_0.i2 = zext i16 %_4 to i32, !dbg !6880
  %_2 = shl i32 %_0.i2, 16, !dbg !6881
  %_8 = load i16, ptr %self, align 2, !dbg !6882
  store i16 %_8, ptr %small.dbg.spill.i, align 2
    #dbg_declare(ptr %small.dbg.spill.i, !1088, !DIExpression(), !6883)
  %_0.i = zext i16 %_8 to i32, !dbg !6885
  %_0 = or i32 %_2, %_0.i, !dbg !6881
  ret i32 %_0, !dbg !6886
}

; <miniz_oxide::inflate::TINFLStatus as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN74_$LT$miniz_oxide..inflate..TINFLStatus$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7c9044e26ac2fa86E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !6887 {
start:
  %__arg1_discr.dbg.spill = alloca [1 x i8], align 1
  %__self_discr.dbg.spill = alloca [1 x i8], align 1
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6890, !DIExpression(), !6896)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !6891, !DIExpression(), !6896)
  %__self_discr = load i8, ptr %self, align 1, !dbg !6896
  store i8 %__self_discr, ptr %__self_discr.dbg.spill, align 1, !dbg !6896
    #dbg_declare(ptr %__self_discr.dbg.spill, !6892, !DIExpression(), !6897)
  %__arg1_discr = load i8, ptr %other, align 1, !dbg !6897
  store i8 %__arg1_discr, ptr %__arg1_discr.dbg.spill, align 1, !dbg !6897
    #dbg_declare(ptr %__arg1_discr.dbg.spill, !6894, !DIExpression(), !6898)
  %_0 = icmp eq i8 %__self_discr, %__arg1_discr, !dbg !6898
  ret i1 %_0, !dbg !6899
}

; <miniz_oxide::inflate::core::State as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN74_$LT$miniz_oxide..inflate..core..State$u20$as$u20$core..cmp..PartialEq$GT$2eq17h171aee10e239d376E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 !dbg !6900 {
start:
  %__arg1_discr.dbg.spill = alloca [4 x i8], align 4
  %__self_discr.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6903, !DIExpression(), !6910)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !6904, !DIExpression(), !6910)
  %0 = load i8, ptr %self, align 1, !dbg !6910
  %__self_discr = zext i8 %0 to i32, !dbg !6910
  store i32 %__self_discr, ptr %__self_discr.dbg.spill, align 4, !dbg !6910
    #dbg_declare(ptr %__self_discr.dbg.spill, !6905, !DIExpression(), !6911)
  %1 = load i8, ptr %other, align 1, !dbg !6911
  %__arg1_discr = zext i8 %1 to i32, !dbg !6911
  store i32 %__arg1_discr, ptr %__arg1_discr.dbg.spill, align 4, !dbg !6911
    #dbg_declare(ptr %__arg1_discr.dbg.spill, !6908, !DIExpression(), !6912)
  %_0 = icmp eq i32 %__self_discr, %__arg1_discr, !dbg !6912
  ret i1 %_0, !dbg !6913
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nounwind
define dso_local align 2 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h13ac0713d620d1c3E"(i32 %self, ptr align 2 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !6914 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6919, !DIExpression(), !6921)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !6920, !DIExpression(), !6922)
  %_3 = icmp ult i32 %self, %slice.1, !dbg !6923
  br i1 %_3, label %bb1, label %bb2, !dbg !6923

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !6924
  br label %bb3, !dbg !6925

bb1:                                              ; preds = %start
  %_5 = getelementptr inbounds nuw i16, ptr %slice.0, i32 %self, !dbg !6926
  store ptr %_5, ptr %_0, align 4, !dbg !6927
  br label %bb3, !dbg !6925

bb3:                                              ; preds = %bb1, %bb2
  %1 = load ptr, ptr %_0, align 4, !dbg !6928
  ret ptr %1, !dbg !6928
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17he077b6ed7bbbf197E"(i32 %self, ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #0 !dbg !6929 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6933, !DIExpression(), !6935)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !6934, !DIExpression(), !6936)
  %_3 = icmp ult i32 %self, %slice.1, !dbg !6937
  br i1 %_3, label %bb1, label %bb2, !dbg !6937

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !6938
  br label %bb3, !dbg !6939

bb1:                                              ; preds = %start
  %_5 = getelementptr inbounds nuw i8, ptr %slice.0, i32 %self, !dbg !6940
  store ptr %_5, ptr %_0, align 4, !dbg !6941
  br label %bb3, !dbg !6939

bb3:                                              ; preds = %bb1, %bb2
  %1 = load ptr, ptr %_0, align 4, !dbg !6942
  ret ptr %1, !dbg !6942
}

; <[i16] as core::slice::specialize::SpecFill<i16>>::spec_fill
; Function Attrs: inlinehint nounwind
define internal void @"_ZN78_$LT$$u5b$i16$u5d$$u20$as$u20$core..slice..specialize..SpecFill$LT$i16$GT$$GT$9spec_fill17hddafaa17e17af481E"(ptr align 2 %self.0, i32 %self.1, i16 %value) unnamed_addr #0 !dbg !6943 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %item.dbg.spill = alloca [4 x i8], align 4
  %0 = alloca [2 x i8], align 2
  %1 = alloca [2 x i8], align 2
  %2 = alloca [1 x i8], align 1
  %value.dbg.spill = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [8 x i8], align 4
  %_21 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %_7 = alloca [2 x i8], align 1
  %bytes = alloca [2 x i8], align 1
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill, !6948, !DIExpression(), !6956)
  store i16 %value, ptr %value.dbg.spill, align 2
    #dbg_declare(ptr %value.dbg.spill, !6949, !DIExpression(), !6957)
    #dbg_declare(ptr %bytes, !6950, !DIExpression(), !6958)
    #dbg_declare(ptr %iter, !6952, !DIExpression(), !6959)
  %4 = call i1 @llvm.is.constant.i16(i16 %value), !dbg !6960
  %5 = zext i1 %4 to i8, !dbg !6960
  store i8 %5, ptr %2, align 1, !dbg !6960
  %6 = load i8, ptr %2, align 1, !dbg !6960
  %_3 = trunc nuw i8 %6 to i1, !dbg !6960
  br i1 %_3, label %bb2, label %bb9, !dbg !6960

bb9:                                              ; preds = %bb2, %start
; call core::slice::<impl [T]>::iter_mut
  %7 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h1cd9560b2848fd3bE"(ptr align 2 %self.0, i32 %self.1) #11, !dbg !6961
  %_19.0 = extractvalue { ptr, ptr } %7, 0, !dbg !6961
  %_19.1 = extractvalue { ptr, ptr } %7, 1, !dbg !6961
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b888a6049822196E"(ptr %_19.0, ptr %_19.1) #11, !dbg !6962
  %_18.0 = extractvalue { ptr, ptr } %8, 0, !dbg !6962
  %_18.1 = extractvalue { ptr, ptr } %8, 1, !dbg !6962
  store ptr %_18.0, ptr %iter, align 4, !dbg !6962
  %9 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !6962
  store ptr %_18.1, ptr %9, align 4, !dbg !6962
  br label %bb12, !dbg !6963

bb2:                                              ; preds = %start
; call core::num::<impl i16>::to_ne_bytes
  %10 = call i16 @"_ZN4core3num21_$LT$impl$u20$i16$GT$11to_ne_bytes17h6d4eaa791e22a22eE"(i16 %value) #11, !dbg !6964
  store i16 %10, ptr %1, align 2, !dbg !6964
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %bytes, ptr align 2 %1, i32 2, i1 false), !dbg !6964
  %11 = getelementptr inbounds nuw i8, ptr %bytes, i32 0, !dbg !6965
  %_8 = load i8, ptr %11, align 1, !dbg !6965
  call void @llvm.memset.p0.i32(ptr align 1 %_7, i8 %_8, i32 2, i1 false), !dbg !6966
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %0, ptr align 1 %_7, i32 2, i1 false), !dbg !6967
  %12 = load i16, ptr %0, align 2, !dbg !6967
; call core::num::<impl i16>::from_ne_bytes
  %_6 = call i16 @"_ZN4core3num21_$LT$impl$u20$i16$GT$13from_ne_bytes17hf31c1ce6309596eeE"(i16 %12) #11, !dbg !6967
  %_5 = icmp eq i16 %value, %_6, !dbg !6968
  br i1 %_5, label %bb6, label %bb9, !dbg !6968

bb6:                                              ; preds = %bb2
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %13 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %13, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !6969, !DIExpression(), !6974)
  %14 = getelementptr inbounds nuw i8, ptr %bytes, i32 0, !dbg !6976
  %_13 = load i8, ptr %14, align 1, !dbg !6976
  %15 = mul i32 2, %self.1, !dbg !6977
  call void @llvm.memset.p0.i32(ptr align 2 %self.0, i8 %_13, i32 %15, i1 false), !dbg !6977
  br label %bb16, !dbg !6977

bb12:                                             ; preds = %bb15, %bb9
; call <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
  %16 = call align 2 ptr @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4a9b2e9f32624cE"(ptr align 4 %iter) #11, !dbg !6959
  store ptr %16, ptr %_21, align 4, !dbg !6959
  %17 = load ptr, ptr %_21, align 4, !dbg !6959
  %18 = ptrtoint ptr %17 to i32, !dbg !6959
  %19 = icmp eq i32 %18, 0, !dbg !6959
  %_23 = select i1 %19, i32 0, i32 1, !dbg !6959
  %20 = trunc nuw i32 %_23 to i1, !dbg !6959
  br i1 %20, label %bb15, label %bb16, !dbg !6959

bb15:                                             ; preds = %bb12
  %item = load ptr, ptr %_21, align 4, !dbg !6978
  store ptr %item, ptr %item.dbg.spill, align 4, !dbg !6978
    #dbg_declare(ptr %item.dbg.spill, !6954, !DIExpression(), !6979)
  store i16 %value, ptr %item, align 2, !dbg !6980
  br label %bb12, !dbg !6963

bb16:                                             ; preds = %bb6, %bb12
  ret void, !dbg !6981

bb14:                                             ; No predecessors!
  unreachable, !dbg !6959
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h007cd6778ae68c18E"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #0 !dbg !6982 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6988, !DIExpression(), !6990)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !6989, !DIExpression(), !6991)
  %_4 = load ptr, ptr %self, align 4, !dbg !6992
  store ptr %_4, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !6131, !DIExpression(), !6993)
  %_6 = load ptr, ptr %other, align 4, !dbg !6995
  store ptr %_6, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !6131, !DIExpression(), !6996)
  %_0 = icmp eq ptr %_4, %_6, !dbg !6992
  ret i1 %_0, !dbg !6998
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nounwind
define dso_local align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hf83e2897f8d561edE"(ptr align 4 %self, i32 %idx) unnamed_addr #0 !dbg !6999 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %idx.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7006, !DIExpression(), !7008)
  store i32 %idx, ptr %idx.dbg.spill, align 4
    #dbg_declare(ptr %idx.dbg.spill, !7007, !DIExpression(), !7009)
  %_5 = load ptr, ptr %self, align 4, !dbg !7010
  store ptr %_5, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !5381, !DIExpression(), !7011)
  store ptr %_5, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !7013, !DIExpression(), !7019)
  store i32 %idx, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !7018, !DIExpression(), !7021)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E() #11, !dbg !7022
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb937fb75b4f16bb2E.exit", !dbg !7022

bb2.i:                                            ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hee37ac0066823501E"(ptr %_5, i32 %idx, i32 2, ptr align 4 @alloc_8407de24b9e131517d3488beb23d4c7f) #11, !dbg !7024
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb937fb75b4f16bb2E.exit", !dbg !7024

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb937fb75b4f16bb2E.exit": ; preds = %start, %bb2.i
  %_0.i = getelementptr inbounds nuw i16, ptr %_5, i32 %idx, !dbg !7025
  ret ptr %_0.i, !dbg !7026
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h369cd18bb8bc73a0E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #0 !dbg !7027 {
start:
  %end.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %exact = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7035, !DIExpression(), !7042)
    #dbg_declare(ptr %exact, !7036, !DIExpression(), !7043)
  br label %bb3, !dbg !7044

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7045
  %_6 = load ptr, ptr %0, align 4, !dbg !7045
  store ptr %_6, ptr %end.dbg.spill, align 4, !dbg !7046
    #dbg_declare(ptr %end.dbg.spill, !7040, !DIExpression(), !7047)
  %_7 = load ptr, ptr %self, align 4, !dbg !7048
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hf273321d1a9eecb7E"(ptr %_6, ptr %_7) #11, !dbg !7049
  store i32 %1, ptr %exact, align 4, !dbg !7049
  br label %bb4, !dbg !7049

bb4:                                              ; preds = %bb3
  %_8 = load i32, ptr %exact, align 4, !dbg !7050
  %_10 = load i32, ptr %exact, align 4, !dbg !7051
  store i32 %_8, ptr %_0, align 4, !dbg !7052
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7052
  store i32 1, ptr %2, align 4, !dbg !7052
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !7052
  store i32 %_10, ptr %3, align 4, !dbg !7052
  ret void, !dbg !7053

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local align 2 ptr @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4a9b2e9f32624cE"(ptr align 4 %self) unnamed_addr #0 !dbg !7054 {
start:
  %self.dbg.spill.i4 = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %end_or_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_14 = alloca [4 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  %ptr = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7071, !DIExpression(), !7078)
    #dbg_declare(ptr %ptr, !7072, !DIExpression(), !7079)
  %0 = load ptr, ptr %self, align 4, !dbg !7080
  store ptr %0, ptr %ptr, align 4, !dbg !7080
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7081
  %end_or_len = load ptr, ptr %1, align 4, !dbg !7081
  store ptr %end_or_len, ptr %end_or_len.dbg.spill, align 4, !dbg !7081
    #dbg_declare(ptr %end_or_len.dbg.spill, !7074, !DIExpression(), !7082)
  br label %bb7, !dbg !7083

bb7:                                              ; preds = %start
  store ptr %end_or_len, ptr %_10, align 4, !dbg !7084
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %_7 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h007cd6778ae68c18E"(ptr align 4 %ptr, ptr align 4 %_10) #11, !dbg !7085
  br i1 %_7, label %bb9, label %bb10, !dbg !7085

bb10:                                             ; preds = %bb7
  %2 = load ptr, ptr %ptr, align 4, !dbg !7086
  store ptr %2, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !7087, !DIExpression(), !7094)
  store i32 1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !7093, !DIExpression(), !7096)
  store ptr %2, ptr %self.dbg.spill.i4, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !6131, !DIExpression(), !7097)
  %_3.i = getelementptr inbounds nuw i16, ptr %2, i32 1, !dbg !7099
  store ptr %_3.i, ptr %self, align 4, !dbg !7100
  br label %bb12, !dbg !7101

bb9:                                              ; preds = %bb7
  store ptr null, ptr %_0, align 4, !dbg !7102
  br label %bb14, !dbg !7103

bb12:                                             ; preds = %bb10
  %3 = load ptr, ptr %ptr, align 4, !dbg !7105
  store ptr %3, ptr %_14, align 4, !dbg !7105
  store ptr %_14, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !7106, !DIExpression(), !7113)
  %_3.i2 = load ptr, ptr %_14, align 4, !dbg !7115
  store ptr %_3.i2, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !6131, !DIExpression(), !7116)
  store ptr %_3.i2, ptr %_0, align 4, !dbg !7118
  br label %bb14, !dbg !7119

bb14:                                             ; preds = %bb9, %bb12
  %4 = load ptr, ptr %_0, align 4, !dbg !7119
  ret ptr %4, !dbg !7119

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable
}

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb684f07608ac643eE"(ptr align 1 %slice.0, i32 %slice.1, ptr align 4 %0) unnamed_addr #0 !dbg !7120 {
start:
  %self.dbg.spill = alloca [0 x i8], align 1
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !7127, !DIExpression(), !7128)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %1, align 4
    #dbg_declare(ptr %slice.dbg.spill, !7126, !DIExpression(), !7129)
    #dbg_declare(ptr %self.dbg.spill, !7125, !DIExpression(), !7128)
  %2 = insertvalue { ptr, i32 } poison, ptr %slice.0, 0, !dbg !7130
  %3 = insertvalue { ptr, i32 } %2, i32 %slice.1, 1, !dbg !7130
  ret { ptr, i32 } %3, !dbg !7130
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nounwind
declare dso_local i32 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h4e5d54f78a8b03c3E(ptr align 4) unnamed_addr #1

; core::cmp::min
; Function Attrs: inlinehint nounwind
declare dso_local i32 @_ZN4core3cmp3min17hd89207ad1912f2d0E(i32, i32) unnamed_addr #0

; <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nounwind
declare dso_local align 4 ptr @"_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hc84ffe062fe7c832E"(ptr align 4, i32) unnamed_addr #0

; adler2::Adler32::write_slice
; Function Attrs: nounwind
declare dso_local void @_ZN6adler27Adler3211write_slice17he94a0ba82146b68dE(ptr align 2, ptr align 1, i32) unnamed_addr #1

; core::slice::<impl [T]>::first
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17ha6e757e66188c477E"(ptr align 1, i32) unnamed_addr #0

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h10a9bbe4ea233c0cE"(ptr align 1, i32, ptr align 1, i32, ptr align 4) unnamed_addr #0

; core::slice::<impl [T]>::fill
; Function Attrs: nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17h0db6b6d09411c5caE"(ptr align 1, i32, i8) unnamed_addr #1

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hd2f0d712f59e2a35E"(i8, ptr align 4) unnamed_addr #0

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1, i32) unnamed_addr #0

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4) unnamed_addr #0

; core::panicking::assert_failed
; Function Attrs: inlinehint noreturn nounwind
declare dso_local void @_ZN4core9panicking13assert_failed17h7b97e5ae31d89d41E(i8, ptr align 4, ptr align 4, ptr align 4, ptr align 4) unnamed_addr #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias writeonly captures(none), ptr noalias readonly captures(none), i32, i1 immarg) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr writeonly captures(none), i8, i32, i1 immarg) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #6

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h0dc5fdff266f268dE"(ptr align 1, i32) unnamed_addr #1

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4) unnamed_addr #0

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbadac3e2abbd3b18E"(ptr align 2, i32) unnamed_addr #0

; core::slice::<impl [T]>::iter_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17hc27b9f73608afd5aE"(ptr align 4, i32) unnamed_addr #0

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32, i32) unnamed_addr #0

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i16, i1 } @llvm.ssub.with.overflow.i16(i16, i16) #6

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind
declare dso_local { i1, i8 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hd6c9ee0b3ee3d632E"(ptr align 1) unnamed_addr #0

; core::cmp::Ord::min
; Function Attrs: inlinehint nounwind
declare dso_local i32 @_ZN4core3cmp3Ord3min17h2d69b5fda03716b4E(i32, i32) unnamed_addr #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.usub.sat.i8(i8, i8) #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.bitreverse.i16(i16) #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.usub.sat.i32(i32, i32) #6

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i32(ptr writeonly captures(none), ptr readonly captures(none), i32, i1 immarg) #5

; core::fmt::rt::<impl core::fmt::Arguments>::new_const
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4, ptr align 4) unnamed_addr #0

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned14runtime_ptr_ge17hc98e65b971afd35aE"(ptr, ptr) unnamed_addr #1

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17hc2ae076305a9deb2E(i32, i32, ptr align 4) unnamed_addr #8

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h6c3d7c12f3ee175fE(i32, i32, ptr align 4) unnamed_addr #8

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h26c13eef9ac779e8E(i32, i32, ptr align 4) unnamed_addr #8

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h13d72b053e4c8ae7E(i32, i32, ptr align 4) unnamed_addr #8

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32, ptr align 1, i32, ptr align 4) unnamed_addr #0

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h7d8d7a2c7075cea6E"(i32, ptr align 1, i32, ptr align 4) unnamed_addr #0

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32, i32, ptr align 1, i32, ptr align 4) unnamed_addr #0

; Function Attrs: cold noreturn nounwind memory(inaccessiblemem: write)
declare void @llvm.trap() #9

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h9d68787d1567a990E"(ptr, i32) unnamed_addr #0

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf56eacc16313c5f5E"(ptr) unnamed_addr #0

; Function Attrs: convergent nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.is.constant.i16(i16) #10

attributes #0 = { inlinehint nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #1 = { nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #2 = { cold nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #3 = { inlinehint noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #4 = { cold inlinehint noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #7 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #8 = { noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #9 = { cold noreturn nounwind memory(inaccessiblemem: write) }
attributes #10 = { convergent nocallback nofree nosync nounwind willreturn memory(none) }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.ident = !{!0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!81, !82}

!0 = !{!"rustc version 1.92.0-nightly (6380899f3 2025-10-18)"}
!1 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !2, producer: "clang LLVM (rustc version 1.92.0-nightly (6380899f3 2025-10-18))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, splitDebugInlining: false, nameTableKind: None)
!2 = !DIFile(filename: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs/@/miniz_oxide.7913174b45d8a707-cgu.0", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9")
!3 = !{!4, !15, !24, !35, !74}
!4 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MZFlush", scope: !6, file: !5, baseType: !7, size: 32, align: 32, flags: DIFlagEnumClass, elements: !8)
!5 = !DIFile(filename: "<unknown>", directory: "")
!6 = !DINamespace(name: "miniz_oxide", scope: null)
!7 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14}
!9 = !DIEnumerator(name: "None", value: 0)
!10 = !DIEnumerator(name: "Partial", value: 1)
!11 = !DIEnumerator(name: "Sync", value: 2)
!12 = !DIEnumerator(name: "Full", value: 3)
!13 = !DIEnumerator(name: "Finish", value: 4)
!14 = !DIEnumerator(name: "Block", value: 5)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MZError", scope: !6, file: !5, baseType: !7, size: 32, align: 32, flags: DIFlagEnumClass, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23}
!17 = !DIEnumerator(name: "ErrNo", value: -1)
!18 = !DIEnumerator(name: "Stream", value: -2)
!19 = !DIEnumerator(name: "Data", value: -3)
!20 = !DIEnumerator(name: "Mem", value: -4)
!21 = !DIEnumerator(name: "Buf", value: -5)
!22 = !DIEnumerator(name: "Version", value: -6)
!23 = !DIEnumerator(name: "Param", value: -10000)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "TINFLStatus", scope: !25, file: !5, baseType: !26, size: 8, align: 8, flags: DIFlagEnumClass, elements: !27)
!25 = !DINamespace(name: "inflate", scope: !6)
!26 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!27 = !{!28, !29, !30, !31, !32, !33, !34}
!28 = !DIEnumerator(name: "FailedCannotMakeProgress", value: -4)
!29 = !DIEnumerator(name: "BadParam", value: -3)
!30 = !DIEnumerator(name: "Adler32Mismatch", value: -2)
!31 = !DIEnumerator(name: "Failed", value: -1)
!32 = !DIEnumerator(name: "Done", value: 0)
!33 = !DIEnumerator(name: "NeedsMoreInput", value: 1)
!34 = !DIEnumerator(name: "HasMoreOutput", value: 2)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "State", scope: !36, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagEnumClass, elements: !38)
!36 = !DINamespace(name: "core", scope: !25)
!37 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73}
!39 = !DIEnumerator(name: "Start", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "ReadZlibCmf", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "ReadZlibFlg", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "ReadBlockHeader", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "BlockTypeNoCompression", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "RawHeader", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "RawMemcpy1", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "RawMemcpy2", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "ReadTableSizes", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "ReadHufflenTableCodeSize", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "ReadLitlenDistTablesCodeSize", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "ReadExtraBitsCodeSize", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "DecodeLitlen", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "WriteSymbol", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "ReadExtraBitsLitlen", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "DecodeDistance", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "ReadExtraBitsDistance", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "RawReadFirstByte", value: 17, isUnsigned: true)
!57 = !DIEnumerator(name: "RawStoreFirstByte", value: 18, isUnsigned: true)
!58 = !DIEnumerator(name: "WriteLenBytesToEnd", value: 19, isUnsigned: true)
!59 = !DIEnumerator(name: "BlockDone", value: 20, isUnsigned: true)
!60 = !DIEnumerator(name: "HuffDecodeOuterLoop1", value: 21, isUnsigned: true)
!61 = !DIEnumerator(name: "HuffDecodeOuterLoop2", value: 22, isUnsigned: true)
!62 = !DIEnumerator(name: "ReadAdler32", value: 23, isUnsigned: true)
!63 = !DIEnumerator(name: "DoneForever", value: 24, isUnsigned: true)
!64 = !DIEnumerator(name: "BlockTypeUnexpected", value: 25, isUnsigned: true)
!65 = !DIEnumerator(name: "BadCodeSizeSum", value: 26, isUnsigned: true)
!66 = !DIEnumerator(name: "BadDistOrLiteralTableLength", value: 27, isUnsigned: true)
!67 = !DIEnumerator(name: "BadTotalSymbols", value: 28, isUnsigned: true)
!68 = !DIEnumerator(name: "BadZlibHeader", value: 29, isUnsigned: true)
!69 = !DIEnumerator(name: "DistanceOutOfBounds", value: 30, isUnsigned: true)
!70 = !DIEnumerator(name: "BadRawLength", value: 31, isUnsigned: true)
!71 = !DIEnumerator(name: "BadCodeSizeDistPrevLookup", value: 32, isUnsigned: true)
!72 = !DIEnumerator(name: "InvalidLitlen", value: 33, isUnsigned: true)
!73 = !DIEnumerator(name: "InvalidDist", value: 34, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !75, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagEnumClass, elements: !77)
!75 = !DINamespace(name: "panicking", scope: !76)
!76 = !DINamespace(name: "core", scope: null)
!77 = !{!78, !79, !80}
!78 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!79 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!81 = !{i32 7, !"Dwarf Version", i32 4}
!82 = !{i32 2, !"Debug Info Version", i32 3}
!83 = distinct !DISubprogram(name: "next<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>>", linkageName: "_ZN100_$LT$core..iter..adapters..skip..Skip$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h99f11f3911703e15E", scope: !85, file: !84, line: 40, type: !89, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !164, retainedNodes: !166)
!84 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/skip.rs", directory: "", checksumkind: CSK_MD5, checksum: "7f14038741e345a97bd590ea1e558f0e")
!85 = !DINamespace(name: "{impl#1}", scope: !86)
!86 = !DINamespace(name: "skip", scope: !87)
!87 = !DINamespace(name: "adapters", scope: !88)
!88 = !DINamespace(name: "iter", scope: !76)
!89 = !DISubroutineType(types: !90)
!90 = !{!91, !114}
!91 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(&u16, &mut u32)>", scope: !92, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !93, templateParams: !98, identifier: "aed8c62795e842c3a5d0770bb7768919")
!92 = !DINamespace(name: "option", scope: !76)
!93 = !{!94}
!94 = !DICompositeType(tag: DW_TAG_variant_part, scope: !91, file: !5, size: 64, align: 32, elements: !95, templateParams: !98, identifier: "2159d027b51d2daea445bf3fa632f39c", discriminator: !113)
!95 = !{!96, !109}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !94, file: !5, baseType: !97, size: 64, align: 32, extraData: i32 0)
!97 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !91, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !99, identifier: "6d8f0154af57cfe31dcd7b78449a35d2")
!98 = !{}
!99 = !{!100}
!100 = !DITemplateTypeParameter(name: "T", type: !101)
!101 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&u16, &mut u32)", file: !5, size: 64, align: 32, elements: !102, templateParams: !98, identifier: "d02ffdca7728125a7fb2fd14a397e31c")
!102 = !{!103, !106}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !101, file: !5, baseType: !104, size: 32, align: 32)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u16", baseType: !105, size: 32, align: 32, dwarfAddressSpace: 0)
!105 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !101, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u32", baseType: !108, size: 32, align: 32, dwarfAddressSpace: 0)
!108 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !94, file: !5, baseType: !110, size: 64, align: 32)
!110 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !91, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !111, templateParams: !99, identifier: "8dbdcb515350ce87c7ac1eef48d696b5")
!111 = !{!112}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !110, file: !5, baseType: !101, size: 64, align: 32, flags: DIFlagPublic)
!113 = !DIDerivedType(tag: DW_TAG_member, scope: !91, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip::Skip<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>>", baseType: !115, size: 32, align: 32, dwarfAddressSpace: 0)
!115 = !DICompositeType(tag: DW_TAG_structure_type, name: "Skip<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>>", scope: !86, file: !5, size: 224, align: 32, flags: DIFlagPublic, elements: !116, templateParams: !164, identifier: "c578b679314c8a3d228112a7f0cab30f")
!116 = !{!117, !163}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !115, file: !5, baseType: !118, size: 192, align: 32, flags: DIFlagPrivate)
!118 = !DICompositeType(tag: DW_TAG_structure_type, name: "Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", scope: !119, file: !5, size: 192, align: 32, flags: DIFlagPublic, elements: !120, templateParams: !160, identifier: "119e9fb4e56e61a8378ea3fc7bfe015b")
!119 = !DINamespace(name: "zip", scope: !87)
!120 = !{!121, !141, !157, !159}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !118, file: !5, baseType: !122, size: 64, align: 32, flags: DIFlagPrivate)
!122 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u16>", scope: !123, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !125, templateParams: !133, identifier: "2a3d3c946425c23b918e712ef529b62d")
!123 = !DINamespace(name: "iter", scope: !124)
!124 = !DINamespace(name: "slice", scope: !76)
!125 = !{!126, !135, !136}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !122, file: !5, baseType: !127, size: 32, align: 32, flags: DIFlagPrivate)
!127 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u16>", scope: !128, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !130, templateParams: !133, identifier: "74706ff21a163d5b1876036a150af747")
!128 = !DINamespace(name: "non_null", scope: !129)
!129 = !DINamespace(name: "ptr", scope: !76)
!130 = !{!131}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !127, file: !5, baseType: !132, size: 32, align: 32, flags: DIFlagPrivate)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u16", baseType: !105, size: 32, align: 32, dwarfAddressSpace: 0)
!133 = !{!134}
!134 = !DITemplateTypeParameter(name: "T", type: !105)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !122, file: !5, baseType: !132, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !122, file: !5, baseType: !137, align: 8, offset: 64, flags: DIFlagPrivate)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u16>", scope: !138, file: !5, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !139, identifier: "b9cff2cfc2d8a22e1813a29b8ae29804")
!138 = !DINamespace(name: "marker", scope: !76)
!139 = !{!140}
!140 = !DITemplateTypeParameter(name: "T", type: !104)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !118, file: !5, baseType: !142, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!142 = !DICompositeType(tag: DW_TAG_structure_type, name: "IterMut<u32>", scope: !123, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !143, templateParams: !149, identifier: "68bc2efc30f0876ba172d0964bd146e9")
!143 = !{!144, !151, !153}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !142, file: !5, baseType: !145, size: 32, align: 32, flags: DIFlagPrivate)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u32>", scope: !128, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !146, templateParams: !149, identifier: "e1b1ee01f96627017b31f56937b10543")
!146 = !{!147}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !145, file: !5, baseType: !148, size: 32, align: 32, flags: DIFlagPrivate)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u32", baseType: !108, size: 32, align: 32, dwarfAddressSpace: 0)
!149 = !{!150}
!150 = !DITemplateTypeParameter(name: "T", type: !108)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !142, file: !5, baseType: !152, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u32", baseType: !108, size: 32, align: 32, dwarfAddressSpace: 0)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !142, file: !5, baseType: !154, align: 8, offset: 64, flags: DIFlagPrivate)
!154 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&mut u32>", scope: !138, file: !5, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !155, identifier: "8613977e9180b71f1b8d164d13a64f92")
!155 = !{!156}
!156 = !DITemplateTypeParameter(name: "T", type: !107)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !118, file: !5, baseType: !158, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!158 = !DIBasicType(name: "usize", size: 32, encoding: DW_ATE_unsigned)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !118, file: !5, baseType: !158, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!160 = !{!161, !162}
!161 = !DITemplateTypeParameter(name: "A", type: !122)
!162 = !DITemplateTypeParameter(name: "B", type: !142)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !115, file: !5, baseType: !158, size: 32, align: 32, offset: 192, flags: DIFlagPrivate)
!164 = !{!165}
!165 = !DITemplateTypeParameter(name: "I", type: !118)
!166 = !{!167}
!167 = !DILocalVariable(name: "self", arg: 1, scope: !83, file: !84, line: 40, type: !114)
!168 = !DILocation(line: 40, column: 13, scope: !83)
!169 = !DILocation(line: 41, column: 21, scope: !83)
!170 = !DILocalVariable(name: "b", arg: 1, scope: !171, file: !172, line: 456, type: !176)
!171 = distinct !DISubprogram(name: "unlikely", linkageName: "_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E", scope: !173, file: !172, line: 456, type: !174, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !177)
!172 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "5088527a679dbab229c7a43df7f388f7")
!173 = !DINamespace(name: "intrinsics", scope: !76)
!174 = !DISubroutineType(types: !175)
!175 = !{!176, !176}
!176 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!177 = !{!170}
!178 = !DILocation(line: 456, column: 23, scope: !171, inlinedAt: !179)
!179 = distinct !DILocation(line: 41, column: 12, scope: !83)
!180 = !DILocation(line: 457, column: 8, scope: !171, inlinedAt: !179)
!181 = !DILocation(line: 461, column: 9, scope: !171, inlinedAt: !179)
!182 = !DILocation(line: 457, column: 5, scope: !171, inlinedAt: !179)
!183 = !DILocation(line: 459, column: 9, scope: !171, inlinedAt: !179)
!184 = !DILocation(line: 463, column: 2, scope: !171, inlinedAt: !179)
!185 = !DILocation(line: 41, column: 12, scope: !83)
!186 = !DILocation(line: 44, column: 23, scope: !83)
!187 = !DILocation(line: 42, column: 44, scope: !83)
!188 = !DILocation(line: 42, column: 27, scope: !83)
!189 = !DILocation(line: 42, column: 23, scope: !83)
!190 = !DILocation(line: 46, column: 6, scope: !83)
!191 = distinct !DISubprogram(name: "start_bound<usize>", linkageName: "_ZN100_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h7d9ba89dc34726ccE", scope: !193, file: !192, line: 1089, type: !196, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !226, retainedNodes: !224)
!192 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "7a147c45a76a1a2965a82865e25902fd")
!193 = !DINamespace(name: "{impl#24}", scope: !194)
!194 = !DINamespace(name: "range", scope: !195)
!195 = !DINamespace(name: "ops", scope: !76)
!196 = !DISubroutineType(types: !197)
!197 = !{!198, !216}
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bound<&usize>", scope: !194, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !199, templateParams: !98, identifier: "b5fdb104be7fc866223a3e01a2e9901")
!199 = !{!200}
!200 = !DICompositeType(tag: DW_TAG_variant_part, scope: !198, file: !5, size: 64, align: 32, elements: !201, templateParams: !98, identifier: "33fe0d4e5a9d2a10eed8c8a34f306f4a", discriminator: !215)
!201 = !{!202, !209, !213}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "Included", scope: !200, file: !5, baseType: !203, size: 64, align: 32, extraData: i32 0)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "Included", scope: !198, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !204, templateParams: !207, identifier: "bc906d690d009a404bb57b08d996eb7")
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !203, file: !5, baseType: !206, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !158, size: 32, align: 32, dwarfAddressSpace: 0)
!207 = !{!208}
!208 = !DITemplateTypeParameter(name: "T", type: !206)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "Excluded", scope: !200, file: !5, baseType: !210, size: 64, align: 32, extraData: i32 1)
!210 = !DICompositeType(tag: DW_TAG_structure_type, name: "Excluded", scope: !198, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !211, templateParams: !207, identifier: "dfb982b00c639cba22bc9db37ed76be0")
!211 = !{!212}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !210, file: !5, baseType: !206, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "Unbounded", scope: !200, file: !5, baseType: !214, size: 64, align: 32, extraData: i32 2)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unbounded", scope: !198, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !207, identifier: "ca0d12b23306f8bd65669cdf03c6dccf")
!215 = !DIDerivedType(tag: DW_TAG_member, scope: !198, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ops::range::RangeInclusive<usize>", baseType: !217, size: 32, align: 32, dwarfAddressSpace: 0)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeInclusive<usize>", scope: !194, file: !5, size: 96, align: 32, flags: DIFlagPublic, elements: !218, templateParams: !222, identifier: "5b62870719694fc8589db31ec9dd6012")
!218 = !{!219, !220, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !217, file: !5, baseType: !158, size: 32, align: 32, flags: DIFlagProtected)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !217, file: !5, baseType: !158, size: 32, align: 32, offset: 32, flags: DIFlagProtected)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "exhausted", scope: !217, file: !5, baseType: !176, size: 8, align: 8, offset: 64, flags: DIFlagProtected)
!222 = !{!223}
!223 = !DITemplateTypeParameter(name: "Idx", type: !158)
!224 = !{!225}
!225 = !DILocalVariable(name: "self", arg: 1, scope: !191, file: !192, line: 1089, type: !216)
!226 = !{!227}
!227 = !DITemplateTypeParameter(name: "T", type: !158)
!228 = !DILocation(line: 1089, column: 20, scope: !191)
!229 = !DILocation(line: 1091, column: 6, scope: !191)
!230 = distinct !DISubprogram(name: "end_bound<usize>", linkageName: "_ZN100_$LT$core..ops..range..RangeInclusive$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17h9c6a358da176cad8E", scope: !193, file: !192, line: 1092, type: !196, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !226, retainedNodes: !231)
!231 = !{!232}
!232 = !DILocalVariable(name: "self", arg: 1, scope: !230, file: !192, line: 1092, type: !216)
!233 = !DILocation(line: 1092, column: 18, scope: !230)
!234 = !DILocation(line: 1093, column: 12, scope: !230)
!235 = !DILocation(line: 1098, column: 22, scope: !230)
!236 = !DILocation(line: 1098, column: 13, scope: !230)
!237 = !DILocation(line: 1093, column: 9, scope: !230)
!238 = !DILocation(line: 1096, column: 22, scope: !230)
!239 = !DILocation(line: 1096, column: 13, scope: !230)
!240 = !DILocation(line: 1100, column: 6, scope: !230)
!241 = distinct !DISubprogram(name: "nth<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3nth17he9e61567c6bf8220E", scope: !243, file: !242, line: 94, type: !244, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !160, retainedNodes: !247)
!242 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/zip.rs", directory: "", checksumkind: CSK_MD5, checksum: "3b799775cfe5a249b4485e2512707a77")
!243 = !DINamespace(name: "{impl#1}", scope: !119)
!244 = !DISubroutineType(types: !245)
!245 = !{!91, !246, !158}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", baseType: !118, size: 32, align: 32, dwarfAddressSpace: 0)
!247 = !{!248, !249}
!248 = !DILocalVariable(name: "self", arg: 1, scope: !241, file: !242, line: 94, type: !246)
!249 = !DILocalVariable(name: "n", arg: 2, scope: !241, file: !242, line: 94, type: !158)
!250 = !DILocation(line: 94, column: 12, scope: !241)
!251 = !DILocation(line: 94, column: 23, scope: !241)
!252 = !DILocation(line: 95, column: 9, scope: !241)
!253 = !DILocation(line: 96, column: 6, scope: !241)
!254 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h53cde08552ac4939E", scope: !243, file: !242, line: 84, type: !255, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !160, retainedNodes: !257)
!255 = !DISubroutineType(types: !256)
!256 = !{!91, !246}
!257 = !{!258}
!258 = !DILocalVariable(name: "self", arg: 1, scope: !254, file: !242, line: 84, type: !246)
!259 = !DILocation(line: 84, column: 13, scope: !254)
!260 = !DILocation(line: 85, column: 9, scope: !254)
!261 = !DILocation(line: 86, column: 6, scope: !254)
!262 = distinct !DISubprogram(name: "get<core::cell::Cell<u8>>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h6bc0e2afcbbf7e69E", scope: !264, file: !263, line: 361, type: !266, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !303, retainedNodes: !299)
!263 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "af6ecb4d2663035e0aa38579163ee106")
!264 = !DINamespace(name: "{impl#4}", scope: !265)
!265 = !DINamespace(name: "index", scope: !124)
!266 = !DISubroutineType(types: !267)
!267 = !{!268, !295, !276}
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::cell::Cell<u8>]>", scope: !92, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !269, templateParams: !98, identifier: "9405a45d970a72eea9ae759fcde6b224")
!269 = !{!270}
!270 = !DICompositeType(tag: DW_TAG_variant_part, scope: !268, file: !5, size: 64, align: 32, elements: !271, templateParams: !98, identifier: "74a001638c1f1ab22438fbcf4a1d9eb9", discriminator: !294)
!271 = !{!272, !290}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !270, file: !5, baseType: !273, size: 64, align: 32, extraData: i32 0)
!273 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !268, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !274, identifier: "c41042e55cb8a719f407735abad01269")
!274 = !{!275}
!275 = !DITemplateTypeParameter(name: "T", type: !276)
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::cell::Cell<u8>]", file: !5, size: 64, align: 32, elements: !277, templateParams: !98, identifier: "e1cebee29cb0ebc84ab68c5ad0aba918")
!277 = !{!278, !289}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !276, file: !5, baseType: !279, size: 32, align: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32, align: 32, dwarfAddressSpace: 0)
!280 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cell<u8>", scope: !281, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !282, templateParams: !287, identifier: "fe1d374293d4fd774df623ff180a9")
!281 = !DINamespace(name: "cell", scope: !76)
!282 = !{!283}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !280, file: !5, baseType: !284, size: 8, align: 8, flags: DIFlagPrivate)
!284 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<u8>", scope: !281, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !285, templateParams: !287, identifier: "7fbdf3765c7d982595b6e2f5da9ae737")
!285 = !{!286}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !284, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagPrivate)
!287 = !{!288}
!288 = !DITemplateTypeParameter(name: "T", type: !37)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !276, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !270, file: !5, baseType: !291, size: 64, align: 32)
!291 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !268, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !292, templateParams: !274, identifier: "b138a466a5e6beea90da3c4c4f369378")
!292 = !{!293}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !291, file: !5, baseType: !276, size: 64, align: 32, flags: DIFlagPublic)
!294 = !DIDerivedType(tag: DW_TAG_member, scope: !268, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!295 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !194, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !296, templateParams: !222, identifier: "163ec5cb5e1648a8f47c0fd85be167c6")
!296 = !{!297, !298}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !295, file: !5, baseType: !158, size: 32, align: 32, flags: DIFlagPublic)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !295, file: !5, baseType: !158, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!299 = !{!300, !301, !302}
!300 = !DILocalVariable(name: "self", arg: 1, scope: !262, file: !263, line: 361, type: !295)
!301 = !DILocalVariable(name: "slice", arg: 2, scope: !262, file: !263, line: 361, type: !276)
!302 = !DILocalVariable(name: "new_len", scope: !262, file: !263, line: 363, type: !158, align: 32)
!303 = !{!304}
!304 = !DITemplateTypeParameter(name: "T", type: !280)
!305 = !DILocation(line: 361, column: 12, scope: !262)
!306 = !DILocation(line: 361, column: 18, scope: !262)
!307 = !DILocation(line: 363, column: 32, scope: !262)
!308 = !DILocation(line: 363, column: 16, scope: !262)
!309 = !DILocation(line: 363, column: 21, scope: !262)
!310 = !DILocation(line: 364, column: 16, scope: !262)
!311 = !DILocation(line: 369, column: 13, scope: !262)
!312 = !DILocation(line: 363, column: 9, scope: !262)
!313 = !DILocalVariable(name: "ptr", arg: 1, scope: !314, file: !263, line: 82, type: !317)
!314 = distinct !DISubprogram(name: "get_offset_len_noubcheck<core::cell::Cell<u8>>", linkageName: "_ZN4core5slice5index24get_offset_len_noubcheck17h55319425aa6346c7E", scope: !265, file: !263, line: 81, type: !315, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !303, retainedNodes: !321)
!315 = !DISubroutineType(types: !316)
!316 = !{!317, !317, !158, !158}
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::cell::Cell<u8>]", file: !5, size: 64, align: 32, elements: !318, templateParams: !98, identifier: "3fecaadb8591ed9afd8760af31802225")
!318 = !{!319, !320}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !317, file: !5, baseType: !279, size: 32, align: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !317, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!321 = !{!313, !322, !323, !324, !327}
!322 = !DILocalVariable(name: "offset", arg: 2, scope: !314, file: !263, line: 83, type: !158)
!323 = !DILocalVariable(name: "len", arg: 3, scope: !314, file: !263, line: 84, type: !158)
!324 = !DILocalVariable(name: "ptr", scope: !325, file: !263, line: 86, type: !326, align: 32)
!325 = distinct !DILexicalBlock(scope: !314, file: !263, line: 86, column: 5)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const core::cell::Cell<u8>", baseType: !280, size: 32, align: 32, dwarfAddressSpace: 0)
!327 = !DILocalVariable(name: "ptr", scope: !328, file: !263, line: 88, type: !326, align: 32)
!328 = distinct !DILexicalBlock(scope: !325, file: !263, line: 88, column: 5)
!329 = !DILocation(line: 82, column: 5, scope: !314, inlinedAt: !330)
!330 = distinct !DILocation(line: 367, column: 29, scope: !262)
!331 = !DILocation(line: 83, column: 5, scope: !314, inlinedAt: !330)
!332 = !DILocation(line: 84, column: 5, scope: !314, inlinedAt: !330)
!333 = !DILocation(line: 86, column: 15, scope: !314, inlinedAt: !330)
!334 = !DILocation(line: 86, column: 9, scope: !325, inlinedAt: !330)
!335 = !DILocation(line: 88, column: 24, scope: !325, inlinedAt: !330)
!336 = !DILocation(line: 88, column: 9, scope: !328, inlinedAt: !330)
!337 = !DILocation(line: 90, column: 2, scope: !314, inlinedAt: !330)
!338 = !DILocation(line: 367, column: 29, scope: !262)
!339 = !DILocation(line: 367, column: 22, scope: !262)
!340 = !DILocation(line: 371, column: 6, scope: !262)
!341 = !DILocation(line: 361, column: 5, scope: !262)
!342 = distinct !DISubprogram(name: "index_mut<u32>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h20a51ce4b1cc36f3E", scope: !343, file: !263, line: 574, type: !344, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !149, retainedNodes: !378)
!343 = !DINamespace(name: "{impl#7}", scope: !265)
!344 = !DISubroutineType(types: !345)
!345 = !{!346, !351, !346, !354}
!346 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u32]", file: !5, size: 64, align: 32, elements: !347, templateParams: !98, identifier: "a0472006166d2ea01b967040b09ef870")
!347 = !{!348, !350}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !346, file: !5, baseType: !349, size: 32, align: 32)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32, align: 32, dwarfAddressSpace: 0)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !346, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!351 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !194, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !352, templateParams: !222, identifier: "61d74a89174d867df24adeb3c19e1a5e")
!352 = !{!353}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !351, file: !5, baseType: !158, size: 32, align: 32, flags: DIFlagPublic)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !355, size: 32, align: 32, dwarfAddressSpace: 0)
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !356, file: !5, size: 128, align: 32, flags: DIFlagPublic, elements: !358, templateParams: !98, identifier: "7c34cafe8ea1dcad4032b9360816105f")
!356 = !DINamespace(name: "location", scope: !357)
!357 = !DINamespace(name: "panic", scope: !76)
!358 = !{!359, !368, !369, !370}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !355, file: !5, baseType: !360, size: 64, align: 32, flags: DIFlagPrivate)
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<str>", scope: !128, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !361, templateParams: !287, identifier: "88212fc410c4399fd5095990cc8304ca")
!361 = !{!362}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !360, file: !5, baseType: !363, size: 64, align: 32, flags: DIFlagPrivate)
!363 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !5, size: 64, align: 32, elements: !364, templateParams: !98, identifier: "238a44609877474087c05adf26cd41fa")
!364 = !{!365, !367}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !363, file: !5, baseType: !366, size: 32, align: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32, align: 32, dwarfAddressSpace: 0)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !363, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !355, file: !5, baseType: !108, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !355, file: !5, baseType: !108, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "_filename", scope: !355, file: !5, baseType: !371, align: 8, offset: 128, flags: DIFlagPrivate)
!371 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&str>", scope: !138, file: !5, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !372, identifier: "4cfc3eea77dd95eabd59051b67bd7e66")
!372 = !{!373}
!373 = !DITemplateTypeParameter(name: "T", type: !374)
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !5, size: 64, align: 32, elements: !375, templateParams: !98, identifier: "9277eecd40495f85161460476aacc992")
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !374, file: !5, baseType: !366, size: 32, align: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !374, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!378 = !{!379, !380, !381}
!379 = !DILocalVariable(name: "self", arg: 1, scope: !342, file: !263, line: 574, type: !351)
!380 = !DILocalVariable(name: "slice", arg: 2, scope: !342, file: !263, line: 574, type: !346)
!381 = !DILocalVariable(name: "new_len", scope: !382, file: !263, line: 580, type: !158, align: 32)
!382 = distinct !DILexicalBlock(scope: !342, file: !263, line: 580, column: 13)
!383 = !DILocation(line: 574, column: 18, scope: !342)
!384 = !DILocation(line: 574, column: 24, scope: !342)
!385 = !DILocation(line: 575, column: 12, scope: !342)
!386 = !DILocation(line: 580, column: 27, scope: !342)
!387 = !DILocation(line: 580, column: 17, scope: !382)
!388 = !DILocalVariable(name: "ptr", arg: 1, scope: !389, file: !263, line: 94, type: !392)
!389 = distinct !DISubprogram(name: "get_offset_len_mut_noubcheck<u32>", linkageName: "_ZN4core5slice5index28get_offset_len_mut_noubcheck17hc1773f5fc5f8389dE", scope: !265, file: !263, line: 93, type: !390, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !149, retainedNodes: !396)
!390 = !DISubroutineType(types: !391)
!391 = !{!392, !392, !158, !158}
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u32]", file: !5, size: 64, align: 32, elements: !393, templateParams: !98, identifier: "2074ba719b26e1e4a695d60bcae6b6e9")
!393 = !{!394, !395}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !392, file: !5, baseType: !349, size: 32, align: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !392, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!396 = !{!388, !397, !398, !399, !401}
!397 = !DILocalVariable(name: "offset", arg: 2, scope: !389, file: !263, line: 95, type: !158)
!398 = !DILocalVariable(name: "len", arg: 3, scope: !389, file: !263, line: 96, type: !158)
!399 = !DILocalVariable(name: "ptr", scope: !400, file: !263, line: 98, type: !152, align: 32)
!400 = distinct !DILexicalBlock(scope: !389, file: !263, line: 98, column: 5)
!401 = !DILocalVariable(name: "ptr", scope: !402, file: !263, line: 100, type: !152, align: 32)
!402 = distinct !DILexicalBlock(scope: !400, file: !263, line: 100, column: 5)
!403 = !DILocation(line: 94, column: 5, scope: !389, inlinedAt: !404)
!404 = distinct !DILocation(line: 581, column: 19, scope: !382)
!405 = !DILocation(line: 95, column: 5, scope: !389, inlinedAt: !404)
!406 = !DILocation(line: 96, column: 5, scope: !389, inlinedAt: !404)
!407 = !DILocation(line: 98, column: 15, scope: !389, inlinedAt: !404)
!408 = !DILocation(line: 98, column: 9, scope: !400, inlinedAt: !404)
!409 = !DILocation(line: 100, column: 24, scope: !400, inlinedAt: !404)
!410 = !DILocation(line: 100, column: 9, scope: !402, inlinedAt: !404)
!411 = !DILocation(line: 102, column: 2, scope: !389, inlinedAt: !404)
!412 = !DILocation(line: 581, column: 19, scope: !382)
!413 = !DILocation(line: 583, column: 6, scope: !342)
!414 = !DILocation(line: 576, column: 13, scope: !342)
!415 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h0f63b83af19f0450E", scope: !416, file: !242, line: 299, type: !417, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !160, retainedNodes: !419)
!416 = !DINamespace(name: "{impl#5}", scope: !119)
!417 = !DISubroutineType(types: !418)
!418 = !{!118, !122, !142}
!419 = !{!420, !421, !422}
!420 = !DILocalVariable(name: "a", arg: 1, scope: !415, file: !242, line: 299, type: !122)
!421 = !DILocalVariable(name: "b", arg: 2, scope: !415, file: !242, line: 299, type: !142)
!422 = !DILocalVariable(name: "len", scope: !423, file: !242, line: 300, type: !158, align: 32)
!423 = distinct !DILexicalBlock(scope: !415, file: !242, line: 300, column: 9)
!424 = !DILocation(line: 299, column: 12, scope: !415)
!425 = !DILocation(line: 299, column: 18, scope: !415)
!426 = !DILocation(line: 300, column: 30, scope: !415)
!427 = !DILocation(line: 300, column: 40, scope: !415)
!428 = !DILocation(line: 300, column: 19, scope: !415)
!429 = !DILocation(line: 300, column: 13, scope: !423)
!430 = !DILocation(line: 301, column: 15, scope: !423)
!431 = !DILocation(line: 301, column: 18, scope: !423)
!432 = !DILocation(line: 301, column: 9, scope: !423)
!433 = !DILocation(line: 302, column: 6, scope: !415)
!434 = distinct !DISubprogram(name: "nth<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3nth17h3c754a0cc90e5638E", scope: !416, file: !242, line: 327, type: !244, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !160, retainedNodes: !435)
!435 = !{!436, !437, !438, !440, !442}
!436 = !DILocalVariable(name: "self", arg: 1, scope: !434, file: !242, line: 327, type: !246)
!437 = !DILocalVariable(name: "n", arg: 2, scope: !434, file: !242, line: 327, type: !158)
!438 = !DILocalVariable(name: "delta", scope: !439, file: !242, line: 328, type: !158, align: 32)
!439 = distinct !DILexicalBlock(scope: !434, file: !242, line: 328, column: 9)
!440 = !DILocalVariable(name: "end", scope: !441, file: !242, line: 329, type: !158, align: 32)
!441 = distinct !DILexicalBlock(scope: !439, file: !242, line: 329, column: 9)
!442 = !DILocalVariable(name: "i", scope: !443, file: !242, line: 331, type: !158, align: 32)
!443 = distinct !DILexicalBlock(scope: !441, file: !242, line: 331, column: 13)
!444 = !DILocation(line: 327, column: 12, scope: !434)
!445 = !DILocation(line: 327, column: 23, scope: !434)
!446 = !DILocation(line: 328, column: 33, scope: !434)
!447 = !DILocation(line: 328, column: 44, scope: !434)
!448 = !DILocation(line: 328, column: 21, scope: !434)
!449 = !DILocation(line: 328, column: 13, scope: !439)
!450 = !DILocation(line: 329, column: 19, scope: !439)
!451 = !DILocation(line: 329, column: 13, scope: !441)
!452 = !DILocation(line: 330, column: 9, scope: !441)
!453 = !DILocation(line: 330, column: 15, scope: !441)
!454 = !DILocation(line: 351, column: 24, scope: !441)
!455 = !DILocation(line: 331, column: 21, scope: !441)
!456 = !DILocation(line: 331, column: 17, scope: !443)
!457 = !DILocation(line: 334, column: 13, scope: !443)
!458 = !DILocation(line: 351, column: 14, scope: !441)
!459 = !DILocation(line: 352, column: 6, scope: !434)
!460 = !DILocation(line: 335, column: 16, scope: !443)
!461 = !DILocation(line: 343, column: 16, scope: !443)
!462 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17hafd8f3112898d1c3E", scope: !416, file: !242, line: 305, type: !255, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !160, retainedNodes: !463)
!463 = !{!464, !465}
!464 = !DILocalVariable(name: "self", arg: 1, scope: !462, file: !242, line: 305, type: !246)
!465 = !DILocalVariable(name: "i", scope: !466, file: !242, line: 307, type: !158, align: 32)
!466 = distinct !DILexicalBlock(scope: !462, file: !242, line: 307, column: 13)
!467 = !DILocation(line: 305, column: 13, scope: !462)
!468 = !DILocation(line: 306, column: 12, scope: !462)
!469 = !DILocation(line: 306, column: 25, scope: !462)
!470 = !DILocation(line: 316, column: 13, scope: !462)
!471 = !DILocation(line: 306, column: 9, scope: !462)
!472 = !DILocation(line: 307, column: 21, scope: !462)
!473 = !DILocation(line: 307, column: 17, scope: !466)
!474 = !DILocation(line: 310, column: 13, scope: !466)
!475 = !DILocation(line: 318, column: 6, scope: !462)
!476 = !DILocation(line: 313, column: 30, scope: !466)
!477 = !DILocation(line: 313, column: 59, scope: !466)
!478 = !DILocation(line: 313, column: 66, scope: !466)
!479 = !DILocation(line: 313, column: 17, scope: !466)
!480 = distinct !DISubprogram(name: "update_adler32", linkageName: "_ZN11miniz_oxide6shared14update_adler3217h6668bde8619c7d4aE", scope: !482, file: !481, line: 13, type: !483, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !489)
!481 = !DIFile(filename: "src/shared.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9", checksumkind: CSK_MD5, checksum: "f61efde18a22cc9989d0f737693d8075")
!482 = !DINamespace(name: "shared", scope: !6)
!483 = !DISubroutineType(types: !484)
!484 = !{!108, !108, !485}
!485 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !5, size: 64, align: 32, elements: !486, templateParams: !98, identifier: "31681e0c10b314f1f33e38b2779acbb4")
!486 = !{!487, !488}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !485, file: !5, baseType: !366, size: 32, align: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !485, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!489 = !{!490, !491, !492}
!490 = !DILocalVariable(name: "adler", arg: 1, scope: !480, file: !481, line: 13, type: !108)
!491 = !DILocalVariable(name: "data", arg: 2, scope: !480, file: !481, line: 13, type: !485)
!492 = !DILocalVariable(name: "hash", scope: !493, file: !481, line: 14, type: !494, align: 16)
!493 = distinct !DILexicalBlock(scope: !480, file: !481, line: 14, column: 5)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "Adler32", scope: !495, file: !5, size: 32, align: 16, flags: DIFlagPublic, elements: !496, templateParams: !98, identifier: "46837ff781fc7d963a1cfbfde15b62c1")
!495 = !DINamespace(name: "adler2", scope: null)
!496 = !{!497, !498}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !494, file: !5, baseType: !105, size: 16, align: 16, flags: DIFlagPrivate)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !494, file: !5, baseType: !105, size: 16, align: 16, offset: 16, flags: DIFlagPrivate)
!499 = !DILocation(line: 13, column: 23, scope: !480)
!500 = !DILocation(line: 13, column: 35, scope: !480)
!501 = !DILocation(line: 14, column: 9, scope: !493)
!502 = !DILocation(line: 14, column: 20, scope: !480)
!503 = !DILocation(line: 15, column: 10, scope: !493)
!504 = !DILocation(line: 16, column: 10, scope: !493)
!505 = !DILocation(line: 17, column: 2, scope: !480)
!506 = distinct !DISubprogram(name: "new", linkageName: "_ZN11miniz_oxide7MZFlush3new17h9ed99828ac9c9861E", scope: !4, file: !507, line: 72, type: !508, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !527, retainedNodes: !528)
!507 = !DIFile(filename: "src/lib.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9", checksumkind: CSK_MD5, checksum: "894deab2391d79abb4e88131fdd03e69")
!508 = !DISubroutineType(types: !509)
!509 = !{!510, !7}
!510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<miniz_oxide::MZFlush, miniz_oxide::MZError>", scope: !511, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !512, templateParams: !98, identifier: "68c7251164daadb1e02abb18cf0b4f72")
!511 = !DINamespace(name: "result", scope: !76)
!512 = !{!513}
!513 = !DICompositeType(tag: DW_TAG_variant_part, scope: !510, file: !5, size: 64, align: 32, elements: !514, templateParams: !98, identifier: "490a841ff030c6814a486b8f6ca9ec67", discriminator: !526)
!514 = !{!515, !522}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !513, file: !5, baseType: !516, size: 64, align: 32, extraData: i32 0)
!516 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !510, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !517, templateParams: !519, identifier: "470b82538d1f89a31aaf6b421590a26d")
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !516, file: !5, baseType: !4, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!519 = !{!520, !521}
!520 = !DITemplateTypeParameter(name: "T", type: !4)
!521 = !DITemplateTypeParameter(name: "E", type: !15)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !513, file: !5, baseType: !523, size: 64, align: 32, extraData: i32 1)
!523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !510, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !524, templateParams: !519, identifier: "2cc9c5f2e7fd342ff73756b002cf8b3b")
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !523, file: !5, baseType: !15, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!527 = !DISubprogram(name: "new", linkageName: "_ZN11miniz_oxide7MZFlush3new17h9ed99828ac9c9861E", scope: !4, file: !507, line: 72, type: !508, scopeLine: 72, flags: DIFlagPrototyped, spFlags: 0, templateParams: !98)
!528 = !{!529}
!529 = !DILocalVariable(name: "flush", arg: 1, scope: !506, file: !507, line: 72, type: !7)
!530 = !DILocation(line: 72, column: 16, scope: !506)
!531 = !DILocation(line: 73, column: 9, scope: !506)
!532 = !DILocation(line: 78, column: 18, scope: !506)
!533 = !DILocation(line: 78, column: 36, scope: !506)
!534 = !DILocation(line: 74, column: 18, scope: !506)
!535 = !DILocation(line: 74, column: 34, scope: !506)
!536 = !DILocation(line: 75, column: 22, scope: !506)
!537 = !DILocation(line: 75, column: 38, scope: !506)
!538 = !DILocation(line: 76, column: 18, scope: !506)
!539 = !DILocation(line: 76, column: 34, scope: !506)
!540 = !DILocation(line: 77, column: 18, scope: !506)
!541 = !DILocation(line: 77, column: 36, scope: !506)
!542 = !DILocation(line: 80, column: 6, scope: !506)
!543 = distinct !DISubprogram(name: "from_i32", linkageName: "_ZN11miniz_oxide7inflate11TINFLStatus8from_i3217h684347e588ee034fE", scope: !24, file: !544, line: 82, type: !545, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !560, retainedNodes: !561)
!544 = !DIFile(filename: "src/inflate/mod.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9", checksumkind: CSK_MD5, checksum: "2a0a37d3beadcf4b9f95009168be952b")
!545 = !DISubroutineType(types: !546)
!546 = !{!547, !7}
!547 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<miniz_oxide::inflate::TINFLStatus>", scope: !92, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !548, templateParams: !98, identifier: "b2d1bb71f583bee365ea080bad57c953")
!548 = !{!549}
!549 = !DICompositeType(tag: DW_TAG_variant_part, scope: !547, file: !5, size: 8, align: 8, elements: !550, templateParams: !98, identifier: "a15457e8adbfe96ce4f92324352012ec", discriminator: !559)
!550 = !{!551, !555}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !549, file: !5, baseType: !552, size: 8, align: 8, extraData: i8 3)
!552 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !547, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !553, identifier: "512e16ad6a6823ed5b8fa0681f0a313d")
!553 = !{!554}
!554 = !DITemplateTypeParameter(name: "T", type: !24)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !549, file: !5, baseType: !556, size: 8, align: 8)
!556 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !547, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !557, templateParams: !553, identifier: "eb4739ec0b4208c364e3e05ca51db090")
!557 = !{!558}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !556, file: !5, baseType: !24, size: 8, align: 8, flags: DIFlagPublic)
!559 = !DIDerivedType(tag: DW_TAG_member, scope: !547, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagArtificial)
!560 = !DISubprogram(name: "from_i32", linkageName: "_ZN11miniz_oxide7inflate11TINFLStatus8from_i3217h684347e588ee034fE", scope: !24, file: !544, line: 82, type: !545, scopeLine: 82, flags: DIFlagPrototyped, spFlags: 0, templateParams: !98)
!561 = !{!562}
!562 = !DILocalVariable(name: "value", arg: 1, scope: !543, file: !544, line: 82, type: !7)
!563 = !DILocation(line: 82, column: 21, scope: !543)
!564 = !DILocation(line: 84, column: 9, scope: !543)
!565 = !DILocation(line: 94, column: 18, scope: !543)
!566 = !DILocation(line: 85, column: 57, scope: !543)
!567 = !DILocation(line: 85, column: 86, scope: !543)
!568 = !DILocation(line: 86, column: 39, scope: !543)
!569 = !DILocation(line: 86, column: 52, scope: !543)
!570 = !DILocation(line: 87, column: 46, scope: !543)
!571 = !DILocation(line: 87, column: 66, scope: !543)
!572 = !DILocation(line: 88, column: 36, scope: !543)
!573 = !DILocation(line: 88, column: 47, scope: !543)
!574 = !DILocation(line: 89, column: 34, scope: !543)
!575 = !DILocation(line: 89, column: 43, scope: !543)
!576 = !DILocation(line: 90, column: 46, scope: !543)
!577 = !DILocation(line: 90, column: 65, scope: !543)
!578 = !DILocation(line: 91, column: 45, scope: !543)
!579 = !DILocation(line: 91, column: 63, scope: !543)
!580 = !DILocation(line: 96, column: 6, scope: !543)
!581 = distinct !DISubprogram(name: "read_byte", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE", scope: !583, file: !582, line: 89, type: !587, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !601, retainedNodes: !602)
!582 = !DIFile(filename: "src/inflate/output_buffer.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9", checksumkind: CSK_MD5, checksum: "585e61c7bc6213f67a79d1eae2f1c770")
!583 = !DICompositeType(tag: DW_TAG_structure_type, name: "InputWrapper", scope: !584, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !585, templateParams: !98, identifier: "82ced5c3f57a0689c456d93b75b417f")
!584 = !DINamespace(name: "output_buffer", scope: !25)
!585 = !{!586}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "slice", scope: !583, file: !5, baseType: !485, size: 64, align: 32, flags: DIFlagPrivate)
!587 = !DISubroutineType(types: !588)
!588 = !{!589, !600}
!589 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !92, file: !5, size: 16, align: 8, flags: DIFlagPublic, elements: !590, templateParams: !98, identifier: "774a7bc235a763e0d0602fde53630227")
!590 = !{!591}
!591 = !DICompositeType(tag: DW_TAG_variant_part, scope: !589, file: !5, size: 16, align: 8, elements: !592, templateParams: !98, identifier: "d47ebcdec53ff1e1fc7d394cf5e1672d", discriminator: !599)
!592 = !{!593, !595}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !591, file: !5, baseType: !594, size: 16, align: 8, extraData: i8 0)
!594 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !589, file: !5, size: 16, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !287, identifier: "84a45d26f79ed4caa31bc5af2c53fbf4")
!595 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !591, file: !5, baseType: !596, size: 16, align: 8, extraData: i8 1)
!596 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !589, file: !5, size: 16, align: 8, flags: DIFlagPublic, elements: !597, templateParams: !287, identifier: "9d7bb1b003ae84b64da48c86aa454b4")
!597 = !{!598}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !596, file: !5, baseType: !37, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagArtificial)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut miniz_oxide::inflate::output_buffer::InputWrapper", baseType: !583, size: 32, align: 32, dwarfAddressSpace: 0)
!601 = !DISubprogram(name: "read_byte", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte17h0377e7ab1821234fE", scope: !583, file: !582, line: 89, type: !587, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!602 = !{!603}
!603 = !DILocalVariable(name: "self", arg: 1, scope: !581, file: !582, line: 89, type: !600)
!604 = !DILocation(line: 89, column: 22, scope: !581)
!605 = !DILocation(line: 90, column: 9, scope: !581)
!606 = !DILocation(line: 90, column: 20, scope: !581)
!607 = !DILocation(line: 90, column: 28, scope: !581)
!608 = !DILocation(line: 94, column: 6, scope: !581)
!609 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper9read_byte28_$u7b$$u7b$closure$u7d$$u7d$17h1ca3d217ad9b632aE", scope: !610, file: !582, line: 90, type: !612, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !618)
!610 = !DINamespace(name: "read_byte", scope: !611)
!611 = !DINamespace(name: "{impl#1}", scope: !584)
!612 = !DISubroutineType(types: !613)
!613 = !{!37, !614, !617}
!614 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !610, file: !5, size: 32, align: 32, elements: !615, templateParams: !98, identifier: "9344fdfba776cef5164d868fd8c67d23")
!615 = !{!616}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self", scope: !614, file: !5, baseType: !600, size: 32, align: 32)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !37, size: 32, align: 32, dwarfAddressSpace: 0)
!618 = !{!619, !620}
!619 = !DILocalVariable(name: "n", arg: 2, scope: !609, file: !582, line: 90, type: !617)
!620 = !DILocalVariable(name: "self", scope: !609, file: !582, line: 89, type: !583, align: 32)
!621 = !DILocation(line: 89, column: 27, scope: !609)
!622 = !DILocation(line: 90, column: 33, scope: !609)
!623 = !DILocalVariable(name: "self", arg: 1, scope: !624, file: !582, line: 84, type: !600)
!624 = distinct !DISubprogram(name: "advance", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper7advance17h320972a407d79eb8E", scope: !583, file: !582, line: 84, type: !625, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !627, retainedNodes: !628)
!625 = !DISubroutineType(types: !626)
!626 = !{null, !600, !158}
!627 = !DISubprogram(name: "advance", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper7advance17h320972a407d79eb8E", scope: !583, file: !582, line: 84, type: !625, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!628 = !{!623, !629}
!629 = !DILocalVariable(name: "steps", arg: 2, scope: !624, file: !582, line: 84, type: !158)
!630 = !DILocation(line: 84, column: 20, scope: !624, inlinedAt: !631)
!631 = distinct !DILocation(line: 91, column: 18, scope: !609)
!632 = !DILocation(line: 84, column: 31, scope: !624, inlinedAt: !631)
!633 = !DILocation(line: 85, column: 23, scope: !624, inlinedAt: !631)
!634 = !DILocalVariable(name: "self", arg: 1, scope: !635, file: !263, line: 17, type: !485)
!635 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h7ef3efed14a7a1c5E", scope: !636, file: !263, line: 17, type: !637, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !641, retainedNodes: !639)
!636 = !DINamespace(name: "{impl#0}", scope: !265)
!637 = !DISubroutineType(types: !638)
!638 = !{!485, !485, !351, !354}
!639 = !{!634, !640}
!640 = !DILocalVariable(name: "index", arg: 2, scope: !635, file: !263, line: 17, type: !351)
!641 = !{!288, !642}
!642 = !DITemplateTypeParameter(name: "I", type: !351)
!643 = !DILocation(line: 17, column: 14, scope: !635, inlinedAt: !644)
!644 = distinct !DILocation(line: 85, column: 33, scope: !624, inlinedAt: !631)
!645 = !DILocation(line: 17, column: 21, scope: !635, inlinedAt: !644)
!646 = !DILocation(line: 18, column: 15, scope: !635, inlinedAt: !644)
!647 = !DILocation(line: 85, column: 33, scope: !624, inlinedAt: !631)
!648 = !DILocation(line: 85, column: 9, scope: !624, inlinedAt: !631)
!649 = !DILocation(line: 92, column: 13, scope: !609)
!650 = !DILocation(line: 93, column: 10, scope: !609)
!651 = distinct !DISubprogram(name: "bytes_left", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E", scope: !652, file: !582, line: 47, type: !660, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !663, retainedNodes: !664)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "OutputBuffer", scope: !584, file: !5, size: 96, align: 32, flags: DIFlagPublic, elements: !653, templateParams: !98, identifier: "7164bcb35f65d3656760976cee20e36c")
!653 = !{!654, !659}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "slice", scope: !652, file: !5, baseType: !655, size: 64, align: 32, flags: DIFlagPrivate)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !5, size: 64, align: 32, elements: !656, templateParams: !98, identifier: "bdfeb4840e2373d8742974745efe30b6")
!656 = !{!657, !658}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !655, file: !5, baseType: !366, size: 32, align: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !655, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !652, file: !5, baseType: !158, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!660 = !DISubroutineType(types: !661)
!661 = !{!158, !662}
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&miniz_oxide::inflate::output_buffer::OutputBuffer", baseType: !652, size: 32, align: 32, dwarfAddressSpace: 0)
!663 = !DISubprogram(name: "bytes_left", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10bytes_left17h846b88ec52df76d0E", scope: !652, file: !582, line: 47, type: !660, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!664 = !{!665}
!665 = !DILocalVariable(name: "self", arg: 1, scope: !651, file: !582, line: 47, type: !662)
!666 = !DILocation(line: 47, column: 29, scope: !651)
!667 = !DILocation(line: 48, column: 9, scope: !651)
!668 = !DILocation(line: 48, column: 28, scope: !651)
!669 = !DILocation(line: 49, column: 6, scope: !651)
!670 = distinct !DISubprogram(name: "write_byte", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E", scope: !652, file: !582, line: 31, type: !671, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !674, retainedNodes: !675)
!671 = !DISubroutineType(types: !672)
!672 = !{null, !673, !37}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut miniz_oxide::inflate::output_buffer::OutputBuffer", baseType: !652, size: 32, align: 32, dwarfAddressSpace: 0)
!674 = !DISubprogram(name: "write_byte", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer10write_byte17hd03d530c461b3a30E", scope: !652, file: !582, line: 31, type: !671, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!675 = !{!676, !677}
!676 = !DILocalVariable(name: "self", arg: 1, scope: !670, file: !582, line: 31, type: !673)
!677 = !DILocalVariable(name: "byte", arg: 2, scope: !670, file: !582, line: 31, type: !37)
!678 = !DILocation(line: 31, column: 23, scope: !670)
!679 = !DILocation(line: 31, column: 34, scope: !670)
!680 = !DILocation(line: 32, column: 20, scope: !670)
!681 = !DILocation(line: 32, column: 9, scope: !670)
!682 = !DILocation(line: 33, column: 9, scope: !670)
!683 = !DILocation(line: 34, column: 6, scope: !670)
!684 = distinct !DISubprogram(name: "write_slice", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer11write_slice17haa1dbbd03040dff4E", scope: !652, file: !582, line: 40, type: !685, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !687, retainedNodes: !688)
!685 = !DISubroutineType(types: !686)
!686 = !{null, !673, !485}
!687 = !DISubprogram(name: "write_slice", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer11write_slice17haa1dbbd03040dff4E", scope: !652, file: !582, line: 40, type: !685, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!688 = !{!689, !690, !691}
!689 = !DILocalVariable(name: "self", arg: 1, scope: !684, file: !582, line: 40, type: !673)
!690 = !DILocalVariable(name: "data", arg: 2, scope: !684, file: !582, line: 40, type: !485)
!691 = !DILocalVariable(name: "len", scope: !692, file: !582, line: 41, type: !158, align: 32)
!692 = distinct !DILexicalBlock(scope: !684, file: !582, line: 41, column: 9)
!693 = !DILocation(line: 40, column: 24, scope: !684)
!694 = !DILocation(line: 40, column: 35, scope: !684)
!695 = !DILocation(line: 41, column: 19, scope: !684)
!696 = !DILocation(line: 41, column: 13, scope: !692)
!697 = !DILocation(line: 42, column: 9, scope: !692)
!698 = !DILocation(line: 42, column: 20, scope: !692)
!699 = !DILocation(line: 42, column: 35, scope: !692)
!700 = !DILocalVariable(name: "self", arg: 1, scope: !701, file: !263, line: 29, type: !655)
!701 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17hce654561117346f3E", scope: !702, file: !263, line: 29, type: !703, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !707, retainedNodes: !705)
!702 = !DINamespace(name: "{impl#1}", scope: !265)
!703 = !DISubroutineType(types: !704)
!704 = !{!655, !655, !295, !354}
!705 = !{!700, !706}
!706 = !DILocalVariable(name: "index", arg: 2, scope: !701, file: !263, line: 29, type: !295)
!707 = !{!288, !708}
!708 = !DITemplateTypeParameter(name: "I", type: !295)
!709 = !DILocation(line: 29, column: 18, scope: !701, inlinedAt: !710)
!710 = distinct !DILocation(line: 42, column: 19, scope: !692)
!711 = !DILocation(line: 29, column: 29, scope: !701, inlinedAt: !710)
!712 = !DILocation(line: 30, column: 15, scope: !701, inlinedAt: !710)
!713 = !DILocation(line: 42, column: 19, scope: !692)
!714 = !DILocation(line: 42, column: 56, scope: !692)
!715 = !DILocation(line: 43, column: 9, scope: !692)
!716 = !DILocation(line: 44, column: 6, scope: !684)
!717 = distinct !DISubprogram(name: "from_slice_and_pos", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer18from_slice_and_pos17hbd5ae6e2f26ce0abE", scope: !652, file: !582, line: 13, type: !718, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !720, retainedNodes: !721)
!718 = !DISubroutineType(types: !719)
!719 = !{!652, !655, !158}
!720 = !DISubprogram(name: "from_slice_and_pos", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer18from_slice_and_pos17hbd5ae6e2f26ce0abE", scope: !652, file: !582, line: 13, type: !718, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!721 = !{!722, !723}
!722 = !DILocalVariable(name: "slice", arg: 1, scope: !717, file: !582, line: 13, type: !655)
!723 = !DILocalVariable(name: "position", arg: 2, scope: !717, file: !582, line: 13, type: !158)
!724 = !DILocation(line: 13, column: 31, scope: !717)
!725 = !DILocation(line: 13, column: 52, scope: !717)
!726 = !DILocation(line: 14, column: 9, scope: !717)
!727 = !DILocation(line: 15, column: 6, scope: !717)
!728 = distinct !DISubprogram(name: "decompress", linkageName: "_ZN11miniz_oxide7inflate4core10decompress17h5728ab399a716cb3E", scope: !36, file: !729, line: 1358, type: !730, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !789)
!729 = !DIFile(filename: "src/inflate/core.rs", directory: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9", checksumkind: CSK_MD5, checksum: "16675d3fc7bd05238d0c74f164609fe9")
!730 = !DISubroutineType(types: !731)
!731 = !{!732, !737, !485, !655, !158, !108}
!732 = !DICompositeType(tag: DW_TAG_structure_type, name: "(miniz_oxide::inflate::TINFLStatus, usize, usize)", file: !5, size: 96, align: 32, elements: !733, templateParams: !98, identifier: "b96570347c7b34de40334f1d7a82faf")
!733 = !{!734, !735, !736}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !732, file: !5, baseType: !24, size: 8, align: 8, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !732, file: !5, baseType: !158, size: 32, align: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !732, file: !5, baseType: !158, size: 32, align: 32, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut miniz_oxide::inflate::core::DecompressorOxide", baseType: !738, size: 32, align: 32, dwarfAddressSpace: 0)
!738 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecompressorOxide", scope: !36, file: !5, size: 84000, align: 32, flags: DIFlagPublic, elements: !739, templateParams: !98, identifier: "4b1bc68ddc2621557b1fd0d0e71d4dae")
!739 = !{!740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !755, !756, !769, !773, !777, !781, !785}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !738, file: !5, baseType: !35, size: 8, align: 8, offset: 83968, flags: DIFlagPrivate)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "num_bits", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83456, flags: DIFlagPrivate)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "z_header0", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83488, flags: DIFlagPrivate)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "z_header1", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83520, flags: DIFlagPrivate)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "z_adler32", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83552, flags: DIFlagPrivate)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !738, file: !5, baseType: !37, size: 8, align: 8, offset: 83792, flags: DIFlagPrivate)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "block_type", scope: !738, file: !5, baseType: !37, size: 8, align: 8, offset: 83800, flags: DIFlagPrivate)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "check_adler32", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83584, flags: DIFlagPrivate)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83616, flags: DIFlagPrivate)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83648, flags: DIFlagPrivate)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "num_extra", scope: !738, file: !5, baseType: !37, size: 8, align: 8, offset: 83808, flags: DIFlagPrivate)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "table_sizes", scope: !738, file: !5, baseType: !752, size: 48, align: 16, offset: 83744, flags: DIFlagPrivate)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 48, align: 16, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 3, lowerBound: 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !738, file: !5, baseType: !108, size: 32, align: 32, offset: 83680, flags: DIFlagPrivate)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "tables", scope: !738, file: !5, baseType: !757, size: 76800, align: 16, offset: 4096, flags: DIFlagPrivate)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 76800, align: 16, elements: !753)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "HuffmanTable", scope: !36, file: !5, size: 25600, align: 16, flags: DIFlagPrivate, elements: !759, templateParams: !98, identifier: "ae72897abfc615a171c7cbfaddbd4bd")
!759 = !{!760, !765}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "look_up", scope: !758, file: !5, baseType: !761, size: 16384, align: 16, flags: DIFlagPublic)
!761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 16384, align: 16, elements: !763)
!762 = !DIBasicType(name: "i16", size: 16, encoding: DW_ATE_signed)
!763 = !{!764}
!764 = !DISubrange(count: 1024, lowerBound: 0)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !758, file: !5, baseType: !766, size: 9216, align: 16, offset: 16384, flags: DIFlagPublic)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 9216, align: 16, elements: !767)
!767 = !{!768}
!768 = !DISubrange(count: 576, lowerBound: 0)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "code_size_literal", scope: !738, file: !5, baseType: !770, size: 2304, align: 8, offset: 80896, flags: DIFlagPrivate)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 2304, align: 8, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 288, lowerBound: 0)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "code_size_dist", scope: !738, file: !5, baseType: !774, size: 256, align: 8, offset: 83200, flags: DIFlagPrivate)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 256, align: 8, elements: !775)
!775 = !{!776}
!776 = !DISubrange(count: 32, lowerBound: 0)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "code_size_huffman", scope: !738, file: !5, baseType: !778, size: 152, align: 8, offset: 83816, flags: DIFlagPrivate)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 152, align: 8, elements: !779)
!779 = !{!780}
!780 = !DISubrange(count: 19, lowerBound: 0)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "raw_header", scope: !738, file: !5, baseType: !782, size: 32, align: 8, offset: 83712, flags: DIFlagPrivate)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 32, align: 8, elements: !783)
!783 = !{!784}
!784 = !DISubrange(count: 4, lowerBound: 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "len_codes", scope: !738, file: !5, baseType: !786, size: 4096, align: 8, flags: DIFlagPrivate)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 4096, align: 8, elements: !787)
!787 = !{!788}
!788 = !DISubrange(count: 512, lowerBound: 0)
!789 = !{!790, !791, !792, !793, !794, !795, !797, !799, !801, !803, !812, !814, !816, !818, !820, !822, !824, !826, !828, !830, !832, !834, !836, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !858, !860, !862, !864, !866, !868, !870, !872, !874, !876, !878, !880, !882, !884, !886, !888, !890, !892, !894, !896, !897, !899, !900, !902, !903, !905, !907, !909, !911, !913, !915, !917, !919, !921, !923, !925, !927, !929, !931, !933, !935, !937, !939, !941, !943, !945, !947, !949, !951, !953, !955, !957, !962, !963, !966, !968, !970, !972, !974, !976, !978}
!790 = !DILocalVariable(name: "r", arg: 1, scope: !728, file: !729, line: 1359, type: !737)
!791 = !DILocalVariable(name: "in_buf", arg: 2, scope: !728, file: !729, line: 1360, type: !485)
!792 = !DILocalVariable(name: "out", arg: 3, scope: !728, file: !729, line: 1361, type: !655)
!793 = !DILocalVariable(name: "out_pos", arg: 4, scope: !728, file: !729, line: 1362, type: !158)
!794 = !DILocalVariable(name: "flags", arg: 5, scope: !728, file: !729, line: 1363, type: !108)
!795 = !DILocalVariable(name: "out_buf_size_mask", scope: !796, file: !729, line: 1365, type: !158, align: 32)
!796 = distinct !DILexicalBlock(scope: !728, file: !729, line: 1365, column: 5)
!797 = !DILocalVariable(name: "in_iter", scope: !798, file: !729, line: 1382, type: !583, align: 32)
!798 = distinct !DILexicalBlock(scope: !796, file: !729, line: 1382, column: 5)
!799 = !DILocalVariable(name: "state", scope: !800, file: !729, line: 1384, type: !35, align: 8)
!800 = distinct !DILexicalBlock(scope: !798, file: !729, line: 1384, column: 5)
!801 = !DILocalVariable(name: "out_buf", scope: !802, file: !729, line: 1386, type: !652, align: 32)
!802 = distinct !DILexicalBlock(scope: !800, file: !729, line: 1386, column: 5)
!803 = !DILocalVariable(name: "l", scope: !804, file: !729, line: 1389, type: !805, align: 32)
!804 = distinct !DILexicalBlock(scope: !802, file: !729, line: 1389, column: 5)
!805 = !DICompositeType(tag: DW_TAG_structure_type, name: "LocalVars", scope: !36, file: !5, size: 160, align: 32, flags: DIFlagPrivate, elements: !806, templateParams: !98, identifier: "9e08b4365cf390df23bc9c295b0f4b05")
!806 = !{!807, !808, !809, !810, !811}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !805, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagPublic)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "num_bits", scope: !805, file: !5, baseType: !108, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !805, file: !5, baseType: !108, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !805, file: !5, baseType: !108, size: 32, align: 32, offset: 96, flags: DIFlagPublic)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "num_extra", scope: !805, file: !5, baseType: !37, size: 8, align: 8, offset: 128, flags: DIFlagPublic)
!812 = !DILocalVariable(name: "status", scope: !813, file: !729, line: 1397, type: !24, align: 8)
!813 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1397, column: 5)
!814 = !DILocalVariable(name: "new_state", scope: !815, file: !729, line: 1012, type: !35, align: 8)
!815 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!816 = !DILocalVariable(name: "result", scope: !817, file: !729, line: 1016, type: !24, align: 8)
!817 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!818 = !DILocalVariable(name: "new_state", scope: !819, file: !729, line: 1012, type: !35, align: 8)
!819 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!820 = !DILocalVariable(name: "result", scope: !821, file: !729, line: 1016, type: !24, align: 8)
!821 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!822 = !DILocalVariable(name: "new_state", scope: !823, file: !729, line: 1012, type: !35, align: 8)
!823 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!824 = !DILocalVariable(name: "result", scope: !825, file: !729, line: 1016, type: !24, align: 8)
!825 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!826 = !DILocalVariable(name: "new_state", scope: !827, file: !729, line: 1012, type: !35, align: 8)
!827 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!828 = !DILocalVariable(name: "result", scope: !829, file: !729, line: 1016, type: !24, align: 8)
!829 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!830 = !DILocalVariable(name: "new_state", scope: !831, file: !729, line: 1012, type: !35, align: 8)
!831 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!832 = !DILocalVariable(name: "result", scope: !833, file: !729, line: 1016, type: !24, align: 8)
!833 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!834 = !DILocalVariable(name: "length", scope: !835, file: !729, line: 1480, type: !105, align: 16)
!835 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1480, column: 21)
!836 = !DILocalVariable(name: "check", scope: !837, file: !729, line: 1481, type: !105, align: 16)
!837 = distinct !DILexicalBlock(scope: !835, file: !729, line: 1481, column: 21)
!838 = !DILocalVariable(name: "valid", scope: !839, file: !729, line: 1482, type: !176, align: 8)
!839 = distinct !DILexicalBlock(scope: !837, file: !729, line: 1482, column: 21)
!840 = !DILocalVariable(name: "new_state", scope: !841, file: !729, line: 1012, type: !35, align: 8)
!841 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!842 = !DILocalVariable(name: "result", scope: !843, file: !729, line: 1016, type: !24, align: 8)
!843 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!844 = !DILocalVariable(name: "new_state", scope: !845, file: !729, line: 1012, type: !35, align: 8)
!845 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!846 = !DILocalVariable(name: "result", scope: !847, file: !729, line: 1016, type: !24, align: 8)
!847 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!848 = !DILocalVariable(name: "new_state", scope: !849, file: !729, line: 1012, type: !35, align: 8)
!849 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!850 = !DILocalVariable(name: "result", scope: !851, file: !729, line: 1016, type: !24, align: 8)
!851 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!852 = !DILocalVariable(name: "new_state", scope: !853, file: !729, line: 1012, type: !35, align: 8)
!853 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!854 = !DILocalVariable(name: "result", scope: !855, file: !729, line: 1016, type: !24, align: 8)
!855 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!856 = !DILocalVariable(name: "space_left", scope: !857, file: !729, line: 1543, type: !158, align: 32)
!857 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1543, column: 21)
!858 = !DILocalVariable(name: "bytes_to_copy", scope: !859, file: !729, line: 1544, type: !158, align: 32)
!859 = distinct !DILexicalBlock(scope: !857, file: !729, line: 1544, column: 21)
!860 = !DILocalVariable(name: "new_state", scope: !861, file: !729, line: 1012, type: !35, align: 8)
!861 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!862 = !DILocalVariable(name: "result", scope: !863, file: !729, line: 1016, type: !24, align: 8)
!863 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!864 = !DILocalVariable(name: "num_bits", scope: !865, file: !729, line: 1563, type: !108, align: 32)
!865 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1563, column: 21)
!866 = !DILocalVariable(name: "new_state", scope: !867, file: !729, line: 1012, type: !35, align: 8)
!867 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!868 = !DILocalVariable(name: "result", scope: !869, file: !729, line: 1016, type: !24, align: 8)
!869 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!870 = !DILocalVariable(name: "new_state", scope: !871, file: !729, line: 1012, type: !35, align: 8)
!871 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!872 = !DILocalVariable(name: "result", scope: !873, file: !729, line: 1016, type: !24, align: 8)
!873 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!874 = !DILocalVariable(name: "dist_table_start", scope: !875, file: !729, line: 1633, type: !158, align: 32)
!875 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1633, column: 21)
!876 = !DILocalVariable(name: "dist_table_end", scope: !877, file: !729, line: 1635, type: !158, align: 32)
!877 = distinct !DILexicalBlock(scope: !875, file: !729, line: 1635, column: 21)
!878 = !DILocalVariable(name: "code_size_dist_end", scope: !879, file: !729, line: 1637, type: !158, align: 32)
!879 = distinct !DILexicalBlock(scope: !877, file: !729, line: 1637, column: 21)
!880 = !DILocalVariable(name: "dist_table_start", scope: !881, file: !729, line: 1640, type: !158, align: 32)
!881 = distinct !DILexicalBlock(scope: !879, file: !729, line: 1640, column: 21)
!882 = !DILocalVariable(name: "dist_table_end", scope: !883, file: !729, line: 1641, type: !158, align: 32)
!883 = distinct !DILexicalBlock(scope: !881, file: !729, line: 1641, column: 21)
!884 = !DILocalVariable(name: "new_state", scope: !885, file: !729, line: 1012, type: !35, align: 8)
!885 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!886 = !DILocalVariable(name: "result", scope: !887, file: !729, line: 1016, type: !24, align: 8)
!887 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!888 = !DILocalVariable(name: "num_extra", scope: !889, file: !729, line: 1651, type: !108, align: 32)
!889 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1651, column: 17)
!890 = !DILocalVariable(name: "new_state", scope: !891, file: !729, line: 1012, type: !35, align: 8)
!891 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!892 = !DILocalVariable(name: "result", scope: !893, file: !729, line: 1016, type: !24, align: 8)
!893 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!894 = !DILocalVariable(name: "status", scope: !895, file: !729, line: 1697, type: !24, align: 8)
!895 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1697, column: 21)
!896 = !DILocalVariable(name: "new_state", scope: !895, file: !729, line: 1697, type: !35, align: 8)
!897 = !DILocalVariable(name: "symbol", scope: !898, file: !729, line: 1715, type: !7, align: 32)
!898 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1715, column: 21)
!899 = !DILocalVariable(name: "code_len", scope: !898, file: !729, line: 1715, type: !108, align: 32)
!900 = !DILocalVariable(name: "symbol", scope: !901, file: !729, line: 1731, type: !7, align: 32)
!901 = distinct !DILexicalBlock(scope: !898, file: !729, line: 1731, column: 25)
!902 = !DILocalVariable(name: "code_len", scope: !901, file: !729, line: 1731, type: !108, align: 32)
!903 = !DILocalVariable(name: "new_state", scope: !904, file: !729, line: 1012, type: !35, align: 8)
!904 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!905 = !DILocalVariable(name: "result", scope: !906, file: !729, line: 1016, type: !24, align: 8)
!906 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!907 = !DILocalVariable(name: "new_state", scope: !908, file: !729, line: 1012, type: !35, align: 8)
!908 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!909 = !DILocalVariable(name: "result", scope: !910, file: !729, line: 1016, type: !24, align: 8)
!910 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!911 = !DILocalVariable(name: "new_state", scope: !912, file: !729, line: 1012, type: !35, align: 8)
!912 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!913 = !DILocalVariable(name: "result", scope: !914, file: !729, line: 1016, type: !24, align: 8)
!914 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!915 = !DILocalVariable(name: "num_extra", scope: !916, file: !729, line: 1795, type: !108, align: 32)
!916 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1795, column: 17)
!917 = !DILocalVariable(name: "new_state", scope: !918, file: !729, line: 1012, type: !35, align: 8)
!918 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!919 = !DILocalVariable(name: "result", scope: !920, file: !729, line: 1016, type: !24, align: 8)
!920 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!921 = !DILocalVariable(name: "new_state", scope: !922, file: !729, line: 1012, type: !35, align: 8)
!922 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!923 = !DILocalVariable(name: "result", scope: !924, file: !729, line: 1016, type: !24, align: 8)
!924 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!925 = !DILocalVariable(name: "num_extra", scope: !926, file: !729, line: 1829, type: !108, align: 32)
!926 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1829, column: 17)
!927 = !DILocalVariable(name: "new_state", scope: !928, file: !729, line: 1012, type: !35, align: 8)
!928 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!929 = !DILocalVariable(name: "result", scope: !930, file: !729, line: 1016, type: !24, align: 8)
!930 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!931 = !DILocalVariable(name: "out_pos", scope: !932, file: !729, line: 1844, type: !158, align: 32)
!932 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1844, column: 21)
!933 = !DILocalVariable(name: "source_pos", scope: !934, file: !729, line: 1845, type: !158, align: 32)
!934 = distinct !DILexicalBlock(scope: !932, file: !729, line: 1845, column: 21)
!935 = !DILocalVariable(name: "out_len", scope: !936, file: !729, line: 1848, type: !158, align: 32)
!936 = distinct !DILexicalBlock(scope: !934, file: !729, line: 1848, column: 21)
!937 = !DILocalVariable(name: "match_end_pos", scope: !938, file: !729, line: 1849, type: !158, align: 32)
!938 = distinct !DILexicalBlock(scope: !936, file: !729, line: 1849, column: 21)
!939 = !DILocalVariable(name: "new_state", scope: !940, file: !729, line: 1012, type: !35, align: 8)
!940 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!941 = !DILocalVariable(name: "result", scope: !942, file: !729, line: 1016, type: !24, align: 8)
!942 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!943 = !DILocalVariable(name: "out_pos", scope: !944, file: !729, line: 1879, type: !158, align: 32)
!944 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1879, column: 21)
!945 = !DILocalVariable(name: "source_pos", scope: !946, file: !729, line: 1880, type: !158, align: 32)
!946 = distinct !DILexicalBlock(scope: !944, file: !729, line: 1880, column: 21)
!947 = !DILocalVariable(name: "len", scope: !948, file: !729, line: 1884, type: !158, align: 32)
!948 = distinct !DILexicalBlock(scope: !946, file: !729, line: 1884, column: 21)
!949 = !DILocalVariable(name: "new_state", scope: !950, file: !729, line: 1012, type: !35, align: 8)
!950 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!951 = !DILocalVariable(name: "result", scope: !952, file: !729, line: 1016, type: !24, align: 8)
!952 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!953 = !DILocalVariable(name: "in_consumed", scope: !954, file: !729, line: 1905, type: !158, align: 32)
!954 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1905, column: 21)
!955 = !DILocalVariable(name: "undo", scope: !956, file: !729, line: 1906, type: !158, align: 32)
!956 = distinct !DILexicalBlock(scope: !954, file: !729, line: 1906, column: 21)
!957 = !DILocalVariable(name: "left_val", scope: !958, file: !729, line: 1910, type: !961, align: 32)
!958 = !DILexicalBlockFile(scope: !959, file: !729, discriminator: 0)
!959 = distinct !DILexicalBlock(scope: !956, file: !960, line: 45, column: 13)
!960 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ec901dc314d42500d18c9938d02d4ad0")
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u32", baseType: !108, size: 32, align: 32, dwarfAddressSpace: 0)
!962 = !DILocalVariable(name: "right_val", scope: !958, file: !729, line: 1910, type: !961, align: 32)
!963 = !DILocalVariable(name: "kind", scope: !964, file: !729, line: 1910, type: !74, align: 8)
!964 = !DILexicalBlockFile(scope: !965, file: !729, discriminator: 0)
!965 = distinct !DILexicalBlock(scope: !959, file: !960, line: 47, column: 21)
!966 = !DILocalVariable(name: "new_state", scope: !967, file: !729, line: 1012, type: !35, align: 8)
!967 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!968 = !DILocalVariable(name: "result", scope: !969, file: !729, line: 1016, type: !24, align: 8)
!969 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!970 = !DILocalVariable(name: "new_state", scope: !971, file: !729, line: 1012, type: !35, align: 8)
!971 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1012, column: 17)
!972 = !DILocalVariable(name: "result", scope: !973, file: !729, line: 1016, type: !24, align: 8)
!973 = distinct !DILexicalBlock(scope: !804, file: !729, line: 1016, column: 17)
!974 = !DILocalVariable(name: "in_undo", scope: !975, file: !729, line: 1966, type: !158, align: 32)
!975 = distinct !DILexicalBlock(scope: !813, file: !729, line: 1966, column: 5)
!976 = !DILocalVariable(name: "need_adler", scope: !977, file: !729, line: 2001, type: !176, align: 8)
!977 = distinct !DILexicalBlock(scope: !975, file: !729, line: 2001, column: 5)
!978 = !DILocalVariable(name: "out_buf_pos", scope: !979, file: !729, line: 2008, type: !158, align: 32)
!979 = distinct !DILexicalBlock(scope: !977, file: !729, line: 2008, column: 9)
!980 = !DILocation(line: 1359, column: 5, scope: !728)
!981 = !DILocation(line: 1360, column: 5, scope: !728)
!982 = !DILocation(line: 1361, column: 5, scope: !728)
!983 = !DILocation(line: 1362, column: 5, scope: !728)
!984 = !DILocation(line: 1363, column: 5, scope: !728)
!985 = !DILocation(line: 1365, column: 9, scope: !796)
!986 = !DILocation(line: 1382, column: 9, scope: !798)
!987 = !DILocation(line: 1384, column: 9, scope: !800)
!988 = !DILocation(line: 1386, column: 9, scope: !802)
!989 = !DILocation(line: 1389, column: 9, scope: !804)
!990 = !DILocation(line: 1397, column: 9, scope: !813)
!991 = !DILocation(line: 1697, column: 26, scope: !895)
!992 = !DILocation(line: 1966, column: 9, scope: !975)
!993 = !DILocation(line: 2001, column: 9, scope: !977)
!994 = !DILocation(line: 1365, column: 32, scope: !728)
!995 = !DILocalVariable(name: "self", arg: 1, scope: !996, file: !997, line: 2191, type: !158)
!996 = distinct !DISubprogram(name: "saturating_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14saturating_sub17h2d08798150a08418E", scope: !998, file: !997, line: 2191, type: !1000, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1002)
!997 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "5be88be11ad076a5d1229d10f045d3e0")
!998 = !DINamespace(name: "{impl#11}", scope: !999)
!999 = !DINamespace(name: "num", scope: !76)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!158, !158, !158}
!1002 = !{!995, !1003}
!1003 = !DILocalVariable(name: "rhs", arg: 2, scope: !996, file: !997, line: 2191, type: !158)
!1004 = !DILocation(line: 2191, column: 37, scope: !996, inlinedAt: !1005)
!1005 = distinct !DILocation(line: 1371, column: 19, scope: !728)
!1006 = !DILocation(line: 2191, column: 43, scope: !996, inlinedAt: !1005)
!1007 = !DILocation(line: 2192, column: 13, scope: !996, inlinedAt: !1005)
!1008 = !DILocation(line: 1371, column: 19, scope: !728)
!1009 = !DILocation(line: 1366, column: 9, scope: !728)
!1010 = !DILocation(line: 1365, column: 29, scope: !728)
!1011 = !DILocation(line: 1378, column: 9, scope: !796)
!1012 = !DILocalVariable(name: "self", arg: 1, scope: !1013, file: !997, line: 2302, type: !158)
!1013 = distinct !DISubprogram(name: "wrapping_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_add17hbe427153f7d9beb6E", scope: !998, file: !997, line: 2302, type: !1000, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1014)
!1014 = !{!1012, !1015}
!1015 = !DILocalVariable(name: "rhs", arg: 2, scope: !1013, file: !997, line: 2302, type: !158)
!1016 = !DILocation(line: 2302, column: 35, scope: !1013, inlinedAt: !1017)
!1017 = distinct !DILocation(line: 1378, column: 27, scope: !796)
!1018 = !DILocation(line: 2302, column: 41, scope: !1013, inlinedAt: !1017)
!1019 = !DILocation(line: 2303, column: 13, scope: !1013, inlinedAt: !1017)
!1020 = !DILocation(line: 1378, column: 45, scope: !796)
!1021 = !DILocation(line: 1378, column: 8, scope: !796)
!1022 = !DILocation(line: 1378, column: 72, scope: !796)
!1023 = !DILocation(line: 1379, column: 16, scope: !796)
!1024 = !DILocation(line: 2029, column: 2, scope: !728)
!1025 = !DILocalVariable(name: "slice", arg: 1, scope: !1026, file: !582, line: 79, type: !485)
!1026 = distinct !DISubprogram(name: "from_slice", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper10from_slice17h53cc25d70825cf92E", scope: !583, file: !582, line: 79, type: !1027, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !1029, retainedNodes: !1030)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!583, !485}
!1029 = !DISubprogram(name: "from_slice", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper10from_slice17h53cc25d70825cf92E", scope: !583, file: !582, line: 79, type: !1027, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!1030 = !{!1025}
!1031 = !DILocation(line: 79, column: 29, scope: !1026, inlinedAt: !1032)
!1032 = distinct !DILocation(line: 1382, column: 23, scope: !796)
!1033 = !DILocation(line: 81, column: 6, scope: !1026, inlinedAt: !1032)
!1034 = !DILocation(line: 1382, column: 23, scope: !796)
!1035 = !DILocation(line: 1384, column: 21, scope: !798)
!1036 = !DILocation(line: 1386, column: 23, scope: !800)
!1037 = !DILocation(line: 1390, column: 18, scope: !802)
!1038 = !DILocation(line: 1391, column: 19, scope: !802)
!1039 = !DILocation(line: 1392, column: 15, scope: !802)
!1040 = !DILocation(line: 1393, column: 18, scope: !802)
!1041 = !DILocation(line: 1394, column: 20, scope: !802)
!1042 = !DILocation(line: 1389, column: 17, scope: !802)
!1043 = !DILocation(line: 1397, column: 22, scope: !804)
!1044 = !DILocation(line: 1398, column: 15, scope: !804)
!1045 = !DILocation(line: 1398, column: 9, scope: !804)
!1046 = !DILocation(line: 1962, column: 24, scope: !804)
!1047 = !DILocation(line: 1962, column: 18, scope: !804)
!1048 = !DILocation(line: 1400, column: 17, scope: !804)
!1049 = !DILocation(line: 1401, column: 17, scope: !804)
!1050 = !DILocation(line: 1402, column: 17, scope: !804)
!1051 = !DILocation(line: 1403, column: 17, scope: !804)
!1052 = !DILocation(line: 1404, column: 17, scope: !804)
!1053 = !DILocation(line: 1405, column: 17, scope: !804)
!1054 = !DILocation(line: 1406, column: 17, scope: !804)
!1055 = !DILocation(line: 1407, column: 17, scope: !804)
!1056 = !DILocation(line: 1408, column: 17, scope: !804)
!1057 = !DILocation(line: 1409, column: 20, scope: !804)
!1058 = !DILocation(line: 1417, column: 48, scope: !804)
!1059 = !DILocation(line: 1417, column: 17, scope: !804)
!1060 = !DILocation(line: 1416, column: 67, scope: !804)
!1061 = !DILocation(line: 1010, column: 13, scope: !804)
!1062 = !DILocation(line: 1424, column: 48, scope: !804)
!1063 = !DILocation(line: 1424, column: 17, scope: !804)
!1064 = !DILocation(line: 1423, column: 67, scope: !804)
!1065 = !DILocation(line: 1432, column: 17, scope: !804)
!1066 = !DILocation(line: 1431, column: 71, scope: !804)
!1067 = !DILocation(line: 1453, column: 17, scope: !804)
!1068 = !DILocation(line: 1452, column: 78, scope: !804)
!1069 = !DILocation(line: 1461, column: 20, scope: !804)
!1070 = !DILocation(line: 1529, column: 20, scope: !804)
!1071 = !DILocalVariable(name: "self", arg: 1, scope: !1072, file: !582, line: 108, type: !1075)
!1072 = distinct !DISubprogram(name: "bytes_left", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper10bytes_left17h535d89e1935ad677E", scope: !583, file: !582, line: 108, type: !1073, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !1076, retainedNodes: !1077)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!158, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&miniz_oxide::inflate::output_buffer::InputWrapper", baseType: !583, size: 32, align: 32, dwarfAddressSpace: 0)
!1076 = !DISubprogram(name: "bytes_left", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper10bytes_left17h535d89e1935ad677E", scope: !583, file: !582, line: 108, type: !1073, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!1077 = !{!1071}
!1078 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !1079)
!1079 = distinct !DILocation(line: 1539, column: 28, scope: !804)
!1080 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !1079)
!1081 = !DILocation(line: 1539, column: 20, scope: !804)
!1082 = !DILocation(line: 1562, column: 20, scope: !804)
!1083 = !DILocation(line: 1591, column: 20, scope: !804)
!1084 = !DILocation(line: 1591, column: 32, scope: !804)
!1085 = !DILocation(line: 1591, column: 61, scope: !804)
!1086 = !DILocation(line: 1608, column: 20, scope: !804)
!1087 = !DILocation(line: 1608, column: 42, scope: !804)
!1088 = !DILocalVariable(name: "small", arg: 1, scope: !1089, file: !1090, line: 78, type: !105)
!1089 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num64_$LT$impl$u20$core..convert..From$LT$u16$GT$$u20$for$u20$u32$GT$4from17h76fd9ffe30b7bc73E", scope: !1091, file: !1090, line: 78, type: !1094, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1096)
!1090 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "87ae55fcbe39b68ccbdcd352f6dbfc81")
!1091 = !DINamespace(name: "{impl#69}", scope: !1092)
!1092 = !DINamespace(name: "num", scope: !1093)
!1093 = !DINamespace(name: "convert", scope: !76)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!108, !105}
!1096 = !{!1088}
!1097 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !1098)
!1098 = distinct !DILocation(line: 1608, column: 32, scope: !804)
!1099 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !1098)
!1100 = !DILocation(line: 1608, column: 83, scope: !804)
!1101 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !1102)
!1102 = distinct !DILocation(line: 1608, column: 73, scope: !804)
!1103 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !1102)
!1104 = !DILocation(line: 1608, column: 32, scope: !804)
!1105 = !DILocation(line: 1651, column: 33, scope: !804)
!1106 = !DILocation(line: 1651, column: 45, scope: !804)
!1107 = !DILocation(line: 1651, column: 21, scope: !889)
!1108 = !DILocation(line: 1652, column: 17, scope: !889)
!1109 = !DILocation(line: 1650, column: 77, scope: !804)
!1110 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !1111)
!1111 = distinct !DILocation(line: 1677, column: 28, scope: !804)
!1112 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !1111)
!1113 = !DILocation(line: 1677, column: 20, scope: !804)
!1114 = !DILocation(line: 1754, column: 20, scope: !804)
!1115 = !DILocation(line: 1795, column: 33, scope: !804)
!1116 = !DILocation(line: 1795, column: 45, scope: !804)
!1117 = !DILocation(line: 1795, column: 21, scope: !916)
!1118 = !DILocation(line: 1796, column: 17, scope: !916)
!1119 = !DILocation(line: 1794, column: 75, scope: !804)
!1120 = !DILocation(line: 1805, column: 17, scope: !804)
!1121 = !DILocation(line: 1802, column: 70, scope: !804)
!1122 = !DILocation(line: 1829, column: 33, scope: !804)
!1123 = !DILocation(line: 1829, column: 45, scope: !804)
!1124 = !DILocation(line: 1829, column: 21, scope: !926)
!1125 = !DILocation(line: 1830, column: 17, scope: !926)
!1126 = !DILocation(line: 1828, column: 77, scope: !804)
!1127 = !DILocation(line: 1503, column: 17, scope: !804)
!1128 = !DILocation(line: 1502, column: 72, scope: !804)
!1129 = !DILocation(line: 1511, column: 28, scope: !804)
!1130 = !DILocation(line: 1511, column: 20, scope: !804)
!1131 = !DILocation(line: 1878, column: 28, scope: !804)
!1132 = !DILocation(line: 1878, column: 20, scope: !804)
!1133 = !DILocation(line: 1902, column: 20, scope: !804)
!1134 = !DILocation(line: 1766, column: 17, scope: !804)
!1135 = !DILocation(line: 1768, column: 20, scope: !804)
!1136 = !DILocation(line: 1837, column: 21, scope: !804)
!1137 = !DILocalVariable(name: "self", arg: 1, scope: !1138, file: !582, line: 18, type: !662)
!1138 = distinct !DISubprogram(name: "position", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer8position17he7f4d5ee9d9e66b8E", scope: !652, file: !582, line: 18, type: !660, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !1139, retainedNodes: !1140)
!1139 = !DISubprogram(name: "position", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer8position17he7f4d5ee9d9e66b8E", scope: !652, file: !582, line: 18, type: !660, scopeLine: 18, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!1140 = !{!1137}
!1141 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1142)
!1142 = distinct !DILocation(line: 1837, column: 47, scope: !804)
!1143 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1142)
!1144 = !DILocation(line: 1933, column: 20, scope: !804)
!1145 = !DILocation(line: 1955, column: 34, scope: !804)
!1146 = !DILocation(line: 1955, column: 28, scope: !804)
!1147 = !DILocation(line: 1412, column: 21, scope: !804)
!1148 = !DILocation(line: 1409, column: 17, scope: !804)
!1149 = !DILocation(line: 1410, column: 21, scope: !804)
!1150 = !DILocation(line: 1399, column: 61, scope: !804)
!1151 = !DILocation(line: 0, scope: !1152)
!1152 = !DILexicalBlockFile(scope: !728, file: !507, discriminator: 0)
!1153 = !DILocation(line: 1012, column: 30, scope: !804)
!1154 = !DILocation(line: 1012, column: 30, scope: !815)
!1155 = !DILocation(line: 1013, column: 21, scope: !815)
!1156 = !DILocation(line: 0, scope: !1157)
!1157 = !DILexicalBlockFile(scope: !804, file: !507, discriminator: 0)
!1158 = !DILocation(line: 1016, column: 29, scope: !804)
!1159 = !DILocation(line: 1016, column: 29, scope: !817)
!1160 = !DILocation(line: 1016, column: 61, scope: !817)
!1161 = !DILocation(line: 1966, column: 22, scope: !813)
!1162 = !DILocation(line: 1012, column: 30, scope: !819)
!1163 = !DILocation(line: 1013, column: 21, scope: !819)
!1164 = !DILocation(line: 1016, column: 29, scope: !821)
!1165 = !DILocation(line: 1016, column: 61, scope: !821)
!1166 = !DILocation(line: 1012, column: 30, scope: !823)
!1167 = !DILocation(line: 1013, column: 21, scope: !823)
!1168 = !DILocation(line: 1016, column: 29, scope: !825)
!1169 = !DILocation(line: 1016, column: 61, scope: !825)
!1170 = !DILocation(line: 1012, column: 30, scope: !827)
!1171 = !DILocation(line: 1013, column: 21, scope: !827)
!1172 = !DILocation(line: 1016, column: 29, scope: !829)
!1173 = !DILocation(line: 1016, column: 61, scope: !829)
!1174 = !DILocation(line: 1012, column: 30, scope: !831)
!1175 = !DILocation(line: 1013, column: 21, scope: !831)
!1176 = !DILocation(line: 1016, column: 29, scope: !833)
!1177 = !DILocation(line: 1016, column: 61, scope: !833)
!1178 = !DILocation(line: 1480, column: 44, scope: !804)
!1179 = !DILocalVariable(name: "small", arg: 1, scope: !1180, file: !1090, line: 78, type: !37)
!1180 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num63_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$u16$GT$4from17hd867df9315f0e6edE", scope: !1181, file: !1090, line: 78, type: !1182, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1184)
!1181 = !DINamespace(name: "{impl#64}", scope: !1092)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!105, !37}
!1184 = !{!1179}
!1185 = !DILocation(line: 78, column: 21, scope: !1180, inlinedAt: !1186)
!1186 = distinct !DILocation(line: 1480, column: 34, scope: !804)
!1187 = !DILocation(line: 79, column: 17, scope: !1180, inlinedAt: !1186)
!1188 = !DILocation(line: 1480, column: 74, scope: !804)
!1189 = !DILocation(line: 78, column: 21, scope: !1180, inlinedAt: !1190)
!1190 = distinct !DILocation(line: 1480, column: 64, scope: !804)
!1191 = !DILocation(line: 79, column: 17, scope: !1180, inlinedAt: !1190)
!1192 = !DILocation(line: 1480, column: 63, scope: !804)
!1193 = !DILocation(line: 1480, column: 34, scope: !804)
!1194 = !DILocation(line: 1480, column: 25, scope: !835)
!1195 = !DILocation(line: 1481, column: 43, scope: !835)
!1196 = !DILocation(line: 78, column: 21, scope: !1180, inlinedAt: !1197)
!1197 = distinct !DILocation(line: 1481, column: 33, scope: !835)
!1198 = !DILocation(line: 79, column: 17, scope: !1180, inlinedAt: !1197)
!1199 = !DILocation(line: 1481, column: 73, scope: !835)
!1200 = !DILocation(line: 78, column: 21, scope: !1180, inlinedAt: !1201)
!1201 = distinct !DILocation(line: 1481, column: 63, scope: !835)
!1202 = !DILocation(line: 79, column: 17, scope: !1180, inlinedAt: !1201)
!1203 = !DILocation(line: 1481, column: 62, scope: !835)
!1204 = !DILocation(line: 1481, column: 33, scope: !835)
!1205 = !DILocation(line: 1481, column: 25, scope: !837)
!1206 = !DILocation(line: 1482, column: 43, scope: !837)
!1207 = !DILocation(line: 1482, column: 33, scope: !837)
!1208 = !DILocation(line: 1482, column: 25, scope: !839)
!1209 = !DILocation(line: 1483, column: 40, scope: !839)
!1210 = !DILocation(line: 1483, column: 21, scope: !839)
!1211 = !DILocation(line: 1485, column: 25, scope: !839)
!1212 = !DILocation(line: 1463, column: 24, scope: !804)
!1213 = !DILocation(line: 1486, column: 25, scope: !839)
!1214 = !DILocation(line: 1485, column: 21, scope: !839)
!1215 = !DILocation(line: 1487, column: 31, scope: !839)
!1216 = !DILocation(line: 1460, column: 65, scope: !804)
!1217 = !DILocation(line: 1489, column: 25, scope: !839)
!1218 = !DILocation(line: 1487, column: 28, scope: !839)
!1219 = !DILocation(line: 1490, column: 31, scope: !839)
!1220 = !DILocation(line: 1496, column: 25, scope: !839)
!1221 = !DILocation(line: 1490, column: 28, scope: !839)
!1222 = !DILocation(line: 1492, column: 25, scope: !839)
!1223 = !DILocation(line: 1470, column: 56, scope: !804)
!1224 = !DILocation(line: 1470, column: 25, scope: !804)
!1225 = !DILocation(line: 1464, column: 67, scope: !804)
!1226 = !DILocation(line: 1464, column: 25, scope: !804)
!1227 = !DILocation(line: 1012, column: 30, scope: !841)
!1228 = !DILocation(line: 1013, column: 21, scope: !841)
!1229 = !DILocation(line: 1016, column: 29, scope: !843)
!1230 = !DILocation(line: 1016, column: 61, scope: !843)
!1231 = !DILocation(line: 1530, column: 21, scope: !804)
!1232 = !DILocation(line: 1529, column: 17, scope: !804)
!1233 = !DILocation(line: 1531, column: 35, scope: !804)
!1234 = !DILocation(line: 1531, column: 27, scope: !804)
!1235 = !DILocation(line: 1528, column: 66, scope: !804)
!1236 = !DILocation(line: 1532, column: 21, scope: !804)
!1237 = !DILocation(line: 1531, column: 24, scope: !804)
!1238 = !DILocation(line: 1534, column: 21, scope: !804)
!1239 = !DILocation(line: 1012, column: 30, scope: !853)
!1240 = !DILocation(line: 1013, column: 21, scope: !853)
!1241 = !DILocation(line: 1016, column: 29, scope: !855)
!1242 = !DILocation(line: 1016, column: 61, scope: !855)
!1243 = !DILocation(line: 1556, column: 21, scope: !804)
!1244 = !DILocation(line: 1543, column: 46, scope: !804)
!1245 = !DILocation(line: 1543, column: 25, scope: !857)
!1246 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !1247)
!1247 = distinct !DILocation(line: 1546, column: 33, scope: !857)
!1248 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !1247)
!1249 = !DILocation(line: 1544, column: 50, scope: !857)
!1250 = !DILocation(line: 1547, column: 25, scope: !857)
!1251 = !DILocation(line: 1544, column: 41, scope: !857)
!1252 = !DILocation(line: 1544, column: 25, scope: !859)
!1253 = !DILocalVariable(name: "self", arg: 1, scope: !1254, file: !582, line: 74, type: !1075)
!1254 = distinct !DISubprogram(name: "as_slice", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper8as_slice17h1d56b7a0de20f14bE", scope: !583, file: !582, line: 74, type: !1255, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !1257, retainedNodes: !1258)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!485, !1075}
!1257 = !DISubprogram(name: "as_slice", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12InputWrapper8as_slice17h1d56b7a0de20f14bE", scope: !583, file: !582, line: 74, type: !1255, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!1258 = !{!1253}
!1259 = !DILocation(line: 74, column: 27, scope: !1254, inlinedAt: !1260)
!1260 = distinct !DILocation(line: 1550, column: 50, scope: !859)
!1261 = !DILocation(line: 75, column: 9, scope: !1254, inlinedAt: !1260)
!1262 = !DILocation(line: 76, column: 6, scope: !1254, inlinedAt: !1260)
!1263 = !DILocation(line: 1550, column: 50, scope: !859)
!1264 = !DILocalVariable(name: "self", arg: 1, scope: !1265, file: !263, line: 17, type: !485)
!1265 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h136e9d9d48601d18E", scope: !636, file: !263, line: 17, type: !1266, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !1273, retainedNodes: !1271)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!485, !485, !1268, !354}
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !194, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !1269, templateParams: !222, identifier: "58c7fa8154f17906cbde6cfda7cbb520")
!1269 = !{!1270}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1268, file: !5, baseType: !158, size: 32, align: 32, flags: DIFlagPublic)
!1271 = !{!1264, !1272}
!1272 = !DILocalVariable(name: "index", arg: 2, scope: !1265, file: !263, line: 17, type: !1268)
!1273 = !{!288, !1274}
!1274 = !DITemplateTypeParameter(name: "I", type: !1268)
!1275 = !DILocation(line: 17, column: 14, scope: !1265, inlinedAt: !1276)
!1276 = distinct !DILocation(line: 1550, column: 60, scope: !859)
!1277 = !DILocation(line: 17, column: 21, scope: !1265, inlinedAt: !1276)
!1278 = !DILocalVariable(name: "self", arg: 1, scope: !1279, file: !263, line: 523, type: !1268)
!1279 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h67666db9825b1969E", scope: !1280, file: !263, line: 523, type: !1281, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !1283)
!1280 = !DINamespace(name: "{impl#6}", scope: !265)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!485, !1268, !485, !354}
!1283 = !{!1278, !1284}
!1284 = !DILocalVariable(name: "slice", arg: 2, scope: !1279, file: !263, line: 523, type: !485)
!1285 = !DILocation(line: 523, column: 14, scope: !1279, inlinedAt: !1286)
!1286 = distinct !DILocation(line: 18, column: 15, scope: !1265, inlinedAt: !1276)
!1287 = !DILocation(line: 523, column: 20, scope: !1279, inlinedAt: !1286)
!1288 = !DILocalVariable(name: "self", arg: 1, scope: !1289, file: !263, line: 430, type: !295)
!1289 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17he951d0382c9cf7d8E", scope: !264, file: !263, line: 430, type: !1290, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !1292)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!485, !295, !485, !354}
!1292 = !{!1288, !1293, !1294}
!1293 = !DILocalVariable(name: "slice", arg: 2, scope: !1289, file: !263, line: 430, type: !485)
!1294 = !DILocalVariable(name: "new_len", scope: !1289, file: !263, line: 432, type: !158, align: 32)
!1295 = !DILocation(line: 430, column: 14, scope: !1289, inlinedAt: !1296)
!1296 = distinct !DILocation(line: 524, column: 23, scope: !1279, inlinedAt: !1286)
!1297 = !DILocation(line: 430, column: 20, scope: !1289, inlinedAt: !1296)
!1298 = !DILocation(line: 432, column: 32, scope: !1289, inlinedAt: !1296)
!1299 = !DILocation(line: 432, column: 16, scope: !1289, inlinedAt: !1296)
!1300 = !DILocation(line: 432, column: 21, scope: !1289, inlinedAt: !1296)
!1301 = !DILocation(line: 433, column: 16, scope: !1289, inlinedAt: !1296)
!1302 = !DILocation(line: 438, column: 13, scope: !1289, inlinedAt: !1296)
!1303 = !DILocalVariable(name: "ptr", arg: 1, scope: !1304, file: !263, line: 82, type: !1307)
!1304 = distinct !DISubprogram(name: "get_offset_len_noubcheck<u8>", linkageName: "_ZN4core5slice5index24get_offset_len_noubcheck17h19d4676c82008094E", scope: !265, file: !263, line: 81, type: !1305, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !1311)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!1307, !1307, !158, !158}
!1307 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !5, size: 64, align: 32, elements: !1308, templateParams: !98, identifier: "a10360edaf335c418dbc95bccd0cb05d")
!1308 = !{!1309, !1310}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1307, file: !5, baseType: !366, size: 32, align: 32)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1307, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!1311 = !{!1303, !1312, !1313, !1314, !1317}
!1312 = !DILocalVariable(name: "offset", arg: 2, scope: !1304, file: !263, line: 83, type: !158)
!1313 = !DILocalVariable(name: "len", arg: 3, scope: !1304, file: !263, line: 84, type: !158)
!1314 = !DILocalVariable(name: "ptr", scope: !1315, file: !263, line: 86, type: !1316, align: 32)
!1315 = distinct !DILexicalBlock(scope: !1304, file: !263, line: 86, column: 5)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !37, size: 32, align: 32, dwarfAddressSpace: 0)
!1317 = !DILocalVariable(name: "ptr", scope: !1318, file: !263, line: 88, type: !1316, align: 32)
!1318 = distinct !DILexicalBlock(scope: !1315, file: !263, line: 88, column: 5)
!1319 = !DILocation(line: 82, column: 5, scope: !1304, inlinedAt: !1320)
!1320 = distinct !DILocation(line: 436, column: 24, scope: !1289, inlinedAt: !1296)
!1321 = !DILocation(line: 83, column: 5, scope: !1304, inlinedAt: !1320)
!1322 = !DILocation(line: 84, column: 5, scope: !1304, inlinedAt: !1320)
!1323 = !DILocation(line: 86, column: 15, scope: !1304, inlinedAt: !1320)
!1324 = !DILocation(line: 86, column: 9, scope: !1315, inlinedAt: !1320)
!1325 = !DILocation(line: 88, column: 24, scope: !1315, inlinedAt: !1320)
!1326 = !DILocation(line: 88, column: 9, scope: !1318, inlinedAt: !1320)
!1327 = !DILocation(line: 90, column: 2, scope: !1304, inlinedAt: !1320)
!1328 = !DILocation(line: 19, column: 6, scope: !1265, inlinedAt: !1276)
!1329 = !DILocation(line: 1550, column: 60, scope: !859)
!1330 = !DILocation(line: 1550, column: 29, scope: !859)
!1331 = !DILocation(line: 84, column: 20, scope: !624, inlinedAt: !1332)
!1332 = distinct !DILocation(line: 1552, column: 29, scope: !859)
!1333 = !DILocation(line: 84, column: 31, scope: !624, inlinedAt: !1332)
!1334 = !DILocation(line: 85, column: 23, scope: !624, inlinedAt: !1332)
!1335 = !DILocation(line: 17, column: 14, scope: !635, inlinedAt: !1336)
!1336 = distinct !DILocation(line: 85, column: 33, scope: !624, inlinedAt: !1332)
!1337 = !DILocation(line: 17, column: 21, scope: !635, inlinedAt: !1336)
!1338 = !DILocation(line: 18, column: 15, scope: !635, inlinedAt: !1336)
!1339 = !DILocation(line: 85, column: 33, scope: !624, inlinedAt: !1332)
!1340 = !DILocation(line: 85, column: 9, scope: !624, inlinedAt: !1332)
!1341 = !DILocation(line: 1553, column: 21, scope: !859)
!1342 = !DILocation(line: 1538, column: 66, scope: !804)
!1343 = !DILocation(line: 1554, column: 21, scope: !859)
!1344 = !DILocation(line: 1539, column: 17, scope: !804)
!1345 = !DILocation(line: 1012, column: 30, scope: !861)
!1346 = !DILocation(line: 1013, column: 21, scope: !861)
!1347 = !DILocation(line: 1016, column: 29, scope: !863)
!1348 = !DILocation(line: 1016, column: 61, scope: !863)
!1349 = !DILocation(line: 1571, column: 21, scope: !804)
!1350 = !DILocation(line: 1571, column: 41, scope: !804)
!1351 = !DILocation(line: 1572, column: 21, scope: !804)
!1352 = !DILocation(line: 1579, column: 24, scope: !804)
!1353 = !DILocation(line: 1563, column: 36, scope: !804)
!1354 = !DILocation(line: 1563, column: 46, scope: !804)
!1355 = !DILocation(line: 1583, column: 25, scope: !804)
!1356 = !DILocation(line: 1579, column: 21, scope: !804)
!1357 = !DILocation(line: 1579, column: 62, scope: !804)
!1358 = !DILocation(line: 1580, column: 25, scope: !804)
!1359 = !DILocation(line: 1561, column: 70, scope: !804)
!1360 = !DILocation(line: 1563, column: 25, scope: !865)
!1361 = !DILocation(line: 1564, column: 70, scope: !865)
!1362 = !DILocation(line: 1564, column: 21, scope: !865)
!1363 = !DILocation(line: 1012, column: 30, scope: !867)
!1364 = !DILocation(line: 1013, column: 21, scope: !867)
!1365 = !DILocation(line: 1016, column: 29, scope: !869)
!1366 = !DILocation(line: 1016, column: 61, scope: !869)
!1367 = !DILocation(line: 1602, column: 21, scope: !804)
!1368 = !DILocation(line: 1603, column: 21, scope: !804)
!1369 = !DILocation(line: 1603, column: 42, scope: !804)
!1370 = !DILocation(line: 1592, column: 63, scope: !804)
!1371 = !DILocation(line: 1592, column: 21, scope: !804)
!1372 = !DILocation(line: 1590, column: 80, scope: !804)
!1373 = !DILocation(line: 1012, column: 30, scope: !871)
!1374 = !DILocation(line: 1013, column: 21, scope: !871)
!1375 = !DILocation(line: 1016, column: 29, scope: !873)
!1376 = !DILocation(line: 1016, column: 61, scope: !873)
!1377 = !DILocation(line: 1626, column: 27, scope: !804)
!1378 = !DILocation(line: 1626, column: 50, scope: !804)
!1379 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !1380)
!1380 = distinct !DILocation(line: 1626, column: 40, scope: !804)
!1381 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !1380)
!1382 = !DILocation(line: 1626, column: 91, scope: !804)
!1383 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !1384)
!1384 = distinct !DILocation(line: 1626, column: 81, scope: !804)
!1385 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !1384)
!1386 = !DILocation(line: 1626, column: 40, scope: !804)
!1387 = !DILocation(line: 1609, column: 21, scope: !804)
!1388 = !DILocation(line: 1630, column: 21, scope: !804)
!1389 = !DILocation(line: 1630, column: 43, scope: !804)
!1390 = !DILocation(line: 1630, column: 40, scope: !804)
!1391 = !DILocation(line: 1631, column: 57, scope: !804)
!1392 = !DILocation(line: 1631, column: 54, scope: !804)
!1393 = !DILocation(line: 1631, column: 26, scope: !804)
!1394 = !DILocation(line: 1633, column: 44, scope: !804)
!1395 = !DILocation(line: 1633, column: 25, scope: !875)
!1396 = !DILocation(line: 1634, column: 35, scope: !875)
!1397 = !DILocation(line: 1627, column: 21, scope: !804)
!1398 = !DILocation(line: 1626, column: 24, scope: !804)
!1399 = !DILocation(line: 1634, column: 21, scope: !875)
!1400 = !DILocation(line: 1635, column: 43, scope: !875)
!1401 = !DILocation(line: 1636, column: 43, scope: !875)
!1402 = !DILocation(line: 1635, column: 42, scope: !875)
!1403 = !DILocation(line: 1635, column: 25, scope: !877)
!1404 = !DILocation(line: 1637, column: 46, scope: !877)
!1405 = !DILocation(line: 1637, column: 25, scope: !879)
!1406 = !DILocation(line: 1638, column: 35, scope: !879)
!1407 = !DILocation(line: 1638, column: 21, scope: !879)
!1408 = !DILocation(line: 1639, column: 56, scope: !879)
!1409 = !DILocation(line: 1639, column: 35, scope: !879)
!1410 = !DILocation(line: 1639, column: 21, scope: !879)
!1411 = !DILocation(line: 1640, column: 44, scope: !879)
!1412 = !DILocation(line: 1640, column: 25, scope: !881)
!1413 = !DILocation(line: 1641, column: 42, scope: !881)
!1414 = !DILocation(line: 1641, column: 25, scope: !883)
!1415 = !DILocation(line: 1642, column: 21, scope: !883)
!1416 = !DILocation(line: 1642, column: 40, scope: !883)
!1417 = !DILocation(line: 1642, column: 37, scope: !883)
!1418 = !DILocation(line: 1643, column: 54, scope: !883)
!1419 = !DILocation(line: 1643, column: 26, scope: !883)
!1420 = !DILocation(line: 1645, column: 21, scope: !883)
!1421 = !DILocation(line: 1646, column: 21, scope: !883)
!1422 = !DILocation(line: 1646, column: 42, scope: !883)
!1423 = !DILocation(line: 1607, column: 84, scope: !804)
!1424 = !DILocation(line: 1012, column: 30, scope: !885)
!1425 = !DILocation(line: 1013, column: 21, scope: !885)
!1426 = !DILocation(line: 1016, column: 29, scope: !887)
!1427 = !DILocation(line: 1016, column: 61, scope: !887)
!1428 = !DILocation(line: 1012, column: 30, scope: !891)
!1429 = !DILocation(line: 1013, column: 21, scope: !891)
!1430 = !DILocation(line: 1016, column: 29, scope: !893)
!1431 = !DILocation(line: 1016, column: 61, scope: !893)
!1432 = !DILocation(line: 1677, column: 56, scope: !804)
!1433 = !DILocation(line: 1677, column: 48, scope: !804)
!1434 = !DILocation(line: 1680, column: 21, scope: !804)
!1435 = !DILocation(line: 1694, column: 29, scope: !804)
!1436 = !DILocation(line: 1694, column: 21, scope: !804)
!1437 = !DILocalVariable(name: "l", arg: 1, scope: !1438, file: !729, line: 555, type: !1441)
!1438 = distinct !DISubprogram(name: "fill_bit_buffer", linkageName: "_ZN11miniz_oxide7inflate4core15fill_bit_buffer17h15f92ad03f41ddf5E", scope: !36, file: !729, line: 555, type: !1439, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1442)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !1441, !600}
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut miniz_oxide::inflate::core::LocalVars", baseType: !805, size: 32, align: 32, dwarfAddressSpace: 0)
!1442 = !{!1437, !1443}
!1443 = !DILocalVariable(name: "in_iter", arg: 2, scope: !1438, file: !729, line: 555, type: !600)
!1444 = !DILocation(line: 555, column: 20, scope: !1438, inlinedAt: !1445)
!1445 = distinct !DILocation(line: 1713, column: 21, scope: !804)
!1446 = !DILocation(line: 555, column: 39, scope: !1438, inlinedAt: !1445)
!1447 = !DILocation(line: 557, column: 8, scope: !1438, inlinedAt: !1445)
!1448 = !DILocation(line: 558, column: 38, scope: !1438, inlinedAt: !1445)
!1449 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !1450)
!1450 = distinct !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !1445)
!1451 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !1450)
!1452 = !DILocation(line: 558, column: 63, scope: !1438, inlinedAt: !1445)
!1453 = !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !1445)
!1454 = !DILocation(line: 558, column: 9, scope: !1438, inlinedAt: !1445)
!1455 = !DILocation(line: 559, column: 9, scope: !1438, inlinedAt: !1445)
!1456 = !DILocation(line: 557, column: 5, scope: !1438, inlinedAt: !1445)
!1457 = !DILocation(line: 1715, column: 46, scope: !804)
!1458 = !DILocation(line: 1715, column: 76, scope: !804)
!1459 = !DILocation(line: 1715, column: 69, scope: !804)
!1460 = !DILocation(line: 1715, column: 26, scope: !804)
!1461 = !DILocation(line: 1715, column: 26, scope: !898)
!1462 = !DILocation(line: 1715, column: 34, scope: !804)
!1463 = !DILocation(line: 1715, column: 34, scope: !898)
!1464 = !DILocation(line: 1717, column: 21, scope: !898)
!1465 = !DILocation(line: 1718, column: 21, scope: !898)
!1466 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !1467)
!1467 = distinct !DILocation(line: 1695, column: 29, scope: !804)
!1468 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !1467)
!1469 = !DILocation(line: 1695, column: 21, scope: !804)
!1470 = !DILocation(line: 1703, column: 25, scope: !804)
!1471 = !DILocation(line: 1697, column: 47, scope: !804)
!1472 = !DILocation(line: 1697, column: 26, scope: !804)
!1473 = !DILocation(line: 1697, column: 34, scope: !804)
!1474 = !DILocation(line: 1697, column: 34, scope: !895)
!1475 = !DILocation(line: 1706, column: 21, scope: !895)
!1476 = !DILocation(line: 1707, column: 24, scope: !895)
!1477 = !DILocation(line: 1719, column: 21, scope: !898)
!1478 = !DILocation(line: 1721, column: 25, scope: !898)
!1479 = !DILocation(line: 1721, column: 24, scope: !898)
!1480 = !DILocation(line: 555, column: 20, scope: !1438, inlinedAt: !1481)
!1481 = distinct !DILocation(line: 1728, column: 29, scope: !898)
!1482 = !DILocation(line: 555, column: 39, scope: !1438, inlinedAt: !1481)
!1483 = !DILocation(line: 557, column: 8, scope: !1438, inlinedAt: !1481)
!1484 = !DILocation(line: 558, column: 38, scope: !1438, inlinedAt: !1481)
!1485 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !1486)
!1486 = distinct !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !1481)
!1487 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !1486)
!1488 = !DILocation(line: 558, column: 63, scope: !1438, inlinedAt: !1481)
!1489 = !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !1481)
!1490 = !DILocation(line: 558, column: 9, scope: !1438, inlinedAt: !1481)
!1491 = !DILocation(line: 559, column: 9, scope: !1438, inlinedAt: !1481)
!1492 = !DILocation(line: 557, column: 5, scope: !1438, inlinedAt: !1481)
!1493 = !DILocation(line: 1731, column: 50, scope: !898)
!1494 = !DILocation(line: 1731, column: 80, scope: !898)
!1495 = !DILocation(line: 1731, column: 73, scope: !898)
!1496 = !DILocation(line: 1731, column: 30, scope: !898)
!1497 = !DILocation(line: 1731, column: 30, scope: !901)
!1498 = !DILocation(line: 1731, column: 38, scope: !898)
!1499 = !DILocation(line: 1731, column: 38, scope: !901)
!1500 = !DILocation(line: 1733, column: 29, scope: !901)
!1501 = !DILocation(line: 1723, column: 25, scope: !898)
!1502 = !DILocation(line: 1721, column: 21, scope: !898)
!1503 = !DILocation(line: 1734, column: 29, scope: !901)
!1504 = !DILocation(line: 1737, column: 48, scope: !901)
!1505 = !DILocation(line: 1737, column: 37, scope: !901)
!1506 = !DILocation(line: 1738, column: 32, scope: !901)
!1507 = !DILocation(line: 1744, column: 52, scope: !901)
!1508 = !DILocation(line: 1744, column: 41, scope: !901)
!1509 = !DILocation(line: 1745, column: 33, scope: !901)
!1510 = !DILocation(line: 1738, column: 29, scope: !901)
!1511 = !DILocation(line: 1739, column: 33, scope: !901)
!1512 = !DILocation(line: 1741, column: 33, scope: !901)
!1513 = !DILocation(line: 1676, column: 68, scope: !804)
!1514 = !DILocation(line: 1710, column: 25, scope: !895)
!1515 = !DILocation(line: 1707, column: 21, scope: !895)
!1516 = !DILocation(line: 1708, column: 25, scope: !895)
!1517 = !DILocation(line: 1012, column: 30, scope: !904)
!1518 = !DILocation(line: 1013, column: 21, scope: !904)
!1519 = !DILocation(line: 1016, column: 29, scope: !906)
!1520 = !DILocation(line: 1016, column: 61, scope: !906)
!1521 = !DILocation(line: 1756, column: 35, scope: !804)
!1522 = !DILocation(line: 1756, column: 27, scope: !804)
!1523 = !DILocation(line: 1755, column: 21, scope: !804)
!1524 = !DILocation(line: 1754, column: 17, scope: !804)
!1525 = !DILocation(line: 1760, column: 21, scope: !804)
!1526 = !DILocation(line: 1756, column: 24, scope: !804)
!1527 = !DILocation(line: 1757, column: 40, scope: !804)
!1528 = !DILocation(line: 1757, column: 29, scope: !804)
!1529 = !DILocation(line: 1758, column: 21, scope: !804)
!1530 = !DILocation(line: 1753, column: 67, scope: !804)
!1531 = !DILocation(line: 1012, column: 30, scope: !908)
!1532 = !DILocation(line: 1013, column: 21, scope: !908)
!1533 = !DILocation(line: 1016, column: 29, scope: !910)
!1534 = !DILocation(line: 1016, column: 61, scope: !910)
!1535 = !DILocation(line: 1012, column: 30, scope: !918)
!1536 = !DILocation(line: 1013, column: 21, scope: !918)
!1537 = !DILocation(line: 1016, column: 29, scope: !920)
!1538 = !DILocation(line: 1016, column: 61, scope: !920)
!1539 = !DILocation(line: 1012, column: 30, scope: !922)
!1540 = !DILocation(line: 1013, column: 21, scope: !922)
!1541 = !DILocation(line: 1016, column: 29, scope: !924)
!1542 = !DILocation(line: 1016, column: 61, scope: !924)
!1543 = !DILocation(line: 1012, column: 30, scope: !928)
!1544 = !DILocation(line: 1013, column: 21, scope: !928)
!1545 = !DILocation(line: 1016, column: 29, scope: !930)
!1546 = !DILocation(line: 1016, column: 61, scope: !930)
!1547 = !DILocation(line: 1012, column: 30, scope: !845)
!1548 = !DILocation(line: 1013, column: 21, scope: !845)
!1549 = !DILocation(line: 1016, column: 29, scope: !847)
!1550 = !DILocation(line: 1016, column: 61, scope: !847)
!1551 = !DILocation(line: 1512, column: 21, scope: !804)
!1552 = !DILocation(line: 1511, column: 17, scope: !804)
!1553 = !DILocation(line: 1514, column: 40, scope: !804)
!1554 = !DILocation(line: 1514, column: 29, scope: !804)
!1555 = !DILocation(line: 1515, column: 21, scope: !804)
!1556 = !DILocation(line: 1510, column: 73, scope: !804)
!1557 = !DILocation(line: 1516, column: 24, scope: !804)
!1558 = !DILocation(line: 1517, column: 25, scope: !804)
!1559 = !DILocation(line: 1516, column: 21, scope: !804)
!1560 = !DILocation(line: 1516, column: 42, scope: !804)
!1561 = !DILocation(line: 1523, column: 25, scope: !804)
!1562 = !DILocation(line: 1012, column: 30, scope: !849)
!1563 = !DILocation(line: 1013, column: 21, scope: !849)
!1564 = !DILocation(line: 1016, column: 29, scope: !851)
!1565 = !DILocation(line: 1016, column: 61, scope: !851)
!1566 = !DILocation(line: 1896, column: 21, scope: !804)
!1567 = !DILocation(line: 1878, column: 17, scope: !804)
!1568 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1569)
!1569 = distinct !DILocation(line: 1879, column: 43, scope: !804)
!1570 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1569)
!1571 = !DILocation(line: 1879, column: 43, scope: !804)
!1572 = !DILocation(line: 1879, column: 25, scope: !944)
!1573 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1574)
!1574 = distinct !DILocation(line: 1880, column: 46, scope: !944)
!1575 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1574)
!1576 = !DILocation(line: 1881, column: 39, scope: !944)
!1577 = !DILocalVariable(name: "self", arg: 1, scope: !1578, file: !997, line: 2339, type: !158)
!1578 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h20fcdaf2fcd71d09E", scope: !998, file: !997, line: 2339, type: !1000, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1579)
!1579 = !{!1577, !1580}
!1580 = !DILocalVariable(name: "rhs", arg: 2, scope: !1578, file: !997, line: 2339, type: !158)
!1581 = !DILocation(line: 2339, column: 35, scope: !1578, inlinedAt: !1582)
!1582 = distinct !DILocation(line: 1881, column: 26, scope: !944)
!1583 = !DILocation(line: 2339, column: 41, scope: !1578, inlinedAt: !1582)
!1584 = !DILocation(line: 2340, column: 13, scope: !1578, inlinedAt: !1582)
!1585 = !DILocation(line: 1881, column: 58, scope: !944)
!1586 = !DILocation(line: 1880, column: 38, scope: !944)
!1587 = !DILocation(line: 1880, column: 25, scope: !946)
!1588 = !DILocation(line: 1884, column: 48, scope: !946)
!1589 = !DILocation(line: 1884, column: 62, scope: !946)
!1590 = !DILocation(line: 1884, column: 31, scope: !946)
!1591 = !DILocation(line: 1884, column: 25, scope: !948)
!1592 = !DILocalVariable(name: "self", arg: 1, scope: !1593, file: !582, line: 57, type: !673)
!1593 = distinct !DISubprogram(name: "get_mut", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer7get_mut17hb7e425c08e4c9f6fE", scope: !652, file: !582, line: 57, type: !1594, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !1596, retainedNodes: !1597)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!655, !673}
!1596 = !DISubprogram(name: "get_mut", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer7get_mut17hb7e425c08e4c9f6fE", scope: !652, file: !582, line: 57, type: !1594, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!1597 = !{!1592}
!1598 = !DILocation(line: 57, column: 20, scope: !1593, inlinedAt: !1599)
!1599 = distinct !DILocation(line: 1886, column: 38, scope: !948)
!1600 = !DILocation(line: 58, column: 9, scope: !1593, inlinedAt: !1599)
!1601 = !DILocation(line: 59, column: 6, scope: !1593, inlinedAt: !1599)
!1602 = !DILocation(line: 1886, column: 38, scope: !948)
!1603 = !DILocation(line: 1886, column: 75, scope: !948)
!1604 = !DILocation(line: 1886, column: 21, scope: !948)
!1605 = !DILocation(line: 1888, column: 42, scope: !948)
!1606 = !DILocation(line: 1877, column: 74, scope: !804)
!1607 = !DILocalVariable(name: "self", arg: 1, scope: !1608, file: !582, line: 23, type: !673)
!1608 = distinct !DISubprogram(name: "set_position", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer12set_position17he44130a4ad483af4E", scope: !652, file: !582, line: 23, type: !1609, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !1611, retainedNodes: !1612)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{null, !673, !158}
!1611 = !DISubprogram(name: "set_position", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer12set_position17he44130a4ad483af4E", scope: !652, file: !582, line: 23, type: !1609, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!1612 = !{!1607, !1613}
!1613 = !DILocalVariable(name: "position", arg: 2, scope: !1608, file: !582, line: 23, type: !158)
!1614 = !DILocation(line: 23, column: 25, scope: !1608, inlinedAt: !1615)
!1615 = distinct !DILocation(line: 1888, column: 29, scope: !948)
!1616 = !DILocation(line: 23, column: 36, scope: !1608, inlinedAt: !1615)
!1617 = !DILocation(line: 24, column: 9, scope: !1608, inlinedAt: !1615)
!1618 = !DILocation(line: 1889, column: 21, scope: !948)
!1619 = !DILocation(line: 1890, column: 24, scope: !948)
!1620 = !DILocation(line: 1891, column: 25, scope: !948)
!1621 = !DILocation(line: 1890, column: 21, scope: !948)
!1622 = !DILocation(line: 1893, column: 25, scope: !948)
!1623 = !DILocation(line: 1012, column: 30, scope: !950)
!1624 = !DILocation(line: 1013, column: 21, scope: !950)
!1625 = !DILocation(line: 1016, column: 29, scope: !952)
!1626 = !DILocation(line: 1016, column: 61, scope: !952)
!1627 = !DILocation(line: 1927, column: 25, scope: !804)
!1628 = !DILocation(line: 1902, column: 17, scope: !804)
!1629 = !DILocation(line: 1903, column: 21, scope: !804)
!1630 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !1631)
!1631 = distinct !DILocation(line: 1905, column: 62, scope: !804)
!1632 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !1631)
!1633 = !DILocation(line: 1905, column: 39, scope: !804)
!1634 = !DILocation(line: 1900, column: 65, scope: !804)
!1635 = !DILocation(line: 1905, column: 25, scope: !954)
!1636 = !DILocation(line: 1906, column: 32, scope: !954)
!1637 = !DILocation(line: 1906, column: 25, scope: !956)
!1638 = !DILocation(line: 1907, column: 63, scope: !956)
!1639 = !DILocation(line: 17, column: 14, scope: !635, inlinedAt: !1640)
!1640 = distinct !DILocation(line: 1907, column: 62, scope: !956)
!1641 = !DILocation(line: 17, column: 21, scope: !635, inlinedAt: !1640)
!1642 = !DILocation(line: 18, column: 15, scope: !635, inlinedAt: !1640)
!1643 = !DILocation(line: 1907, column: 62, scope: !956)
!1644 = !DILocation(line: 1907, column: 85, scope: !956)
!1645 = !DILocation(line: 1907, column: 92, scope: !956)
!1646 = !DILocation(line: 79, column: 29, scope: !1026, inlinedAt: !1647)
!1647 = distinct !DILocation(line: 1907, column: 31, scope: !956)
!1648 = !DILocation(line: 1907, column: 31, scope: !956)
!1649 = !DILocation(line: 1907, column: 21, scope: !956)
!1650 = !DILocation(line: 1909, column: 55, scope: !956)
!1651 = !DILocation(line: 1909, column: 34, scope: !956)
!1652 = !DILocation(line: 1909, column: 21, scope: !956)
!1653 = !DILocation(line: 1910, column: 21, scope: !956)
!1654 = !DILocation(line: 1910, column: 21, scope: !958)
!1655 = !DILocation(line: 1910, column: 21, scope: !964)
!1656 = !DILocation(line: 1912, column: 24, scope: !956)
!1657 = !DILocation(line: 1916, column: 25, scope: !956)
!1658 = !DILocation(line: 1912, column: 21, scope: !956)
!1659 = !DILocation(line: 1913, column: 25, scope: !956)
!1660 = !DILocation(line: 1914, column: 25, scope: !956)
!1661 = !DILocation(line: 1012, column: 30, scope: !967)
!1662 = !DILocation(line: 1013, column: 21, scope: !967)
!1663 = !DILocation(line: 1016, column: 29, scope: !969)
!1664 = !DILocation(line: 1016, column: 61, scope: !969)
!1665 = !DILocation(line: 1771, column: 21, scope: !804)
!1666 = !DILocation(line: 1768, column: 17, scope: !804)
!1667 = !DILocation(line: 1772, column: 27, scope: !804)
!1668 = !DILocation(line: 1764, column: 76, scope: !804)
!1669 = !DILocation(line: 1782, column: 25, scope: !804)
!1670 = !DILocation(line: 1782, column: 39, scope: !804)
!1671 = !DILocation(line: 1782, column: 38, scope: !804)
!1672 = !DILocation(line: 1775, column: 21, scope: !804)
!1673 = !DILocation(line: 1772, column: 24, scope: !804)
!1674 = !DILocation(line: 1781, column: 21, scope: !804)
!1675 = !DILocation(line: 1783, column: 43, scope: !804)
!1676 = !DILocation(line: 1783, column: 56, scope: !804)
!1677 = !DILocation(line: 1783, column: 55, scope: !804)
!1678 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !1679)
!1679 = distinct !DILocation(line: 1783, column: 33, scope: !804)
!1680 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !1679)
!1681 = !DILocation(line: 1783, column: 21, scope: !804)
!1682 = !DILocation(line: 1786, column: 24, scope: !804)
!1683 = !DILocation(line: 1789, column: 25, scope: !804)
!1684 = !DILocation(line: 1786, column: 21, scope: !804)
!1685 = !DILocation(line: 1787, column: 25, scope: !804)
!1686 = !DILocation(line: 1012, column: 30, scope: !912)
!1687 = !DILocation(line: 1013, column: 21, scope: !912)
!1688 = !DILocation(line: 1016, column: 29, scope: !914)
!1689 = !DILocation(line: 1016, column: 61, scope: !914)
!1690 = !DILocation(line: 1838, column: 82, scope: !804)
!1691 = !DILocalVariable(name: "self", arg: 1, scope: !1692, file: !582, line: 52, type: !662)
!1692 = distinct !DISubprogram(name: "get_ref", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer7get_ref17h62e9466c848a315cE", scope: !652, file: !582, line: 52, type: !1693, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !1695, retainedNodes: !1696)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!485, !662}
!1695 = !DISubprogram(name: "get_ref", linkageName: "_ZN11miniz_oxide7inflate13output_buffer12OutputBuffer7get_ref17h62e9466c848a315cE", scope: !652, file: !582, line: 52, type: !1693, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!1696 = !{!1691}
!1697 = !DILocation(line: 52, column: 26, scope: !1692, inlinedAt: !1698)
!1698 = distinct !DILocation(line: 1838, column: 108, scope: !804)
!1699 = !DILocation(line: 53, column: 9, scope: !1692, inlinedAt: !1698)
!1700 = !DILocation(line: 54, column: 6, scope: !1692, inlinedAt: !1698)
!1701 = !DILocation(line: 1838, column: 108, scope: !804)
!1702 = !DILocation(line: 1838, column: 81, scope: !804)
!1703 = !DILocation(line: 1838, column: 22, scope: !804)
!1704 = !DILocation(line: 1838, column: 21, scope: !804)
!1705 = !DILocation(line: 1842, column: 21, scope: !804)
!1706 = !DILocation(line: 1837, column: 17, scope: !804)
!1707 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1708)
!1708 = distinct !DILocation(line: 1844, column: 43, scope: !804)
!1709 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1708)
!1710 = !DILocation(line: 1844, column: 43, scope: !804)
!1711 = !DILocation(line: 1844, column: 25, scope: !932)
!1712 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1713)
!1713 = distinct !DILocation(line: 1845, column: 46, scope: !932)
!1714 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1713)
!1715 = !DILocation(line: 1846, column: 39, scope: !932)
!1716 = !DILocation(line: 2339, column: 35, scope: !1578, inlinedAt: !1717)
!1717 = distinct !DILocation(line: 1846, column: 26, scope: !932)
!1718 = !DILocation(line: 2339, column: 41, scope: !1578, inlinedAt: !1717)
!1719 = !DILocation(line: 2340, column: 13, scope: !1578, inlinedAt: !1717)
!1720 = !DILocation(line: 1846, column: 58, scope: !932)
!1721 = !DILocation(line: 1845, column: 38, scope: !932)
!1722 = !DILocation(line: 1845, column: 25, scope: !934)
!1723 = !DILocation(line: 52, column: 26, scope: !1692, inlinedAt: !1724)
!1724 = distinct !DILocation(line: 1848, column: 43, scope: !934)
!1725 = !DILocation(line: 53, column: 9, scope: !1692, inlinedAt: !1724)
!1726 = !DILocation(line: 54, column: 6, scope: !1692, inlinedAt: !1724)
!1727 = !DILocation(line: 1848, column: 43, scope: !934)
!1728 = !DILocation(line: 1848, column: 35, scope: !934)
!1729 = !DILocation(line: 1848, column: 25, scope: !936)
!1730 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1731)
!1731 = distinct !DILocation(line: 1849, column: 49, scope: !936)
!1732 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1731)
!1733 = !DILocation(line: 1849, column: 62, scope: !936)
!1734 = !DILocation(line: 1849, column: 41, scope: !936)
!1735 = !DILocation(line: 1849, column: 25, scope: !938)
!1736 = !DILocation(line: 1851, column: 24, scope: !938)
!1737 = !DILocation(line: 1854, column: 26, scope: !938)
!1738 = !DILocation(line: 1858, column: 28, scope: !938)
!1739 = !DILocation(line: 57, column: 20, scope: !1593, inlinedAt: !1740)
!1740 = distinct !DILocation(line: 1865, column: 37, scope: !938)
!1741 = !DILocation(line: 58, column: 9, scope: !1593, inlinedAt: !1740)
!1742 = !DILocation(line: 59, column: 6, scope: !1593, inlinedAt: !1740)
!1743 = !DILocation(line: 1865, column: 37, scope: !938)
!1744 = !DILocation(line: 1867, column: 29, scope: !938)
!1745 = !DILocation(line: 1868, column: 29, scope: !938)
!1746 = !DILocation(line: 1869, column: 29, scope: !938)
!1747 = !DILocation(line: 1864, column: 25, scope: !938)
!1748 = !DILocation(line: 1871, column: 56, scope: !938)
!1749 = !DILocation(line: 1871, column: 46, scope: !938)
!1750 = !DILocation(line: 1854, column: 51, scope: !938)
!1751 = !DILocation(line: 1854, column: 76, scope: !938)
!1752 = !DILocation(line: 23, column: 25, scope: !1608, inlinedAt: !1753)
!1753 = distinct !DILocation(line: 1871, column: 33, scope: !938)
!1754 = !DILocation(line: 23, column: 36, scope: !1608, inlinedAt: !1753)
!1755 = !DILocation(line: 24, column: 9, scope: !1608, inlinedAt: !1753)
!1756 = !DILocation(line: 1872, column: 25, scope: !938)
!1757 = !DILocation(line: 1851, column: 21, scope: !938)
!1758 = !DILocation(line: 1836, column: 76, scope: !804)
!1759 = !DILocation(line: 1859, column: 29, scope: !938)
!1760 = !DILocation(line: 1858, column: 25, scope: !938)
!1761 = !DILocation(line: 1861, column: 29, scope: !938)
!1762 = !DILocation(line: 1012, column: 30, scope: !940)
!1763 = !DILocation(line: 1013, column: 21, scope: !940)
!1764 = !DILocation(line: 1016, column: 29, scope: !942)
!1765 = !DILocation(line: 1016, column: 61, scope: !942)
!1766 = !DILocation(line: 1950, column: 21, scope: !804)
!1767 = !DILocation(line: 1933, column: 17, scope: !804)
!1768 = !DILocation(line: 1934, column: 24, scope: !804)
!1769 = !DILocation(line: 1932, column: 67, scope: !804)
!1770 = !DILocation(line: 1942, column: 56, scope: !804)
!1771 = !DILocation(line: 1942, column: 25, scope: !804)
!1772 = !DILocation(line: 1935, column: 67, scope: !804)
!1773 = !DILocation(line: 1935, column: 25, scope: !804)
!1774 = !DILocation(line: 1012, column: 30, scope: !971)
!1775 = !DILocation(line: 1013, column: 21, scope: !971)
!1776 = !DILocation(line: 1016, column: 29, scope: !973)
!1777 = !DILocation(line: 1016, column: 61, scope: !973)
!1778 = !DILocation(line: 1971, column: 9, scope: !813)
!1779 = !DILocation(line: 1966, column: 19, scope: !813)
!1780 = !DILocation(line: 1967, column: 12, scope: !813)
!1781 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !1782)
!1782 = distinct !DILocation(line: 1969, column: 52, scope: !813)
!1783 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !1782)
!1784 = !DILocation(line: 1969, column: 28, scope: !813)
!1785 = !DILocation(line: 1983, column: 8, scope: !975)
!1786 = !DILocation(line: 1969, column: 9, scope: !813)
!1787 = !DILocation(line: 1990, column: 15, scope: !975)
!1788 = !DILocation(line: 1990, column: 5, scope: !975)
!1789 = !DILocation(line: 1991, column: 17, scope: !975)
!1790 = !DILocation(line: 1991, column: 5, scope: !975)
!1791 = !DILocation(line: 1992, column: 18, scope: !975)
!1792 = !DILocation(line: 1992, column: 5, scope: !975)
!1793 = !DILocation(line: 1993, column: 14, scope: !975)
!1794 = !DILocation(line: 1993, column: 5, scope: !975)
!1795 = !DILocation(line: 1994, column: 17, scope: !975)
!1796 = !DILocation(line: 1994, column: 5, scope: !975)
!1797 = !DILocation(line: 1995, column: 19, scope: !975)
!1798 = !DILocation(line: 1995, column: 5, scope: !975)
!1799 = !DILocation(line: 1997, column: 39, scope: !975)
!1800 = !DILocation(line: 1997, column: 18, scope: !975)
!1801 = !DILocation(line: 1984, column: 20, scope: !975)
!1802 = !DILocation(line: 1984, column: 12, scope: !975)
!1803 = !DILocation(line: 1985, column: 12, scope: !975)
!1804 = !DILocation(line: 1987, column: 9, scope: !975)
!1805 = !DILocation(line: 1983, column: 5, scope: !975)
!1806 = !DILocation(line: 1997, column: 5, scope: !975)
!1807 = !DILocation(line: 2001, column: 25, scope: !975)
!1808 = !DILocation(line: 2002, column: 9, scope: !975)
!1809 = !DILocation(line: 2001, column: 22, scope: !975)
!1810 = !DILocation(line: 2005, column: 9, scope: !975)
!1811 = !DILocation(line: 2007, column: 8, scope: !977)
!1812 = !DILocation(line: 2025, column: 9, scope: !977)
!1813 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !1814)
!1814 = distinct !DILocation(line: 2026, column: 32, scope: !977)
!1815 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !1814)
!1816 = !DILocation(line: 2026, column: 9, scope: !977)
!1817 = !DILocation(line: 2007, column: 22, scope: !977)
!1818 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1819)
!1819 = distinct !DILocation(line: 2008, column: 35, scope: !977)
!1820 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1819)
!1821 = !DILocation(line: 2008, column: 35, scope: !977)
!1822 = !DILocation(line: 2008, column: 13, scope: !979)
!1823 = !DILocation(line: 2009, column: 42, scope: !979)
!1824 = !DILocation(line: 52, column: 26, scope: !1692, inlinedAt: !1825)
!1825 = distinct !DILocation(line: 2009, column: 68, scope: !979)
!1826 = !DILocation(line: 53, column: 9, scope: !1692, inlinedAt: !1825)
!1827 = !DILocation(line: 54, column: 6, scope: !1692, inlinedAt: !1825)
!1828 = !DILocation(line: 2009, column: 68, scope: !979)
!1829 = !DILocalVariable(name: "self", arg: 1, scope: !1830, file: !263, line: 17, type: !485)
!1830 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h8fc05b92c785a463E", scope: !636, file: !263, line: 17, type: !1831, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !707, retainedNodes: !1833)
!1831 = !DISubroutineType(types: !1832)
!1832 = !{!485, !485, !295, !354}
!1833 = !{!1829, !1834}
!1834 = !DILocalVariable(name: "index", arg: 2, scope: !1830, file: !263, line: 17, type: !295)
!1835 = !DILocation(line: 17, column: 14, scope: !1830, inlinedAt: !1836)
!1836 = distinct !DILocation(line: 2009, column: 77, scope: !979)
!1837 = !DILocation(line: 17, column: 21, scope: !1830, inlinedAt: !1836)
!1838 = !DILocation(line: 430, column: 14, scope: !1289, inlinedAt: !1839)
!1839 = distinct !DILocation(line: 18, column: 15, scope: !1830, inlinedAt: !1836)
!1840 = !DILocation(line: 430, column: 20, scope: !1289, inlinedAt: !1839)
!1841 = !DILocation(line: 432, column: 32, scope: !1289, inlinedAt: !1839)
!1842 = !DILocation(line: 432, column: 16, scope: !1289, inlinedAt: !1839)
!1843 = !DILocation(line: 432, column: 21, scope: !1289, inlinedAt: !1839)
!1844 = !DILocation(line: 433, column: 16, scope: !1289, inlinedAt: !1839)
!1845 = !DILocation(line: 438, column: 13, scope: !1289, inlinedAt: !1839)
!1846 = !DILocation(line: 82, column: 5, scope: !1304, inlinedAt: !1847)
!1847 = distinct !DILocation(line: 436, column: 24, scope: !1289, inlinedAt: !1839)
!1848 = !DILocation(line: 83, column: 5, scope: !1304, inlinedAt: !1847)
!1849 = !DILocation(line: 84, column: 5, scope: !1304, inlinedAt: !1847)
!1850 = !DILocation(line: 86, column: 15, scope: !1304, inlinedAt: !1847)
!1851 = !DILocation(line: 86, column: 9, scope: !1315, inlinedAt: !1847)
!1852 = !DILocation(line: 88, column: 24, scope: !1315, inlinedAt: !1847)
!1853 = !DILocation(line: 88, column: 9, scope: !1318, inlinedAt: !1847)
!1854 = !DILocation(line: 90, column: 2, scope: !1304, inlinedAt: !1847)
!1855 = !DILocation(line: 19, column: 6, scope: !1830, inlinedAt: !1836)
!1856 = !DILocation(line: 2009, column: 77, scope: !979)
!1857 = !DILocation(line: 2009, column: 27, scope: !979)
!1858 = !DILocation(line: 2009, column: 9, scope: !979)
!1859 = !DILocation(line: 2015, column: 16, scope: !979)
!1860 = !DILocation(line: 2016, column: 20, scope: !979)
!1861 = !DILocation(line: 2017, column: 20, scope: !979)
!1862 = !DILocation(line: 2017, column: 39, scope: !979)
!1863 = !DILocation(line: 2019, column: 17, scope: !979)
!1864 = !DILocation(line: 2015, column: 13, scope: !979)
!1865 = !DILocation(line: 2026, column: 47, scope: !977)
!1866 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !1867)
!1867 = distinct !DILocation(line: 2027, column: 17, scope: !977)
!1868 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !1867)
!1869 = !DILocation(line: 2027, column: 9, scope: !977)
!1870 = !DILocation(line: 2024, column: 5, scope: !977)
!1871 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h0b4f6dd55cb5df91E", scope: !1872, file: !729, line: 1417, type: !1873, scopeLine: 1417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1893)
!1872 = !DINamespace(name: "decompress", scope: !36)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!1875, !1890, !37}
!1875 = !DICompositeType(tag: DW_TAG_structure_type, name: "Action", scope: !36, file: !5, size: 16, align: 8, flags: DIFlagPrivate, elements: !1876, templateParams: !98, identifier: "42ae477ffb506ac25d83f4c9e5ca88a4")
!1876 = !{!1877}
!1877 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1875, file: !5, size: 16, align: 8, elements: !1878, templateParams: !98, identifier: "b38ff76d3666c81333094ab833082ce", discriminator: !1889)
!1878 = !{!1879, !1881, !1885}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1877, file: !5, baseType: !1880, size: 16, align: 8, extraData: i8 0)
!1880 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1875, file: !5, size: 16, align: 8, flags: DIFlagPrivate, elements: !98, identifier: "2e02ab8148d10fb4ba6b59015d62875c")
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "Jump", scope: !1877, file: !5, baseType: !1882, size: 16, align: 8, extraData: i8 1)
!1882 = !DICompositeType(tag: DW_TAG_structure_type, name: "Jump", scope: !1875, file: !5, size: 16, align: 8, flags: DIFlagPrivate, elements: !1883, templateParams: !98, identifier: "9da6b93ffddfac96312d2f28075d64")
!1883 = !{!1884}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1882, file: !5, baseType: !35, size: 8, align: 8, offset: 8, flags: DIFlagPrivate)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "End", scope: !1877, file: !5, baseType: !1886, size: 16, align: 8, extraData: i8 2)
!1886 = !DICompositeType(tag: DW_TAG_structure_type, name: "End", scope: !1875, file: !5, size: 16, align: 8, flags: DIFlagPrivate, elements: !1887, templateParams: !98, identifier: "5d535decd44ccfb7e90c8c8ba945fb57")
!1887 = !{!1888}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1886, file: !5, baseType: !24, size: 8, align: 8, offset: 8, flags: DIFlagPrivate)
!1889 = !DIDerivedType(tag: DW_TAG_member, scope: !1875, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagArtificial)
!1890 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !1872, file: !5, size: 32, align: 32, elements: !1891, templateParams: !98, identifier: "76b2251879b00a57e3c3844c38b09741")
!1891 = !{!1892}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__z_header0", scope: !1890, file: !5, baseType: !107, size: 32, align: 32)
!1893 = !{!1894, !1895}
!1894 = !DILocalVariable(name: "cmf", arg: 2, scope: !1871, file: !729, line: 1417, type: !37)
!1895 = !DILocalVariable(name: "r__z_header0", scope: !1871, file: !729, line: 1359, type: !108, align: 32)
!1896 = !DILocation(line: 1359, column: 5, scope: !1871)
!1897 = !DILocation(line: 1417, column: 49, scope: !1871)
!1898 = !DILocalVariable(name: "small", arg: 1, scope: !1899, file: !1090, line: 78, type: !37)
!1899 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num63_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$u32$GT$4from17h32e4036ab150512fE", scope: !1900, file: !1090, line: 78, type: !1901, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1903)
!1900 = !DINamespace(name: "{impl#65}", scope: !1092)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{!108, !37}
!1903 = !{!1898}
!1904 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !1905)
!1905 = distinct !DILocation(line: 1418, column: 35, scope: !1871)
!1906 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !1905)
!1907 = !DILocation(line: 1418, column: 21, scope: !1871)
!1908 = !DILocation(line: 1420, column: 18, scope: !1871)
!1909 = distinct !DISubprogram(name: "{closure#10}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h171db5d0045c0787E", scope: !1872, file: !729, line: 1652, type: !1910, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1916)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!1875, !1912, !1441, !108}
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#10}", scope: !1872, file: !5, size: 32, align: 32, elements: !1913, templateParams: !98, identifier: "14287a5b5aac111781ff203d440a427e")
!1913 = !{!1914}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__len_codes", scope: !1912, file: !5, baseType: !1915, size: 32, align: 32)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 512]", baseType: !786, size: 32, align: 32, dwarfAddressSpace: 0)
!1916 = !{!1917, !1918, !1919, !1920, !1922, !1924}
!1917 = !DILocalVariable(name: "l", arg: 2, scope: !1909, file: !729, line: 1652, type: !1441)
!1918 = !DILocalVariable(name: "extra_bits", arg: 3, scope: !1909, file: !729, line: 1652, type: !108)
!1919 = !DILocalVariable(name: "r__len_codes", scope: !1909, file: !729, line: 1359, type: !786, align: 8)
!1920 = !DILocalVariable(name: "val", scope: !1921, file: !729, line: 1656, type: !37, align: 8)
!1921 = distinct !DILexicalBlock(scope: !1909, file: !729, line: 1656, column: 21)
!1922 = !DILocalVariable(name: "fill_start", scope: !1923, file: !729, line: 1663, type: !158, align: 32)
!1923 = distinct !DILexicalBlock(scope: !1921, file: !729, line: 1663, column: 21)
!1924 = !DILocalVariable(name: "fill_end", scope: !1925, file: !729, line: 1664, type: !158, align: 32)
!1925 = distinct !DILexicalBlock(scope: !1923, file: !729, line: 1664, column: 21)
!1926 = !DILocation(line: 1359, column: 5, scope: !1909)
!1927 = !DILocation(line: 1652, column: 68, scope: !1909)
!1928 = !DILocation(line: 1652, column: 71, scope: !1909)
!1929 = !DILocation(line: 1656, column: 25, scope: !1921)
!1930 = !DILocation(line: 1655, column: 35, scope: !1909)
!1931 = !DILocation(line: 1655, column: 47, scope: !1909)
!1932 = !DILocation(line: 1655, column: 46, scope: !1909)
!1933 = !DILocation(line: 1655, column: 21, scope: !1909)
!1934 = !DILocation(line: 1656, column: 34, scope: !1909)
!1935 = !DILocation(line: 1657, column: 39, scope: !1909)
!1936 = !DILocation(line: 1660, column: 25, scope: !1909)
!1937 = !DILocation(line: 1656, column: 31, scope: !1909)
!1938 = !DILocation(line: 1657, column: 25, scope: !1909)
!1939 = !DILocation(line: 1658, column: 38, scope: !1909)
!1940 = !DILocation(line: 1658, column: 37, scope: !1909)
!1941 = !DILocation(line: 1658, column: 25, scope: !1909)
!1942 = !DILocation(line: 1663, column: 38, scope: !1921)
!1943 = !DILocation(line: 1663, column: 25, scope: !1923)
!1944 = !DILocation(line: 1664, column: 36, scope: !1923)
!1945 = !DILocation(line: 1664, column: 57, scope: !1923)
!1946 = !DILocation(line: 1664, column: 25, scope: !1925)
!1947 = !DILocation(line: 1665, column: 35, scope: !1925)
!1948 = !DILocation(line: 1665, column: 21, scope: !1925)
!1949 = !DILocation(line: 1666, column: 35, scope: !1925)
!1950 = !DILocation(line: 1666, column: 21, scope: !1925)
!1951 = !DILocation(line: 1669, column: 29, scope: !1925)
!1952 = !DILocation(line: 1669, column: 58, scope: !1925)
!1953 = !DILocation(line: 1668, column: 32, scope: !1925)
!1954 = !DILocation(line: 1670, column: 32, scope: !1925)
!1955 = !DILocation(line: 1670, column: 27, scope: !1925)
!1956 = !DILocation(line: 1671, column: 34, scope: !1925)
!1957 = !DILocation(line: 1671, column: 21, scope: !1925)
!1958 = !DILocation(line: 1673, column: 18, scope: !1909)
!1959 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h24b34e8c9df4be8cE", scope: !1872, file: !729, line: 1424, type: !1960, scopeLine: 1424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1968)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{!1875, !1962, !37}
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !1872, file: !5, size: 128, align: 32, elements: !1963, templateParams: !98, identifier: "d57b9ba64a1fd2ce4e2af5e25d2f1b47")
!1963 = !{!1964, !1965, !1966, !1967}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__z_header0", scope: !1962, file: !5, baseType: !961, size: 32, align: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__z_header1", scope: !1962, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__flags", scope: !1962, file: !5, baseType: !961, size: 32, align: 32, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__out_buf_size_mask", scope: !1962, file: !5, baseType: !206, size: 32, align: 32, offset: 96)
!1968 = !{!1969, !1970, !1971, !1972, !1973}
!1969 = !DILocalVariable(name: "flg", arg: 2, scope: !1959, file: !729, line: 1424, type: !37)
!1970 = !DILocalVariable(name: "r__z_header0", scope: !1959, file: !729, line: 1359, type: !108, align: 32)
!1971 = !DILocalVariable(name: "r__z_header1", scope: !1959, file: !729, line: 1359, type: !108, align: 32)
!1972 = !DILocalVariable(name: "flags", scope: !1959, file: !729, line: 1363, type: !108, align: 32)
!1973 = !DILocalVariable(name: "out_buf_size_mask", scope: !1959, file: !729, line: 1365, type: !158, align: 32)
!1974 = !DILocation(line: 1359, column: 5, scope: !1959)
!1975 = !DILocation(line: 1363, column: 5, scope: !1959)
!1976 = !DILocation(line: 1365, column: 9, scope: !1959)
!1977 = !DILocation(line: 1424, column: 49, scope: !1959)
!1978 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !1979)
!1979 = distinct !DILocation(line: 1425, column: 35, scope: !1959)
!1980 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !1979)
!1981 = !DILocation(line: 1425, column: 21, scope: !1959)
!1982 = !DILocation(line: 1426, column: 42, scope: !1959)
!1983 = !DILocation(line: 1426, column: 55, scope: !1959)
!1984 = !DILocation(line: 1426, column: 68, scope: !1959)
!1985 = !DILocation(line: 1426, column: 75, scope: !1959)
!1986 = !DILocation(line: 1426, column: 21, scope: !1959)
!1987 = !DILocation(line: 1427, column: 18, scope: !1959)
!1988 = distinct !DISubprogram(name: "{closure#5}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h3de28129e4bf4651E", scope: !1872, file: !729, line: 1470, type: !1989, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !1996)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!1875, !1991, !37}
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#5}", scope: !1872, file: !5, size: 64, align: 32, elements: !1992, templateParams: !98, identifier: "c8bd57cb2e74e49e992bb59c10ad965e")
!1992 = !{!1993, !1995}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__raw_header", scope: !1991, file: !5, baseType: !1994, size: 32, align: 32)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 4]", baseType: !782, size: 32, align: 32, dwarfAddressSpace: 0)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__counter", scope: !1991, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!1996 = !{!1997, !1998, !1999}
!1997 = !DILocalVariable(name: "byte", arg: 2, scope: !1988, file: !729, line: 1470, type: !37)
!1998 = !DILocalVariable(name: "r__raw_header", scope: !1988, file: !729, line: 1359, type: !782, align: 8)
!1999 = !DILocalVariable(name: "l__counter", scope: !1988, file: !729, line: 1389, type: !108, align: 32)
!2000 = !DILocation(line: 1359, column: 5, scope: !1988)
!2001 = !DILocation(line: 1389, column: 13, scope: !1988)
!2002 = !DILocation(line: 1470, column: 57, scope: !1988)
!2003 = !DILocation(line: 1471, column: 42, scope: !1988)
!2004 = !DILocation(line: 1471, column: 29, scope: !1988)
!2005 = !DILocation(line: 1472, column: 29, scope: !1988)
!2006 = !DILocation(line: 1474, column: 26, scope: !1988)
!2007 = distinct !DISubprogram(name: "{closure#12}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h542f16e863614498E", scope: !1872, file: !729, line: 1796, type: !2008, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2011)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!1875, !2010, !1441, !108}
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#12}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "fbddcb23176ab7ad7b2a1f9122d71452")
!2011 = !{!2012, !2013, !2014}
!2012 = !DILocalVariable(name: "l", arg: 2, scope: !2007, file: !729, line: 1796, type: !1441)
!2013 = !DILocalVariable(name: "extra_bits", arg: 3, scope: !2007, file: !729, line: 1796, type: !108)
!2014 = !DILocalVariable(arg: 1, scope: !2007, file: !729, line: 1796, type: !2010)
!2015 = !DILocation(line: 1796, column: 67, scope: !2007)
!2016 = !DILocation(line: 1796, column: 68, scope: !2007)
!2017 = !DILocation(line: 1796, column: 71, scope: !2007)
!2018 = !DILocation(line: 1797, column: 21, scope: !2007)
!2019 = !DILocation(line: 1799, column: 18, scope: !2007)
!2020 = distinct !DISubprogram(name: "{closure#15}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h54c014788c83db30E", scope: !1872, file: !729, line: 1903, type: !2021, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2024)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!1875, !2023, !1441}
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#15}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "60938b897ba0bd92b9ad791927c2b839")
!2024 = !{!2025, !2026}
!2025 = !DILocalVariable(arg: 1, scope: !2020, file: !729, line: 1903, type: !2023)
!2026 = !DILocalVariable(arg: 2, scope: !2020, file: !729, line: 1903, type: !1441)
!2027 = !DILocation(line: 1903, column: 63, scope: !2020)
!2028 = !DILocation(line: 1903, column: 64, scope: !2020)
!2029 = !DILocation(line: 1903, column: 79, scope: !2020)
!2030 = distinct !DISubprogram(name: "{closure#14}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h62cde2448a124dc1E", scope: !1872, file: !729, line: 1830, type: !2031, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2034)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!1875, !2033, !1441, !108}
!2033 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#14}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "f571a804bc4b58ba7801f56ba49b5baf")
!2034 = !{!2035, !2036, !2037}
!2035 = !DILocalVariable(name: "l", arg: 2, scope: !2030, file: !729, line: 1830, type: !1441)
!2036 = !DILocalVariable(name: "extra_bits", arg: 3, scope: !2030, file: !729, line: 1830, type: !108)
!2037 = !DILocalVariable(arg: 1, scope: !2030, file: !729, line: 1830, type: !2033)
!2038 = !DILocation(line: 1830, column: 67, scope: !2030)
!2039 = !DILocation(line: 1830, column: 68, scope: !2030)
!2040 = !DILocation(line: 1830, column: 71, scope: !2030)
!2041 = !DILocation(line: 1831, column: 21, scope: !2030)
!2042 = !DILocation(line: 1833, column: 18, scope: !2030)
!2043 = distinct !DISubprogram(name: "{closure#17}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h7250651f0ed14b80E", scope: !1872, file: !729, line: 1942, type: !2044, scopeLine: 1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2050)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!1875, !2046, !37}
!2046 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#17}", scope: !1872, file: !5, size: 64, align: 32, elements: !2047, templateParams: !98, identifier: "c7e5f80e2d87b8a8ac88dd97d32d43b")
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__z_adler32", scope: !2046, file: !5, baseType: !107, size: 32, align: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__counter", scope: !2046, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!2050 = !{!2051, !2052, !2053}
!2051 = !DILocalVariable(name: "byte", arg: 2, scope: !2043, file: !729, line: 1942, type: !37)
!2052 = !DILocalVariable(name: "r__z_adler32", scope: !2043, file: !729, line: 1359, type: !108, align: 32)
!2053 = !DILocalVariable(name: "l__counter", scope: !2043, file: !729, line: 1389, type: !108, align: 32)
!2054 = !DILocation(line: 1359, column: 5, scope: !2043)
!2055 = !DILocation(line: 1389, column: 13, scope: !2043)
!2056 = !DILocation(line: 1942, column: 57, scope: !2043)
!2057 = !DILocation(line: 1943, column: 29, scope: !2043)
!2058 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !2059)
!2059 = distinct !DILocation(line: 1944, column: 44, scope: !2043)
!2060 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !2059)
!2061 = !DILocation(line: 1944, column: 29, scope: !2043)
!2062 = !DILocation(line: 1945, column: 29, scope: !2043)
!2063 = !DILocation(line: 1947, column: 26, scope: !2043)
!2064 = distinct !DISubprogram(name: "{closure#7}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h8ded89fe72afbb5fE", scope: !1872, file: !729, line: 1564, type: !2065, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2071)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!1875, !2067, !1441, !108}
!2067 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#7}", scope: !1872, file: !5, size: 32, align: 32, elements: !2068, templateParams: !98, identifier: "ca79c94a0bbe905081b6eedff062db47")
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__table_sizes", scope: !2067, file: !5, baseType: !2070, size: 32, align: 32)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u16; 3]", baseType: !752, size: 32, align: 32, dwarfAddressSpace: 0)
!2071 = !{!2072, !2073, !2074}
!2072 = !DILocalVariable(name: "l", arg: 2, scope: !2064, file: !729, line: 1564, type: !1441)
!2073 = !DILocalVariable(name: "bits", arg: 3, scope: !2064, file: !729, line: 1564, type: !108)
!2074 = !DILocalVariable(name: "r__table_sizes", scope: !2064, file: !729, line: 1359, type: !752, align: 16)
!2075 = !DILocation(line: 1359, column: 5, scope: !2064)
!2076 = !DILocation(line: 1564, column: 71, scope: !2064)
!2077 = !DILocation(line: 1564, column: 74, scope: !2064)
!2078 = !DILocation(line: 1566, column: 29, scope: !2064)
!2079 = !DILocation(line: 1566, column: 43, scope: !2064)
!2080 = !DILocation(line: 1566, column: 59, scope: !2064)
!2081 = !DILocation(line: 1565, column: 39, scope: !2064)
!2082 = !DILocation(line: 1565, column: 25, scope: !2064)
!2083 = !DILocation(line: 1567, column: 25, scope: !2064)
!2084 = !DILocation(line: 1569, column: 22, scope: !2064)
!2085 = distinct !DISubprogram(name: "{closure#9}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h8fc9a9f9ce92ab8fE", scope: !1872, file: !729, line: 1611, type: !2086, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2089)
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!1875, !2088, !737, !1441, !7}
!2088 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#9}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "e253f7c85f4de57894a17aa7381c4906")
!2089 = !{!2090, !2091, !2092, !2093}
!2090 = !DILocalVariable(name: "r", arg: 2, scope: !2085, file: !729, line: 1611, type: !737)
!2091 = !DILocalVariable(name: "l", arg: 3, scope: !2085, file: !729, line: 1611, type: !1441)
!2092 = !DILocalVariable(name: "symbol", arg: 4, scope: !2085, file: !729, line: 1611, type: !7)
!2093 = !DILocalVariable(arg: 1, scope: !2085, file: !729, line: 1611, type: !2088)
!2094 = !DILocation(line: 1611, column: 46, scope: !2085)
!2095 = !DILocation(line: 1611, column: 47, scope: !2085)
!2096 = !DILocation(line: 1611, column: 50, scope: !2085)
!2097 = !DILocation(line: 1611, column: 53, scope: !2085)
!2098 = !DILocation(line: 1612, column: 29, scope: !2085)
!2099 = !DILocation(line: 1613, column: 32, scope: !2085)
!2100 = !DILocation(line: 1617, column: 39, scope: !2085)
!2101 = !DILocation(line: 1614, column: 84, scope: !2085)
!2102 = !DILocation(line: 1614, column: 45, scope: !2085)
!2103 = !DILocation(line: 1614, column: 33, scope: !2085)
!2104 = !DILocation(line: 1617, column: 55, scope: !2085)
!2105 = !DILocation(line: 1621, column: 47, scope: !2085)
!2106 = !DILocation(line: 1621, column: 61, scope: !2085)
!2107 = !DILocation(line: 1621, column: 60, scope: !2085)
!2108 = !DILocation(line: 1618, column: 33, scope: !2085)
!2109 = !DILocation(line: 1617, column: 36, scope: !2085)
!2110 = !DILocation(line: 1624, column: 26, scope: !2085)
!2111 = !DILocation(line: 1621, column: 33, scope: !2085)
!2112 = !DILocation(line: 1622, column: 33, scope: !2085)
!2113 = !DILocation(line: 1615, column: 33, scope: !2085)
!2114 = !DILocation(line: 1616, column: 33, scope: !2085)
!2115 = !DILocation(line: 1613, column: 29, scope: !2085)
!2116 = distinct !DISubprogram(name: "{closure#2}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17h93baf7daff723fdaE", scope: !1872, file: !729, line: 1432, type: !2117, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2122)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!1875, !2119, !1441, !108}
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#2}", scope: !1872, file: !5, size: 32, align: 32, elements: !2120, templateParams: !98, identifier: "642821fccb87f26457460a789b141fa2")
!2120 = !{!2121}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r", scope: !2119, file: !5, baseType: !737, size: 32, align: 32)
!2122 = !{!2123, !2124, !2125}
!2123 = !DILocalVariable(name: "l", arg: 2, scope: !2116, file: !729, line: 1432, type: !1441)
!2124 = !DILocalVariable(name: "bits", arg: 3, scope: !2116, file: !729, line: 1432, type: !108)
!2125 = !DILocalVariable(name: "r", scope: !2116, file: !729, line: 1359, type: !738, align: 32)
!2126 = !DILocation(line: 1359, column: 5, scope: !2116)
!2127 = !DILocation(line: 1432, column: 60, scope: !2116)
!2128 = !DILocation(line: 1432, column: 63, scope: !2116)
!2129 = !DILocation(line: 1433, column: 32, scope: !2116)
!2130 = !DILocation(line: 1433, column: 21, scope: !2116)
!2131 = !DILocation(line: 1434, column: 37, scope: !2116)
!2132 = !DILocation(line: 1434, column: 36, scope: !2116)
!2133 = !DILocation(line: 1434, column: 21, scope: !2116)
!2134 = !DILocation(line: 1435, column: 21, scope: !2116)
!2135 = !DILocation(line: 1446, column: 30, scope: !2116)
!2136 = !DILocation(line: 1436, column: 30, scope: !2116)
!2137 = !DILocation(line: 1436, column: 65, scope: !2116)
!2138 = !DILocation(line: 1438, column: 29, scope: !2116)
!2139 = !DILocation(line: 1439, column: 29, scope: !2116)
!2140 = !DILocation(line: 1439, column: 45, scope: !2116)
!2141 = !DILocation(line: 1442, column: 29, scope: !2116)
!2142 = !DILocation(line: 1443, column: 29, scope: !2116)
!2143 = !DILocation(line: 1443, column: 56, scope: !2116)
!2144 = !DILocation(line: 1445, column: 30, scope: !2116)
!2145 = !DILocation(line: 1445, column: 62, scope: !2116)
!2146 = !DILocation(line: 1448, column: 18, scope: !2116)
!2147 = distinct !DISubprogram(name: "{closure#8}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha4e769859de4a0f6E", scope: !1872, file: !729, line: 1592, type: !2148, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2154)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!1875, !2150, !1441, !108}
!2150 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#8}", scope: !1872, file: !5, size: 32, align: 32, elements: !2151, templateParams: !98, identifier: "fca9b454d4f6776abb8aa1956eb0023d")
!2151 = !{!2152}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__code_size_huffman", scope: !2150, file: !5, baseType: !2153, size: 32, align: 32)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 19]", baseType: !778, size: 32, align: 32, dwarfAddressSpace: 0)
!2154 = !{!2155, !2156, !2157}
!2155 = !DILocalVariable(name: "l", arg: 2, scope: !2147, file: !729, line: 1592, type: !1441)
!2156 = !DILocalVariable(name: "bits", arg: 3, scope: !2147, file: !729, line: 1592, type: !108)
!2157 = !DILocalVariable(name: "r__code_size_huffman", scope: !2147, file: !729, line: 1359, type: !778, align: 8)
!2158 = !DILocation(line: 1359, column: 5, scope: !2147)
!2159 = !DILocation(line: 1592, column: 64, scope: !2147)
!2160 = !DILocation(line: 1592, column: 67, scope: !2147)
!2161 = !DILocation(line: 1596, column: 45, scope: !2147)
!2162 = !DILocation(line: 1596, column: 66, scope: !2147)
!2163 = !DILocation(line: 1596, column: 25, scope: !2147)
!2164 = !DILocation(line: 1598, column: 25, scope: !2147)
!2165 = !DILocation(line: 1600, column: 22, scope: !2147)
!2166 = distinct !DISubprogram(name: "{closure#11}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha5a366ff3493ef81E", scope: !1872, file: !729, line: 1686, type: !2167, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2170)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!1875, !2169, !737, !1441, !7}
!2169 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#11}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "54f9e0a96f2e8745b15968e152564687")
!2170 = !{!2171, !2172, !2173, !2174}
!2171 = !DILocalVariable(name: "_r", arg: 2, scope: !2166, file: !729, line: 1686, type: !737)
!2172 = !DILocalVariable(name: "l", arg: 3, scope: !2166, file: !729, line: 1686, type: !1441)
!2173 = !DILocalVariable(name: "symbol", arg: 4, scope: !2166, file: !729, line: 1686, type: !7)
!2174 = !DILocalVariable(arg: 1, scope: !2166, file: !729, line: 1686, type: !2169)
!2175 = !DILocation(line: 1686, column: 25, scope: !2166)
!2176 = !DILocation(line: 1686, column: 26, scope: !2166)
!2177 = !DILocation(line: 1686, column: 30, scope: !2166)
!2178 = !DILocation(line: 1686, column: 33, scope: !2166)
!2179 = !DILocation(line: 1687, column: 29, scope: !2166)
!2180 = !DILocation(line: 1689, column: 26, scope: !2166)
!2181 = distinct !DISubprogram(name: "{closure#4}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17ha87f2de35545e9adE", scope: !1872, file: !729, line: 1464, type: !2182, scopeLine: 1464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2187)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!1875, !2184, !1441, !108}
!2184 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#4}", scope: !1872, file: !5, size: 32, align: 32, elements: !2185, templateParams: !98, identifier: "f21a2a6777098ae2c6094e809ea60a3d")
!2185 = !{!2186}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__raw_header", scope: !2184, file: !5, baseType: !1994, size: 32, align: 32)
!2187 = !{!2188, !2189, !2190}
!2188 = !DILocalVariable(name: "l", arg: 2, scope: !2181, file: !729, line: 1464, type: !1441)
!2189 = !DILocalVariable(name: "bits", arg: 3, scope: !2181, file: !729, line: 1464, type: !108)
!2190 = !DILocalVariable(name: "r__raw_header", scope: !2181, file: !729, line: 1359, type: !782, align: 8)
!2191 = !DILocation(line: 1359, column: 5, scope: !2181)
!2192 = !DILocation(line: 1464, column: 68, scope: !2181)
!2193 = !DILocation(line: 1464, column: 71, scope: !2181)
!2194 = !DILocation(line: 1465, column: 42, scope: !2181)
!2195 = !DILocation(line: 1465, column: 29, scope: !2181)
!2196 = !DILocation(line: 1466, column: 29, scope: !2181)
!2197 = !DILocation(line: 1468, column: 26, scope: !2181)
!2198 = distinct !DISubprogram(name: "{closure#3}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17habebda03c230bb3cE", scope: !1872, file: !729, line: 1453, type: !2199, scopeLine: 1453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2202)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!1875, !2201, !1441}
!2201 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#3}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "1891bc626bd9a16e60571854853b947")
!2202 = !{!2203, !2204}
!2203 = !DILocalVariable(name: "l", arg: 2, scope: !2198, file: !729, line: 1453, type: !1441)
!2204 = !DILocalVariable(arg: 1, scope: !2198, file: !729, line: 1453, type: !2201)
!2205 = !DILocation(line: 1453, column: 59, scope: !2198)
!2206 = !DILocation(line: 1453, column: 60, scope: !2198)
!2207 = !DILocation(line: 1454, column: 21, scope: !2198)
!2208 = !DILocation(line: 1456, column: 18, scope: !2198)
!2209 = distinct !DISubprogram(name: "{closure#6}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hcad5797352f30decE", scope: !1872, file: !729, line: 1503, type: !2210, scopeLine: 1503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2213)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{!1875, !2212, !1441, !108}
!2212 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#6}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "3205f687f6aa26358c9e9fadfabf0e09")
!2213 = !{!2214, !2215, !2216}
!2214 = !DILocalVariable(name: "l", arg: 2, scope: !2209, file: !729, line: 1503, type: !1441)
!2215 = !DILocalVariable(name: "bits", arg: 3, scope: !2209, file: !729, line: 1503, type: !108)
!2216 = !DILocalVariable(arg: 1, scope: !2209, file: !729, line: 1503, type: !2212)
!2217 = !DILocation(line: 1503, column: 59, scope: !2209)
!2218 = !DILocation(line: 1503, column: 60, scope: !2209)
!2219 = !DILocation(line: 1503, column: 63, scope: !2209)
!2220 = !DILocation(line: 1504, column: 21, scope: !2209)
!2221 = !DILocation(line: 1506, column: 18, scope: !2209)
!2222 = distinct !DISubprogram(name: "{closure#16}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hd6b344c6490bb9f6E", scope: !1872, file: !729, line: 1935, type: !2223, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2228)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!1875, !2225, !1441, !108}
!2225 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#16}", scope: !1872, file: !5, size: 32, align: 32, elements: !2226, templateParams: !98, identifier: "42bbb4c8db1d9209b92b8b527a88cbad")
!2226 = !{!2227}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__r__z_adler32", scope: !2225, file: !5, baseType: !107, size: 32, align: 32)
!2228 = !{!2229, !2230, !2231}
!2229 = !DILocalVariable(name: "l", arg: 2, scope: !2222, file: !729, line: 1935, type: !1441)
!2230 = !DILocalVariable(name: "bits", arg: 3, scope: !2222, file: !729, line: 1935, type: !108)
!2231 = !DILocalVariable(name: "r__z_adler32", scope: !2222, file: !729, line: 1359, type: !108, align: 32)
!2232 = !DILocation(line: 1359, column: 5, scope: !2222)
!2233 = !DILocation(line: 1935, column: 68, scope: !2222)
!2234 = !DILocation(line: 1935, column: 71, scope: !2222)
!2235 = !DILocation(line: 1936, column: 29, scope: !2222)
!2236 = !DILocation(line: 1937, column: 29, scope: !2222)
!2237 = !DILocation(line: 1938, column: 29, scope: !2222)
!2238 = !DILocation(line: 1940, column: 26, scope: !2222)
!2239 = distinct !DISubprogram(name: "{closure#13}", linkageName: "_ZN11miniz_oxide7inflate4core10decompress28_$u7b$$u7b$closure$u7d$$u7d$17hd9dcc9bebd5a63daE", scope: !1872, file: !729, line: 1805, type: !2240, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2243)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!1875, !2242, !737, !1441, !7}
!2242 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#13}", scope: !1872, file: !5, align: 8, elements: !98, identifier: "50e9e7f0f713f188546ac0f00e7cae0b")
!2243 = !{!2244, !2245, !2246, !2247, !2249}
!2244 = !DILocalVariable(name: "_r", arg: 2, scope: !2239, file: !729, line: 1805, type: !737)
!2245 = !DILocalVariable(name: "l", arg: 3, scope: !2239, file: !729, line: 1805, type: !1441)
!2246 = !DILocalVariable(name: "symbol", arg: 4, scope: !2239, file: !729, line: 1805, type: !7)
!2247 = !DILocalVariable(name: "symbol", scope: !2248, file: !729, line: 1812, type: !158, align: 32)
!2248 = distinct !DILexicalBlock(scope: !2239, file: !729, line: 1812, column: 21)
!2249 = !DILocalVariable(arg: 1, scope: !2239, file: !729, line: 1805, type: !2242)
!2250 = !DILocation(line: 1805, column: 81, scope: !2239)
!2251 = !DILocation(line: 1805, column: 82, scope: !2239)
!2252 = !DILocation(line: 1805, column: 86, scope: !2239)
!2253 = !DILocation(line: 1805, column: 89, scope: !2239)
!2254 = !DILocation(line: 1812, column: 34, scope: !2239)
!2255 = !DILocation(line: 1812, column: 25, scope: !2248)
!2256 = !DILocation(line: 1813, column: 24, scope: !2248)
!2257 = !DILocation(line: 1817, column: 68, scope: !2248)
!2258 = !DILocalVariable(name: "code", arg: 1, scope: !2259, file: !729, line: 512, type: !37)
!2259 = distinct !DISubprogram(name: "num_extra_bits_for_distance_code", linkageName: "_ZN11miniz_oxide7inflate4core32num_extra_bits_for_distance_code17h30cb8981f65ec018E", scope: !36, file: !729, line: 512, type: !2260, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2262)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!37, !37}
!2262 = !{!2258, !2263}
!2263 = !DILocalVariable(name: "c", scope: !2264, file: !729, line: 515, type: !37, align: 8)
!2264 = distinct !DILexicalBlock(scope: !2259, file: !729, line: 515, column: 5)
!2265 = !DILocation(line: 512, column: 43, scope: !2259, inlinedAt: !2266)
!2266 = distinct !DILocation(line: 1817, column: 35, scope: !2248)
!2267 = !DILocation(line: 515, column: 13, scope: !2259, inlinedAt: !2266)
!2268 = !DILocation(line: 515, column: 9, scope: !2264, inlinedAt: !2266)
!2269 = !DILocalVariable(name: "self", arg: 1, scope: !2270, file: !997, line: 2191, type: !37)
!2270 = distinct !DISubprogram(name: "saturating_sub", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$14saturating_sub17h9bc0cf07a2ddfe73E", scope: !2271, file: !997, line: 2191, type: !2272, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2274)
!2271 = !DINamespace(name: "{impl#6}", scope: !999)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!37, !37, !37}
!2274 = !{!2269, !2275}
!2275 = !DILocalVariable(name: "rhs", arg: 2, scope: !2270, file: !997, line: 2191, type: !37)
!2276 = !DILocation(line: 2191, column: 37, scope: !2270, inlinedAt: !2277)
!2277 = distinct !DILocation(line: 516, column: 7, scope: !2264, inlinedAt: !2266)
!2278 = !DILocation(line: 2191, column: 43, scope: !2270, inlinedAt: !2277)
!2279 = !DILocation(line: 2192, column: 13, scope: !2270, inlinedAt: !2277)
!2280 = !DILocation(line: 1817, column: 21, scope: !2248)
!2281 = !DILocation(line: 1818, column: 40, scope: !2248)
!2282 = !DILocation(line: 1815, column: 32, scope: !2248)
!2283 = !DILocation(line: 1825, column: 18, scope: !2239)
!2284 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2285)
!2285 = distinct !DILocation(line: 1818, column: 30, scope: !2248)
!2286 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2285)
!2287 = !DILocation(line: 1818, column: 21, scope: !2248)
!2288 = !DILocation(line: 1819, column: 24, scope: !2248)
!2289 = !DILocation(line: 1823, column: 25, scope: !2248)
!2290 = !DILocation(line: 1819, column: 21, scope: !2248)
!2291 = !DILocation(line: 1821, column: 25, scope: !2248)
!2292 = distinct !DISubprogram(name: "undo_bytes", linkageName: "_ZN11miniz_oxide7inflate4core10undo_bytes17h38b70339048b5439E", scope: !36, file: !729, line: 781, type: !2293, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2295)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!108, !1441, !108}
!2295 = !{!2296, !2297, !2298}
!2296 = !DILocalVariable(name: "l", arg: 1, scope: !2292, file: !729, line: 781, type: !1441)
!2297 = !DILocalVariable(name: "max", arg: 2, scope: !2292, file: !729, line: 781, type: !108)
!2298 = !DILocalVariable(name: "res", scope: !2299, file: !729, line: 782, type: !108, align: 32)
!2299 = distinct !DILexicalBlock(scope: !2292, file: !729, line: 782, column: 5)
!2300 = !DILocation(line: 781, column: 15, scope: !2292)
!2301 = !DILocation(line: 781, column: 34, scope: !2292)
!2302 = !DILocation(line: 782, column: 24, scope: !2292)
!2303 = !DILocation(line: 782, column: 15, scope: !2292)
!2304 = !DILocation(line: 782, column: 9, scope: !2299)
!2305 = !DILocation(line: 783, column: 19, scope: !2299)
!2306 = !DILocation(line: 783, column: 5, scope: !2299)
!2307 = !DILocation(line: 785, column: 2, scope: !2292)
!2308 = distinct !DISubprogram(name: "apply_match", linkageName: "_ZN11miniz_oxide7inflate4core11apply_match17hc6e8d69c6bc09905E", scope: !36, file: !729, line: 1112, type: !2309, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2311)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{null, !655, !158, !158, !158, !158}
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2319, !2321, !2323, !2347, !2349, !2350, !2351, !2353, !2354, !2356}
!2312 = !DILocalVariable(name: "out_slice", arg: 1, scope: !2308, file: !729, line: 1113, type: !655)
!2313 = !DILocalVariable(name: "out_pos", arg: 2, scope: !2308, file: !729, line: 1114, type: !158)
!2314 = !DILocalVariable(name: "dist", arg: 3, scope: !2308, file: !729, line: 1115, type: !158)
!2315 = !DILocalVariable(name: "match_len", arg: 4, scope: !2308, file: !729, line: 1116, type: !158)
!2316 = !DILocalVariable(name: "out_buf_size_mask", arg: 5, scope: !2308, file: !729, line: 1117, type: !158)
!2317 = !DILocalVariable(name: "source_pos", scope: !2318, file: !729, line: 1121, type: !158, align: 32)
!2318 = distinct !DILexicalBlock(scope: !2308, file: !729, line: 1121, column: 5)
!2319 = !DILocalVariable(name: "out_slice", scope: !2320, file: !729, line: 1124, type: !276, align: 32)
!2320 = distinct !DILexicalBlock(scope: !2318, file: !729, line: 1124, column: 9)
!2321 = !DILocalVariable(name: "dst", scope: !2322, file: !729, line: 1125, type: !276, align: 32)
!2322 = distinct !DILexicalBlock(scope: !2320, file: !729, line: 1125, column: 64)
!2323 = !DILocalVariable(name: "src", scope: !2324, file: !729, line: 1128, type: !2325, align: 32)
!2324 = distinct !DILexicalBlock(scope: !2322, file: !729, line: 1128, column: 13)
!2325 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<((&core::cell::Cell<u8>, &core::cell::Cell<u8>), &core::cell::Cell<u8>)>", scope: !92, file: !5, size: 96, align: 32, flags: DIFlagPublic, elements: !2326, templateParams: !98, identifier: "7fa670b2252c7f05588dfe0ac048ca8")
!2326 = !{!2327}
!2327 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2325, file: !5, size: 96, align: 32, elements: !2328, templateParams: !98, identifier: "4161e32dd01f455e609e69c50cfc8afc", discriminator: !2346)
!2328 = !{!2329, !2342}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2327, file: !5, baseType: !2330, size: 96, align: 32, extraData: i32 0)
!2330 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2325, file: !5, size: 96, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !2331, identifier: "71c4ff2fb2989572e51afb8d6e04295f")
!2331 = !{!2332}
!2332 = !DITemplateTypeParameter(name: "T", type: !2333)
!2333 = !DICompositeType(tag: DW_TAG_structure_type, name: "((&core::cell::Cell<u8>, &core::cell::Cell<u8>), &core::cell::Cell<u8>)", file: !5, size: 96, align: 32, elements: !2334, templateParams: !98, identifier: "fb981c8d86aa7c73a3111948b99b3565")
!2334 = !{!2335, !2341}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2333, file: !5, baseType: !2336, size: 64, align: 32)
!2336 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&core::cell::Cell<u8>, &core::cell::Cell<u8>)", file: !5, size: 64, align: 32, elements: !2337, templateParams: !98, identifier: "504a00f9b994b206d2e0e8ab5c526f8c")
!2337 = !{!2338, !2340}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2336, file: !5, baseType: !2339, size: 32, align: 32)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::Cell<u8>", baseType: !280, size: 32, align: 32, dwarfAddressSpace: 0)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2336, file: !5, baseType: !2339, size: 32, align: 32, offset: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2333, file: !5, baseType: !2339, size: 32, align: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2327, file: !5, baseType: !2343, size: 96, align: 32)
!2343 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2325, file: !5, size: 96, align: 32, flags: DIFlagPublic, elements: !2344, templateParams: !2331, identifier: "14729e62e5f0d4cc165197363ceebab5")
!2344 = !{!2345}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2343, file: !5, baseType: !2333, size: 96, align: 32, flags: DIFlagPublic)
!2346 = !DIDerivedType(tag: DW_TAG_member, scope: !2325, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!2347 = !DILocalVariable(name: "a", scope: !2348, file: !729, line: 1132, type: !2339, align: 32)
!2348 = distinct !DILexicalBlock(scope: !2324, file: !729, line: 1132, column: 44)
!2349 = !DILocalVariable(name: "b", scope: !2348, file: !729, line: 1132, type: !2339, align: 32)
!2350 = !DILocalVariable(name: "c", scope: !2348, file: !729, line: 1132, type: !2339, align: 32)
!2351 = !DILocalVariable(name: "from_slice", scope: !2352, file: !729, line: 1159, type: !655, align: 32)
!2352 = distinct !DILexicalBlock(scope: !2318, file: !729, line: 1159, column: 13)
!2353 = !DILocalVariable(name: "to_slice", scope: !2352, file: !729, line: 1159, type: !655, align: 32)
!2354 = !DILocalVariable(name: "to_slice", scope: !2355, file: !729, line: 1162, type: !655, align: 32)
!2355 = distinct !DILexicalBlock(scope: !2318, file: !729, line: 1162, column: 13)
!2356 = !DILocalVariable(name: "from_slice", scope: !2355, file: !729, line: 1162, type: !655, align: 32)
!2357 = !DILocation(line: 1113, column: 5, scope: !2308)
!2358 = !DILocation(line: 1114, column: 5, scope: !2308)
!2359 = !DILocation(line: 1115, column: 5, scope: !2308)
!2360 = !DILocation(line: 1116, column: 5, scope: !2308)
!2361 = !DILocation(line: 1117, column: 5, scope: !2308)
!2362 = !DILocation(line: 1128, column: 17, scope: !2324)
!2363 = !DILocation(line: 1119, column: 27, scope: !2308)
!2364 = !DILocalVariable(name: "self", arg: 1, scope: !2365, file: !2366, line: 1012, type: !2367)
!2365 = distinct !DISubprogram(name: "unwrap<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h0d7120ddc54efc88E", scope: !2367, file: !2366, line: 1012, type: !2378, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !226, declaration: !2380, retainedNodes: !2381)
!2366 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "8e84075e2ccbbe34be511c8d1355506d")
!2367 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !92, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !2368, templateParams: !98, identifier: "23b42ad4918f48bbb0d7df30a3e65f21")
!2368 = !{!2369}
!2369 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2367, file: !5, size: 64, align: 32, elements: !2370, templateParams: !98, identifier: "fff0cc91bd07d4e2a6f41aa96659bb8", discriminator: !2377)
!2370 = !{!2371, !2373}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2369, file: !5, baseType: !2372, size: 64, align: 32, extraData: i32 0)
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2367, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !226, identifier: "16f3611ef7370fd7f09fc668dc1c16f8")
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2369, file: !5, baseType: !2374, size: 64, align: 32, extraData: i32 1)
!2374 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2367, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !2375, templateParams: !226, identifier: "9bb7e929a7e81f45f834925bbfee816")
!2375 = !{!2376}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2374, file: !5, baseType: !158, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!2377 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!2378 = !DISubroutineType(types: !2379)
!2379 = !{!158, !2367, !354}
!2380 = !DISubprogram(name: "unwrap<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h0d7120ddc54efc88E", scope: !2367, file: !2366, line: 1012, type: !2378, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !226)
!2381 = !{!2364, !2382}
!2382 = !DILocalVariable(name: "val", scope: !2383, file: !2366, line: 1014, type: !158, align: 32)
!2383 = distinct !DILexicalBlock(scope: !2365, file: !2366, line: 1014, column: 13)
!2384 = !DILocation(line: 1012, column: 25, scope: !2365, inlinedAt: !2385)
!2385 = distinct !DILocation(line: 1119, column: 50, scope: !2308)
!2386 = !DILocation(line: 1013, column: 15, scope: !2365, inlinedAt: !2385)
!2387 = !DILocation(line: 1013, column: 9, scope: !2365, inlinedAt: !2385)
!2388 = !DILocation(line: 1015, column: 21, scope: !2365, inlinedAt: !2385)
!2389 = !DILocation(line: 1014, column: 18, scope: !2365, inlinedAt: !2385)
!2390 = !DILocation(line: 1014, column: 18, scope: !2383, inlinedAt: !2385)
!2391 = !DILocation(line: 1119, column: 19, scope: !2308)
!2392 = !DILocation(line: 1119, column: 5, scope: !2308)
!2393 = !DILocation(line: 2339, column: 35, scope: !1578, inlinedAt: !2394)
!2394 = distinct !DILocation(line: 1121, column: 30, scope: !2308)
!2395 = !DILocation(line: 2339, column: 41, scope: !1578, inlinedAt: !2394)
!2396 = !DILocation(line: 2340, column: 13, scope: !1578, inlinedAt: !2394)
!2397 = !DILocation(line: 1121, column: 22, scope: !2308)
!2398 = !DILocation(line: 1121, column: 9, scope: !2318)
!2399 = !DILocation(line: 1123, column: 8, scope: !2318)
!2400 = !DILocation(line: 1124, column: 25, scope: !2318)
!2401 = !DILocation(line: 1124, column: 51, scope: !2318)
!2402 = !DILocation(line: 1124, column: 13, scope: !2320)
!2403 = !DILocation(line: 1125, column: 51, scope: !2322)
!2404 = !DILocation(line: 1147, column: 9, scope: !2318)
!2405 = !DILocation(line: 1125, column: 38, scope: !2322)
!2406 = !DILocation(line: 1125, column: 28, scope: !2322)
!2407 = !DILocation(line: 1125, column: 16, scope: !2322)
!2408 = !DILocation(line: 1125, column: 21, scope: !2322)
!2409 = !DILocation(line: 1129, column: 18, scope: !2322)
!2410 = !DILocation(line: 1130, column: 36, scope: !2322)
!2411 = !DILocation(line: 1168, column: 2, scope: !2308)
!2412 = !DILocation(line: 1130, column: 32, scope: !2322)
!2413 = !DILocation(line: 1130, column: 18, scope: !2322)
!2414 = !DILocation(line: 1131, column: 36, scope: !2322)
!2415 = !DILocation(line: 1131, column: 32, scope: !2322)
!2416 = !DILocation(line: 1131, column: 18, scope: !2322)
!2417 = !DILocation(line: 1132, column: 40, scope: !2348)
!2418 = !DILocation(line: 1132, column: 20, scope: !2348)
!2419 = !DILocation(line: 1132, column: 27, scope: !2348)
!2420 = !DILocation(line: 1132, column: 30, scope: !2348)
!2421 = !DILocation(line: 1132, column: 34, scope: !2348)
!2422 = !DILocation(line: 1135, column: 17, scope: !2348)
!2423 = !DILocation(line: 1135, column: 30, scope: !2348)
!2424 = !DILocation(line: 1135, column: 24, scope: !2348)
!2425 = !DILocation(line: 1136, column: 17, scope: !2348)
!2426 = !DILocation(line: 1136, column: 30, scope: !2348)
!2427 = !DILocation(line: 1136, column: 24, scope: !2348)
!2428 = !DILocation(line: 1137, column: 17, scope: !2348)
!2429 = !DILocation(line: 1137, column: 30, scope: !2348)
!2430 = !DILocation(line: 1137, column: 24, scope: !2348)
!2431 = !DILocation(line: 1112, column: 1, scope: !2308)
!2432 = distinct !DISubprogram(name: "read_u16_le", linkageName: "_ZN11miniz_oxide7inflate4core11read_u16_le17he8ebc9bb04892b41E", scope: !36, file: !729, line: 527, type: !2433, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2435)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!105, !600}
!2435 = !{!2436, !2437, !2439}
!2436 = !DILocalVariable(name: "iter", arg: 1, scope: !2432, file: !729, line: 527, type: !600)
!2437 = !DILocalVariable(name: "ret", scope: !2438, file: !729, line: 528, type: !105, align: 16)
!2438 = distinct !DILexicalBlock(scope: !2432, file: !729, line: 528, column: 5)
!2439 = !DILocalVariable(name: "two_bytes", scope: !2440, file: !729, line: 529, type: !2441, align: 8)
!2440 = distinct !DILexicalBlock(scope: !2432, file: !729, line: 529, column: 9)
!2441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 16, align: 8, elements: !2442)
!2442 = !{!2443}
!2443 = !DISubrange(count: 2, lowerBound: 0)
!2444 = !DILocation(line: 527, column: 16, scope: !2432)
!2445 = !DILocation(line: 529, column: 13, scope: !2440)
!2446 = !DILocation(line: 74, column: 27, scope: !1254, inlinedAt: !2447)
!2447 = distinct !DILocation(line: 529, column: 30, scope: !2432)
!2448 = !DILocation(line: 75, column: 9, scope: !1254, inlinedAt: !2447)
!2449 = !DILocation(line: 76, column: 6, scope: !1254, inlinedAt: !2447)
!2450 = !DILocation(line: 529, column: 30, scope: !2432)
!2451 = !DILocation(line: 17, column: 14, scope: !1265, inlinedAt: !2452)
!2452 = distinct !DILocation(line: 529, column: 40, scope: !2432)
!2453 = !DILocation(line: 17, column: 21, scope: !1265, inlinedAt: !2452)
!2454 = !DILocation(line: 523, column: 14, scope: !1279, inlinedAt: !2455)
!2455 = distinct !DILocation(line: 18, column: 15, scope: !1265, inlinedAt: !2452)
!2456 = !DILocation(line: 523, column: 20, scope: !1279, inlinedAt: !2455)
!2457 = !DILocation(line: 430, column: 14, scope: !1289, inlinedAt: !2458)
!2458 = distinct !DILocation(line: 524, column: 23, scope: !1279, inlinedAt: !2455)
!2459 = !DILocation(line: 430, column: 20, scope: !1289, inlinedAt: !2458)
!2460 = !DILocation(line: 432, column: 32, scope: !1289, inlinedAt: !2458)
!2461 = !DILocation(line: 432, column: 16, scope: !1289, inlinedAt: !2458)
!2462 = !DILocation(line: 432, column: 21, scope: !1289, inlinedAt: !2458)
!2463 = !DILocation(line: 433, column: 16, scope: !1289, inlinedAt: !2458)
!2464 = !DILocation(line: 438, column: 13, scope: !1289, inlinedAt: !2458)
!2465 = !DILocation(line: 82, column: 5, scope: !1304, inlinedAt: !2466)
!2466 = distinct !DILocation(line: 436, column: 24, scope: !1289, inlinedAt: !2458)
!2467 = !DILocation(line: 83, column: 5, scope: !1304, inlinedAt: !2466)
!2468 = !DILocation(line: 84, column: 5, scope: !1304, inlinedAt: !2466)
!2469 = !DILocation(line: 86, column: 15, scope: !1304, inlinedAt: !2466)
!2470 = !DILocation(line: 86, column: 9, scope: !1315, inlinedAt: !2466)
!2471 = !DILocation(line: 88, column: 24, scope: !1315, inlinedAt: !2466)
!2472 = !DILocation(line: 88, column: 9, scope: !1318, inlinedAt: !2466)
!2473 = !DILocation(line: 90, column: 2, scope: !1304, inlinedAt: !2466)
!2474 = !DILocation(line: 19, column: 6, scope: !1265, inlinedAt: !2452)
!2475 = !DILocation(line: 529, column: 40, scope: !2432)
!2476 = !DILocation(line: 529, column: 46, scope: !2432)
!2477 = !DILocation(line: 529, column: 25, scope: !2432)
!2478 = !DILocation(line: 529, column: 57, scope: !2432)
!2479 = !DILocation(line: 530, column: 9, scope: !2440)
!2480 = !DILocation(line: 528, column: 9, scope: !2438)
!2481 = !DILocation(line: 84, column: 20, scope: !624, inlinedAt: !2482)
!2482 = distinct !DILocation(line: 532, column: 10, scope: !2438)
!2483 = !DILocation(line: 84, column: 31, scope: !624, inlinedAt: !2482)
!2484 = !DILocation(line: 85, column: 23, scope: !624, inlinedAt: !2482)
!2485 = !DILocation(line: 17, column: 14, scope: !635, inlinedAt: !2486)
!2486 = distinct !DILocation(line: 85, column: 33, scope: !624, inlinedAt: !2482)
!2487 = !DILocation(line: 17, column: 21, scope: !635, inlinedAt: !2486)
!2488 = !DILocation(line: 18, column: 15, scope: !635, inlinedAt: !2486)
!2489 = !DILocation(line: 85, column: 33, scope: !624, inlinedAt: !2482)
!2490 = !DILocation(line: 85, column: 9, scope: !624, inlinedAt: !2482)
!2491 = !DILocation(line: 534, column: 2, scope: !2432)
!2492 = distinct !DISubprogram(name: "fast_lookup", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E", scope: !758, file: !729, line: 49, type: !2493, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !2496, retainedNodes: !2497)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!762, !2495, !108}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&miniz_oxide::inflate::core::HuffmanTable", baseType: !758, size: 32, align: 32, dwarfAddressSpace: 0)
!2496 = !DISubprogram(name: "fast_lookup", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable11fast_lookup17hdc909bf4e176b8b1E", scope: !758, file: !729, line: 49, type: !2493, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!2497 = !{!2498, !2499}
!2498 = !DILocalVariable(name: "self", arg: 1, scope: !2492, file: !729, line: 49, type: !2495)
!2499 = !DILocalVariable(name: "bit_buf", arg: 2, scope: !2492, file: !729, line: 49, type: !108)
!2500 = !DILocation(line: 49, column: 20, scope: !2492)
!2501 = !DILocation(line: 49, column: 27, scope: !2492)
!2502 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2503)
!2503 = distinct !DILocation(line: 50, column: 33, scope: !2492)
!2504 = !DILocation(line: 50, column: 22, scope: !2492)
!2505 = !DILocation(line: 50, column: 9, scope: !2492)
!2506 = !DILocation(line: 51, column: 6, scope: !2492)
!2507 = distinct !DISubprogram(name: "tree_lookup", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable11tree_lookup17he82124e89c020007E", scope: !758, file: !729, line: 55, type: !2508, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !2514, retainedNodes: !2515)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!2510, !2495, !7, !108, !37}
!2510 = !DICompositeType(tag: DW_TAG_structure_type, name: "(i32, u32)", file: !5, size: 64, align: 32, elements: !2511, templateParams: !98, identifier: "917433970a7c7e4efa32f3336f01e2e9")
!2511 = !{!2512, !2513}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2510, file: !5, baseType: !7, size: 32, align: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2510, file: !5, baseType: !108, size: 32, align: 32, offset: 32)
!2514 = !DISubprogram(name: "tree_lookup", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable11tree_lookup17he82124e89c020007E", scope: !758, file: !729, line: 55, type: !2508, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!2515 = !{!2516, !2517, !2518, !2519, !2520, !2522}
!2516 = !DILocalVariable(name: "self", arg: 1, scope: !2507, file: !729, line: 55, type: !2495)
!2517 = !DILocalVariable(name: "fast_symbol", arg: 2, scope: !2507, file: !729, line: 55, type: !7)
!2518 = !DILocalVariable(name: "bit_buf", arg: 3, scope: !2507, file: !729, line: 55, type: !108)
!2519 = !DILocalVariable(name: "code_len", arg: 4, scope: !2507, file: !729, line: 55, type: !37)
!2520 = !DILocalVariable(name: "symbol", scope: !2521, file: !729, line: 56, type: !7, align: 32)
!2521 = distinct !DILexicalBlock(scope: !2507, file: !729, line: 56, column: 9)
!2522 = !DILocalVariable(name: "tree_index", scope: !2523, file: !729, line: 62, type: !158, align: 32)
!2523 = distinct !DILexicalBlock(scope: !2521, file: !729, line: 62, column: 13)
!2524 = !DILocation(line: 55, column: 20, scope: !2507)
!2525 = !DILocation(line: 55, column: 27, scope: !2507)
!2526 = !DILocation(line: 55, column: 45, scope: !2507)
!2527 = !DILocation(line: 55, column: 65, scope: !2507)
!2528 = !DILocation(line: 56, column: 13, scope: !2521)
!2529 = !DILocation(line: 56, column: 26, scope: !2507)
!2530 = !DILocation(line: 59, column: 9, scope: !2521)
!2531 = !DILocation(line: 62, column: 32, scope: !2521)
!2532 = !DILocation(line: 62, column: 31, scope: !2521)
!2533 = !DILocation(line: 62, column: 54, scope: !2521)
!2534 = !DILocation(line: 62, column: 42, scope: !2521)
!2535 = !DILocation(line: 62, column: 41, scope: !2521)
!2536 = !DILocation(line: 62, column: 30, scope: !2521)
!2537 = !DILocation(line: 62, column: 17, scope: !2523)
!2538 = !DILocation(line: 68, column: 40, scope: !2523)
!2539 = !DILocation(line: 68, column: 27, scope: !2523)
!2540 = !DILocation(line: 68, column: 13, scope: !2523)
!2541 = !DILocation(line: 69, column: 32, scope: !2523)
!2542 = !DILocation(line: 69, column: 42, scope: !2523)
!2543 = !DILocation(line: 69, column: 58, scope: !2523)
!2544 = !DILocation(line: 69, column: 67, scope: !2523)
!2545 = !DILocalVariable(name: "small", arg: 1, scope: !2546, file: !1090, line: 78, type: !762)
!2546 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num64_$LT$impl$u20$core..convert..From$LT$i16$GT$$u20$for$u20$i32$GT$4from17h03f26860ddfe8cb8E", scope: !2547, file: !1090, line: 78, type: !2548, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2550)
!2547 = !DINamespace(name: "{impl#80}", scope: !1092)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!7, !762}
!2550 = !{!2545}
!2551 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !2552)
!2552 = distinct !DILocation(line: 69, column: 22, scope: !2523)
!2553 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !2552)
!2554 = !DILocation(line: 69, column: 13, scope: !2523)
!2555 = !DILocation(line: 70, column: 13, scope: !2523)
!2556 = !DILocation(line: 71, column: 16, scope: !2523)
!2557 = !DILocation(line: 77, column: 10, scope: !2521)
!2558 = !DILocation(line: 77, column: 28, scope: !2521)
!2559 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !2560)
!2560 = distinct !DILocation(line: 77, column: 18, scope: !2521)
!2561 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !2560)
!2562 = !DILocation(line: 78, column: 6, scope: !2507)
!2563 = distinct !DISubprogram(name: "new", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable3new17hc7a28ef46ef9e94dE", scope: !758, file: !729, line: 37, type: !2564, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !2566)
!2564 = !DISubroutineType(types: !2565)
!2565 = !{!758}
!2566 = !DISubprogram(name: "new", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable3new17hc7a28ef46ef9e94dE", scope: !758, file: !729, line: 37, type: !2564, scopeLine: 37, flags: DIFlagPrototyped, spFlags: 0, templateParams: !98)
!2567 = !DILocation(line: 39, column: 22, scope: !2563)
!2568 = !DILocation(line: 40, column: 19, scope: !2563)
!2569 = !DILocation(line: 38, column: 9, scope: !2563)
!2570 = !DILocation(line: 42, column: 6, scope: !2563)
!2571 = distinct !DISubprogram(name: "lookup", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE", scope: !758, file: !729, line: 88, type: !2572, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !2574, retainedNodes: !2575)
!2572 = !DISubroutineType(types: !2573)
!2573 = !{!2510, !2495, !108}
!2574 = !DISubprogram(name: "lookup", linkageName: "_ZN11miniz_oxide7inflate4core12HuffmanTable6lookup17h825100728145ec0eE", scope: !758, file: !729, line: 88, type: !2572, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!2575 = !{!2576, !2577, !2578, !2580}
!2576 = !DILocalVariable(name: "self", arg: 1, scope: !2571, file: !729, line: 88, type: !2495)
!2577 = !DILocalVariable(name: "bit_buf", arg: 2, scope: !2571, file: !729, line: 88, type: !108)
!2578 = !DILocalVariable(name: "symbol", scope: !2579, file: !729, line: 89, type: !7, align: 32)
!2579 = distinct !DILexicalBlock(scope: !2571, file: !729, line: 89, column: 9)
!2580 = !DILocalVariable(name: "length", scope: !2581, file: !729, line: 91, type: !108, align: 32)
!2581 = distinct !DILexicalBlock(scope: !2579, file: !729, line: 91, column: 13)
!2582 = !DILocation(line: 88, column: 15, scope: !2571)
!2583 = !DILocation(line: 88, column: 22, scope: !2571)
!2584 = !DILocation(line: 89, column: 27, scope: !2571)
!2585 = !DILocation(line: 89, column: 48, scope: !2571)
!2586 = !DILocation(line: 89, column: 13, scope: !2579)
!2587 = !DILocation(line: 90, column: 12, scope: !2579)
!2588 = !DILocation(line: 95, column: 18, scope: !2579)
!2589 = !DILocation(line: 91, column: 26, scope: !2579)
!2590 = !DILocation(line: 91, column: 17, scope: !2581)
!2591 = !DILocation(line: 92, column: 13, scope: !2581)
!2592 = !DILocation(line: 90, column: 9, scope: !2579)
!2593 = !DILocation(line: 97, column: 6, scope: !2571)
!2594 = distinct !DISubprogram(name: "end_of_input", linkageName: "_ZN11miniz_oxide7inflate4core12end_of_input17h2a8a5f252d6b9a2aE", scope: !36, file: !729, line: 772, type: !2595, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2597)
!2595 = !DISubroutineType(types: !2596)
!2596 = !{!1875, !108}
!2597 = !{!2598}
!2598 = !DILocalVariable(name: "flags", arg: 1, scope: !2594, file: !729, line: 772, type: !108)
!2599 = !DILocation(line: 772, column: 23, scope: !2594)
!2600 = !DILocation(line: 773, column: 20, scope: !2594)
!2601 = !DILocation(line: 776, column: 9, scope: !2594)
!2602 = !DILocation(line: 773, column: 17, scope: !2594)
!2603 = !DILocation(line: 774, column: 9, scope: !2594)
!2604 = !DILocation(line: 773, column: 5, scope: !2594)
!2605 = !DILocation(line: 778, column: 2, scope: !2594)
!2606 = distinct !DISubprogram(name: "pad_to_bytes<miniz_oxide::inflate::core::decompress::{closure_env#3}>", linkageName: "_ZN11miniz_oxide7inflate4core12pad_to_bytes17h0584dcd0c0b46f8fE", scope: !36, file: !729, line: 763, type: !2607, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !2616, retainedNodes: !2609)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!1875, !1441, !600, !108, !2201}
!2609 = !{!2610, !2611, !2612, !2613, !2614}
!2610 = !DILocalVariable(name: "l", arg: 1, scope: !2606, file: !729, line: 763, type: !1441)
!2611 = !DILocalVariable(name: "in_iter", arg: 2, scope: !2606, file: !729, line: 763, type: !600)
!2612 = !DILocalVariable(name: "flags", arg: 3, scope: !2606, file: !729, line: 763, type: !108)
!2613 = !DILocalVariable(name: "f", arg: 4, scope: !2606, file: !729, line: 763, type: !2201)
!2614 = !DILocalVariable(name: "num_bits", scope: !2615, file: !729, line: 767, type: !108, align: 32)
!2615 = distinct !DILexicalBlock(scope: !2606, file: !729, line: 767, column: 5)
!2616 = !{!2617}
!2617 = !DITemplateTypeParameter(name: "F", type: !2201)
!2618 = !DILocation(line: 763, column: 20, scope: !2606)
!2619 = !DILocation(line: 763, column: 39, scope: !2606)
!2620 = !DILocation(line: 763, column: 67, scope: !2606)
!2621 = !DILocation(line: 763, column: 79, scope: !2606)
!2622 = !DILocation(line: 767, column: 20, scope: !2606)
!2623 = !DILocation(line: 767, column: 9, scope: !2615)
!2624 = !DILocation(line: 768, column: 5, scope: !2615)
!2625 = !DILocation(line: 769, column: 2, scope: !2606)
!2626 = distinct !DISubprogram(name: "pad_to_bytes<miniz_oxide::inflate::core::decompress::{closure_env#15}>", linkageName: "_ZN11miniz_oxide7inflate4core12pad_to_bytes17hdb3a192994c0f1d1E", scope: !36, file: !729, line: 763, type: !2627, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !2636, retainedNodes: !2629)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!1875, !1441, !600, !108, !2023}
!2629 = !{!2630, !2631, !2632, !2633, !2634}
!2630 = !DILocalVariable(name: "l", arg: 1, scope: !2626, file: !729, line: 763, type: !1441)
!2631 = !DILocalVariable(name: "in_iter", arg: 2, scope: !2626, file: !729, line: 763, type: !600)
!2632 = !DILocalVariable(name: "flags", arg: 3, scope: !2626, file: !729, line: 763, type: !108)
!2633 = !DILocalVariable(name: "f", arg: 4, scope: !2626, file: !729, line: 763, type: !2023)
!2634 = !DILocalVariable(name: "num_bits", scope: !2635, file: !729, line: 767, type: !108, align: 32)
!2635 = distinct !DILexicalBlock(scope: !2626, file: !729, line: 767, column: 5)
!2636 = !{!2637}
!2637 = !DITemplateTypeParameter(name: "F", type: !2023)
!2638 = !DILocation(line: 763, column: 20, scope: !2626)
!2639 = !DILocation(line: 763, column: 39, scope: !2626)
!2640 = !DILocation(line: 763, column: 67, scope: !2626)
!2641 = !DILocation(line: 763, column: 79, scope: !2626)
!2642 = !DILocation(line: 767, column: 20, scope: !2626)
!2643 = !DILocation(line: 767, column: 9, scope: !2635)
!2644 = !DILocation(line: 768, column: 5, scope: !2635)
!2645 = !DILocation(line: 769, column: 2, scope: !2626)
!2646 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#15}>", linkageName: "_ZN11miniz_oxide7inflate4core12pad_to_bytes28_$u7b$$u7b$closure$u7d$$u7d$17h2e691ca5772ee0efE", scope: !2647, file: !729, line: 768, type: !2648, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !2636, retainedNodes: !2653)
!2647 = !DINamespace(name: "pad_to_bytes", scope: !36)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{!1875, !2650, !1441, !108}
!2650 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#15}>", scope: !2647, file: !5, align: 8, elements: !2651, templateParams: !98, identifier: "86e185706dfe0dbb33d5b69affcf9450")
!2651 = !{!2652}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2650, file: !5, baseType: !2023, align: 8)
!2653 = !{!2654, !2655, !2656}
!2654 = !DILocalVariable(name: "l", arg: 2, scope: !2646, file: !729, line: 768, type: !1441)
!2655 = !DILocalVariable(name: "f", scope: !2646, file: !729, line: 763, type: !2023, align: 8)
!2656 = !DILocalVariable(arg: 3, scope: !2646, file: !729, line: 768, type: !108)
!2657 = !DILocation(line: 763, column: 79, scope: !2646)
!2658 = !DILocation(line: 768, column: 45, scope: !2646)
!2659 = !DILocation(line: 768, column: 48, scope: !2646)
!2660 = !DILocation(line: 768, column: 51, scope: !2646)
!2661 = !DILocation(line: 768, column: 55, scope: !2646)
!2662 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#3}>", linkageName: "_ZN11miniz_oxide7inflate4core12pad_to_bytes28_$u7b$$u7b$closure$u7d$$u7d$17h86203c64ed86a615E", scope: !2647, file: !729, line: 768, type: !2663, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !2616, retainedNodes: !2668)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!1875, !2665, !1441, !108}
!2665 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#3}>", scope: !2647, file: !5, align: 8, elements: !2666, templateParams: !98, identifier: "f30607f1e1870eac65c58798cdbc10e9")
!2666 = !{!2667}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2665, file: !5, baseType: !2201, align: 8)
!2668 = !{!2669, !2670, !2671}
!2669 = !DILocalVariable(name: "l", arg: 2, scope: !2662, file: !729, line: 768, type: !1441)
!2670 = !DILocalVariable(name: "f", scope: !2662, file: !729, line: 763, type: !2201, align: 8)
!2671 = !DILocalVariable(arg: 3, scope: !2662, file: !729, line: 768, type: !108)
!2672 = !DILocation(line: 763, column: 79, scope: !2662)
!2673 = !DILocation(line: 768, column: 45, scope: !2662)
!2674 = !DILocation(line: 768, column: 48, scope: !2662)
!2675 = !DILocation(line: 768, column: 51, scope: !2662)
!2676 = !DILocation(line: 768, column: 55, scope: !2662)
!2677 = distinct !DISubprogram(name: "reverse_bits", linkageName: "_ZN11miniz_oxide7inflate4core12reverse_bits17hfe29b955f271108dE", scope: !36, file: !729, line: 805, type: !2678, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2680)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{!105, !105}
!2680 = !{!2681}
!2681 = !DILocalVariable(name: "n", arg: 1, scope: !2677, file: !729, line: 805, type: !105)
!2682 = !DILocation(line: 805, column: 23, scope: !2677)
!2683 = !DILocalVariable(name: "self", arg: 1, scope: !2684, file: !997, line: 487, type: !105)
!2684 = distinct !DISubprogram(name: "reverse_bits", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$12reverse_bits17h2b339a0833746c2fE", scope: !2685, file: !997, line: 487, type: !2678, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2686)
!2685 = !DINamespace(name: "{impl#7}", scope: !999)
!2686 = !{!2683}
!2687 = !DILocation(line: 487, column: 35, scope: !2684, inlinedAt: !2688)
!2688 = distinct !DILocation(line: 817, column: 7, scope: !2677)
!2689 = !DILocation(line: 488, column: 13, scope: !2684, inlinedAt: !2688)
!2690 = !DILocation(line: 818, column: 2, scope: !2677)
!2691 = distinct !DISubprogram(name: "decompress_fast", linkageName: "_ZN11miniz_oxide7inflate4core15decompress_fast17h494e1c72c5e204c5E", scope: !36, file: !729, line: 1179, type: !2692, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2698)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!2694, !737, !600, !673, !108, !1441, !158}
!2694 = !DICompositeType(tag: DW_TAG_structure_type, name: "(miniz_oxide::inflate::TINFLStatus, miniz_oxide::inflate::core::State)", file: !5, size: 16, align: 8, elements: !2695, templateParams: !98, identifier: "a73bcde98bcf179c5b48168371155b67")
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2694, file: !5, baseType: !24, size: 8, align: 8)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2694, file: !5, baseType: !35, size: 8, align: 8, offset: 8)
!2698 = !{!2699, !2700, !2701, !2702, !2703, !2704, !2705, !2707, !2709, !2711, !2713, !2714, !2716, !2717, !2719, !2721, !2722, !2724}
!2699 = !DILocalVariable(name: "r", arg: 1, scope: !2691, file: !729, line: 1180, type: !737)
!2700 = !DILocalVariable(name: "in_iter", arg: 2, scope: !2691, file: !729, line: 1181, type: !600)
!2701 = !DILocalVariable(name: "out_buf", arg: 3, scope: !2691, file: !729, line: 1182, type: !673)
!2702 = !DILocalVariable(name: "flags", arg: 4, scope: !2691, file: !729, line: 1183, type: !108)
!2703 = !DILocalVariable(name: "local_vars", arg: 5, scope: !2691, file: !729, line: 1184, type: !1441)
!2704 = !DILocalVariable(name: "out_buf_size_mask", arg: 6, scope: !2691, file: !729, line: 1185, type: !158)
!2705 = !DILocalVariable(name: "l", scope: !2706, file: !729, line: 1189, type: !805, align: 32)
!2706 = distinct !DILexicalBlock(scope: !2691, file: !729, line: 1189, column: 5)
!2707 = !DILocalVariable(name: "state", scope: !2708, file: !729, line: 1190, type: !35, align: 8)
!2708 = distinct !DILexicalBlock(scope: !2706, file: !729, line: 1190, column: 5)
!2709 = !DILocalVariable(name: "status", scope: !2710, file: !729, line: 1192, type: !24, align: 8)
!2710 = distinct !DILexicalBlock(scope: !2708, file: !729, line: 1192, column: 5)
!2711 = !DILocalVariable(name: "symbol", scope: !2712, file: !729, line: 1208, type: !7, align: 32)
!2712 = distinct !DILexicalBlock(scope: !2708, file: !729, line: 1208, column: 13)
!2713 = !DILocalVariable(name: "code_len", scope: !2712, file: !729, line: 1208, type: !108, align: 32)
!2714 = !DILocalVariable(name: "symbol", scope: !2715, file: !729, line: 1223, type: !7, align: 32)
!2715 = distinct !DILexicalBlock(scope: !2712, file: !729, line: 1223, column: 17)
!2716 = !DILocalVariable(name: "code_len", scope: !2715, file: !729, line: 1223, type: !108, align: 32)
!2717 = !DILocalVariable(name: "extra_bits", scope: !2718, file: !729, line: 1265, type: !108, align: 32)
!2718 = distinct !DILexicalBlock(scope: !2708, file: !729, line: 1265, column: 17)
!2719 = !DILocalVariable(name: "symbol", scope: !2720, file: !729, line: 1277, type: !7, align: 32)
!2720 = distinct !DILexicalBlock(scope: !2708, file: !729, line: 1277, column: 13)
!2721 = !DILocalVariable(name: "code_len", scope: !2720, file: !729, line: 1277, type: !108, align: 32)
!2722 = !DILocalVariable(name: "extra_bits", scope: !2723, file: !729, line: 1291, type: !108, align: 32)
!2723 = distinct !DILexicalBlock(scope: !2720, file: !729, line: 1291, column: 17)
!2724 = !DILocalVariable(name: "position", scope: !2725, file: !729, line: 1297, type: !158, align: 32)
!2725 = distinct !DILexicalBlock(scope: !2720, file: !729, line: 1297, column: 13)
!2726 = !DILocation(line: 1180, column: 5, scope: !2691)
!2727 = !DILocation(line: 1181, column: 5, scope: !2691)
!2728 = !DILocation(line: 1182, column: 5, scope: !2691)
!2729 = !DILocation(line: 1183, column: 5, scope: !2691)
!2730 = !DILocation(line: 1184, column: 5, scope: !2691)
!2731 = !DILocation(line: 1185, column: 5, scope: !2691)
!2732 = !DILocation(line: 1189, column: 9, scope: !2706)
!2733 = !DILocation(line: 1190, column: 9, scope: !2708)
!2734 = !DILocation(line: 1192, column: 9, scope: !2710)
!2735 = !DILocation(line: 1277, column: 18, scope: !2720)
!2736 = !DILocation(line: 1189, column: 17, scope: !2691)
!2737 = !DILocation(line: 1192, column: 31, scope: !2708)
!2738 = !DILocation(line: 1193, column: 9, scope: !2708)
!2739 = !DILocation(line: 1194, column: 9, scope: !2708)
!2740 = !DILocation(line: 1201, column: 24, scope: !2708)
!2741 = !DILocation(line: 1201, column: 16, scope: !2708)
!2742 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !2743)
!2743 = distinct !DILocation(line: 1201, column: 54, scope: !2708)
!2744 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !2743)
!2745 = !DILocation(line: 1201, column: 46, scope: !2708)
!2746 = !DILocation(line: 1202, column: 17, scope: !2708)
!2747 = !DILocation(line: 1203, column: 26, scope: !2708)
!2748 = !DILocation(line: 0, scope: !2749)
!2749 = !DILexicalBlockFile(scope: !2708, file: !507, discriminator: 0)
!2750 = !DILocation(line: 555, column: 20, scope: !1438, inlinedAt: !2751)
!2751 = distinct !DILocation(line: 1206, column: 13, scope: !2708)
!2752 = !DILocation(line: 555, column: 39, scope: !1438, inlinedAt: !2751)
!2753 = !DILocation(line: 557, column: 8, scope: !1438, inlinedAt: !2751)
!2754 = !DILocation(line: 558, column: 38, scope: !1438, inlinedAt: !2751)
!2755 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2756)
!2756 = distinct !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2751)
!2757 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2756)
!2758 = !DILocation(line: 558, column: 63, scope: !1438, inlinedAt: !2751)
!2759 = !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2751)
!2760 = !DILocation(line: 558, column: 9, scope: !1438, inlinedAt: !2751)
!2761 = !DILocation(line: 559, column: 9, scope: !1438, inlinedAt: !2751)
!2762 = !DILocation(line: 557, column: 5, scope: !1438, inlinedAt: !2751)
!2763 = !DILocation(line: 1208, column: 38, scope: !2708)
!2764 = !DILocation(line: 1208, column: 68, scope: !2708)
!2765 = !DILocation(line: 1208, column: 61, scope: !2708)
!2766 = !DILocation(line: 1208, column: 18, scope: !2708)
!2767 = !DILocation(line: 1208, column: 18, scope: !2712)
!2768 = !DILocation(line: 1208, column: 26, scope: !2708)
!2769 = !DILocation(line: 1208, column: 26, scope: !2712)
!2770 = !DILocation(line: 1209, column: 13, scope: !2712)
!2771 = !DILocation(line: 1210, column: 13, scope: !2712)
!2772 = !DILocation(line: 1211, column: 13, scope: !2712)
!2773 = !DILocation(line: 1213, column: 17, scope: !2712)
!2774 = !DILocation(line: 1213, column: 16, scope: !2712)
!2775 = !DILocation(line: 555, column: 20, scope: !1438, inlinedAt: !2776)
!2776 = distinct !DILocation(line: 1220, column: 21, scope: !2712)
!2777 = !DILocation(line: 555, column: 39, scope: !1438, inlinedAt: !2776)
!2778 = !DILocation(line: 557, column: 8, scope: !1438, inlinedAt: !2776)
!2779 = !DILocation(line: 558, column: 38, scope: !1438, inlinedAt: !2776)
!2780 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2781)
!2781 = distinct !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2776)
!2782 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2781)
!2783 = !DILocation(line: 558, column: 63, scope: !1438, inlinedAt: !2776)
!2784 = !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2776)
!2785 = !DILocation(line: 558, column: 9, scope: !1438, inlinedAt: !2776)
!2786 = !DILocation(line: 559, column: 9, scope: !1438, inlinedAt: !2776)
!2787 = !DILocation(line: 557, column: 5, scope: !1438, inlinedAt: !2776)
!2788 = !DILocation(line: 1223, column: 42, scope: !2712)
!2789 = !DILocation(line: 1223, column: 72, scope: !2712)
!2790 = !DILocation(line: 1223, column: 65, scope: !2712)
!2791 = !DILocation(line: 1223, column: 22, scope: !2712)
!2792 = !DILocation(line: 1223, column: 22, scope: !2715)
!2793 = !DILocation(line: 1223, column: 30, scope: !2712)
!2794 = !DILocation(line: 1223, column: 30, scope: !2715)
!2795 = !DILocation(line: 1224, column: 17, scope: !2715)
!2796 = !DILocation(line: 1241, column: 9, scope: !2708)
!2797 = !DILocation(line: 1242, column: 12, scope: !2708)
!2798 = !DILocation(line: 1225, column: 17, scope: !2715)
!2799 = !DILocation(line: 1228, column: 36, scope: !2715)
!2800 = !DILocation(line: 1228, column: 25, scope: !2715)
!2801 = !DILocation(line: 1229, column: 20, scope: !2715)
!2802 = !DILocation(line: 1235, column: 40, scope: !2715)
!2803 = !DILocation(line: 1235, column: 29, scope: !2715)
!2804 = !DILocation(line: 1230, column: 21, scope: !2715)
!2805 = !DILocation(line: 0, scope: !2806)
!2806 = !DILexicalBlockFile(scope: !2712, file: !507, discriminator: 0)
!2807 = !DILocation(line: 1244, column: 19, scope: !2708)
!2808 = !DILocation(line: 1245, column: 22, scope: !2708)
!2809 = !DILocation(line: 1245, column: 13, scope: !2708)
!2810 = !DILocation(line: 1246, column: 19, scope: !2708)
!2811 = !DILocation(line: 1320, column: 19, scope: !2710)
!2812 = !DILocation(line: 1320, column: 5, scope: !2710)
!2813 = !DILocation(line: 1321, column: 6, scope: !2710)
!2814 = !DILocation(line: 1321, column: 14, scope: !2710)
!2815 = !DILocation(line: 1322, column: 2, scope: !2691)
!2816 = !DILocation(line: 1257, column: 27, scope: !2708)
!2817 = !DILocation(line: 1257, column: 41, scope: !2708)
!2818 = !DILocation(line: 1257, column: 40, scope: !2708)
!2819 = !DILocation(line: 1249, column: 19, scope: !2708)
!2820 = !DILocation(line: 1250, column: 22, scope: !2708)
!2821 = !DILocation(line: 1250, column: 13, scope: !2708)
!2822 = !DILocation(line: 1257, column: 13, scope: !2708)
!2823 = !DILocation(line: 1258, column: 35, scope: !2708)
!2824 = !DILocation(line: 1258, column: 48, scope: !2708)
!2825 = !DILocation(line: 1258, column: 47, scope: !2708)
!2826 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2827)
!2827 = distinct !DILocation(line: 1258, column: 25, scope: !2708)
!2828 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2827)
!2829 = !DILocation(line: 1258, column: 13, scope: !2708)
!2830 = !DILocation(line: 555, column: 20, scope: !1438, inlinedAt: !2831)
!2831 = distinct !DILocation(line: 1263, column: 13, scope: !2708)
!2832 = !DILocation(line: 555, column: 39, scope: !1438, inlinedAt: !2831)
!2833 = !DILocation(line: 557, column: 8, scope: !1438, inlinedAt: !2831)
!2834 = !DILocation(line: 558, column: 38, scope: !1438, inlinedAt: !2831)
!2835 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2836)
!2836 = distinct !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2831)
!2837 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2836)
!2838 = !DILocation(line: 558, column: 63, scope: !1438, inlinedAt: !2831)
!2839 = !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2831)
!2840 = !DILocation(line: 558, column: 9, scope: !1438, inlinedAt: !2831)
!2841 = !DILocation(line: 559, column: 9, scope: !1438, inlinedAt: !2831)
!2842 = !DILocation(line: 557, column: 5, scope: !1438, inlinedAt: !2831)
!2843 = !DILocation(line: 1264, column: 16, scope: !2708)
!2844 = !DILocation(line: 555, column: 20, scope: !1438, inlinedAt: !2845)
!2845 = distinct !DILocation(line: 1274, column: 17, scope: !2708)
!2846 = !DILocation(line: 555, column: 39, scope: !1438, inlinedAt: !2845)
!2847 = !DILocation(line: 557, column: 8, scope: !1438, inlinedAt: !2845)
!2848 = !DILocation(line: 558, column: 38, scope: !1438, inlinedAt: !2845)
!2849 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2850)
!2850 = distinct !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2845)
!2851 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2850)
!2852 = !DILocation(line: 558, column: 63, scope: !1438, inlinedAt: !2845)
!2853 = !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2845)
!2854 = !DILocation(line: 558, column: 9, scope: !1438, inlinedAt: !2845)
!2855 = !DILocation(line: 559, column: 9, scope: !1438, inlinedAt: !2845)
!2856 = !DILocation(line: 557, column: 5, scope: !1438, inlinedAt: !2845)
!2857 = !DILocation(line: 1277, column: 42, scope: !2708)
!2858 = !DILocation(line: 1277, column: 70, scope: !2708)
!2859 = !DILocation(line: 1277, column: 63, scope: !2708)
!2860 = !DILocation(line: 1277, column: 18, scope: !2708)
!2861 = !DILocation(line: 1277, column: 30, scope: !2708)
!2862 = !DILocation(line: 1277, column: 30, scope: !2720)
!2863 = !DILocation(line: 1278, column: 13, scope: !2720)
!2864 = !DILocation(line: 1279, column: 13, scope: !2720)
!2865 = !DILocation(line: 1265, column: 34, scope: !2708)
!2866 = !DILocation(line: 1265, column: 53, scope: !2708)
!2867 = !DILocation(line: 1265, column: 47, scope: !2708)
!2868 = !DILocation(line: 1265, column: 46, scope: !2708)
!2869 = !DILocation(line: 1265, column: 21, scope: !2718)
!2870 = !DILocation(line: 1266, column: 31, scope: !2718)
!2871 = !DILocation(line: 1266, column: 17, scope: !2718)
!2872 = !DILocation(line: 1267, column: 41, scope: !2718)
!2873 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !2874)
!2874 = distinct !DILocation(line: 1267, column: 31, scope: !2718)
!2875 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !2874)
!2876 = !DILocation(line: 1267, column: 17, scope: !2718)
!2877 = !DILocation(line: 1268, column: 17, scope: !2718)
!2878 = !DILocation(line: 1264, column: 13, scope: !2708)
!2879 = !DILocation(line: 1280, column: 13, scope: !2720)
!2880 = !DILocation(line: 1281, column: 16, scope: !2720)
!2881 = !DILocation(line: 1286, column: 60, scope: !2720)
!2882 = !DILocation(line: 512, column: 43, scope: !2259, inlinedAt: !2883)
!2883 = distinct !DILocation(line: 1286, column: 27, scope: !2720)
!2884 = !DILocation(line: 515, column: 13, scope: !2259, inlinedAt: !2883)
!2885 = !DILocation(line: 515, column: 9, scope: !2264, inlinedAt: !2883)
!2886 = !DILocation(line: 2191, column: 37, scope: !2270, inlinedAt: !2887)
!2887 = distinct !DILocation(line: 516, column: 7, scope: !2264, inlinedAt: !2883)
!2888 = !DILocation(line: 2191, column: 43, scope: !2270, inlinedAt: !2887)
!2889 = !DILocation(line: 2192, column: 13, scope: !2270, inlinedAt: !2887)
!2890 = !DILocation(line: 1286, column: 13, scope: !2720)
!2891 = !DILocation(line: 1287, column: 32, scope: !2720)
!2892 = !DILocation(line: 1287, column: 42, scope: !2720)
!2893 = !DILocation(line: 1282, column: 23, scope: !2720)
!2894 = !DILocation(line: 1283, column: 26, scope: !2720)
!2895 = !DILocation(line: 0, scope: !2896)
!2896 = !DILexicalBlockFile(scope: !2720, file: !507, discriminator: 0)
!2897 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2898)
!2898 = distinct !DILocation(line: 1287, column: 22, scope: !2720)
!2899 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2898)
!2900 = !DILocation(line: 1287, column: 13, scope: !2720)
!2901 = !DILocation(line: 1289, column: 16, scope: !2720)
!2902 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !2903)
!2903 = distinct !DILocation(line: 1297, column: 36, scope: !2720)
!2904 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !2903)
!2905 = !DILocation(line: 1297, column: 36, scope: !2720)
!2906 = !DILocation(line: 1297, column: 17, scope: !2725)
!2907 = !DILocation(line: 1298, column: 17, scope: !2725)
!2908 = !DILocation(line: 18, column: 27, scope: !1138, inlinedAt: !2909)
!2909 = distinct !DILocation(line: 1298, column: 43, scope: !2725)
!2910 = !DILocation(line: 19, column: 9, scope: !1138, inlinedAt: !2909)
!2911 = !DILocation(line: 555, column: 20, scope: !1438, inlinedAt: !2912)
!2912 = distinct !DILocation(line: 1290, column: 17, scope: !2720)
!2913 = !DILocation(line: 555, column: 39, scope: !1438, inlinedAt: !2912)
!2914 = !DILocation(line: 557, column: 8, scope: !1438, inlinedAt: !2912)
!2915 = !DILocation(line: 558, column: 38, scope: !1438, inlinedAt: !2912)
!2916 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !2917)
!2917 = distinct !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2912)
!2918 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !2917)
!2919 = !DILocation(line: 558, column: 63, scope: !1438, inlinedAt: !2912)
!2920 = !DILocation(line: 558, column: 22, scope: !1438, inlinedAt: !2912)
!2921 = !DILocation(line: 558, column: 9, scope: !1438, inlinedAt: !2912)
!2922 = !DILocation(line: 559, column: 9, scope: !1438, inlinedAt: !2912)
!2923 = !DILocation(line: 557, column: 5, scope: !1438, inlinedAt: !2912)
!2924 = !DILocation(line: 1291, column: 34, scope: !2720)
!2925 = !DILocation(line: 1291, column: 53, scope: !2720)
!2926 = !DILocation(line: 1291, column: 47, scope: !2720)
!2927 = !DILocation(line: 1291, column: 46, scope: !2720)
!2928 = !DILocation(line: 1291, column: 21, scope: !2723)
!2929 = !DILocation(line: 1292, column: 31, scope: !2723)
!2930 = !DILocation(line: 1292, column: 17, scope: !2723)
!2931 = !DILocation(line: 1293, column: 41, scope: !2723)
!2932 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !2933)
!2933 = distinct !DILocation(line: 1293, column: 31, scope: !2723)
!2934 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !2933)
!2935 = !DILocation(line: 1293, column: 17, scope: !2723)
!2936 = !DILocation(line: 1294, column: 17, scope: !2723)
!2937 = !DILocation(line: 1289, column: 13, scope: !2720)
!2938 = !DILocation(line: 1300, column: 21, scope: !2725)
!2939 = !DILocation(line: 52, column: 26, scope: !1692, inlinedAt: !2940)
!2940 = distinct !DILocation(line: 1300, column: 47, scope: !2725)
!2941 = !DILocation(line: 53, column: 9, scope: !1692, inlinedAt: !2940)
!2942 = !DILocation(line: 54, column: 6, scope: !1692, inlinedAt: !2940)
!2943 = !DILocation(line: 1300, column: 47, scope: !2725)
!2944 = !DILocation(line: 1300, column: 20, scope: !2725)
!2945 = !DILocation(line: 1299, column: 21, scope: !2725)
!2946 = !DILocation(line: 1299, column: 20, scope: !2725)
!2947 = !DILocation(line: 1304, column: 23, scope: !2725)
!2948 = !DILocation(line: 1305, column: 23, scope: !2725)
!2949 = !DILocation(line: 57, column: 20, scope: !1593, inlinedAt: !2950)
!2950 = distinct !DILocation(line: 1309, column: 25, scope: !2725)
!2951 = !DILocation(line: 58, column: 9, scope: !1593, inlinedAt: !2950)
!2952 = !DILocation(line: 59, column: 6, scope: !1593, inlinedAt: !2950)
!2953 = !DILocation(line: 1309, column: 25, scope: !2725)
!2954 = !DILocation(line: 1311, column: 17, scope: !2725)
!2955 = !DILocation(line: 1312, column: 17, scope: !2725)
!2956 = !DILocation(line: 1308, column: 13, scope: !2725)
!2957 = !DILocation(line: 1316, column: 45, scope: !2725)
!2958 = !DILocation(line: 1316, column: 34, scope: !2725)
!2959 = !DILocation(line: 23, column: 25, scope: !1608, inlinedAt: !2960)
!2960 = distinct !DILocation(line: 1316, column: 21, scope: !2725)
!2961 = !DILocation(line: 23, column: 36, scope: !1608, inlinedAt: !2960)
!2962 = !DILocation(line: 24, column: 9, scope: !1608, inlinedAt: !2960)
!2963 = !DILocation(line: 1316, column: 21, scope: !2725)
!2964 = distinct !DISubprogram(name: "new", linkageName: "_ZN11miniz_oxide7inflate4core17DecompressorOxide3new17h3cb69b0a583d6dd2E", scope: !738, file: !729, line: 283, type: !2965, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !2967)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!738}
!2967 = !DISubprogram(name: "new", linkageName: "_ZN11miniz_oxide7inflate4core17DecompressorOxide3new17h3cb69b0a583d6dd2E", scope: !738, file: !729, line: 283, type: !2965, scopeLine: 283, flags: DIFlagPrototyped, spFlags: 0, templateParams: !98)
!2968 = !DILocation(line: 391, column: 26, scope: !2969, inlinedAt: !2971)
!2969 = distinct !DISubprogram(name: "default", linkageName: "_ZN88_$LT$miniz_oxide..inflate..core..DecompressorOxide$u20$as$u20$core..default..Default$GT$7default17h4f7efa860aee8dfcE", scope: !2970, file: !729, line: 378, type: !2965, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!2970 = !DINamespace(name: "{impl#2}", scope: !36)
!2971 = distinct !DILocation(line: 284, column: 9, scope: !2964)
!2972 = !DILocation(line: 395, column: 17, scope: !2969, inlinedAt: !2971)
!2973 = !DILocation(line: 396, column: 17, scope: !2969, inlinedAt: !2971)
!2974 = !DILocation(line: 397, column: 17, scope: !2969, inlinedAt: !2971)
!2975 = !DILocation(line: 394, column: 21, scope: !2969, inlinedAt: !2971)
!2976 = !DILocation(line: 399, column: 32, scope: !2969, inlinedAt: !2971)
!2977 = !DILocation(line: 400, column: 29, scope: !2969, inlinedAt: !2971)
!2978 = !DILocation(line: 401, column: 32, scope: !2969, inlinedAt: !2971)
!2979 = !DILocation(line: 402, column: 25, scope: !2969, inlinedAt: !2971)
!2980 = !DILocation(line: 403, column: 24, scope: !2969, inlinedAt: !2971)
!2981 = !DILocation(line: 379, column: 9, scope: !2969, inlinedAt: !2971)
!2982 = !DILocation(line: 285, column: 6, scope: !2964)
!2983 = distinct !DISubprogram(name: "start_static_table", linkageName: "_ZN11miniz_oxide7inflate4core18start_static_table17ha574721360599e59E", scope: !36, file: !729, line: 787, type: !2984, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !2986)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{null, !737}
!2986 = !{!2987}
!2987 = !DILocalVariable(name: "r", arg: 1, scope: !2983, file: !729, line: 787, type: !737)
!2988 = !DILocation(line: 787, column: 23, scope: !2983)
!2989 = !DILocation(line: 788, column: 5, scope: !2983)
!2990 = !DILocation(line: 789, column: 5, scope: !2983)
!2991 = !DILocation(line: 790, column: 5, scope: !2983)
!2992 = !DILocation(line: 790, column: 24, scope: !2983)
!2993 = !DILocation(line: 790, column: 33, scope: !2983)
!2994 = !DILocation(line: 791, column: 5, scope: !2983)
!2995 = !DILocation(line: 791, column: 24, scope: !2983)
!2996 = !DILocation(line: 791, column: 35, scope: !2983)
!2997 = !DILocation(line: 792, column: 5, scope: !2983)
!2998 = !DILocation(line: 792, column: 24, scope: !2983)
!2999 = !DILocation(line: 792, column: 35, scope: !2983)
!3000 = !DILocation(line: 793, column: 5, scope: !2983)
!3001 = !DILocation(line: 793, column: 24, scope: !2983)
!3002 = !DILocation(line: 793, column: 35, scope: !2983)
!3003 = !DILocation(line: 794, column: 5, scope: !2983)
!3004 = !DILocation(line: 794, column: 21, scope: !2983)
!3005 = !DILocation(line: 794, column: 29, scope: !2983)
!3006 = !DILocation(line: 795, column: 2, scope: !2983)
!3007 = distinct !DISubprogram(name: "decode_huffman_code<miniz_oxide::inflate::core::decompress::{closure_env#11}>", linkageName: "_ZN11miniz_oxide7inflate4core19decode_huffman_code17h493379bdce9e2514E", scope: !36, file: !729, line: 606, type: !3008, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3033, retainedNodes: !3010)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{!1875, !737, !1441, !158, !108, !600, !2169}
!3010 = !{!3011, !3012, !3013, !3014, !3015, !3016, !3017, !3019, !3021, !3023, !3025, !3027, !3029, !3031}
!3011 = !DILocalVariable(name: "r", arg: 1, scope: !3007, file: !729, line: 607, type: !737)
!3012 = !DILocalVariable(name: "l", arg: 2, scope: !3007, file: !729, line: 608, type: !1441)
!3013 = !DILocalVariable(name: "table", arg: 3, scope: !3007, file: !729, line: 609, type: !158)
!3014 = !DILocalVariable(name: "flags", arg: 4, scope: !3007, file: !729, line: 610, type: !108)
!3015 = !DILocalVariable(name: "in_iter", arg: 5, scope: !3007, file: !729, line: 611, type: !600)
!3016 = !DILocalVariable(name: "f", arg: 6, scope: !3007, file: !729, line: 612, type: !2169)
!3017 = !DILocalVariable(name: "temp", scope: !3018, file: !729, line: 635, type: !7, align: 32)
!3018 = distinct !DILexicalBlock(scope: !3007, file: !729, line: 635, column: 17)
!3019 = !DILocalVariable(name: "code_len", scope: !3020, file: !729, line: 637, type: !108, align: 32)
!3020 = distinct !DILexicalBlock(scope: !3018, file: !729, line: 637, column: 21)
!3021 = !DILocalVariable(name: "code_len", scope: !3022, file: !729, line: 643, type: !108, align: 32)
!3022 = distinct !DILexicalBlock(scope: !3018, file: !729, line: 643, column: 21)
!3023 = !DILocalVariable(name: "byte", scope: !3024, file: !729, line: 663, type: !37, align: 8)
!3024 = distinct !DILexicalBlock(scope: !3018, file: !729, line: 663, column: 17)
!3025 = !DILocalVariable(name: "a", scope: !3026, file: !729, line: 664, type: !1875, align: 8)
!3026 = distinct !DILexicalBlock(scope: !3024, file: !729, line: 667, column: 20)
!3027 = !DILocalVariable(name: "symbol", scope: !3028, file: !729, line: 690, type: !7, align: 32)
!3028 = distinct !DILexicalBlock(scope: !3007, file: !729, line: 690, column: 5)
!3029 = !DILocalVariable(name: "code_len", scope: !3030, file: !729, line: 691, type: !108, align: 32)
!3030 = distinct !DILexicalBlock(scope: !3028, file: !729, line: 691, column: 5)
!3031 = !DILocalVariable(name: "res", scope: !3032, file: !729, line: 701, type: !2510, align: 32)
!3032 = distinct !DILexicalBlock(scope: !3030, file: !729, line: 701, column: 9)
!3033 = !{!3034}
!3034 = !DITemplateTypeParameter(name: "F", type: !2169)
!3035 = !DILocation(line: 607, column: 5, scope: !3007)
!3036 = !DILocation(line: 608, column: 5, scope: !3007)
!3037 = !DILocation(line: 609, column: 5, scope: !3007)
!3038 = !DILocation(line: 610, column: 5, scope: !3007)
!3039 = !DILocation(line: 611, column: 5, scope: !3007)
!3040 = !DILocation(line: 612, column: 5, scope: !3007)
!3041 = !DILocation(line: 635, column: 21, scope: !3018)
!3042 = !DILocation(line: 643, column: 25, scope: !3022)
!3043 = !DILocation(line: 663, column: 21, scope: !3024)
!3044 = !DILocation(line: 690, column: 9, scope: !3028)
!3045 = !DILocation(line: 691, column: 9, scope: !3030)
!3046 = !DILocation(line: 619, column: 8, scope: !3007)
!3047 = !DILocation(line: 690, column: 32, scope: !3007)
!3048 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !3049)
!3049 = distinct !DILocation(line: 621, column: 20, scope: !3007)
!3050 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !3049)
!3051 = !DILocation(line: 621, column: 12, scope: !3007)
!3052 = !DILocation(line: 684, column: 42, scope: !3007)
!3053 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !3054)
!3054 = distinct !DILocation(line: 684, column: 26, scope: !3007)
!3055 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !3054)
!3056 = !DILocation(line: 684, column: 67, scope: !3007)
!3057 = !DILocation(line: 684, column: 26, scope: !3007)
!3058 = !DILocation(line: 635, column: 42, scope: !3007)
!3059 = !DILocation(line: 684, column: 13, scope: !3007)
!3060 = !DILocation(line: 685, column: 13, scope: !3007)
!3061 = !DILocation(line: 621, column: 9, scope: !3007)
!3062 = !DILocation(line: 635, column: 70, scope: !3007)
!3063 = !DILocation(line: 635, column: 58, scope: !3007)
!3064 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3065)
!3065 = distinct !DILocation(line: 635, column: 32, scope: !3007)
!3066 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3065)
!3067 = !DILocation(line: 635, column: 32, scope: !3007)
!3068 = !DILocation(line: 636, column: 20, scope: !3018)
!3069 = !DILocation(line: 642, column: 27, scope: !3018)
!3070 = !DILocation(line: 642, column: 57, scope: !3018)
!3071 = !DILocation(line: 637, column: 37, scope: !3018)
!3072 = !DILocation(line: 637, column: 36, scope: !3018)
!3073 = !DILocation(line: 637, column: 25, scope: !3020)
!3074 = !DILocation(line: 639, column: 24, scope: !3020)
!3075 = !DILocation(line: 663, column: 32, scope: !3018)
!3076 = !DILocation(line: 664, column: 45, scope: !3026)
!3077 = !DILocation(line: 664, column: 24, scope: !3026)
!3078 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !3079)
!3079 = distinct !DILocation(line: 643, column: 40, scope: !3018)
!3080 = !DILocation(line: 643, column: 40, scope: !3018)
!3081 = !DILocation(line: 646, column: 29, scope: !3022)
!3082 = !DILocation(line: 647, column: 36, scope: !3022)
!3083 = !DILocation(line: 647, column: 35, scope: !3022)
!3084 = !DILocation(line: 647, column: 45, scope: !3022)
!3085 = !DILocation(line: 647, column: 58, scope: !3022)
!3086 = !DILocation(line: 647, column: 44, scope: !3022)
!3087 = !DILocation(line: 647, column: 43, scope: !3022)
!3088 = !DILocation(line: 647, column: 34, scope: !3022)
!3089 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3090)
!3090 = distinct !DILocation(line: 645, column: 32, scope: !3022)
!3091 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3090)
!3092 = !DILocation(line: 645, column: 25, scope: !3022)
!3093 = !DILocation(line: 649, column: 25, scope: !3022)
!3094 = !DILocation(line: 650, column: 28, scope: !3022)
!3095 = !DILocation(line: 650, column: 41, scope: !3022)
!3096 = !DILocation(line: 650, column: 54, scope: !3022)
!3097 = !DILocation(line: 654, column: 24, scope: !3022)
!3098 = !DILocation(line: 639, column: 44, scope: !3020)
!3099 = !DILocation(line: 639, column: 43, scope: !3020)
!3100 = !DILocation(line: 668, column: 28, scope: !3026)
!3101 = !DILocation(line: 709, column: 1, scope: !3007)
!3102 = !DILocation(line: 672, column: 46, scope: !3024)
!3103 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !3104)
!3104 = distinct !DILocation(line: 672, column: 30, scope: !3024)
!3105 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !3104)
!3106 = !DILocation(line: 672, column: 55, scope: !3024)
!3107 = !DILocation(line: 672, column: 30, scope: !3024)
!3108 = !DILocation(line: 709, column: 2, scope: !3007)
!3109 = !DILocation(line: 672, column: 17, scope: !3024)
!3110 = !DILocation(line: 673, column: 17, scope: !3024)
!3111 = !DILocation(line: 675, column: 20, scope: !3024)
!3112 = !DILocation(line: 690, column: 60, scope: !3007)
!3113 = !DILocation(line: 690, column: 48, scope: !3007)
!3114 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3115)
!3115 = distinct !DILocation(line: 690, column: 22, scope: !3007)
!3116 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3115)
!3117 = !DILocation(line: 690, column: 22, scope: !3007)
!3118 = !DILocation(line: 693, column: 8, scope: !3030)
!3119 = !DILocation(line: 701, column: 19, scope: !3030)
!3120 = !DILocation(line: 697, column: 21, scope: !3030)
!3121 = !DILocation(line: 697, column: 20, scope: !3030)
!3122 = !DILocation(line: 697, column: 9, scope: !3030)
!3123 = !DILocation(line: 699, column: 9, scope: !3030)
!3124 = !DILocation(line: 693, column: 5, scope: !3030)
!3125 = !DILocation(line: 701, column: 47, scope: !3030)
!3126 = !DILocation(line: 701, column: 55, scope: !3030)
!3127 = !DILocation(line: 701, column: 35, scope: !3030)
!3128 = !DILocation(line: 701, column: 13, scope: !3032)
!3129 = !DILocation(line: 702, column: 9, scope: !3032)
!3130 = !DILocation(line: 703, column: 9, scope: !3032)
!3131 = !DILocation(line: 706, column: 19, scope: !3030)
!3132 = !DILocation(line: 706, column: 5, scope: !3030)
!3133 = !DILocation(line: 707, column: 19, scope: !3030)
!3134 = !DILocation(line: 707, column: 5, scope: !3030)
!3135 = !DILocation(line: 708, column: 13, scope: !3030)
!3136 = !DILocation(line: 708, column: 5, scope: !3030)
!3137 = distinct !DISubprogram(name: "decode_huffman_code<miniz_oxide::inflate::core::decompress::{closure_env#9}>", linkageName: "_ZN11miniz_oxide7inflate4core19decode_huffman_code17h62cf9ab19ba26023E", scope: !36, file: !729, line: 606, type: !3138, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3163, retainedNodes: !3140)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!1875, !737, !1441, !158, !108, !600, !2088}
!3140 = !{!3141, !3142, !3143, !3144, !3145, !3146, !3147, !3149, !3151, !3153, !3155, !3157, !3159, !3161}
!3141 = !DILocalVariable(name: "r", arg: 1, scope: !3137, file: !729, line: 607, type: !737)
!3142 = !DILocalVariable(name: "l", arg: 2, scope: !3137, file: !729, line: 608, type: !1441)
!3143 = !DILocalVariable(name: "table", arg: 3, scope: !3137, file: !729, line: 609, type: !158)
!3144 = !DILocalVariable(name: "flags", arg: 4, scope: !3137, file: !729, line: 610, type: !108)
!3145 = !DILocalVariable(name: "in_iter", arg: 5, scope: !3137, file: !729, line: 611, type: !600)
!3146 = !DILocalVariable(name: "f", arg: 6, scope: !3137, file: !729, line: 612, type: !2088)
!3147 = !DILocalVariable(name: "temp", scope: !3148, file: !729, line: 635, type: !7, align: 32)
!3148 = distinct !DILexicalBlock(scope: !3137, file: !729, line: 635, column: 17)
!3149 = !DILocalVariable(name: "code_len", scope: !3150, file: !729, line: 637, type: !108, align: 32)
!3150 = distinct !DILexicalBlock(scope: !3148, file: !729, line: 637, column: 21)
!3151 = !DILocalVariable(name: "code_len", scope: !3152, file: !729, line: 643, type: !108, align: 32)
!3152 = distinct !DILexicalBlock(scope: !3148, file: !729, line: 643, column: 21)
!3153 = !DILocalVariable(name: "byte", scope: !3154, file: !729, line: 663, type: !37, align: 8)
!3154 = distinct !DILexicalBlock(scope: !3148, file: !729, line: 663, column: 17)
!3155 = !DILocalVariable(name: "a", scope: !3156, file: !729, line: 664, type: !1875, align: 8)
!3156 = distinct !DILexicalBlock(scope: !3154, file: !729, line: 667, column: 20)
!3157 = !DILocalVariable(name: "symbol", scope: !3158, file: !729, line: 690, type: !7, align: 32)
!3158 = distinct !DILexicalBlock(scope: !3137, file: !729, line: 690, column: 5)
!3159 = !DILocalVariable(name: "code_len", scope: !3160, file: !729, line: 691, type: !108, align: 32)
!3160 = distinct !DILexicalBlock(scope: !3158, file: !729, line: 691, column: 5)
!3161 = !DILocalVariable(name: "res", scope: !3162, file: !729, line: 701, type: !2510, align: 32)
!3162 = distinct !DILexicalBlock(scope: !3160, file: !729, line: 701, column: 9)
!3163 = !{!3164}
!3164 = !DITemplateTypeParameter(name: "F", type: !2088)
!3165 = !DILocation(line: 607, column: 5, scope: !3137)
!3166 = !DILocation(line: 608, column: 5, scope: !3137)
!3167 = !DILocation(line: 609, column: 5, scope: !3137)
!3168 = !DILocation(line: 610, column: 5, scope: !3137)
!3169 = !DILocation(line: 611, column: 5, scope: !3137)
!3170 = !DILocation(line: 612, column: 5, scope: !3137)
!3171 = !DILocation(line: 635, column: 21, scope: !3148)
!3172 = !DILocation(line: 643, column: 25, scope: !3152)
!3173 = !DILocation(line: 663, column: 21, scope: !3154)
!3174 = !DILocation(line: 690, column: 9, scope: !3158)
!3175 = !DILocation(line: 691, column: 9, scope: !3160)
!3176 = !DILocation(line: 619, column: 8, scope: !3137)
!3177 = !DILocation(line: 690, column: 32, scope: !3137)
!3178 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !3179)
!3179 = distinct !DILocation(line: 621, column: 20, scope: !3137)
!3180 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !3179)
!3181 = !DILocation(line: 621, column: 12, scope: !3137)
!3182 = !DILocation(line: 684, column: 42, scope: !3137)
!3183 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !3184)
!3184 = distinct !DILocation(line: 684, column: 26, scope: !3137)
!3185 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !3184)
!3186 = !DILocation(line: 684, column: 67, scope: !3137)
!3187 = !DILocation(line: 684, column: 26, scope: !3137)
!3188 = !DILocation(line: 635, column: 42, scope: !3137)
!3189 = !DILocation(line: 684, column: 13, scope: !3137)
!3190 = !DILocation(line: 685, column: 13, scope: !3137)
!3191 = !DILocation(line: 621, column: 9, scope: !3137)
!3192 = !DILocation(line: 635, column: 70, scope: !3137)
!3193 = !DILocation(line: 635, column: 58, scope: !3137)
!3194 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3195)
!3195 = distinct !DILocation(line: 635, column: 32, scope: !3137)
!3196 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3195)
!3197 = !DILocation(line: 635, column: 32, scope: !3137)
!3198 = !DILocation(line: 636, column: 20, scope: !3148)
!3199 = !DILocation(line: 642, column: 27, scope: !3148)
!3200 = !DILocation(line: 642, column: 57, scope: !3148)
!3201 = !DILocation(line: 637, column: 37, scope: !3148)
!3202 = !DILocation(line: 637, column: 36, scope: !3148)
!3203 = !DILocation(line: 637, column: 25, scope: !3150)
!3204 = !DILocation(line: 639, column: 24, scope: !3150)
!3205 = !DILocation(line: 663, column: 32, scope: !3148)
!3206 = !DILocation(line: 664, column: 45, scope: !3156)
!3207 = !DILocation(line: 664, column: 24, scope: !3156)
!3208 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !3209)
!3209 = distinct !DILocation(line: 643, column: 40, scope: !3148)
!3210 = !DILocation(line: 643, column: 40, scope: !3148)
!3211 = !DILocation(line: 646, column: 29, scope: !3152)
!3212 = !DILocation(line: 647, column: 36, scope: !3152)
!3213 = !DILocation(line: 647, column: 35, scope: !3152)
!3214 = !DILocation(line: 647, column: 45, scope: !3152)
!3215 = !DILocation(line: 647, column: 58, scope: !3152)
!3216 = !DILocation(line: 647, column: 44, scope: !3152)
!3217 = !DILocation(line: 647, column: 43, scope: !3152)
!3218 = !DILocation(line: 647, column: 34, scope: !3152)
!3219 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3220)
!3220 = distinct !DILocation(line: 645, column: 32, scope: !3152)
!3221 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3220)
!3222 = !DILocation(line: 645, column: 25, scope: !3152)
!3223 = !DILocation(line: 649, column: 25, scope: !3152)
!3224 = !DILocation(line: 650, column: 28, scope: !3152)
!3225 = !DILocation(line: 650, column: 41, scope: !3152)
!3226 = !DILocation(line: 650, column: 54, scope: !3152)
!3227 = !DILocation(line: 654, column: 24, scope: !3152)
!3228 = !DILocation(line: 639, column: 44, scope: !3150)
!3229 = !DILocation(line: 639, column: 43, scope: !3150)
!3230 = !DILocation(line: 668, column: 28, scope: !3156)
!3231 = !DILocation(line: 709, column: 1, scope: !3137)
!3232 = !DILocation(line: 672, column: 46, scope: !3154)
!3233 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !3234)
!3234 = distinct !DILocation(line: 672, column: 30, scope: !3154)
!3235 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !3234)
!3236 = !DILocation(line: 672, column: 55, scope: !3154)
!3237 = !DILocation(line: 672, column: 30, scope: !3154)
!3238 = !DILocation(line: 709, column: 2, scope: !3137)
!3239 = !DILocation(line: 672, column: 17, scope: !3154)
!3240 = !DILocation(line: 673, column: 17, scope: !3154)
!3241 = !DILocation(line: 675, column: 20, scope: !3154)
!3242 = !DILocation(line: 690, column: 60, scope: !3137)
!3243 = !DILocation(line: 690, column: 48, scope: !3137)
!3244 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3245)
!3245 = distinct !DILocation(line: 690, column: 22, scope: !3137)
!3246 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3245)
!3247 = !DILocation(line: 690, column: 22, scope: !3137)
!3248 = !DILocation(line: 693, column: 8, scope: !3160)
!3249 = !DILocation(line: 701, column: 19, scope: !3160)
!3250 = !DILocation(line: 697, column: 21, scope: !3160)
!3251 = !DILocation(line: 697, column: 20, scope: !3160)
!3252 = !DILocation(line: 697, column: 9, scope: !3160)
!3253 = !DILocation(line: 699, column: 9, scope: !3160)
!3254 = !DILocation(line: 693, column: 5, scope: !3160)
!3255 = !DILocation(line: 701, column: 47, scope: !3160)
!3256 = !DILocation(line: 701, column: 55, scope: !3160)
!3257 = !DILocation(line: 701, column: 35, scope: !3160)
!3258 = !DILocation(line: 701, column: 13, scope: !3162)
!3259 = !DILocation(line: 702, column: 9, scope: !3162)
!3260 = !DILocation(line: 703, column: 9, scope: !3162)
!3261 = !DILocation(line: 706, column: 19, scope: !3160)
!3262 = !DILocation(line: 706, column: 5, scope: !3160)
!3263 = !DILocation(line: 707, column: 19, scope: !3160)
!3264 = !DILocation(line: 707, column: 5, scope: !3160)
!3265 = !DILocation(line: 708, column: 13, scope: !3160)
!3266 = !DILocation(line: 708, column: 5, scope: !3160)
!3267 = distinct !DISubprogram(name: "decode_huffman_code<miniz_oxide::inflate::core::decompress::{closure_env#13}>", linkageName: "_ZN11miniz_oxide7inflate4core19decode_huffman_code17he1f07a3fb7651905E", scope: !36, file: !729, line: 606, type: !3268, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3293, retainedNodes: !3270)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!1875, !737, !1441, !158, !108, !600, !2242}
!3270 = !{!3271, !3272, !3273, !3274, !3275, !3276, !3277, !3279, !3281, !3283, !3285, !3287, !3289, !3291}
!3271 = !DILocalVariable(name: "r", arg: 1, scope: !3267, file: !729, line: 607, type: !737)
!3272 = !DILocalVariable(name: "l", arg: 2, scope: !3267, file: !729, line: 608, type: !1441)
!3273 = !DILocalVariable(name: "table", arg: 3, scope: !3267, file: !729, line: 609, type: !158)
!3274 = !DILocalVariable(name: "flags", arg: 4, scope: !3267, file: !729, line: 610, type: !108)
!3275 = !DILocalVariable(name: "in_iter", arg: 5, scope: !3267, file: !729, line: 611, type: !600)
!3276 = !DILocalVariable(name: "f", arg: 6, scope: !3267, file: !729, line: 612, type: !2242)
!3277 = !DILocalVariable(name: "temp", scope: !3278, file: !729, line: 635, type: !7, align: 32)
!3278 = distinct !DILexicalBlock(scope: !3267, file: !729, line: 635, column: 17)
!3279 = !DILocalVariable(name: "code_len", scope: !3280, file: !729, line: 637, type: !108, align: 32)
!3280 = distinct !DILexicalBlock(scope: !3278, file: !729, line: 637, column: 21)
!3281 = !DILocalVariable(name: "code_len", scope: !3282, file: !729, line: 643, type: !108, align: 32)
!3282 = distinct !DILexicalBlock(scope: !3278, file: !729, line: 643, column: 21)
!3283 = !DILocalVariable(name: "byte", scope: !3284, file: !729, line: 663, type: !37, align: 8)
!3284 = distinct !DILexicalBlock(scope: !3278, file: !729, line: 663, column: 17)
!3285 = !DILocalVariable(name: "a", scope: !3286, file: !729, line: 664, type: !1875, align: 8)
!3286 = distinct !DILexicalBlock(scope: !3284, file: !729, line: 667, column: 20)
!3287 = !DILocalVariable(name: "symbol", scope: !3288, file: !729, line: 690, type: !7, align: 32)
!3288 = distinct !DILexicalBlock(scope: !3267, file: !729, line: 690, column: 5)
!3289 = !DILocalVariable(name: "code_len", scope: !3290, file: !729, line: 691, type: !108, align: 32)
!3290 = distinct !DILexicalBlock(scope: !3288, file: !729, line: 691, column: 5)
!3291 = !DILocalVariable(name: "res", scope: !3292, file: !729, line: 701, type: !2510, align: 32)
!3292 = distinct !DILexicalBlock(scope: !3290, file: !729, line: 701, column: 9)
!3293 = !{!3294}
!3294 = !DITemplateTypeParameter(name: "F", type: !2242)
!3295 = !DILocation(line: 607, column: 5, scope: !3267)
!3296 = !DILocation(line: 608, column: 5, scope: !3267)
!3297 = !DILocation(line: 609, column: 5, scope: !3267)
!3298 = !DILocation(line: 610, column: 5, scope: !3267)
!3299 = !DILocation(line: 611, column: 5, scope: !3267)
!3300 = !DILocation(line: 612, column: 5, scope: !3267)
!3301 = !DILocation(line: 635, column: 21, scope: !3278)
!3302 = !DILocation(line: 643, column: 25, scope: !3282)
!3303 = !DILocation(line: 663, column: 21, scope: !3284)
!3304 = !DILocation(line: 690, column: 9, scope: !3288)
!3305 = !DILocation(line: 691, column: 9, scope: !3290)
!3306 = !DILocation(line: 619, column: 8, scope: !3267)
!3307 = !DILocation(line: 690, column: 32, scope: !3267)
!3308 = !DILocation(line: 108, column: 29, scope: !1072, inlinedAt: !3309)
!3309 = distinct !DILocation(line: 621, column: 20, scope: !3267)
!3310 = !DILocation(line: 109, column: 9, scope: !1072, inlinedAt: !3309)
!3311 = !DILocation(line: 621, column: 12, scope: !3267)
!3312 = !DILocation(line: 684, column: 42, scope: !3267)
!3313 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !3314)
!3314 = distinct !DILocation(line: 684, column: 26, scope: !3267)
!3315 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !3314)
!3316 = !DILocation(line: 684, column: 67, scope: !3267)
!3317 = !DILocation(line: 684, column: 26, scope: !3267)
!3318 = !DILocation(line: 635, column: 42, scope: !3267)
!3319 = !DILocation(line: 684, column: 13, scope: !3267)
!3320 = !DILocation(line: 685, column: 13, scope: !3267)
!3321 = !DILocation(line: 621, column: 9, scope: !3267)
!3322 = !DILocation(line: 635, column: 70, scope: !3267)
!3323 = !DILocation(line: 635, column: 58, scope: !3267)
!3324 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3325)
!3325 = distinct !DILocation(line: 635, column: 32, scope: !3267)
!3326 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3325)
!3327 = !DILocation(line: 635, column: 32, scope: !3267)
!3328 = !DILocation(line: 636, column: 20, scope: !3278)
!3329 = !DILocation(line: 642, column: 27, scope: !3278)
!3330 = !DILocation(line: 642, column: 57, scope: !3278)
!3331 = !DILocation(line: 637, column: 37, scope: !3278)
!3332 = !DILocation(line: 637, column: 36, scope: !3278)
!3333 = !DILocation(line: 637, column: 25, scope: !3280)
!3334 = !DILocation(line: 639, column: 24, scope: !3280)
!3335 = !DILocation(line: 663, column: 32, scope: !3278)
!3336 = !DILocation(line: 664, column: 45, scope: !3286)
!3337 = !DILocation(line: 664, column: 24, scope: !3286)
!3338 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !3339)
!3339 = distinct !DILocation(line: 643, column: 40, scope: !3278)
!3340 = !DILocation(line: 643, column: 40, scope: !3278)
!3341 = !DILocation(line: 646, column: 29, scope: !3282)
!3342 = !DILocation(line: 647, column: 36, scope: !3282)
!3343 = !DILocation(line: 647, column: 35, scope: !3282)
!3344 = !DILocation(line: 647, column: 45, scope: !3282)
!3345 = !DILocation(line: 647, column: 58, scope: !3282)
!3346 = !DILocation(line: 647, column: 44, scope: !3282)
!3347 = !DILocation(line: 647, column: 43, scope: !3282)
!3348 = !DILocation(line: 647, column: 34, scope: !3282)
!3349 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3350)
!3350 = distinct !DILocation(line: 645, column: 32, scope: !3282)
!3351 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3350)
!3352 = !DILocation(line: 645, column: 25, scope: !3282)
!3353 = !DILocation(line: 649, column: 25, scope: !3282)
!3354 = !DILocation(line: 650, column: 28, scope: !3282)
!3355 = !DILocation(line: 650, column: 41, scope: !3282)
!3356 = !DILocation(line: 650, column: 54, scope: !3282)
!3357 = !DILocation(line: 654, column: 24, scope: !3282)
!3358 = !DILocation(line: 639, column: 44, scope: !3280)
!3359 = !DILocation(line: 639, column: 43, scope: !3280)
!3360 = !DILocation(line: 668, column: 28, scope: !3286)
!3361 = !DILocation(line: 709, column: 1, scope: !3267)
!3362 = !DILocation(line: 672, column: 46, scope: !3284)
!3363 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !3364)
!3364 = distinct !DILocation(line: 672, column: 30, scope: !3284)
!3365 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !3364)
!3366 = !DILocation(line: 672, column: 55, scope: !3284)
!3367 = !DILocation(line: 672, column: 30, scope: !3284)
!3368 = !DILocation(line: 709, column: 2, scope: !3267)
!3369 = !DILocation(line: 672, column: 17, scope: !3284)
!3370 = !DILocation(line: 673, column: 17, scope: !3284)
!3371 = !DILocation(line: 675, column: 20, scope: !3284)
!3372 = !DILocation(line: 690, column: 60, scope: !3267)
!3373 = !DILocation(line: 690, column: 48, scope: !3267)
!3374 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !3375)
!3375 = distinct !DILocation(line: 690, column: 22, scope: !3267)
!3376 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !3375)
!3377 = !DILocation(line: 690, column: 22, scope: !3267)
!3378 = !DILocation(line: 693, column: 8, scope: !3290)
!3379 = !DILocation(line: 701, column: 19, scope: !3290)
!3380 = !DILocation(line: 697, column: 21, scope: !3290)
!3381 = !DILocation(line: 697, column: 20, scope: !3290)
!3382 = !DILocation(line: 697, column: 9, scope: !3290)
!3383 = !DILocation(line: 699, column: 9, scope: !3290)
!3384 = !DILocation(line: 693, column: 5, scope: !3290)
!3385 = !DILocation(line: 701, column: 47, scope: !3290)
!3386 = !DILocation(line: 701, column: 55, scope: !3290)
!3387 = !DILocation(line: 701, column: 35, scope: !3290)
!3388 = !DILocation(line: 701, column: 13, scope: !3292)
!3389 = !DILocation(line: 702, column: 9, scope: !3292)
!3390 = !DILocation(line: 703, column: 9, scope: !3292)
!3391 = !DILocation(line: 706, column: 19, scope: !3290)
!3392 = !DILocation(line: 706, column: 5, scope: !3290)
!3393 = !DILocation(line: 707, column: 19, scope: !3290)
!3394 = !DILocation(line: 707, column: 5, scope: !3290)
!3395 = !DILocation(line: 708, column: 13, scope: !3290)
!3396 = !DILocation(line: 708, column: 5, scope: !3290)
!3397 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#13}>", linkageName: "_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17h54553a1da39d5e2fE", scope: !3398, file: !729, line: 664, type: !3399, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3293, retainedNodes: !3405)
!3398 = !DINamespace(name: "decode_huffman_code", scope: !36)
!3399 = !DISubroutineType(types: !3400)
!3400 = !{!1875, !3401, !37}
!3401 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#13}>", scope: !3398, file: !5, size: 32, align: 32, elements: !3402, templateParams: !98, identifier: "c0e84cea1eaa909ce9474cc21b3a7c38")
!3402 = !{!3403}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__byte", scope: !3401, file: !5, baseType: !3404, size: 32, align: 32)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !37, size: 32, align: 32, dwarfAddressSpace: 0)
!3405 = !{!3406, !3407}
!3406 = !DILocalVariable(name: "b", arg: 2, scope: !3397, file: !729, line: 664, type: !37)
!3407 = !DILocalVariable(name: "byte", scope: !3397, file: !729, line: 663, type: !37, align: 8)
!3408 = !DILocation(line: 663, column: 25, scope: !3397)
!3409 = !DILocation(line: 664, column: 72, scope: !3397)
!3410 = !DILocation(line: 665, column: 21, scope: !3397)
!3411 = !DILocation(line: 667, column: 18, scope: !3397)
!3412 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#9}>", linkageName: "_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17hc9622de99ccb8765E", scope: !3398, file: !729, line: 664, type: !3413, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3163, retainedNodes: !3418)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{!1875, !3415, !37}
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#9}>", scope: !3398, file: !5, size: 32, align: 32, elements: !3416, templateParams: !98, identifier: "a30711d1ba04eb79e1268526ffdcf019")
!3416 = !{!3417}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__byte", scope: !3415, file: !5, baseType: !3404, size: 32, align: 32)
!3418 = !{!3419, !3420}
!3419 = !DILocalVariable(name: "b", arg: 2, scope: !3412, file: !729, line: 664, type: !37)
!3420 = !DILocalVariable(name: "byte", scope: !3412, file: !729, line: 663, type: !37, align: 8)
!3421 = !DILocation(line: 663, column: 25, scope: !3412)
!3422 = !DILocation(line: 664, column: 72, scope: !3412)
!3423 = !DILocation(line: 665, column: 21, scope: !3412)
!3424 = !DILocation(line: 667, column: 18, scope: !3412)
!3425 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#11}>", linkageName: "_ZN11miniz_oxide7inflate4core19decode_huffman_code28_$u7b$$u7b$closure$u7d$$u7d$17hf5d27689e5c7d0b5E", scope: !3398, file: !729, line: 664, type: !3426, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3033, retainedNodes: !3431)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!1875, !3428, !37}
!3428 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#11}>", scope: !3398, file: !5, size: 32, align: 32, elements: !3429, templateParams: !98, identifier: "9bed4de2e6a168c9df505a22b8ba02e7")
!3429 = !{!3430}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__byte", scope: !3428, file: !5, baseType: !3404, size: 32, align: 32)
!3431 = !{!3432, !3433}
!3432 = !DILocalVariable(name: "b", arg: 2, scope: !3425, file: !729, line: 664, type: !37)
!3433 = !DILocalVariable(name: "byte", scope: !3425, file: !729, line: 663, type: !37, align: 8)
!3434 = !DILocation(line: 663, column: 25, scope: !3425)
!3435 = !DILocation(line: 664, column: 72, scope: !3425)
!3436 = !DILocation(line: 665, column: 21, scope: !3425)
!3437 = !DILocation(line: 667, column: 18, scope: !3425)
!3438 = distinct !DISubprogram(name: "validate_zlib_header", linkageName: "_ZN11miniz_oxide7inflate4core20validate_zlib_header17h2b66cafd9e179658E", scope: !36, file: !729, line: 568, type: !3439, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !3441)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!1875, !108, !108, !108, !158}
!3441 = !{!3442, !3443, !3444, !3445, !3446, !3448}
!3442 = !DILocalVariable(name: "cmf", arg: 1, scope: !3438, file: !729, line: 568, type: !108)
!3443 = !DILocalVariable(name: "flg", arg: 2, scope: !3438, file: !729, line: 568, type: !108)
!3444 = !DILocalVariable(name: "flags", arg: 3, scope: !3438, file: !729, line: 568, type: !108)
!3445 = !DILocalVariable(name: "mask", arg: 4, scope: !3438, file: !729, line: 568, type: !158)
!3446 = !DILocalVariable(name: "failed", scope: !3447, file: !729, line: 569, type: !176, align: 8)
!3447 = distinct !DILexicalBlock(scope: !3438, file: !729, line: 569, column: 5)
!3448 = !DILocalVariable(name: "window_size", scope: !3449, file: !729, line: 578, type: !158, align: 32)
!3449 = distinct !DILexicalBlock(scope: !3447, file: !729, line: 578, column: 5)
!3450 = !DILocation(line: 568, column: 31, scope: !3438)
!3451 = !DILocation(line: 568, column: 41, scope: !3438)
!3452 = !DILocation(line: 568, column: 51, scope: !3438)
!3453 = !DILocation(line: 568, column: 63, scope: !3438)
!3454 = !DILocation(line: 569, column: 9, scope: !3447)
!3455 = !DILocation(line: 571, column: 11, scope: !3438)
!3456 = !DILocation(line: 571, column: 10, scope: !3438)
!3457 = !DILocation(line: 571, column: 9, scope: !3438)
!3458 = !DILocation(line: 574, column: 10, scope: !3438)
!3459 = !DILocation(line: 574, column: 9, scope: !3438)
!3460 = !DILocation(line: 576, column: 10, scope: !3438)
!3461 = !DILocation(line: 576, column: 9, scope: !3438)
!3462 = !DILocation(line: 578, column: 29, scope: !3447)
!3463 = !DILocation(line: 578, column: 28, scope: !3447)
!3464 = !DILocation(line: 578, column: 23, scope: !3447)
!3465 = !DILocation(line: 578, column: 9, scope: !3449)
!3466 = !DILocation(line: 579, column: 8, scope: !3449)
!3467 = !DILocation(line: 581, column: 19, scope: !3449)
!3468 = !DILocation(line: 585, column: 15, scope: !3449)
!3469 = !DILocation(line: 585, column: 5, scope: !3449)
!3470 = !DILocation(line: 587, column: 8, scope: !3449)
!3471 = !DILocation(line: 581, column: 9, scope: !3449)
!3472 = !DILocation(line: 579, column: 5, scope: !3449)
!3473 = !DILocation(line: 590, column: 9, scope: !3449)
!3474 = !DILocation(line: 587, column: 5, scope: !3449)
!3475 = !DILocation(line: 588, column: 9, scope: !3449)
!3476 = !DILocation(line: 592, column: 2, scope: !3438)
!3477 = distinct !DISubprogram(name: "begin", linkageName: "_ZN11miniz_oxide7inflate4core5State5begin17h473fee2d18192297E", scope: !35, file: !729, line: 471, type: !3478, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !3481, retainedNodes: !3482)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{null, !3480, !35}
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut miniz_oxide::inflate::core::State", baseType: !35, size: 32, align: 32, dwarfAddressSpace: 0)
!3481 = !DISubprogram(name: "begin", linkageName: "_ZN11miniz_oxide7inflate4core5State5begin17h473fee2d18192297E", scope: !35, file: !729, line: 471, type: !3478, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!3482 = !{!3483, !3484}
!3483 = !DILocalVariable(name: "self", arg: 1, scope: !3477, file: !729, line: 471, type: !3480)
!3484 = !DILocalVariable(name: "new_state", arg: 2, scope: !3477, file: !729, line: 471, type: !35)
!3485 = !DILocation(line: 471, column: 14, scope: !3477)
!3486 = !DILocation(line: 471, column: 25, scope: !3477)
!3487 = !DILocation(line: 472, column: 9, scope: !3477)
!3488 = !DILocation(line: 473, column: 6, scope: !3477)
!3489 = distinct !DISubprogram(name: "transfer", linkageName: "_ZN11miniz_oxide7inflate4core8transfer17h1bd7e969a6e5edcdE", scope: !36, file: !729, line: 1032, type: !2309, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !3490)
!3490 = !{!3491, !3492, !3493, !3494, !3495, !3496, !3498, !3500, !3502, !3504, !3506, !3508}
!3491 = !DILocalVariable(name: "out_slice", arg: 1, scope: !3489, file: !729, line: 1033, type: !655)
!3492 = !DILocalVariable(name: "source_pos", arg: 2, scope: !3489, file: !729, line: 1034, type: !158)
!3493 = !DILocalVariable(name: "out_pos", arg: 3, scope: !3489, file: !729, line: 1035, type: !158)
!3494 = !DILocalVariable(name: "match_len", arg: 4, scope: !3489, file: !729, line: 1036, type: !158)
!3495 = !DILocalVariable(name: "out_buf_size_mask", arg: 5, scope: !3489, file: !729, line: 1037, type: !158)
!3496 = !DILocalVariable(name: "source_diff", scope: !3497, file: !729, line: 1042, type: !158, align: 32)
!3497 = distinct !DILexicalBlock(scope: !3489, file: !729, line: 1042, column: 5)
!3498 = !DILocalVariable(name: "not_wrapping", scope: !3499, file: !729, line: 1052, type: !176, align: 8)
!3499 = distinct !DILexicalBlock(scope: !3497, file: !729, line: 1052, column: 5)
!3500 = !DILocalVariable(name: "end_pos", scope: !3501, file: !729, line: 1055, type: !158, align: 32)
!3501 = distinct !DILexicalBlock(scope: !3499, file: !729, line: 1055, column: 5)
!3502 = !DILocalVariable(name: "end", scope: !3503, file: !729, line: 1057, type: !158, align: 32)
!3503 = distinct !DILexicalBlock(scope: !3501, file: !729, line: 1057, column: 9)
!3504 = !DILocalVariable(name: "init", scope: !3505, file: !729, line: 1058, type: !37, align: 8)
!3505 = distinct !DILexicalBlock(scope: !3503, file: !729, line: 1058, column: 9)
!3506 = !DILocalVariable(name: "end_pos", scope: !3507, file: !729, line: 1066, type: !158, align: 32)
!3507 = distinct !DILexicalBlock(scope: !3501, file: !729, line: 1066, column: 9)
!3508 = !DILocalVariable(name: "end_pos", scope: !3509, file: !729, line: 1073, type: !158, align: 32)
!3509 = distinct !DILexicalBlock(scope: !3501, file: !729, line: 1073, column: 9)
!3510 = !DILocation(line: 1033, column: 5, scope: !3489)
!3511 = !DILocation(line: 1034, column: 5, scope: !3489)
!3512 = !DILocation(line: 1035, column: 5, scope: !3489)
!3513 = !DILocation(line: 1036, column: 5, scope: !3489)
!3514 = !DILocation(line: 1037, column: 5, scope: !3489)
!3515 = !DILocation(line: 1042, column: 9, scope: !3497)
!3516 = !DILocation(line: 1052, column: 9, scope: !3499)
!3517 = !DILocation(line: 1042, column: 26, scope: !3489)
!3518 = !DILocation(line: 1042, column: 39, scope: !3489)
!3519 = !DILocation(line: 1045, column: 9, scope: !3489)
!3520 = !DILocation(line: 1045, column: 19, scope: !3489)
!3521 = !DILocation(line: 1043, column: 9, scope: !3489)
!3522 = !DILocation(line: 1043, column: 22, scope: !3489)
!3523 = !DILocation(line: 1042, column: 23, scope: !3489)
!3524 = !DILocation(line: 1052, column: 24, scope: !3497)
!3525 = !DILocation(line: 1053, column: 14, scope: !3497)
!3526 = !DILocation(line: 1053, column: 13, scope: !3497)
!3527 = !DILocation(line: 2339, column: 35, scope: !1578, inlinedAt: !3528)
!3528 = distinct !DILocation(line: 1053, column: 38, scope: !3497)
!3529 = !DILocation(line: 2339, column: 41, scope: !1578, inlinedAt: !3528)
!3530 = !DILocation(line: 2340, column: 13, scope: !1578, inlinedAt: !3528)
!3531 = !DILocation(line: 1053, column: 12, scope: !3497)
!3532 = !DILocation(line: 1055, column: 20, scope: !3499)
!3533 = !DILocation(line: 1055, column: 19, scope: !3499)
!3534 = !DILocation(line: 1055, column: 44, scope: !3499)
!3535 = !DILocation(line: 1055, column: 9, scope: !3501)
!3536 = !DILocation(line: 1056, column: 8, scope: !3501)
!3537 = !DILocation(line: 1065, column: 15, scope: !3501)
!3538 = !DILocation(line: 1056, column: 24, scope: !3501)
!3539 = !DILocation(line: 1056, column: 44, scope: !3501)
!3540 = !DILocation(line: 1056, column: 54, scope: !3501)
!3541 = !DILocation(line: 1057, column: 19, scope: !3501)
!3542 = !DILocation(line: 1057, column: 42, scope: !3501)
!3543 = !DILocation(line: 1057, column: 13, scope: !3503)
!3544 = !DILocation(line: 1058, column: 30, scope: !3503)
!3545 = !DILocation(line: 1058, column: 20, scope: !3503)
!3546 = !DILocation(line: 1058, column: 13, scope: !3505)
!3547 = !DILocation(line: 1059, column: 19, scope: !3505)
!3548 = !DILocation(line: 29, column: 18, scope: !701, inlinedAt: !3549)
!3549 = distinct !DILocation(line: 1059, column: 18, scope: !3505)
!3550 = !DILocation(line: 29, column: 29, scope: !701, inlinedAt: !3549)
!3551 = !DILocation(line: 30, column: 15, scope: !701, inlinedAt: !3549)
!3552 = !DILocation(line: 1059, column: 18, scope: !3505)
!3553 = !DILocation(line: 1059, column: 33, scope: !3505)
!3554 = !DILocation(line: 1060, column: 9, scope: !3505)
!3555 = !DILocation(line: 1061, column: 22, scope: !3505)
!3556 = !DILocation(line: 1061, column: 9, scope: !3505)
!3557 = !DILocation(line: 1056, column: 5, scope: !3501)
!3558 = !DILocation(line: 1090, column: 11, scope: !3501)
!3559 = !DILocation(line: 1090, column: 5, scope: !3501)
!3560 = !DILocation(line: 2191, column: 37, scope: !996, inlinedAt: !3561)
!3561 = distinct !DILocation(line: 1073, column: 57, scope: !3501)
!3562 = !DILocation(line: 2191, column: 43, scope: !996, inlinedAt: !3561)
!3563 = !DILocation(line: 2192, column: 13, scope: !996, inlinedAt: !3561)
!3564 = !DILocation(line: 1073, column: 23, scope: !3501)
!3565 = !DILocation(line: 1073, column: 13, scope: !3509)
!3566 = !DILocation(line: 1065, column: 31, scope: !3501)
!3567 = !DILocation(line: 1065, column: 41, scope: !3501)
!3568 = !DILocation(line: 1065, column: 56, scope: !3501)
!3569 = !DILocation(line: 1065, column: 66, scope: !3501)
!3570 = !DILocation(line: 1065, column: 55, scope: !3501)
!3571 = !DILocation(line: 2191, column: 37, scope: !996, inlinedAt: !3572)
!3572 = distinct !DILocation(line: 1066, column: 57, scope: !3501)
!3573 = !DILocation(line: 2191, column: 43, scope: !996, inlinedAt: !3572)
!3574 = !DILocation(line: 2192, column: 13, scope: !996, inlinedAt: !3572)
!3575 = !DILocation(line: 1066, column: 23, scope: !3501)
!3576 = !DILocation(line: 1066, column: 13, scope: !3507)
!3577 = !DILocation(line: 1074, column: 15, scope: !3509)
!3578 = !DILocation(line: 1078, column: 21, scope: !3509)
!3579 = !DILocation(line: 1078, column: 13, scope: !3509)
!3580 = !DILocation(line: 1079, column: 22, scope: !3509)
!3581 = !DILocation(line: 1079, column: 21, scope: !3509)
!3582 = !DILocation(line: 1079, column: 13, scope: !3509)
!3583 = !DILocation(line: 1081, column: 44, scope: !3509)
!3584 = !DILocation(line: 1081, column: 34, scope: !3509)
!3585 = !DILocation(line: 1081, column: 23, scope: !3509)
!3586 = !DILocation(line: 1081, column: 13, scope: !3509)
!3587 = !DILocation(line: 1082, column: 49, scope: !3509)
!3588 = !DILocation(line: 1082, column: 48, scope: !3509)
!3589 = !DILocation(line: 1082, column: 38, scope: !3509)
!3590 = !DILocation(line: 1082, column: 23, scope: !3509)
!3591 = !DILocation(line: 1082, column: 13, scope: !3509)
!3592 = !DILocation(line: 1083, column: 49, scope: !3509)
!3593 = !DILocation(line: 1083, column: 48, scope: !3509)
!3594 = !DILocation(line: 1083, column: 38, scope: !3509)
!3595 = !DILocation(line: 1083, column: 23, scope: !3509)
!3596 = !DILocation(line: 1083, column: 13, scope: !3509)
!3597 = !DILocation(line: 1084, column: 49, scope: !3509)
!3598 = !DILocation(line: 1084, column: 48, scope: !3509)
!3599 = !DILocation(line: 1084, column: 38, scope: !3509)
!3600 = !DILocation(line: 1084, column: 23, scope: !3509)
!3601 = !DILocation(line: 1084, column: 13, scope: !3509)
!3602 = !DILocation(line: 1085, column: 13, scope: !3509)
!3603 = !DILocation(line: 1086, column: 13, scope: !3509)
!3604 = !DILocation(line: 1074, column: 9, scope: !3509)
!3605 = !DILocation(line: 1067, column: 15, scope: !3507)
!3606 = !DILocation(line: 1068, column: 35, scope: !3507)
!3607 = !DILocation(line: 1068, column: 48, scope: !3507)
!3608 = !DILocation(line: 1106, column: 14, scope: !3501)
!3609 = !DILocation(line: 1108, column: 2, scope: !3489)
!3610 = !DILocation(line: 1092, column: 45, scope: !3501)
!3611 = !DILocation(line: 1092, column: 35, scope: !3501)
!3612 = !DILocation(line: 1094, column: 21, scope: !3501)
!3613 = !DILocation(line: 1100, column: 21, scope: !3501)
!3614 = !DILocation(line: 1092, column: 24, scope: !3501)
!3615 = !DILocation(line: 1092, column: 14, scope: !3501)
!3616 = !DILocation(line: 1092, column: 75, scope: !3501)
!3617 = !DILocation(line: 1094, column: 13, scope: !3501)
!3618 = !DILocation(line: 1095, column: 22, scope: !3501)
!3619 = !DILocation(line: 1095, column: 21, scope: !3501)
!3620 = !DILocation(line: 1095, column: 13, scope: !3501)
!3621 = !DILocation(line: 1096, column: 44, scope: !3501)
!3622 = !DILocation(line: 1096, column: 34, scope: !3501)
!3623 = !DILocation(line: 1096, column: 23, scope: !3501)
!3624 = !DILocation(line: 1096, column: 13, scope: !3501)
!3625 = !DILocation(line: 1097, column: 49, scope: !3501)
!3626 = !DILocation(line: 1097, column: 48, scope: !3501)
!3627 = !DILocation(line: 1097, column: 38, scope: !3501)
!3628 = !DILocation(line: 1097, column: 23, scope: !3501)
!3629 = !DILocation(line: 1097, column: 13, scope: !3501)
!3630 = !DILocation(line: 1093, column: 14, scope: !3501)
!3631 = !DILocation(line: 1100, column: 13, scope: !3501)
!3632 = !DILocation(line: 1101, column: 22, scope: !3501)
!3633 = !DILocation(line: 1101, column: 21, scope: !3501)
!3634 = !DILocation(line: 1101, column: 13, scope: !3501)
!3635 = !DILocation(line: 1102, column: 44, scope: !3501)
!3636 = !DILocation(line: 1102, column: 34, scope: !3501)
!3637 = !DILocation(line: 1102, column: 23, scope: !3501)
!3638 = !DILocation(line: 1102, column: 13, scope: !3501)
!3639 = !DILocation(line: 1103, column: 49, scope: !3501)
!3640 = !DILocation(line: 1103, column: 48, scope: !3501)
!3641 = !DILocation(line: 1103, column: 38, scope: !3501)
!3642 = !DILocation(line: 1103, column: 23, scope: !3501)
!3643 = !DILocation(line: 1103, column: 13, scope: !3501)
!3644 = !DILocation(line: 1104, column: 49, scope: !3501)
!3645 = !DILocation(line: 1104, column: 48, scope: !3501)
!3646 = !DILocation(line: 1104, column: 38, scope: !3501)
!3647 = !DILocation(line: 1104, column: 23, scope: !3501)
!3648 = !DILocation(line: 1104, column: 13, scope: !3501)
!3649 = !DILocation(line: 1099, column: 14, scope: !3501)
!3650 = !DILocation(line: 1068, column: 64, scope: !3507)
!3651 = !DILocation(line: 1068, column: 23, scope: !3507)
!3652 = !DILocation(line: 1069, column: 13, scope: !3507)
!3653 = !DILocation(line: 1070, column: 13, scope: !3507)
!3654 = !DILocation(line: 1067, column: 9, scope: !3507)
!3655 = distinct !DISubprogram(name: "init_tree", linkageName: "_ZN11miniz_oxide7inflate4core9init_tree17h8b4f6fe432835833E", scope: !36, file: !729, line: 845, type: !3656, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !3671)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{!3658, !737, !1441}
!3658 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<miniz_oxide::inflate::core::Action>", scope: !92, file: !5, size: 16, align: 8, flags: DIFlagPublic, elements: !3659, templateParams: !98, identifier: "2bb4a123f1af27ed6f822b3d336250bf")
!3659 = !{!3660}
!3660 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3658, file: !5, size: 16, align: 8, elements: !3661, templateParams: !98, identifier: "84e709b0a92d5e41c6c0d9eb5806250", discriminator: !3670)
!3661 = !{!3662, !3666}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3660, file: !5, baseType: !3663, size: 16, align: 8, extraData: i8 3)
!3663 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3658, file: !5, size: 16, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !3664, identifier: "44afb44a81aeda5e16cdc53bd488086a")
!3664 = !{!3665}
!3665 = !DITemplateTypeParameter(name: "T", type: !1875)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3660, file: !5, baseType: !3667, size: 16, align: 8)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3658, file: !5, size: 16, align: 8, flags: DIFlagPublic, elements: !3668, templateParams: !3664, identifier: "31a8f5bd5260421580be466605efd59e")
!3668 = !{!3669}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3667, file: !5, baseType: !1875, size: 16, align: 8, flags: DIFlagPublic)
!3670 = !DIDerivedType(tag: DW_TAG_member, scope: !3658, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagArtificial)
!3671 = !{!3672, !3673, !3674, !3676, !3678, !3681, !3686, !3691, !3693, !3706, !3708, !3710, !3712, !3714, !3716, !3718, !3719, !3721, !3723, !3725, !3727, !3729, !3731, !3733, !3735, !3737, !3745, !3747}
!3672 = !DILocalVariable(name: "r", arg: 1, scope: !3655, file: !729, line: 845, type: !737)
!3673 = !DILocalVariable(name: "l", arg: 2, scope: !3655, file: !729, line: 845, type: !1441)
!3674 = !DILocalVariable(name: "bt", scope: !3675, file: !729, line: 847, type: !158, align: 32)
!3675 = distinct !DILexicalBlock(scope: !3655, file: !729, line: 847, column: 9)
!3676 = !DILocalVariable(name: "code_sizes", scope: !3677, file: !729, line: 849, type: !655, align: 32)
!3677 = distinct !DILexicalBlock(scope: !3675, file: !729, line: 849, column: 9)
!3678 = !DILocalVariable(name: "table", scope: !3679, file: !729, line: 855, type: !3680, align: 32)
!3679 = distinct !DILexicalBlock(scope: !3677, file: !729, line: 855, column: 9)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut miniz_oxide::inflate::core::HuffmanTable", baseType: !758, size: 32, align: 32, dwarfAddressSpace: 0)
!3681 = !DILocalVariable(name: "total_symbols", scope: !3682, file: !729, line: 857, type: !3683, align: 16)
!3682 = distinct !DILexicalBlock(scope: !3679, file: !729, line: 857, column: 9)
!3683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, align: 16, elements: !3684)
!3684 = !{!3685}
!3685 = !DISubrange(count: 16, lowerBound: 0)
!3686 = !DILocalVariable(name: "next_code", scope: !3687, file: !729, line: 859, type: !3688, align: 32)
!3687 = distinct !DILexicalBlock(scope: !3682, file: !729, line: 859, column: 9)
!3688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 544, align: 32, elements: !3689)
!3689 = !{!3690}
!3690 = !DISubrange(count: 17, lowerBound: 0)
!3691 = !DILocalVariable(name: "table_size", scope: !3692, file: !729, line: 877, type: !158, align: 32)
!3692 = distinct !DILexicalBlock(scope: !3687, file: !729, line: 877, column: 9)
!3693 = !DILocalVariable(name: "iter", scope: !3694, file: !729, line: 882, type: !3695, align: 32)
!3694 = distinct !DILexicalBlock(scope: !3692, file: !729, line: 882, column: 9)
!3695 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !123, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !3696, templateParams: !287, identifier: "fddf2df4e8c08ec9e4dd47bfe6f746c6")
!3696 = !{!3697, !3701, !3702}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3695, file: !5, baseType: !3698, size: 32, align: 32, flags: DIFlagPrivate)
!3698 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !128, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !3699, templateParams: !287, identifier: "bfbed5a29c49721772982c8bebfc3819")
!3699 = !{!3700}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3698, file: !5, baseType: !1316, size: 32, align: 32, flags: DIFlagPrivate)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !3695, file: !5, baseType: !1316, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3695, file: !5, baseType: !3703, align: 8, offset: 64, flags: DIFlagPrivate)
!3703 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !138, file: !5, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !3704, identifier: "bfaa7d2d884b3deea70e5af93aa50e2b")
!3704 = !{!3705}
!3705 = !DITemplateTypeParameter(name: "T", type: !617)
!3706 = !DILocalVariable(name: "code_size", scope: !3707, file: !729, line: 882, type: !37, align: 8)
!3707 = distinct !DILexicalBlock(scope: !3694, file: !729, line: 882, column: 53)
!3708 = !DILocalVariable(name: "cs", scope: !3709, file: !729, line: 883, type: !158, align: 32)
!3709 = distinct !DILexicalBlock(scope: !3707, file: !729, line: 883, column: 13)
!3710 = !DILocalVariable(name: "used_symbols", scope: !3711, file: !729, line: 893, type: !105, align: 16)
!3711 = distinct !DILexicalBlock(scope: !3692, file: !729, line: 893, column: 9)
!3712 = !DILocalVariable(name: "total", scope: !3713, file: !729, line: 894, type: !108, align: 32)
!3713 = distinct !DILexicalBlock(scope: !3711, file: !729, line: 894, column: 9)
!3714 = !DILocalVariable(name: "iter", scope: !3715, file: !729, line: 896, type: !115, align: 32)
!3715 = distinct !DILexicalBlock(scope: !3713, file: !729, line: 896, column: 9)
!3716 = !DILocalVariable(name: "ts", scope: !3717, file: !729, line: 896, type: !105, align: 16)
!3717 = distinct !DILexicalBlock(scope: !3715, file: !729, line: 896, column: 88)
!3718 = !DILocalVariable(name: "next", scope: !3717, file: !729, line: 896, type: !107, align: 32)
!3719 = !DILocalVariable(name: "tree_next", scope: !3720, file: !729, line: 920, type: !762, align: 16)
!3720 = distinct !DILexicalBlock(scope: !3713, file: !729, line: 920, column: 9)
!3721 = !DILocalVariable(name: "iter", scope: !3722, file: !729, line: 921, type: !295, align: 32)
!3722 = distinct !DILexicalBlock(scope: !3720, file: !729, line: 921, column: 9)
!3723 = !DILocalVariable(name: "symbol_index", scope: !3724, file: !729, line: 921, type: !158, align: 32)
!3724 = distinct !DILexicalBlock(scope: !3722, file: !729, line: 921, column: 43)
!3725 = !DILocalVariable(name: "code_size", scope: !3726, file: !729, line: 924, type: !37, align: 8)
!3726 = distinct !DILexicalBlock(scope: !3724, file: !729, line: 924, column: 13)
!3727 = !DILocalVariable(name: "cur_code", scope: !3728, file: !729, line: 929, type: !108, align: 32)
!3728 = distinct !DILexicalBlock(scope: !3726, file: !729, line: 929, column: 13)
!3729 = !DILocalVariable(name: "n", scope: !3730, file: !729, line: 932, type: !105, align: 16)
!3730 = distinct !DILexicalBlock(scope: !3728, file: !729, line: 932, column: 13)
!3731 = !DILocalVariable(name: "rev_code", scope: !3732, file: !729, line: 934, type: !105, align: 16)
!3732 = distinct !DILexicalBlock(scope: !3730, file: !729, line: 934, column: 13)
!3733 = !DILocalVariable(name: "k", scope: !3734, file: !729, line: 946, type: !762, align: 16)
!3734 = distinct !DILexicalBlock(scope: !3732, file: !729, line: 946, column: 17)
!3735 = !DILocalVariable(name: "tree_cur", scope: !3736, file: !729, line: 954, type: !762, align: 16)
!3736 = distinct !DILexicalBlock(scope: !3732, file: !729, line: 954, column: 13)
!3737 = !DILocalVariable(name: "iter", scope: !3738, file: !729, line: 962, type: !3739, align: 8)
!3738 = distinct !DILexicalBlock(scope: !3736, file: !729, line: 962, column: 13)
!3739 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<u8>", scope: !194, file: !5, size: 16, align: 8, flags: DIFlagPublic, elements: !3740, templateParams: !3743, identifier: "22e411b017f9ab39be60c1c210992558")
!3740 = !{!3741, !3742}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3739, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagPublic)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3739, file: !5, baseType: !37, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!3743 = !{!3744}
!3744 = !DITemplateTypeParameter(name: "Idx", type: !37)
!3745 = !DILocalVariable(name: "tree_index", scope: !3746, file: !729, line: 965, type: !158, align: 32)
!3746 = distinct !DILexicalBlock(scope: !3738, file: !729, line: 965, column: 17)
!3747 = !DILocalVariable(name: "tree_index", scope: !3748, file: !729, line: 980, type: !158, align: 32)
!3748 = distinct !DILexicalBlock(scope: !3736, file: !729, line: 980, column: 13)
!3749 = !DILocation(line: 845, column: 14, scope: !3655)
!3750 = !DILocation(line: 845, column: 41, scope: !3655)
!3751 = !DILocation(line: 849, column: 13, scope: !3677)
!3752 = !DILocation(line: 857, column: 13, scope: !3682)
!3753 = !DILocation(line: 859, column: 13, scope: !3687)
!3754 = !DILocation(line: 882, column: 27, scope: !3694)
!3755 = !DILocation(line: 893, column: 13, scope: !3711)
!3756 = !DILocation(line: 894, column: 13, scope: !3713)
!3757 = !DILocation(line: 896, column: 28, scope: !3715)
!3758 = !DILocation(line: 920, column: 13, scope: !3720)
!3759 = !DILocation(line: 921, column: 29, scope: !3722)
!3760 = !DILocation(line: 934, column: 17, scope: !3732)
!3761 = !DILocation(line: 954, column: 17, scope: !3736)
!3762 = !DILocation(line: 962, column: 22, scope: !3738)
!3763 = !DILocation(line: 846, column: 5, scope: !3655)
!3764 = !DILocation(line: 847, column: 18, scope: !3655)
!3765 = !DILocation(line: 847, column: 13, scope: !3675)
!3766 = !DILocation(line: 849, column: 26, scope: !3675)
!3767 = !DILocation(line: 853, column: 25, scope: !3675)
!3768 = !DILocation(line: 853, column: 18, scope: !3675)
!3769 = !DILocation(line: 850, column: 34, scope: !3675)
!3770 = !DILocation(line: 850, column: 53, scope: !3675)
!3771 = !DILocation(line: 850, column: 29, scope: !3675)
!3772 = !DILocation(line: 851, column: 27, scope: !3675)
!3773 = !DILocation(line: 851, column: 47, scope: !3675)
!3774 = !DILocation(line: 852, column: 30, scope: !3675)
!3775 = !DILocation(line: 852, column: 53, scope: !3675)
!3776 = !DILocation(line: 855, column: 26, scope: !3677)
!3777 = !DILocation(line: 855, column: 21, scope: !3677)
!3778 = !DILocation(line: 855, column: 13, scope: !3679)
!3779 = !DILocation(line: 857, column: 33, scope: !3679)
!3780 = !DILocation(line: 859, column: 29, scope: !3682)
!3781 = !DILocation(line: 867, column: 23, scope: !3687)
!3782 = !DILocation(line: 873, column: 12, scope: !3687)
!3783 = !DILocation(line: 877, column: 26, scope: !3687)
!3784 = !DILocation(line: 874, column: 13, scope: !3687)
!3785 = !DILocation(line: 874, column: 24, scope: !3687)
!3786 = !DILocation(line: 877, column: 13, scope: !3692)
!3787 = !DILocation(line: 878, column: 25, scope: !3692)
!3788 = !DILocation(line: 878, column: 12, scope: !3692)
!3789 = !DILocation(line: 882, column: 28, scope: !3692)
!3790 = !DILocation(line: 17, column: 14, scope: !1265, inlinedAt: !3791)
!3791 = distinct !DILocation(line: 882, column: 38, scope: !3692)
!3792 = !DILocation(line: 17, column: 21, scope: !1265, inlinedAt: !3791)
!3793 = !DILocation(line: 523, column: 14, scope: !1279, inlinedAt: !3794)
!3794 = distinct !DILocation(line: 18, column: 15, scope: !1265, inlinedAt: !3791)
!3795 = !DILocation(line: 523, column: 20, scope: !1279, inlinedAt: !3794)
!3796 = !DILocation(line: 430, column: 14, scope: !1289, inlinedAt: !3797)
!3797 = distinct !DILocation(line: 524, column: 23, scope: !1279, inlinedAt: !3794)
!3798 = !DILocation(line: 430, column: 20, scope: !1289, inlinedAt: !3797)
!3799 = !DILocation(line: 432, column: 32, scope: !1289, inlinedAt: !3797)
!3800 = !DILocation(line: 432, column: 16, scope: !1289, inlinedAt: !3797)
!3801 = !DILocation(line: 432, column: 21, scope: !1289, inlinedAt: !3797)
!3802 = !DILocation(line: 433, column: 16, scope: !1289, inlinedAt: !3797)
!3803 = !DILocation(line: 438, column: 13, scope: !1289, inlinedAt: !3797)
!3804 = !DILocation(line: 82, column: 5, scope: !1304, inlinedAt: !3805)
!3805 = distinct !DILocation(line: 436, column: 24, scope: !1289, inlinedAt: !3797)
!3806 = !DILocation(line: 83, column: 5, scope: !1304, inlinedAt: !3805)
!3807 = !DILocation(line: 84, column: 5, scope: !1304, inlinedAt: !3805)
!3808 = !DILocation(line: 86, column: 15, scope: !1304, inlinedAt: !3805)
!3809 = !DILocation(line: 86, column: 9, scope: !1315, inlinedAt: !3805)
!3810 = !DILocation(line: 88, column: 24, scope: !1315, inlinedAt: !3805)
!3811 = !DILocation(line: 88, column: 9, scope: !1318, inlinedAt: !3805)
!3812 = !DILocation(line: 90, column: 2, scope: !1304, inlinedAt: !3805)
!3813 = !DILocation(line: 19, column: 6, scope: !1265, inlinedAt: !3791)
!3814 = !DILocation(line: 882, column: 38, scope: !3692)
!3815 = !DILocation(line: 882, column: 27, scope: !3692)
!3816 = !DILocation(line: 882, column: 9, scope: !3694)
!3817 = !DILocation(line: 879, column: 20, scope: !3692)
!3818 = !DILocation(line: 0, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !3692, file: !507, discriminator: 0)
!3820 = !DILocation(line: 882, column: 14, scope: !3694)
!3821 = !DILocation(line: 882, column: 14, scope: !3707)
!3822 = !DILocation(line: 883, column: 22, scope: !3707)
!3823 = !DILocation(line: 883, column: 17, scope: !3709)
!3824 = !DILocation(line: 887, column: 16, scope: !3709)
!3825 = !DILocation(line: 893, column: 32, scope: !3692)
!3826 = !DILocation(line: 894, column: 25, scope: !3711)
!3827 = !DILocation(line: 896, column: 42, scope: !3713)
!3828 = !DILocation(line: 896, column: 62, scope: !3713)
!3829 = !DILocation(line: 896, column: 68, scope: !3713)
!3830 = !DILocation(line: 896, column: 49, scope: !3713)
!3831 = !DILocation(line: 896, column: 80, scope: !3713)
!3832 = !DILocation(line: 896, column: 28, scope: !3713)
!3833 = !DILocation(line: 896, column: 9, scope: !3715)
!3834 = !DILocation(line: 896, column: 15, scope: !3715)
!3835 = !DILocation(line: 896, column: 15, scope: !3717)
!3836 = !DILocation(line: 896, column: 19, scope: !3715)
!3837 = !DILocation(line: 896, column: 19, scope: !3717)
!3838 = !DILocation(line: 897, column: 13, scope: !3717)
!3839 = !DILocation(line: 916, column: 12, scope: !3713)
!3840 = !DILocation(line: 920, column: 29, scope: !3713)
!3841 = !DILocation(line: 921, column: 29, scope: !3720)
!3842 = !DILocation(line: 921, column: 9, scope: !3722)
!3843 = !DILocation(line: 916, column: 32, scope: !3713)
!3844 = !DILocation(line: 916, column: 52, scope: !3713)
!3845 = !DILocation(line: 917, column: 20, scope: !3713)
!3846 = !DILocation(line: 0, scope: !3847)
!3847 = !DILexicalBlockFile(scope: !3713, file: !507, discriminator: 0)
!3848 = !DILocation(line: 921, column: 13, scope: !3722)
!3849 = !DILocation(line: 921, column: 13, scope: !3724)
!3850 = !DILocation(line: 924, column: 29, scope: !3724)
!3851 = !DILocation(line: 987, column: 12, scope: !3720)
!3852 = !DILocation(line: 992, column: 12, scope: !3720)
!3853 = !DILocation(line: 988, column: 13, scope: !3720)
!3854 = !DILocation(line: 989, column: 20, scope: !3720)
!3855 = !DILocation(line: 0, scope: !3856)
!3856 = !DILexicalBlockFile(scope: !3720, file: !507, discriminator: 0)
!3857 = !DILocation(line: 995, column: 9, scope: !3720)
!3858 = !DILocation(line: 998, column: 5, scope: !3655)
!3859 = !DILocation(line: 1000, column: 5, scope: !3655)
!3860 = !DILocation(line: 1001, column: 2, scope: !3655)
!3861 = !DILocation(line: 924, column: 17, scope: !3726)
!3862 = !DILocation(line: 925, column: 16, scope: !3726)
!3863 = !DILocation(line: 929, column: 38, scope: !3726)
!3864 = !DILocation(line: 929, column: 28, scope: !3726)
!3865 = !DILocation(line: 929, column: 17, scope: !3728)
!3866 = !DILocation(line: 930, column: 23, scope: !3728)
!3867 = !DILocation(line: 930, column: 13, scope: !3728)
!3868 = !DILocation(line: 932, column: 46, scope: !3728)
!3869 = !DILocation(line: 932, column: 33, scope: !3728)
!3870 = !DILocation(line: 932, column: 21, scope: !3728)
!3871 = !DILocation(line: 932, column: 17, scope: !3730)
!3872 = !DILocation(line: 934, column: 35, scope: !3730)
!3873 = !DILocation(line: 487, column: 35, scope: !2684, inlinedAt: !3874)
!3874 = distinct !DILocation(line: 942, column: 19, scope: !3730)
!3875 = !DILocation(line: 488, column: 13, scope: !2684, inlinedAt: !3874)
!3876 = !DILocation(line: 942, column: 19, scope: !3730)
!3877 = !DILocation(line: 940, column: 17, scope: !3730)
!3878 = !DILocation(line: 943, column: 18, scope: !3730)
!3879 = !DILocation(line: 934, column: 32, scope: !3730)
!3880 = !DILocation(line: 945, column: 16, scope: !3732)
!3881 = !DILocation(line: 954, column: 47, scope: !3732)
!3882 = !DILocation(line: 954, column: 46, scope: !3732)
!3883 = !DILocation(line: 954, column: 32, scope: !3732)
!3884 = !DILocalVariable(name: "small", arg: 1, scope: !3885, file: !1090, line: 78, type: !37)
!3885 = distinct !DISubprogram(name: "from", linkageName: "_ZN4core7convert3num63_$LT$impl$u20$core..convert..From$LT$u8$GT$$u20$for$u20$i16$GT$4from17ha48ec5806a783f09E", scope: !3886, file: !1090, line: 78, type: !3887, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !3889)
!3886 = !DINamespace(name: "{impl#86}", scope: !1092)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{!762, !37}
!3889 = !{!3884}
!3890 = !DILocation(line: 78, column: 21, scope: !3885, inlinedAt: !3891)
!3891 = distinct !DILocation(line: 946, column: 26, scope: !3732)
!3892 = !DILocation(line: 79, column: 17, scope: !3885, inlinedAt: !3891)
!3893 = !DILocation(line: 946, column: 25, scope: !3732)
!3894 = !DILocation(line: 946, column: 55, scope: !3732)
!3895 = !DILocation(line: 946, column: 21, scope: !3734)
!3896 = !DILocation(line: 947, column: 17, scope: !3734)
!3897 = !DILocation(line: 955, column: 16, scope: !3736)
!3898 = !DILocation(line: 961, column: 13, scope: !3736)
!3899 = !DILocation(line: 962, column: 22, scope: !3736)
!3900 = !DILocation(line: 962, column: 13, scope: !3738)
!3901 = !DILocation(line: 956, column: 79, scope: !3736)
!3902 = !DILocation(line: 956, column: 32, scope: !3736)
!3903 = !DILocation(line: 956, column: 31, scope: !3736)
!3904 = !DILocation(line: 956, column: 17, scope: !3736)
!3905 = !DILocation(line: 957, column: 28, scope: !3736)
!3906 = !DILocation(line: 957, column: 17, scope: !3736)
!3907 = !DILocation(line: 958, column: 17, scope: !3736)
!3908 = !DILocation(line: 955, column: 13, scope: !3736)
!3909 = !DILocation(line: 963, column: 17, scope: !3738)
!3910 = !DILocation(line: 964, column: 30, scope: !3738)
!3911 = !DILocation(line: 964, column: 29, scope: !3738)
!3912 = !DILocation(line: 964, column: 17, scope: !3738)
!3913 = !DILocation(line: 978, column: 13, scope: !3736)
!3914 = !DILocation(line: 979, column: 26, scope: !3736)
!3915 = !DILocation(line: 979, column: 25, scope: !3736)
!3916 = !DILocation(line: 979, column: 13, scope: !3736)
!3917 = !DILocation(line: 980, column: 32, scope: !3736)
!3918 = !DILocation(line: 980, column: 31, scope: !3736)
!3919 = !DILocation(line: 980, column: 30, scope: !3736)
!3920 = !DILocation(line: 980, column: 17, scope: !3748)
!3921 = !DILocation(line: 981, column: 30, scope: !3748)
!3922 = !DILocation(line: 981, column: 16, scope: !3748)
!3923 = !DILocation(line: 984, column: 13, scope: !3748)
!3924 = !DILocation(line: 982, column: 24, scope: !3748)
!3925 = !DILocation(line: 0, scope: !3926)
!3926 = !DILexicalBlockFile(scope: !3736, file: !507, discriminator: 0)
!3927 = !DILocation(line: 965, column: 36, scope: !3738)
!3928 = !DILocation(line: 965, column: 35, scope: !3738)
!3929 = !DILocation(line: 965, column: 34, scope: !3738)
!3930 = !DILocation(line: 965, column: 21, scope: !3746)
!3931 = !DILocation(line: 966, column: 34, scope: !3746)
!3932 = !DILocation(line: 966, column: 20, scope: !3746)
!3933 = !DILocation(line: 969, column: 20, scope: !3746)
!3934 = !DILocation(line: 967, column: 28, scope: !3746)
!3935 = !DILocation(line: 970, column: 46, scope: !3746)
!3936 = !DILocation(line: 970, column: 21, scope: !3746)
!3937 = !DILocation(line: 974, column: 32, scope: !3746)
!3938 = !DILocation(line: 971, column: 32, scope: !3746)
!3939 = !DILocation(line: 971, column: 21, scope: !3746)
!3940 = !DILocation(line: 972, column: 21, scope: !3746)
!3941 = !DILocation(line: 969, column: 17, scope: !3746)
!3942 = !DILocation(line: 974, column: 21, scope: !3746)
!3943 = !DILocation(line: 947, column: 23, scope: !3734)
!3944 = !DILocation(line: 948, column: 35, scope: !3734)
!3945 = !DILocation(line: 948, column: 21, scope: !3734)
!3946 = !DILocation(line: 949, column: 33, scope: !3734)
!3947 = !DILocation(line: 949, column: 21, scope: !3734)
!3948 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !3949)
!3949 = distinct !DILocation(line: 898, column: 22, scope: !3717)
!3950 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !3949)
!3951 = !DILocation(line: 898, column: 13, scope: !3717)
!3952 = !DILocation(line: 899, column: 13, scope: !3717)
!3953 = !DILocation(line: 900, column: 21, scope: !3717)
!3954 = !DILocation(line: 900, column: 13, scope: !3717)
!3955 = !DILocation(line: 890, column: 13, scope: !3709)
!3956 = !DILocation(line: 888, column: 24, scope: !3709)
!3957 = !DILocation(line: 0, scope: !3958)
!3958 = !DILexicalBlockFile(scope: !3655, file: !507, discriminator: 0)
!3959 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#12}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17h288010cbd3bc759bE", scope: !36, file: !729, line: 731, type: !3960, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3972, retainedNodes: !3962)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!1875, !1441, !108, !600, !108, !2010}
!3962 = !{!3963, !3964, !3965, !3966, !3967, !3968, !3970}
!3963 = !DILocalVariable(name: "l", arg: 1, scope: !3959, file: !729, line: 732, type: !1441)
!3964 = !DILocalVariable(name: "amount", arg: 2, scope: !3959, file: !729, line: 733, type: !108)
!3965 = !DILocalVariable(name: "in_iter", arg: 3, scope: !3959, file: !729, line: 734, type: !600)
!3966 = !DILocalVariable(name: "flags", arg: 4, scope: !3959, file: !729, line: 735, type: !108)
!3967 = !DILocalVariable(name: "f", arg: 5, scope: !3959, file: !729, line: 736, type: !2010)
!3968 = !DILocalVariable(name: "action", scope: !3969, file: !729, line: 744, type: !1875, align: 8)
!3969 = distinct !DILexicalBlock(scope: !3959, file: !729, line: 744, column: 9)
!3970 = !DILocalVariable(name: "bits", scope: !3971, file: !729, line: 756, type: !108, align: 32)
!3971 = distinct !DILexicalBlock(scope: !3959, file: !729, line: 756, column: 5)
!3972 = !{!3973}
!3973 = !DITemplateTypeParameter(name: "F", type: !2010)
!3974 = !DILocation(line: 732, column: 5, scope: !3959)
!3975 = !DILocation(line: 733, column: 5, scope: !3959)
!3976 = !DILocation(line: 734, column: 5, scope: !3959)
!3977 = !DILocation(line: 735, column: 5, scope: !3959)
!3978 = !DILocation(line: 736, column: 5, scope: !3959)
!3979 = !DILocation(line: 743, column: 5, scope: !3959)
!3980 = !DILocation(line: 743, column: 11, scope: !3959)
!3981 = !DILocation(line: 756, column: 16, scope: !3959)
!3982 = !DILocation(line: 756, column: 29, scope: !3959)
!3983 = !DILocation(line: 744, column: 48, scope: !3959)
!3984 = !DILocation(line: 744, column: 22, scope: !3959)
!3985 = !DILocation(line: 744, column: 13, scope: !3969)
!3986 = !DILocation(line: 751, column: 22, scope: !3969)
!3987 = !DILocation(line: 751, column: 13, scope: !3969)
!3988 = !DILocation(line: 756, column: 28, scope: !3959)
!3989 = !DILocation(line: 756, column: 9, scope: !3971)
!3990 = !DILocation(line: 757, column: 5, scope: !3971)
!3991 = !DILocation(line: 758, column: 5, scope: !3971)
!3992 = !DILocation(line: 759, column: 5, scope: !3971)
!3993 = !DILocation(line: 760, column: 2, scope: !3959)
!3994 = !DILocation(line: 752, column: 20, scope: !3969)
!3995 = !DILocation(line: 760, column: 1, scope: !3959)
!3996 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#6}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17h66e7e21f8e400e8bE", scope: !36, file: !729, line: 731, type: !3997, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4009, retainedNodes: !3999)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!1875, !1441, !108, !600, !108, !2212}
!3999 = !{!4000, !4001, !4002, !4003, !4004, !4005, !4007}
!4000 = !DILocalVariable(name: "l", arg: 1, scope: !3996, file: !729, line: 732, type: !1441)
!4001 = !DILocalVariable(name: "amount", arg: 2, scope: !3996, file: !729, line: 733, type: !108)
!4002 = !DILocalVariable(name: "in_iter", arg: 3, scope: !3996, file: !729, line: 734, type: !600)
!4003 = !DILocalVariable(name: "flags", arg: 4, scope: !3996, file: !729, line: 735, type: !108)
!4004 = !DILocalVariable(name: "f", arg: 5, scope: !3996, file: !729, line: 736, type: !2212)
!4005 = !DILocalVariable(name: "action", scope: !4006, file: !729, line: 744, type: !1875, align: 8)
!4006 = distinct !DILexicalBlock(scope: !3996, file: !729, line: 744, column: 9)
!4007 = !DILocalVariable(name: "bits", scope: !4008, file: !729, line: 756, type: !108, align: 32)
!4008 = distinct !DILexicalBlock(scope: !3996, file: !729, line: 756, column: 5)
!4009 = !{!4010}
!4010 = !DITemplateTypeParameter(name: "F", type: !2212)
!4011 = !DILocation(line: 732, column: 5, scope: !3996)
!4012 = !DILocation(line: 733, column: 5, scope: !3996)
!4013 = !DILocation(line: 734, column: 5, scope: !3996)
!4014 = !DILocation(line: 735, column: 5, scope: !3996)
!4015 = !DILocation(line: 736, column: 5, scope: !3996)
!4016 = !DILocation(line: 743, column: 5, scope: !3996)
!4017 = !DILocation(line: 743, column: 11, scope: !3996)
!4018 = !DILocation(line: 756, column: 16, scope: !3996)
!4019 = !DILocation(line: 756, column: 29, scope: !3996)
!4020 = !DILocation(line: 744, column: 48, scope: !3996)
!4021 = !DILocation(line: 744, column: 22, scope: !3996)
!4022 = !DILocation(line: 744, column: 13, scope: !4006)
!4023 = !DILocation(line: 751, column: 22, scope: !4006)
!4024 = !DILocation(line: 751, column: 13, scope: !4006)
!4025 = !DILocation(line: 756, column: 28, scope: !3996)
!4026 = !DILocation(line: 756, column: 9, scope: !4008)
!4027 = !DILocation(line: 757, column: 5, scope: !4008)
!4028 = !DILocation(line: 758, column: 5, scope: !4008)
!4029 = !DILocation(line: 759, column: 5, scope: !4008)
!4030 = !DILocation(line: 760, column: 2, scope: !3996)
!4031 = !DILocation(line: 752, column: 20, scope: !4006)
!4032 = !DILocation(line: 760, column: 1, scope: !3996)
!4033 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#14}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17h6bec93435712bff5E", scope: !36, file: !729, line: 731, type: !4034, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4046, retainedNodes: !4036)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!1875, !1441, !108, !600, !108, !2033}
!4036 = !{!4037, !4038, !4039, !4040, !4041, !4042, !4044}
!4037 = !DILocalVariable(name: "l", arg: 1, scope: !4033, file: !729, line: 732, type: !1441)
!4038 = !DILocalVariable(name: "amount", arg: 2, scope: !4033, file: !729, line: 733, type: !108)
!4039 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4033, file: !729, line: 734, type: !600)
!4040 = !DILocalVariable(name: "flags", arg: 4, scope: !4033, file: !729, line: 735, type: !108)
!4041 = !DILocalVariable(name: "f", arg: 5, scope: !4033, file: !729, line: 736, type: !2033)
!4042 = !DILocalVariable(name: "action", scope: !4043, file: !729, line: 744, type: !1875, align: 8)
!4043 = distinct !DILexicalBlock(scope: !4033, file: !729, line: 744, column: 9)
!4044 = !DILocalVariable(name: "bits", scope: !4045, file: !729, line: 756, type: !108, align: 32)
!4045 = distinct !DILexicalBlock(scope: !4033, file: !729, line: 756, column: 5)
!4046 = !{!4047}
!4047 = !DITemplateTypeParameter(name: "F", type: !2033)
!4048 = !DILocation(line: 732, column: 5, scope: !4033)
!4049 = !DILocation(line: 733, column: 5, scope: !4033)
!4050 = !DILocation(line: 734, column: 5, scope: !4033)
!4051 = !DILocation(line: 735, column: 5, scope: !4033)
!4052 = !DILocation(line: 736, column: 5, scope: !4033)
!4053 = !DILocation(line: 743, column: 5, scope: !4033)
!4054 = !DILocation(line: 743, column: 11, scope: !4033)
!4055 = !DILocation(line: 756, column: 16, scope: !4033)
!4056 = !DILocation(line: 756, column: 29, scope: !4033)
!4057 = !DILocation(line: 744, column: 48, scope: !4033)
!4058 = !DILocation(line: 744, column: 22, scope: !4033)
!4059 = !DILocation(line: 744, column: 13, scope: !4043)
!4060 = !DILocation(line: 751, column: 22, scope: !4043)
!4061 = !DILocation(line: 751, column: 13, scope: !4043)
!4062 = !DILocation(line: 756, column: 28, scope: !4033)
!4063 = !DILocation(line: 756, column: 9, scope: !4045)
!4064 = !DILocation(line: 757, column: 5, scope: !4045)
!4065 = !DILocation(line: 758, column: 5, scope: !4045)
!4066 = !DILocation(line: 759, column: 5, scope: !4045)
!4067 = !DILocation(line: 760, column: 2, scope: !4033)
!4068 = !DILocation(line: 752, column: 20, scope: !4043)
!4069 = !DILocation(line: 760, column: 1, scope: !4033)
!4070 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#15}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17h88437ac8f8dc885dE", scope: !36, file: !729, line: 731, type: !4071, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4083, retainedNodes: !4073)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{!1875, !1441, !108, !600, !108, !2650}
!4073 = !{!4074, !4075, !4076, !4077, !4078, !4079, !4081}
!4074 = !DILocalVariable(name: "l", arg: 1, scope: !4070, file: !729, line: 732, type: !1441)
!4075 = !DILocalVariable(name: "amount", arg: 2, scope: !4070, file: !729, line: 733, type: !108)
!4076 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4070, file: !729, line: 734, type: !600)
!4077 = !DILocalVariable(name: "flags", arg: 4, scope: !4070, file: !729, line: 735, type: !108)
!4078 = !DILocalVariable(name: "f", arg: 5, scope: !4070, file: !729, line: 736, type: !2650)
!4079 = !DILocalVariable(name: "action", scope: !4080, file: !729, line: 744, type: !1875, align: 8)
!4080 = distinct !DILexicalBlock(scope: !4070, file: !729, line: 744, column: 9)
!4081 = !DILocalVariable(name: "bits", scope: !4082, file: !729, line: 756, type: !108, align: 32)
!4082 = distinct !DILexicalBlock(scope: !4070, file: !729, line: 756, column: 5)
!4083 = !{!4084}
!4084 = !DITemplateTypeParameter(name: "F", type: !2650)
!4085 = !DILocation(line: 732, column: 5, scope: !4070)
!4086 = !DILocation(line: 733, column: 5, scope: !4070)
!4087 = !DILocation(line: 734, column: 5, scope: !4070)
!4088 = !DILocation(line: 735, column: 5, scope: !4070)
!4089 = !DILocation(line: 736, column: 5, scope: !4070)
!4090 = !DILocation(line: 743, column: 5, scope: !4070)
!4091 = !DILocation(line: 743, column: 11, scope: !4070)
!4092 = !DILocation(line: 756, column: 16, scope: !4070)
!4093 = !DILocation(line: 756, column: 29, scope: !4070)
!4094 = !DILocation(line: 744, column: 48, scope: !4070)
!4095 = !DILocation(line: 744, column: 22, scope: !4070)
!4096 = !DILocation(line: 744, column: 13, scope: !4080)
!4097 = !DILocation(line: 751, column: 22, scope: !4080)
!4098 = !DILocation(line: 751, column: 13, scope: !4080)
!4099 = !DILocation(line: 756, column: 28, scope: !4070)
!4100 = !DILocation(line: 756, column: 9, scope: !4082)
!4101 = !DILocation(line: 757, column: 5, scope: !4082)
!4102 = !DILocation(line: 758, column: 5, scope: !4082)
!4103 = !DILocation(line: 759, column: 5, scope: !4082)
!4104 = !DILocation(line: 760, column: 2, scope: !4070)
!4105 = !DILocation(line: 752, column: 20, scope: !4080)
!4106 = !DILocation(line: 760, column: 1, scope: !4070)
!4107 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#7}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17h919057ec6bc2f307E", scope: !36, file: !729, line: 731, type: !4108, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4120, retainedNodes: !4110)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!1875, !1441, !108, !600, !108, !2067}
!4110 = !{!4111, !4112, !4113, !4114, !4115, !4116, !4118}
!4111 = !DILocalVariable(name: "l", arg: 1, scope: !4107, file: !729, line: 732, type: !1441)
!4112 = !DILocalVariable(name: "amount", arg: 2, scope: !4107, file: !729, line: 733, type: !108)
!4113 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4107, file: !729, line: 734, type: !600)
!4114 = !DILocalVariable(name: "flags", arg: 4, scope: !4107, file: !729, line: 735, type: !108)
!4115 = !DILocalVariable(name: "f", arg: 5, scope: !4107, file: !729, line: 736, type: !2067)
!4116 = !DILocalVariable(name: "action", scope: !4117, file: !729, line: 744, type: !1875, align: 8)
!4117 = distinct !DILexicalBlock(scope: !4107, file: !729, line: 744, column: 9)
!4118 = !DILocalVariable(name: "bits", scope: !4119, file: !729, line: 756, type: !108, align: 32)
!4119 = distinct !DILexicalBlock(scope: !4107, file: !729, line: 756, column: 5)
!4120 = !{!4121}
!4121 = !DITemplateTypeParameter(name: "F", type: !2067)
!4122 = !DILocation(line: 732, column: 5, scope: !4107)
!4123 = !DILocation(line: 733, column: 5, scope: !4107)
!4124 = !DILocation(line: 734, column: 5, scope: !4107)
!4125 = !DILocation(line: 735, column: 5, scope: !4107)
!4126 = !DILocation(line: 736, column: 5, scope: !4107)
!4127 = !DILocation(line: 743, column: 5, scope: !4107)
!4128 = !DILocation(line: 743, column: 11, scope: !4107)
!4129 = !DILocation(line: 756, column: 16, scope: !4107)
!4130 = !DILocation(line: 756, column: 29, scope: !4107)
!4131 = !DILocation(line: 744, column: 48, scope: !4107)
!4132 = !DILocation(line: 744, column: 22, scope: !4107)
!4133 = !DILocation(line: 744, column: 13, scope: !4117)
!4134 = !DILocation(line: 751, column: 22, scope: !4117)
!4135 = !DILocation(line: 751, column: 13, scope: !4117)
!4136 = !DILocation(line: 756, column: 28, scope: !4107)
!4137 = !DILocation(line: 756, column: 9, scope: !4119)
!4138 = !DILocation(line: 757, column: 5, scope: !4119)
!4139 = !DILocation(line: 758, column: 5, scope: !4119)
!4140 = !DILocation(line: 759, column: 5, scope: !4119)
!4141 = !DILocation(line: 760, column: 2, scope: !4107)
!4142 = !DILocation(line: 752, column: 20, scope: !4117)
!4143 = !DILocation(line: 760, column: 1, scope: !4107)
!4144 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#2}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17hae2123298af03554E", scope: !36, file: !729, line: 731, type: !4145, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4157, retainedNodes: !4147)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!1875, !1441, !108, !600, !108, !2119}
!4147 = !{!4148, !4149, !4150, !4151, !4152, !4153, !4155}
!4148 = !DILocalVariable(name: "l", arg: 1, scope: !4144, file: !729, line: 732, type: !1441)
!4149 = !DILocalVariable(name: "amount", arg: 2, scope: !4144, file: !729, line: 733, type: !108)
!4150 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4144, file: !729, line: 734, type: !600)
!4151 = !DILocalVariable(name: "flags", arg: 4, scope: !4144, file: !729, line: 735, type: !108)
!4152 = !DILocalVariable(name: "f", arg: 5, scope: !4144, file: !729, line: 736, type: !2119)
!4153 = !DILocalVariable(name: "action", scope: !4154, file: !729, line: 744, type: !1875, align: 8)
!4154 = distinct !DILexicalBlock(scope: !4144, file: !729, line: 744, column: 9)
!4155 = !DILocalVariable(name: "bits", scope: !4156, file: !729, line: 756, type: !108, align: 32)
!4156 = distinct !DILexicalBlock(scope: !4144, file: !729, line: 756, column: 5)
!4157 = !{!4158}
!4158 = !DITemplateTypeParameter(name: "F", type: !2119)
!4159 = !DILocation(line: 732, column: 5, scope: !4144)
!4160 = !DILocation(line: 733, column: 5, scope: !4144)
!4161 = !DILocation(line: 734, column: 5, scope: !4144)
!4162 = !DILocation(line: 735, column: 5, scope: !4144)
!4163 = !DILocation(line: 736, column: 5, scope: !4144)
!4164 = !DILocation(line: 743, column: 5, scope: !4144)
!4165 = !DILocation(line: 743, column: 11, scope: !4144)
!4166 = !DILocation(line: 756, column: 16, scope: !4144)
!4167 = !DILocation(line: 756, column: 29, scope: !4144)
!4168 = !DILocation(line: 744, column: 48, scope: !4144)
!4169 = !DILocation(line: 744, column: 22, scope: !4144)
!4170 = !DILocation(line: 744, column: 13, scope: !4154)
!4171 = !DILocation(line: 751, column: 22, scope: !4154)
!4172 = !DILocation(line: 751, column: 13, scope: !4154)
!4173 = !DILocation(line: 756, column: 28, scope: !4144)
!4174 = !DILocation(line: 756, column: 9, scope: !4156)
!4175 = !DILocation(line: 757, column: 5, scope: !4156)
!4176 = !DILocation(line: 758, column: 5, scope: !4156)
!4177 = !DILocation(line: 759, column: 5, scope: !4156)
!4178 = !DILocation(line: 760, column: 2, scope: !4144)
!4179 = !DILocation(line: 752, column: 20, scope: !4154)
!4180 = !DILocation(line: 760, column: 1, scope: !4144)
!4181 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#16}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17hb0997e645d13c603E", scope: !36, file: !729, line: 731, type: !4182, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4194, retainedNodes: !4184)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{!1875, !1441, !108, !600, !108, !2225}
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4192}
!4185 = !DILocalVariable(name: "l", arg: 1, scope: !4181, file: !729, line: 732, type: !1441)
!4186 = !DILocalVariable(name: "amount", arg: 2, scope: !4181, file: !729, line: 733, type: !108)
!4187 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4181, file: !729, line: 734, type: !600)
!4188 = !DILocalVariable(name: "flags", arg: 4, scope: !4181, file: !729, line: 735, type: !108)
!4189 = !DILocalVariable(name: "f", arg: 5, scope: !4181, file: !729, line: 736, type: !2225)
!4190 = !DILocalVariable(name: "action", scope: !4191, file: !729, line: 744, type: !1875, align: 8)
!4191 = distinct !DILexicalBlock(scope: !4181, file: !729, line: 744, column: 9)
!4192 = !DILocalVariable(name: "bits", scope: !4193, file: !729, line: 756, type: !108, align: 32)
!4193 = distinct !DILexicalBlock(scope: !4181, file: !729, line: 756, column: 5)
!4194 = !{!4195}
!4195 = !DITemplateTypeParameter(name: "F", type: !2225)
!4196 = !DILocation(line: 732, column: 5, scope: !4181)
!4197 = !DILocation(line: 733, column: 5, scope: !4181)
!4198 = !DILocation(line: 734, column: 5, scope: !4181)
!4199 = !DILocation(line: 735, column: 5, scope: !4181)
!4200 = !DILocation(line: 736, column: 5, scope: !4181)
!4201 = !DILocation(line: 743, column: 5, scope: !4181)
!4202 = !DILocation(line: 743, column: 11, scope: !4181)
!4203 = !DILocation(line: 756, column: 16, scope: !4181)
!4204 = !DILocation(line: 756, column: 29, scope: !4181)
!4205 = !DILocation(line: 744, column: 48, scope: !4181)
!4206 = !DILocation(line: 744, column: 22, scope: !4181)
!4207 = !DILocation(line: 744, column: 13, scope: !4191)
!4208 = !DILocation(line: 751, column: 22, scope: !4191)
!4209 = !DILocation(line: 751, column: 13, scope: !4191)
!4210 = !DILocation(line: 756, column: 28, scope: !4181)
!4211 = !DILocation(line: 756, column: 9, scope: !4193)
!4212 = !DILocation(line: 757, column: 5, scope: !4193)
!4213 = !DILocation(line: 758, column: 5, scope: !4193)
!4214 = !DILocation(line: 759, column: 5, scope: !4193)
!4215 = !DILocation(line: 760, column: 2, scope: !4181)
!4216 = !DILocation(line: 752, column: 20, scope: !4191)
!4217 = !DILocation(line: 760, column: 1, scope: !4181)
!4218 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#3}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17hc0ca427319091c08E", scope: !36, file: !729, line: 731, type: !4219, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4231, retainedNodes: !4221)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!1875, !1441, !108, !600, !108, !2665}
!4221 = !{!4222, !4223, !4224, !4225, !4226, !4227, !4229}
!4222 = !DILocalVariable(name: "l", arg: 1, scope: !4218, file: !729, line: 732, type: !1441)
!4223 = !DILocalVariable(name: "amount", arg: 2, scope: !4218, file: !729, line: 733, type: !108)
!4224 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4218, file: !729, line: 734, type: !600)
!4225 = !DILocalVariable(name: "flags", arg: 4, scope: !4218, file: !729, line: 735, type: !108)
!4226 = !DILocalVariable(name: "f", arg: 5, scope: !4218, file: !729, line: 736, type: !2665)
!4227 = !DILocalVariable(name: "action", scope: !4228, file: !729, line: 744, type: !1875, align: 8)
!4228 = distinct !DILexicalBlock(scope: !4218, file: !729, line: 744, column: 9)
!4229 = !DILocalVariable(name: "bits", scope: !4230, file: !729, line: 756, type: !108, align: 32)
!4230 = distinct !DILexicalBlock(scope: !4218, file: !729, line: 756, column: 5)
!4231 = !{!4232}
!4232 = !DITemplateTypeParameter(name: "F", type: !2665)
!4233 = !DILocation(line: 732, column: 5, scope: !4218)
!4234 = !DILocation(line: 733, column: 5, scope: !4218)
!4235 = !DILocation(line: 734, column: 5, scope: !4218)
!4236 = !DILocation(line: 735, column: 5, scope: !4218)
!4237 = !DILocation(line: 736, column: 5, scope: !4218)
!4238 = !DILocation(line: 743, column: 5, scope: !4218)
!4239 = !DILocation(line: 743, column: 11, scope: !4218)
!4240 = !DILocation(line: 756, column: 16, scope: !4218)
!4241 = !DILocation(line: 756, column: 29, scope: !4218)
!4242 = !DILocation(line: 744, column: 48, scope: !4218)
!4243 = !DILocation(line: 744, column: 22, scope: !4218)
!4244 = !DILocation(line: 744, column: 13, scope: !4228)
!4245 = !DILocation(line: 751, column: 22, scope: !4228)
!4246 = !DILocation(line: 751, column: 13, scope: !4228)
!4247 = !DILocation(line: 756, column: 28, scope: !4218)
!4248 = !DILocation(line: 756, column: 9, scope: !4230)
!4249 = !DILocation(line: 757, column: 5, scope: !4230)
!4250 = !DILocation(line: 758, column: 5, scope: !4230)
!4251 = !DILocation(line: 759, column: 5, scope: !4230)
!4252 = !DILocation(line: 760, column: 2, scope: !4218)
!4253 = !DILocation(line: 752, column: 20, scope: !4228)
!4254 = !DILocation(line: 760, column: 1, scope: !4218)
!4255 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#4}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17hc11b12166584f99bE", scope: !36, file: !729, line: 731, type: !4256, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4268, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!1875, !1441, !108, !600, !108, !2184}
!4258 = !{!4259, !4260, !4261, !4262, !4263, !4264, !4266}
!4259 = !DILocalVariable(name: "l", arg: 1, scope: !4255, file: !729, line: 732, type: !1441)
!4260 = !DILocalVariable(name: "amount", arg: 2, scope: !4255, file: !729, line: 733, type: !108)
!4261 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4255, file: !729, line: 734, type: !600)
!4262 = !DILocalVariable(name: "flags", arg: 4, scope: !4255, file: !729, line: 735, type: !108)
!4263 = !DILocalVariable(name: "f", arg: 5, scope: !4255, file: !729, line: 736, type: !2184)
!4264 = !DILocalVariable(name: "action", scope: !4265, file: !729, line: 744, type: !1875, align: 8)
!4265 = distinct !DILexicalBlock(scope: !4255, file: !729, line: 744, column: 9)
!4266 = !DILocalVariable(name: "bits", scope: !4267, file: !729, line: 756, type: !108, align: 32)
!4267 = distinct !DILexicalBlock(scope: !4255, file: !729, line: 756, column: 5)
!4268 = !{!4269}
!4269 = !DITemplateTypeParameter(name: "F", type: !2184)
!4270 = !DILocation(line: 732, column: 5, scope: !4255)
!4271 = !DILocation(line: 733, column: 5, scope: !4255)
!4272 = !DILocation(line: 734, column: 5, scope: !4255)
!4273 = !DILocation(line: 735, column: 5, scope: !4255)
!4274 = !DILocation(line: 736, column: 5, scope: !4255)
!4275 = !DILocation(line: 743, column: 5, scope: !4255)
!4276 = !DILocation(line: 743, column: 11, scope: !4255)
!4277 = !DILocation(line: 756, column: 16, scope: !4255)
!4278 = !DILocation(line: 756, column: 29, scope: !4255)
!4279 = !DILocation(line: 744, column: 48, scope: !4255)
!4280 = !DILocation(line: 744, column: 22, scope: !4255)
!4281 = !DILocation(line: 744, column: 13, scope: !4265)
!4282 = !DILocation(line: 751, column: 22, scope: !4265)
!4283 = !DILocation(line: 751, column: 13, scope: !4265)
!4284 = !DILocation(line: 756, column: 28, scope: !4255)
!4285 = !DILocation(line: 756, column: 9, scope: !4267)
!4286 = !DILocation(line: 757, column: 5, scope: !4267)
!4287 = !DILocation(line: 758, column: 5, scope: !4267)
!4288 = !DILocation(line: 759, column: 5, scope: !4267)
!4289 = !DILocation(line: 760, column: 2, scope: !4255)
!4290 = !DILocation(line: 752, column: 20, scope: !4265)
!4291 = !DILocation(line: 760, column: 1, scope: !4255)
!4292 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#10}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17hc66494087bc7899aE", scope: !36, file: !729, line: 731, type: !4293, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4305, retainedNodes: !4295)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!1875, !1441, !108, !600, !108, !1912}
!4295 = !{!4296, !4297, !4298, !4299, !4300, !4301, !4303}
!4296 = !DILocalVariable(name: "l", arg: 1, scope: !4292, file: !729, line: 732, type: !1441)
!4297 = !DILocalVariable(name: "amount", arg: 2, scope: !4292, file: !729, line: 733, type: !108)
!4298 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4292, file: !729, line: 734, type: !600)
!4299 = !DILocalVariable(name: "flags", arg: 4, scope: !4292, file: !729, line: 735, type: !108)
!4300 = !DILocalVariable(name: "f", arg: 5, scope: !4292, file: !729, line: 736, type: !1912)
!4301 = !DILocalVariable(name: "action", scope: !4302, file: !729, line: 744, type: !1875, align: 8)
!4302 = distinct !DILexicalBlock(scope: !4292, file: !729, line: 744, column: 9)
!4303 = !DILocalVariable(name: "bits", scope: !4304, file: !729, line: 756, type: !108, align: 32)
!4304 = distinct !DILexicalBlock(scope: !4292, file: !729, line: 756, column: 5)
!4305 = !{!4306}
!4306 = !DITemplateTypeParameter(name: "F", type: !1912)
!4307 = !DILocation(line: 732, column: 5, scope: !4292)
!4308 = !DILocation(line: 733, column: 5, scope: !4292)
!4309 = !DILocation(line: 734, column: 5, scope: !4292)
!4310 = !DILocation(line: 735, column: 5, scope: !4292)
!4311 = !DILocation(line: 736, column: 5, scope: !4292)
!4312 = !DILocation(line: 743, column: 5, scope: !4292)
!4313 = !DILocation(line: 743, column: 11, scope: !4292)
!4314 = !DILocation(line: 756, column: 16, scope: !4292)
!4315 = !DILocation(line: 756, column: 29, scope: !4292)
!4316 = !DILocation(line: 744, column: 48, scope: !4292)
!4317 = !DILocation(line: 744, column: 22, scope: !4292)
!4318 = !DILocation(line: 744, column: 13, scope: !4302)
!4319 = !DILocation(line: 751, column: 22, scope: !4302)
!4320 = !DILocation(line: 751, column: 13, scope: !4302)
!4321 = !DILocation(line: 756, column: 28, scope: !4292)
!4322 = !DILocation(line: 756, column: 9, scope: !4304)
!4323 = !DILocation(line: 757, column: 5, scope: !4304)
!4324 = !DILocation(line: 758, column: 5, scope: !4304)
!4325 = !DILocation(line: 759, column: 5, scope: !4304)
!4326 = !DILocation(line: 760, column: 2, scope: !4292)
!4327 = !DILocation(line: 752, column: 20, scope: !4302)
!4328 = !DILocation(line: 760, column: 1, scope: !4292)
!4329 = distinct !DISubprogram(name: "read_bits<miniz_oxide::inflate::core::decompress::{closure_env#8}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits17hf0e00b4296fb0b08E", scope: !36, file: !729, line: 731, type: !4330, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4342, retainedNodes: !4332)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!1875, !1441, !108, !600, !108, !2150}
!4332 = !{!4333, !4334, !4335, !4336, !4337, !4338, !4340}
!4333 = !DILocalVariable(name: "l", arg: 1, scope: !4329, file: !729, line: 732, type: !1441)
!4334 = !DILocalVariable(name: "amount", arg: 2, scope: !4329, file: !729, line: 733, type: !108)
!4335 = !DILocalVariable(name: "in_iter", arg: 3, scope: !4329, file: !729, line: 734, type: !600)
!4336 = !DILocalVariable(name: "flags", arg: 4, scope: !4329, file: !729, line: 735, type: !108)
!4337 = !DILocalVariable(name: "f", arg: 5, scope: !4329, file: !729, line: 736, type: !2150)
!4338 = !DILocalVariable(name: "action", scope: !4339, file: !729, line: 744, type: !1875, align: 8)
!4339 = distinct !DILexicalBlock(scope: !4329, file: !729, line: 744, column: 9)
!4340 = !DILocalVariable(name: "bits", scope: !4341, file: !729, line: 756, type: !108, align: 32)
!4341 = distinct !DILexicalBlock(scope: !4329, file: !729, line: 756, column: 5)
!4342 = !{!4343}
!4343 = !DITemplateTypeParameter(name: "F", type: !2150)
!4344 = !DILocation(line: 732, column: 5, scope: !4329)
!4345 = !DILocation(line: 733, column: 5, scope: !4329)
!4346 = !DILocation(line: 734, column: 5, scope: !4329)
!4347 = !DILocation(line: 735, column: 5, scope: !4329)
!4348 = !DILocation(line: 736, column: 5, scope: !4329)
!4349 = !DILocation(line: 743, column: 5, scope: !4329)
!4350 = !DILocation(line: 743, column: 11, scope: !4329)
!4351 = !DILocation(line: 756, column: 16, scope: !4329)
!4352 = !DILocation(line: 756, column: 29, scope: !4329)
!4353 = !DILocation(line: 744, column: 48, scope: !4329)
!4354 = !DILocation(line: 744, column: 22, scope: !4329)
!4355 = !DILocation(line: 744, column: 13, scope: !4339)
!4356 = !DILocation(line: 751, column: 22, scope: !4339)
!4357 = !DILocation(line: 751, column: 13, scope: !4339)
!4358 = !DILocation(line: 756, column: 28, scope: !4329)
!4359 = !DILocation(line: 756, column: 9, scope: !4341)
!4360 = !DILocation(line: 757, column: 5, scope: !4341)
!4361 = !DILocation(line: 758, column: 5, scope: !4341)
!4362 = !DILocation(line: 759, column: 5, scope: !4341)
!4363 = !DILocation(line: 760, column: 2, scope: !4329)
!4364 = !DILocation(line: 752, column: 20, scope: !4339)
!4365 = !DILocation(line: 760, column: 1, scope: !4329)
!4366 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#2}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h00f5c09a34d5d694E", scope: !4367, file: !729, line: 744, type: !4368, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4157, retainedNodes: !4374)
!4367 = !DINamespace(name: "read_bits", scope: !36)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{!1875, !4370, !37}
!4370 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#2}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4371, templateParams: !98, identifier: "4550fac0cfeb51878519c9ed34912635")
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4370, file: !5, baseType: !107, size: 32, align: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4370, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4374 = !{!4375, !4376, !4377}
!4375 = !DILocalVariable(name: "byte", arg: 2, scope: !4366, file: !729, line: 744, type: !37)
!4376 = !DILocalVariable(name: "l__bit_buf", scope: !4366, file: !729, line: 732, type: !108, align: 32)
!4377 = !DILocalVariable(name: "l__num_bits", scope: !4366, file: !729, line: 732, type: !108, align: 32)
!4378 = !DILocation(line: 732, column: 5, scope: !4366)
!4379 = !DILocation(line: 744, column: 49, scope: !4366)
!4380 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4381)
!4381 = distinct !DILocation(line: 745, column: 26, scope: !4366)
!4382 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4381)
!4383 = !DILocation(line: 745, column: 51, scope: !4366)
!4384 = !DILocation(line: 745, column: 26, scope: !4366)
!4385 = !DILocation(line: 745, column: 13, scope: !4366)
!4386 = !DILocation(line: 746, column: 13, scope: !4366)
!4387 = !DILocation(line: 748, column: 10, scope: !4366)
!4388 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#8}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h03662553eb0fdff4E", scope: !4367, file: !729, line: 744, type: !4389, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4342, retainedNodes: !4395)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{!1875, !4391, !37}
!4391 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#8}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4392, templateParams: !98, identifier: "bd9ad30ee15322aa33d7531f04f541cc")
!4392 = !{!4393, !4394}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4391, file: !5, baseType: !107, size: 32, align: 32)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4391, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4395 = !{!4396, !4397, !4398}
!4396 = !DILocalVariable(name: "byte", arg: 2, scope: !4388, file: !729, line: 744, type: !37)
!4397 = !DILocalVariable(name: "l__bit_buf", scope: !4388, file: !729, line: 732, type: !108, align: 32)
!4398 = !DILocalVariable(name: "l__num_bits", scope: !4388, file: !729, line: 732, type: !108, align: 32)
!4399 = !DILocation(line: 732, column: 5, scope: !4388)
!4400 = !DILocation(line: 744, column: 49, scope: !4388)
!4401 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4402)
!4402 = distinct !DILocation(line: 745, column: 26, scope: !4388)
!4403 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4402)
!4404 = !DILocation(line: 745, column: 51, scope: !4388)
!4405 = !DILocation(line: 745, column: 26, scope: !4388)
!4406 = !DILocation(line: 745, column: 13, scope: !4388)
!4407 = !DILocation(line: 746, column: 13, scope: !4388)
!4408 = !DILocation(line: 748, column: 10, scope: !4388)
!4409 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#3}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h17a62425fdf17ef9E", scope: !4367, file: !729, line: 744, type: !4410, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4231, retainedNodes: !4416)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!1875, !4412, !37}
!4412 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#3}>>", scope: !4367, file: !5, size: 64, align: 32, elements: !4413, templateParams: !98, identifier: "ff99bb0e52380d45ba99b04a1b337e02")
!4413 = !{!4414, !4415}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4412, file: !5, baseType: !107, size: 32, align: 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4412, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4416 = !{!4417, !4418, !4419}
!4417 = !DILocalVariable(name: "byte", arg: 2, scope: !4409, file: !729, line: 744, type: !37)
!4418 = !DILocalVariable(name: "l__bit_buf", scope: !4409, file: !729, line: 732, type: !108, align: 32)
!4419 = !DILocalVariable(name: "l__num_bits", scope: !4409, file: !729, line: 732, type: !108, align: 32)
!4420 = !DILocation(line: 732, column: 5, scope: !4409)
!4421 = !DILocation(line: 744, column: 49, scope: !4409)
!4422 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4423)
!4423 = distinct !DILocation(line: 745, column: 26, scope: !4409)
!4424 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4423)
!4425 = !DILocation(line: 745, column: 51, scope: !4409)
!4426 = !DILocation(line: 745, column: 26, scope: !4409)
!4427 = !DILocation(line: 745, column: 13, scope: !4409)
!4428 = !DILocation(line: 746, column: 13, scope: !4409)
!4429 = !DILocation(line: 748, column: 10, scope: !4409)
!4430 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#14}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h1ae344eee6993bedE", scope: !4367, file: !729, line: 744, type: !4431, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4046, retainedNodes: !4437)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!1875, !4433, !37}
!4433 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#14}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4434, templateParams: !98, identifier: "4512c640cb0dcfbf9f9ec4595108fc55")
!4434 = !{!4435, !4436}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4433, file: !5, baseType: !107, size: 32, align: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4433, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4437 = !{!4438, !4439, !4440}
!4438 = !DILocalVariable(name: "byte", arg: 2, scope: !4430, file: !729, line: 744, type: !37)
!4439 = !DILocalVariable(name: "l__bit_buf", scope: !4430, file: !729, line: 732, type: !108, align: 32)
!4440 = !DILocalVariable(name: "l__num_bits", scope: !4430, file: !729, line: 732, type: !108, align: 32)
!4441 = !DILocation(line: 732, column: 5, scope: !4430)
!4442 = !DILocation(line: 744, column: 49, scope: !4430)
!4443 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4444)
!4444 = distinct !DILocation(line: 745, column: 26, scope: !4430)
!4445 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4444)
!4446 = !DILocation(line: 745, column: 51, scope: !4430)
!4447 = !DILocation(line: 745, column: 26, scope: !4430)
!4448 = !DILocation(line: 745, column: 13, scope: !4430)
!4449 = !DILocation(line: 746, column: 13, scope: !4430)
!4450 = !DILocation(line: 748, column: 10, scope: !4430)
!4451 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#4}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h4fe98832bd8ac2d6E", scope: !4367, file: !729, line: 744, type: !4452, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4268, retainedNodes: !4458)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!1875, !4454, !37}
!4454 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#4}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4455, templateParams: !98, identifier: "5c672a15ce1aa0dad08aa71ff3705882")
!4455 = !{!4456, !4457}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4454, file: !5, baseType: !107, size: 32, align: 32)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4454, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4458 = !{!4459, !4460, !4461}
!4459 = !DILocalVariable(name: "byte", arg: 2, scope: !4451, file: !729, line: 744, type: !37)
!4460 = !DILocalVariable(name: "l__bit_buf", scope: !4451, file: !729, line: 732, type: !108, align: 32)
!4461 = !DILocalVariable(name: "l__num_bits", scope: !4451, file: !729, line: 732, type: !108, align: 32)
!4462 = !DILocation(line: 732, column: 5, scope: !4451)
!4463 = !DILocation(line: 744, column: 49, scope: !4451)
!4464 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4465)
!4465 = distinct !DILocation(line: 745, column: 26, scope: !4451)
!4466 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4465)
!4467 = !DILocation(line: 745, column: 51, scope: !4451)
!4468 = !DILocation(line: 745, column: 26, scope: !4451)
!4469 = !DILocation(line: 745, column: 13, scope: !4451)
!4470 = !DILocation(line: 746, column: 13, scope: !4451)
!4471 = !DILocation(line: 748, column: 10, scope: !4451)
!4472 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#10}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h69ba590f493e13d7E", scope: !4367, file: !729, line: 744, type: !4473, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4305, retainedNodes: !4479)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!1875, !4475, !37}
!4475 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#10}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4476, templateParams: !98, identifier: "8ec6b7f2513752d825ca269826359f68")
!4476 = !{!4477, !4478}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4475, file: !5, baseType: !107, size: 32, align: 32)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4475, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4479 = !{!4480, !4481, !4482}
!4480 = !DILocalVariable(name: "byte", arg: 2, scope: !4472, file: !729, line: 744, type: !37)
!4481 = !DILocalVariable(name: "l__bit_buf", scope: !4472, file: !729, line: 732, type: !108, align: 32)
!4482 = !DILocalVariable(name: "l__num_bits", scope: !4472, file: !729, line: 732, type: !108, align: 32)
!4483 = !DILocation(line: 732, column: 5, scope: !4472)
!4484 = !DILocation(line: 744, column: 49, scope: !4472)
!4485 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4486)
!4486 = distinct !DILocation(line: 745, column: 26, scope: !4472)
!4487 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4486)
!4488 = !DILocation(line: 745, column: 51, scope: !4472)
!4489 = !DILocation(line: 745, column: 26, scope: !4472)
!4490 = !DILocation(line: 745, column: 13, scope: !4472)
!4491 = !DILocation(line: 746, column: 13, scope: !4472)
!4492 = !DILocation(line: 748, column: 10, scope: !4472)
!4493 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#15}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h81614364f5c81b1bE", scope: !4367, file: !729, line: 744, type: !4494, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4083, retainedNodes: !4500)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!1875, !4496, !37}
!4496 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#15}>>", scope: !4367, file: !5, size: 64, align: 32, elements: !4497, templateParams: !98, identifier: "90f41cb6c716f986ff9b3d3e7a1092")
!4497 = !{!4498, !4499}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4496, file: !5, baseType: !107, size: 32, align: 32)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4496, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4500 = !{!4501, !4502, !4503}
!4501 = !DILocalVariable(name: "byte", arg: 2, scope: !4493, file: !729, line: 744, type: !37)
!4502 = !DILocalVariable(name: "l__bit_buf", scope: !4493, file: !729, line: 732, type: !108, align: 32)
!4503 = !DILocalVariable(name: "l__num_bits", scope: !4493, file: !729, line: 732, type: !108, align: 32)
!4504 = !DILocation(line: 732, column: 5, scope: !4493)
!4505 = !DILocation(line: 744, column: 49, scope: !4493)
!4506 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4507)
!4507 = distinct !DILocation(line: 745, column: 26, scope: !4493)
!4508 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4507)
!4509 = !DILocation(line: 745, column: 51, scope: !4493)
!4510 = !DILocation(line: 745, column: 26, scope: !4493)
!4511 = !DILocation(line: 745, column: 13, scope: !4493)
!4512 = !DILocation(line: 746, column: 13, scope: !4493)
!4513 = !DILocation(line: 748, column: 10, scope: !4493)
!4514 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#6}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17h83879e1d4971c2abE", scope: !4367, file: !729, line: 744, type: !4515, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4009, retainedNodes: !4521)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{!1875, !4517, !37}
!4517 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#6}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4518, templateParams: !98, identifier: "ba2042f9cd987de0bc6166b02374416b")
!4518 = !{!4519, !4520}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4517, file: !5, baseType: !107, size: 32, align: 32)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4517, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4521 = !{!4522, !4523, !4524}
!4522 = !DILocalVariable(name: "byte", arg: 2, scope: !4514, file: !729, line: 744, type: !37)
!4523 = !DILocalVariable(name: "l__bit_buf", scope: !4514, file: !729, line: 732, type: !108, align: 32)
!4524 = !DILocalVariable(name: "l__num_bits", scope: !4514, file: !729, line: 732, type: !108, align: 32)
!4525 = !DILocation(line: 732, column: 5, scope: !4514)
!4526 = !DILocation(line: 744, column: 49, scope: !4514)
!4527 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4528)
!4528 = distinct !DILocation(line: 745, column: 26, scope: !4514)
!4529 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4528)
!4530 = !DILocation(line: 745, column: 51, scope: !4514)
!4531 = !DILocation(line: 745, column: 26, scope: !4514)
!4532 = !DILocation(line: 745, column: 13, scope: !4514)
!4533 = !DILocation(line: 746, column: 13, scope: !4514)
!4534 = !DILocation(line: 748, column: 10, scope: !4514)
!4535 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#12}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hb7e8f5a29fc109c0E", scope: !4367, file: !729, line: 744, type: !4536, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3972, retainedNodes: !4542)
!4536 = !DISubroutineType(types: !4537)
!4537 = !{!1875, !4538, !37}
!4538 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#12}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4539, templateParams: !98, identifier: "4d06a2d59928d83ecc1fec7b83d46beb")
!4539 = !{!4540, !4541}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4538, file: !5, baseType: !107, size: 32, align: 32)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4538, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4542 = !{!4543, !4544, !4545}
!4543 = !DILocalVariable(name: "byte", arg: 2, scope: !4535, file: !729, line: 744, type: !37)
!4544 = !DILocalVariable(name: "l__bit_buf", scope: !4535, file: !729, line: 732, type: !108, align: 32)
!4545 = !DILocalVariable(name: "l__num_bits", scope: !4535, file: !729, line: 732, type: !108, align: 32)
!4546 = !DILocation(line: 732, column: 5, scope: !4535)
!4547 = !DILocation(line: 744, column: 49, scope: !4535)
!4548 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4549)
!4549 = distinct !DILocation(line: 745, column: 26, scope: !4535)
!4550 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4549)
!4551 = !DILocation(line: 745, column: 51, scope: !4535)
!4552 = !DILocation(line: 745, column: 26, scope: !4535)
!4553 = !DILocation(line: 745, column: 13, scope: !4535)
!4554 = !DILocation(line: 746, column: 13, scope: !4535)
!4555 = !DILocation(line: 748, column: 10, scope: !4535)
!4556 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#16}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hebc225c5e39b0acaE", scope: !4367, file: !729, line: 744, type: !4557, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4194, retainedNodes: !4563)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!1875, !4559, !37}
!4559 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#16}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4560, templateParams: !98, identifier: "9d349b4922eb9ea0f79dce307b36b4b8")
!4560 = !{!4561, !4562}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4559, file: !5, baseType: !107, size: 32, align: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4559, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4563 = !{!4564, !4565, !4566}
!4564 = !DILocalVariable(name: "byte", arg: 2, scope: !4556, file: !729, line: 744, type: !37)
!4565 = !DILocalVariable(name: "l__bit_buf", scope: !4556, file: !729, line: 732, type: !108, align: 32)
!4566 = !DILocalVariable(name: "l__num_bits", scope: !4556, file: !729, line: 732, type: !108, align: 32)
!4567 = !DILocation(line: 732, column: 5, scope: !4556)
!4568 = !DILocation(line: 744, column: 49, scope: !4556)
!4569 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4570)
!4570 = distinct !DILocation(line: 745, column: 26, scope: !4556)
!4571 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4570)
!4572 = !DILocation(line: 745, column: 51, scope: !4556)
!4573 = !DILocation(line: 745, column: 26, scope: !4556)
!4574 = !DILocation(line: 745, column: 13, scope: !4556)
!4575 = !DILocation(line: 746, column: 13, scope: !4556)
!4576 = !DILocation(line: 748, column: 10, scope: !4556)
!4577 = distinct !DISubprogram(name: "{closure#0}<miniz_oxide::inflate::core::decompress::{closure_env#7}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_bits28_$u7b$$u7b$closure$u7d$$u7d$17hf17f43e0a34f374eE", scope: !4367, file: !729, line: 744, type: !4578, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4120, retainedNodes: !4584)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!1875, !4580, !37}
!4580 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#7}>", scope: !4367, file: !5, size: 64, align: 32, elements: !4581, templateParams: !98, identifier: "add9769099823e06b987e7fdf55e8ab1")
!4581 = !{!4582, !4583}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__bit_buf", scope: !4580, file: !5, baseType: !107, size: 32, align: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__l__num_bits", scope: !4580, file: !5, baseType: !107, size: 32, align: 32, offset: 32)
!4584 = !{!4585, !4586, !4587}
!4585 = !DILocalVariable(name: "byte", arg: 2, scope: !4577, file: !729, line: 744, type: !37)
!4586 = !DILocalVariable(name: "l__bit_buf", scope: !4577, file: !729, line: 732, type: !108, align: 32)
!4587 = !DILocalVariable(name: "l__num_bits", scope: !4577, file: !729, line: 732, type: !108, align: 32)
!4588 = !DILocation(line: 732, column: 5, scope: !4577)
!4589 = !DILocation(line: 744, column: 49, scope: !4577)
!4590 = !DILocation(line: 78, column: 21, scope: !1899, inlinedAt: !4591)
!4591 = distinct !DILocation(line: 745, column: 26, scope: !4577)
!4592 = !DILocation(line: 79, column: 17, scope: !1899, inlinedAt: !4591)
!4593 = !DILocation(line: 745, column: 51, scope: !4577)
!4594 = !DILocation(line: 745, column: 26, scope: !4577)
!4595 = !DILocation(line: 745, column: 13, scope: !4577)
!4596 = !DILocation(line: 746, column: 13, scope: !4577)
!4597 = !DILocation(line: 748, column: 10, scope: !4577)
!4598 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#15}>>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h04a480ce863f1ffdE", scope: !36, file: !729, line: 715, type: !4599, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4607, retainedNodes: !4601)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!1875, !600, !108, !4496}
!4601 = !{!4602, !4603, !4604, !4605}
!4602 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4598, file: !729, line: 715, type: !600)
!4603 = !DILocalVariable(name: "flags", arg: 2, scope: !4598, file: !729, line: 715, type: !108)
!4604 = !DILocalVariable(name: "f", arg: 3, scope: !4598, file: !729, line: 715, type: !4496)
!4605 = !DILocalVariable(name: "byte", scope: !4606, file: !729, line: 721, type: !37, align: 8)
!4606 = distinct !DILexicalBlock(scope: !4598, file: !729, line: 721, column: 9)
!4607 = !{!4608}
!4608 = !DITemplateTypeParameter(name: "F", type: !4496)
!4609 = !DILocation(line: 715, column: 17, scope: !4598)
!4610 = !DILocation(line: 715, column: 45, scope: !4598)
!4611 = !DILocation(line: 715, column: 57, scope: !4598)
!4612 = !DILocation(line: 719, column: 11, scope: !4598)
!4613 = !DILocation(line: 719, column: 19, scope: !4598)
!4614 = !DILocation(line: 719, column: 5, scope: !4598)
!4615 = !DILocation(line: 721, column: 14, scope: !4598)
!4616 = !DILocation(line: 721, column: 14, scope: !4606)
!4617 = !DILocation(line: 721, column: 23, scope: !4606)
!4618 = !DILocation(line: 720, column: 17, scope: !4598)
!4619 = !DILocation(line: 723, column: 1, scope: !4598)
!4620 = !DILocation(line: 723, column: 2, scope: !4598)
!4621 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::decompress::{closure_env#0}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h22ea5c72806c2d92E", scope: !36, file: !729, line: 715, type: !4622, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4630, retainedNodes: !4624)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!1875, !600, !108, !1890}
!4624 = !{!4625, !4626, !4627, !4628}
!4625 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4621, file: !729, line: 715, type: !600)
!4626 = !DILocalVariable(name: "flags", arg: 2, scope: !4621, file: !729, line: 715, type: !108)
!4627 = !DILocalVariable(name: "f", arg: 3, scope: !4621, file: !729, line: 715, type: !1890)
!4628 = !DILocalVariable(name: "byte", scope: !4629, file: !729, line: 721, type: !37, align: 8)
!4629 = distinct !DILexicalBlock(scope: !4621, file: !729, line: 721, column: 9)
!4630 = !{!4631}
!4631 = !DITemplateTypeParameter(name: "F", type: !1890)
!4632 = !DILocation(line: 715, column: 17, scope: !4621)
!4633 = !DILocation(line: 715, column: 45, scope: !4621)
!4634 = !DILocation(line: 715, column: 57, scope: !4621)
!4635 = !DILocation(line: 719, column: 11, scope: !4621)
!4636 = !DILocation(line: 719, column: 19, scope: !4621)
!4637 = !DILocation(line: 719, column: 5, scope: !4621)
!4638 = !DILocation(line: 721, column: 14, scope: !4621)
!4639 = !DILocation(line: 721, column: 14, scope: !4629)
!4640 = !DILocation(line: 721, column: 23, scope: !4629)
!4641 = !DILocation(line: 720, column: 17, scope: !4621)
!4642 = !DILocation(line: 723, column: 1, scope: !4621)
!4643 = !DILocation(line: 723, column: 2, scope: !4621)
!4644 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::pad_to_bytes::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#3}>>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h34575ab945af68ccE", scope: !36, file: !729, line: 715, type: !4645, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4653, retainedNodes: !4647)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!1875, !600, !108, !4412}
!4647 = !{!4648, !4649, !4650, !4651}
!4648 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4644, file: !729, line: 715, type: !600)
!4649 = !DILocalVariable(name: "flags", arg: 2, scope: !4644, file: !729, line: 715, type: !108)
!4650 = !DILocalVariable(name: "f", arg: 3, scope: !4644, file: !729, line: 715, type: !4412)
!4651 = !DILocalVariable(name: "byte", scope: !4652, file: !729, line: 721, type: !37, align: 8)
!4652 = distinct !DILexicalBlock(scope: !4644, file: !729, line: 721, column: 9)
!4653 = !{!4654}
!4654 = !DITemplateTypeParameter(name: "F", type: !4412)
!4655 = !DILocation(line: 715, column: 17, scope: !4644)
!4656 = !DILocation(line: 715, column: 45, scope: !4644)
!4657 = !DILocation(line: 715, column: 57, scope: !4644)
!4658 = !DILocation(line: 719, column: 11, scope: !4644)
!4659 = !DILocation(line: 719, column: 19, scope: !4644)
!4660 = !DILocation(line: 719, column: 5, scope: !4644)
!4661 = !DILocation(line: 721, column: 14, scope: !4644)
!4662 = !DILocation(line: 721, column: 14, scope: !4652)
!4663 = !DILocation(line: 721, column: 23, scope: !4652)
!4664 = !DILocation(line: 720, column: 17, scope: !4644)
!4665 = !DILocation(line: 723, column: 1, scope: !4644)
!4666 = !DILocation(line: 723, column: 2, scope: !4644)
!4667 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#2}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h3ad176f6a8a88fb8E", scope: !36, file: !729, line: 715, type: !4668, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4676, retainedNodes: !4670)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!1875, !600, !108, !4370}
!4670 = !{!4671, !4672, !4673, !4674}
!4671 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4667, file: !729, line: 715, type: !600)
!4672 = !DILocalVariable(name: "flags", arg: 2, scope: !4667, file: !729, line: 715, type: !108)
!4673 = !DILocalVariable(name: "f", arg: 3, scope: !4667, file: !729, line: 715, type: !4370)
!4674 = !DILocalVariable(name: "byte", scope: !4675, file: !729, line: 721, type: !37, align: 8)
!4675 = distinct !DILexicalBlock(scope: !4667, file: !729, line: 721, column: 9)
!4676 = !{!4677}
!4677 = !DITemplateTypeParameter(name: "F", type: !4370)
!4678 = !DILocation(line: 715, column: 17, scope: !4667)
!4679 = !DILocation(line: 715, column: 45, scope: !4667)
!4680 = !DILocation(line: 715, column: 57, scope: !4667)
!4681 = !DILocation(line: 719, column: 11, scope: !4667)
!4682 = !DILocation(line: 719, column: 19, scope: !4667)
!4683 = !DILocation(line: 719, column: 5, scope: !4667)
!4684 = !DILocation(line: 721, column: 14, scope: !4667)
!4685 = !DILocation(line: 721, column: 14, scope: !4675)
!4686 = !DILocation(line: 721, column: 23, scope: !4675)
!4687 = !DILocation(line: 720, column: 17, scope: !4667)
!4688 = !DILocation(line: 723, column: 1, scope: !4667)
!4689 = !DILocation(line: 723, column: 2, scope: !4667)
!4690 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#16}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h43c235ca5659b11fE", scope: !36, file: !729, line: 715, type: !4691, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4699, retainedNodes: !4693)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!1875, !600, !108, !4559}
!4693 = !{!4694, !4695, !4696, !4697}
!4694 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4690, file: !729, line: 715, type: !600)
!4695 = !DILocalVariable(name: "flags", arg: 2, scope: !4690, file: !729, line: 715, type: !108)
!4696 = !DILocalVariable(name: "f", arg: 3, scope: !4690, file: !729, line: 715, type: !4559)
!4697 = !DILocalVariable(name: "byte", scope: !4698, file: !729, line: 721, type: !37, align: 8)
!4698 = distinct !DILexicalBlock(scope: !4690, file: !729, line: 721, column: 9)
!4699 = !{!4700}
!4700 = !DITemplateTypeParameter(name: "F", type: !4559)
!4701 = !DILocation(line: 715, column: 17, scope: !4690)
!4702 = !DILocation(line: 715, column: 45, scope: !4690)
!4703 = !DILocation(line: 715, column: 57, scope: !4690)
!4704 = !DILocation(line: 719, column: 11, scope: !4690)
!4705 = !DILocation(line: 719, column: 19, scope: !4690)
!4706 = !DILocation(line: 719, column: 5, scope: !4690)
!4707 = !DILocation(line: 721, column: 14, scope: !4690)
!4708 = !DILocation(line: 721, column: 14, scope: !4698)
!4709 = !DILocation(line: 721, column: 23, scope: !4698)
!4710 = !DILocation(line: 720, column: 17, scope: !4690)
!4711 = !DILocation(line: 723, column: 1, scope: !4690)
!4712 = !DILocation(line: 723, column: 2, scope: !4690)
!4713 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::decode_huffman_code::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#13}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h505e12e5a9d5fe03E", scope: !36, file: !729, line: 715, type: !4714, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4722, retainedNodes: !4716)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!1875, !600, !108, !3401}
!4716 = !{!4717, !4718, !4719, !4720}
!4717 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4713, file: !729, line: 715, type: !600)
!4718 = !DILocalVariable(name: "flags", arg: 2, scope: !4713, file: !729, line: 715, type: !108)
!4719 = !DILocalVariable(name: "f", arg: 3, scope: !4713, file: !729, line: 715, type: !3401)
!4720 = !DILocalVariable(name: "byte", scope: !4721, file: !729, line: 721, type: !37, align: 8)
!4721 = distinct !DILexicalBlock(scope: !4713, file: !729, line: 721, column: 9)
!4722 = !{!4723}
!4723 = !DITemplateTypeParameter(name: "F", type: !3401)
!4724 = !DILocation(line: 715, column: 17, scope: !4713)
!4725 = !DILocation(line: 715, column: 45, scope: !4713)
!4726 = !DILocation(line: 715, column: 57, scope: !4713)
!4727 = !DILocation(line: 719, column: 11, scope: !4713)
!4728 = !DILocation(line: 719, column: 19, scope: !4713)
!4729 = !DILocation(line: 719, column: 5, scope: !4713)
!4730 = !DILocation(line: 721, column: 14, scope: !4713)
!4731 = !DILocation(line: 721, column: 14, scope: !4721)
!4732 = !DILocation(line: 721, column: 23, scope: !4721)
!4733 = !DILocation(line: 720, column: 17, scope: !4713)
!4734 = !DILocation(line: 723, column: 1, scope: !4713)
!4735 = !DILocation(line: 723, column: 2, scope: !4713)
!4736 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#7}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h5b3bc57ed22294d3E", scope: !36, file: !729, line: 715, type: !4737, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4745, retainedNodes: !4739)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{!1875, !600, !108, !4580}
!4739 = !{!4740, !4741, !4742, !4743}
!4740 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4736, file: !729, line: 715, type: !600)
!4741 = !DILocalVariable(name: "flags", arg: 2, scope: !4736, file: !729, line: 715, type: !108)
!4742 = !DILocalVariable(name: "f", arg: 3, scope: !4736, file: !729, line: 715, type: !4580)
!4743 = !DILocalVariable(name: "byte", scope: !4744, file: !729, line: 721, type: !37, align: 8)
!4744 = distinct !DILexicalBlock(scope: !4736, file: !729, line: 721, column: 9)
!4745 = !{!4746}
!4746 = !DITemplateTypeParameter(name: "F", type: !4580)
!4747 = !DILocation(line: 715, column: 17, scope: !4736)
!4748 = !DILocation(line: 715, column: 45, scope: !4736)
!4749 = !DILocation(line: 715, column: 57, scope: !4736)
!4750 = !DILocation(line: 719, column: 11, scope: !4736)
!4751 = !DILocation(line: 719, column: 19, scope: !4736)
!4752 = !DILocation(line: 719, column: 5, scope: !4736)
!4753 = !DILocation(line: 721, column: 14, scope: !4736)
!4754 = !DILocation(line: 721, column: 14, scope: !4744)
!4755 = !DILocation(line: 721, column: 23, scope: !4744)
!4756 = !DILocation(line: 720, column: 17, scope: !4736)
!4757 = !DILocation(line: 723, column: 1, scope: !4736)
!4758 = !DILocation(line: 723, column: 2, scope: !4736)
!4759 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::decompress::{closure_env#17}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h79940f5754332d9dE", scope: !36, file: !729, line: 715, type: !4760, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4768, retainedNodes: !4762)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{!1875, !600, !108, !2046}
!4762 = !{!4763, !4764, !4765, !4766}
!4763 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4759, file: !729, line: 715, type: !600)
!4764 = !DILocalVariable(name: "flags", arg: 2, scope: !4759, file: !729, line: 715, type: !108)
!4765 = !DILocalVariable(name: "f", arg: 3, scope: !4759, file: !729, line: 715, type: !2046)
!4766 = !DILocalVariable(name: "byte", scope: !4767, file: !729, line: 721, type: !37, align: 8)
!4767 = distinct !DILexicalBlock(scope: !4759, file: !729, line: 721, column: 9)
!4768 = !{!4769}
!4769 = !DITemplateTypeParameter(name: "F", type: !2046)
!4770 = !DILocation(line: 715, column: 17, scope: !4759)
!4771 = !DILocation(line: 715, column: 45, scope: !4759)
!4772 = !DILocation(line: 715, column: 57, scope: !4759)
!4773 = !DILocation(line: 719, column: 11, scope: !4759)
!4774 = !DILocation(line: 719, column: 19, scope: !4759)
!4775 = !DILocation(line: 719, column: 5, scope: !4759)
!4776 = !DILocation(line: 721, column: 14, scope: !4759)
!4777 = !DILocation(line: 721, column: 14, scope: !4767)
!4778 = !DILocation(line: 721, column: 23, scope: !4767)
!4779 = !DILocation(line: 720, column: 17, scope: !4759)
!4780 = !DILocation(line: 723, column: 1, scope: !4759)
!4781 = !DILocation(line: 723, column: 2, scope: !4759)
!4782 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::decode_huffman_code::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#11}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h7b1b2fa669b71c3bE", scope: !36, file: !729, line: 715, type: !4783, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4791, retainedNodes: !4785)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!1875, !600, !108, !3428}
!4785 = !{!4786, !4787, !4788, !4789}
!4786 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4782, file: !729, line: 715, type: !600)
!4787 = !DILocalVariable(name: "flags", arg: 2, scope: !4782, file: !729, line: 715, type: !108)
!4788 = !DILocalVariable(name: "f", arg: 3, scope: !4782, file: !729, line: 715, type: !3428)
!4789 = !DILocalVariable(name: "byte", scope: !4790, file: !729, line: 721, type: !37, align: 8)
!4790 = distinct !DILexicalBlock(scope: !4782, file: !729, line: 721, column: 9)
!4791 = !{!4792}
!4792 = !DITemplateTypeParameter(name: "F", type: !3428)
!4793 = !DILocation(line: 715, column: 17, scope: !4782)
!4794 = !DILocation(line: 715, column: 45, scope: !4782)
!4795 = !DILocation(line: 715, column: 57, scope: !4782)
!4796 = !DILocation(line: 719, column: 11, scope: !4782)
!4797 = !DILocation(line: 719, column: 19, scope: !4782)
!4798 = !DILocation(line: 719, column: 5, scope: !4782)
!4799 = !DILocation(line: 721, column: 14, scope: !4782)
!4800 = !DILocation(line: 721, column: 14, scope: !4790)
!4801 = !DILocation(line: 721, column: 23, scope: !4790)
!4802 = !DILocation(line: 720, column: 17, scope: !4782)
!4803 = !DILocation(line: 723, column: 1, scope: !4782)
!4804 = !DILocation(line: 723, column: 2, scope: !4782)
!4805 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#10}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h8e4b3e18bd02443aE", scope: !36, file: !729, line: 715, type: !4806, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4814, retainedNodes: !4808)
!4806 = !DISubroutineType(types: !4807)
!4807 = !{!1875, !600, !108, !4475}
!4808 = !{!4809, !4810, !4811, !4812}
!4809 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4805, file: !729, line: 715, type: !600)
!4810 = !DILocalVariable(name: "flags", arg: 2, scope: !4805, file: !729, line: 715, type: !108)
!4811 = !DILocalVariable(name: "f", arg: 3, scope: !4805, file: !729, line: 715, type: !4475)
!4812 = !DILocalVariable(name: "byte", scope: !4813, file: !729, line: 721, type: !37, align: 8)
!4813 = distinct !DILexicalBlock(scope: !4805, file: !729, line: 721, column: 9)
!4814 = !{!4815}
!4815 = !DITemplateTypeParameter(name: "F", type: !4475)
!4816 = !DILocation(line: 715, column: 17, scope: !4805)
!4817 = !DILocation(line: 715, column: 45, scope: !4805)
!4818 = !DILocation(line: 715, column: 57, scope: !4805)
!4819 = !DILocation(line: 719, column: 11, scope: !4805)
!4820 = !DILocation(line: 719, column: 19, scope: !4805)
!4821 = !DILocation(line: 719, column: 5, scope: !4805)
!4822 = !DILocation(line: 721, column: 14, scope: !4805)
!4823 = !DILocation(line: 721, column: 14, scope: !4813)
!4824 = !DILocation(line: 721, column: 23, scope: !4813)
!4825 = !DILocation(line: 720, column: 17, scope: !4805)
!4826 = !DILocation(line: 723, column: 1, scope: !4805)
!4827 = !DILocation(line: 723, column: 2, scope: !4805)
!4828 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#12}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17h9b620a4596d5e189E", scope: !36, file: !729, line: 715, type: !4829, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4837, retainedNodes: !4831)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{!1875, !600, !108, !4538}
!4831 = !{!4832, !4833, !4834, !4835}
!4832 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4828, file: !729, line: 715, type: !600)
!4833 = !DILocalVariable(name: "flags", arg: 2, scope: !4828, file: !729, line: 715, type: !108)
!4834 = !DILocalVariable(name: "f", arg: 3, scope: !4828, file: !729, line: 715, type: !4538)
!4835 = !DILocalVariable(name: "byte", scope: !4836, file: !729, line: 721, type: !37, align: 8)
!4836 = distinct !DILexicalBlock(scope: !4828, file: !729, line: 721, column: 9)
!4837 = !{!4838}
!4838 = !DITemplateTypeParameter(name: "F", type: !4538)
!4839 = !DILocation(line: 715, column: 17, scope: !4828)
!4840 = !DILocation(line: 715, column: 45, scope: !4828)
!4841 = !DILocation(line: 715, column: 57, scope: !4828)
!4842 = !DILocation(line: 719, column: 11, scope: !4828)
!4843 = !DILocation(line: 719, column: 19, scope: !4828)
!4844 = !DILocation(line: 719, column: 5, scope: !4828)
!4845 = !DILocation(line: 721, column: 14, scope: !4828)
!4846 = !DILocation(line: 721, column: 14, scope: !4836)
!4847 = !DILocation(line: 721, column: 23, scope: !4836)
!4848 = !DILocation(line: 720, column: 17, scope: !4828)
!4849 = !DILocation(line: 723, column: 1, scope: !4828)
!4850 = !DILocation(line: 723, column: 2, scope: !4828)
!4851 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#8}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17ha2c461d1d3b8597bE", scope: !36, file: !729, line: 715, type: !4852, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4860, retainedNodes: !4854)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!1875, !600, !108, !4391}
!4854 = !{!4855, !4856, !4857, !4858}
!4855 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4851, file: !729, line: 715, type: !600)
!4856 = !DILocalVariable(name: "flags", arg: 2, scope: !4851, file: !729, line: 715, type: !108)
!4857 = !DILocalVariable(name: "f", arg: 3, scope: !4851, file: !729, line: 715, type: !4391)
!4858 = !DILocalVariable(name: "byte", scope: !4859, file: !729, line: 721, type: !37, align: 8)
!4859 = distinct !DILexicalBlock(scope: !4851, file: !729, line: 721, column: 9)
!4860 = !{!4861}
!4861 = !DITemplateTypeParameter(name: "F", type: !4391)
!4862 = !DILocation(line: 715, column: 17, scope: !4851)
!4863 = !DILocation(line: 715, column: 45, scope: !4851)
!4864 = !DILocation(line: 715, column: 57, scope: !4851)
!4865 = !DILocation(line: 719, column: 11, scope: !4851)
!4866 = !DILocation(line: 719, column: 19, scope: !4851)
!4867 = !DILocation(line: 719, column: 5, scope: !4851)
!4868 = !DILocation(line: 721, column: 14, scope: !4851)
!4869 = !DILocation(line: 721, column: 14, scope: !4859)
!4870 = !DILocation(line: 721, column: 23, scope: !4859)
!4871 = !DILocation(line: 720, column: 17, scope: !4851)
!4872 = !DILocation(line: 723, column: 1, scope: !4851)
!4873 = !DILocation(line: 723, column: 2, scope: !4851)
!4874 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#4}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17ha31f4ea8d6eeb955E", scope: !36, file: !729, line: 715, type: !4875, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4883, retainedNodes: !4877)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{!1875, !600, !108, !4454}
!4877 = !{!4878, !4879, !4880, !4881}
!4878 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4874, file: !729, line: 715, type: !600)
!4879 = !DILocalVariable(name: "flags", arg: 2, scope: !4874, file: !729, line: 715, type: !108)
!4880 = !DILocalVariable(name: "f", arg: 3, scope: !4874, file: !729, line: 715, type: !4454)
!4881 = !DILocalVariable(name: "byte", scope: !4882, file: !729, line: 721, type: !37, align: 8)
!4882 = distinct !DILexicalBlock(scope: !4874, file: !729, line: 721, column: 9)
!4883 = !{!4884}
!4884 = !DITemplateTypeParameter(name: "F", type: !4454)
!4885 = !DILocation(line: 715, column: 17, scope: !4874)
!4886 = !DILocation(line: 715, column: 45, scope: !4874)
!4887 = !DILocation(line: 715, column: 57, scope: !4874)
!4888 = !DILocation(line: 719, column: 11, scope: !4874)
!4889 = !DILocation(line: 719, column: 19, scope: !4874)
!4890 = !DILocation(line: 719, column: 5, scope: !4874)
!4891 = !DILocation(line: 721, column: 14, scope: !4874)
!4892 = !DILocation(line: 721, column: 14, scope: !4882)
!4893 = !DILocation(line: 721, column: 23, scope: !4882)
!4894 = !DILocation(line: 720, column: 17, scope: !4874)
!4895 = !DILocation(line: 723, column: 1, scope: !4874)
!4896 = !DILocation(line: 723, column: 2, scope: !4874)
!4897 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::decode_huffman_code::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#9}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17ha995b252fff8c9f5E", scope: !36, file: !729, line: 715, type: !4898, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4906, retainedNodes: !4900)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!1875, !600, !108, !3415}
!4900 = !{!4901, !4902, !4903, !4904}
!4901 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4897, file: !729, line: 715, type: !600)
!4902 = !DILocalVariable(name: "flags", arg: 2, scope: !4897, file: !729, line: 715, type: !108)
!4903 = !DILocalVariable(name: "f", arg: 3, scope: !4897, file: !729, line: 715, type: !3415)
!4904 = !DILocalVariable(name: "byte", scope: !4905, file: !729, line: 721, type: !37, align: 8)
!4905 = distinct !DILexicalBlock(scope: !4897, file: !729, line: 721, column: 9)
!4906 = !{!4907}
!4907 = !DITemplateTypeParameter(name: "F", type: !3415)
!4908 = !DILocation(line: 715, column: 17, scope: !4897)
!4909 = !DILocation(line: 715, column: 45, scope: !4897)
!4910 = !DILocation(line: 715, column: 57, scope: !4897)
!4911 = !DILocation(line: 719, column: 11, scope: !4897)
!4912 = !DILocation(line: 719, column: 19, scope: !4897)
!4913 = !DILocation(line: 719, column: 5, scope: !4897)
!4914 = !DILocation(line: 721, column: 14, scope: !4897)
!4915 = !DILocation(line: 721, column: 14, scope: !4905)
!4916 = !DILocation(line: 721, column: 23, scope: !4905)
!4917 = !DILocation(line: 720, column: 17, scope: !4897)
!4918 = !DILocation(line: 723, column: 1, scope: !4897)
!4919 = !DILocation(line: 723, column: 2, scope: !4897)
!4920 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#6}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17hb3043eb4b3ee2bd7E", scope: !36, file: !729, line: 715, type: !4921, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4929, retainedNodes: !4923)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!1875, !600, !108, !4517}
!4923 = !{!4924, !4925, !4926, !4927}
!4924 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4920, file: !729, line: 715, type: !600)
!4925 = !DILocalVariable(name: "flags", arg: 2, scope: !4920, file: !729, line: 715, type: !108)
!4926 = !DILocalVariable(name: "f", arg: 3, scope: !4920, file: !729, line: 715, type: !4517)
!4927 = !DILocalVariable(name: "byte", scope: !4928, file: !729, line: 721, type: !37, align: 8)
!4928 = distinct !DILexicalBlock(scope: !4920, file: !729, line: 721, column: 9)
!4929 = !{!4930}
!4930 = !DITemplateTypeParameter(name: "F", type: !4517)
!4931 = !DILocation(line: 715, column: 17, scope: !4920)
!4932 = !DILocation(line: 715, column: 45, scope: !4920)
!4933 = !DILocation(line: 715, column: 57, scope: !4920)
!4934 = !DILocation(line: 719, column: 11, scope: !4920)
!4935 = !DILocation(line: 719, column: 19, scope: !4920)
!4936 = !DILocation(line: 719, column: 5, scope: !4920)
!4937 = !DILocation(line: 721, column: 14, scope: !4920)
!4938 = !DILocation(line: 721, column: 14, scope: !4928)
!4939 = !DILocation(line: 721, column: 23, scope: !4928)
!4940 = !DILocation(line: 720, column: 17, scope: !4920)
!4941 = !DILocation(line: 723, column: 1, scope: !4920)
!4942 = !DILocation(line: 723, column: 2, scope: !4920)
!4943 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::read_bits::{closure_env#0}<miniz_oxide::inflate::core::decompress::{closure_env#14}>>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17hdb3583234b2c66d8E", scope: !36, file: !729, line: 715, type: !4944, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4952, retainedNodes: !4946)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{!1875, !600, !108, !4433}
!4946 = !{!4947, !4948, !4949, !4950}
!4947 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4943, file: !729, line: 715, type: !600)
!4948 = !DILocalVariable(name: "flags", arg: 2, scope: !4943, file: !729, line: 715, type: !108)
!4949 = !DILocalVariable(name: "f", arg: 3, scope: !4943, file: !729, line: 715, type: !4433)
!4950 = !DILocalVariable(name: "byte", scope: !4951, file: !729, line: 721, type: !37, align: 8)
!4951 = distinct !DILexicalBlock(scope: !4943, file: !729, line: 721, column: 9)
!4952 = !{!4953}
!4953 = !DITemplateTypeParameter(name: "F", type: !4433)
!4954 = !DILocation(line: 715, column: 17, scope: !4943)
!4955 = !DILocation(line: 715, column: 45, scope: !4943)
!4956 = !DILocation(line: 715, column: 57, scope: !4943)
!4957 = !DILocation(line: 719, column: 11, scope: !4943)
!4958 = !DILocation(line: 719, column: 19, scope: !4943)
!4959 = !DILocation(line: 719, column: 5, scope: !4943)
!4960 = !DILocation(line: 721, column: 14, scope: !4943)
!4961 = !DILocation(line: 721, column: 14, scope: !4951)
!4962 = !DILocation(line: 721, column: 23, scope: !4951)
!4963 = !DILocation(line: 720, column: 17, scope: !4943)
!4964 = !DILocation(line: 723, column: 1, scope: !4943)
!4965 = !DILocation(line: 723, column: 2, scope: !4943)
!4966 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::decompress::{closure_env#5}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17he38ae49676b797faE", scope: !36, file: !729, line: 715, type: !4967, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4975, retainedNodes: !4969)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!1875, !600, !108, !1991}
!4969 = !{!4970, !4971, !4972, !4973}
!4970 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4966, file: !729, line: 715, type: !600)
!4971 = !DILocalVariable(name: "flags", arg: 2, scope: !4966, file: !729, line: 715, type: !108)
!4972 = !DILocalVariable(name: "f", arg: 3, scope: !4966, file: !729, line: 715, type: !1991)
!4973 = !DILocalVariable(name: "byte", scope: !4974, file: !729, line: 721, type: !37, align: 8)
!4974 = distinct !DILexicalBlock(scope: !4966, file: !729, line: 721, column: 9)
!4975 = !{!4976}
!4976 = !DITemplateTypeParameter(name: "F", type: !1991)
!4977 = !DILocation(line: 715, column: 17, scope: !4966)
!4978 = !DILocation(line: 715, column: 45, scope: !4966)
!4979 = !DILocation(line: 715, column: 57, scope: !4966)
!4980 = !DILocation(line: 719, column: 11, scope: !4966)
!4981 = !DILocation(line: 719, column: 19, scope: !4966)
!4982 = !DILocation(line: 719, column: 5, scope: !4966)
!4983 = !DILocation(line: 721, column: 14, scope: !4966)
!4984 = !DILocation(line: 721, column: 14, scope: !4974)
!4985 = !DILocation(line: 721, column: 23, scope: !4974)
!4986 = !DILocation(line: 720, column: 17, scope: !4966)
!4987 = !DILocation(line: 723, column: 1, scope: !4966)
!4988 = !DILocation(line: 723, column: 2, scope: !4966)
!4989 = distinct !DISubprogram(name: "read_byte<miniz_oxide::inflate::core::decompress::{closure_env#1}>", linkageName: "_ZN11miniz_oxide7inflate4core9read_byte17he66975888a6d0044E", scope: !36, file: !729, line: 715, type: !4990, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !4998, retainedNodes: !4992)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!1875, !600, !108, !1962}
!4992 = !{!4993, !4994, !4995, !4996}
!4993 = !DILocalVariable(name: "in_iter", arg: 1, scope: !4989, file: !729, line: 715, type: !600)
!4994 = !DILocalVariable(name: "flags", arg: 2, scope: !4989, file: !729, line: 715, type: !108)
!4995 = !DILocalVariable(name: "f", arg: 3, scope: !4989, file: !729, line: 715, type: !1962)
!4996 = !DILocalVariable(name: "byte", scope: !4997, file: !729, line: 721, type: !37, align: 8)
!4997 = distinct !DILexicalBlock(scope: !4989, file: !729, line: 721, column: 9)
!4998 = !{!4999}
!4999 = !DITemplateTypeParameter(name: "F", type: !1962)
!5000 = !DILocation(line: 715, column: 17, scope: !4989)
!5001 = !DILocation(line: 715, column: 45, scope: !4989)
!5002 = !DILocation(line: 715, column: 57, scope: !4989)
!5003 = !DILocation(line: 719, column: 11, scope: !4989)
!5004 = !DILocation(line: 719, column: 19, scope: !4989)
!5005 = !DILocation(line: 719, column: 5, scope: !4989)
!5006 = !DILocation(line: 721, column: 14, scope: !4989)
!5007 = !DILocation(line: 721, column: 14, scope: !4997)
!5008 = !DILocation(line: 721, column: 23, scope: !4997)
!5009 = !DILocation(line: 720, column: 17, scope: !4989)
!5010 = !DILocation(line: 723, column: 1, scope: !4989)
!5011 = !DILocation(line: 723, column: 2, scope: !4989)
!5012 = distinct !DISubprogram(name: "is_val_statically_known<i16>", linkageName: "_ZN4core10intrinsics23is_val_statically_known17h00c798ef7a1e8c45E", scope: !173, file: !172, line: 2534, type: !5013, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !5015)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!176, !762}
!5015 = !{!5016}
!5016 = !DILocalVariable(name: "_arg", arg: 1, scope: !5012, file: !172, line: 2534, type: !762)
!5017 = !{!5018}
!5018 = !DITemplateTypeParameter(name: "T", type: !762)
!5019 = !DILocation(line: 2534, column: 47, scope: !5012)
!5020 = !DILocation(line: 2536, column: 2, scope: !5012)
!5021 = distinct !DISubprogram(name: "cold_path", linkageName: "_ZN4core10intrinsics9cold_path17h142e372fc723bcf5E", scope: !173, file: !172, line: 417, type: !5022, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{null}
!5024 = !DILocation(line: 417, column: 28, scope: !5021)
!5025 = distinct !DISubprogram(name: "min<u32>", linkageName: "_ZN4core3cmp3min17hcc5e1ffd201b4355E", scope: !5027, file: !5026, line: 1562, type: !5028, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !149, retainedNodes: !5030)
!5026 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "2ebed4d982e1934df4c432f70a016f34")
!5027 = !DINamespace(name: "cmp", scope: !76)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{!108, !108, !108}
!5030 = !{!5031, !5032}
!5031 = !DILocalVariable(name: "v1", arg: 1, scope: !5025, file: !5026, line: 1562, type: !108)
!5032 = !DILocalVariable(name: "v2", arg: 2, scope: !5025, file: !5026, line: 1562, type: !108)
!5033 = !DILocation(line: 1562, column: 53, scope: !5025)
!5034 = !DILocation(line: 1562, column: 60, scope: !5025)
!5035 = !DILocation(line: 1563, column: 8, scope: !5025)
!5036 = !DILocation(line: 1564, column: 2, scope: !5025)
!5037 = distinct !DISubprogram(name: "ne<miniz_oxide::inflate::TINFLStatus, miniz_oxide::inflate::TINFLStatus>", linkageName: "_ZN4core3cmp9PartialEq2ne17hbf384579b5eabf64E", scope: !5038, file: !5026, line: 264, type: !5039, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5045, retainedNodes: !5042)
!5038 = !DINamespace(name: "PartialEq", scope: !5027)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!176, !5041, !5041}
!5041 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&miniz_oxide::inflate::TINFLStatus", baseType: !24, size: 32, align: 32, dwarfAddressSpace: 0)
!5042 = !{!5043, !5044}
!5043 = !DILocalVariable(name: "self", arg: 1, scope: !5037, file: !5026, line: 264, type: !5041)
!5044 = !DILocalVariable(name: "other", arg: 2, scope: !5037, file: !5026, line: 264, type: !5041)
!5045 = !{!5046, !5047}
!5046 = !DITemplateTypeParameter(name: "Self", type: !24)
!5047 = !DITemplateTypeParameter(name: "Rhs", type: !24)
!5048 = !DILocation(line: 264, column: 11, scope: !5037)
!5049 = !DILocation(line: 264, column: 18, scope: !5037)
!5050 = !DILocation(line: 265, column: 15, scope: !5037)
!5051 = !DILocation(line: 265, column: 9, scope: !5037)
!5052 = !DILocation(line: 266, column: 6, scope: !5037)
!5053 = distinct !DISubprogram(name: "ne<miniz_oxide::inflate::core::State, miniz_oxide::inflate::core::State>", linkageName: "_ZN4core3cmp9PartialEq2ne17hf276dde69ddaa528E", scope: !5038, file: !5026, line: 264, type: !5054, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5060, retainedNodes: !5057)
!5054 = !DISubroutineType(types: !5055)
!5055 = !{!176, !5056, !5056}
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&miniz_oxide::inflate::core::State", baseType: !35, size: 32, align: 32, dwarfAddressSpace: 0)
!5057 = !{!5058, !5059}
!5058 = !DILocalVariable(name: "self", arg: 1, scope: !5053, file: !5026, line: 264, type: !5056)
!5059 = !DILocalVariable(name: "other", arg: 2, scope: !5053, file: !5026, line: 264, type: !5056)
!5060 = !{!5061, !5062}
!5061 = !DITemplateTypeParameter(name: "Self", type: !35)
!5062 = !DITemplateTypeParameter(name: "Rhs", type: !35)
!5063 = !DILocation(line: 264, column: 11, scope: !5053)
!5064 = !DILocation(line: 264, column: 18, scope: !5053)
!5065 = !DILocation(line: 265, column: 15, scope: !5053)
!5066 = !DILocation(line: 265, column: 9, scope: !5053)
!5067 = !DILocation(line: 266, column: 6, scope: !5053)
!5068 = distinct !DISubprogram(name: "take<usize>", linkageName: "_ZN4core3mem4take17h3beddaf645bd9814E", scope: !5070, file: !5069, line: 810, type: !5071, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !226, retainedNodes: !5074)
!5069 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "335eb38d3ee0638ae9d68820d69094ad")
!5070 = !DINamespace(name: "mem", scope: !76)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!158, !5073}
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut usize", baseType: !158, size: 32, align: 32, dwarfAddressSpace: 0)
!5074 = !{!5075}
!5075 = !DILocalVariable(name: "dest", arg: 1, scope: !5068, file: !5069, line: 810, type: !5073)
!5076 = !DILocation(line: 810, column: 25, scope: !5068)
!5077 = !DILocation(line: 811, column: 5, scope: !5068)
!5078 = !DILocation(line: 812, column: 2, scope: !5068)
!5079 = distinct !DISubprogram(name: "replace<u8>", linkageName: "_ZN4core3mem7replace17h18bdf782477fce2bE", scope: !5070, file: !5069, line: 877, type: !5080, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !5082)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{!37, !3404, !37}
!5082 = !{!5083, !5084, !5085}
!5083 = !DILocalVariable(name: "dest", arg: 1, scope: !5079, file: !5069, line: 877, type: !3404)
!5084 = !DILocalVariable(name: "src", arg: 2, scope: !5079, file: !5069, line: 877, type: !37)
!5085 = !DILocalVariable(name: "result", scope: !5086, file: !5069, line: 891, type: !37, align: 8)
!5086 = distinct !DILexicalBlock(scope: !5079, file: !5069, line: 891, column: 9)
!5087 = !DILocation(line: 877, column: 25, scope: !5079)
!5088 = !DILocation(line: 877, column: 39, scope: !5079)
!5089 = !DILocation(line: 891, column: 22, scope: !5079)
!5090 = !DILocation(line: 891, column: 13, scope: !5086)
!5091 = !DILocation(line: 892, column: 9, scope: !5086)
!5092 = !DILocation(line: 895, column: 2, scope: !5079)
!5093 = distinct !DISubprogram(name: "replace<usize>", linkageName: "_ZN4core3mem7replace17h1dab8f49bc06feffE", scope: !5070, file: !5069, line: 877, type: !5094, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !226, retainedNodes: !5096)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!158, !5073, !158}
!5096 = !{!5097, !5098, !5099}
!5097 = !DILocalVariable(name: "dest", arg: 1, scope: !5093, file: !5069, line: 877, type: !5073)
!5098 = !DILocalVariable(name: "src", arg: 2, scope: !5093, file: !5069, line: 877, type: !158)
!5099 = !DILocalVariable(name: "result", scope: !5100, file: !5069, line: 891, type: !158, align: 32)
!5100 = distinct !DILexicalBlock(scope: !5093, file: !5069, line: 891, column: 9)
!5101 = !DILocation(line: 877, column: 25, scope: !5093)
!5102 = !DILocation(line: 877, column: 39, scope: !5093)
!5103 = !DILocation(line: 891, column: 22, scope: !5093)
!5104 = !DILocation(line: 891, column: 13, scope: !5100)
!5105 = !DILocation(line: 892, column: 9, scope: !5100)
!5106 = !DILocation(line: 895, column: 2, scope: !5093)
!5107 = distinct !DISubprogram(name: "to_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$i16$GT$11to_ne_bytes17h6d4eaa791e22a22eE", scope: !5109, file: !5108, line: 3717, type: !5110, scopeLine: 3717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5112)
!5108 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "f16ddcffff2d6d304c4da6339aadad04")
!5109 = !DINamespace(name: "{impl#1}", scope: !999)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{!2441, !762}
!5112 = !{!5113}
!5113 = !DILocalVariable(name: "self", arg: 1, scope: !5107, file: !5108, line: 3717, type: !762)
!5114 = !DILocation(line: 3717, column: 34, scope: !5107)
!5115 = !DILocation(line: 3720, column: 22, scope: !5107)
!5116 = !DILocation(line: 3721, column: 10, scope: !5107)
!5117 = distinct !DISubprogram(name: "from_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$i16$GT$13from_ne_bytes17hf31c1ce6309596eeE", scope: !5109, file: !5108, line: 3820, type: !5118, scopeLine: 3820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5120)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!762, !2441}
!5120 = !{!5121}
!5121 = !DILocalVariable(name: "bytes", arg: 1, scope: !5117, file: !5108, line: 3820, type: !2441)
!5122 = !DILocation(line: 3820, column: 36, scope: !5117)
!5123 = !DILocation(line: 3822, column: 22, scope: !5117)
!5124 = !DILocation(line: 3823, column: 10, scope: !5117)
!5125 = distinct !DISubprogram(name: "from_le_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17hdea4d26633621f0cE", scope: !2685, file: !997, line: 3798, type: !5126, scopeLine: 3798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5128)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!105, !2441}
!5128 = !{!5129}
!5129 = !DILocalVariable(name: "bytes", arg: 1, scope: !5125, file: !997, line: 3798, type: !2441)
!5130 = !DILocation(line: 3798, column: 36, scope: !5125)
!5131 = !DILocation(line: 3799, column: 27, scope: !5125)
!5132 = !DILocalVariable(name: "x", arg: 1, scope: !5133, file: !997, line: 542, type: !105)
!5133 = distinct !DISubprogram(name: "from_le", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$7from_le17h8470338dd0ad2e81E", scope: !2685, file: !997, line: 542, type: !2678, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5134)
!5134 = !{!5132}
!5135 = !DILocation(line: 542, column: 30, scope: !5133, inlinedAt: !5136)
!5136 = distinct !DILocation(line: 3799, column: 13, scope: !5125)
!5137 = !DILocation(line: 3800, column: 10, scope: !5125)
!5138 = distinct !DISubprogram(name: "from_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17hc5a88110f2c949b8E", scope: !2685, file: !997, line: 3841, type: !5126, scopeLine: 3841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5139)
!5139 = !{!5140}
!5140 = !DILocalVariable(name: "bytes", arg: 1, scope: !5138, file: !997, line: 3841, type: !2441)
!5141 = !DILocation(line: 3841, column: 36, scope: !5138)
!5142 = !DILocation(line: 3843, column: 22, scope: !5138)
!5143 = !DILocation(line: 3844, column: 10, scope: !5138)
!5144 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17he5f517207b521284E", scope: !998, file: !997, line: 634, type: !5145, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5147)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{!2367, !158, !158}
!5147 = !{!5148, !5149}
!5148 = !DILocalVariable(name: "self", arg: 1, scope: !5144, file: !997, line: 634, type: !158)
!5149 = !DILocalVariable(name: "rhs", arg: 2, scope: !5144, file: !997, line: 634, type: !158)
!5150 = !DILocation(line: 634, column: 34, scope: !5144)
!5151 = !DILocation(line: 634, column: 40, scope: !5144)
!5152 = !DILocation(line: 642, column: 37, scope: !5144)
!5153 = !DILocation(line: 456, column: 23, scope: !171, inlinedAt: !5154)
!5154 = distinct !DILocation(line: 642, column: 16, scope: !5144)
!5155 = !DILocation(line: 457, column: 8, scope: !171, inlinedAt: !5154)
!5156 = !DILocation(line: 461, column: 9, scope: !171, inlinedAt: !5154)
!5157 = !DILocation(line: 457, column: 5, scope: !171, inlinedAt: !5154)
!5158 = !DILocation(line: 459, column: 9, scope: !171, inlinedAt: !5154)
!5159 = !DILocation(line: 463, column: 2, scope: !171, inlinedAt: !5154)
!5160 = !DILocation(line: 642, column: 16, scope: !5144)
!5161 = !DILocation(line: 646, column: 31, scope: !5144)
!5162 = !DILocation(line: 646, column: 17, scope: !5144)
!5163 = !DILocation(line: 642, column: 13, scope: !5144)
!5164 = !DILocation(line: 643, column: 17, scope: !5144)
!5165 = !DILocation(line: 648, column: 10, scope: !5144)
!5166 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h5bd1e07b9018e6ddE", scope: !998, file: !997, line: 1033, type: !5145, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5167)
!5167 = !{!5168, !5169, !5170, !5172}
!5168 = !DILocalVariable(name: "self", arg: 1, scope: !5166, file: !997, line: 1033, type: !158)
!5169 = !DILocalVariable(name: "rhs", arg: 2, scope: !5166, file: !997, line: 1033, type: !158)
!5170 = !DILocalVariable(name: "a", scope: !5171, file: !997, line: 1034, type: !158, align: 32)
!5171 = distinct !DILexicalBlock(scope: !5166, file: !997, line: 1034, column: 13)
!5172 = !DILocalVariable(name: "b", scope: !5171, file: !997, line: 1034, type: !176, align: 8)
!5173 = !DILocation(line: 1033, column: 34, scope: !5166)
!5174 = !DILocation(line: 1033, column: 40, scope: !5166)
!5175 = !DILocalVariable(name: "self", arg: 1, scope: !5176, file: !997, line: 2867, type: !158)
!5176 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hb3e76adbffddd04cE", scope: !998, file: !997, line: 2867, type: !5177, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5183)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!5179, !158, !158}
!5179 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !5, size: 64, align: 32, elements: !5180, templateParams: !98, identifier: "d571287e27d8be874e95a2f698798cc6")
!5180 = !{!5181, !5182}
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5179, file: !5, baseType: !158, size: 32, align: 32)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !5179, file: !5, baseType: !176, size: 8, align: 8, offset: 32)
!5183 = !{!5175, !5184, !5185, !5187}
!5184 = !DILocalVariable(name: "rhs", arg: 2, scope: !5176, file: !997, line: 2867, type: !158)
!5185 = !DILocalVariable(name: "a", scope: !5186, file: !997, line: 2868, type: !108, align: 32)
!5186 = distinct !DILexicalBlock(scope: !5176, file: !997, line: 2868, column: 13)
!5187 = !DILocalVariable(name: "b", scope: !5186, file: !997, line: 2868, type: !176, align: 8)
!5188 = !DILocation(line: 2867, column: 38, scope: !5176, inlinedAt: !5189)
!5189 = distinct !DILocation(line: 1034, column: 31, scope: !5166)
!5190 = !DILocation(line: 2867, column: 44, scope: !5176, inlinedAt: !5189)
!5191 = !DILocation(line: 2868, column: 26, scope: !5176, inlinedAt: !5189)
!5192 = !DILocation(line: 2868, column: 18, scope: !5176, inlinedAt: !5189)
!5193 = !DILocation(line: 2868, column: 18, scope: !5186, inlinedAt: !5189)
!5194 = !DILocation(line: 2868, column: 21, scope: !5176, inlinedAt: !5189)
!5195 = !DILocation(line: 2868, column: 21, scope: !5186, inlinedAt: !5189)
!5196 = !DILocation(line: 1034, column: 31, scope: !5166)
!5197 = !DILocation(line: 1034, column: 18, scope: !5166)
!5198 = !DILocation(line: 1034, column: 18, scope: !5171)
!5199 = !DILocation(line: 1034, column: 21, scope: !5166)
!5200 = !DILocation(line: 1034, column: 21, scope: !5171)
!5201 = !DILocation(line: 456, column: 23, scope: !171, inlinedAt: !5202)
!5202 = distinct !DILocation(line: 1035, column: 16, scope: !5171)
!5203 = !DILocation(line: 457, column: 8, scope: !171, inlinedAt: !5202)
!5204 = !DILocation(line: 461, column: 9, scope: !171, inlinedAt: !5202)
!5205 = !DILocation(line: 457, column: 5, scope: !171, inlinedAt: !5202)
!5206 = !DILocation(line: 459, column: 9, scope: !171, inlinedAt: !5202)
!5207 = !DILocation(line: 463, column: 2, scope: !171, inlinedAt: !5202)
!5208 = !DILocation(line: 1035, column: 16, scope: !5171)
!5209 = !DILocation(line: 1035, column: 56, scope: !5171)
!5210 = !DILocation(line: 1035, column: 13, scope: !5171)
!5211 = !DILocation(line: 1035, column: 42, scope: !5171)
!5212 = !DILocation(line: 1036, column: 10, scope: !5166)
!5213 = distinct !DISubprogram(name: "checked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h7b3de472c2facc2aE", scope: !998, file: !997, line: 790, type: !5145, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5214)
!5214 = !{!5215, !5216}
!5215 = !DILocalVariable(name: "self", arg: 1, scope: !5213, file: !997, line: 790, type: !158)
!5216 = !DILocalVariable(name: "rhs", arg: 2, scope: !5213, file: !997, line: 790, type: !158)
!5217 = !DILocation(line: 790, column: 34, scope: !5213)
!5218 = !DILocation(line: 790, column: 40, scope: !5213)
!5219 = !DILocation(line: 796, column: 16, scope: !5213)
!5220 = !DILocation(line: 800, column: 31, scope: !5213)
!5221 = !DILocation(line: 800, column: 17, scope: !5213)
!5222 = !DILocation(line: 796, column: 13, scope: !5213)
!5223 = !DILocation(line: 797, column: 17, scope: !5213)
!5224 = !DILocation(line: 802, column: 10, scope: !5213)
!5225 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h418dc35af1cac930E", scope: !217, file: !192, line: 378, type: !5226, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !222, declaration: !5228, retainedNodes: !5229)
!5226 = !DISubroutineType(types: !5227)
!5227 = !{!217, !158, !158}
!5228 = !DISubprogram(name: "new<usize>", linkageName: "_ZN4core3ops5range25RangeInclusive$LT$Idx$GT$3new17h418dc35af1cac930E", scope: !217, file: !192, line: 378, type: !5226, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !222)
!5229 = !{!5230, !5231}
!5230 = !DILocalVariable(name: "start", arg: 1, scope: !5225, file: !192, line: 378, type: !158)
!5231 = !DILocalVariable(name: "end", arg: 2, scope: !5225, file: !192, line: 378, type: !158)
!5232 = !DILocation(line: 378, column: 22, scope: !5225)
!5233 = !DILocation(line: 378, column: 34, scope: !5225)
!5234 = !DILocation(line: 379, column: 9, scope: !5225)
!5235 = !DILocation(line: 380, column: 6, scope: !5225)
!5236 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr4copy18precondition_check17hf00f2d5f4207ae3aE", scope: !5238, file: !5237, line: 68, type: !5239, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5244)
!5237 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ub_checks.rs", directory: "", checksumkind: CSK_MD5, checksum: "41b3943b2b7dc8c218ee37ead81b317d")
!5238 = !DINamespace(name: "copy", scope: !129)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{null, !5241, !5243, !158, !176, !354}
!5241 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !5242, size: 32, align: 32, dwarfAddressSpace: 0)
!5242 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !5242, size: 32, align: 32, dwarfAddressSpace: 0)
!5244 = !{!5245, !5246, !5247, !5248, !5249}
!5245 = !DILocalVariable(name: "src", arg: 1, scope: !5236, file: !5237, line: 68, type: !5241)
!5246 = !DILocalVariable(name: "dst", arg: 2, scope: !5236, file: !5237, line: 68, type: !5243)
!5247 = !DILocalVariable(name: "align", arg: 3, scope: !5236, file: !5237, line: 68, type: !158)
!5248 = !DILocalVariable(name: "zero_size", arg: 4, scope: !5236, file: !5237, line: 68, type: !176)
!5249 = !DILocalVariable(name: "msg", scope: !5250, file: !5237, line: 70, type: !374, align: 32)
!5250 = distinct !DILexicalBlock(scope: !5236, file: !5237, line: 70, column: 21)
!5251 = !DILocation(line: 68, column: 43, scope: !5236)
!5252 = !DILocation(line: 70, column: 25, scope: !5250)
!5253 = !DILocation(line: 635, column: 13, scope: !5254)
!5254 = !DILexicalBlockFile(scope: !5236, file: !5255, discriminator: 0)
!5255 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "8857c34524728cc5887872677b8e1917")
!5256 = !DILocation(line: 73, column: 94, scope: !5250)
!5257 = !DILocation(line: 73, column: 59, scope: !5250)
!5258 = !DILocation(line: 73, column: 21, scope: !5250)
!5259 = !DILocation(line: 636, column: 20, scope: !5254)
!5260 = !DILocation(line: 75, column: 14, scope: !5236)
!5261 = distinct !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17hd7e01c805eeb86a2E", scope: !5263, file: !5262, line: 882, type: !5265, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !133, retainedNodes: !5268)
!5262 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "b0bbe11126e084b85a45fba4c5663912")
!5263 = !DINamespace(name: "{impl#0}", scope: !5264)
!5264 = !DINamespace(name: "mut_ptr", scope: !129)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!158, !5267, !132, !354}
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u16", baseType: !105, size: 32, align: 32, dwarfAddressSpace: 0)
!5268 = !{!5269, !5270}
!5269 = !DILocalVariable(name: "self", arg: 1, scope: !5261, file: !5262, line: 882, type: !5267)
!5270 = !DILocalVariable(name: "origin", arg: 2, scope: !5261, file: !5262, line: 882, type: !132)
!5271 = !DILocation(line: 882, column: 46, scope: !5261)
!5272 = !DILocation(line: 882, column: 52, scope: !5261)
!5273 = !DILocation(line: 887, column: 37, scope: !5261)
!5274 = !DILocation(line: 888, column: 6, scope: !5261)
!5275 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17hee37ac0066823501E", scope: !5276, file: !5237, line: 68, type: !5277, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5279)
!5276 = !DINamespace(name: "add", scope: !5263)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{null, !5241, !158, !158, !354}
!5279 = !{!5280, !5281, !5282, !5283}
!5280 = !DILocalVariable(name: "this", arg: 1, scope: !5275, file: !5237, line: 68, type: !5241)
!5281 = !DILocalVariable(name: "count", arg: 2, scope: !5275, file: !5237, line: 68, type: !158)
!5282 = !DILocalVariable(name: "size", arg: 3, scope: !5275, file: !5237, line: 68, type: !158)
!5283 = !DILocalVariable(name: "msg", scope: !5284, file: !5237, line: 70, type: !374, align: 32)
!5284 = distinct !DILexicalBlock(scope: !5275, file: !5237, line: 70, column: 21)
!5285 = !DILocation(line: 68, column: 43, scope: !5275)
!5286 = !DILocation(line: 70, column: 25, scope: !5284)
!5287 = !DILocation(line: 957, column: 18, scope: !5288)
!5288 = !DILexicalBlockFile(scope: !5275, file: !5262, discriminator: 0)
!5289 = !DILocation(line: 73, column: 94, scope: !5284)
!5290 = !DILocation(line: 73, column: 59, scope: !5284)
!5291 = !DILocation(line: 73, column: 21, scope: !5284)
!5292 = !DILocation(line: 75, column: 14, scope: !5275)
!5293 = distinct !DISubprogram(name: "runtime_add_nowrap", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17h890525b7f75e70f4E", scope: !5276, file: !5262, line: 934, type: !5294, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5296)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{!176, !5241, !158, !158}
!5296 = !{!5297, !5298, !5299}
!5297 = !DILocalVariable(name: "this", arg: 1, scope: !5293, file: !5262, line: 934, type: !5241)
!5298 = !DILocalVariable(name: "count", arg: 2, scope: !5293, file: !5262, line: 934, type: !158)
!5299 = !DILocalVariable(name: "size", arg: 3, scope: !5293, file: !5262, line: 934, type: !158)
!5300 = !DILocation(line: 934, column: 37, scope: !5293)
!5301 = !DILocation(line: 934, column: 54, scope: !5293)
!5302 = !DILocation(line: 934, column: 68, scope: !5293)
!5303 = !DILocation(line: 2435, column: 27, scope: !5304)
!5304 = !DILexicalBlockFile(scope: !5293, file: !172, discriminator: 0)
!5305 = !DILocation(line: 2435, column: 9, scope: !5304)
!5306 = !DILocation(line: 947, column: 10, scope: !5293)
!5307 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17h78e17df217b11fdbE", scope: !5308, file: !172, line: 2423, type: !5294, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5309)
!5308 = !DINamespace(name: "runtime_add_nowrap", scope: !5276)
!5309 = !{!5310, !5311, !5312, !5313, !5315}
!5310 = !DILocalVariable(name: "this", arg: 1, scope: !5307, file: !172, line: 2423, type: !5241)
!5311 = !DILocalVariable(name: "count", arg: 2, scope: !5307, file: !172, line: 2423, type: !158)
!5312 = !DILocalVariable(name: "size", arg: 3, scope: !5307, file: !172, line: 2423, type: !158)
!5313 = !DILocalVariable(name: "byte_offset", scope: !5314, file: !5262, line: 940, type: !158, align: 32)
!5314 = distinct !DILexicalBlock(scope: !5307, file: !5262, line: 940, column: 21)
!5315 = !DILocalVariable(name: "overflow", scope: !5316, file: !5262, line: 943, type: !176, align: 8)
!5316 = distinct !DILexicalBlock(scope: !5314, file: !5262, line: 943, column: 21)
!5317 = !DILocation(line: 2423, column: 40, scope: !5307)
!5318 = !DILocation(line: 940, column: 51, scope: !5319)
!5319 = !DILexicalBlockFile(scope: !5307, file: !5262, discriminator: 0)
!5320 = !DILocation(line: 940, column: 45, scope: !5319)
!5321 = !DILocation(line: 940, column: 25, scope: !5319)
!5322 = !DILocation(line: 940, column: 30, scope: !5319)
!5323 = !DILocation(line: 940, column: 30, scope: !5314)
!5324 = !DILocalVariable(name: "self", arg: 1, scope: !5325, file: !5326, line: 153, type: !5241)
!5325 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h1e4298f03a0be924E", scope: !5327, file: !5326, line: 153, type: !5329, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5332, retainedNodes: !5331)
!5326 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "473e695c4e056b47688e2be1785e83b5")
!5327 = !DINamespace(name: "{impl#0}", scope: !5328)
!5328 = !DINamespace(name: "const_ptr", scope: !129)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!158, !5241}
!5331 = !{!5324}
!5332 = !{!5333}
!5333 = !DITemplateTypeParameter(name: "T", type: !5242)
!5334 = !DILocation(line: 153, column: 17, scope: !5325, inlinedAt: !5335)
!5335 = distinct !DILocation(line: 943, column: 46, scope: !5314)
!5336 = !DILocalVariable(name: "self", arg: 1, scope: !5337, file: !5326, line: 48, type: !5241)
!5337 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17he4f3e6517c8b4266E", scope: !5327, file: !5326, line: 48, type: !5338, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5341, retainedNodes: !5340)
!5338 = !DISubroutineType(types: !5339)
!5339 = !{!5241, !5241}
!5340 = !{!5336}
!5341 = !{!5333, !5342}
!5342 = !DITemplateTypeParameter(name: "U", type: !5242)
!5343 = !DILocation(line: 48, column: 26, scope: !5337, inlinedAt: !5344)
!5344 = distinct !DILocation(line: 159, column: 38, scope: !5325, inlinedAt: !5335)
!5345 = !DILocation(line: 159, column: 18, scope: !5325, inlinedAt: !5335)
!5346 = !DILocalVariable(name: "self", arg: 1, scope: !5347, file: !997, line: 2645, type: !158)
!5347 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h5ed3665df2a5b632E", scope: !998, file: !997, line: 2645, type: !5177, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5348)
!5348 = !{!5346, !5349, !5350, !5352}
!5349 = !DILocalVariable(name: "rhs", arg: 2, scope: !5347, file: !997, line: 2645, type: !158)
!5350 = !DILocalVariable(name: "a", scope: !5351, file: !997, line: 2646, type: !108, align: 32)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !997, line: 2646, column: 13)
!5352 = !DILocalVariable(name: "b", scope: !5351, file: !997, line: 2646, type: !176, align: 8)
!5353 = !DILocation(line: 2645, column: 38, scope: !5347, inlinedAt: !5354)
!5354 = distinct !DILocation(line: 943, column: 53, scope: !5314)
!5355 = !DILocation(line: 2645, column: 44, scope: !5347, inlinedAt: !5354)
!5356 = !DILocation(line: 2646, column: 26, scope: !5347, inlinedAt: !5354)
!5357 = !DILocation(line: 2646, column: 18, scope: !5347, inlinedAt: !5354)
!5358 = !DILocation(line: 2646, column: 18, scope: !5351, inlinedAt: !5354)
!5359 = !DILocation(line: 2646, column: 21, scope: !5347, inlinedAt: !5354)
!5360 = !DILocation(line: 2646, column: 21, scope: !5351, inlinedAt: !5354)
!5361 = !DILocation(line: 2648, column: 10, scope: !5347, inlinedAt: !5354)
!5362 = !DILocation(line: 943, column: 53, scope: !5314)
!5363 = !DILocation(line: 943, column: 29, scope: !5314)
!5364 = !DILocation(line: 943, column: 29, scope: !5316)
!5365 = !DILocation(line: 944, column: 21, scope: !5316)
!5366 = !DILocation(line: 941, column: 32, scope: !5319)
!5367 = !DILocation(line: 941, column: 25, scope: !5319)
!5368 = !DILocation(line: 944, column: 61, scope: !5316)
!5369 = !DILocation(line: 2425, column: 10, scope: !5307)
!5370 = !DILocation(line: 2423, column: 9, scope: !5307)
!5371 = distinct !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hf273321d1a9eecb7E", scope: !127, file: !5372, line: 948, type: !5373, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !133, declaration: !5375, retainedNodes: !5376)
!5372 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "6726e73c6c894eba30d90288586d0f43")
!5373 = !DISubroutineType(types: !5374)
!5374 = !{!158, !127, !127}
!5375 = !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hf273321d1a9eecb7E", scope: !127, file: !5372, line: 948, type: !5373, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !133)
!5376 = !{!5377, !5378}
!5377 = !DILocalVariable(name: "self", arg: 1, scope: !5371, file: !5372, line: 948, type: !127)
!5378 = !DILocalVariable(name: "subtracted", arg: 2, scope: !5371, file: !5372, line: 948, type: !127)
!5379 = !DILocation(line: 948, column: 46, scope: !5371)
!5380 = !DILocation(line: 948, column: 52, scope: !5371)
!5381 = !DILocalVariable(name: "self", arg: 1, scope: !5382, file: !5372, line: 401, type: !127)
!5382 = distinct !DISubprogram(name: "as_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h482c9c62eea30692E", scope: !127, file: !5372, line: 401, type: !5383, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !133, declaration: !5385, retainedNodes: !5386)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!5267, !127}
!5385 = !DISubprogram(name: "as_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h482c9c62eea30692E", scope: !127, file: !5372, line: 401, type: !5383, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !133)
!5386 = !{!5381}
!5387 = !DILocation(line: 401, column: 25, scope: !5382, inlinedAt: !5388)
!5388 = distinct !DILocation(line: 953, column: 23, scope: !5371)
!5389 = !DILocation(line: 401, column: 25, scope: !5382, inlinedAt: !5390)
!5390 = distinct !DILocation(line: 953, column: 64, scope: !5371)
!5391 = !DILocation(line: 953, column: 32, scope: !5371)
!5392 = !DILocation(line: 954, column: 6, scope: !5371)
!5393 = distinct !DISubprogram(name: "cast<[i16], i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8d0689e32ac1dd3cE", scope: !5394, file: !5372, line: 502, type: !5402, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5409, declaration: !5408, retainedNodes: !5411)
!5394 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[i16]>", scope: !128, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !5395, templateParams: !5017, identifier: "ea3ef9e1c8858648551e4dd70dc84d0b")
!5395 = !{!5396}
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5394, file: !5, baseType: !5397, size: 64, align: 32, flags: DIFlagPrivate)
!5397 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [i16]", file: !5, size: 64, align: 32, elements: !5398, templateParams: !98, identifier: "d98d20b005f55ffc4b904267dd76eec0")
!5398 = !{!5399, !5401}
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5397, file: !5, baseType: !5400, size: 32, align: 32)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32, align: 32, dwarfAddressSpace: 0)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5397, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!5402 = !DISubroutineType(types: !5403)
!5403 = !{!5404, !5394}
!5404 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<i16>", scope: !128, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !5405, templateParams: !5017, identifier: "998891c5f912effaa0fa7237d38f3788")
!5405 = !{!5406}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5404, file: !5, baseType: !5407, size: 32, align: 32, flags: DIFlagPrivate)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const i16", baseType: !762, size: 32, align: 32, dwarfAddressSpace: 0)
!5408 = !DISubprogram(name: "cast<[i16], i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h8d0689e32ac1dd3cE", scope: !5394, file: !5372, line: 502, type: !5402, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5409)
!5409 = !{!5018, !5410}
!5410 = !DITemplateTypeParameter(name: "U", type: !762)
!5411 = !{!5412}
!5412 = !DILocalVariable(name: "self", arg: 1, scope: !5393, file: !5372, line: 502, type: !5394)
!5413 = !DILocation(line: 502, column: 26, scope: !5393)
!5414 = !DILocalVariable(name: "self", arg: 1, scope: !5415, file: !5372, line: 401, type: !5394)
!5415 = distinct !DISubprogram(name: "as_ptr<[i16]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5606face1d6b3bdE", scope: !5394, file: !5372, line: 401, type: !5416, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !5422, retainedNodes: !5423)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!5418, !5394}
!5418 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [i16]", file: !5, size: 64, align: 32, elements: !5419, templateParams: !98, identifier: "7b64504d58064d2d60460683b1fed8e")
!5419 = !{!5420, !5421}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5418, file: !5, baseType: !5400, size: 32, align: 32)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5418, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!5422 = !DISubprogram(name: "as_ptr<[i16]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf5606face1d6b3bdE", scope: !5394, file: !5372, line: 401, type: !5416, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!5423 = !{!5414}
!5424 = !DILocation(line: 401, column: 25, scope: !5415, inlinedAt: !5425)
!5425 = distinct !DILocation(line: 504, column: 42, scope: !5393)
!5426 = !DILocation(line: 408, column: 6, scope: !5415, inlinedAt: !5425)
!5427 = !DILocation(line: 504, column: 42, scope: !5393)
!5428 = !DILocation(line: 505, column: 6, scope: !5393)
!5429 = distinct !DISubprogram(name: "from_mut<[i16]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h5b94ff678d25e24bE", scope: !5394, file: !5372, line: 291, type: !5430, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !5436, retainedNodes: !5437)
!5430 = !DISubroutineType(types: !5431)
!5431 = !{!5394, !5432}
!5432 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i16]", file: !5, size: 64, align: 32, elements: !5433, templateParams: !98, identifier: "b232e6e5c929d64e93c3455cbe611f32")
!5433 = !{!5434, !5435}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5432, file: !5, baseType: !5400, size: 32, align: 32)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5432, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!5436 = !DISubprogram(name: "from_mut<[i16]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h5b94ff678d25e24bE", scope: !5394, file: !5372, line: 291, type: !5430, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!5437 = !{!5438}
!5438 = !DILocalVariable(name: "r", arg: 1, scope: !5429, file: !5372, line: 291, type: !5432)
!5439 = !DILocation(line: 291, column: 27, scope: !5429)
!5440 = !DILocation(line: 294, column: 6, scope: !5429)
!5441 = distinct !DISubprogram(name: "cast_array<u8, 2>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$10cast_array17h1afd9d08ed414bfdE", scope: !5442, file: !5326, line: 1524, type: !5443, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !5446)
!5442 = !DINamespace(name: "{impl#4}", scope: !5328)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{!5445, !1316}
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 2]", baseType: !2441, size: 32, align: 32, dwarfAddressSpace: 0)
!5446 = !{!5447}
!5447 = !DILocalVariable(name: "self", arg: 1, scope: !5441, file: !5326, line: 1524, type: !1316)
!5448 = !DILocation(line: 1524, column: 45, scope: !5441)
!5449 = !DILocalVariable(name: "self", arg: 1, scope: !5450, file: !5326, line: 48, type: !1316)
!5450 = distinct !DISubprogram(name: "cast<u8, [u8; 2]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h097e0b5775517ba4E", scope: !5327, file: !5326, line: 48, type: !5443, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5452, retainedNodes: !5451)
!5451 = !{!5449}
!5452 = !{!288, !5453}
!5453 = !DITemplateTypeParameter(name: "U", type: !2441)
!5454 = !DILocation(line: 48, column: 26, scope: !5450, inlinedAt: !5455)
!5455 = distinct !DILocation(line: 1525, column: 14, scope: !5441)
!5456 = !DILocation(line: 1526, column: 6, scope: !5441)
!5457 = distinct !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17h51caf91d94ad2869E", scope: !5327, file: !5326, line: 701, type: !5458, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !133, retainedNodes: !5460)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!158, !132, !132, !354}
!5460 = !{!5461, !5462, !5463}
!5461 = !DILocalVariable(name: "self", arg: 1, scope: !5457, file: !5326, line: 701, type: !132)
!5462 = !DILocalVariable(name: "origin", arg: 2, scope: !5457, file: !5326, line: 701, type: !132)
!5463 = !DILocalVariable(name: "pointee_size", scope: !5464, file: !5326, line: 726, type: !158, align: 32)
!5464 = distinct !DILexicalBlock(scope: !5457, file: !5326, line: 726, column: 9)
!5465 = !DILocation(line: 701, column: 46, scope: !5457)
!5466 = !DILocation(line: 701, column: 52, scope: !5457)
!5467 = !DILocation(line: 77, column: 35, scope: !5468)
!5468 = !DILexicalBlockFile(scope: !5457, file: !5237, discriminator: 0)
!5469 = !DILocation(line: 726, column: 28, scope: !5457)
!5470 = !DILocation(line: 726, column: 13, scope: !5464)
!5471 = !DILocation(line: 727, column: 17, scope: !5464)
!5472 = !DILocation(line: 78, column: 17, scope: !5468)
!5473 = !DILocation(line: 727, column: 9, scope: !5464)
!5474 = !DILocation(line: 727, column: 37, scope: !5464)
!5475 = !DILocation(line: 729, column: 18, scope: !5464)
!5476 = !DILocation(line: 730, column: 6, scope: !5457)
!5477 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h17cc6a60e958048cE", scope: !5478, file: !5237, line: 68, type: !5479, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !5481)
!5478 = !DINamespace(name: "offset_from_unsigned", scope: !5327)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{null, !5241, !5241, !354}
!5481 = !{!5482, !5483, !5484}
!5482 = !DILocalVariable(name: "this", arg: 1, scope: !5477, file: !5237, line: 68, type: !5241)
!5483 = !DILocalVariable(name: "origin", arg: 2, scope: !5477, file: !5237, line: 68, type: !5241)
!5484 = !DILocalVariable(name: "msg", scope: !5485, file: !5237, line: 70, type: !374, align: 32)
!5485 = distinct !DILexicalBlock(scope: !5477, file: !5237, line: 70, column: 21)
!5486 = !DILocation(line: 68, column: 43, scope: !5477)
!5487 = !DILocation(line: 70, column: 25, scope: !5485)
!5488 = !DILocation(line: 723, column: 18, scope: !5489)
!5489 = !DILexicalBlockFile(scope: !5477, file: !5326, discriminator: 0)
!5490 = !DILocation(line: 73, column: 94, scope: !5485)
!5491 = !DILocation(line: 73, column: 59, scope: !5485)
!5492 = !DILocation(line: 73, column: 21, scope: !5485)
!5493 = !DILocation(line: 75, column: 14, scope: !5477)
!5494 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3get17h1723e469f761e381E", scope: !280, file: !5495, line: 545, type: !5496, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, declaration: !5498, retainedNodes: !5499)
!5495 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cell.rs", directory: "", checksumkind: CSK_MD5, checksum: "0fa32187f20826ea351a1606e10938e3")
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!37, !2339}
!5498 = !DISubprogram(name: "get<u8>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3get17h1723e469f761e381E", scope: !280, file: !5495, line: 545, type: !5496, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !287)
!5499 = !{!5500}
!5500 = !DILocalVariable(name: "self", arg: 1, scope: !5494, file: !5495, line: 545, type: !2339)
!5501 = !DILocation(line: 545, column: 22, scope: !5494)
!5502 = !DILocalVariable(name: "self", arg: 1, scope: !5503, file: !5495, line: 2394, type: !5507)
!5503 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h0e4c29e810955d49E", scope: !284, file: !5495, line: 2394, type: !5504, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, declaration: !5508, retainedNodes: !5509)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!5506, !5507}
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !37, size: 32, align: 32, dwarfAddressSpace: 0)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::cell::UnsafeCell<u8>", baseType: !284, size: 32, align: 32, dwarfAddressSpace: 0)
!5508 = !DISubprogram(name: "get<u8>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3get17h0e4c29e810955d49E", scope: !284, file: !5495, line: 2394, type: !5504, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !287)
!5509 = !{!5502}
!5510 = !DILocation(line: 2394, column: 22, scope: !5503, inlinedAt: !5511)
!5511 = distinct !DILocation(line: 548, column: 30, scope: !5494)
!5512 = !DILocation(line: 548, column: 18, scope: !5494)
!5513 = !DILocation(line: 549, column: 6, scope: !5494)
!5514 = distinct !DISubprogram(name: "set<u8>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3set17hb929e55d2375c181E", scope: !280, file: !5495, line: 432, type: !5515, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, declaration: !5517, retainedNodes: !5518)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{null, !2339, !37}
!5517 = !DISubprogram(name: "set<u8>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3set17hb929e55d2375c181E", scope: !280, file: !5495, line: 432, type: !5515, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !287)
!5518 = !{!5519, !5520}
!5519 = !DILocalVariable(name: "self", arg: 1, scope: !5514, file: !5495, line: 432, type: !2339)
!5520 = !DILocalVariable(name: "val", arg: 2, scope: !5514, file: !5495, line: 432, type: !37)
!5521 = !DILocation(line: 432, column: 16, scope: !5514)
!5522 = !DILocation(line: 432, column: 23, scope: !5514)
!5523 = !DILocation(line: 433, column: 14, scope: !5514)
!5524 = !DILocation(line: 434, column: 6, scope: !5514)
!5525 = distinct !DISubprogram(name: "replace<u8>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$7replace17h95257c6f91a9c408E", scope: !280, file: !5495, line: 504, type: !5526, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, declaration: !5528, retainedNodes: !5529)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!37, !2339, !37}
!5528 = !DISubprogram(name: "replace<u8>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$7replace17h95257c6f91a9c408E", scope: !280, file: !5495, line: 504, type: !5526, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !287)
!5529 = !{!5530, !5531}
!5530 = !DILocalVariable(name: "self", arg: 1, scope: !5525, file: !5495, line: 504, type: !2339)
!5531 = !DILocalVariable(name: "val", arg: 2, scope: !5525, file: !5495, line: 504, type: !37)
!5532 = !DILocation(line: 504, column: 26, scope: !5525)
!5533 = !DILocation(line: 504, column: 33, scope: !5525)
!5534 = !DILocation(line: 2394, column: 22, scope: !5503, inlinedAt: !5535)
!5535 = distinct !DILocation(line: 507, column: 48, scope: !5525)
!5536 = !DILocation(line: 507, column: 9, scope: !5525)
!5537 = !DILocation(line: 508, column: 6, scope: !5525)
!5538 = distinct !DISubprogram(name: "from_mut<[u8]>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$8from_mut17hd850cd9c5ea46d5cE", scope: !5539, file: !5495, line: 636, type: !5545, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, declaration: !5552, retainedNodes: !5553)
!5539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cell<[u8]>", scope: !281, file: !5, align: 8, flags: DIFlagPublic, elements: !5540, templateParams: !287, identifier: "df2621d1a6bf177c5ce35f8ba5b00457")
!5540 = !{!5541}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5539, file: !5, baseType: !5542, align: 8, flags: DIFlagPrivate)
!5542 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<[u8]>", scope: !281, file: !5, align: 8, flags: DIFlagPublic, elements: !5543, templateParams: !287, identifier: "5c4ad8fa239cc9e25dfdcbe43fcc0a3a")
!5543 = !{!5544}
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5542, file: !5, baseType: !37, align: 8, flags: DIFlagPrivate)
!5545 = !DISubroutineType(types: !5546)
!5546 = !{!5547, !655}
!5547 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::cell::Cell<[u8]>", file: !5, size: 64, align: 32, elements: !5548, templateParams: !98, identifier: "54403cf8e1afd249ddc7baf7036e3e17")
!5548 = !{!5549, !5551}
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5547, file: !5, baseType: !5550, size: 32, align: 32)
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5539, size: 32, align: 32, dwarfAddressSpace: 0)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5547, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!5552 = !DISubprogram(name: "from_mut<[u8]>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$8from_mut17hd850cd9c5ea46d5cE", scope: !5539, file: !5495, line: 636, type: !5545, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !287)
!5553 = !{!5554}
!5554 = !DILocalVariable(name: "t", arg: 1, scope: !5538, file: !5495, line: 636, type: !655)
!5555 = !DILocation(line: 636, column: 27, scope: !5538)
!5556 = !DILocation(line: 639, column: 6, scope: !5538)
!5557 = distinct !DISubprogram(name: "as_slice_of_cells<u8>", linkageName: "_ZN4core4cell23Cell$LT$$u5b$T$u5d$$GT$17as_slice_of_cells17hb8da9335b0a80a2aE", scope: !5539, file: !5495, line: 691, type: !5558, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, declaration: !5560, retainedNodes: !5561)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{!276, !5547}
!5560 = !DISubprogram(name: "as_slice_of_cells<u8>", linkageName: "_ZN4core4cell23Cell$LT$$u5b$T$u5d$$GT$17as_slice_of_cells17hb8da9335b0a80a2aE", scope: !5539, file: !5495, line: 691, type: !5558, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !287)
!5561 = !{!5562}
!5562 = !DILocalVariable(name: "self", arg: 1, scope: !5557, file: !5495, line: 691, type: !5547)
!5563 = !DILocation(line: 691, column: 36, scope: !5557)
!5564 = !DILocation(line: 694, column: 6, scope: !5557)
!5565 = distinct !DISubprogram(name: "zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3zip17h858e5b296985fe89E", scope: !5567, file: !5566, line: 613, type: !417, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5573, retainedNodes: !5570)
!5566 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "c7c2e5a973ab44115d21857ec4b2ea0f")
!5567 = !DINamespace(name: "Iterator", scope: !5568)
!5568 = !DINamespace(name: "iterator", scope: !5569)
!5569 = !DINamespace(name: "traits", scope: !88)
!5570 = !{!5571, !5572}
!5571 = !DILocalVariable(name: "self", arg: 1, scope: !5565, file: !5566, line: 613, type: !122)
!5572 = !DILocalVariable(name: "other", arg: 2, scope: !5565, file: !5566, line: 613, type: !142)
!5573 = !{!5574, !5575}
!5574 = !DITemplateTypeParameter(name: "Self", type: !122)
!5575 = !DITemplateTypeParameter(name: "U", type: !142)
!5576 = !DILocation(line: 613, column: 15, scope: !5565)
!5577 = !DILocation(line: 613, column: 21, scope: !5565)
!5578 = !DILocation(line: 618, column: 30, scope: !5565)
!5579 = !DILocation(line: 618, column: 9, scope: !5565)
!5580 = !DILocation(line: 619, column: 6, scope: !5565)
!5581 = distinct !DISubprogram(name: "skip<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4skip17h3a74484b2de80b85E", scope: !5567, file: !5566, line: 1316, type: !5582, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5587, retainedNodes: !5584)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{!115, !118, !158}
!5584 = !{!5585, !5586}
!5585 = !DILocalVariable(name: "self", arg: 1, scope: !5581, file: !5566, line: 1316, type: !118)
!5586 = !DILocalVariable(name: "n", arg: 2, scope: !5581, file: !5566, line: 1316, type: !158)
!5587 = !{!5588}
!5588 = !DITemplateTypeParameter(name: "Self", type: !118)
!5589 = !DILocation(line: 1316, column: 13, scope: !5581)
!5590 = !DILocation(line: 1316, column: 19, scope: !5581)
!5591 = !DILocation(line: 1320, column: 9, scope: !5581)
!5592 = !DILocation(line: 1321, column: 6, scope: !5581)
!5593 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h6878644d592c1249E", scope: !118, file: !242, line: 23, type: !417, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !160, declaration: !5594, retainedNodes: !5595)
!5594 = !DISubprogram(name: "new<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h6878644d592c1249E", scope: !118, file: !242, line: 23, type: !417, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !160)
!5595 = !{!5596, !5597}
!5596 = !DILocalVariable(name: "a", arg: 1, scope: !5593, file: !242, line: 23, type: !122)
!5597 = !DILocalVariable(name: "b", arg: 2, scope: !5593, file: !242, line: 23, type: !142)
!5598 = !DILocation(line: 23, column: 32, scope: !5593)
!5599 = !DILocation(line: 23, column: 38, scope: !5593)
!5600 = !DILocation(line: 24, column: 9, scope: !5593)
!5601 = !DILocation(line: 25, column: 6, scope: !5593)
!5602 = distinct !DISubprogram(name: "super_nth<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$9super_nth17hce7bcff7877d53e3E", scope: !118, file: !242, line: 26, type: !244, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !160, declaration: !5603, retainedNodes: !5604)
!5603 = !DISubprogram(name: "super_nth<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$9super_nth17hce7bcff7877d53e3E", scope: !118, file: !242, line: 26, type: !244, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !160)
!5604 = !{!5605, !5606, !5607}
!5605 = !DILocalVariable(name: "self", arg: 1, scope: !5602, file: !242, line: 26, type: !246)
!5606 = !DILocalVariable(name: "n", arg: 2, scope: !5602, file: !242, line: 26, type: !158)
!5607 = !DILocalVariable(name: "x", scope: !5608, file: !242, line: 27, type: !101, align: 32)
!5608 = distinct !DILexicalBlock(scope: !5602, file: !242, line: 27, column: 50)
!5609 = !DILocation(line: 26, column: 18, scope: !5602)
!5610 = !DILocation(line: 26, column: 29, scope: !5602)
!5611 = !DILocation(line: 27, column: 9, scope: !5602)
!5612 = !DILocation(line: 27, column: 29, scope: !5608)
!5613 = !DILocation(line: 27, column: 19, scope: !5608)
!5614 = !DILocation(line: 27, column: 24, scope: !5608)
!5615 = !DILocation(line: 28, column: 16, scope: !5608)
!5616 = !DILocation(line: 33, column: 9, scope: !5602)
!5617 = !DILocation(line: 34, column: 6, scope: !5602)
!5618 = !DILocation(line: 29, column: 24, scope: !5608)
!5619 = !DILocation(line: 31, column: 13, scope: !5608)
!5620 = !DILocation(line: 32, column: 9, scope: !5602)
!5621 = !DILocation(line: 26, column: 5, scope: !5602)
!5622 = distinct !DISubprogram(name: "size<core::slice::iter::Iter<u16>>", linkageName: "_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hde5f6f54d650d72dE", scope: !5623, file: !242, line: 587, type: !5624, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5629, retainedNodes: !5627)
!5623 = !DINamespace(name: "TrustedRandomAccessNoCoerce", scope: !119)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!158, !5626}
!5626 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u16>", baseType: !122, size: 32, align: 32, dwarfAddressSpace: 0)
!5627 = !{!5628}
!5628 = !DILocalVariable(name: "self", arg: 1, scope: !5622, file: !242, line: 587, type: !5626)
!5629 = !{!5574}
!5630 = !DILocation(line: 587, column: 13, scope: !5622)
!5631 = !DILocation(line: 591, column: 14, scope: !5622)
!5632 = !DILocation(line: 591, column: 9, scope: !5622)
!5633 = !DILocation(line: 592, column: 6, scope: !5622)
!5634 = distinct !DISubprogram(name: "new<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>>", linkageName: "_ZN4core4iter8adapters4skip13Skip$LT$I$GT$3new17he9278e8620fa244cE", scope: !115, file: !84, line: 27, type: !5582, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !164, declaration: !5635, retainedNodes: !5636)
!5635 = !DISubprogram(name: "new<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>>", linkageName: "_ZN4core4iter8adapters4skip13Skip$LT$I$GT$3new17he9278e8620fa244cE", scope: !115, file: !84, line: 27, type: !5582, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !164)
!5636 = !{!5637, !5638}
!5637 = !DILocalVariable(name: "iter", arg: 1, scope: !5634, file: !84, line: 27, type: !118)
!5638 = !DILocalVariable(name: "n", arg: 2, scope: !5634, file: !84, line: 27, type: !158)
!5639 = !DILocation(line: 27, column: 32, scope: !5634)
!5640 = !DILocation(line: 27, column: 41, scope: !5634)
!5641 = !DILocation(line: 28, column: 9, scope: !5634)
!5642 = !DILocation(line: 29, column: 6, scope: !5634)
!5643 = distinct !DISubprogram(name: "try_from<u8, 2>", linkageName: "_ZN4core5array102_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$RF$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17h2c3b80aca23f7e9bE", scope: !5645, file: !5644, line: 305, type: !5647, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !5669)
!5644 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/array/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "abc86d457ded4ba8bb63b4dca60f32bf")
!5645 = !DINamespace(name: "{impl#9}", scope: !5646)
!5646 = !DINamespace(name: "array", scope: !76)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{!5649, !485}
!5649 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<&[u8; 2], core::array::TryFromSliceError>", scope: !511, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !5650, templateParams: !98, identifier: "3fd2577b6bab36e7c4dd34c9d0adee89")
!5650 = !{!5651}
!5651 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5649, file: !5, size: 32, align: 32, elements: !5652, templateParams: !98, identifier: "ab02b2215c4ea5f052bc10ef22230d3e", discriminator: !5668)
!5652 = !{!5653, !5664}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5651, file: !5, baseType: !5654, size: 32, align: 32)
!5654 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5649, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !5655, templateParams: !5658, identifier: "926c7bb4708399785b9410ec7908b765")
!5655 = !{!5656}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5654, file: !5, baseType: !5657, size: 32, align: 32, flags: DIFlagPublic)
!5657 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 2]", baseType: !2441, size: 32, align: 32, dwarfAddressSpace: 0)
!5658 = !{!5659, !5660}
!5659 = !DITemplateTypeParameter(name: "T", type: !5657)
!5660 = !DITemplateTypeParameter(name: "E", type: !5661)
!5661 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryFromSliceError", scope: !5646, file: !5, align: 8, flags: DIFlagPublic, elements: !5662, templateParams: !98, identifier: "2db0438aaa7329ea70ceb1223afaed14")
!5662 = !{!5663}
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5661, file: !5, baseType: !5242, align: 8, flags: DIFlagPrivate)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5651, file: !5, baseType: !5665, size: 32, align: 32, extraData: i32 0)
!5665 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5649, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !5666, templateParams: !5658, identifier: "bb8134f0328518ca19764ab01f437f03")
!5666 = !{!5667}
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5665, file: !5, baseType: !5661, align: 8, flags: DIFlagPublic)
!5668 = !DIDerivedType(tag: DW_TAG_member, scope: !5649, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!5669 = !{!5670}
!5670 = !DILocalVariable(name: "slice", arg: 1, scope: !5643, file: !5644, line: 305, type: !485)
!5671 = !DILocation(line: 305, column: 17, scope: !5643)
!5672 = !DILocation(line: 306, column: 15, scope: !5643)
!5673 = !DILocation(line: 306, column: 26, scope: !5643)
!5674 = !DILocation(line: 307, column: 6, scope: !5643)
!5675 = distinct !DISubprogram(name: "default<u8>", linkageName: "_ZN4core5array75_$LT$impl$u20$core..default..Default$u20$for$u20$$u5b$T$u3b$$u20$2$u5d$$GT$7default17h4482b52665d997b4E", scope: !5676, file: !5644, line: 485, type: !5677, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287)
!5676 = !DINamespace(name: "{impl#59}", scope: !5646)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{!2441}
!5679 = !DILocation(line: 486, column: 17, scope: !5675)
!5680 = !DILocation(line: 487, column: 14, scope: !5675)
!5681 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>, 512>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17h6b15c0ee008fbbdbE", scope: !5682, file: !5644, line: 387, type: !5683, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !1273, retainedNodes: !5686)
!5682 = !DINamespace(name: "{impl#15}", scope: !5646)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!485, !5685, !1268, !354}
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 512]", baseType: !786, size: 32, align: 32, dwarfAddressSpace: 0)
!5686 = !{!5687, !5688}
!5687 = !DILocalVariable(name: "self", arg: 1, scope: !5681, file: !5644, line: 387, type: !5685)
!5688 = !DILocalVariable(name: "index", arg: 2, scope: !5681, file: !5644, line: 387, type: !1268)
!5689 = !DILocation(line: 387, column: 14, scope: !5681)
!5690 = !DILocation(line: 387, column: 21, scope: !5681)
!5691 = !DILocation(line: 17, column: 14, scope: !1265, inlinedAt: !5692)
!5692 = distinct !DILocation(line: 388, column: 9, scope: !5681)
!5693 = !DILocation(line: 17, column: 21, scope: !1265, inlinedAt: !5692)
!5694 = !DILocation(line: 523, column: 14, scope: !1279, inlinedAt: !5695)
!5695 = distinct !DILocation(line: 18, column: 15, scope: !1265, inlinedAt: !5692)
!5696 = !DILocation(line: 523, column: 20, scope: !1279, inlinedAt: !5695)
!5697 = !DILocation(line: 430, column: 14, scope: !1289, inlinedAt: !5698)
!5698 = distinct !DILocation(line: 524, column: 23, scope: !1279, inlinedAt: !5695)
!5699 = !DILocation(line: 430, column: 20, scope: !1289, inlinedAt: !5698)
!5700 = !DILocation(line: 432, column: 32, scope: !1289, inlinedAt: !5698)
!5701 = !DILocation(line: 432, column: 16, scope: !1289, inlinedAt: !5698)
!5702 = !DILocation(line: 432, column: 21, scope: !1289, inlinedAt: !5698)
!5703 = !DILocation(line: 433, column: 16, scope: !1289, inlinedAt: !5698)
!5704 = !DILocation(line: 438, column: 13, scope: !1289, inlinedAt: !5698)
!5705 = !DILocation(line: 82, column: 5, scope: !1304, inlinedAt: !5706)
!5706 = distinct !DILocation(line: 436, column: 24, scope: !1289, inlinedAt: !5698)
!5707 = !DILocation(line: 83, column: 5, scope: !1304, inlinedAt: !5706)
!5708 = !DILocation(line: 84, column: 5, scope: !1304, inlinedAt: !5706)
!5709 = !DILocation(line: 86, column: 15, scope: !1304, inlinedAt: !5706)
!5710 = !DILocation(line: 86, column: 9, scope: !1315, inlinedAt: !5706)
!5711 = !DILocation(line: 88, column: 24, scope: !1315, inlinedAt: !5706)
!5712 = !DILocation(line: 88, column: 9, scope: !1318, inlinedAt: !5706)
!5713 = !DILocation(line: 90, column: 2, scope: !1304, inlinedAt: !5706)
!5714 = !DILocation(line: 19, column: 6, scope: !1265, inlinedAt: !5692)
!5715 = !DILocation(line: 388, column: 9, scope: !5681)
!5716 = !DILocation(line: 389, column: 6, scope: !5681)
!5717 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>, 512>", linkageName: "_ZN4core5array85_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$5index17hf8b0783de2c0beffE", scope: !5682, file: !5644, line: 387, type: !5718, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !707, retainedNodes: !5720)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{!485, !5685, !295, !354}
!5720 = !{!5721, !5722}
!5721 = !DILocalVariable(name: "self", arg: 1, scope: !5717, file: !5644, line: 387, type: !5685)
!5722 = !DILocalVariable(name: "index", arg: 2, scope: !5717, file: !5644, line: 387, type: !295)
!5723 = !DILocation(line: 387, column: 14, scope: !5717)
!5724 = !DILocation(line: 387, column: 21, scope: !5717)
!5725 = !DILocation(line: 17, column: 14, scope: !1830, inlinedAt: !5726)
!5726 = distinct !DILocation(line: 388, column: 9, scope: !5717)
!5727 = !DILocation(line: 17, column: 21, scope: !1830, inlinedAt: !5726)
!5728 = !DILocation(line: 430, column: 14, scope: !1289, inlinedAt: !5729)
!5729 = distinct !DILocation(line: 18, column: 15, scope: !1830, inlinedAt: !5726)
!5730 = !DILocation(line: 430, column: 20, scope: !1289, inlinedAt: !5729)
!5731 = !DILocation(line: 432, column: 32, scope: !1289, inlinedAt: !5729)
!5732 = !DILocation(line: 432, column: 16, scope: !1289, inlinedAt: !5729)
!5733 = !DILocation(line: 432, column: 21, scope: !1289, inlinedAt: !5729)
!5734 = !DILocation(line: 433, column: 16, scope: !1289, inlinedAt: !5729)
!5735 = !DILocation(line: 438, column: 13, scope: !1289, inlinedAt: !5729)
!5736 = !DILocation(line: 82, column: 5, scope: !1304, inlinedAt: !5737)
!5737 = distinct !DILocation(line: 436, column: 24, scope: !1289, inlinedAt: !5729)
!5738 = !DILocation(line: 83, column: 5, scope: !1304, inlinedAt: !5737)
!5739 = !DILocation(line: 84, column: 5, scope: !1304, inlinedAt: !5737)
!5740 = !DILocation(line: 86, column: 15, scope: !1304, inlinedAt: !5737)
!5741 = !DILocation(line: 86, column: 9, scope: !1315, inlinedAt: !5737)
!5742 = !DILocation(line: 88, column: 24, scope: !1315, inlinedAt: !5737)
!5743 = !DILocation(line: 88, column: 9, scope: !1318, inlinedAt: !5737)
!5744 = !DILocation(line: 90, column: 2, scope: !1304, inlinedAt: !5737)
!5745 = !DILocation(line: 19, column: 6, scope: !1830, inlinedAt: !5726)
!5746 = !DILocation(line: 388, column: 9, scope: !5717)
!5747 = !DILocation(line: 389, column: 6, scope: !5717)
!5748 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::Range<usize>, 512>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h1d3e6adad372abfdE", scope: !5749, file: !5644, line: 399, type: !5750, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !707, retainedNodes: !5752)
!5749 = !DINamespace(name: "{impl#16}", scope: !5646)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!655, !1915, !295, !354}
!5752 = !{!5753, !5754}
!5753 = !DILocalVariable(name: "self", arg: 1, scope: !5748, file: !5644, line: 399, type: !1915)
!5754 = !DILocalVariable(name: "index", arg: 2, scope: !5748, file: !5644, line: 399, type: !295)
!5755 = !DILocation(line: 399, column: 18, scope: !5748)
!5756 = !DILocation(line: 399, column: 29, scope: !5748)
!5757 = !DILocation(line: 29, column: 18, scope: !701, inlinedAt: !5758)
!5758 = distinct !DILocation(line: 400, column: 9, scope: !5748)
!5759 = !DILocation(line: 29, column: 29, scope: !701, inlinedAt: !5758)
!5760 = !DILocation(line: 30, column: 15, scope: !701, inlinedAt: !5758)
!5761 = !DILocation(line: 400, column: 9, scope: !5748)
!5762 = !DILocation(line: 401, column: 6, scope: !5748)
!5763 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::Range<usize>, 32>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h2c932d847dda7250E", scope: !5749, file: !5644, line: 399, type: !5764, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !707, retainedNodes: !5767)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!655, !5766, !295, !354}
!5766 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 32]", baseType: !774, size: 32, align: 32, dwarfAddressSpace: 0)
!5767 = !{!5768, !5769}
!5768 = !DILocalVariable(name: "self", arg: 1, scope: !5763, file: !5644, line: 399, type: !5766)
!5769 = !DILocalVariable(name: "index", arg: 2, scope: !5763, file: !5644, line: 399, type: !295)
!5770 = !DILocation(line: 399, column: 18, scope: !5763)
!5771 = !DILocation(line: 399, column: 29, scope: !5763)
!5772 = !DILocation(line: 29, column: 18, scope: !701, inlinedAt: !5773)
!5773 = distinct !DILocation(line: 400, column: 9, scope: !5763)
!5774 = !DILocation(line: 29, column: 29, scope: !701, inlinedAt: !5773)
!5775 = !DILocation(line: 30, column: 15, scope: !701, inlinedAt: !5773)
!5776 = !DILocation(line: 400, column: 9, scope: !5763)
!5777 = !DILocation(line: 401, column: 6, scope: !5763)
!5778 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFull, 288>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h5d132efd8fd7d668E", scope: !5749, file: !5644, line: 399, type: !5779, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5786, retainedNodes: !5783)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!655, !5781, !5782, !354}
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u8; 288]", baseType: !770, size: 32, align: 32, dwarfAddressSpace: 0)
!5782 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !194, file: !5, align: 8, flags: DIFlagPublic, elements: !98, identifier: "13322fd7a2e7ed91daa3f63083135bc7")
!5783 = !{!5784, !5785}
!5784 = !DILocalVariable(name: "self", arg: 1, scope: !5778, file: !5644, line: 399, type: !5781)
!5785 = !DILocalVariable(name: "index", arg: 2, scope: !5778, file: !5644, line: 399, type: !5782)
!5786 = !{!288, !5787}
!5787 = !DITemplateTypeParameter(name: "I", type: !5782)
!5788 = !DILocation(line: 399, column: 18, scope: !5778)
!5789 = !DILocation(line: 399, column: 29, scope: !5778)
!5790 = !DILocalVariable(name: "self", arg: 1, scope: !5791, file: !263, line: 29, type: !655)
!5791 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h723df9b8b2d1a966E", scope: !702, file: !263, line: 29, type: !5792, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5786, retainedNodes: !5794)
!5792 = !DISubroutineType(types: !5793)
!5793 = !{!655, !655, !5782, !354}
!5794 = !{!5790, !5795}
!5795 = !DILocalVariable(name: "index", arg: 2, scope: !5791, file: !263, line: 29, type: !5782)
!5796 = !DILocation(line: 29, column: 18, scope: !5791, inlinedAt: !5797)
!5797 = distinct !DILocation(line: 400, column: 9, scope: !5778)
!5798 = !DILocation(line: 29, column: 29, scope: !5791, inlinedAt: !5797)
!5799 = !DILocation(line: 30, column: 15, scope: !5791, inlinedAt: !5797)
!5800 = !DILocation(line: 400, column: 9, scope: !5778)
!5801 = !DILocation(line: 401, column: 6, scope: !5778)
!5802 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::Range<usize>, 288>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h8e8d37a24ff0bf64E", scope: !5749, file: !5644, line: 399, type: !5803, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !707, retainedNodes: !5805)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{!655, !5781, !295, !354}
!5805 = !{!5806, !5807}
!5806 = !DILocalVariable(name: "self", arg: 1, scope: !5802, file: !5644, line: 399, type: !5781)
!5807 = !DILocalVariable(name: "index", arg: 2, scope: !5802, file: !5644, line: 399, type: !295)
!5808 = !DILocation(line: 399, column: 18, scope: !5802)
!5809 = !DILocation(line: 399, column: 29, scope: !5802)
!5810 = !DILocation(line: 29, column: 18, scope: !701, inlinedAt: !5811)
!5811 = distinct !DILocation(line: 400, column: 9, scope: !5802)
!5812 = !DILocation(line: 29, column: 29, scope: !701, inlinedAt: !5811)
!5813 = !DILocation(line: 30, column: 15, scope: !701, inlinedAt: !5811)
!5814 = !DILocation(line: 400, column: 9, scope: !5802)
!5815 = !DILocation(line: 401, column: 6, scope: !5802)
!5816 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>, 32>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17h99e93e3445f2b238E", scope: !5749, file: !5644, line: 399, type: !5817, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !1273, retainedNodes: !5819)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!655, !5766, !1268, !354}
!5819 = !{!5820, !5821}
!5820 = !DILocalVariable(name: "self", arg: 1, scope: !5816, file: !5644, line: 399, type: !5766)
!5821 = !DILocalVariable(name: "index", arg: 2, scope: !5816, file: !5644, line: 399, type: !1268)
!5822 = !DILocation(line: 399, column: 18, scope: !5816)
!5823 = !DILocation(line: 399, column: 29, scope: !5816)
!5824 = !DILocalVariable(name: "self", arg: 1, scope: !5825, file: !263, line: 29, type: !655)
!5825 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h693d5c030e687c9bE", scope: !702, file: !263, line: 29, type: !5826, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !1273, retainedNodes: !5828)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{!655, !655, !1268, !354}
!5828 = !{!5824, !5829}
!5829 = !DILocalVariable(name: "index", arg: 2, scope: !5825, file: !263, line: 29, type: !1268)
!5830 = !DILocation(line: 29, column: 18, scope: !5825, inlinedAt: !5831)
!5831 = distinct !DILocation(line: 400, column: 9, scope: !5816)
!5832 = !DILocation(line: 29, column: 29, scope: !5825, inlinedAt: !5831)
!5833 = !DILocation(line: 30, column: 15, scope: !5825, inlinedAt: !5831)
!5834 = !DILocation(line: 400, column: 9, scope: !5816)
!5835 = !DILocation(line: 401, column: 6, scope: !5816)
!5836 = distinct !DISubprogram(name: "index_mut<u32, core::ops::range::RangeFrom<usize>, 17>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17hd5947eac7d05e6efE", scope: !5749, file: !5644, line: 399, type: !5837, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5843, retainedNodes: !5840)
!5837 = !DISubroutineType(types: !5838)
!5838 = !{!346, !5839, !351, !354}
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut [u32; 17]", baseType: !3688, size: 32, align: 32, dwarfAddressSpace: 0)
!5840 = !{!5841, !5842}
!5841 = !DILocalVariable(name: "self", arg: 1, scope: !5836, file: !5644, line: 399, type: !5839)
!5842 = !DILocalVariable(name: "index", arg: 2, scope: !5836, file: !5644, line: 399, type: !351)
!5843 = !{!150, !642}
!5844 = !DILocation(line: 399, column: 18, scope: !5836)
!5845 = !DILocation(line: 399, column: 29, scope: !5836)
!5846 = !DILocalVariable(name: "self", arg: 1, scope: !5847, file: !263, line: 29, type: !346)
!5847 = distinct !DISubprogram(name: "index_mut<u32, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h5d8e02fcb0a7ad93E", scope: !702, file: !263, line: 29, type: !5848, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5843, retainedNodes: !5850)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{!346, !346, !351, !354}
!5850 = !{!5846, !5851}
!5851 = !DILocalVariable(name: "index", arg: 2, scope: !5847, file: !263, line: 29, type: !351)
!5852 = !DILocation(line: 29, column: 18, scope: !5847, inlinedAt: !5853)
!5853 = distinct !DILocation(line: 400, column: 9, scope: !5836)
!5854 = !DILocation(line: 29, column: 29, scope: !5847, inlinedAt: !5853)
!5855 = !DILocation(line: 30, column: 15, scope: !5847, inlinedAt: !5853)
!5856 = !DILocation(line: 400, column: 9, scope: !5836)
!5857 = !DILocation(line: 401, column: 6, scope: !5836)
!5858 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::RangeTo<usize>, 288>", linkageName: "_ZN4core5array88_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$9index_mut17he6a8904f18621670E", scope: !5749, file: !5644, line: 399, type: !5859, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !1273, retainedNodes: !5861)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{!655, !5781, !1268, !354}
!5861 = !{!5862, !5863}
!5862 = !DILocalVariable(name: "self", arg: 1, scope: !5858, file: !5644, line: 399, type: !5781)
!5863 = !DILocalVariable(name: "index", arg: 2, scope: !5858, file: !5644, line: 399, type: !1268)
!5864 = !DILocation(line: 399, column: 18, scope: !5858)
!5865 = !DILocation(line: 399, column: 29, scope: !5858)
!5866 = !DILocation(line: 29, column: 18, scope: !5825, inlinedAt: !5867)
!5867 = distinct !DILocation(line: 400, column: 9, scope: !5858)
!5868 = !DILocation(line: 29, column: 29, scope: !5825, inlinedAt: !5867)
!5869 = !DILocation(line: 30, column: 15, scope: !5825, inlinedAt: !5867)
!5870 = !DILocation(line: 400, column: 9, scope: !5858)
!5871 = !DILocation(line: 401, column: 6, scope: !5858)
!5872 = distinct !DISubprogram(name: "try_from<u8, 2>", linkageName: "_ZN4core5array98_$LT$impl$u20$core..convert..TryFrom$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$$u5b$T$u3b$$u20$N$u5d$$GT$8try_from17hf3eb7cd57859e752E", scope: !5873, file: !5644, line: 256, type: !5874, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !5891)
!5873 = !DINamespace(name: "{impl#7}", scope: !5646)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{!5876, !485}
!5876 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<[u8; 2], core::array::TryFromSliceError>", scope: !511, file: !5, size: 24, align: 8, flags: DIFlagPublic, elements: !5877, templateParams: !98, identifier: "4783b4191c4cf03482b954ffc834c4bc")
!5877 = !{!5878}
!5878 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5876, file: !5, size: 24, align: 8, elements: !5879, templateParams: !98, identifier: "86497f108af30826b3d16db3dba8129e", discriminator: !5890)
!5879 = !{!5880, !5886}
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5878, file: !5, baseType: !5881, size: 24, align: 8, extraData: i8 0)
!5881 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5876, file: !5, size: 24, align: 8, flags: DIFlagPublic, elements: !5882, templateParams: !5884, identifier: "4b8dbdd7c7eb85c415f2ddd25f23b142")
!5882 = !{!5883}
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5881, file: !5, baseType: !2441, size: 16, align: 8, offset: 8, flags: DIFlagPublic)
!5884 = !{!5885, !5660}
!5885 = !DITemplateTypeParameter(name: "T", type: !2441)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5878, file: !5, baseType: !5887, size: 24, align: 8, extraData: i8 1)
!5887 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5876, file: !5, size: 24, align: 8, flags: DIFlagPublic, elements: !5888, templateParams: !5884, identifier: "e4e5e552f90051b26efdb910cb9cedcb")
!5888 = !{!5889}
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5887, file: !5, baseType: !5661, align: 8, offset: 8, flags: DIFlagPublic)
!5890 = !DIDerivedType(tag: DW_TAG_member, scope: !5876, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagArtificial)
!5891 = !{!5892}
!5892 = !DILocalVariable(name: "slice", arg: 1, scope: !5872, file: !5644, line: 256, type: !485)
!5893 = !DILocation(line: 256, column: 17, scope: !5872)
!5894 = !DILocation(line: 257, column: 9, scope: !5872)
!5895 = !DILocation(line: 257, column: 34, scope: !5872)
!5896 = !DILocation(line: 258, column: 6, scope: !5872)
!5897 = distinct !DISubprogram(name: "copy_within<u8, core::ops::range::RangeInclusive<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11copy_within17h36c24b2d6f1e9e9eE", scope: !5899, file: !5898, line: 3911, type: !5900, scopeLine: 3911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5917, retainedNodes: !5902)
!5898 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "63aedd801a9e6eae1eca1edc5c2217aa")
!5899 = !DINamespace(name: "{impl#0}", scope: !124)
!5900 = !DISubroutineType(types: !5901)
!5901 = !{null, !655, !217, !158, !354}
!5902 = !{!5903, !5904, !5905, !5906, !5908, !5909, !5911, !5913, !5915}
!5903 = !DILocalVariable(name: "self", arg: 1, scope: !5897, file: !5898, line: 3911, type: !655)
!5904 = !DILocalVariable(name: "src", arg: 2, scope: !5897, file: !5898, line: 3911, type: !217)
!5905 = !DILocalVariable(name: "dest", arg: 3, scope: !5897, file: !5898, line: 3911, type: !158)
!5906 = !DILocalVariable(name: "src_start", scope: !5907, file: !5898, line: 3915, type: !158, align: 32)
!5907 = distinct !DILexicalBlock(scope: !5897, file: !5898, line: 3915, column: 9)
!5908 = !DILocalVariable(name: "src_end", scope: !5907, file: !5898, line: 3915, type: !158, align: 32)
!5909 = !DILocalVariable(name: "count", scope: !5910, file: !5898, line: 3916, type: !158, align: 32)
!5910 = distinct !DILexicalBlock(scope: !5907, file: !5898, line: 3916, column: 9)
!5911 = !DILocalVariable(name: "ptr", scope: !5912, file: !5898, line: 3922, type: !5506, align: 32)
!5912 = distinct !DILexicalBlock(scope: !5910, file: !5898, line: 3922, column: 13)
!5913 = !DILocalVariable(name: "src_ptr", scope: !5914, file: !5898, line: 3923, type: !5506, align: 32)
!5914 = distinct !DILexicalBlock(scope: !5912, file: !5898, line: 3923, column: 13)
!5915 = !DILocalVariable(name: "dest_ptr", scope: !5916, file: !5898, line: 3924, type: !5506, align: 32)
!5916 = distinct !DILexicalBlock(scope: !5914, file: !5898, line: 3924, column: 13)
!5917 = !{!288, !5918}
!5918 = !DITemplateTypeParameter(name: "R", type: !217)
!5919 = !DILocation(line: 3911, column: 47, scope: !5897)
!5920 = !DILocation(line: 3911, column: 58, scope: !5897)
!5921 = !DILocation(line: 3911, column: 66, scope: !5897)
!5922 = !DILocation(line: 3915, column: 56, scope: !5897)
!5923 = !DILocation(line: 3915, column: 28, scope: !5897)
!5924 = !DILocation(line: 3915, column: 28, scope: !5907)
!5925 = !DILocation(line: 3915, column: 44, scope: !5897)
!5926 = !DILocation(line: 3915, column: 44, scope: !5907)
!5927 = !DILocation(line: 3916, column: 21, scope: !5907)
!5928 = !DILocation(line: 3916, column: 13, scope: !5910)
!5929 = !DILocation(line: 3917, column: 25, scope: !5910)
!5930 = !DILocation(line: 3917, column: 17, scope: !5910)
!5931 = !DILocation(line: 3917, column: 9, scope: !5910)
!5932 = !DILocalVariable(name: "self", arg: 1, scope: !5933, file: !5898, line: 755, type: !655)
!5933 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h7f89f8998424a30cE", scope: !5899, file: !5898, line: 755, type: !5934, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !5936)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{!5506, !655}
!5936 = !{!5932}
!5937 = !DILocation(line: 755, column: 29, scope: !5933, inlinedAt: !5938)
!5938 = distinct !DILocation(line: 3922, column: 28, scope: !5910)
!5939 = !DILocation(line: 3922, column: 28, scope: !5910)
!5940 = !DILocation(line: 3922, column: 17, scope: !5912)
!5941 = !DILocalVariable(name: "self", arg: 1, scope: !5942, file: !5262, line: 927, type: !5506)
!5942 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb2bd8b7f4e03ac1eE", scope: !5263, file: !5262, line: 927, type: !5943, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !5945)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{!5506, !5506, !158, !354}
!5945 = !{!5941, !5946}
!5946 = !DILocalVariable(name: "count", arg: 2, scope: !5942, file: !5262, line: 927, type: !158)
!5947 = !DILocation(line: 927, column: 29, scope: !5942, inlinedAt: !5948)
!5948 = distinct !DILocation(line: 3923, column: 31, scope: !5912)
!5949 = !DILocation(line: 927, column: 35, scope: !5942, inlinedAt: !5948)
!5950 = !DILocation(line: 77, column: 35, scope: !5951, inlinedAt: !5948)
!5951 = !DILexicalBlockFile(scope: !5942, file: !5237, discriminator: 0)
!5952 = !DILocation(line: 78, column: 17, scope: !5951, inlinedAt: !5948)
!5953 = !DILocation(line: 961, column: 18, scope: !5942, inlinedAt: !5948)
!5954 = !DILocation(line: 3923, column: 31, scope: !5912)
!5955 = !DILocation(line: 3923, column: 17, scope: !5914)
!5956 = !DILocation(line: 927, column: 29, scope: !5942, inlinedAt: !5957)
!5957 = distinct !DILocation(line: 3924, column: 32, scope: !5914)
!5958 = !DILocation(line: 927, column: 35, scope: !5942, inlinedAt: !5957)
!5959 = !DILocation(line: 77, column: 35, scope: !5951, inlinedAt: !5957)
!5960 = !DILocation(line: 78, column: 17, scope: !5951, inlinedAt: !5957)
!5961 = !DILocation(line: 961, column: 18, scope: !5942, inlinedAt: !5957)
!5962 = !DILocation(line: 3924, column: 32, scope: !5914)
!5963 = !DILocation(line: 3924, column: 17, scope: !5916)
!5964 = !DILocalVariable(name: "src", arg: 1, scope: !5965, file: !5255, line: 623, type: !1316)
!5965 = distinct !DISubprogram(name: "copy<u8>", linkageName: "_ZN4core3ptr4copy17h2533b510f468f96dE", scope: !129, file: !5255, line: 623, type: !5966, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !5968)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{null, !1316, !5506, !158}
!5968 = !{!5964, !5969, !5970}
!5969 = !DILocalVariable(name: "dst", arg: 2, scope: !5965, file: !5255, line: 623, type: !5506)
!5970 = !DILocalVariable(name: "count", arg: 3, scope: !5965, file: !5255, line: 623, type: !158)
!5971 = !DILocation(line: 623, column: 29, scope: !5965, inlinedAt: !5972)
!5972 = distinct !DILocation(line: 3925, column: 13, scope: !5916)
!5973 = !DILocation(line: 623, column: 44, scope: !5965, inlinedAt: !5972)
!5974 = !DILocation(line: 623, column: 57, scope: !5965, inlinedAt: !5972)
!5975 = !DILocation(line: 77, column: 35, scope: !5976, inlinedAt: !5972)
!5976 = !DILexicalBlockFile(scope: !5965, file: !5237, discriminator: 0)
!5977 = !DILocation(line: 633, column: 48, scope: !5965, inlinedAt: !5972)
!5978 = !DILocation(line: 78, column: 17, scope: !5976, inlinedAt: !5972)
!5979 = !DILocation(line: 638, column: 9, scope: !5965, inlinedAt: !5972)
!5980 = !DILocation(line: 3927, column: 6, scope: !5897)
!5981 = distinct !DISubprogram(name: "get<core::cell::Cell<u8>, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h2be727552b9c5ca4E", scope: !5899, file: !5898, line: 570, type: !5982, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5987, retainedNodes: !5984)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!268, !276, !295}
!5984 = !{!5985, !5986}
!5985 = !DILocalVariable(name: "self", arg: 1, scope: !5981, file: !5898, line: 570, type: !276)
!5986 = !DILocalVariable(name: "index", arg: 2, scope: !5981, file: !5898, line: 570, type: !295)
!5987 = !{!304, !708}
!5988 = !DILocation(line: 570, column: 25, scope: !5981)
!5989 = !DILocation(line: 570, column: 32, scope: !5981)
!5990 = !DILocation(line: 574, column: 15, scope: !5981)
!5991 = !DILocation(line: 575, column: 6, scope: !5981)
!5992 = distinct !DISubprogram(name: "get<i16, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hb9a53d14c5232e3dE", scope: !5899, file: !5898, line: 570, type: !5993, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6016, retainedNodes: !6013)
!5993 = !DISubroutineType(types: !5994)
!5994 = !{!5995, !6009, !158}
!5995 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&i16>", scope: !92, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !5996, templateParams: !98, identifier: "8de2a7fece3462397d9eeb7e151ec0d8")
!5996 = !{!5997}
!5997 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5995, file: !5, size: 32, align: 32, elements: !5998, templateParams: !98, identifier: "cca98532ec63216bcf3e34aa2a5f23f", discriminator: !6008)
!5998 = !{!5999, !6004}
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !5997, file: !5, baseType: !6000, size: 32, align: 32, extraData: i32 0)
!6000 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !5995, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !6001, identifier: "7ae2d00eab7473eb6f328ea1d810258a")
!6001 = !{!6002}
!6002 = !DITemplateTypeParameter(name: "T", type: !6003)
!6003 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i16", baseType: !762, size: 32, align: 32, dwarfAddressSpace: 0)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !5997, file: !5, baseType: !6005, size: 32, align: 32)
!6005 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !5995, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6006, templateParams: !6001, identifier: "bd2d0fe473e03ba235367fd927188fb7")
!6006 = !{!6007}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6005, file: !5, baseType: !6003, size: 32, align: 32, flags: DIFlagPublic)
!6008 = !DIDerivedType(tag: DW_TAG_member, scope: !5995, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!6009 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[i16]", file: !5, size: 64, align: 32, elements: !6010, templateParams: !98, identifier: "5be62e36058f9e4992bd0718a340f")
!6010 = !{!6011, !6012}
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6009, file: !5, baseType: !5400, size: 32, align: 32)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6009, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!6013 = !{!6014, !6015}
!6014 = !DILocalVariable(name: "self", arg: 1, scope: !5992, file: !5898, line: 570, type: !6009)
!6015 = !DILocalVariable(name: "index", arg: 2, scope: !5992, file: !5898, line: 570, type: !158)
!6016 = !{!5018, !6017}
!6017 = !DITemplateTypeParameter(name: "I", type: !158)
!6018 = !DILocation(line: 570, column: 25, scope: !5992)
!6019 = !DILocation(line: 570, column: 32, scope: !5992)
!6020 = !DILocation(line: 574, column: 15, scope: !5992)
!6021 = !DILocation(line: 575, column: 6, scope: !5992)
!6022 = distinct !DISubprogram(name: "get<core::cell::Cell<u8>, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17hdca6b847bba43042E", scope: !5899, file: !5898, line: 570, type: !6023, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6041, retainedNodes: !6038)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!6025, !276, !158}
!6025 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&core::cell::Cell<u8>>", scope: !92, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6026, templateParams: !98, identifier: "c62a7018a1b057837dca5f8f130c4c5")
!6026 = !{!6027}
!6027 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6025, file: !5, size: 32, align: 32, elements: !6028, templateParams: !98, identifier: "762da2efcd86a607b6509cd7679773f2", discriminator: !6037)
!6028 = !{!6029, !6033}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6027, file: !5, baseType: !6030, size: 32, align: 32, extraData: i32 0)
!6030 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6025, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !6031, identifier: "93ef735f0e36a3a7c5cb32bab0a57db9")
!6031 = !{!6032}
!6032 = !DITemplateTypeParameter(name: "T", type: !2339)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6027, file: !5, baseType: !6034, size: 32, align: 32)
!6034 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6025, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6035, templateParams: !6031, identifier: "357555ab01ff42448178e90803e822c6")
!6035 = !{!6036}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6034, file: !5, baseType: !2339, size: 32, align: 32, flags: DIFlagPublic)
!6037 = !DIDerivedType(tag: DW_TAG_member, scope: !6025, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!6038 = !{!6039, !6040}
!6039 = !DILocalVariable(name: "self", arg: 1, scope: !6022, file: !5898, line: 570, type: !276)
!6040 = !DILocalVariable(name: "index", arg: 2, scope: !6022, file: !5898, line: 570, type: !158)
!6041 = !{!304, !6017}
!6042 = !DILocation(line: 570, column: 25, scope: !6022)
!6043 = !DILocation(line: 570, column: 32, scope: !6022)
!6044 = !DILocation(line: 574, column: 15, scope: !6022)
!6045 = !DILocation(line: 575, column: 6, scope: !6022)
!6046 = distinct !DISubprogram(name: "fill<i16>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4fill17hc32ffbeed66354ebE", scope: !5899, file: !5898, line: 3702, type: !6047, scopeLine: 3702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !6049)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{null, !5432, !762}
!6049 = !{!6050, !6051}
!6050 = !DILocalVariable(name: "self", arg: 1, scope: !6046, file: !5898, line: 3702, type: !5432)
!6051 = !DILocalVariable(name: "value", arg: 2, scope: !6046, file: !5898, line: 3702, type: !762)
!6052 = !DILocation(line: 3702, column: 17, scope: !6046)
!6053 = !DILocation(line: 3702, column: 28, scope: !6046)
!6054 = !DILocation(line: 3706, column: 9, scope: !6046)
!6055 = !DILocation(line: 3707, column: 6, scope: !6046)
!6056 = distinct !DISubprogram(name: "as_array<u8, 2>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8as_array17he2707928a4c7ab3dE", scope: !5899, file: !5898, line: 847, type: !6057, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !6071)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!6059, !485}
!6059 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8; 2]>", scope: !92, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6060, templateParams: !98, identifier: "51b864b8a3b2d55a6f2a4aa947c16de5")
!6060 = !{!6061}
!6061 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6059, file: !5, size: 32, align: 32, elements: !6062, templateParams: !98, identifier: "c8ecd5c207f145abbf4df123d7867100", discriminator: !6070)
!6062 = !{!6063, !6066}
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6061, file: !5, baseType: !6064, size: 32, align: 32, extraData: i32 0)
!6064 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6059, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !6065, identifier: "94910f20cc9d7c7b4faeca048d4194ad")
!6065 = !{!5659}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6061, file: !5, baseType: !6067, size: 32, align: 32)
!6067 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6059, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6068, templateParams: !6065, identifier: "246b11196122a1c5538de9abd2a02dc1")
!6068 = !{!6069}
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6067, file: !5, baseType: !5657, size: 32, align: 32, flags: DIFlagPublic)
!6070 = !DIDerivedType(tag: DW_TAG_member, scope: !6059, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!6071 = !{!6072, !6073, !6075}
!6072 = !DILocalVariable(name: "self", arg: 1, scope: !6056, file: !5898, line: 847, type: !485)
!6073 = !DILocalVariable(name: "ptr", scope: !6074, file: !5898, line: 849, type: !5445, align: 32)
!6074 = distinct !DILexicalBlock(scope: !6056, file: !5898, line: 849, column: 13)
!6075 = !DILocalVariable(name: "me", scope: !6076, file: !5898, line: 852, type: !5657, align: 32)
!6076 = distinct !DILexicalBlock(scope: !6074, file: !5898, line: 852, column: 13)
!6077 = !DILocation(line: 847, column: 43, scope: !6056)
!6078 = !DILocation(line: 848, column: 12, scope: !6056)
!6079 = !DILocation(line: 855, column: 13, scope: !6056)
!6080 = !DILocation(line: 848, column: 9, scope: !6056)
!6081 = !DILocalVariable(name: "self", arg: 1, scope: !6082, file: !5898, line: 724, type: !485)
!6082 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17hcc43d06dbac1e3beE", scope: !5899, file: !5898, line: 724, type: !6083, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !6085)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{!1316, !485}
!6085 = !{!6081}
!6086 = !DILocation(line: 724, column: 25, scope: !6082, inlinedAt: !6087)
!6087 = distinct !DILocation(line: 849, column: 28, scope: !6056)
!6088 = !DILocation(line: 849, column: 37, scope: !6056)
!6089 = !DILocation(line: 849, column: 17, scope: !6074)
!6090 = !DILocation(line: 852, column: 31, scope: !6074)
!6091 = !DILocation(line: 852, column: 17, scope: !6076)
!6092 = !DILocation(line: 853, column: 13, scope: !6076)
!6093 = !DILocation(line: 857, column: 6, scope: !6056)
!6094 = distinct !DISubprogram(name: "iter_mut<i16>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8iter_mut17h1cd9560b2848fd3bE", scope: !5899, file: !5898, line: 1056, type: !6095, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !6107)
!6095 = !DISubroutineType(types: !6096)
!6096 = !{!6097, !5432}
!6097 = !DICompositeType(tag: DW_TAG_structure_type, name: "IterMut<i16>", scope: !123, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6098, templateParams: !5017, identifier: "d76406294ade52f46551854f853c7fe6")
!6098 = !{!6099, !6100, !6102}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6097, file: !5, baseType: !5404, size: 32, align: 32, flags: DIFlagPrivate)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !6097, file: !5, baseType: !6101, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!6101 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i16", baseType: !762, size: 32, align: 32, dwarfAddressSpace: 0)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !6097, file: !5, baseType: !6103, align: 8, offset: 64, flags: DIFlagPrivate)
!6103 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&mut i16>", scope: !138, file: !5, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !6104, identifier: "df7f9b2346b86abeaf06818dd21f7da0")
!6104 = !{!6105}
!6105 = !DITemplateTypeParameter(name: "T", type: !6106)
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut i16", baseType: !762, size: 32, align: 32, dwarfAddressSpace: 0)
!6107 = !{!6108}
!6108 = !DILocalVariable(name: "self", arg: 1, scope: !6094, file: !5898, line: 1056, type: !5432)
!6109 = !DILocation(line: 1056, column: 27, scope: !6094)
!6110 = !DILocation(line: 1057, column: 9, scope: !6094)
!6111 = !DILocation(line: 1058, column: 6, scope: !6094)
!6112 = distinct !DISubprogram(name: "new<i16>", linkageName: "_ZN4core5slice4iter16IterMut$LT$T$GT$3new17hbf72e5509935aa8eE", scope: !6097, file: !6113, line: 221, type: !6095, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !6114, retainedNodes: !6115)
!6113 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "69db2748005f3986c6551b3886462616")
!6114 = !DISubprogram(name: "new<i16>", linkageName: "_ZN4core5slice4iter16IterMut$LT$T$GT$3new17hbf72e5509935aa8eE", scope: !6097, file: !6113, line: 221, type: !6095, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!6115 = !{!6116, !6117, !6119, !6121}
!6116 = !DILocalVariable(name: "slice", arg: 1, scope: !6112, file: !6113, line: 221, type: !5432)
!6117 = !DILocalVariable(name: "len", scope: !6118, file: !6113, line: 222, type: !158, align: 32)
!6118 = distinct !DILexicalBlock(scope: !6112, file: !6113, line: 222, column: 9)
!6119 = !DILocalVariable(name: "ptr", scope: !6120, file: !6113, line: 223, type: !5404, align: 32)
!6120 = distinct !DILexicalBlock(scope: !6118, file: !6113, line: 223, column: 9)
!6121 = !DILocalVariable(name: "end_or_len", scope: !6122, file: !6113, line: 241, type: !6101, align: 32)
!6122 = distinct !DILexicalBlock(scope: !6120, file: !6113, line: 241, column: 13)
!6123 = !DILocation(line: 221, column: 29, scope: !6112)
!6124 = !DILocation(line: 241, column: 17, scope: !6122)
!6125 = !DILocation(line: 222, column: 19, scope: !6112)
!6126 = !DILocation(line: 222, column: 13, scope: !6118)
!6127 = !DILocation(line: 223, column: 31, scope: !6118)
!6128 = !DILocation(line: 223, column: 56, scope: !6118)
!6129 = !DILocation(line: 223, column: 13, scope: !6120)
!6130 = !DILocation(line: 242, column: 20, scope: !6120)
!6131 = !DILocalVariable(name: "self", arg: 1, scope: !6132, file: !5372, line: 401, type: !5404)
!6132 = distinct !DISubprogram(name: "as_ptr<i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h937f8c592c4e6fb4E", scope: !5404, file: !5372, line: 401, type: !6133, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !6135, retainedNodes: !6136)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{!6101, !5404}
!6135 = !DISubprogram(name: "as_ptr<i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h937f8c592c4e6fb4E", scope: !5404, file: !5372, line: 401, type: !6133, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!6136 = !{!6131}
!6137 = !DILocation(line: 401, column: 25, scope: !6132, inlinedAt: !6138)
!6138 = distinct !DILocation(line: 242, column: 73, scope: !6120)
!6139 = !DILocalVariable(name: "self", arg: 1, scope: !6140, file: !5262, line: 927, type: !6101)
!6140 = distinct !DISubprogram(name: "add<i16>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hc38b428b9c766912E", scope: !5263, file: !5262, line: 927, type: !6141, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !6143)
!6141 = !DISubroutineType(types: !6142)
!6142 = !{!6101, !6101, !158, !354}
!6143 = !{!6139, !6144}
!6144 = !DILocalVariable(name: "count", arg: 2, scope: !6140, file: !5262, line: 927, type: !158)
!6145 = !DILocation(line: 927, column: 29, scope: !6140, inlinedAt: !6146)
!6146 = distinct !DILocation(line: 242, column: 82, scope: !6120)
!6147 = !DILocation(line: 927, column: 35, scope: !6140, inlinedAt: !6146)
!6148 = !DILocation(line: 77, column: 35, scope: !6149, inlinedAt: !6146)
!6149 = !DILexicalBlockFile(scope: !6140, file: !5237, discriminator: 0)
!6150 = !DILocation(line: 78, column: 17, scope: !6149, inlinedAt: !6146)
!6151 = !DILocation(line: 961, column: 18, scope: !6140, inlinedAt: !6146)
!6152 = !DILocation(line: 242, column: 82, scope: !6120)
!6153 = !DILocation(line: 244, column: 25, scope: !6122)
!6154 = !DILocation(line: 246, column: 6, scope: !6112)
!6155 = distinct !DISubprogram(name: "slice_index_fail", linkageName: "_ZN4core5slice5index16slice_index_fail17hfa8c6c4ada3b67d7E", scope: !265, file: !263, line: 37, type: !6156, scopeLine: 37, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6158)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{null, !158, !158, !158, !354}
!6158 = !{!6159, !6160, !6161}
!6159 = !DILocalVariable(name: "start", arg: 1, scope: !6155, file: !263, line: 37, type: !158)
!6160 = !DILocalVariable(name: "end", arg: 2, scope: !6155, file: !263, line: 37, type: !158)
!6161 = !DILocalVariable(name: "len", arg: 3, scope: !6155, file: !263, line: 37, type: !158)
!6162 = !DILocation(line: 37, column: 27, scope: !6155)
!6163 = !DILocation(line: 37, column: 41, scope: !6155)
!6164 = !DILocation(line: 37, column: 53, scope: !6155)
!6165 = !DILocation(line: 38, column: 8, scope: !6155)
!6166 = !DILocation(line: 47, column: 8, scope: !6155)
!6167 = !DILocalVariable(name: "start", arg: 1, scope: !6168, file: !6169, line: 166, type: !158)
!6168 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17h7b5eeb3cd5064bf8E", scope: !6170, file: !6169, line: 166, type: !6171, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6173)
!6169 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "af6d9dd47250bbbd0daf63956ba674ac")
!6170 = !DINamespace(name: "slice_index_fail", scope: !265)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{null, !158, !158, !354}
!6173 = !{!6167, !6174}
!6174 = !DILocalVariable(name: "len", arg: 2, scope: !6168, file: !6169, line: 166, type: !158)
!6175 = !DILocation(line: 166, column: 29, scope: !6168, inlinedAt: !6176)
!6176 = distinct !DILocation(line: 178, column: 9, scope: !6177)
!6177 = !DILexicalBlockFile(scope: !6155, file: !6169, discriminator: 0)
!6178 = !DILocation(line: 2435, column: 9, scope: !6179, inlinedAt: !6176)
!6179 = !DILexicalBlockFile(scope: !6168, file: !172, discriminator: 0)
!6180 = !DILocation(line: 178, column: 9, scope: !6177)
!6181 = !DILocation(line: 56, column: 8, scope: !6155)
!6182 = !DILocalVariable(name: "end", arg: 1, scope: !6183, file: !6169, line: 166, type: !158)
!6183 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17ha4978ed09fb396c5E", scope: !6170, file: !6169, line: 166, type: !6171, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6184)
!6184 = !{!6182, !6185}
!6185 = !DILocalVariable(name: "len", arg: 2, scope: !6183, file: !6169, line: 166, type: !158)
!6186 = !DILocation(line: 166, column: 29, scope: !6183, inlinedAt: !6187)
!6187 = distinct !DILocation(line: 178, column: 9, scope: !6177)
!6188 = !DILocation(line: 2435, column: 9, scope: !6189, inlinedAt: !6187)
!6189 = !DILexicalBlockFile(scope: !6183, file: !172, discriminator: 0)
!6190 = !DILocalVariable(name: "end", arg: 1, scope: !6191, file: !6169, line: 166, type: !158)
!6191 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17h23a360d8865a5df8E", scope: !6170, file: !6169, line: 166, type: !6171, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6192)
!6192 = !{!6190, !6193}
!6193 = !DILocalVariable(name: "len", arg: 2, scope: !6191, file: !6169, line: 166, type: !158)
!6194 = !DILocation(line: 166, column: 29, scope: !6191, inlinedAt: !6195)
!6195 = distinct !DILocation(line: 178, column: 9, scope: !6177)
!6196 = !DILocation(line: 2435, column: 9, scope: !6197, inlinedAt: !6195)
!6197 = !DILexicalBlockFile(scope: !6191, file: !172, discriminator: 0)
!6198 = !DILocalVariable(name: "start", arg: 1, scope: !6199, file: !6169, line: 166, type: !158)
!6199 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17hdddde5dc9635833dE", scope: !6170, file: !6169, line: 166, type: !6171, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6200)
!6200 = !{!6198, !6201}
!6201 = !DILocalVariable(name: "end", arg: 2, scope: !6199, file: !6169, line: 166, type: !158)
!6202 = !DILocation(line: 166, column: 29, scope: !6199, inlinedAt: !6203)
!6203 = distinct !DILocation(line: 178, column: 9, scope: !6177)
!6204 = !DILocation(line: 2435, column: 9, scope: !6205, inlinedAt: !6203)
!6205 = !DILexicalBlockFile(scope: !6199, file: !172, discriminator: 0)
!6206 = distinct !DISubprogram(name: "range<core::ops::range::RangeInclusive<usize>>", linkageName: "_ZN4core5slice5index5range17hfffd9f9a98dbf0c4E", scope: !265, file: !263, line: 902, type: !6207, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6238, retainedNodes: !6209)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{!295, !217, !1268, !354}
!6209 = !{!6210, !6211, !6212, !6214, !6216, !6218, !6219, !6221, !6223, !6224, !6226, !6228, !6230, !6231, !6233, !6235, !6236}
!6210 = !DILocalVariable(name: "range", arg: 1, scope: !6206, file: !263, line: 902, type: !217)
!6211 = !DILocalVariable(name: "bounds", arg: 2, scope: !6206, file: !263, line: 902, type: !1268)
!6212 = !DILocalVariable(name: "len", scope: !6213, file: !263, line: 906, type: !158, align: 32)
!6213 = distinct !DILexicalBlock(scope: !6206, file: !263, line: 906, column: 5)
!6214 = !DILocalVariable(name: "end", scope: !6215, file: !263, line: 908, type: !158, align: 32)
!6215 = distinct !DILexicalBlock(scope: !6213, file: !263, line: 908, column: 5)
!6216 = !DILocalVariable(name: "end", scope: !6217, file: !263, line: 909, type: !158, align: 32)
!6217 = distinct !DILexicalBlock(scope: !6213, file: !263, line: 909, column: 9)
!6218 = !DILocalVariable(name: "end", scope: !6217, file: !263, line: 909, type: !206, align: 32)
!6219 = !DILocalVariable(name: "end", scope: !6220, file: !263, line: 911, type: !158, align: 32)
!6220 = distinct !DILexicalBlock(scope: !6213, file: !263, line: 911, column: 9)
!6221 = !DILocalVariable(name: "end", scope: !6222, file: !263, line: 913, type: !158, align: 32)
!6222 = distinct !DILexicalBlock(scope: !6213, file: !263, line: 913, column: 9)
!6223 = !DILocalVariable(name: "end", scope: !6222, file: !263, line: 913, type: !206, align: 32)
!6224 = !DILocalVariable(name: "end", scope: !6225, file: !263, line: 914, type: !158, align: 32)
!6225 = distinct !DILexicalBlock(scope: !6213, file: !263, line: 914, column: 9)
!6226 = !DILocalVariable(name: "start", scope: !6227, file: !263, line: 918, type: !158, align: 32)
!6227 = distinct !DILexicalBlock(scope: !6215, file: !263, line: 918, column: 5)
!6228 = !DILocalVariable(name: "start", scope: !6229, file: !263, line: 919, type: !158, align: 32)
!6229 = distinct !DILexicalBlock(scope: !6215, file: !263, line: 919, column: 9)
!6230 = !DILocalVariable(name: "start", scope: !6229, file: !263, line: 919, type: !206, align: 32)
!6231 = !DILocalVariable(name: "start", scope: !6232, file: !263, line: 921, type: !158, align: 32)
!6232 = distinct !DILexicalBlock(scope: !6215, file: !263, line: 921, column: 9)
!6233 = !DILocalVariable(name: "start", scope: !6234, file: !263, line: 923, type: !158, align: 32)
!6234 = distinct !DILexicalBlock(scope: !6215, file: !263, line: 923, column: 9)
!6235 = !DILocalVariable(name: "start", scope: !6234, file: !263, line: 923, type: !206, align: 32)
!6236 = !DILocalVariable(name: "start", scope: !6237, file: !263, line: 924, type: !158, align: 32)
!6237 = distinct !DILexicalBlock(scope: !6215, file: !263, line: 924, column: 9)
!6238 = !{!5918}
!6239 = !DILocation(line: 902, column: 17, scope: !6206)
!6240 = !DILocation(line: 902, column: 27, scope: !6206)
!6241 = !DILocation(line: 908, column: 9, scope: !6215)
!6242 = !DILocation(line: 918, column: 9, scope: !6227)
!6243 = !DILocation(line: 906, column: 15, scope: !6206)
!6244 = !DILocation(line: 906, column: 9, scope: !6213)
!6245 = !DILocation(line: 908, column: 27, scope: !6213)
!6246 = !DILocation(line: 908, column: 21, scope: !6213)
!6247 = !DILocation(line: 908, column: 15, scope: !6213)
!6248 = !DILocation(line: 0, scope: !6249)
!6249 = !DILexicalBlockFile(scope: !6206, file: !507, discriminator: 0)
!6250 = !DILocation(line: 909, column: 31, scope: !6213)
!6251 = !DILocation(line: 909, column: 31, scope: !6217)
!6252 = !DILocation(line: 909, column: 39, scope: !6213)
!6253 = !DILocation(line: 913, column: 31, scope: !6213)
!6254 = !DILocation(line: 913, column: 31, scope: !6222)
!6255 = !DILocation(line: 913, column: 39, scope: !6213)
!6256 = !DILocation(line: 915, column: 34, scope: !6213)
!6257 = !DILocation(line: 911, column: 31, scope: !6213)
!6258 = !DILocation(line: 911, column: 31, scope: !6220)
!6259 = !DILocation(line: 911, column: 39, scope: !6220)
!6260 = !DILocation(line: 909, column: 53, scope: !6217)
!6261 = !DILocation(line: 911, column: 45, scope: !6213)
!6262 = !DILocation(line: 918, column: 29, scope: !6215)
!6263 = !DILocation(line: 918, column: 23, scope: !6215)
!6264 = !DILocation(line: 918, column: 17, scope: !6215)
!6265 = !DILocation(line: 914, column: 31, scope: !6213)
!6266 = !DILocation(line: 914, column: 31, scope: !6225)
!6267 = !DILocation(line: 914, column: 39, scope: !6225)
!6268 = !DILocation(line: 914, column: 41, scope: !6213)
!6269 = !DILocation(line: 913, column: 52, scope: !6222)
!6270 = !DILocation(line: 923, column: 31, scope: !6215)
!6271 = !DILocation(line: 923, column: 31, scope: !6234)
!6272 = !DILocation(line: 923, column: 41, scope: !6215)
!6273 = !DILocation(line: 923, column: 49, scope: !6215)
!6274 = !DILocation(line: 919, column: 31, scope: !6215)
!6275 = !DILocation(line: 919, column: 31, scope: !6229)
!6276 = !DILocation(line: 919, column: 41, scope: !6215)
!6277 = !DILocation(line: 919, column: 50, scope: !6215)
!6278 = !DILocation(line: 926, column: 34, scope: !6215)
!6279 = !DILocation(line: 924, column: 31, scope: !6215)
!6280 = !DILocation(line: 924, column: 31, scope: !6237)
!6281 = !DILocation(line: 924, column: 41, scope: !6237)
!6282 = !DILocation(line: 924, column: 45, scope: !6215)
!6283 = !DILocation(line: 923, column: 80, scope: !6234)
!6284 = !DILocation(line: 923, column: 56, scope: !6234)
!6285 = !DILocation(line: 929, column: 18, scope: !6227)
!6286 = !DILocation(line: 929, column: 25, scope: !6227)
!6287 = !DILocation(line: 930, column: 2, scope: !6206)
!6288 = !DILocation(line: 921, column: 31, scope: !6215)
!6289 = !DILocation(line: 921, column: 31, scope: !6232)
!6290 = !DILocation(line: 921, column: 41, scope: !6232)
!6291 = !DILocation(line: 919, column: 81, scope: !6229)
!6292 = !DILocation(line: 919, column: 57, scope: !6229)
!6293 = !DILocation(line: 921, column: 49, scope: !6215)
!6294 = distinct !DISubprogram(name: "unwrap_failed", linkageName: "_ZN4core6option13unwrap_failed17h6d7cea830e488295E", scope: !92, file: !2366, line: 2173, type: !6295, scopeLine: 2173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6295 = !DISubroutineType(types: !6296)
!6296 = !{null, !354}
!6297 = !DILocation(line: 2174, column: 5, scope: !6294)
!6298 = distinct !DISubprogram(name: "map<&u8, u8, miniz_oxide::inflate::output_buffer::{impl#1}::read_byte::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hb4a4bad60bdf5feaE", scope: !6299, file: !2366, line: 1159, type: !6310, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6313, declaration: !6312, retainedNodes: !6316)
!6299 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !92, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6300, templateParams: !98, identifier: "e3cc9529afd7ea86823e74f301da7add")
!6300 = !{!6301}
!6301 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6299, file: !5, size: 32, align: 32, elements: !6302, templateParams: !98, identifier: "d2e3cb113e06f2ebe2a7baacafb133a9", discriminator: !6309)
!6302 = !{!6303, !6305}
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6301, file: !5, baseType: !6304, size: 32, align: 32, extraData: i32 0)
!6304 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6299, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !3704, identifier: "d80d319a4be8fb12c6d6cc64e1cde6a")
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6301, file: !5, baseType: !6306, size: 32, align: 32)
!6306 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6299, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6307, templateParams: !3704, identifier: "39e0be929543112ad5fdfbb2d742e299")
!6307 = !{!6308}
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6306, file: !5, baseType: !617, size: 32, align: 32, flags: DIFlagPublic)
!6309 = !DIDerivedType(tag: DW_TAG_member, scope: !6299, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!6310 = !DISubroutineType(types: !6311)
!6311 = !{!589, !6299, !614}
!6312 = !DISubprogram(name: "map<&u8, u8, miniz_oxide::inflate::output_buffer::{impl#1}::read_byte::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hb4a4bad60bdf5feaE", scope: !6299, file: !2366, line: 1159, type: !6310, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6313)
!6313 = !{!3705, !6314, !6315}
!6314 = !DITemplateTypeParameter(name: "U", type: !37)
!6315 = !DITemplateTypeParameter(name: "F", type: !614)
!6316 = !{!6317, !6318, !6319}
!6317 = !DILocalVariable(name: "self", arg: 1, scope: !6298, file: !2366, line: 1159, type: !6299)
!6318 = !DILocalVariable(name: "f", arg: 2, scope: !6298, file: !2366, line: 1159, type: !614)
!6319 = !DILocalVariable(name: "x", scope: !6320, file: !2366, line: 1164, type: !617, align: 32)
!6320 = distinct !DILexicalBlock(scope: !6298, file: !2366, line: 1164, column: 13)
!6321 = !DILocation(line: 1159, column: 28, scope: !6298)
!6322 = !DILocation(line: 1159, column: 34, scope: !6298)
!6323 = !DILocation(line: 1163, column: 15, scope: !6298)
!6324 = !DILocation(line: 1163, column: 9, scope: !6298)
!6325 = !DILocation(line: 1164, column: 18, scope: !6298)
!6326 = !DILocation(line: 1164, column: 18, scope: !6320)
!6327 = !DILocation(line: 1164, column: 29, scope: !6320)
!6328 = !DILocation(line: 1164, column: 24, scope: !6320)
!6329 = !DILocation(line: 1164, column: 33, scope: !6298)
!6330 = !DILocation(line: 1165, column: 21, scope: !6298)
!6331 = !DILocation(line: 1167, column: 5, scope: !6298)
!6332 = !DILocation(line: 1167, column: 6, scope: !6298)
!6333 = distinct !DISubprogram(name: "zip<(&core::cell::Cell<u8>, &core::cell::Cell<u8>), &core::cell::Cell<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3zip17hbdd62ad57f198f0cE", scope: !6334, file: !2366, line: 1920, type: !6347, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6350, declaration: !6349, retainedNodes: !6352)
!6334 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(&core::cell::Cell<u8>, &core::cell::Cell<u8>)>", scope: !92, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6335, templateParams: !98, identifier: "434482187435ec049113311fbac3c0b5")
!6335 = !{!6336}
!6336 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6334, file: !5, size: 64, align: 32, elements: !6337, templateParams: !98, identifier: "19d8cc904af3c274fb5739691fec7305", discriminator: !6346)
!6337 = !{!6338, !6342}
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6336, file: !5, baseType: !6339, size: 64, align: 32, extraData: i32 0)
!6339 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6334, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !6340, identifier: "bb0e87c56122046bf80a20dc8ef8396b")
!6340 = !{!6341}
!6341 = !DITemplateTypeParameter(name: "T", type: !2336)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6336, file: !5, baseType: !6343, size: 64, align: 32)
!6343 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6334, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6344, templateParams: !6340, identifier: "f16200114cd70d5f593f49ebd072a0df")
!6344 = !{!6345}
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6343, file: !5, baseType: !2336, size: 64, align: 32, flags: DIFlagPublic)
!6346 = !DIDerivedType(tag: DW_TAG_member, scope: !6334, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{!2325, !6334, !6025}
!6349 = !DISubprogram(name: "zip<(&core::cell::Cell<u8>, &core::cell::Cell<u8>), &core::cell::Cell<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3zip17hbdd62ad57f198f0cE", scope: !6334, file: !2366, line: 1920, type: !6347, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6350)
!6350 = !{!6341, !6351}
!6351 = !DITemplateTypeParameter(name: "U", type: !2339)
!6352 = !{!6353, !6354, !6355, !6357}
!6353 = !DILocalVariable(name: "self", arg: 1, scope: !6333, file: !2366, line: 1920, type: !6334)
!6354 = !DILocalVariable(name: "other", arg: 2, scope: !6333, file: !2366, line: 1920, type: !6025)
!6355 = !DILocalVariable(name: "a", scope: !6356, file: !2366, line: 1926, type: !2336, align: 32)
!6356 = distinct !DILexicalBlock(scope: !6333, file: !2366, line: 1926, column: 13)
!6357 = !DILocalVariable(name: "b", scope: !6356, file: !2366, line: 1926, type: !2339, align: 32)
!6358 = !DILocation(line: 1920, column: 25, scope: !6333)
!6359 = !DILocation(line: 1920, column: 31, scope: !6333)
!6360 = !DILocation(line: 1925, column: 15, scope: !6333)
!6361 = !DILocation(line: 1925, column: 9, scope: !6333)
!6362 = !DILocation(line: 1927, column: 18, scope: !6333)
!6363 = !DILocation(line: 1926, column: 19, scope: !6333)
!6364 = !DILocation(line: 1926, column: 19, scope: !6356)
!6365 = !DILocation(line: 1926, column: 28, scope: !6333)
!6366 = !DILocation(line: 1926, column: 28, scope: !6356)
!6367 = !DILocation(line: 1926, column: 40, scope: !6356)
!6368 = !DILocation(line: 1926, column: 35, scope: !6356)
!6369 = !DILocation(line: 1926, column: 46, scope: !6333)
!6370 = !DILocation(line: 1928, column: 9, scope: !6333)
!6371 = !DILocation(line: 1929, column: 6, scope: !6333)
!6372 = !DILocation(line: 1920, column: 5, scope: !6333)
!6373 = distinct !DISubprogram(name: "zip<&core::cell::Cell<u8>, &core::cell::Cell<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3zip17hd242cc20efa49b6bE", scope: !6025, file: !2366, line: 1920, type: !6374, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6377, declaration: !6376, retainedNodes: !6378)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{!6334, !6025, !6025}
!6376 = !DISubprogram(name: "zip<&core::cell::Cell<u8>, &core::cell::Cell<u8>>", linkageName: "_ZN4core6option15Option$LT$T$GT$3zip17hd242cc20efa49b6bE", scope: !6025, file: !2366, line: 1920, type: !6374, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6377)
!6377 = !{!6032, !6351}
!6378 = !{!6379, !6380, !6381, !6383}
!6379 = !DILocalVariable(name: "self", arg: 1, scope: !6373, file: !2366, line: 1920, type: !6025)
!6380 = !DILocalVariable(name: "other", arg: 2, scope: !6373, file: !2366, line: 1920, type: !6025)
!6381 = !DILocalVariable(name: "a", scope: !6382, file: !2366, line: 1926, type: !2339, align: 32)
!6382 = distinct !DILexicalBlock(scope: !6373, file: !2366, line: 1926, column: 13)
!6383 = !DILocalVariable(name: "b", scope: !6382, file: !2366, line: 1926, type: !2339, align: 32)
!6384 = !DILocation(line: 1920, column: 25, scope: !6373)
!6385 = !DILocation(line: 1920, column: 31, scope: !6373)
!6386 = !DILocation(line: 1925, column: 15, scope: !6373)
!6387 = !DILocation(line: 1925, column: 9, scope: !6373)
!6388 = !DILocation(line: 1927, column: 18, scope: !6373)
!6389 = !DILocation(line: 1926, column: 19, scope: !6373)
!6390 = !DILocation(line: 1926, column: 19, scope: !6382)
!6391 = !DILocation(line: 1926, column: 28, scope: !6373)
!6392 = !DILocation(line: 1926, column: 28, scope: !6382)
!6393 = !DILocation(line: 1926, column: 35, scope: !6382)
!6394 = !DILocation(line: 1926, column: 46, scope: !6373)
!6395 = !DILocation(line: 1928, column: 9, scope: !6373)
!6396 = !DILocation(line: 1929, column: 6, scope: !6373)
!6397 = !DILocation(line: 1920, column: 5, scope: !6373)
!6398 = distinct !DISubprogram(name: "ok_or<&[u8; 2], core::array::TryFromSliceError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hdcfaa0ce463e6a8dE", scope: !6059, file: !2366, line: 1336, type: !6399, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5658, declaration: !6401, retainedNodes: !6402)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{!5649, !6059, !5661}
!6401 = !DISubprogram(name: "ok_or<&[u8; 2], core::array::TryFromSliceError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17hdcfaa0ce463e6a8dE", scope: !6059, file: !2366, line: 1336, type: !6399, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5658)
!6402 = !{!6403, !6404, !6405}
!6403 = !DILocalVariable(name: "self", arg: 1, scope: !6398, file: !2366, line: 1336, type: !6059)
!6404 = !DILocalVariable(name: "err", arg: 2, scope: !6398, file: !2366, line: 1336, type: !5661)
!6405 = !DILocalVariable(name: "v", scope: !6406, file: !2366, line: 1338, type: !5657, align: 32)
!6406 = distinct !DILexicalBlock(scope: !6398, file: !2366, line: 1338, column: 13)
!6407 = !DILocation(line: 1336, column: 45, scope: !6398)
!6408 = !DILocation(line: 1336, column: 51, scope: !6398)
!6409 = !DILocation(line: 1337, column: 15, scope: !6398)
!6410 = !DILocation(line: 1337, column: 9, scope: !6398)
!6411 = !DILocation(line: 1338, column: 18, scope: !6398)
!6412 = !DILocation(line: 1338, column: 18, scope: !6406)
!6413 = !DILocation(line: 1338, column: 24, scope: !6406)
!6414 = !DILocation(line: 1338, column: 28, scope: !6398)
!6415 = !DILocation(line: 1339, column: 25, scope: !6398)
!6416 = !DILocation(line: 1339, column: 21, scope: !6398)
!6417 = !DILocation(line: 1339, column: 28, scope: !6398)
!6418 = !DILocation(line: 1341, column: 5, scope: !6398)
!6419 = !DILocation(line: 1341, column: 6, scope: !6398)
!6420 = distinct !DISubprogram(name: "unwrap_or<i16>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h2aa2dcb795353ac3E", scope: !6421, file: !2366, line: 1037, type: !6432, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !6434, retainedNodes: !6435)
!6421 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<i16>", scope: !92, file: !5, size: 32, align: 16, flags: DIFlagPublic, elements: !6422, templateParams: !98, identifier: "69876fea512b852e46eb0f0d4cbca99")
!6422 = !{!6423}
!6423 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6421, file: !5, size: 32, align: 16, elements: !6424, templateParams: !98, identifier: "7c5215b8200af588f70b8a2c63725ebf", discriminator: !6431)
!6424 = !{!6425, !6427}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6423, file: !5, baseType: !6426, size: 32, align: 16, extraData: i16 0)
!6426 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6421, file: !5, size: 32, align: 16, flags: DIFlagPublic, elements: !98, templateParams: !5017, identifier: "362c169a4e6ba1becc0e27ff7cf2eb76")
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6423, file: !5, baseType: !6428, size: 32, align: 16, extraData: i16 1)
!6428 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6421, file: !5, size: 32, align: 16, flags: DIFlagPublic, elements: !6429, templateParams: !5017, identifier: "ffb8870a37076db3e87eaab1da9563cc")
!6429 = !{!6430}
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6428, file: !5, baseType: !762, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!6431 = !DIDerivedType(tag: DW_TAG_member, scope: !6421, file: !5, baseType: !105, size: 16, align: 16, flags: DIFlagArtificial)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{!762, !6421, !762}
!6434 = !DISubprogram(name: "unwrap_or<i16>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h2aa2dcb795353ac3E", scope: !6421, file: !2366, line: 1037, type: !6432, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!6435 = !{!6436, !6437, !6438}
!6436 = !DILocalVariable(name: "self", arg: 1, scope: !6420, file: !2366, line: 1037, type: !6421)
!6437 = !DILocalVariable(name: "default", arg: 2, scope: !6420, file: !2366, line: 1037, type: !762)
!6438 = !DILocalVariable(name: "x", scope: !6439, file: !2366, line: 1042, type: !762, align: 16)
!6439 = distinct !DILexicalBlock(scope: !6420, file: !2366, line: 1042, column: 13)
!6440 = !DILocation(line: 1037, column: 28, scope: !6420)
!6441 = !DILocation(line: 1037, column: 34, scope: !6420)
!6442 = !DILocation(line: 1041, column: 15, scope: !6420)
!6443 = !DILocation(line: 1041, column: 9, scope: !6420)
!6444 = !DILocation(line: 1042, column: 18, scope: !6420)
!6445 = !DILocation(line: 1042, column: 18, scope: !6439)
!6446 = !DILocation(line: 1042, column: 24, scope: !6439)
!6447 = !DILocation(line: 1042, column: 24, scope: !6420)
!6448 = !DILocation(line: 1043, column: 21, scope: !6420)
!6449 = !DILocation(line: 1045, column: 5, scope: !6420)
!6450 = !DILocation(line: 1045, column: 6, scope: !6420)
!6451 = distinct !DISubprogram(name: "unwrap_or<miniz_oxide::inflate::core::Action>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h57526fba8fdc257aE", scope: !3658, file: !2366, line: 1037, type: !6452, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !3664, declaration: !6454, retainedNodes: !6455)
!6452 = !DISubroutineType(types: !6453)
!6453 = !{!1875, !3658, !1875}
!6454 = !DISubprogram(name: "unwrap_or<miniz_oxide::inflate::core::Action>", linkageName: "_ZN4core6option15Option$LT$T$GT$9unwrap_or17h57526fba8fdc257aE", scope: !3658, file: !2366, line: 1037, type: !6452, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3664)
!6455 = !{!6456, !6457, !6458}
!6456 = !DILocalVariable(name: "self", arg: 1, scope: !6451, file: !2366, line: 1037, type: !3658)
!6457 = !DILocalVariable(name: "default", arg: 2, scope: !6451, file: !2366, line: 1037, type: !1875)
!6458 = !DILocalVariable(name: "x", scope: !6459, file: !2366, line: 1042, type: !1875, align: 8)
!6459 = distinct !DILexicalBlock(scope: !6451, file: !2366, line: 1042, column: 13)
!6460 = !DILocation(line: 1037, column: 28, scope: !6451)
!6461 = !DILocation(line: 1037, column: 34, scope: !6451)
!6462 = !DILocation(line: 1041, column: 15, scope: !6451)
!6463 = !DILocation(line: 1041, column: 9, scope: !6451)
!6464 = !DILocation(line: 1042, column: 18, scope: !6451)
!6465 = !DILocation(line: 1042, column: 18, scope: !6459)
!6466 = !DILocation(line: 1042, column: 24, scope: !6459)
!6467 = !DILocation(line: 1042, column: 24, scope: !6451)
!6468 = !DILocation(line: 1043, column: 21, scope: !6451)
!6469 = !DILocation(line: 1045, column: 5, scope: !6451)
!6470 = !DILocation(line: 1045, column: 6, scope: !6451)
!6471 = distinct !DISubprogram(name: "copied<i16>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h1f2b2e3319bf76e1E", scope: !5995, file: !2366, line: 2051, type: !6472, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !6474, retainedNodes: !6475)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!6421, !5995}
!6474 = !DISubprogram(name: "copied<i16>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h1f2b2e3319bf76e1E", scope: !5995, file: !2366, line: 2051, type: !6472, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!6475 = !{!6476, !6477}
!6476 = !DILocalVariable(name: "self", arg: 1, scope: !6471, file: !2366, line: 2051, type: !5995)
!6477 = !DILocalVariable(name: "v", scope: !6478, file: !2366, line: 2058, type: !762, align: 16)
!6478 = distinct !DILexicalBlock(scope: !6471, file: !2366, line: 2058, column: 13)
!6479 = !DILocation(line: 2051, column: 25, scope: !6471)
!6480 = !DILocation(line: 2057, column: 15, scope: !6471)
!6481 = !DILocation(line: 2057, column: 9, scope: !6471)
!6482 = !DILocation(line: 2058, column: 19, scope: !6471)
!6483 = !DILocation(line: 2058, column: 19, scope: !6478)
!6484 = !DILocation(line: 2058, column: 25, scope: !6478)
!6485 = !DILocation(line: 2058, column: 31, scope: !6471)
!6486 = !DILocation(line: 2059, column: 21, scope: !6471)
!6487 = !DILocation(line: 2061, column: 6, scope: !6471)
!6488 = distinct !DISubprogram(name: "unwrap_or_default<[u8; 2], core::array::TryFromSliceError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17ha7872ef8f65c955dE", scope: !5876, file: !6489, line: 1265, type: !6490, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5884, declaration: !6492, retainedNodes: !6493)
!6489 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6b58edaf4cfc5d1595488e3ef89d31a")
!6490 = !DISubroutineType(types: !6491)
!6491 = !{!2441, !5876}
!6492 = !DISubprogram(name: "unwrap_or_default<[u8; 2], core::array::TryFromSliceError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$17unwrap_or_default17ha7872ef8f65c955dE", scope: !5876, file: !6489, line: 1265, type: !6490, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5884)
!6493 = !{!6494, !6495}
!6494 = !DILocalVariable(name: "self", arg: 1, scope: !6488, file: !6489, line: 1265, type: !5876)
!6495 = !DILocalVariable(name: "x", scope: !6496, file: !6489, line: 1271, type: !2441, align: 8)
!6496 = distinct !DILexicalBlock(scope: !6488, file: !6489, line: 1271, column: 13)
!6497 = !DILocation(line: 1265, column: 36, scope: !6488)
!6498 = !DILocation(line: 1271, column: 16, scope: !6496)
!6499 = !DILocation(line: 1270, column: 15, scope: !6488)
!6500 = !DILocation(line: 1270, column: 9, scope: !6488)
!6501 = !DILocation(line: 1272, column: 23, scope: !6488)
!6502 = !DILocation(line: 1271, column: 16, scope: !6488)
!6503 = !DILocation(line: 1271, column: 22, scope: !6496)
!6504 = !DILocation(line: 1271, column: 22, scope: !6488)
!6505 = !DILocation(line: 1274, column: 5, scope: !6488)
!6506 = !DILocation(line: 1274, column: 6, scope: !6488)
!6507 = distinct !DISubprogram(name: "copied<[u8; 2], core::array::TryFromSliceError>", linkageName: "_ZN4core6result23Result$LT$$RF$T$C$E$GT$6copied17hda34cc0a46634f63E", scope: !5649, file: !6489, line: 1706, type: !6508, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5884, declaration: !6510, retainedNodes: !6511)
!6508 = !DISubroutineType(types: !6509)
!6509 = !{!5876, !5649}
!6510 = !DISubprogram(name: "copied<[u8; 2], core::array::TryFromSliceError>", linkageName: "_ZN4core6result23Result$LT$$RF$T$C$E$GT$6copied17hda34cc0a46634f63E", scope: !5649, file: !6489, line: 1706, type: !6508, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5884)
!6511 = !{!6512, !6513, !6515}
!6512 = !DILocalVariable(name: "self", arg: 1, scope: !6507, file: !6489, line: 1706, type: !5649)
!6513 = !DILocalVariable(name: "v", scope: !6514, file: !6489, line: 1713, type: !2441, align: 8)
!6514 = distinct !DILexicalBlock(scope: !6507, file: !6489, line: 1713, column: 13)
!6515 = !DILocalVariable(name: "e", scope: !6516, file: !6489, line: 1714, type: !5661, align: 8)
!6516 = distinct !DILexicalBlock(scope: !6507, file: !6489, line: 1714, column: 13)
!6517 = !DILocation(line: 1706, column: 25, scope: !6507)
!6518 = !DILocation(line: 1713, column: 17, scope: !6514)
!6519 = !DILocation(line: 1714, column: 17, scope: !6516)
!6520 = !DILocation(line: 1712, column: 15, scope: !6507)
!6521 = !DILocation(line: 1712, column: 9, scope: !6507)
!6522 = !DILocation(line: 1714, column: 23, scope: !6516)
!6523 = !DILocation(line: 1714, column: 28, scope: !6507)
!6524 = !DILocation(line: 1713, column: 17, scope: !6507)
!6525 = !DILocation(line: 1713, column: 23, scope: !6514)
!6526 = !DILocation(line: 1713, column: 27, scope: !6507)
!6527 = !DILocation(line: 1716, column: 6, scope: !6507)
!6528 = distinct !DISubprogram(name: "panic_const_rem_by_zero", linkageName: "_ZN4core9panicking11panic_const23panic_const_rem_by_zero17h27874f65d9a73bf9E", scope: !6530, file: !6529, line: 173, type: !6295, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6529 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "b120da646d1a09f31201b8a519374e57")
!6530 = !DINamespace(name: "panic_const", scope: !75)
!6531 = !DILocation(line: 180, column: 27, scope: !6528)
!6532 = !DILocation(line: 180, column: 17, scope: !6528)
!6533 = distinct !DISubprogram(name: "panic_const_add_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_add_overflow17hdf43d440e8472f53E", scope: !6530, file: !6529, line: 173, type: !6295, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6534 = !DILocation(line: 180, column: 27, scope: !6533)
!6535 = !DILocation(line: 180, column: 17, scope: !6533)
!6536 = distinct !DISubprogram(name: "panic_const_mul_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_mul_overflow17hc3e0d809b0a12a70E", scope: !6530, file: !6529, line: 173, type: !6295, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6537 = !DILocation(line: 180, column: 27, scope: !6536)
!6538 = !DILocation(line: 180, column: 17, scope: !6536)
!6539 = distinct !DISubprogram(name: "panic_const_neg_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_neg_overflow17h371e6116aede4348E", scope: !6530, file: !6529, line: 173, type: !6295, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6540 = !DILocation(line: 180, column: 27, scope: !6539)
!6541 = !DILocation(line: 180, column: 17, scope: !6539)
!6542 = distinct !DISubprogram(name: "panic_const_shl_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_shl_overflow17hded6c5325fb7e4dcE", scope: !6530, file: !6529, line: 173, type: !6295, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6543 = !DILocation(line: 180, column: 27, scope: !6542)
!6544 = !DILocation(line: 180, column: 17, scope: !6542)
!6545 = distinct !DISubprogram(name: "panic_const_shr_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_shr_overflow17h476536126dcd9b80E", scope: !6530, file: !6529, line: 173, type: !6295, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6546 = !DILocation(line: 180, column: 27, scope: !6545)
!6547 = !DILocation(line: 180, column: 17, scope: !6545)
!6548 = distinct !DISubprogram(name: "panic_const_sub_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_sub_overflow17h563ebcdef70a973aE", scope: !6530, file: !6529, line: 173, type: !6295, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6549 = !DILocation(line: 180, column: 27, scope: !6548)
!6550 = !DILocation(line: 180, column: 17, scope: !6548)
!6551 = distinct !DISubprogram(name: "panic_bounds_check", linkageName: "_ZN4core9panicking18panic_bounds_check17h57d91b5a3dfb0b79E", scope: !75, file: !6529, line: 271, type: !6171, scopeLine: 271, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6552)
!6552 = !{!6553, !6554, !6555, !6562}
!6553 = !DILocalVariable(name: "index", arg: 1, scope: !6551, file: !6529, line: 271, type: !158)
!6554 = !DILocalVariable(name: "len", arg: 2, scope: !6551, file: !6529, line: 271, type: !158)
!6555 = !DILocalVariable(name: "args", scope: !6556, file: !6529, line: 276, type: !6558, align: 32)
!6556 = !DILexicalBlockFile(scope: !6557, file: !6529, discriminator: 0)
!6557 = distinct !DILexicalBlock(scope: !6551, file: !6169, line: 62, column: 38)
!6558 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !5, size: 64, align: 32, elements: !6559, templateParams: !98, identifier: "c7a49237229ff8f5cee7a39428e0a5c9")
!6559 = !{!6560, !6561}
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6558, file: !5, baseType: !206, size: 32, align: 32)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6558, file: !5, baseType: !206, size: 32, align: 32, offset: 32)
!6562 = !DILocalVariable(name: "args", scope: !6563, file: !6529, line: 276, type: !6565, align: 32)
!6563 = !DILexicalBlockFile(scope: !6564, file: !6529, discriminator: 0)
!6564 = distinct !DILexicalBlock(scope: !6557, file: !6169, line: 62, column: 38)
!6565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6566, size: 128, align: 32, elements: !2442)
!6566 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !6567, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6569, templateParams: !98, identifier: "14dca3c1b1040cd8e8db0eaa112c8216")
!6567 = !DINamespace(name: "rt", scope: !6568)
!6568 = !DINamespace(name: "fmt", scope: !76)
!6569 = !{!6570}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !6566, file: !5, baseType: !6571, size: 64, align: 32, flags: DIFlagPrivate)
!6571 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentType", scope: !6567, file: !5, size: 64, align: 32, flags: DIFlagPrivate, elements: !6572, templateParams: !98, identifier: "fb1492950c21086074bab206592842dc")
!6572 = !{!6573}
!6573 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6571, file: !5, size: 64, align: 32, elements: !6574, templateParams: !98, identifier: "478e018ae6e38e2110d0d424641ab18", discriminator: !6631)
!6574 = !{!6575, !6627}
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "Placeholder", scope: !6573, file: !5, baseType: !6576, size: 64, align: 32)
!6576 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !6571, file: !5, size: 64, align: 32, flags: DIFlagPrivate, elements: !6577, templateParams: !98, identifier: "59bc7f5c5a99ab4be3c3f06b9190c327")
!6577 = !{!6578, !6582, !6622}
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6576, file: !5, baseType: !6579, size: 32, align: 32, flags: DIFlagPrivate)
!6579 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !128, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !6580, templateParams: !5332, identifier: "d9f2bcb64deb934daba9b509aea4a83e")
!6580 = !{!6581}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6579, file: !5, baseType: !5241, size: 32, align: 32, flags: DIFlagPrivate)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !6576, file: !5, baseType: !6583, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe fn(core::ptr::non_null::NonNull<()>, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !6584, size: 32, align: 32, dwarfAddressSpace: 0)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!6586, !6579, !6602}
!6586 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !511, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !6587, templateParams: !98, identifier: "613ace46ae0c395d39c31f05d3934750")
!6587 = !{!6588}
!6588 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6586, file: !5, size: 8, align: 8, elements: !6589, templateParams: !98, identifier: "2bd67c77928327a5a86e1d970227dbc3", discriminator: !6601)
!6589 = !{!6590, !6597}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6588, file: !5, baseType: !6591, size: 8, align: 8, extraData: i8 0)
!6591 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6586, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !6592, templateParams: !6594, identifier: "8e1fa5ea2cd8f77479a16f216aa53a42")
!6592 = !{!6593}
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6591, file: !5, baseType: !5242, align: 8, offset: 8, flags: DIFlagPublic)
!6594 = !{!5333, !6595}
!6595 = !DITemplateTypeParameter(name: "E", type: !6596)
!6596 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !6568, file: !5, align: 8, flags: DIFlagPublic, elements: !98, identifier: "cac4d2a6635a122844ffbe3b52a15933")
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6588, file: !5, baseType: !6598, size: 8, align: 8, extraData: i8 1)
!6598 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6586, file: !5, size: 8, align: 8, flags: DIFlagPublic, elements: !6599, templateParams: !6594, identifier: "bd8eb8fbb58ca24e2467a7f35c864471")
!6599 = !{!6600}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6598, file: !5, baseType: !6596, align: 8, offset: 8, flags: DIFlagPublic)
!6601 = !DIDerivedType(tag: DW_TAG_member, scope: !6586, file: !5, baseType: !37, size: 8, align: 8, flags: DIFlagArtificial)
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !6603, size: 32, align: 32, dwarfAddressSpace: 0)
!6603 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !6568, file: !5, size: 128, align: 32, flags: DIFlagPublic, elements: !6604, templateParams: !98, identifier: "9c19c8ef0b5ae3cad350e741e841742c")
!6604 = !{!6605, !6611}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !6603, file: !5, baseType: !6606, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!6606 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormattingOptions", scope: !6568, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6607, templateParams: !98, identifier: "8e7d20540a73fe2190308d0618721e3e")
!6607 = !{!6608, !6609, !6610}
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6606, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagPrivate)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6606, file: !5, baseType: !105, size: 16, align: 16, offset: 32, flags: DIFlagPrivate)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !6606, file: !5, baseType: !105, size: 16, align: 16, offset: 48, flags: DIFlagPrivate)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6603, file: !5, baseType: !6612, size: 64, align: 32, flags: DIFlagPrivate)
!6612 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !5, size: 64, align: 32, elements: !6613, templateParams: !98, identifier: "ed1fc41b72305de4afb5dbb44887680d")
!6613 = !{!6614, !6617}
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !6612, file: !5, baseType: !6615, size: 32, align: 32)
!6615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6616, size: 32, align: 32, dwarfAddressSpace: 0)
!6616 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !5, align: 8, elements: !98, identifier: "3bd7022d6bc7a1bba9386a42dfa7db9d")
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !6612, file: !5, baseType: !6618, size: 32, align: 32, offset: 32)
!6618 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 6]", baseType: !6619, size: 32, align: 32, dwarfAddressSpace: 0)
!6619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 192, align: 32, elements: !6620)
!6620 = !{!6621}
!6621 = !DISubrange(count: 6, lowerBound: 0)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "_lifetime", scope: !6576, file: !5, baseType: !6623, align: 8, offset: 64, flags: DIFlagPrivate)
!6623 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&()>", scope: !138, file: !5, align: 8, flags: DIFlagPublic, elements: !98, templateParams: !6624, identifier: "e71ee38df7dbfccdae82d3411c10d5bc")
!6624 = !{!6625}
!6625 = !DITemplateTypeParameter(name: "T", type: !6626)
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !5242, size: 32, align: 32, dwarfAddressSpace: 0)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !6573, file: !5, baseType: !6628, size: 64, align: 32, extraData: i32 0)
!6628 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !6571, file: !5, size: 64, align: 32, flags: DIFlagPrivate, elements: !6629, templateParams: !98, identifier: "bcc61db69ea5777ac138ac099ea396b2")
!6629 = !{!6630}
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6628, file: !5, baseType: !105, size: 16, align: 16, offset: 32, flags: DIFlagPrivate)
!6631 = !DIDerivedType(tag: DW_TAG_member, scope: !6571, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!6632 = !DILocation(line: 271, column: 23, scope: !6551)
!6633 = !DILocation(line: 271, column: 37, scope: !6551)
!6634 = !DILocation(line: 273, column: 9, scope: !6551)
!6635 = distinct !DISubprogram(name: "panic_nounwind_fmt", linkageName: "_ZN4core9panicking18panic_nounwind_fmt17hcf45dfa946aa2fa2E", scope: !75, file: !6529, line: 95, type: !6636, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6692)
!6636 = !DISubroutineType(types: !6637)
!6637 = !{null, !6638, !176, !354}
!6638 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !6568, file: !5, size: 192, align: 32, flags: DIFlagPublic, elements: !6639, templateParams: !98, identifier: "d691e62b2ee4847c2af32873f04bd10")
!6639 = !{!6640, !6646, !6686}
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !6638, file: !5, baseType: !6641, size: 64, align: 32, flags: DIFlagPrivate)
!6641 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !5, size: 64, align: 32, elements: !6642, templateParams: !98, identifier: "4e66b00a376d6af5b8765440fb2839f")
!6642 = !{!6643, !6645}
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6641, file: !5, baseType: !6644, size: 32, align: 32)
!6644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 32, align: 32, dwarfAddressSpace: 0)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6641, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !6638, file: !5, baseType: !6647, size: 64, align: 32, offset: 128, flags: DIFlagPrivate)
!6647 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !92, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6648, templateParams: !98, identifier: "a638667a460b22fe10961f9a2f3202aa")
!6648 = !{!6649}
!6649 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6647, file: !5, size: 64, align: 32, elements: !6650, templateParams: !98, identifier: "29af53ccc7f21f4d5671e352d673889a", discriminator: !6685)
!6650 = !{!6651, !6681}
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6649, file: !5, baseType: !6652, size: 64, align: 32, extraData: i32 0)
!6652 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6647, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !6653, identifier: "11ce4f4d10f67887bbe6bf59a521c479")
!6653 = !{!6654}
!6654 = !DITemplateTypeParameter(name: "T", type: !6655)
!6655 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !5, size: 64, align: 32, elements: !6656, templateParams: !98, identifier: "b0485535d7020130e949c24f3fc2aa00")
!6656 = !{!6657, !6680}
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6655, file: !5, baseType: !6658, size: 32, align: 32)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 32, align: 32, dwarfAddressSpace: 0)
!6659 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !6567, file: !5, size: 192, align: 32, flags: DIFlagPublic, elements: !6660, templateParams: !98, identifier: "8cb06f9d78dc629c8f52fc3b5544996c")
!6660 = !{!6661, !6662, !6663, !6679}
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !6659, file: !5, baseType: !158, size: 32, align: 32, offset: 128, flags: DIFlagPublic)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6659, file: !5, baseType: !108, size: 32, align: 32, offset: 160, flags: DIFlagPublic)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !6659, file: !5, baseType: !6664, size: 64, align: 32, flags: DIFlagPublic)
!6664 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !6567, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6665, templateParams: !98, identifier: "2d7772037f5c744e87d41105441784d5")
!6665 = !{!6666}
!6666 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6664, file: !5, size: 64, align: 32, elements: !6667, templateParams: !98, identifier: "af14687975a61e1ae6bbcdaeb79a8a2", discriminator: !6678)
!6667 = !{!6668, !6672, !6676}
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !6666, file: !5, baseType: !6669, size: 64, align: 32, extraData: i16 0)
!6669 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !6664, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6670, templateParams: !98, identifier: "da16c9b5356522ffb015c0e99237342e")
!6670 = !{!6671}
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6669, file: !5, baseType: !105, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !6666, file: !5, baseType: !6673, size: 64, align: 32, extraData: i16 1)
!6673 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !6664, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6674, templateParams: !98, identifier: "8d84b26eccf0f48fe70ea50c79b83fc9")
!6674 = !{!6675}
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6673, file: !5, baseType: !158, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !6666, file: !5, baseType: !6677, size: 64, align: 32, extraData: i16 2)
!6677 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !6664, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !98, identifier: "e4d910bcc0c2da0048af65cce9b02bdf")
!6678 = !DIDerivedType(tag: DW_TAG_member, scope: !6664, file: !5, baseType: !105, size: 16, align: 16, flags: DIFlagArtificial)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6659, file: !5, baseType: !6664, size: 64, align: 32, offset: 64, flags: DIFlagPublic)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6655, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6649, file: !5, baseType: !6682, size: 64, align: 32)
!6682 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6647, file: !5, size: 64, align: 32, flags: DIFlagPublic, elements: !6683, templateParams: !6653, identifier: "b6f59188292a44db7736125146b92cb0")
!6683 = !{!6684}
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6682, file: !5, baseType: !6655, size: 64, align: 32, flags: DIFlagPublic)
!6685 = !DIDerivedType(tag: DW_TAG_member, scope: !6647, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6638, file: !5, baseType: !6687, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!6687 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !5, size: 64, align: 32, elements: !6688, templateParams: !98, identifier: "14634098cacc86d372c43019bc81f26f")
!6688 = !{!6689, !6691}
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6687, file: !5, baseType: !6690, size: 32, align: 32)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6566, size: 32, align: 32, dwarfAddressSpace: 0)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6687, file: !5, baseType: !158, size: 32, align: 32, offset: 32)
!6692 = !{!6693, !6694}
!6693 = !DILocalVariable(name: "fmt", arg: 1, scope: !6635, file: !6529, line: 95, type: !6638)
!6694 = !DILocalVariable(name: "force_no_backtrace", arg: 2, scope: !6635, file: !6529, line: 95, type: !176)
!6695 = !DILocation(line: 95, column: 33, scope: !6635)
!6696 = !DILocation(line: 95, column: 58, scope: !6635)
!6697 = !DILocation(line: 2435, column: 27, scope: !6698)
!6698 = !DILexicalBlockFile(scope: !6635, file: !172, discriminator: 0)
!6699 = !DILocation(line: 2435, column: 9, scope: !6698)
!6700 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9panicking18panic_nounwind_fmt7runtime17h671cc84060e11c33E", scope: !6701, file: !172, line: 2423, type: !6636, scopeLine: 2423, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6702)
!6701 = !DINamespace(name: "panic_nounwind_fmt", scope: !75)
!6702 = !{!6703, !6704, !6705}
!6703 = !DILocalVariable(name: "fmt", arg: 1, scope: !6700, file: !172, line: 2423, type: !6638)
!6704 = !DILocalVariable(name: "force_no_backtrace", arg: 2, scope: !6700, file: !172, line: 2423, type: !176)
!6705 = !DILocalVariable(name: "pi", scope: !6706, file: !6529, line: 114, type: !6707, align: 32)
!6706 = distinct !DILexicalBlock(scope: !6700, file: !6529, line: 114, column: 13)
!6707 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicInfo", scope: !6708, file: !5, size: 96, align: 32, flags: DIFlagPublic, elements: !6709, templateParams: !98, identifier: "74943ad5cfeaa8d7c3439d6f603267a6")
!6708 = !DINamespace(name: "panic_info", scope: !357)
!6709 = !{!6710, !6712, !6713, !6714}
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !6707, file: !5, baseType: !6711, size: 32, align: 32, flags: DIFlagPrivate)
!6711 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !6638, size: 32, align: 32, dwarfAddressSpace: 0)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !6707, file: !5, baseType: !354, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "can_unwind", scope: !6707, file: !5, baseType: !176, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "force_no_backtrace", scope: !6707, file: !5, baseType: !176, size: 8, align: 8, offset: 72, flags: DIFlagPrivate)
!6715 = !DILocation(line: 2423, column: 40, scope: !6700)
!6716 = !DILocation(line: 103, column: 17, scope: !6717)
!6717 = !DILexicalBlockFile(scope: !6700, file: !6529, discriminator: 0)
!6718 = distinct !DISubprogram(name: "panic", linkageName: "_ZN4core9panicking5panic17h4b38e5cd47e6ef1dE", scope: !75, file: !6529, line: 138, type: !6719, scopeLine: 138, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6721)
!6719 = !DISubroutineType(types: !6720)
!6720 = !{null, !374, !354}
!6721 = !{!6722}
!6722 = !DILocalVariable(name: "expr", arg: 1, scope: !6718, file: !6529, line: 138, type: !374)
!6723 = !DILocation(line: 138, column: 20, scope: !6718)
!6724 = !DILocation(line: 150, column: 42, scope: !6718)
!6725 = !DILocation(line: 150, column: 15, scope: !6718)
!6726 = !DILocation(line: 150, column: 5, scope: !6718)
!6727 = distinct !DISubprogram(name: "panic_fmt", linkageName: "_ZN4core9panicking9panic_fmt17hefd9a96c361daab0E", scope: !75, file: !6529, line: 60, type: !6728, scopeLine: 60, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6730)
!6728 = !DISubroutineType(types: !6729)
!6729 = !{null, !6638, !354}
!6730 = !{!6731, !6732}
!6731 = !DILocalVariable(name: "fmt", arg: 1, scope: !6727, file: !6529, line: 60, type: !6638)
!6732 = !DILocalVariable(name: "pi", scope: !6733, file: !6529, line: 72, type: !6707, align: 32)
!6733 = distinct !DILexicalBlock(scope: !6727, file: !6529, line: 72, column: 5)
!6734 = !DILocation(line: 60, column: 24, scope: !6727)
!6735 = !DILocation(line: 62, column: 9, scope: !6727)
!6736 = distinct !DISubprogram(name: "maybe_is_aligned", linkageName: "_ZN4core9ub_checks16maybe_is_aligned17h9d138b3859146c03E", scope: !6737, file: !5237, line: 135, type: !6738, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6740)
!6737 = !DINamespace(name: "ub_checks", scope: !76)
!6738 = !DISubroutineType(types: !6739)
!6739 = !{!176, !5241, !158}
!6740 = !{!6741, !6742}
!6741 = !DILocalVariable(name: "ptr", arg: 1, scope: !6736, file: !5237, line: 135, type: !5241)
!6742 = !DILocalVariable(name: "align", arg: 2, scope: !6736, file: !5237, line: 135, type: !158)
!6743 = !DILocation(line: 135, column: 38, scope: !6736)
!6744 = !DILocation(line: 135, column: 54, scope: !6736)
!6745 = !DILocation(line: 2435, column: 9, scope: !6746)
!6746 = !DILexicalBlockFile(scope: !6736, file: !172, discriminator: 0)
!6747 = !DILocation(line: 145, column: 2, scope: !6736)
!6748 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks16maybe_is_aligned7runtime17h4d6789122cc752f4E", scope: !6749, file: !172, line: 2423, type: !6738, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6750)
!6749 = !DINamespace(name: "maybe_is_aligned", scope: !6737)
!6750 = !{!6751, !6752}
!6751 = !DILocalVariable(name: "ptr", arg: 1, scope: !6748, file: !172, line: 2423, type: !5241)
!6752 = !DILocalVariable(name: "align", arg: 2, scope: !6748, file: !172, line: 2423, type: !158)
!6753 = !DILocation(line: 2423, column: 40, scope: !6748)
!6754 = !DILocation(line: 142, column: 17, scope: !6755)
!6755 = !DILexicalBlockFile(scope: !6748, file: !5237, discriminator: 0)
!6756 = !DILocation(line: 2425, column: 10, scope: !6748)
!6757 = distinct !DISubprogram(name: "check_language_ub", linkageName: "_ZN4core9ub_checks17check_language_ub17h874f2e0dd08c9449E", scope: !6737, file: !5237, line: 96, type: !6758, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6758 = !DISubroutineType(types: !6759)
!6759 = !{!176}
!6760 = !DILocation(line: 98, column: 5, scope: !6757)
!6761 = !DILocation(line: 2435, column: 9, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6757, file: !172, discriminator: 0)
!6763 = !DILocation(line: 109, column: 2, scope: !6757)
!6764 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks17check_language_ub7runtime17h42d0275699dcd24aE", scope: !6765, file: !172, line: 2423, type: !6758, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98)
!6765 = !DINamespace(name: "check_language_ub", scope: !6737)
!6766 = !DILocation(line: 2425, column: 10, scope: !6764)
!6767 = distinct !DISubprogram(name: "maybe_is_aligned_and_not_null", linkageName: "_ZN4core9ub_checks29maybe_is_aligned_and_not_null17h356dc4b78abe46e9E", scope: !6737, file: !5237, line: 119, type: !6768, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6770)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{!176, !5241, !158, !176}
!6770 = !{!6771, !6772, !6773}
!6771 = !DILocalVariable(name: "ptr", arg: 1, scope: !6767, file: !5237, line: 120, type: !5241)
!6772 = !DILocalVariable(name: "align", arg: 2, scope: !6767, file: !5237, line: 121, type: !158)
!6773 = !DILocalVariable(name: "is_zst", arg: 3, scope: !6767, file: !5237, line: 122, type: !176)
!6774 = !DILocation(line: 120, column: 5, scope: !6767)
!6775 = !DILocation(line: 121, column: 5, scope: !6767)
!6776 = !DILocation(line: 122, column: 5, scope: !6767)
!6777 = !DILocation(line: 125, column: 5, scope: !6767)
!6778 = !DILocation(line: 125, column: 38, scope: !6767)
!6779 = !DILocation(line: 126, column: 2, scope: !6767)
!6780 = !DILocation(line: 125, column: 53, scope: !6767)
!6781 = !DILocation(line: 125, column: 48, scope: !6767)
!6782 = !DILocation(line: 125, column: 37, scope: !6767)
!6783 = distinct !DISubprogram(name: "into<u16, u32>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h241f1438f7071ec9E", scope: !6785, file: !6784, line: 777, type: !6786, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6790, retainedNodes: !6788)
!6784 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "731b373eab15d9a7565b3b74914b48da")
!6785 = !DINamespace(name: "{impl#3}", scope: !1093)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{!108, !105, !354}
!6788 = !{!6789}
!6789 = !DILocalVariable(name: "self", arg: 1, scope: !6783, file: !6784, line: 777, type: !105)
!6790 = !{!134, !6791}
!6791 = !DITemplateTypeParameter(name: "U", type: !108)
!6792 = !DILocation(line: 777, column: 13, scope: !6783)
!6793 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !6794)
!6794 = distinct !DILocation(line: 778, column: 9, scope: !6783)
!6795 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !6794)
!6796 = !DILocation(line: 779, column: 6, scope: !6783)
!6797 = distinct !DISubprogram(name: "into<i16, i32>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hf90f24832a995a49E", scope: !6785, file: !6784, line: 777, type: !6798, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6802, retainedNodes: !6800)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!7, !762, !354}
!6800 = !{!6801}
!6801 = !DILocalVariable(name: "self", arg: 1, scope: !6797, file: !6784, line: 777, type: !762)
!6802 = !{!5018, !6803}
!6803 = !DITemplateTypeParameter(name: "U", type: !7)
!6804 = !DILocation(line: 777, column: 13, scope: !6797)
!6805 = !DILocation(line: 78, column: 21, scope: !2546, inlinedAt: !6806)
!6806 = distinct !DILocation(line: 778, column: 9, scope: !6797)
!6807 = !DILocation(line: 79, column: 17, scope: !2546, inlinedAt: !6806)
!6808 = !DILocation(line: 779, column: 6, scope: !6797)
!6809 = distinct !DISubprogram(name: "try_into<&[u8], [u8; 2]>", linkageName: "_ZN53_$LT$T$u20$as$u20$core..convert..TryInto$LT$U$GT$$GT$8try_into17h40a936c5f379619dE", scope: !6810, file: !6784, line: 818, type: !5874, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6813, retainedNodes: !6811)
!6810 = !DINamespace(name: "{impl#6}", scope: !1093)
!6811 = !{!6812}
!6812 = !DILocalVariable(name: "self", arg: 1, scope: !6809, file: !6784, line: 818, type: !485)
!6813 = !{!6814, !5453}
!6814 = !DITemplateTypeParameter(name: "T", type: !485)
!6815 = !DILocation(line: 818, column: 17, scope: !6809)
!6816 = !DILocation(line: 819, column: 9, scope: !6809)
!6817 = !DILocation(line: 820, column: 6, scope: !6809)
!6818 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::skip::Skip<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u16>, core::slice::iter::IterMut<u32>>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h343835d0ac7718bfE", scope: !6820, file: !6819, line: 319, type: !6822, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6826, retainedNodes: !6824)
!6819 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "06509ee86e4371045220ddb87ad17093")
!6820 = !DINamespace(name: "{impl#0}", scope: !6821)
!6821 = !DINamespace(name: "collect", scope: !5569)
!6822 = !DISubroutineType(types: !6823)
!6823 = !{!115, !115}
!6824 = !{!6825}
!6825 = !DILocalVariable(name: "self", arg: 1, scope: !6818, file: !6819, line: 319, type: !115)
!6826 = !{!6827}
!6827 = !DITemplateTypeParameter(name: "I", type: !115)
!6828 = !DILocation(line: 319, column: 18, scope: !6818)
!6829 = !DILocation(line: 320, column: 9, scope: !6818)
!6830 = !DILocation(line: 321, column: 6, scope: !6818)
!6831 = distinct !DISubprogram(name: "into_iter<core::ops::range::Range<u8>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h350134702857a6b3E", scope: !6820, file: !6819, line: 319, type: !6832, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6836, retainedNodes: !6834)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{!3739, !3739}
!6834 = !{!6835}
!6835 = !DILocalVariable(name: "self", arg: 1, scope: !6831, file: !6819, line: 319, type: !3739)
!6836 = !{!6837}
!6837 = !DITemplateTypeParameter(name: "I", type: !3739)
!6838 = !DILocation(line: 319, column: 18, scope: !6831)
!6839 = !DILocation(line: 321, column: 6, scope: !6831)
!6840 = distinct !DISubprogram(name: "into_iter<core::slice::iter::IterMut<i16>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4b888a6049822196E", scope: !6820, file: !6819, line: 319, type: !6841, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6845, retainedNodes: !6843)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!6097, !6097}
!6843 = !{!6844}
!6844 = !DILocalVariable(name: "self", arg: 1, scope: !6840, file: !6819, line: 319, type: !6097)
!6845 = !{!6846}
!6846 = !DITemplateTypeParameter(name: "I", type: !6097)
!6847 = !DILocation(line: 319, column: 18, scope: !6840)
!6848 = !DILocation(line: 321, column: 6, scope: !6840)
!6849 = distinct !DISubprogram(name: "into_iter<core::slice::iter::IterMut<u32>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h657e6563b344c1feE", scope: !6820, file: !6819, line: 319, type: !6850, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !6854, retainedNodes: !6852)
!6850 = !DISubroutineType(types: !6851)
!6851 = !{!142, !142}
!6852 = !{!6853}
!6853 = !DILocalVariable(name: "self", arg: 1, scope: !6849, file: !6819, line: 319, type: !142)
!6854 = !{!6855}
!6855 = !DITemplateTypeParameter(name: "I", type: !142)
!6856 = !DILocation(line: 319, column: 18, scope: !6849)
!6857 = !DILocation(line: 321, column: 6, scope: !6849)
!6858 = distinct !DISubprogram(name: "from_checksum", linkageName: "_ZN6adler27Adler3213from_checksum17h266684498a3499f2E", scope: !494, file: !6859, line: 125, type: !6860, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !6862, retainedNodes: !6863)
!6859 = !DIFile(filename: "/Users/namse/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs", directory: "", checksumkind: CSK_MD5, checksum: "6b9835bbdaeafbb9db19455291f35348")
!6860 = !DISubroutineType(types: !6861)
!6861 = !{!494, !108}
!6862 = !DISubprogram(name: "from_checksum", linkageName: "_ZN6adler27Adler3213from_checksum17h266684498a3499f2E", scope: !494, file: !6859, line: 125, type: !6860, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!6863 = !{!6864}
!6864 = !DILocalVariable(name: "sum", arg: 1, scope: !6858, file: !6859, line: 125, type: !108)
!6865 = !DILocation(line: 125, column: 32, scope: !6858)
!6866 = !DILocation(line: 127, column: 16, scope: !6858)
!6867 = !DILocation(line: 128, column: 16, scope: !6858)
!6868 = !DILocation(line: 130, column: 6, scope: !6858)
!6869 = distinct !DISubprogram(name: "checksum", linkageName: "_ZN6adler27Adler328checksum17h4b33d198b898b04bE", scope: !494, file: !6859, line: 134, type: !6870, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, declaration: !6873, retainedNodes: !6874)
!6870 = !DISubroutineType(types: !6871)
!6871 = !{!108, !6872}
!6872 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&adler2::Adler32", baseType: !494, size: 32, align: 32, dwarfAddressSpace: 0)
!6873 = !DISubprogram(name: "checksum", linkageName: "_ZN6adler27Adler328checksum17h4b33d198b898b04bE", scope: !494, file: !6859, line: 134, type: !6870, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !98)
!6874 = !{!6875}
!6875 = !DILocalVariable(name: "self", arg: 1, scope: !6869, file: !6859, line: 134, type: !6872)
!6876 = !DILocation(line: 134, column: 21, scope: !6869)
!6877 = !DILocation(line: 135, column: 20, scope: !6869)
!6878 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !6879)
!6879 = distinct !DILocation(line: 135, column: 10, scope: !6869)
!6880 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !6879)
!6881 = !DILocation(line: 135, column: 9, scope: !6869)
!6882 = !DILocation(line: 135, column: 47, scope: !6869)
!6883 = !DILocation(line: 78, column: 21, scope: !1089, inlinedAt: !6884)
!6884 = distinct !DILocation(line: 135, column: 37, scope: !6869)
!6885 = !DILocation(line: 79, column: 17, scope: !1089, inlinedAt: !6884)
!6886 = !DILocation(line: 136, column: 6, scope: !6869)
!6887 = distinct !DISubprogram(name: "eq", linkageName: "_ZN74_$LT$miniz_oxide..inflate..TINFLStatus$u20$as$u20$core..cmp..PartialEq$GT$2eq17h7c9044e26ac2fa86E", scope: !6888, file: !544, line: 28, type: !5039, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6889)
!6888 = !DINamespace(name: "{impl#4}", scope: !25)
!6889 = !{!6890, !6891, !6892, !6894}
!6890 = !DILocalVariable(name: "self", arg: 1, scope: !6887, file: !544, line: 28, type: !5041)
!6891 = !DILocalVariable(name: "other", arg: 2, scope: !6887, file: !544, line: 28, type: !5041)
!6892 = !DILocalVariable(name: "__self_discr", scope: !6893, file: !544, line: 28, type: !26, align: 8)
!6893 = distinct !DILexicalBlock(scope: !6887, file: !544, line: 28, column: 23)
!6894 = !DILocalVariable(name: "__arg1_discr", scope: !6895, file: !544, line: 28, type: !26, align: 8)
!6895 = distinct !DILexicalBlock(scope: !6893, file: !544, line: 28, column: 23)
!6896 = !DILocation(line: 28, column: 23, scope: !6887)
!6897 = !DILocation(line: 28, column: 23, scope: !6893)
!6898 = !DILocation(line: 28, column: 23, scope: !6895)
!6899 = !DILocation(line: 28, column: 32, scope: !6887)
!6900 = distinct !DISubprogram(name: "eq", linkageName: "_ZN74_$LT$miniz_oxide..inflate..core..State$u20$as$u20$core..cmp..PartialEq$GT$2eq17h171aee10e239d376E", scope: !6901, file: !729, line: 408, type: !5054, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6902)
!6901 = !DINamespace(name: "{impl#7}", scope: !36)
!6902 = !{!6903, !6904, !6905, !6908}
!6903 = !DILocalVariable(name: "self", arg: 1, scope: !6900, file: !729, line: 408, type: !5056)
!6904 = !DILocalVariable(name: "other", arg: 2, scope: !6900, file: !729, line: 408, type: !5056)
!6905 = !DILocalVariable(name: "__self_discr", scope: !6906, file: !729, line: 408, type: !6907, align: 32)
!6906 = distinct !DILexicalBlock(scope: !6900, file: !729, line: 408, column: 23)
!6907 = !DIBasicType(name: "isize", size: 32, encoding: DW_ATE_signed)
!6908 = !DILocalVariable(name: "__arg1_discr", scope: !6909, file: !729, line: 408, type: !6907, align: 32)
!6909 = distinct !DILexicalBlock(scope: !6906, file: !729, line: 408, column: 23)
!6910 = !DILocation(line: 408, column: 23, scope: !6900)
!6911 = !DILocation(line: 408, column: 23, scope: !6906)
!6912 = !DILocation(line: 408, column: 23, scope: !6909)
!6913 = !DILocation(line: 408, column: 32, scope: !6900)
!6914 = distinct !DISubprogram(name: "get<i16>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h13ac0713d620d1c3E", scope: !6915, file: !263, line: 213, type: !6916, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !6918)
!6915 = !DINamespace(name: "{impl#2}", scope: !265)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{!5995, !158, !6009}
!6918 = !{!6919, !6920}
!6919 = !DILocalVariable(name: "self", arg: 1, scope: !6914, file: !263, line: 213, type: !158)
!6920 = !DILocalVariable(name: "slice", arg: 2, scope: !6914, file: !263, line: 213, type: !6009)
!6921 = !DILocation(line: 213, column: 12, scope: !6914)
!6922 = !DILocation(line: 213, column: 18, scope: !6914)
!6923 = !DILocation(line: 214, column: 12, scope: !6914)
!6924 = !DILocation(line: 218, column: 13, scope: !6914)
!6925 = !DILocation(line: 214, column: 9, scope: !6914)
!6926 = !DILocation(line: 216, column: 27, scope: !6914)
!6927 = !DILocation(line: 216, column: 22, scope: !6914)
!6928 = !DILocation(line: 220, column: 6, scope: !6914)
!6929 = distinct !DISubprogram(name: "get<core::cell::Cell<u8>>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17he077b6ed7bbbf197E", scope: !6915, file: !263, line: 213, type: !6930, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !303, retainedNodes: !6932)
!6930 = !DISubroutineType(types: !6931)
!6931 = !{!6025, !158, !276}
!6932 = !{!6933, !6934}
!6933 = !DILocalVariable(name: "self", arg: 1, scope: !6929, file: !263, line: 213, type: !158)
!6934 = !DILocalVariable(name: "slice", arg: 2, scope: !6929, file: !263, line: 213, type: !276)
!6935 = !DILocation(line: 213, column: 12, scope: !6929)
!6936 = !DILocation(line: 213, column: 18, scope: !6929)
!6937 = !DILocation(line: 214, column: 12, scope: !6929)
!6938 = !DILocation(line: 218, column: 13, scope: !6929)
!6939 = !DILocation(line: 214, column: 9, scope: !6929)
!6940 = !DILocation(line: 216, column: 27, scope: !6929)
!6941 = !DILocation(line: 216, column: 22, scope: !6929)
!6942 = !DILocation(line: 220, column: 6, scope: !6929)
!6943 = distinct !DISubprogram(name: "spec_fill", linkageName: "_ZN78_$LT$$u5b$i16$u5d$$u20$as$u20$core..slice..specialize..SpecFill$LT$i16$GT$$GT$9spec_fill17hddafaa17e17af481E", scope: !6945, file: !6944, line: 47, type: !6047, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !98, retainedNodes: !6947)
!6944 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/specialize.rs", directory: "", checksumkind: CSK_MD5, checksum: "f1d0082ceee9fec2051dd658eadcea9b")
!6945 = !DINamespace(name: "{impl#5}", scope: !6946)
!6946 = !DINamespace(name: "specialize", scope: !124)
!6947 = !{!6948, !6949, !6950, !6952, !6954}
!6948 = !DILocalVariable(name: "self", arg: 1, scope: !6943, file: !6944, line: 47, type: !5432)
!6949 = !DILocalVariable(name: "value", arg: 2, scope: !6943, file: !6944, line: 47, type: !762)
!6950 = !DILocalVariable(name: "bytes", scope: !6951, file: !6944, line: 51, type: !2441, align: 8)
!6951 = distinct !DILexicalBlock(scope: !6943, file: !6944, line: 51, column: 21)
!6952 = !DILocalVariable(name: "iter", scope: !6953, file: !6944, line: 60, type: !6097, align: 32)
!6953 = distinct !DILexicalBlock(scope: !6943, file: !6944, line: 60, column: 17)
!6954 = !DILocalVariable(name: "item", scope: !6955, file: !6944, line: 60, type: !6106, align: 32)
!6955 = distinct !DILexicalBlock(scope: !6953, file: !6944, line: 60, column: 45)
!6956 = !DILocation(line: 47, column: 26, scope: !6943)
!6957 = !DILocation(line: 47, column: 37, scope: !6943)
!6958 = !DILocation(line: 51, column: 25, scope: !6951)
!6959 = !DILocation(line: 60, column: 29, scope: !6953)
!6960 = !DILocation(line: 50, column: 55, scope: !6943)
!6961 = !DILocation(line: 60, column: 34, scope: !6943)
!6962 = !DILocation(line: 60, column: 29, scope: !6943)
!6963 = !DILocation(line: 60, column: 17, scope: !6953)
!6964 = !DILocation(line: 51, column: 39, scope: !6943)
!6965 = !DILocation(line: 52, column: 57, scope: !6951)
!6966 = !DILocation(line: 52, column: 56, scope: !6951)
!6967 = !DILocation(line: 52, column: 33, scope: !6951)
!6968 = !DILocation(line: 52, column: 24, scope: !6951)
!6969 = !DILocalVariable(name: "self", arg: 1, scope: !6970, file: !5898, line: 755, type: !5432)
!6970 = distinct !DISubprogram(name: "as_mut_ptr<i16>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17h22d1c02119c64f9dE", scope: !5899, file: !5898, line: 755, type: !6971, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !6973)
!6971 = !DISubroutineType(types: !6972)
!6972 = !{!6101, !5432}
!6973 = !{!6969}
!6974 = !DILocation(line: 755, column: 29, scope: !6970, inlinedAt: !6975)
!6975 = distinct !DILocation(line: 55, column: 65, scope: !6951)
!6976 = !DILocation(line: 55, column: 79, scope: !6951)
!6977 = !DILocation(line: 55, column: 29, scope: !6951)
!6978 = !DILocation(line: 60, column: 21, scope: !6953)
!6979 = !DILocation(line: 60, column: 21, scope: !6955)
!6980 = !DILocation(line: 61, column: 21, scope: !6955)
!6981 = !DILocation(line: 63, column: 14, scope: !6943)
!6982 = distinct !DISubprogram(name: "eq<i16>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h007cd6778ae68c18E", scope: !6983, file: !5372, line: 1686, type: !6984, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !6987)
!6983 = !DINamespace(name: "{impl#15}", scope: !128)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!176, !6986, !6986}
!6986 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<i16>", baseType: !5404, size: 32, align: 32, dwarfAddressSpace: 0)
!6987 = !{!6988, !6989}
!6988 = !DILocalVariable(name: "self", arg: 1, scope: !6982, file: !5372, line: 1686, type: !6986)
!6989 = !DILocalVariable(name: "other", arg: 2, scope: !6982, file: !5372, line: 1686, type: !6986)
!6990 = !DILocation(line: 1686, column: 11, scope: !6982)
!6991 = !DILocation(line: 1686, column: 18, scope: !6982)
!6992 = !DILocation(line: 1687, column: 9, scope: !6982)
!6993 = !DILocation(line: 401, column: 25, scope: !6132, inlinedAt: !6994)
!6994 = distinct !DILocation(line: 1687, column: 14, scope: !6982)
!6995 = !DILocation(line: 1687, column: 26, scope: !6982)
!6996 = !DILocation(line: 401, column: 25, scope: !6132, inlinedAt: !6997)
!6997 = distinct !DILocation(line: 1687, column: 32, scope: !6982)
!6998 = !DILocation(line: 1688, column: 6, scope: !6982)
!6999 = distinct !DISubprogram(name: "__iterator_get_unchecked<u16>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hf83e2897f8d561edE", scope: !7001, file: !7000, line: 395, type: !7002, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !133, retainedNodes: !7005)
!7000 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "330935a329cc74f5254abe12d5a6c8e3")
!7001 = !DINamespace(name: "{impl#166}", scope: !123)
!7002 = !DISubroutineType(types: !7003)
!7003 = !{!104, !7004, !158}
!7004 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u16>", baseType: !122, size: 32, align: 32, dwarfAddressSpace: 0)
!7005 = !{!7006, !7007}
!7006 = !DILocalVariable(name: "self", arg: 1, scope: !6999, file: !7000, line: 395, type: !7004)
!7007 = !DILocalVariable(name: "idx", arg: 2, scope: !6999, file: !7000, line: 395, type: !158)
!7008 = !DILocation(line: 395, column: 48, scope: !6999)
!7009 = !DILocation(line: 395, column: 59, scope: !6999)
!7010 = !DILocation(line: 406, column: 42, scope: !6999)
!7011 = !DILocation(line: 401, column: 25, scope: !5382, inlinedAt: !7012)
!7012 = distinct !DILocation(line: 406, column: 51, scope: !6999)
!7013 = !DILocalVariable(name: "self", arg: 1, scope: !7014, file: !5262, line: 927, type: !5267)
!7014 = distinct !DISubprogram(name: "add<u16>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hb937fb75b4f16bb2E", scope: !5263, file: !5262, line: 927, type: !7015, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !133, retainedNodes: !7017)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!5267, !5267, !158, !354}
!7017 = !{!7013, !7018}
!7018 = !DILocalVariable(name: "count", arg: 2, scope: !7014, file: !5262, line: 927, type: !158)
!7019 = !DILocation(line: 927, column: 29, scope: !7014, inlinedAt: !7020)
!7020 = distinct !DILocation(line: 406, column: 60, scope: !6999)
!7021 = !DILocation(line: 927, column: 35, scope: !7014, inlinedAt: !7020)
!7022 = !DILocation(line: 77, column: 35, scope: !7023, inlinedAt: !7020)
!7023 = !DILexicalBlockFile(scope: !7014, file: !5237, discriminator: 0)
!7024 = !DILocation(line: 78, column: 17, scope: !7023, inlinedAt: !7020)
!7025 = !DILocation(line: 961, column: 18, scope: !7014, inlinedAt: !7020)
!7026 = !DILocation(line: 407, column: 14, scope: !6999)
!7027 = distinct !DISubprogram(name: "size_hint<u16>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h369cd18bb8bc73a0E", scope: !7001, file: !7000, line: 194, type: !7028, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !133, retainedNodes: !7034)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{!7030, !5626}
!7030 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !5, size: 96, align: 32, elements: !7031, templateParams: !98, identifier: "7ece7fed19dbe5ef878c4a231d971688")
!7031 = !{!7032, !7033}
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7030, file: !5, baseType: !158, size: 32, align: 32)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7030, file: !5, baseType: !2367, size: 64, align: 32, offset: 32)
!7034 = !{!7035, !7036, !7038, !7040}
!7035 = !DILocalVariable(name: "self", arg: 1, scope: !7027, file: !7000, line: 194, type: !5626)
!7036 = !DILocalVariable(name: "exact", scope: !7037, file: !7000, line: 195, type: !158, align: 32)
!7037 = distinct !DILexicalBlock(scope: !7027, file: !7000, line: 195, column: 17)
!7038 = !DILocalVariable(name: "len", scope: !7039, file: !7000, line: 29, type: !158, align: 32)
!7039 = distinct !DILexicalBlock(scope: !7027, file: !7000, line: 29, column: 13)
!7040 = !DILocalVariable(name: "end", scope: !7041, file: !7000, line: 33, type: !127, align: 32)
!7041 = distinct !DILexicalBlock(scope: !7027, file: !7000, line: 33, column: 13)
!7042 = !DILocation(line: 194, column: 26, scope: !7027)
!7043 = !DILocation(line: 195, column: 21, scope: !7037)
!7044 = !DILocation(line: 28, column: 12, scope: !7027)
!7045 = !DILocation(line: 33, column: 72, scope: !7027)
!7046 = !DILocation(line: 33, column: 33, scope: !7027)
!7047 = !DILocation(line: 33, column: 17, scope: !7041)
!7048 = !DILocation(line: 57, column: 51, scope: !7041)
!7049 = !DILocation(line: 57, column: 30, scope: !7041)
!7050 = !DILocation(line: 196, column: 18, scope: !7037)
!7051 = !DILocation(line: 196, column: 30, scope: !7037)
!7052 = !DILocation(line: 196, column: 17, scope: !7037)
!7053 = !DILocation(line: 197, column: 14, scope: !7027)
!7054 = distinct !DISubprogram(name: "next<i16>", linkageName: "_ZN94_$LT$core..slice..iter..IterMut$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1a4a9b2e9f32624cE", scope: !7055, file: !7000, line: 156, type: !7056, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, retainedNodes: !7070)
!7055 = !DINamespace(name: "{impl#174}", scope: !123)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!7058, !7069}
!7058 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&mut i16>", scope: !92, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !7059, templateParams: !98, identifier: "13307592ae899c741e52195fe389d2df")
!7059 = !{!7060}
!7060 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7058, file: !5, size: 32, align: 32, elements: !7061, templateParams: !98, identifier: "2da1f0b04ca6912bbedce27e2e8f716", discriminator: !7068)
!7061 = !{!7062, !7064}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7060, file: !5, baseType: !7063, size: 32, align: 32, extraData: i32 0)
!7063 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7058, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !98, templateParams: !6104, identifier: "d1793c2caf66e9398b6782308a7cd5c5")
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7060, file: !5, baseType: !7065, size: 32, align: 32)
!7065 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7058, file: !5, size: 32, align: 32, flags: DIFlagPublic, elements: !7066, templateParams: !6104, identifier: "43a2b7a7c658520579e6dd328471b402")
!7066 = !{!7067}
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7065, file: !5, baseType: !6106, size: 32, align: 32, flags: DIFlagPublic)
!7068 = !DIDerivedType(tag: DW_TAG_member, scope: !7058, file: !5, baseType: !108, size: 32, align: 32, flags: DIFlagArtificial)
!7069 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::IterMut<i16>", baseType: !6097, size: 32, align: 32, dwarfAddressSpace: 0)
!7070 = !{!7071, !7072, !7074, !7076}
!7071 = !DILocalVariable(name: "self", arg: 1, scope: !7054, file: !7000, line: 156, type: !7069)
!7072 = !DILocalVariable(name: "ptr", scope: !7073, file: !7000, line: 160, type: !5404, align: 32)
!7073 = distinct !DILexicalBlock(scope: !7054, file: !7000, line: 160, column: 17)
!7074 = !DILocalVariable(name: "end_or_len", scope: !7075, file: !7000, line: 161, type: !6101, align: 32)
!7075 = distinct !DILexicalBlock(scope: !7073, file: !7000, line: 161, column: 17)
!7076 = !DILocalVariable(name: "len", scope: !7077, file: !7000, line: 166, type: !158, align: 32)
!7077 = distinct !DILexicalBlock(scope: !7075, file: !7000, line: 166, column: 25)
!7078 = !DILocation(line: 156, column: 21, scope: !7054)
!7079 = !DILocation(line: 160, column: 21, scope: !7073)
!7080 = !DILocation(line: 160, column: 27, scope: !7054)
!7081 = !DILocation(line: 161, column: 34, scope: !7073)
!7082 = !DILocation(line: 161, column: 21, scope: !7075)
!7083 = !DILocation(line: 165, column: 24, scope: !7075)
!7084 = !DILocation(line: 179, column: 35, scope: !7075)
!7085 = !DILocation(line: 179, column: 28, scope: !7075)
!7086 = !DILocation(line: 184, column: 36, scope: !7075)
!7087 = !DILocalVariable(name: "self", arg: 1, scope: !7088, file: !5372, line: 651, type: !5404)
!7088 = distinct !DISubprogram(name: "add<i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17he8d4cd66099240c5E", scope: !5404, file: !5372, line: 651, type: !7089, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !7091, retainedNodes: !7092)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{!5404, !5404, !158}
!7091 = !DISubprogram(name: "add<i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17he8d4cd66099240c5E", scope: !5404, file: !5372, line: 651, type: !7089, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!7092 = !{!7087, !7093}
!7093 = !DILocalVariable(name: "count", arg: 2, scope: !7088, file: !5372, line: 651, type: !158)
!7094 = !DILocation(line: 651, column: 29, scope: !7088, inlinedAt: !7095)
!7095 = distinct !DILocation(line: 184, column: 40, scope: !7075)
!7096 = !DILocation(line: 651, column: 35, scope: !7088, inlinedAt: !7095)
!7097 = !DILocation(line: 401, column: 25, scope: !6132, inlinedAt: !7098)
!7098 = distinct !DILocation(line: 659, column: 61, scope: !7088, inlinedAt: !7095)
!7099 = !DILocation(line: 659, column: 37, scope: !7088, inlinedAt: !7095)
!7100 = !DILocation(line: 184, column: 25, scope: !7075)
!7101 = !DILocation(line: 165, column: 21, scope: !7075)
!7102 = !DILocation(line: 180, column: 36, scope: !7075)
!7103 = !DILocation(line: 0, scope: !7104)
!7104 = !DILexicalBlockFile(scope: !7075, file: !507, discriminator: 0)
!7105 = !DILocation(line: 189, column: 27, scope: !7075)
!7106 = !DILocalVariable(name: "self", arg: 1, scope: !7107, file: !5372, line: 478, type: !7110)
!7107 = distinct !DISubprogram(name: "as_mut<i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h67848d4e0c76b485E", scope: !5404, file: !5372, line: 478, type: !7108, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !5017, declaration: !7111, retainedNodes: !7112)
!7108 = !DISubroutineType(types: !7109)
!7109 = !{!6106, !7110}
!7110 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ptr::non_null::NonNull<i16>", baseType: !5404, size: 32, align: 32, dwarfAddressSpace: 0)
!7111 = !DISubprogram(name: "as_mut<i16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h67848d4e0c76b485E", scope: !5404, file: !5372, line: 478, type: !7108, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !5017)
!7112 = !{!7106}
!7113 = !DILocation(line: 478, column: 36, scope: !7107, inlinedAt: !7114)
!7114 = distinct !DILocation(line: 189, column: 32, scope: !7075)
!7115 = !DILocation(line: 481, column: 24, scope: !7107, inlinedAt: !7114)
!7116 = !DILocation(line: 401, column: 25, scope: !6132, inlinedAt: !7117)
!7117 = distinct !DILocation(line: 481, column: 29, scope: !7107, inlinedAt: !7114)
!7118 = !DILocation(line: 189, column: 21, scope: !7075)
!7119 = !DILocation(line: 191, column: 14, scope: !7054)
!7120 = distinct !DISubprogram(name: "index_mut<u8>", linkageName: "_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hb684f07608ac643eE", scope: !7121, file: !263, line: 655, type: !7122, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, templateParams: !287, retainedNodes: !7124)
!7121 = !DINamespace(name: "{impl#9}", scope: !265)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{!655, !5782, !655, !354}
!7124 = !{!7125, !7126, !7127}
!7125 = !DILocalVariable(name: "self", scope: !7120, file: !263, line: 655, type: !5782, align: 8)
!7126 = !DILocalVariable(name: "slice", arg: 2, scope: !7120, file: !263, line: 655, type: !655)
!7127 = !DILocalVariable(arg: 1, scope: !7120, file: !263, line: 655, type: !5782)
!7128 = !DILocation(line: 655, column: 18, scope: !7120)
!7129 = !DILocation(line: 655, column: 24, scope: !7120)
!7130 = !DILocation(line: 657, column: 6, scope: !7120)
