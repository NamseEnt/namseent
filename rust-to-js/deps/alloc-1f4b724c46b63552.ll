; ModuleID = 'alloc.ffb8e4d6f182d685-cgu.0'
source_filename = "alloc.ffb8e4d6f182d685-cgu.0"
target datalayout = "e-m:e-p:32:32-p10:8:8-p20:8:8-i64:64-i128:128-n32:64-S128-ni:1:10:20"
target triple = "wasm32-unknown-wasi"

%"core::fmt::rt::Argument<'_>" = type { %"core::fmt::rt::ArgumentType<'_>" }
%"core::fmt::rt::ArgumentType<'_>" = type { ptr, [1 x i32] }

@alloc_531b0048d6ed72a56ae658b8fe4d292a = private unnamed_addr constant [21 x i8] c"memory allocation of ", align 1
@alloc_e7770b048557af7ef3910860746912e2 = private unnamed_addr constant [13 x i8] c" bytes failed", align 1
@alloc_b0372332874b832f149657ebe0da4c28 = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_531b0048d6ed72a56ae658b8fe4d292a, [4 x i8] c"\15\00\00\00", ptr @alloc_e7770b048557af7ef3910860746912e2, [4 x i8] c"\0D\00\00\00" }>, align 4
@alloc_dc195465c2ba08ac4896fcd3aeb3f123 = private unnamed_addr constant [109 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/alloc.rs\00", align 1
@alloc_0f85af4e4b50d49339da0095a5b54748 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\B7\01\00\00\0D\00\00\00" }>, align 4
@alloc_7f0301cd9d20b34f44b6ad3fa9e5dd94 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\B5\01\00\00\0D\00\00\00" }>, align 4
@alloc_7e0cd81f9dcb179626435c932d0b5a52 = private unnamed_addr constant [214 x i8] c"unsafe precondition(s) violated: slice::get_unchecked requires that the range is within the slice\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_a3331783a74f824c9e2a775ddfbb7a7e = private unnamed_addr constant [114 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs\00", align 1
@alloc_3b37ba1fe65d44a87ff5ceffa93f0232 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_a3331783a74f824c9e2a775ddfbb7a7e, [12 x i8] c"q\00\00\00\01\02\00\00 \00\00\00" }>, align 4
@alloc_96423e4914ce6c3c6434a312611a30bd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_a3331783a74f824c9e2a775ddfbb7a7e, [12 x i8] c"q\00\00\00\07\02\00\00 \00\00\00" }>, align 4
@alloc_fb19637fa1d463fd9b10bf1ed43b6835 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_a3331783a74f824c9e2a775ddfbb7a7e, [12 x i8] c"q\00\00\00(\02\00\00,\00\00\00" }>, align 4
@alloc_3d611fba6c663fc09ae800b5a8dbe19f = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/drain.rs\00", align 1
@alloc_c83a73e9952866e0853bd8b8ce6f65cb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3d611fba6c663fc09ae800b5a8dbe19f, [12 x i8] c"p\00\00\00\BC\00\00\00;\00\00\00" }>, align 4
@alloc_f6c4b1bfa0d849397c96c41b1e50ae1f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3d611fba6c663fc09ae800b5a8dbe19f, [12 x i8] c"p\00\00\00\BD\00\00\00?\00\00\00" }>, align 4
@alloc_51b1f99f1456b531b5e9756817166300 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3d611fba6c663fc09ae800b5a8dbe19f, [12 x i8] c"p\00\00\00\C0\00\00\00,\00\00\00" }>, align 4
@anon.f99686d6bd00e1abcb4284a1418719c5.0 = private unnamed_addr constant <{ ptr, ptr, ptr, ptr }> <{ ptr inttoptr (i32 -1135122064 to ptr), ptr inttoptr (i32 -789543373 to ptr), ptr inttoptr (i32 1123027233 to ptr), ptr inttoptr (i32 2012253951 to ptr) }>, align 4
@anon.f99686d6bd00e1abcb4284a1418719c5.1 = private unnamed_addr constant <{ ptr, ptr, ptr, ptr }> <{ ptr inttoptr (i32 222384729 to ptr), ptr inttoptr (i32 590417200 to ptr), ptr inttoptr (i32 -822453523 to ptr), ptr inttoptr (i32 553707196 to ptr) }>, align 4
@alloc_15460aa51f11434e4e7bb1a8c5e3333b = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ffi/c_str.rs\00", align 1
@alloc_b0677a05385078818fd397d323594923 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_15460aa51f11434e4e7bb1a8c5e3333b, [12 x i8] c"o\00\00\00\98\01\00\00:\00\00\00" }>, align 4
@alloc_d74285fe2bb24e0e5fc13cd1cd1415d9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_15460aa51f11434e4e7bb1a8c5e3333b, [12 x i8] c"o\00\00\00\98\01\00\004\00\00\00" }>, align 4
@alloc_8d17c0d7765c1f1b0dc7acf59030ea5a = private unnamed_addr constant [66 x i8] c"assertion failed: !bytes.is_empty() && bytes[bytes.len() - 1] == 0", align 1
@alloc_4734734726776c28171adc37e518bde7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_15460aa51f11434e4e7bb1a8c5e3333b, [12 x i8] c"o\00\00\00\98\01\00\00\11\00\00\00" }>, align 4
@alloc_f4bb89cd01a4042b909578d4bce679d0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_15460aa51f11434e4e7bb1a8c5e3333b, [12 x i8] c"o\00\00\00/\02\00\008\00\00\00" }>, align 4
@alloc_48f1e36bbecaa5baf2b51523fa0f7d48 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_15460aa51f11434e4e7bb1a8c5e3333b, [12 x i8] c"o\00\00\00/\02\00\00\12\00\00\00" }>, align 4
@alloc_656acfad1949f55fb70cf60279b86556 = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs\00", align 1
@alloc_99d03419440bec9986d39aaf03fb0991 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_656acfad1949f55fb70cf60279b86556, [12 x i8] c"m\00\00\00\83\02\00\00.\00\00\00" }>, align 4
@alloc_d70fe56c8b72f00119cb15c86956890a = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs\00", align 1
@alloc_8c1b8a14f2d6613fa49a4cca211f16a5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d70fe56c8b72f00119cb15c86956890a, [12 x i8] c"m\00\00\006\02\00\00\11\00\00\00" }>, align 4
@alloc_cb27e286fefcfa06fde3b8c2148752ec = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d70fe56c8b72f00119cb15c86956890a, [12 x i8] c"m\00\00\00\1D\02\00\00\11\00\00\00" }>, align 4
@alloc_3e1ebac14318b612ab4efabc52799932 = private unnamed_addr constant [186 x i8] c"unsafe precondition(s) violated: usize::unchecked_add cannot overflow\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_db07ae5a9ce650d9b7cc970d048e6f0c = private unnamed_addr constant [186 x i8] c"unsafe precondition(s) violated: usize::unchecked_mul cannot overflow\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_d3ea8a12337a4535ec15ce1eda77c8dd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d70fe56c8b72f00119cb15c86956890a, [12 x i8] c"m\00\00\00\DA\04\00\00\05\00\00\00" }>, align 4
@alloc_0d97bde9555861f1f32215c1f3ce127d = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs\00", align 1
@alloc_dd33e9f7b7e993f204455249b11b870d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_0d97bde9555861f1f32215c1f3ce127d, [12 x i8] c"m\00\00\00\BC\02\00\00\09\00\00\00" }>, align 4
@alloc_dd79dfae92e8fdc23813c4c7a1b7cf72 = private unnamed_addr constant [228 x i8] c"unsafe precondition(s) violated: ptr::write_bytes requires that the destination pointer is aligned and non-null\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_15a52d1a884c78a5de92a2463d39823d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_0d97bde9555861f1f32215c1f3ce127d, [12 x i8] c"m\00\00\00\0F\02\00\00\05\00\00\00" }>, align 4
@alloc_bd3468a7b96187f70c1ce98a3e7a63bf = private unnamed_addr constant [283 x i8] c"unsafe precondition(s) violated: ptr::copy_nonoverlapping requires that both pointer arguments are aligned and non-null and the specified memory ranges do not overlap\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_44659632065e7bc5e1cc771c0ae76b73 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_0d97bde9555861f1f32215c1f3ce127d, [12 x i8] c"m\00\00\00r\02\00\00\09\00\00\00" }>, align 4
@alloc_5ee6cd0de5bab89c84438a39fb5fb08c = private unnamed_addr constant [221 x i8] c"unsafe precondition(s) violated: ptr::copy requires that both pointer arguments are aligned and non-null\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_ed8641ebea8e5515740d4eb49a916ff5 = private unnamed_addr constant [218 x i8] c"unsafe precondition(s) violated: ptr::read requires that the pointer argument is aligned and non-null\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_427173db73790c30e8410501502261c4 = private unnamed_addr constant [219 x i8] c"unsafe precondition(s) violated: ptr::write requires that the pointer argument is aligned and non-null\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_7f769184b15b2b9e487a8eddf4280fa4 = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/unique.rs\00", align 1
@alloc_6e3aab891144f743e5cf3d2e7adafb34 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7f769184b15b2b9e487a8eddf4280fa4, [12 x i8] c"p\00\00\00X\00\00\00$\00\00\00" }>, align 4
@alloc_4fb4eca1f8b9d0ded0407faa6b2654bb = private unnamed_addr constant [214 x i8] c"unsafe precondition(s) violated: ptr::add requires that the address calculation does not overflow\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_560a59ed819b9d9a5841f6e731c4c8e5 = private unnamed_addr constant [210 x i8] c"unsafe precondition(s) violated: NonNull::new_unchecked requires that the pointer is non-null\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_e6a9d641f27e174baadc6997ecb4ffef = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs\00", align 1
@alloc_1ded1233f10ce63823f0773f448fe0b6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e6a9d641f27e174baadc6997ecb4ffef, [12 x i8] c"r\00\00\00\B9\03\00\00 \00\00\00" }>, align 4
@alloc_4dd017ba710f698f3f5a92d842494f5b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e6a9d641f27e174baadc6997ecb4ffef, [12 x i8] c"r\00\00\00\10\01\00\00\1B\00\00\00" }>, align 4
@alloc_695c299c6a74c118e2b1e2e854637e01 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_e6a9d641f27e174baadc6997ecb4ffef, [12 x i8] c"r\00\00\00\8D\05\00\00\12\00\00\00" }>, align 4
@alloc_0625062a5eee489a7813ee965a38d15a = private unnamed_addr constant [198 x i8] c"unsafe precondition(s) violated: Alignment::new_unchecked requires a power of two\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_ddfbfd0866910977a4297d8ccf9b3009 = private unnamed_addr constant [116 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/alignment.rs\00", align 1
@alloc_9c3f9e766effa3b5868625c372b1b798 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ddfbfd0866910977a4297d8ccf9b3009, [12 x i8] c"s\00\00\00>\00\00\00\1B\00\00\00" }>, align 4
@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize", align 1
@alloc_de4e626d456b04760e72bc785ed7e52a = private unnamed_addr constant [201 x i8] c"unsafe precondition(s) violated: ptr::offset_from_unsigned requires `self >= origin`\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_1b8364ec196346492b44312e47bde728 = private unnamed_addr constant [214 x i8] c"unsafe precondition(s) violated: ptr::sub requires that the address calculation does not overflow\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_3c26f7780b66efdbce98f04109742674 = private unnamed_addr constant [118 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/validations.rs\00", align 1
@alloc_290bcf1d3573927535d28e419dcd8e69 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3c26f7780b66efdbce98f04109742674, [12 x i8] c"u\00\00\00\0B\00\00\00\0D\00\00\00" }>, align 4
@alloc_925eca4c88c3e8b843cce0c4db81997b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3c26f7780b66efdbce98f04109742674, [12 x i8] c"u\00\00\00]\00\00\00)\00\00\00" }>, align 4
@alloc_c8d4c825d834ea771e8279808c0dddc7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3c26f7780b66efdbce98f04109742674, [12 x i8] c"u\00\00\00b\00\00\00-\00\00\00" }>, align 4
@alloc_019a73d2c88f6e3bce62d53b671a5541 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3c26f7780b66efdbce98f04109742674, [12 x i8] c"u\00\00\00g\00\00\001\00\00\00" }>, align 4
@alloc_4dc07e69e5d34e9d1484dfbbef0bb9b1 = private unnamed_addr constant [174 x i8] c"unsafe precondition(s) violated: invalid value for `char`\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_919392b9a98f8676d96affad06687578 = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/methods.rs\00", align 1
@alloc_bc1173620796b796ebf04091cc898ca7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00a\07\00\00\0E\00\00\00" }>, align 4
@alloc_7b13bce84bc30a18494a4a1a8c05d561 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00T\07\00\00\09\00\00\00" }>, align 4
@alloc_72730c135e8251cc498f914b9cedcd32 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\EF\00\00\00\12\00\00\00" }>, align 4
@alloc_459fdfec0fda0f1274d075bba2f2aeb4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\87\07\00\00\12\00\00\00" }>, align 4
@alloc_4061f960675410a87b3264c715c9c2fe = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\8D\07\00\00\12\00\00\00" }>, align 4
@alloc_b74b59d83e83dbd98e30d4f14ff3afee = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\8E\07\00\00\12\00\00\00" }>, align 4
@alloc_14c21c405a4a19bce7c56d4822ea1d1c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\93\07\00\00\0E\00\00\00" }>, align 4
@alloc_5c062dc56f3b8808e40e41b53dd7d023 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\94\07\00\00\0E\00\00\00" }>, align 4
@alloc_acad745997fce1d6a376b7fe430f74c8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_919392b9a98f8676d96affad06687578, [12 x i8] c"r\00\00\00\95\07\00\00\0E\00\00\00" }>, align 4
@alloc_64e308ef4babfeb8b6220184de794a17 = private unnamed_addr constant [221 x i8] c"unsafe precondition(s) violated: hint::assert_unchecked must never be called when the condition is false\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_db422ea3987024e6f3e2bdde8dc02383 = private unnamed_addr constant [125 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/exact_size.rs\00", align 1
@alloc_3d72edc095f0ef3737d1ff771ca62df8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_db422ea3987024e6f3e2bdde8dc02383, [12 x i8] c"|\00\00\00z\00\00\00\09\00\00\00" }>, align 4
@alloc_0506e44aa4e45dd176b6dc74ac36ab3b = private unnamed_addr constant [20 x i8] c"Malformed size_hint ", align 1
@alloc_5839d769bb970d3f495194472e3ff692 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_0506e44aa4e45dd176b6dc74ac36ab3b, [4 x i8] c"\14\00\00\00" }>, align 4
@alloc_0f95007d9fc7aa6bc2f8c8450f7a4078 = private unnamed_addr constant [123 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs\00", align 1
@alloc_0dae9d559c153875d99f7186626f1805 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_0f95007d9fc7aa6bc2f8c8450f7a4078, [12 x i8] c"z\00\00\00\E9\07\00\00\0D\00\00\00" }>, align 4
@alloc_1644d5edc2b05349d2f064078377eadc = private unnamed_addr constant [120 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs\00", align 1
@alloc_3d762eee5b01b661701b65b4aa18abf5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1644d5edc2b05349d2f064078377eadc, [12 x i8] c"w\00\00\00\A2\00\00\00\14\00\00\00" }>, align 4
@alloc_629b7bd5e71a0722453d54f08d918405 = private unnamed_addr constant [107 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/wtf8.rs\00", align 1
@alloc_d2bffffeabb75125ae3b62ffbb831591 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_629b7bd5e71a0722453d54f08d918405, [12 x i8] c"j\00\00\00\1D\01\00\00\22\00\00\00" }>, align 4
@alloc_9a52d1bb75af0980e0517cfec604041e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_629b7bd5e71a0722453d54f08d918405, [12 x i8] c"j\00\00\00*\01\00\00\1A\00\00\00" }>, align 4
@alloc_c66c0f2d9650f5f24f63645533076454 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_629b7bd5e71a0722453d54f08d918405, [12 x i8] c"j\00\00\004\01\00\00\11\00\00\00" }>, align 4
@alloc_92888cb7a4167958b4d53f5a0bf06535 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_629b7bd5e71a0722453d54f08d918405, [12 x i8] c"j\00\00\00/\01\00\00\11\00\00\00" }>, align 4
@alloc_33f2d9b83c16d450a5bfa80b42ce6f02 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_629b7bd5e71a0722453d54f08d918405, [12 x i8] c"j\00\00\00$\01\00\00\11\00\00\00" }>, align 4
@alloc_045e7a240c0da05c38dad2337ece0743 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_629b7bd5e71a0722453d54f08d918405, [12 x i8] c"j\00\00\00!\01\00\00\11\00\00\00" }>, align 4
@alloc_fda0a185cdd8a48ed11700717a36520a = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/alloc/layout.rs\00", align 1
@alloc_3453a4f84abb7e9d90083a1e00d413d5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fda0a185cdd8a48ed11700717a36520a, [12 x i8] c"r\00\00\00V\01\00\00\12\00\00\00" }>, align 4
@alloc_6dcff38ecac6deb22cc28f6145ba0975 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fda0a185cdd8a48ed11700717a36520a, [12 x i8] c"r\00\00\00\E0\00\00\00\12\00\00\00" }>, align 4
@alloc_1be5ea12ba708d9a11b6e93a7d387a75 = private unnamed_addr constant [281 x i8] c"unsafe precondition(s) violated: Layout::from_size_align_unchecked requires that align is a power of 2 and the rounded-up allocation size does not exceed isize::MAX\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_38a335a089e9b7c14a96d53c27d949d2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fda0a185cdd8a48ed11700717a36520a, [12 x i8] c"r\00\00\00\AF\00\00\00\12\00\00\00" }>, align 4
@alloc_5a96614c406c6146cfd11eb1fd8ccaac = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fda0a185cdd8a48ed11700717a36520a, [12 x i8] c"r\00\00\00\FC\01\00\00)\00\00\00" }>, align 4
@alloc_a231eb0541291d8f8d42de2adf715ec2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fda0a185cdd8a48ed11700717a36520a, [12 x i8] c"r\00\00\00\09\02\00\00\19\00\00\00" }>, align 4
@alloc_04d7ce44d7c86a9a02b346ab945bf155 = private unnamed_addr constant [40 x i8] c"description() is deprecated; use Display", align 1
@alloc_1f450499e9677e99816888f298256685 = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs\00", align 1
@alloc_31f1d0a1aaf088efaf1abf9f2cd56d8e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00\B4\0F\00\00\16\00\00\00" }>, align 4
@alloc_02a34a8db5f5e1aa5bc419079a5bf5d6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00\B6\0F\00\00\16\00\00\00" }>, align 4
@alloc_14ffc53cef370592b8278fafba49890b = private unnamed_addr constant [249 x i8] c"unsafe precondition(s) violated: slice::as_chunks_unchecked requires `N != 0` and the slice to split exactly into `N`-element chunks\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_71bf1616a8398ac8b17e3cc1520df00b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00\E7\0F\00\00%\00\00\00" }>, align 4
@alloc_0e2ccf6490e9b83a6926d2963507c263 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00\F4\0F\00\00\15\00\00\00" }>, align 4
@alloc_a95a4cb603d5e2d17d0e349849044107 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00\F5\0F\00\006\00\00\00" }>, align 4
@alloc_83a94b6c055111122dec44aad52c2fce = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00\F5\0F\00\002\00\00\00" }>, align 4
@alloc_c537b9e3e800c4c09831a2fdf28bce19 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_1f450499e9677e99816888f298256685, [12 x i8] c"o\00\00\00\F5\0F\00\00\15\00\00\00" }>, align 4
@alloc_a6e8913658d98d0dbd0444b57ddfd811 = private unnamed_addr constant [27 x i8] c"chunk size must be non-zero", align 1
@alloc_52400e043e1e9b1bf2be730ef0b31a1f = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_a6e8913658d98d0dbd0444b57ddfd811, [4 x i8] c"\1B\00\00\00" }>, align 4
@alloc_a28e8c8fd5088943a8b5d44af697ff83 = private unnamed_addr constant [279 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_5c1a2f972552229672fc942406cfc298 = private unnamed_addr constant [283 x i8] c"unsafe precondition(s) violated: slice::from_raw_parts_mut requires the pointer to be aligned and non-null, and the total size of the slice not to exceed `isize::MAX`\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_57a8a8c930578b2e3ee501533f28ad28 = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs\00", align 1
@alloc_bb23dba18f73b6eacb8962cd115e8b65 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00f\00\00\00N\00\00\00" }>, align 4
@alloc_4755015357418eca3e08e93910d6ad3f = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/memchr.rs\00", align 1
@alloc_dc2830e6168cd7059bdfdd23c204604a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_4755015357418eca3e08e93910d6ad3f, [12 x i8] c"r\00\00\00(\00\00\00\0C\00\00\00" }>, align 4
@alloc_446d6b56150b55fa180f023c26fcb951 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_4755015357418eca3e08e93910d6ad3f, [12 x i8] c"r\00\00\00,\00\00\00\09\00\00\00" }>, align 4
@alloc_16136c0fde075309b69bc41ca34aef15 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_4755015357418eca3e08e93910d6ad3f, [12 x i8] c"r\00\00\00\1B\00\00\00\15\00\00\00" }>, align 4
@alloc_5f55955de67e57c79064b537689facea = private unnamed_addr constant [43 x i8] c"called `Option::unwrap()` on a `None` value", align 1
@alloc_476509aa7047bd805d630c6546685797 = private unnamed_addr constant [14 x i8] c"explicit panic", align 1
@alloc_00ae4b301f7fab8ac9617c03fcbd7274 = private unnamed_addr constant [43 x i8] c"called `Result::unwrap()` on an `Err` value", align 1
@alloc_62bb002bf8ca4b98cdd2b6cd0b17aa10 = private unnamed_addr constant [31 x i8] c"assertion failed: !c.is_ascii()", align 1
@alloc_21669a72642ad5e16342b4099d0460aa = private unnamed_addr constant [123 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/unicode/unicode_data.rs\00", align 1
@alloc_5639efddd3a328c770d46af5bb253917 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_21669a72642ad5e16342b4099d0460aa, [12 x i8] c"z\00\00\00?\01\00\00\09\00\00\00" }>, align 4
@alloc_8db620f4c9f1e44c7a999e8905a95324 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_21669a72642ad5e16342b4099d0460aa, [12 x i8] c"z\00\00\00t\01\00\00\09\00\00\00" }>, align 4
@alloc_5bd1ef6667dbdbecff436d9509a4d052 = private unnamed_addr constant [25 x i8] c"attempt to divide by zero", align 1
@alloc_2ca80fe829e7dcbb4661228c202cce92 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_5bd1ef6667dbdbecff436d9509a4d052, [4 x i8] c"\19\00\00\00" }>, align 4
@alloc_e534af126d4f0c0d6698aaa5e548da66 = private unnamed_addr constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero", align 1
@alloc_4a5d1f504800cbe61e09126ad8023985 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_e534af126d4f0c0d6698aaa5e548da66, [4 x i8] c"9\00\00\00" }>, align 4
@alloc_7eec19d3416e3575f65ca3f5643d5a84 = private unnamed_addr constant [28 x i8] c"attempt to add with overflow", align 1
@alloc_491fd71eacc9ac6df50464189817658a = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_7eec19d3416e3575f65ca3f5643d5a84, [4 x i8] c"\1C\00\00\00" }>, align 4
@alloc_1482d7dc779f3e37c63e31d28eda18b3 = private unnamed_addr constant [33 x i8] c"attempt to multiply with overflow", align 1
@alloc_3a541098c7af55f2d1b57c8374ee944e = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_1482d7dc779f3e37c63e31d28eda18b3, [4 x i8] c"!\00\00\00" }>, align 4
@alloc_9f8e76db6a71f2507809208910629059 = private unnamed_addr constant [35 x i8] c"attempt to shift left with overflow", align 1
@alloc_26eab6319fe0d02af8105663e6a2ea8b = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_9f8e76db6a71f2507809208910629059, [4 x i8] c"#\00\00\00" }>, align 4
@alloc_53b7c2e50e2cec3eca67f872cc62c959 = private unnamed_addr constant [36 x i8] c"attempt to shift right with overflow", align 1
@alloc_0f75c28593fb3281511a86ba9b3adf6f = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_53b7c2e50e2cec3eca67f872cc62c959, [4 x i8] c"$\00\00\00" }>, align 4
@alloc_4668a6a56031a745778990d4b3d270b1 = private unnamed_addr constant [33 x i8] c"attempt to subtract with overflow", align 1
@alloc_7daa13c2a11e2a3dbea9e2a29716d6f6 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_4668a6a56031a745778990d4b3d270b1, [4 x i8] c"!\00\00\00" }>, align 4
@vtable.0 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h09b445505687c2edE" }>, align 4, !dbg !0
@vtable.1 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0916ce255cb76c5dE" }>, align 4, !dbg !30
@alloc_504e26f1fa554fb0e7ec5c33ab8b9f26 = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs\00", align 1
@alloc_55a1350f0592d90727796c17fe69030d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_504e26f1fa554fb0e7ec5c33ab8b9f26, [12 x i8] c"o\00\00\00\E6\00\00\00\05\00\00\00" }>, align 4
@alloc_afe773f6aac346e81183863a42d1bf80 = private unnamed_addr constant [2 x i8] c"==", align 1
@alloc_0052d85ea4a4ba787769bf683e9f0575 = private unnamed_addr constant [2 x i8] c"!=", align 1
@alloc_cf04f28336c1420ddcf7f6488de62f68 = private unnamed_addr constant [7 x i8] c"matches", align 1
@alloc_322a4a2d5f38205d9fdc8f598b5b112b = private unnamed_addr constant [16 x i8] c"assertion `left ", align 1
@alloc_1193fb21a9dc82f2449f0fe7499465db = private unnamed_addr constant [23 x i8] c" right` failed\0A  left: ", align 1
@alloc_36157bf2388d7d54c3f5b008d87393c3 = private unnamed_addr constant [9 x i8] c"\0A right: ", align 1
@alloc_df6180be46d27f739349b4d5526bbf05 = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_322a4a2d5f38205d9fdc8f598b5b112b, [4 x i8] c"\10\00\00\00", ptr @alloc_1193fb21a9dc82f2449f0fe7499465db, [4 x i8] c"\17\00\00\00", ptr @alloc_36157bf2388d7d54c3f5b008d87393c3, [4 x i8] c"\09\00\00\00" }>, align 4
@alloc_b121e94a007b71a66178f33c0af0f574 = private unnamed_addr constant [16 x i8] c" right` failed: ", align 1
@alloc_c7cb5265cf6b7690dfbe771fdc9c0f18 = private unnamed_addr constant [9 x i8] c"\0A  left: ", align 1
@alloc_597d0d0cadbebb25ae7939c6fc833a99 = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_322a4a2d5f38205d9fdc8f598b5b112b, [4 x i8] c"\10\00\00\00", ptr @alloc_b121e94a007b71a66178f33c0af0f574, [4 x i8] c"\10\00\00\00", ptr @alloc_c7cb5265cf6b7690dfbe771fdc9c0f18, [4 x i8] c"\09\00\00\00", ptr @alloc_36157bf2388d7d54c3f5b008d87393c3, [4 x i8] c"\09\00\00\00" }>, align 4
@alloc_763310d78c99c2c1ad3f8a9821e942f3 = private unnamed_addr constant [61 x i8] c"is_nonoverlapping: `size_of::<T>() * count` overflows a usize", align 1
@alloc_7a037f755386427ed47af072316856f7 = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ub_checks.rs\00", align 1
@alloc_329dec4fe38a59083c3b039c87a8d615 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7a037f755386427ed47af072316856f7, [12 x i8] c"o\00\00\00\95\00\00\006\00\00\00" }>, align 4
@vtable.2 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1f527f8b4b48fc14E" }>, align 4, !dbg !85
@vtable.3 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbc99a1a13df606c7E" }>, align 4, !dbg !94
@alloc_52541e541a6a1e6898e9ad26c9342c14 = private unnamed_addr constant [120 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/accum.rs\00", align 1
@alloc_5c43ed6f6908ea217cb78f182d0fdb8d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_52541e541a6a1e6898e9ad26c9342c14, [12 x i8] c"w\00\00\00\CC\00\00\00\01\00\00\00" }>, align 4
@alloc_7c803916a094a5a08efe0ee16b3f38af = private unnamed_addr constant [5 x i8] c"Drain", align 1
@vtable.4 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\08\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbffdc5d01bf5408bE" }>, align 4, !dbg !116
@alloc_1ac27a7ad4b1fedc41713a13c30f215d = private unnamed_addr constant [38 x i8] c"assertion failed: edge_idx <= CAPACITY", align 1
@alloc_cbeeff8da20ab06556723359018ca97f = private unnamed_addr constant [126 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/collections/btree/node.rs\00", align 1
@alloc_4d388b9e1a02fab8fd9a9b4ef61447e3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_cbeeff8da20ab06556723359018ca97f, [12 x i8] c"}\00\00\00\99\03\00\00\05\00\00\00" }>, align 4
@alloc_2fa1f14da61fa2954d7a9740aaf8a5a8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_cbeeff8da20ab06556723359018ca97f, [12 x i8] c"}\00\00\00\9F\03\00\005\00\00\00" }>, align 4
@alloc_fa789d31aa0362fe97bf8df17988dd9e = private unnamed_addr constant [106 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/rc.rs\00", align 1
@alloc_debba9ede09d9f4e5c41b104c1bdb935 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00\04\08\00\00\12\00\00\00" }>, align 4
@alloc_1b6a038938a83810c36a031b196509a0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00\1C\08\00\00\0D\00\00\00" }>, align 4
@alloc_a97c99214fc24fb1b7716eff3d5a33fa = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00\1E\08\00\00(\00\00\00" }>, align 4
@alloc_be912f8ba74a976d787c56a9401ff03f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00\1F\08\00\00&\00\00\00" }>, align 4
@alloc_7f4a080ec5941f85872c03902ba9ad20 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00\17\08\00\00\13\00\00\00" }>, align 4
@alloc_b08c3e5ee1a6b4f8bac236e5b418e76e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00c\01\00\00#\00\00\00" }>, align 4
@alloc_3f04bf49dab1483fb74cb198a7c2d022 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00|\01\00\00&\00\00\00" }>, align 4
@alloc_8513a0b966609e9782a6298b1c45c99f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00\0B\06\00\00#\00\00\00" }>, align 4
@alloc_bef1b87e0f52c72d6e877c99b0cc3a10 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00a\0E\00\00\05\00\00\00" }>, align 4
@alloc_a96446c88e0beded17719cd1bae3b1b1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00Q\08\00\00)\00\00\00" }>, align 4
@alloc_2a715f562894b28f3c5ca32d902d30c4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_fa789d31aa0362fe97bf8df17988dd9e, [12 x i8] c"i\00\00\00'\01\00\001\00\00\00" }>, align 4
@alloc_914b2c69d7eca30497b9feaf15ac92f1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@alloc_bcc8a4bd677003736eb7188f6c1795a4 = private unnamed_addr constant [113 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/ffi/c_str.rs\00", align 1
@alloc_dd4b2f06adf47aee65e6c4a28c824eff = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00\B6\00\00\00\14\00\00\00" }>, align 4
@alloc_1f6600c78053aac1d4355be6ca85675a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\001\04\00\003\00\00\00" }>, align 4
@alloc_c8f8d850bafb8c953da39152ff673a10 = private unnamed_addr constant [2 x i8] c"\01\00", align 1
@alloc_0dbe6953ab8757e93fd933847a105907 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00\F4\01\00\00\09\00\00\00" }>, align 4
@alloc_3b0be91aa0227e795e70cf4bbf78514e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00`\02\00\00\12\00\00\00" }>, align 4
@alloc_6991bcfdb3f3f96dda0d1e2b31c5bb6c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00\A4\02\00\00\1E\00\00\00" }>, align 4
@alloc_9ed1d40f60081ac3c8582d1e71419d75 = private unnamed_addr constant [49 x i8] c"assertion failed: memchr::memchr(0, &v).is_none()", align 1
@alloc_e0ace294cc66a1d5f3914411dd3d57b0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00P\01\00\00\09\00\00\00" }>, align 4
@alloc_a29a9eb26bac8f5e3aaf4551ec48da07 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00w\02\00\00-\00\00\00" }>, align 4
@alloc_3c31ae41b8dfe17cb054717d587e7f9d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00w\02\00\00\17\00\00\00" }>, align 4
@alloc_4ca7a4293309f2a594112e5992259be2 = private unnamed_addr constant [63 x i8] c"assertion failed: memchr::memchr(0, &v).unwrap() + 1 == v.len()", align 1
@alloc_1d69ff1de79b374d6d824e6570ecc8fd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00w\02\00\00\09\00\00\00" }>, align 4
@alloc_001c7be2c8484fbfab2e821c040f7415 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00\16\01\00\007\00\00\00" }>, align 4
@alloc_1a90fd89c30054db6c92462549027e00 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00\98\01\00\00\17\00\00\00" }>, align 4
@alloc_1467a334148e9393fd9bf41b19510d4e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc8a4bd677003736eb7188f6c1795a4, [12 x i8] c"p\00\00\00\99\01\00\00\19\00\00\00" }>, align 4
@alloc_a439077caaee6bab9af745f1531d72a4 = private unnamed_addr constant [86 x i8] c"a formatting trait implementation returned an error when the underlying stream did not", align 1
@alloc_bcc556e79682e3290369168abb776229 = private unnamed_addr constant [107 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/fmt.rs\00", align 1
@alloc_07fc410862dd0ba787a5eaefbe034f24 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_bcc556e79682e3290369168abb776229, [12 x i8] c"j\00\00\00\8A\02\00\00\0E\00\00\00" }>, align 4
@alloc_dab9a4fc063e387d18d092eca507a3ba = private unnamed_addr constant [107 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/str.rs\00", align 1
@alloc_0c9327735b41175dcf8a06d13e63a22a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\8A\02\00\00$\00\00\00" }>, align 4
@alloc_159c752da95d04370d29fd24a6fcccb3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\8C\02\00\00,\00\00\00" }>, align 4
@alloc_f26af93b2ca8e02040827d9b8a9a1a3b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\9E\02\00\00\09\00\00\00" }>, align 4
@alloc_2cca64da9494bdde6000c8ad9201c6e4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\9F\02\00\00 \00\00\00" }>, align 4
@alloc_159e7b10184e62f2ac5c9218813d7ec4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\A0\02\00\00(\00\00\00" }>, align 4
@alloc_55f31086f28179261dbfbb0c51062542 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\9B\02\00\006\00\00\00" }>, align 4
@alloc_505381e02f8e98a838c0fb6a5288d424 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\9B\02\00\00\0D\00\00\00" }>, align 4
@alloc_106c39d69df85ea91e46838150d7866a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\A5\02\00\00\14\00\00\00" }>, align 4
@alloc_0a0d11f26ac78e28ac9fd8b44f00cbbb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\AB\02\00\00\18\00\00\00" }>, align 4
@alloc_87dc9894d44c165fcc9a8e931a977869 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\AD\02\00\00\09\00\00\00" }>, align 4
@alloc_aab0c89d765f456daf0281acd303cec5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\AE\02\00\00 \00\00\00" }>, align 4
@alloc_65dc09517c12adf97a73dbf02e7bebde = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\AF\02\00\00(\00\00\00" }>, align 4
@alloc_1b7e5c532c794617759c1ae50b4ed1d8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\8F\02\00\00\1B\00\00\00" }>, align 4
@alloc_09070637dcc585742614807db6bbe739 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\8F\02\00\00\0D\00\00\00" }>, align 4
@alloc_140dc710192e4660100995a44691c807 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\88\01\00\00A\00\00\00" }>, align 4
@alloc_a88579596bb6f7bdad7b700096fbfdfe = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\9F\01\00\00?\00\00\00" }>, align 4
@alloc_e0d084125ca9ef9ffdda5eaa91115ab3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\A0\01\00\004\00\00\00" }>, align 4
@alloc_7cdc929191e77e09fb4b1661ef37815a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\A0\01\00\003\00\00\00" }>, align 4
@alloc_19e04ffb8ff30923e1e2debaf035124d = private unnamed_addr constant [38 x i8] c"assertion failed: '\CE\A3'.len_utf8() == 2", align 1
@alloc_ddff4e55976dd181666e0ed3143ee6c8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\9E\01\00\00\0D\00\00\00" }>, align 4
@alloc_4299fdaa7a4544d4451ba415def7c466 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dab9a4fc063e387d18d092eca507a3ba, [12 x i8] c"j\00\00\00\C0\00\00\00\0E\00\00\00" }>, align 4
@alloc_f81e62bd7bc140ac77bc0b3edf24c36d = private unnamed_addr constant [20 x i8] c"insertion index (is ", align 1
@alloc_73d2a4a6a707d5b622cbb703396dae5d = private unnamed_addr constant [23 x i8] c") should be <= len (is ", align 1
@alloc_9e3f62b0e6490cc45676dc85f910c2d0 = private unnamed_addr constant [1 x i8] c")", align 1
@alloc_98466829dde9674989532d5ba303a94e = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_f81e62bd7bc140ac77bc0b3edf24c36d, [4 x i8] c"\14\00\00\00", ptr @alloc_73d2a4a6a707d5b622cbb703396dae5d, [4 x i8] c"\17\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [4 x i8] c"\01\00\00\00" }>, align 4
@alloc_5fc4bcfe6162e3f7dd1ab90daae602fa = private unnamed_addr constant [22 x i8] c"swap_remove index (is ", align 1
@alloc_769eecd3f15a8549d24cdee545c7619d = private unnamed_addr constant [22 x i8] c") should be < len (is ", align 1
@alloc_a69ec275a9c583294426f949b22e3d0b = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_5fc4bcfe6162e3f7dd1ab90daae602fa, [4 x i8] c"\16\00\00\00", ptr @alloc_769eecd3f15a8549d24cdee545c7619d, [4 x i8] c"\16\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [4 x i8] c"\01\00\00\00" }>, align 4
@alloc_d82f60d16077d45d21b83ae3ae7e388f = private unnamed_addr constant [111 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs\00", align 1
@alloc_d34252fcd2296cfa5c4a4aa6fa0479c8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\E3\07\00\00\0D\00\00\00" }>, align 4
@alloc_f913d9899e8fadd833c4b940ff4bdb28 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\85\06\00\00\12\00\00\00" }>, align 4
@alloc_a1315837ef81ce3d009f9040f76e6b20 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\F0\0A\00\00P\00\00\00" }>, align 4
@alloc_caf5c4628188627ca366c4753c30889c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\F1\0A\00\00\09\00\00\00" }>, align 4
@alloc_5d171970be64d63537133b950c5a6d77 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\01\06\00\00\17\00\00\00" }>, align 4
@alloc_7596cade4405370a27951651992ed797 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00%\04\00\00\09\00\00\00" }>, align 4
@alloc_82a99021b1306c9239507412b95c0e74 = private unnamed_addr constant [205 x i8] c"unsafe precondition(s) violated: Vec::from_raw_parts_in requires that length <= capacity\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_e9a73f5e10236bb05d8252efe3519cfd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00,\0C\00\00#\00\00\00" }>, align 4
@alloc_67f272f0c662a44cbebb1612002c4cec = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00-\0C\00\00\11\00\00\00" }>, align 4
@alloc_babe9aa630765810a897f737ce34cf5c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00+\0C\00\00\0D\00\00\00" }>, align 4
@alloc_9e87c75a97c4dd2280f18449e0bf5109 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\9A\0A\00\00\11\00\00\00" }>, align 4
@alloc_514c4533805056f68c72b09388c55afd = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\9B\0A\00\00\11\00\00\00" }>, align 4
@alloc_2863d98c5b047020c6884fa6673ef81c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\9C\0A\00\00.\00\00\00" }>, align 4
@alloc_20ea928a13eb1d8aa010bbbc483bd70c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\9C\0A\00\00\16\00\00\00" }>, align 4
@alloc_1d71947b654bf1b94ec960579a124296 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00$\0B\00\00$\00\00\00" }>, align 4
@alloc_bf0b6ac61ef597ae829a4390209d800f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00)\0B\00\00C\00\00\00" }>, align 4
@alloc_66caa2a4c985b4ca87eb2903360ec7dc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00)\0B\00\00O\00\00\00" }>, align 4
@alloc_035f9d148a7a01b751fc868f84e6c91f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00)\0B\00\00\1F\00\00\00" }>, align 4
@alloc_30c7cfa087dda64e85e2d07c2118a35f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00,\0B\00\00\1B\00\00\00" }>, align 4
@alloc_d669053c7caa5cb753c02057860b7ece = private unnamed_addr constant [18 x i8] c"removal index (is ", align 1
@alloc_93081500eef5d83dc2e7ee77b1137713 = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_d669053c7caa5cb753c02057860b7ece, [4 x i8] c"\12\00\00\00", ptr @alloc_769eecd3f15a8549d24cdee545c7619d, [4 x i8] c"\16\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [4 x i8] c"\01\00\00\00" }>, align 4
@alloc_a9defe2f9f26c8fba4a45c86a5565734 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00\BB\07\00\00\09\00\00\00" }>, align 4
@alloc_57d70e9d94c65ecfc15225d29a5ed72b = private unnamed_addr constant [198 x i8] c"unsafe precondition(s) violated: Vec::set_len requires that new_len <= capacity()\0A\0AThis indicates a bug in the program. This Undefined Behavior check is optional, and cannot be relied on for safety.", align 1
@alloc_5db4ff6c4fc059772c09f358802262f7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00e\06\00\00\12\00\00\00" }>, align 4
@alloc_5d0f037c86eb8bf21fa01b1073783172 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00Y\0A\00\00)\00\00\00" }>, align 4
@alloc_7c167cc8dbd2de7d53b557130f9b224d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00Z\0A\00\00\0D\00\00\00" }>, align 4
@alloc_fdf9e28585bd9798eb77e72742907e14 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_d82f60d16077d45d21b83ae3ae7e388f, [12 x i8] c"n\00\00\00[\0A\00\00\18\00\00\00" }>, align 4
@alloc_0a39fd70720444d81558dc462acec7f8 = private unnamed_addr constant [21 x i8] c"`at` split index (is ", align 1
@alloc_5a75699d3c1a02296480c06ab0fe9179 = private unnamed_addr constant <{ ptr, [4 x i8], ptr, [4 x i8], ptr, [4 x i8] }> <{ ptr @alloc_0a39fd70720444d81558dc462acec7f8, [4 x i8] c"\15\00\00\00", ptr @alloc_73d2a4a6a707d5b622cbb703396dae5d, [4 x i8] c"\17\00\00\00", ptr @alloc_9e3f62b0e6490cc45676dc85f910c2d0, [4 x i8] c"\01\00\00\00" }>, align 4
@alloc_6caea66d573a51eedb21611964fc23f0 = private unnamed_addr constant [117 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/vec/into_iter.rs\00", align 1
@alloc_3fba6c1144e2d174136bfeea57d0ab10 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_6caea66d573a51eedb21611964fc23f0, [12 x i8] c"t\00\00\00T\00\00\00\12\00\00\00" }>, align 4
@alloc_ad7c68fa57b6080eb99d5d0d75637149 = private unnamed_addr constant [108 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/sync.rs\00", align 1
@alloc_ff65de5aea8ad234bb70451d09078a62 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\B7\07\00\00$\00\00\00" }>, align 4
@alloc_33a5fa23c89f2fdda7a91a041e13d6be = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\D6\07\00\00\09\00\00\00" }>, align 4
@alloc_0cd1959e984c71bf81b616e1381d1df2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\D9\07\00\00(\00\00\00" }>, align 4
@alloc_ec2f562d2bfe097a14c5136f0b40877d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\DA\07\00\00&\00\00\00" }>, align 4
@alloc_616fc3f4c1ffd5c10e90514273f11e08 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\009\01\00\00&\00\00\00" }>, align 4
@alloc_ef9f84f8ecf7ac4b5a4d795f67b59da5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\AA\06\00\00\1F\00\00\00" }>, align 4
@alloc_d57a0042b59523b866ac3597cd551653 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\C7\0F\00\00\05\00\00\00" }>, align 4
@_ZN5alloc4sync18STATIC_INNER_SLICE17h1413d7a909030fefE = dso_local global <{ [9 x i8], [7 x i8] }> <{ [9 x i8] c"\01\00\00\00\01\00\00\00\00", [7 x i8] undef }>, align 16, !dbg !129
@alloc_02b85bf94bdbe0c6db97958dbfdc3815 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\0D\08\00\00)\00\00\00" }>, align 4
@alloc_1b26471aaa0792f2a26c240077bf1f3e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_ad7c68fa57b6080eb99d5d0d75637149, [12 x i8] c"k\00\00\00\8E\01\00\002\00\00\00" }>, align 4
@alloc_20557391eef6b66f7e7f7d88c1f360ad = private unnamed_addr constant [112 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/wtf8/mod.rs\00", align 1
@alloc_72bdd5826cd9b32313454ca574545738 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\D7\01\00\00-\00\00\00" }>, align 4
@alloc_55773bc7650d9b4ca2871ef04250ccf4 = private unnamed_addr constant [3 x i8] c"\EF\BF\BD", align 1
@alloc_3f3a91417fbfb3de771e34ec36aa2f55 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\D9\01\00\00\13\00\00\00" }>, align 4
@alloc_02d8f0eb6397ba23a450087ec7563f45 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\E2\01\00\009\00\00\00" }>, align 4
@alloc_40fade489781e31c1a69ab393315160c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\DD\01\00\009\00\00\00" }>, align 4
@alloc_7de025867be6066a044c67a4b0a74352 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\DF\01\00\00\17\00\00\00" }>, align 4
@alloc_d9ed152a944270ebea68117b897b2fa7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\02\02\00\000\00\00\00" }>, align 4
@alloc_7b160cc14db43b9cb173aef84de13ec5 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\81\01\00\00\17\00\00\00" }>, align 4
@alloc_7fbeeeee8a7caae03fc19dc7f102cd8a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\84\01\00\00\1B\00\00\00" }>, align 4
@alloc_94834333f150919af22539b7e6bde3ce = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_20557391eef6b66f7e7f7d88c1f360ad, [12 x i8] c"o\00\00\00\84\01\00\000\00\00\00" }>, align 4
@alloc_88beea65e4fab49399d118295256fbde = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00_\01\00\00\1B\00\00\00" }>, align 4
@alloc_afc2a81fe13a0b3a87a4890cf54edc49 = private unnamed_addr constant [17 x i8] c"allocation failed", align 1
@alloc_ce1fa81c485b8c61dc81113ef6ca6281 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_afc2a81fe13a0b3a87a4890cf54edc49, [4 x i8] c"\11\00\00\00" }>, align 4
@alloc_95cbbc64a088f857bf17106a890a7e2c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\91\01\00\00\09\00\00\00" }>, align 4
@alloc_410e3011a7a5ea88f7eef411e235cc80 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\BF\00\00\00\1B\00\00\00" }>, align 4
@alloc_7e80d81941cf5c819e3db4cff23967f9 = private unnamed_addr constant [72 x i8] c"`new_layout.size()` must be greater than or equal to `old_layout.size()`", align 1
@alloc_b24ad36b3132cfd2b6a88b8dbfde46ef = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_7e80d81941cf5c819e3db4cff23967f9, [4 x i8] c"H\00\00\00" }>, align 4
@alloc_fd673fa8e7c9193d1d5e1474d960f7d8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\CF\00\00\00\09\00\00\00" }>, align 4
@alloc_3d4f281bf1c329aa9f954c87456081b8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\ED\00\00\00\1F\00\00\00" }>, align 4
@alloc_435544b3da4835fed9cb9d01cbc732a6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\DD\00\00\00\11\00\00\00" }>, align 4
@alloc_b092d604ef8ec680e603116988fc7eb6 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\E2\00\00\00\1D\00\00\00" }>, align 4
@alloc_d01086e838fca3c5668315ab93cd79f1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\E2\00\00\00:\00\00\00" }>, align 4
@alloc_36c380c72a6d0256fe1ce0a6f1a2f716 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\E2\00\00\00+\00\00\00" }>, align 4
@alloc_90c17810543037c827a07bc5b67a6947 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00\E0\00\00\00\1B\00\00\00" }>, align 4
@alloc_6c305979b0e8cb50fac9b236bcb5c1e6 = private unnamed_addr constant [109 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/boxed.rs\00", align 1
@alloc_03f0a3bfed43164434711ad649aabe57 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_6c305979b0e8cb50fac9b236bcb5c1e6, [12 x i8] c"l\00\00\00}\05\00\00\1E\00\00\00" }>, align 4
@alloc_9bc3d9ab590d49431dfb48aa21de786a = private unnamed_addr constant <{ ptr, [8 x i8], ptr }> <{ ptr @"_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17h0871071e578a1949E", [8 x i8] c"\0C\00\00\00\04\00\00\00", ptr @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h6a47e6818fd9978fE" }>, align 4
@vtable.5 = private constant <{ ptr, [8 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17h0871071e578a1949E", [8 x i8] c"\0C\00\00\00\04\00\00\00", ptr @"_ZN254_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h45e5b0a36e6a4abdE", ptr @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h6a47e6818fd9978fE", ptr @alloc_9bc3d9ab590d49431dfb48aa21de786a, ptr @_ZN4core5error5Error6source17hf403cbc540d20139E, ptr @_ZN4core5error5Error7type_id17h89860cf44f21bc22E, ptr @_ZN4core5error5Error11description17h2c60e9cf1692feeaE, ptr @_ZN4core5error5Error5cause17h70f54b427eb43c4cE, ptr @_ZN4core5error5Error7provide17h804af5c6ecda1838E }>, align 4, !dbg !156
@alloc_a500d906b91607583596fa15e63c2ada = private unnamed_addr constant [40 x i8] c"internal error: entered unreachable code", align 1
@alloc_a83d20901bdbaf91a9502b8e08f4a957 = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/borrow.rs\00", align 1
@alloc_dee026938b817d7ae01348a118bc631f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_a83d20901bdbaf91a9502b8e08f4a957, [12 x i8] c"m\00\00\00\17\01\00\00%\00\00\00" }>, align 4
@alloc_3b7302477125dba97b0af5eda60ff185 = private unnamed_addr constant [110 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs\00", align 1
@alloc_d7ae68d7cffc005973d10e2bcb8b6f8b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00\94\08\00\00,\00\00\00" }>, align 4
@alloc_237ded3d6ab66689aff59f9a6d8b968e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00\9C\08\00\00\1E\00\00\00" }>, align 4
@alloc_d39863205a80b44e0d66b0e678ebc8ae = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00u\08\00\00\14\00\00\00" }>, align 4
@alloc_54b619326b005b99896b638de9b98fb8 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00a\03\00\00\1E\00\00\00" }>, align 4
@alloc_99e4c9794a17692c3237bd9c103840f4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00\16\03\00\00\1E\00\00\00" }>, align 4
@alloc_3d07516a9b38db202801fba47f335e20 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00t\02\00\00\11\00\00\00" }>, align 4
@alloc_f01e6bac29bc177dee02f7d7c05e3ddc = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00\8C\03\00\00-\00\00\00" }>, align 4
@alloc_f5a1d71c1d79290ce217adeb0d6d33e9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00A\03\00\00-\00\00\00" }>, align 4
@alloc_b080e9cb062afaa89f8d96eeb5dabe3b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00\83\05\00\00T\00\00\00" }>, align 4
@alloc_4bffea83c63c4e46b2757869b6649688 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00\84\05\00\00\1E\00\00\00" }>, align 4
@alloc_5969b0922ea053155cc305e43f823e42 = private unnamed_addr constant [115 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/raw_vec/mod.rs\00", align 1
@alloc_3e86fb6b2879f255ac8a424203070a4b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00U\03\00\00W\00\00\00" }>, align 4
@alloc_31365cfefba383c4d2bf6b6a04cc10aa = private unnamed_addr constant [17 x i8] c"capacity overflow", align 1
@alloc_90c5bf921a991d4cef03168396cea03b = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_31365cfefba383c4d2bf6b6a04cc10aa, [4 x i8] c"\11\00\00\00" }>, align 4
@alloc_f5afce90c7b6fd918c6363c3021ffe9f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\1C\00\00\00\05\00\00\00" }>, align 4
@alloc_33682dd3d4b898c7538132dc0c143f74 = private unnamed_addr constant [56 x i8] c"`len` must be smaller than or equal to `self.capacity()`", align 1
@alloc_f4d57ac593112d44bb8938b45d223a4d = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_33682dd3d4b898c7538132dc0c143f74, [4 x i8] c"8\00\00\00" }>, align 4
@alloc_83adb15aef8e53a27d05391adceeadfa = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\E3\00\00\00\09\00\00\00" }>, align 4
@alloc_f4728140a08c933db2d13937bb6def33 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\EB\00\00\00%\00\00\00" }>, align 4
@alloc_f57ac9f51f258b865afd7aca26461551 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\CF\02\00\00)\00\00\00" }>, align 4
@alloc_34dfeb1b5b141599ba6cdab34df31edb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\D5\02\00\00\1C\00\00\00" }>, align 4
@alloc_0e818199dc25e87116a4e906be835b5e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\D2\02\00\00\13\00\00\00" }>, align 4
@alloc_4af2c0d1999e47fb2cd9879c545aa7d3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\EC\02\00\00\0D\00\00\00" }>, align 4
@alloc_bf2ef026d41630cf7d93a3a71de3cac9 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\EF\02\00\00\11\00\00\00" }>, align 4
@alloc_7b09a0d4333a812ca86473c4cf73540f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\E9\02\00\00\1A\00\00\00" }>, align 4
@alloc_145bae300e82e49c276d88ab37b19a8d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\F6\02\00\00R\00\00\00" }>, align 4
@alloc_5173d93f60e10ba7d9ba5912add1228f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00X\02\00\00\0D\00\00\00" }>, align 4
@alloc_f6b56cad982303657f7be46d3e602ed4 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00S\02\00\00\11\00\00\00" }>, align 4
@alloc_eede47213dcfc076444425ccb247be2b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\13\02\00\005\00\00\00" }>, align 4
@alloc_72d2cf81f39de74134d33df47d4bb11b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\14\02\00\00\1E\00\00\00" }>, align 4
@alloc_358e3dd9740b2bf5d917c2f9630410d0 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\15\02\00\00 \00\00\00" }>, align 4
@alloc_f618e816ca814de4958218055ad99397 = private unnamed_addr constant [32 x i8] c"assertion failed: additional > 0", align 1
@alloc_48693a28641fc2536465c1b585bbf702 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\A7\02\00\00\09\00\00\00" }>, align 4
@alloc_050b106f80d54564e963431e19691033 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\AC\02\00\00)\00\00\00" }>, align 4
@alloc_bb7bc646e9264e8572da0c478eee6ea1 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\B4\02\00\00\1C\00\00\00" }>, align 4
@alloc_4ff007110a35aef9c03c189f429bd2d2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\BA\02\00\00\1C\00\00\00" }>, align 4
@alloc_e700fbef5ef9119ca5f0c0d7bc21ca43 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\B0\02\00\00\1C\00\00\00" }>, align 4
@alloc_d991fc29e626d8fdb18f49151c8d8c2e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\DA\01\00\00L\00\00\00" }>, align 4
@alloc_ea40466ae459082a17e41d9be6772ba3 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\CB\01\00\003\00\00\00" }>, align 4
@alloc_71a073a03be40d03de6e75359f746265 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00)\03\00\003\00\00\00" }>, align 4
@alloc_7ba6974329164b8fe3be58084a551778 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00*\03\00\00\22\00\00\00" }>, align 4
@alloc_7102491c513040aabca9c3cbb862be5b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00+\03\00\00\11\00\00\00" }>, align 4
@alloc_d09fb3ffb1ef378f27a3331ad7aebb56 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\A7\01\00\00\15\00\00\00" }>, align 4
@alloc_062a3ac1849f81941fae91d29015b946 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00{\02\00\00\0D\00\00\00" }>, align 4
@alloc_8b4f1efc8d6bf5608d2860c2bca8b7ea = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00v\02\00\00\11\00\00\00" }>, align 4
@alloc_e32c9f49965bcd982ae19540c5ba95f8 = private unnamed_addr constant [36 x i8] c"Tried to shrink to a larger capacity", align 1
@alloc_fd1140a0ff4854b4b7db0073be8fd266 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_e32c9f49965bcd982ae19540c5ba95f8, [4 x i8] c"$\00\00\00" }>, align 4
@alloc_084934801ed7c09131a5d6f465cc3d8f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_5969b0922ea053155cc305e43f823e42, [12 x i8] c"r\00\00\00\01\03\00\00\09\00\00\00" }>, align 4
@alloc_a6e0555c935bf2b0380fc9afe17904e4 = private unnamed_addr constant [9 x i8] c"IntoChars", align 1
@alloc_c18aec2f64791555f5b3394d1fad7c20 = private unnamed_addr constant [72 x i8] c"`new_layout.size()` must be smaller than or equal to `old_layout.size()`", align 1
@alloc_c560e1bb852dab2517fcdf1fade5448a = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_c18aec2f64791555f5b3394d1fad7c20, [4 x i8] c"H\00\00\00" }>, align 4
@alloc_9404ebcb85c554862fecb899dc88d94c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\004\01\00\00\09\00\00\00" }>, align 4
@alloc_f2cfff27739bb78fbe121261109d7a9a = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00P\01\00\00\1F\00\00\00" }>, align 4
@alloc_067c008d0493b1c5de84262584db3bf7 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00C\01\00\00\11\00\00\00" }>, align 4
@alloc_ba345db3e9bff38c2b9990d78e4f2350 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_dc195465c2ba08ac4896fcd3aeb3f123, [12 x i8] c"l\00\00\00F\01\00\00\1B\00\00\00" }>, align 4
@alloc_4d84e70691747edd15f53afa313934fc = private unnamed_addr constant [6 x i8] c"Layout", align 1
@alloc_a2e5f6be2a03b9f5ed256baff3399a84 = private unnamed_addr constant [4 x i8] c"size", align 1
@vtable.6 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h7429cd3c1f263cabE" }>, align 4, !dbg !219
@alloc_ca8235712f576b69a7b090258b88dda1 = private unnamed_addr constant [5 x i8] c"align", align 1
@vtable.7 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h416ebf28a9f7421fE" }>, align 4, !dbg !227
@alloc_8e685ef482aec04a2d7a8ed5ef1228a3 = private unnamed_addr constant [9 x i8] c"Utf8Error", align 1
@alloc_f34017a1538f19bf68b6d6294eec0bb3 = private unnamed_addr constant [11 x i8] c"valid_up_to", align 1
@alloc_91eca80c47235190e5fbed3d6d8be36c = private unnamed_addr constant [9 x i8] c"error_len", align 1
@alloc_503e3ddfab6ff94d3e7b9f01abf94ee7 = private unnamed_addr constant [45 x i8] c"nul byte found in provided data at position: ", align 1
@alloc_71b62d86af2348664211bfbf21e35431 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_503e3ddfab6ff94d3e7b9f01abf94ee7, [4 x i8] c"-\00\00\00" }>, align 4
@alloc_37d2e53432a03a1f90b3e7253015eaf9 = private unnamed_addr constant [4 x i8] c"None", align 1
@alloc_9535bf4c204f3eb9b19ec2c83e446e52 = private unnamed_addr constant [4 x i8] c"Some", align 1
@vtable.8 = private constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\04\00\00\00\04\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h624a3f117251aebaE" }>, align 4, !dbg !236
@alloc_30d03708f005887e7da76c32d50be5ad = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_6c305979b0e8cb50fac9b236bcb5c1e6, [12 x i8] c"l\00\00\002\07\00\00.\00\00\00" }>, align 4
@alloc_6fbea5e9c73aa07232d8e93629f5148f = private unnamed_addr constant [36 x i8] c"invalid utf-16: lone surrogate found", align 1
@alloc_f7ed970f44ca051468d9d716585e73ae = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00\CF\09\00\00\0D\00\00\00" }>, align 4
@alloc_13b19b5ab20ab563d27e8d78163b4b27 = private unnamed_addr constant <{ [12 x i8], ptr }> <{ [12 x i8] c"\00\00\00\00\08\00\00\00\04\00\00\00", ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h38f8897d8415721cE" }>, align 4
@vtable.9 = private constant <{ [12 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ [12 x i8] c"\00\00\00\00\08\00\00\00\04\00\00\00", ptr @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h496788f68c402926E", ptr @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h38f8897d8415721cE", ptr @alloc_13b19b5ab20ab563d27e8d78163b4b27, ptr @_ZN4core5error5Error6source17h9a1b86d2bfee8a73E, ptr @_ZN4core5error5Error7type_id17hb25c7eddb00d2a3bE, ptr @_ZN4core5error5Error11description17he14e8c6f3ee22003E, ptr @_ZN4core5error5Error5cause17h8f5d85379d4ac393E, ptr @_ZN4core5error5Error7provide17h421f2a69dcbdf26fE }>, align 4, !dbg !245
@alloc_2be04d996cb96ea7cf76b18f168cc936 = private unnamed_addr constant [33 x i8] c"C string contained non-utf8 bytes", align 1
@alloc_1c48aaa25881cebb537398237e87da2c = private unnamed_addr constant [24 x i8] c"memory allocation failed", align 1
@alloc_236b52f5c81143245b05b9fdb0db30b7 = private unnamed_addr constant [64 x i8] c" because the computed capacity exceeded the collection's maximum", align 1
@alloc_8743fc3ff085a87cd6d6fd0bc23a3ce4 = private unnamed_addr constant [47 x i8] c" because the memory allocator returned an error", align 1
@alloc_7d0f58d5ca62b6dd4739b399740f8fa7 = private unnamed_addr constant [119 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/collections/mod.rs\00", align 1
@alloc_f14b0c9588509605c48bb4f12c8d5464 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_7d0f58d5ca62b6dd4739b399740f8fa7, [12 x i8] c"v\00\00\00\9E\00\00\00\09\00\00\00" }>, align 4
@vtable.a = private constant <{ ptr, [8 x i8], ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE", [8 x i8] c"\0C\00\00\00\04\00\00\00", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17he33dda6c037d345bE", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17hd9bae8fdfa467958E", ptr @_ZN4core3fmt5Write9write_fmt17hdad00fb98f69e3d1E }>, align 4, !dbg !266
@alloc_368b96ba8943e1bc0a289121b00da954 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_a83d20901bdbaf91a9502b8e08f4a957, [12 x i8] c"m\00\00\00\F8\01\00\003\00\00\00" }>, align 4
@alloc_aa5194b5890f52a428105d12b66ef167 = private unnamed_addr constant [51 x i8] c"data provided contains an interior nul byte at pos ", align 1
@alloc_895fca6e85fc004dedf49d6d2442fc20 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_aa5194b5890f52a428105d12b66ef167, [4 x i8] c"3\00\00\00" }>, align 4
@alloc_3412ac35c3cedf13fa8186649587ae51 = private unnamed_addr constant [35 x i8] c"data provided is not nul terminated", align 1
@alloc_428480d24192b9201b05b20cc9f63500 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_3412ac35c3cedf13fa8186649587ae51, [4 x i8] c"#\00\00\00" }>, align 4
@alloc_9f798d799ba2eb8dc69261563d94be55 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3d611fba6c663fc09ae800b5a8dbe19f, [12 x i8] c"p\00\00\00\EB\00\00\00(\00\00\00" }>, align 4
@alloc_f7926c9d6ff0a891e629d43941eac3bb = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3d611fba6c663fc09ae800b5a8dbe19f, [12 x i8] c"p\00\00\00\EC\00\00\00A\00\00\00" }>, align 4
@alloc_97acc32034a64f481c6cbd1374cbe63b = private unnamed_addr constant [111 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/iter.rs\00", align 1
@alloc_0db4ed03cfba60b1956623ef21578b4d = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_97acc32034a64f481c6cbd1374cbe63b, [12 x i8] c"n\00\00\00i\00\00\00\0E\00\00\00" }>, align 4
@alloc_3076ca8b1f91ce6b129a8bc312f75342 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00l\06\00\00\1F\00\00\00" }>, align 4
@alloc_f75f43df8b3ea1b7e01ee0bd50b84955 = private unnamed_addr constant [41 x i8] c"assertion failed: new_len <= self.s.len()", align 1
@alloc_210d19cee645d1bce9bd03356f47254c = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_3b7302477125dba97b0af5eda60ff185, [12 x i8] c"m\00\00\00m\06\00\00\11\00\00\00" }>, align 4
@alloc_2b13b859033072973c1fac8df9286d17 = private unnamed_addr constant [109 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/slice.rs\00", align 1
@alloc_d4032619af3a2a23016c7a7ef027e7c2 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_2b13b859033072973c1fac8df9286d17, [12 x i8] c"l\00\00\00\C2\01\00\00 \00\00\00" }>, align 4
@alloc_134ead117cdd9054461fa95e16eba5da = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_97acc32034a64f481c6cbd1374cbe63b, [12 x i8] c"n\00\00\00\C0\00\00\00&\00\00\00" }>, align 4
@alloc_383483fe6d8fc70f0bd38bbd0780906e = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_97acc32034a64f481c6cbd1374cbe63b, [12 x i8] c"n\00\00\00\C0\00\00\00\11\00\00\00" }>, align 4
@alloc_48ac04d310206a129588d490519ad8d1 = private unnamed_addr constant [49 x i8] c"key is not properly ordered relative to neighbors", align 1
@alloc_7e300f0237de82efc24d058d41767854 = private unnamed_addr constant <{ ptr, [4 x i8] }> <{ ptr @alloc_48ac04d310206a129588d490519ad8d1, [4 x i8] c"1\00\00\00" }>, align 4
@alloc_8407de24b9e131517d3488beb23d4c7f = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_57a8a8c930578b2e3ee501533f28ad28, [12 x i8] c"p\00\00\00\8E\00\00\00\01\00\00\00" }>, align 4
@alloc_aeb2eedab926fd08481d065c7ab4286b = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_a83d20901bdbaf91a9502b8e08f4a957, [12 x i8] c"m\00\00\00\E7\01\00\003\00\00\00" }>, align 4
@alloc_2000d5cbcdac26d35806b3a60d00335c = private unnamed_addr constant [114 x i8] c"/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/decode.rs\00", align 1
@alloc_2fd3a6e7a81e88b0c6f1b828f341a353 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_2000d5cbcdac26d35806b3a60d00335c, [12 x i8] c"q\00\00\00E\00\00\00\15\00\00\00" }>, align 4
@alloc_3eca034e7c95719d4df067fb5b8d9fe6 = private unnamed_addr constant [8 x i8] c"\01\00\00\00\00\00\00\00", align 4
@alloc_2a9b26b5005d87297d57eebf70d4ca63 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_2000d5cbcdac26d35806b3a60d00335c, [12 x i8] c"q\00\00\00f\00\00\00\17\00\00\00" }>, align 4
@alloc_2c64555d466b4d408bbb4fb778bdbb48 = private unnamed_addr constant <{ ptr, [12 x i8] }> <{ ptr @alloc_2000d5cbcdac26d35806b3a60d00335c, [12 x i8] c"q\00\00\00f\00\00\00\13\00\00\00" }>, align 4

; __rustc::__rdl_alloc_error_handler
; Function Attrs: noreturn nounwind
define dso_local void @_RNvCsaKOfhLrNfTz_7___rustc25___rdl_alloc_error_handler(i32 %0, i32 %_align) unnamed_addr #0 !dbg !293 {
start:
  %args.dbg.spill2 = alloca [4 x i8], align 4
  %args.dbg.spill = alloca [4 x i8], align 4
  %_align.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [8 x i8], align 4
  %args1 = alloca [8 x i8], align 4
  %_12 = alloca [24 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  %size = alloca [4 x i8], align 4
  store i32 %0, ptr %size, align 4
    #dbg_declare(ptr %size, !299, !DIExpression(), !386)
  store i32 %_align, ptr %_align.dbg.spill, align 4
    #dbg_declare(ptr %_align.dbg.spill, !300, !DIExpression(), !387)
    #dbg_declare(ptr %args, !308, !DIExpression(), !388)
    #dbg_declare(ptr %args1, !384, !DIExpression(), !389)
; call __rustc::__rust_alloc_error_handler_should_panic_v2
  %_3 = call i8 @_RNvCsaKOfhLrNfTz_7___rustc42___rust_alloc_error_handler_should_panic_v2() #17, !dbg !390
  %1 = icmp eq i8 %_3, 0, !dbg !391
  br i1 %1, label %bb5, label %bb2, !dbg !391

bb5:                                              ; preds = %start
  store ptr %size, ptr %args.dbg.spill, align 4, !dbg !392
    #dbg_declare(ptr %args.dbg.spill, !382, !DIExpression(), !393)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_16, ptr align 4 %size) #17, !dbg !393
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args1, i32 0, !dbg !393
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_16, i32 8, i1 false), !dbg !393
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hac7f2f720c9cd823E"(ptr sret([24 x i8]) align 4 %_12, ptr align 4 @alloc_b0372332874b832f149657ebe0da4c28, ptr align 4 %args1) #17, !dbg !389
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_12, i1 zeroext false, ptr align 4 @alloc_0f85af4e4b50d49339da0095a5b54748) #18, !dbg !394
  unreachable, !dbg !394

bb2:                                              ; preds = %start
  store ptr %size, ptr %args.dbg.spill2, align 4, !dbg !395
    #dbg_declare(ptr %args.dbg.spill2, !301, !DIExpression(), !396)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %size) #17, !dbg !396
  %3 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !396
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %3, ptr align 4 %_9, i32 8, i1 false), !dbg !396
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hac7f2f720c9cd823E"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 @alloc_b0372332874b832f149657ebe0da4c28, ptr align 4 %args) #17, !dbg !388
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_5, ptr align 4 @alloc_7f0301cd9d20b34f44b6ad3fa9e5dd94) #18, !dbg !395
  unreachable, !dbg !395
}

; <alloc::ffi::c_str::CString as core::convert::From<&core::ffi::c_str::CStr>>::from
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN100_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$GT$4from17h4f0160485ae35353E"(ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !397 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !423, !DIExpression(), !424)
; call alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
  %1 = call { ptr, i32 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17haacd9a91ba7d82a0E"(ptr align 1 %s.0, i32 %s.1) #17, !dbg !425
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !425
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !425
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !426
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !426
  ret { ptr, i32 } %3, !dbg !426
}

; <alloc::boxed::Box<[T]> as alloc::boxed::convert::BoxFromSlice<T>>::from_slice
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN101_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..boxed..convert..BoxFromSlice$LT$T$GT$$GT$10from_slice17h9febee8fa02ab093E"(ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #2 !dbg !427 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %buf = alloca [8 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !437, !DIExpression(), !442)
    #dbg_declare(ptr %buf, !440, !DIExpression(), !443)
  store i32 %slice.1, ptr %len.dbg.spill, align 4, !dbg !444
    #dbg_declare(ptr %len.dbg.spill, !438, !DIExpression(), !445)
; call alloc::raw_vec::RawVec<T>::with_capacity
  %1 = call { i32, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17h4eb2f3b85fffd4ebE"(i32 %slice.1) #17, !dbg !446
  %2 = extractvalue { i32, ptr } %1, 0, !dbg !446
  %3 = extractvalue { i32, ptr } %1, 1, !dbg !446
  store i32 %2, ptr %buf, align 4, !dbg !446
  %4 = getelementptr inbounds i8, ptr %buf, i32 4, !dbg !446
  store ptr %3, ptr %4, align 4, !dbg !446
  store ptr %slice.0, ptr %self.dbg.spill.i, align 4
  %5 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %slice.1, ptr %5, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !447, !DIExpression(), !455)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_6 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h270e5ed45b1e0b2eE"(ptr align 4 %buf) #17, !dbg !457
  store ptr %slice.0, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !458, !DIExpression(), !467)
  store ptr %_6, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !465, !DIExpression(), !469)
  store i32 %slice.1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !466, !DIExpression(), !470)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !471
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !471

bb2.i:                                            ; preds = %start
; call core::ptr::copy_nonoverlapping::precondition_check
  call void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %slice.0, ptr %_6, i32 1, i32 1, i32 %slice.1, ptr align 4 @alloc_15a52d1a884c78a5de92a2463d39823d) #17, !dbg !474
  br label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !474

_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit: ; preds = %start, %bb2.i
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_6, ptr align 1 %slice.0, i32 %slice.1, i1 false), !dbg !475
  %6 = load i32, ptr %buf, align 4, !dbg !476
  %7 = getelementptr inbounds i8, ptr %buf, i32 4, !dbg !476
  %8 = load ptr, ptr %7, align 4, !dbg !476
; call alloc::raw_vec::RawVec<T,A>::into_box
  %9 = call { ptr, i32 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17he871bc64efd70c4fE"(i32 %6, ptr %8, i32 %slice.1) #17, !dbg !477
  %_8.0 = extractvalue { ptr, i32 } %9, 0, !dbg !477
  %_8.1 = extractvalue { ptr, i32 } %9, 1, !dbg !477
; call alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
  %10 = call { ptr, i32 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h24e8cf368fce8da5E"(ptr align 1 %_8.0, i32 %_8.1) #17, !dbg !478
  %_0.0 = extractvalue { ptr, i32 } %10, 0, !dbg !478
  %_0.1 = extractvalue { ptr, i32 } %10, 1, !dbg !478
  %11 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !479
  %12 = insertvalue { ptr, i32 } %11, i32 %_0.1, 1, !dbg !479
  ret { ptr, i32 } %12, !dbg !479
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h4241de272d72337eE"(ptr align 4 %self, ptr align 4 %g) unnamed_addr #1 !dbg !480 {
start:
  %g.dbg.spill = alloca [4 x i8], align 4
  %init.dbg.spill = alloca [0 x i8], align 1
  %_4 = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !569, !DIExpression(), !577)
    #dbg_declare(ptr %init.dbg.spill, !570, !DIExpression(), !578)
  store ptr %g, ptr %g.dbg.spill, align 4
    #dbg_declare(ptr %g.dbg.spill, !571, !DIExpression(), !579)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_4, ptr align 4 %self, i32 12, i1 false), !dbg !580
; call core::iter::adapters::map::map_fold
  %_5 = call align 4 ptr @_ZN4core4iter8adapters3map8map_fold17h9fbeeb88c390e13aE(ptr align 4 %g) #17, !dbg !581
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h11413b9cfc449ae0E(ptr align 4 %_4, ptr align 4 %_5) #17, !dbg !582
  ret void, !dbg !583
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nounwind
define dso_local i32 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h45d345b8de3281a9E"(ptr %self.0, ptr %self.1, i32 %init) unnamed_addr #1 !dbg !584 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !617, !DIExpression(), !624)
  store i32 %init, ptr %init.dbg.spill, align 4
    #dbg_declare(ptr %init.dbg.spill, !618, !DIExpression(), !625)
    #dbg_declare(ptr %g.dbg.spill, !619, !DIExpression(), !626)
; call core::iter::adapters::map::map_fold
  call void @_ZN4core4iter8adapters3map8map_fold17h77b577df5c8d5e69E() #17, !dbg !627
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i32 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hdf3ba228be50706cE"(ptr %self.0, ptr %self.1, i32 %init) #17, !dbg !628
  ret i32 %_0, !dbg !629
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nounwind
define dso_local i8 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h7f4571960d69e0faE"(ptr %self.0, ptr %self.1, i8 %init) unnamed_addr #1 !dbg !630 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !663, !DIExpression(), !670)
  store i8 %init, ptr %init.dbg.spill, align 1
    #dbg_declare(ptr %init.dbg.spill, !664, !DIExpression(), !671)
    #dbg_declare(ptr %g.dbg.spill, !665, !DIExpression(), !672)
; call core::iter::adapters::map::map_fold
  call void @_ZN4core4iter8adapters3map8map_fold17hcb0a43cac0c84b0cE() #17, !dbg !673
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i8 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hc20c44969b923b81E"(ptr %self.0, ptr %self.1, i8 %init) #17, !dbg !674
  ret i8 %_0, !dbg !675
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9b95bb9acbc2b2d8E"(ptr align 4 %self, ptr align 4 %g) unnamed_addr #1 !dbg !676 {
start:
  %g.dbg.spill = alloca [4 x i8], align 4
  %init.dbg.spill = alloca [0 x i8], align 1
  %_4 = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !705, !DIExpression(), !710)
    #dbg_declare(ptr %init.dbg.spill, !706, !DIExpression(), !711)
  store ptr %g, ptr %g.dbg.spill, align 4
    #dbg_declare(ptr %g.dbg.spill, !707, !DIExpression(), !712)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_4, ptr align 4 %self, i32 12, i1 false), !dbg !713
; call core::iter::adapters::map::map_fold
  %_5 = call align 4 ptr @_ZN4core4iter8adapters3map8map_fold17hd4ff735be36beea1E(ptr align 4 %g) #17, !dbg !714
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17hecebd7358d334c47E(ptr align 4 %_4, ptr align 4 %_5) #17, !dbg !715
  ret void, !dbg !716
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9cd58454b5701ea2E"(ptr align 4 %self, ptr align 4 %g) unnamed_addr #1 !dbg !717 {
start:
  %g.dbg.spill = alloca [4 x i8], align 4
  %init.dbg.spill = alloca [0 x i8], align 1
  %_4 = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !761, !DIExpression(), !766)
    #dbg_declare(ptr %init.dbg.spill, !762, !DIExpression(), !767)
  store ptr %g, ptr %g.dbg.spill, align 4
    #dbg_declare(ptr %g.dbg.spill, !763, !DIExpression(), !768)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_4, ptr align 4 %self, i32 12, i1 false), !dbg !769
; call core::iter::adapters::map::map_fold
  %_5 = call align 4 ptr @_ZN4core4iter8adapters3map8map_fold17heebc66200a6c1895E(ptr align 4 %g) #17, !dbg !770
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h34daa7dcf129f3aeE(ptr align 4 %_4, ptr align 4 %_5) #17, !dbg !771
  ret void, !dbg !772
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4efad3714318d8aeE"(ptr align 4 %self) unnamed_addr #2 !dbg !773 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [3 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !778, !DIExpression(), !781)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %2 = call i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80c70d7ff5437ee7E"(ptr align 4 %self) #17, !dbg !782
  store i24 %2, ptr %1, align 4, !dbg !782
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_2, ptr align 4 %1, i32 3, i1 false), !dbg !782
  %_4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !783
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 1 %_2, i32 3, i1 false), !dbg !784
  %3 = load i24, ptr %0, align 4, !dbg !784
; call core::option::Option<T>::map
  %4 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17he097700b04df08d9E"(i24 %3, ptr align 1 %_4) #17, !dbg !785
  %_0.0 = extractvalue { i16, i16 } %4, 0, !dbg !785
  %_0.1 = extractvalue { i16, i16 } %4, 1, !dbg !785
  %5 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !786
  %6 = insertvalue { i16, i16 } %5, i16 %_0.1, 1, !dbg !786
  ret { i16, i16 } %6, !dbg !786
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2081ae1bb7222a7E"(ptr align 4 %self) unnamed_addr #2 !dbg !787 {
start:
  %0 = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [3 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !792, !DIExpression(), !793)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
  %2 = call i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80c70d7ff5437ee7E"(ptr align 4 %self) #17, !dbg !794
  store i24 %2, ptr %1, align 4, !dbg !794
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_2, ptr align 4 %1, i32 3, i1 false), !dbg !794
  %_4 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !795
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 1 %_2, i32 3, i1 false), !dbg !796
  %3 = load i24, ptr %0, align 4, !dbg !796
; call core::option::Option<T>::map
  %4 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17hcfc3e3e90154290fE"(i24 %3, ptr align 1 %_4) #17, !dbg !797
  %_0.0 = extractvalue { i16, i16 } %4, 0, !dbg !797
  %_0.1 = extractvalue { i16, i16 } %4, 1, !dbg !797
  %5 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !798
  %6 = insertvalue { i16, i16 } %5, i16 %_0.1, 1, !dbg !798
  ret { i16, i16 } %6, !dbg !798
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h382fcde1af476226E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !799 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !808, !DIExpression(), !809)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbf0d1329d7c63d92E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !810
  ret void, !dbg !811
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49cdf9f6e3eb2dc6E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !812 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !817, !DIExpression(), !819)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he0c58d9d11f37d70E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !820
  ret void, !dbg !821
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53a6dc5bd5e417f1E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !822 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !827, !DIExpression(), !829)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha770b931b3c13a9dE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !830
  ret void, !dbg !831
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h74c964c242110fdaE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !832 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !837, !DIExpression(), !838)
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbf0d1329d7c63d92E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !839
  ret void, !dbg !840
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h89b22289d0fc54dcE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !841 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !846, !DIExpression(), !848)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfc3844d32c81b82fE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !849
  ret void, !dbg !850
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hcbf8eb201d7f87d2E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !851 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %exact = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !874, !DIExpression(), !877)
    #dbg_declare(ptr %exact, !875, !DIExpression(), !878)
  br label %bb5, !dbg !879

bb5:                                              ; preds = %start
  %_10 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !880
  %_8 = load ptr, ptr %_10, align 4, !dbg !881
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !882
  %_11 = load ptr, ptr %0, align 4, !dbg !882
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_8, ptr %_11) #17, !dbg !883
  store i32 %1, ptr %exact, align 4, !dbg !883
  br label %bb6, !dbg !883

bb6:                                              ; preds = %bb5
  %_12 = load i32, ptr %exact, align 4, !dbg !884
  %_14 = load i32, ptr %exact, align 4, !dbg !885
  store i32 %_12, ptr %_0, align 4, !dbg !886
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !886
  store i32 1, ptr %2, align 4, !dbg !886
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !886
  store i32 %_14, ptr %3, align 4, !dbg !886
  ret void, !dbg !887

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define dso_local { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48e6eee6f1ad3442E"(ptr align 4 %self) unnamed_addr #1 !dbg !888 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !895, !DIExpression(), !897)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb7cd0206a5834b2eE"(ptr align 4 %self) #17, !dbg !898
; call core::option::Option<&T>::cloned
  %0 = call { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hfa3c6d43cdc2252bE"(ptr align 2 %_2) #17, !dbg !899
  %_0.0 = extractvalue { i16, i16 } %0, 0, !dbg !899
  %_0.1 = extractvalue { i16, i16 } %0, 1, !dbg !899
  %1 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !900
  %2 = insertvalue { i16, i16 } %1, i16 %_0.1, 1, !dbg !900
  ret { i16, i16 } %2, !dbg !900
}

; <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nounwind
define dso_local void @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h8184a2c9dc96cb9eE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !901 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !906, !DIExpression(), !907)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfffe6b3678ea3e33E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !908
  ret void, !dbg !909
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define dso_local i24 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80c70d7ff5437ee7E"(ptr align 4 %self) unnamed_addr #1 !dbg !910 {
start:
  %0 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !928, !DIExpression(), !930)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_2 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa92a93c49917941E"(ptr align 4 %self) #17, !dbg !931
; call core::option::Option<&T>::copied
  %1 = call i24 @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h2aea4de361f9caadE"(ptr align 1 %_2) #17, !dbg !932
  store i24 %1, ptr %0, align 4, !dbg !932
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_0, ptr align 4 %0, i32 3, i1 false), !dbg !932
  %2 = load i24, ptr %_0, align 1, !dbg !933
  ret i24 %2, !dbg !933
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nounwind
define dso_local void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbf0d1329d7c63d92E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !934 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !939, !DIExpression(), !940)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h962f2a63bd9e5a1dE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !941
  ret void, !dbg !942
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h10c5a030ee96fe6fE"(ptr align 4 %self, ptr align 4 %fold) unnamed_addr #2 !dbg !943 {
start:
  %fold.dbg.spill = alloca [4 x i8], align 4
    #dbg_declare(ptr %self, !997, !DIExpression(), !1003)
  %init.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %init.dbg.spill, !998, !DIExpression(), !1004)
  store ptr %fold, ptr %fold.dbg.spill, align 4
    #dbg_declare(ptr %fold.dbg.spill, !999, !DIExpression(), !1005)
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
  %_6 = call align 4 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h878c7de198198c8aE"(ptr align 4 %fold) #17, !dbg !1006
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h04bb63a6624f986bE"(ptr align 4 %self, ptr align 4 %_6) #17, !dbg !1007
  ret void, !dbg !1008
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9ffbd105e53ef9a2E"(ptr align 4 %self, ptr align 4 %fold) unnamed_addr #2 !dbg !1009 {
start:
  %fold.dbg.spill = alloca [4 x i8], align 4
    #dbg_declare(ptr %self, !1024, !DIExpression(), !1029)
  %init.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %init.dbg.spill, !1025, !DIExpression(), !1030)
  store ptr %fold, ptr %fold.dbg.spill, align 4
    #dbg_declare(ptr %fold.dbg.spill, !1026, !DIExpression(), !1031)
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
  %_6 = call align 4 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h8e5a227b68c3356dE"(ptr align 4 %fold) #17, !dbg !1032
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h4cb90075644b2540E"(ptr align 4 %self, ptr align 4 %_6) #17, !dbg !1033
  ret void, !dbg !1034
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h04bb63a6624f986bE"(ptr align 4 %self, ptr align 4 %0) unnamed_addr #1 !dbg !1035 {
start:
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %f = alloca [4 x i8], align 4
  store ptr %0, ptr %f, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1048, !DIExpression(), !1058)
    #dbg_declare(ptr %init.dbg.spill, !1049, !DIExpression(), !1059)
    #dbg_declare(ptr %f, !1050, !DIExpression(), !1060)
  %1 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !1061
  %_8 = load ptr, ptr %1, align 4, !dbg !1061
; call core::iter::traits::iterator::Iterator::try_fold
  %_4 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hc3031e90bc21e441E(ptr align 4 %self, ptr align 4 %f, ptr align 2 %_8) #17, !dbg !1062
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::into_try
  call void @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17ha45297853c740410E"(i1 zeroext %_4) #17, !dbg !1063
  ret void, !dbg !1064
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold
; Function Attrs: nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h4cb90075644b2540E"(ptr align 4 %self, ptr align 4 %0) unnamed_addr #1 !dbg !1065 {
start:
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %f = alloca [4 x i8], align 4
  store ptr %0, ptr %f, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1073, !DIExpression(), !1078)
    #dbg_declare(ptr %init.dbg.spill, !1074, !DIExpression(), !1079)
    #dbg_declare(ptr %f, !1075, !DIExpression(), !1080)
  %1 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !1081
  %_8 = load ptr, ptr %1, align 4, !dbg !1081
; call core::iter::traits::iterator::Iterator::try_fold
  %_4 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h589d773956655b6cE(ptr align 4 %self, ptr align 4 %f, ptr align 2 %_8) #17, !dbg !1082
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::into_try
  call void @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17ha45297853c740410E"(i1 zeroext %_4) #17, !dbg !1083
  ret void, !dbg !1084
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h111e07f5607473d9E"(ptr align 4 %_1, ptr align 4 %x) unnamed_addr #2 !dbg !1085 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %x.dbg.spill = alloca [4 x i8], align 4
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1130, !DIExpression(DW_OP_deref, DW_OP_deref), !1136)
    #dbg_declare(ptr %_1.dbg.spill, !1131, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4, DW_OP_deref), !1137)
    #dbg_declare(ptr %acc.dbg.spill, !1128, !DIExpression(), !1138)
    #dbg_declare(ptr %x, !1129, !DIExpression(), !1139)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1271de477c4c8d0E"(ptr sret([8 x i8]) align 4 %_4, ptr align 4 %x) #17, !dbg !1140
  %0 = load i16, ptr %_4, align 4, !dbg !1140
  %_5 = zext i16 %0 to i32, !dbg !1140
  %1 = trunc nuw i32 %_5 to i1, !dbg !1141
  br i1 %1, label %bb3, label %bb4, !dbg !1141

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_4, i32 2, !dbg !1142
  %r = load i16, ptr %2, align 2, !dbg !1142
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !1142
    #dbg_declare(ptr %r.dbg.spill, !1134, !DIExpression(), !1143)
  %3 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1144
  %_13 = load ptr, ptr %3, align 4, !dbg !1144
  %4 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1144
  %_14 = load ptr, ptr %4, align 4, !dbg !1144
  store i16 1, ptr %_14, align 2, !dbg !1144
  %5 = getelementptr inbounds i8, ptr %_14, i32 2, !dbg !1144
  store i16 %r, ptr %5, align 2, !dbg !1144
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h275adc288524ea21E"() #17, !dbg !1145
  store i8 1, ptr %_0, align 1, !dbg !1146
  br label %bb8, !dbg !1147

bb4:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !1148
  %x1 = load i32, ptr %6, align 4, !dbg !1148
  store i32 %x1, ptr %x.dbg.spill, align 4, !dbg !1148
    #dbg_declare(ptr %x.dbg.spill, !1132, !DIExpression(), !1149)
  %_12 = load ptr, ptr %_1, align 4, !dbg !1150
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
  call void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h39ad0741d0772856E"(ptr align 4 %_12, i32 %x1) #17, !dbg !1150
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::from_try
  %7 = call zeroext i1 @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h9bd09ff904c18546E"() #17, !dbg !1151
  %8 = zext i1 %7 to i8, !dbg !1151
  store i8 %8, ptr %_0, align 1, !dbg !1151
  br label %bb8, !dbg !1151

bb8:                                              ; preds = %bb3, %bb4
  %9 = load i8, ptr %_0, align 1, !dbg !1152
  %10 = trunc nuw i8 %9 to i1, !dbg !1152
  ret i1 %10, !dbg !1152

bb2:                                              ; No predecessors!
  unreachable, !dbg !1140
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hf933ace932e6e75eE"(ptr align 4 %_1, ptr align 4 %x) unnamed_addr #2 !dbg !1153 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %x.dbg.spill = alloca [4 x i8], align 4
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1165, !DIExpression(DW_OP_deref, DW_OP_deref), !1171)
    #dbg_declare(ptr %_1.dbg.spill, !1166, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4, DW_OP_deref), !1172)
    #dbg_declare(ptr %acc.dbg.spill, !1163, !DIExpression(), !1173)
    #dbg_declare(ptr %x, !1164, !DIExpression(), !1174)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1271de477c4c8d0E"(ptr sret([8 x i8]) align 4 %_4, ptr align 4 %x) #17, !dbg !1175
  %0 = load i16, ptr %_4, align 4, !dbg !1175
  %_5 = zext i16 %0 to i32, !dbg !1175
  %1 = trunc nuw i32 %_5 to i1, !dbg !1176
  br i1 %1, label %bb3, label %bb4, !dbg !1176

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_4, i32 2, !dbg !1177
  %r = load i16, ptr %2, align 2, !dbg !1177
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !1177
    #dbg_declare(ptr %r.dbg.spill, !1169, !DIExpression(), !1178)
  %3 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1179
  %_13 = load ptr, ptr %3, align 4, !dbg !1179
  %4 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1179
  %_14 = load ptr, ptr %4, align 4, !dbg !1179
  store i16 1, ptr %_14, align 2, !dbg !1179
  %5 = getelementptr inbounds i8, ptr %_14, i32 2, !dbg !1179
  store i16 %r, ptr %5, align 2, !dbg !1179
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h275adc288524ea21E"() #17, !dbg !1180
  store i8 1, ptr %_0, align 1, !dbg !1181
  br label %bb8, !dbg !1182

bb4:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !1183
  %x1 = load i32, ptr %6, align 4, !dbg !1183
  store i32 %x1, ptr %x.dbg.spill, align 4, !dbg !1183
    #dbg_declare(ptr %x.dbg.spill, !1167, !DIExpression(), !1184)
  %_12 = load ptr, ptr %_1, align 4, !dbg !1185
; call core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
  call void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h00ae34164ac98efbE"(ptr align 4 %_12, i32 %x1) #17, !dbg !1185
; call core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::from_try
  %7 = call zeroext i1 @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h9bd09ff904c18546E"() #17, !dbg !1186
  %8 = zext i1 %7 to i8, !dbg !1186
  store i8 %8, ptr %_0, align 1, !dbg !1186
  br label %bb8, !dbg !1186

bb8:                                              ; preds = %bb3, %bb4
  %9 = load i8, ptr %_0, align 1, !dbg !1187
  %10 = trunc nuw i8 %9 to i1, !dbg !1187
  ret i1 %10, !dbg !1187

bb2:                                              ; No predecessors!
  unreachable, !dbg !1175
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h0171ada23766b7f2E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !1188 {
start:
  %upper.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1193, !DIExpression(), !1196)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !1197
  %_8 = load ptr, ptr %0, align 4, !dbg !1197
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17ha87fa5e8c650b7d4E"(ptr align 2 %_8) #17, !dbg !1198
  br i1 %_2, label %bb2, label %bb3, !dbg !1197

bb3:                                              ; preds = %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha770b931b3c13a9dE"(ptr sret([12 x i8]) align 4 %_6, ptr align 4 %self) #17, !dbg !1199
  %1 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !1200
  %upper.0 = load i32, ptr %1, align 4, !dbg !1200
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !1200
  %upper.1 = load i32, ptr %2, align 4, !dbg !1200
  store i32 %upper.0, ptr %upper.dbg.spill, align 4, !dbg !1200
  %3 = getelementptr inbounds i8, ptr %upper.dbg.spill, i32 4, !dbg !1200
  store i32 %upper.1, ptr %3, align 4, !dbg !1200
    #dbg_declare(ptr %upper.dbg.spill, !1194, !DIExpression(), !1201)
  store i32 0, ptr %_0, align 4, !dbg !1202
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1202
  store i32 %upper.0, ptr %4, align 4, !dbg !1202
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !1202
  store i32 %upper.1, ptr %5, align 4, !dbg !1202
  br label %bb5, !dbg !1203

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !1204
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1204
  store i32 1, ptr %6, align 4, !dbg !1204
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !1204
  store i32 0, ptr %7, align 4, !dbg !1204
  br label %bb5, !dbg !1203

bb5:                                              ; preds = %bb2, %bb3
  ret void, !dbg !1205
}

; <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nounwind
define dso_local void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbdc558b76c528839E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !1206 {
start:
  %upper.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1211, !DIExpression(), !1214)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !1215
  %_8 = load ptr, ptr %0, align 4, !dbg !1215
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17ha87fa5e8c650b7d4E"(ptr align 2 %_8) #17, !dbg !1216
  br i1 %_2, label %bb2, label %bb3, !dbg !1215

bb3:                                              ; preds = %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfc3844d32c81b82fE"(ptr sret([12 x i8]) align 4 %_6, ptr align 4 %self) #17, !dbg !1217
  %1 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !1218
  %upper.0 = load i32, ptr %1, align 4, !dbg !1218
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !1218
  %upper.1 = load i32, ptr %2, align 4, !dbg !1218
  store i32 %upper.0, ptr %upper.dbg.spill, align 4, !dbg !1218
  %3 = getelementptr inbounds i8, ptr %upper.dbg.spill, i32 4, !dbg !1218
  store i32 %upper.1, ptr %3, align 4, !dbg !1218
    #dbg_declare(ptr %upper.dbg.spill, !1212, !DIExpression(), !1219)
  store i32 0, ptr %_0, align 4, !dbg !1220
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1220
  store i32 %upper.0, ptr %4, align 4, !dbg !1220
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !1220
  store i32 %upper.1, ptr %5, align 4, !dbg !1220
  br label %bb5, !dbg !1221

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !1222
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1222
  store i32 1, ptr %6, align 4, !dbg !1222
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !1222
  store i32 0, ptr %7, align 4, !dbg !1222
  br label %bb5, !dbg !1221

bb5:                                              ; preds = %bb2, %bb3
  ret void, !dbg !1223
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3bd435398dffdb81E"(i32 %self.0, i32 %self.1, ptr %slice.0, i32 %slice.1, ptr align 4 %0) unnamed_addr #2 !dbg !1224 {
start:
  %ptr.dbg.spill2.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i = alloca [8 x i8], align 4
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store i32 %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !1259, !DIExpression(), !1263)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %2, align 4
    #dbg_declare(ptr %slice.dbg.spill, !1260, !DIExpression(), !1264)
  br label %bb1, !dbg !1265

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_7 = call i32 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5431d645439ae544E"(ptr %slice.0, i32 %slice.1) #17, !dbg !1267
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check
  call void @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked18precondition_check17hc18e0e4383b38411E"(i32 %self.0, i32 %self.1, i32 %_7, ptr align 4 %0) #17, !dbg !1268
  br label %bb3, !dbg !1268

bb3:                                              ; preds = %bb1
  %new_len = sub nuw i32 %self.1, %self.0, !dbg !1269
  store i32 %new_len, ptr %new_len.dbg.spill, align 4, !dbg !1269
    #dbg_declare(ptr %new_len.dbg.spill, !1261, !DIExpression(), !1270)
  store ptr %slice.0, ptr %ptr.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i, i32 4
  store i32 %slice.1, ptr %3, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i, !1271, !DIExpression(), !1282)
  store i32 %self.0, ptr %offset.dbg.spill.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i, !1276, !DIExpression(), !1284)
  store i32 %new_len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !1277, !DIExpression(), !1285)
  store ptr %slice.0, ptr %ptr.dbg.spill1.i, align 4, !dbg !1286
    #dbg_declare(ptr %ptr.dbg.spill1.i, !1278, !DIExpression(), !1287)
  %ptr.i = getelementptr inbounds nuw i8, ptr %slice.0, i32 %self.0, !dbg !1288
  store ptr %ptr.i, ptr %ptr.dbg.spill2.i, align 4, !dbg !1288
    #dbg_declare(ptr %ptr.dbg.spill2.i, !1280, !DIExpression(), !1289)
  %4 = insertvalue { ptr, i32 } poison, ptr %ptr.i, 0, !dbg !1290
  %5 = insertvalue { ptr, i32 } %4, i32 %new_len, 1, !dbg !1290
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !1291
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !1291
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !1292
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !1292
  ret { ptr, i32 } %7, !dbg !1292
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked18precondition_check17hc18e0e4383b38411E"(i32 %start1, i32 %end, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !1293 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %_7 = alloca [24 x i8], align 4
  store i32 %start1, ptr %start.dbg.spill, align 4
    #dbg_declare(ptr %start.dbg.spill, !1298, !DIExpression(), !1303)
  store i32 %end, ptr %end.dbg.spill, align 4
    #dbg_declare(ptr %end.dbg.spill, !1299, !DIExpression(), !1303)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !1300, !DIExpression(), !1303)
  store ptr @alloc_7e0cd81f9dcb179626435c932d0b5a52, ptr %msg.dbg.spill, align 4, !dbg !1304
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !1304
  store i32 214, ptr %1, align 4, !dbg !1304
    #dbg_declare(ptr %msg.dbg.spill, !1301, !DIExpression(), !1304)
  %_4 = icmp uge i32 %end, %start1, !dbg !1305
  br i1 %_4, label %bb1, label %bb3, !dbg !1305

bb3:                                              ; preds = %bb1, %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_9, i32 0, !dbg !1307
  store ptr @alloc_7e0cd81f9dcb179626435c932d0b5a52, ptr %2, align 4, !dbg !1307
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !1307
  store i32 214, ptr %3, align 4, !dbg !1307
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_7, ptr align 4 %_9) #17, !dbg !1308
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_7, i1 zeroext false, ptr align 4 %0) #18, !dbg !1309
  unreachable, !dbg !1309

bb1:                                              ; preds = %start
  %_5 = icmp ule i32 %end, %len, !dbg !1310
  br i1 %_5, label %bb2, label %bb3, !dbg !1310

bb2:                                              ; preds = %bb1
  ret void, !dbg !1311
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h421f68b7de29a1d7E"(i32 %self, ptr %slice.0, i32 %slice.1) unnamed_addr #2 !dbg !1312 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1320, !DIExpression(), !1322)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !1321, !DIExpression(), !1323)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3bd435398dffdb81E"(i32 0, i32 %self, ptr %slice.0, i32 %slice.1, ptr align 4 @alloc_3b37ba1fe65d44a87ff5ceffa93f0232) #17, !dbg !1324
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !1324
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !1324
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !1325
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !1325
  ret { ptr, i32 } %3, !dbg !1325
}

; <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h5685335e62eb6191E"(i32 %self, ptr %slice.0, i32 %slice.1) unnamed_addr #2 !dbg !1326 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1343, !DIExpression(), !1347)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !1344, !DIExpression(), !1348)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %1 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7d5077b6132e329E"(i32 0, i32 %self, ptr %slice.0, i32 %slice.1, ptr align 4 @alloc_96423e4914ce6c3c6434a312611a30bd) #17, !dbg !1349
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !1349
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !1349
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !1350
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !1350
  ret { ptr, i32 } %3, !dbg !1350
}

; <alloc::collections::btree::set_val::SetValZST as alloc::collections::btree::set_val::IsSetVal>::is_set_val
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN110_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$alloc..collections..btree..set_val..IsSetVal$GT$10is_set_val17h5b524777aacd9904E"() unnamed_addr #1 !dbg !1351 {
start:
  ret i1 true, !dbg !1359
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h447b40add29d5986E"(i32 %self, ptr %slice.0, i32 %slice.1) unnamed_addr #2 !dbg !1360 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1368, !DIExpression(), !1370)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !1369, !DIExpression(), !1371)
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i32 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5431d645439ae544E"(ptr %slice.0, i32 %slice.1) #17, !dbg !1372
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %1 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3bd435398dffdb81E"(i32 %self, i32 %_5, ptr %slice.0, i32 %slice.1, ptr align 4 @alloc_fb19637fa1d463fd9b10bf1ed43b6835) #17, !dbg !1373
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !1373
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !1373
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !1374
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !1374
  ret { ptr, i32 } %3, !dbg !1374
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2f382edd73bf86e2E"(ptr align 4 %self) unnamed_addr #2 !dbg !1375 {
start:
  %pred.dbg.spill = alloca [4 x i8], align 4
  %flag.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1425, !DIExpression(), !1432)
  %flag = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1433
  store ptr %flag, ptr %flag.dbg.spill, align 4, !dbg !1433
    #dbg_declare(ptr %flag.dbg.spill, !1426, !DIExpression(), !1434)
  %pred = getelementptr inbounds i8, ptr %self, i32 9, !dbg !1435
  store ptr %pred, ptr %pred.dbg.spill, align 4, !dbg !1435
    #dbg_declare(ptr %pred.dbg.spill, !1429, !DIExpression(), !1436)
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
  %0 = call { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h22ac175efb6f0d71E"(ptr align 1 %flag, ptr align 1 %pred) #17, !dbg !1437
  %_5.0 = extractvalue { ptr, ptr } %0, 0, !dbg !1437
  %_5.1 = extractvalue { ptr, ptr } %0, 1, !dbg !1437
; call <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::find
  %_0 = call i32 @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17h3346057b77c2c2f8E"(ptr align 4 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #17, !dbg !1438
  ret i32 %_0, !dbg !1439
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf1d20452622fd094E"(ptr align 4 %self) unnamed_addr #2 !dbg !1440 {
start:
  %pred.dbg.spill = alloca [4 x i8], align 4
  %flag.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1454, !DIExpression(), !1460)
  %flag = getelementptr inbounds i8, ptr %self, i32 8, !dbg !1461
  store ptr %flag, ptr %flag.dbg.spill, align 4, !dbg !1461
    #dbg_declare(ptr %flag.dbg.spill, !1455, !DIExpression(), !1462)
  %pred = getelementptr inbounds i8, ptr %self, i32 9, !dbg !1463
  store ptr %pred, ptr %pred.dbg.spill, align 4, !dbg !1463
    #dbg_declare(ptr %pred.dbg.spill, !1457, !DIExpression(), !1464)
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
  %0 = call { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h1e5edd8250081d7eE"(ptr align 1 %flag, ptr align 1 %pred) #17, !dbg !1465
  %_5.0 = extractvalue { ptr, ptr } %0, 0, !dbg !1465
  %_5.1 = extractvalue { ptr, ptr } %0, 1, !dbg !1465
; call core::iter::traits::iterator::Iterator::find
  %_0 = call i32 @_ZN4core4iter6traits8iterator8Iterator4find17h5d6385388677c2c4E(ptr align 4 %self, ptr align 1 %_5.0, ptr align 1 %_5.1) #17, !dbg !1466
  ret i32 %_0, !dbg !1467
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h1e5edd8250081d7eE"(ptr align 1 %flag, ptr align 1 %pred) unnamed_addr #1 !dbg !1468 {
start:
  %pred.dbg.spill = alloca [4 x i8], align 4
  %flag.dbg.spill = alloca [4 x i8], align 4
  store ptr %flag, ptr %flag.dbg.spill, align 4
    #dbg_declare(ptr %flag.dbg.spill, !1478, !DIExpression(), !1482)
  store ptr %pred, ptr %pred.dbg.spill, align 4
    #dbg_declare(ptr %pred.dbg.spill, !1479, !DIExpression(), !1483)
  %0 = insertvalue { ptr, ptr } poison, ptr %flag, 0, !dbg !1484
  %1 = insertvalue { ptr, ptr } %0, ptr %pred, 1, !dbg !1484
  ret { ptr, ptr } %1, !dbg !1484
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h22ac175efb6f0d71E"(ptr align 1 %flag, ptr align 1 %pred) unnamed_addr #1 !dbg !1485 {
start:
  %pred.dbg.spill = alloca [4 x i8], align 4
  %flag.dbg.spill = alloca [4 x i8], align 4
  store ptr %flag, ptr %flag.dbg.spill, align 4
    #dbg_declare(ptr %flag.dbg.spill, !1493, !DIExpression(), !1497)
  store ptr %pred, ptr %pred.dbg.spill, align 4
    #dbg_declare(ptr %pred.dbg.spill, !1494, !DIExpression(), !1498)
  %0 = insertvalue { ptr, ptr } poison, ptr %flag, 0, !dbg !1499
  %1 = insertvalue { ptr, ptr } %0, ptr %pred, 1, !dbg !1499
  ret { ptr, ptr } %1, !dbg !1499
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h38748408e8ecae87E"(ptr align 4 %_1, ptr align 4 %x) unnamed_addr #2 !dbg !1500 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1507, !DIExpression(DW_OP_deref), !1509)
    #dbg_declare(ptr %_1.dbg.spill, !1508, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4), !1510)
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !1506, !DIExpression(), !1511)
  %_6 = load ptr, ptr %_1, align 4, !dbg !1512
  %0 = load i8, ptr %_6, align 1, !dbg !1512
  %_3 = trunc nuw i8 %0 to i1, !dbg !1512
  br i1 %_3, label %bb4, label %bb1, !dbg !1512

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1513
  %_7 = load ptr, ptr %1, align 4, !dbg !1513
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
  %_4 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h147f58b0431ce64fE"(ptr align 1 %_7, ptr align 4 %x) #17, !dbg !1513
  br i1 %_4, label %bb3, label %bb4, !dbg !1513

bb4:                                              ; preds = %bb1, %start
  %_8 = load ptr, ptr %_1, align 4, !dbg !1514
  store i8 1, ptr %_8, align 1, !dbg !1514
  store i8 1, ptr %_0, align 1, !dbg !1515
  br label %bb5, !dbg !1516

bb3:                                              ; preds = %bb1
  store i8 0, ptr %_0, align 1, !dbg !1517
  br label %bb5, !dbg !1516

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !1518
  %3 = trunc nuw i8 %2 to i1, !dbg !1518
  ret i1 %3, !dbg !1518
}

; <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17hea1036ca996dd1cbE"(ptr align 4 %_1, ptr align 4 %x) unnamed_addr #2 !dbg !1519 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1525, !DIExpression(DW_OP_deref), !1527)
    #dbg_declare(ptr %_1.dbg.spill, !1526, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4), !1528)
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !1524, !DIExpression(), !1529)
  %_6 = load ptr, ptr %_1, align 4, !dbg !1530
  %0 = load i8, ptr %_6, align 1, !dbg !1530
  %_3 = trunc nuw i8 %0 to i1, !dbg !1530
  br i1 %_3, label %bb4, label %bb1, !dbg !1530

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !1531
  %_7 = load ptr, ptr %1, align 4, !dbg !1531
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
  %_4 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h775e7e2c581a2f52E"(ptr align 1 %_7, ptr align 4 %x) #17, !dbg !1531
  br i1 %_4, label %bb3, label %bb4, !dbg !1531

bb4:                                              ; preds = %bb1, %start
  %_8 = load ptr, ptr %_1, align 4, !dbg !1532
  store i8 1, ptr %_8, align 1, !dbg !1532
  store i8 1, ptr %_0, align 1, !dbg !1533
  br label %bb5, !dbg !1534

bb3:                                              ; preds = %bb1
  store i8 0, ptr %_0, align 1, !dbg !1535
  br label %bb5, !dbg !1534

bb5:                                              ; preds = %bb4, %bb3
  %2 = load i8, ptr %_0, align 1, !dbg !1536
  %3 = trunc nuw i8 %2 to i1, !dbg !1536
  ret i1 %3, !dbg !1536
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9667c3a18e98260fE"(ptr %unique) unnamed_addr #2 !dbg !1537 {
start:
  %unique.dbg.spill = alloca [4 x i8], align 4
  store ptr %unique, ptr %unique.dbg.spill, align 4
    #dbg_declare(ptr %unique.dbg.spill, !1543, !DIExpression(), !1544)
; call core::ptr::unique::Unique<T>::as_non_null_ptr
  %_0 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h470acafb23eed9e7E"(ptr %unique) #17, !dbg !1545
  ret ptr %_0, !dbg !1546
}

; <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h1258623afb2279a9E"(ptr %pointer) unnamed_addr #2 !dbg !1547 {
start:
  %pointer.dbg.spill = alloca [4 x i8], align 4
  store ptr %pointer, ptr %pointer.dbg.spill, align 4
    #dbg_declare(ptr %pointer.dbg.spill, !1553, !DIExpression(), !1554)
; call core::ptr::unique::Unique<T>::from_non_null
  %_0 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13from_non_null17h4d115aa3d57a36cbE"(ptr %pointer) #17, !dbg !1555
  ret ptr %_0, !dbg !1556
}

; <alloc::ffi::c_str::CString as core::convert::From<alloc::boxed::Box<core::ffi::c_str::CStr>>>::from
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17h064dad4af83ee6c3E"(ptr align 1 %s.0, i32 %s.1) unnamed_addr #2 !dbg !1557 {
start:
  %raw.dbg.spill = alloca [8 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !1566, !DIExpression(), !1573)
; call alloc::boxed::Box<T>::into_raw
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17hc64b9a9312214693E"(ptr align 1 %s.0, i32 %s.1) #17, !dbg !1574
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !1574
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !1574
  store ptr %_3.0, ptr %raw.dbg.spill, align 4, !dbg !1574
  %2 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4, !dbg !1574
  store i32 %_3.1, ptr %2, align 4, !dbg !1574
    #dbg_declare(ptr %raw.dbg.spill, !1567, !DIExpression(), !1575)
; call alloc::boxed::Box<T>::from_raw
  %3 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h595bf8cefd372b4aE"(ptr %_3.0, i32 %_3.1) #17, !dbg !1576
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !1576
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !1576
  %4 = insertvalue { ptr, i32 } poison, ptr %_4.0, 0, !dbg !1577
  %5 = insertvalue { ptr, i32 } %4, i32 %_4.1, 1, !dbg !1577
  ret { ptr, i32 } %5, !dbg !1577
}

; <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17had8cb7e0f7597304E"(i32 %kind.0, i32 %kind.1) unnamed_addr #2 !dbg !1578 {
start:
  %kind.dbg.spill = alloca [8 x i8], align 4
  store i32 %kind.0, ptr %kind.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %kind.dbg.spill, i32 4
  store i32 %kind.1, ptr %0, align 4
    #dbg_declare(ptr %kind.dbg.spill, !1599, !DIExpression(), !1600)
  %1 = insertvalue { i32, i32 } poison, i32 %kind.0, 0, !dbg !1601
  %2 = insertvalue { i32, i32 } %1, i32 %kind.1, 1, !dbg !1601
  ret { i32, i32 } %2, !dbg !1601
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nounwind
define dso_local void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hb418f7fbabe4ee11E"(ptr align 4 %self, ptr %0, ptr %1) unnamed_addr #1 !dbg !1602 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %iterator = alloca [8 x i8], align 4
  store ptr %0, ptr %iterator, align 4
  %2 = getelementptr inbounds i8, ptr %iterator, i32 4
  store ptr %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1610, !DIExpression(), !1614)
    #dbg_declare(ptr %iterator, !1611, !DIExpression(), !1615)
; call core::slice::iter::Iter<T>::as_slice
  %3 = call { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4 %iterator) #17, !dbg !1616
  %slice.0 = extractvalue { ptr, i32 } %3, 0, !dbg !1616
  %slice.1 = extractvalue { ptr, i32 } %3, 1, !dbg !1616
  store ptr %slice.0, ptr %slice.dbg.spill, align 4, !dbg !1616
  %4 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4, !dbg !1616
  store i32 %slice.1, ptr %4, align 4, !dbg !1616
    #dbg_declare(ptr %slice.dbg.spill, !1612, !DIExpression(), !1617)
; call alloc::vec::Vec<T,A>::append_elements
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h72af747639aaced0E"(ptr align 4 %self, ptr %slice.0, i32 %slice.1) #17, !dbg !1618
  ret void, !dbg !1619
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h343fe317fc38becfE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #2 !dbg !1620 {
start:
  %_2 = alloca [12 x i8], align 4
    #dbg_declare(ptr %iter, !1641, !DIExpression(), !1645)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h59edcacceef3f6b9E"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %iter) #17, !dbg !1646
; call core::iter::adapters::try_process
  call void @_ZN4core4iter8adapters11try_process17h5a971f4fa39a6a0bE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_2) #17, !dbg !1647
  ret void, !dbg !1648
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17hac685922e551d632E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #2 !dbg !1649 {
start:
  %_2 = alloca [12 x i8], align 4
    #dbg_declare(ptr %iter, !1653, !DIExpression(), !1655)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h688644204d7d00a6E"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %iter) #17, !dbg !1656
; call core::iter::adapters::try_process
  call void @_ZN4core4iter8adapters11try_process17hbf0f27c7335f51e9E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_2) #17, !dbg !1657
  ret void, !dbg !1658
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h81a312cb4a3be80eE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %_1, ptr align 4 %i) unnamed_addr #2 !dbg !1659 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1667, !DIExpression(), !1668)
    #dbg_declare(ptr %i, !1666, !DIExpression(), !1669)
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17hab070e2b81ea11acE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %i) #17, !dbg !1670
  ret void, !dbg !1671
}

; <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17he44d5f1c2393ed42E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %_1, ptr align 4 %i) unnamed_addr #2 !dbg !1672 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !1679, !DIExpression(), !1680)
    #dbg_declare(ptr %i, !1678, !DIExpression(), !1681)
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h0534f5381279e41fE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %i) #17, !dbg !1682
  ret void, !dbg !1683
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7f917dc30691e145E"(ptr sret([8 x i8]) align 4 %_0) unnamed_addr #2 !dbg !1684 {
start:
  %residual.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !1715, !DIExpression(), !1716)
    #dbg_declare(ptr %residual.dbg.spill, !1714, !DIExpression(), !1716)
  store i16 2, ptr %_0, align 4, !dbg !1717
  ret void, !dbg !1718
}

; <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define dso_local void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h465bfa70caa3a397E"(ptr align 4 %self) unnamed_addr #1 !dbg !1719 {
start:
  %count.dbg.spill.i7 = alloca [4 x i8], align 4
  %self.dbg.spill.i8 = alloca [4 x i8], align 4
  %self.dbg.spill.i6 = alloca [4 x i8], align 4
  %self.dbg.spill.i4 = alloca [4 x i8], align 4
  %count.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %_9.i = alloca [1 x i8], align 1
  %dst.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %tail.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %source_vec.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !1745, !DIExpression(), !1756)
  %_21 = load ptr, ptr %self, align 4, !dbg !1757
  %0 = getelementptr inbounds i8, ptr %_21, i32 16, !dbg !1757
  %_3 = load i32, ptr %0, align 4, !dbg !1757
  %_2 = icmp ugt i32 %_3, 0, !dbg !1757
  br i1 %_2, label %bb1, label %bb11, !dbg !1757

bb11:                                             ; preds = %bb10, %start
  ret void, !dbg !1758

bb1:                                              ; preds = %start
  %_22 = load ptr, ptr %self, align 4, !dbg !1759
  %_5 = getelementptr inbounds i8, ptr %_22, i32 8, !dbg !1759
  store ptr %_5, ptr %self.dbg.spill.i4, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !1760, !DIExpression(), !1767)
  %_3.i5 = load ptr, ptr %_5, align 4, !dbg !1769
  store ptr %_3.i5, ptr %self.dbg.spill.i6, align 4
    #dbg_declare(ptr %self.dbg.spill.i6, !1770, !DIExpression(), !1777)
  store ptr %_3.i5, ptr %source_vec.dbg.spill, align 4, !dbg !1779
    #dbg_declare(ptr %source_vec.dbg.spill, !1746, !DIExpression(), !1780)
; call alloc::vec::Vec<T,A>::len
  %start1 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %_3.i5) #17, !dbg !1781
  store i32 %start1, ptr %start.dbg.spill, align 4, !dbg !1781
    #dbg_declare(ptr %start.dbg.spill, !1748, !DIExpression(), !1782)
  %_23 = load ptr, ptr %self, align 4, !dbg !1783
  %1 = getelementptr inbounds i8, ptr %_23, i32 12, !dbg !1783
  %tail = load i32, ptr %1, align 4, !dbg !1783
  store i32 %tail, ptr %tail.dbg.spill, align 4, !dbg !1783
    #dbg_declare(ptr %tail.dbg.spill, !1750, !DIExpression(), !1784)
  %_9 = icmp ne i32 %tail, %start1, !dbg !1785
  br i1 %_9, label %bb4, label %bb9, !dbg !1785

bb9:                                              ; preds = %_ZN4core3ptr4copy17hd17edac4d372e62bE.exit, %bb1
  %_25 = load ptr, ptr %self, align 4, !dbg !1786
  %2 = getelementptr inbounds i8, ptr %_25, i32 16, !dbg !1786
  %_19 = load i32, ptr %2, align 4, !dbg !1786
  %_20.0 = add i32 %start1, %_19, !dbg !1787
  %_20.1 = icmp ult i32 %_20.0, %start1, !dbg !1787
  br i1 %_20.1, label %panic, label %bb10, !dbg !1787

bb4:                                              ; preds = %bb1
; call alloc::vec::Vec<T,A>::as_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h05f13e46615c6203E"(ptr align 4 %_3.i5) #17, !dbg !1788
  store ptr %_11, ptr %self.dbg.spill.i8, align 4
    #dbg_declare(ptr %self.dbg.spill.i8, !1789, !DIExpression(), !1798)
  store i32 %tail, ptr %count.dbg.spill.i7, align 4
    #dbg_declare(ptr %count.dbg.spill.i7, !1797, !DIExpression(), !1800)
; call core::ub_checks::check_language_ub
  %_3.i9 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !1801
  br i1 %_3.i9, label %bb2.i11, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !1801

bb2.i11:                                          ; preds = %bb4
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h165b117dcf9af246E"(ptr %_11, i32 %tail, i32 1, ptr align 4 @alloc_c83a73e9952866e0853bd8b8ce6f65cb) #17, !dbg !1803
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !1803

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit": ; preds = %bb4, %bb2.i11
  %_0.i10 = getelementptr inbounds nuw i8, ptr %_11, i32 %tail, !dbg !1804
  store ptr %_0.i10, ptr %src.dbg.spill, align 4, !dbg !1805
    #dbg_declare(ptr %src.dbg.spill, !1752, !DIExpression(), !1806)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_14 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %_3.i5) #17, !dbg !1807
  store ptr %_14, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1808, !DIExpression(), !1817)
  store i32 %start1, ptr %count.dbg.spill.i2, align 4
    #dbg_declare(ptr %count.dbg.spill.i2, !1816, !DIExpression(), !1819)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !1820
  br i1 %_3.i, label %bb2.i3, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !1820

bb2.i3:                                           ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %_14, i32 %start1, i32 1, ptr align 4 @alloc_f6c4b1bfa0d849397c96c41b1e50ae1f) #17, !dbg !1822
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !1822

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", %bb2.i3
  %_0.i = getelementptr inbounds nuw i8, ptr %_14, i32 %start1, !dbg !1823
  store ptr %_0.i, ptr %dst.dbg.spill, align 4, !dbg !1824
    #dbg_declare(ptr %dst.dbg.spill, !1754, !DIExpression(), !1825)
  %_24 = load ptr, ptr %self, align 4, !dbg !1826
  %3 = getelementptr inbounds i8, ptr %_24, i32 16, !dbg !1826
  %_16 = load i32, ptr %3, align 4, !dbg !1826
  store ptr %_0.i10, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !1827, !DIExpression(), !1832)
  store ptr %_0.i, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !1830, !DIExpression(), !1834)
  store i32 %_16, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1831, !DIExpression(), !1835)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !1836
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr4copy17hd17edac4d372e62bE.exit, !dbg !1836

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
  %4 = icmp eq i32 %_16, 0, !dbg !1838
  %5 = zext i1 %4 to i8, !dbg !1838
  store i8 %5, ptr %_9.i, align 1, !dbg !1838
  %6 = load i8, ptr %_9.i, align 1, !dbg !1839
  %7 = trunc nuw i8 %6 to i1, !dbg !1839
; call core::ptr::copy::precondition_check
  call void @_ZN4core3ptr4copy18precondition_check17he956a62a93a1dfd5E(ptr %_0.i10, ptr %_0.i, i32 1, i1 zeroext %7, ptr align 4 @alloc_44659632065e7bc5e1cc771c0ae76b73) #17, !dbg !1839
  br label %_ZN4core3ptr4copy17hd17edac4d372e62bE.exit, !dbg !1839

_ZN4core3ptr4copy17hd17edac4d372e62bE.exit:       ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", %bb2.i
  call void @llvm.memmove.p0.p0.i32(ptr align 1 %_0.i, ptr align 1 %_0.i10, i32 %_16, i1 false), !dbg !1840
  br label %bb9, !dbg !1841

bb10:                                             ; preds = %bb9
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E"(ptr align 4 %_3.i5, i32 %_20.0) #17, !dbg !1842
  br label %bb11, !dbg !1842

panic:                                            ; preds = %bb9
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_51b1f99f1456b531b5e9756817166300) #18, !dbg !1787
  unreachable, !dbg !1787
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0156064f922d25f6E"(ptr sret([12 x i8]) align 4 %_0, i16 %residual, ptr align 4 %0) unnamed_addr #2 !dbg !1843 {
start:
  %t.dbg.spill.i = alloca [2 x i8], align 2
  %e.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [2 x i8], align 2
  store i16 %residual, ptr %residual.dbg.spill, align 2
    #dbg_declare(ptr %residual.dbg.spill, !1848, !DIExpression(), !1853)
  store i16 %residual, ptr %e.dbg.spill, align 2, !dbg !1854
    #dbg_declare(ptr %e.dbg.spill, !1849, !DIExpression(), !1855)
  store i16 %residual, ptr %t.dbg.spill.i, align 2
    #dbg_declare(ptr %t.dbg.spill.i, !1856, !DIExpression(), !1865)
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1867
  store i16 %residual, ptr %1, align 4, !dbg !1867
  store i32 -2147483648, ptr %_0, align 4, !dbg !1867
  ret void, !dbg !1868
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h168a58a0e7ce6f64E"(i32 %residual.0, i32 %residual.1, ptr align 4 %0) unnamed_addr #2 !dbg !1869 {
start:
  %t.dbg.spill.i = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [8 x i8], align 4
  %residual.dbg.spill = alloca [8 x i8], align 4
  store i32 %residual.0, ptr %residual.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4
  store i32 %residual.1, ptr %1, align 4
    #dbg_declare(ptr %residual.dbg.spill, !1901, !DIExpression(), !1906)
  store i32 %residual.0, ptr %e.dbg.spill, align 4, !dbg !1907
  %2 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !1907
  store i32 %residual.1, ptr %2, align 4, !dbg !1907
    #dbg_declare(ptr %e.dbg.spill, !1902, !DIExpression(), !1908)
  store i32 %residual.0, ptr %t.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %t.dbg.spill.i, i32 4
  store i32 %residual.1, ptr %3, align 4
    #dbg_declare(ptr %t.dbg.spill.i, !1909, !DIExpression(), !1916)
  %4 = insertvalue { i32, i32 } poison, i32 %residual.0, 0, !dbg !1918
  %5 = insertvalue { i32, i32 } %4, i32 %residual.1, 1, !dbg !1918
  %_3.0 = extractvalue { i32, i32 } %5, 0, !dbg !1919
  %_3.1 = extractvalue { i32, i32 } %5, 1, !dbg !1919
  %6 = insertvalue { i32, i32 } poison, i32 %_3.0, 0, !dbg !1920
  %7 = insertvalue { i32, i32 } %6, i32 %_3.1, 1, !dbg !1920
  ret { i32, i32 } %7, !dbg !1920
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha6eac4d75f65c33cE"(ptr sret([12 x i8]) align 4 %_0, i32 %residual.0, i32 %residual.1, ptr align 4 %0) unnamed_addr #2 !dbg !1921 {
start:
  %t.dbg.spill.i = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [8 x i8], align 4
  %residual.dbg.spill = alloca [8 x i8], align 4
  store i32 %residual.0, ptr %residual.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4
  store i32 %residual.1, ptr %1, align 4
    #dbg_declare(ptr %residual.dbg.spill, !1943, !DIExpression(), !1947)
  store i32 %residual.0, ptr %e.dbg.spill, align 4, !dbg !1948
  %2 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !1948
  store i32 %residual.1, ptr %2, align 4, !dbg !1948
    #dbg_declare(ptr %e.dbg.spill, !1944, !DIExpression(), !1949)
  store i32 %residual.0, ptr %t.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %t.dbg.spill.i, i32 4
  store i32 %residual.1, ptr %3, align 4
    #dbg_declare(ptr %t.dbg.spill.i, !1909, !DIExpression(), !1950)
  %4 = insertvalue { i32, i32 } poison, i32 %residual.0, 0, !dbg !1952
  %5 = insertvalue { i32, i32 } %4, i32 %residual.1, 1, !dbg !1952
  %_3.0 = extractvalue { i32, i32 } %5, 0, !dbg !1953
  %_3.1 = extractvalue { i32, i32 } %5, 1, !dbg !1953
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !1954
  store i32 %_3.0, ptr %6, align 4, !dbg !1954
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !1954
  store i32 %_3.1, ptr %7, align 4, !dbg !1954
  store i32 1, ptr %_0, align 4, !dbg !1954
  ret void, !dbg !1955
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbd212d42dd8e72f9E"(ptr align 4 %0) unnamed_addr #2 !dbg !1956 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !1989, !DIExpression(), !1994)
    #dbg_declare(ptr %e.dbg.spill, !1990, !DIExpression(), !1995)
    #dbg_declare(ptr poison, !1996, !DIExpression(), !2003)
  ret { ptr, i32 } { ptr null, i32 undef }, !dbg !2005
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcec71ed72ec794a3E"(i32 %residual.0, i32 %residual.1, ptr align 4 %0) unnamed_addr #2 !dbg !2006 {
start:
  %e.dbg.spill = alloca [8 x i8], align 4
  %residual.dbg.spill = alloca [8 x i8], align 4
  store i32 %residual.0, ptr %residual.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4
  store i32 %residual.1, ptr %1, align 4
    #dbg_declare(ptr %residual.dbg.spill, !2024, !DIExpression(), !2028)
  store i32 %residual.0, ptr %e.dbg.spill, align 4, !dbg !2029
  %2 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !2029
  store i32 %residual.1, ptr %2, align 4, !dbg !2029
    #dbg_declare(ptr %e.dbg.spill, !2025, !DIExpression(), !2030)
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %3 = call { i32, i32 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17had8cb7e0f7597304E"(i32 %residual.0, i32 %residual.1) #17, !dbg !2031
  %_3.0 = extractvalue { i32, i32 } %3, 0, !dbg !2031
  %_3.1 = extractvalue { i32, i32 } %3, 1, !dbg !2031
  %4 = insertvalue { i32, i32 } poison, i32 %_3.0, 0, !dbg !2032
  %5 = insertvalue { i32, i32 } %4, i32 %_3.1, 1, !dbg !2032
  ret { i32, i32 } %5, !dbg !2032
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdcf57f4260b9a90fE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %0) unnamed_addr #2 !dbg !2033 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !2066, !DIExpression(), !2070)
    #dbg_declare(ptr %e.dbg.spill, !2067, !DIExpression(), !2071)
    #dbg_declare(ptr poison, !1996, !DIExpression(), !2072)
  store i32 1, ptr %_0, align 4, !dbg !2074
  ret void, !dbg !2075
}

; <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::FromResidual<core::ops::try_trait::NeverShortCircuitResidual>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN158_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..try_trait..NeverShortCircuitResidual$GT$$GT$13from_residual17hcf0748bb94e2ae25E"() unnamed_addr #2 !dbg !2076 {
start:
  %never.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !2086, !DIExpression(), !2087)
    #dbg_declare(ptr %never.dbg.spill, !2085, !DIExpression(), !2087)
  unreachable, !dbg !2088
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h11ad804e7e25f717E"() unnamed_addr #2 !dbg !2089 {
start:
  %b.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %residual.dbg.spill, !2109, !DIExpression(), !2112)
    #dbg_declare(ptr %b.dbg.spill, !2110, !DIExpression(), !2113)
  ret i1 true, !dbg !2114
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h1c1608b22587779cE"(i32 %residual) unnamed_addr #2 !dbg !2115 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [4 x i8], align 4
  store i32 %residual, ptr %residual.dbg.spill, align 4
    #dbg_declare(ptr %residual.dbg.spill, !2146, !DIExpression(), !2149)
  store i32 %residual, ptr %b.dbg.spill, align 4, !dbg !2150
    #dbg_declare(ptr %b.dbg.spill, !2147, !DIExpression(), !2151)
  ret i32 %residual, !dbg !2152
}

; <alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN254_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h45e5b0a36e6a4abdE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !2153 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2159, !DIExpression(), !2161)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2160, !DIExpression(), !2162)
; call <alloc::string::String as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17h68e51c38356b61cbE"(ptr align 4 %self, ptr align 4 %f) #17, !dbg !2163
  ret i1 %_0, !dbg !2164
}

; <alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h6a47e6818fd9978fE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !2165 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2168, !DIExpression(), !2170)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2169, !DIExpression(), !2171)
; call <alloc::string::String as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hfcd12e315e5af83bE"(ptr align 4 %self, ptr align 4 %f) #17, !dbg !2172
  ret i1 %_0, !dbg !2173
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0916ce255cb76c5dE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !2174 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2181, !DIExpression(), !2185)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2182, !DIExpression(), !2186)
  %_3 = load ptr, ptr %self, align 4, !dbg !2187
; call <core::alloc::layout::Layout as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17hfd831f110b56f5e8E"(ptr align 4 %_3, ptr align 4 %f) #17, !dbg !2188
  ret i1 %_0, !dbg !2189
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h09b445505687c2edE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !2190 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2195, !DIExpression(), !2199)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2196, !DIExpression(), !2200)
  %_3 = load ptr, ptr %self, align 4, !dbg !2201
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd488c21ea98dead3E"(ptr align 1 %_3, ptr align 4 %f) #17, !dbg !2202
  ret i1 %_0, !dbg !2203
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h416ebf28a9f7421fE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !2204 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2209, !DIExpression(), !2213)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2210, !DIExpression(), !2214)
  %_3 = load ptr, ptr %self, align 4, !dbg !2215
; call <core::ptr::alignment::Alignment as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN68_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb30f35f3ef64fa8E"(ptr align 4 %_3, ptr align 4 %f) #17, !dbg !2216
  ret i1 %_0, !dbg !2217
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h624a3f117251aebaE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !2218 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2223, !DIExpression(), !2225)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2224, !DIExpression(), !2226)
  %_3 = load ptr, ptr %self, align 4, !dbg !2227
; call core::fmt::num::<impl core::fmt::Debug for u8>::fmt
  %_0 = call zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hce95413df8f05b15E"(ptr align 1 %_3, ptr align 4 %f) #17, !dbg !2228
  ret i1 %_0, !dbg !2229
}

; core::intrinsics::cold_path
; Function Attrs: cold nounwind
define internal void @_ZN4core10intrinsics9cold_path17h9a7d752e09dde473E() unnamed_addr #3 !dbg !2230 {
start:
  ret void, !dbg !2235
}

; core::any::TypeId::of
; Function Attrs: nounwind
define dso_local void @_ZN4core3any6TypeId2of17h2f39189d873d9981E(ptr sret([16 x i8]) align 4 %_0) unnamed_addr #1 !dbg !2236 {
start:
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 @anon.f99686d6bd00e1abcb4284a1418719c5.0, i32 16, i1 false), !dbg !2250
  ret void, !dbg !2251
}

; core::any::TypeId::of
; Function Attrs: nounwind
define dso_local void @_ZN4core3any6TypeId2of17h80ececb577e45a52E(ptr sret([16 x i8]) align 4 %_0) unnamed_addr #1 !dbg !2252 {
start:
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 @anon.f99686d6bd00e1abcb4284a1418719c5.1, i32 16, i1 false), !dbg !2256
  ret void, !dbg !2257
}

; core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h51a721e978f495dcE"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #2 !dbg !2258 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2266, !DIExpression(), !2268)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !2267, !DIExpression(), !2269)
  %_3 = load i8, ptr %self, align 1, !dbg !2270
  %_4 = load i8, ptr %other, align 1, !dbg !2271
  %_0 = icmp eq i8 %_3, %_4, !dbg !2270
  ret i1 %_0, !dbg !2272
}

; core::ffi::c_str::CStr::to_bytes_with_nul
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17hd036897479adf9ebE(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !2273 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !2279, !DIExpression(), !2280)
  %1 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !2281
  %2 = insertvalue { ptr, i32 } %1, i32 %self.1, 1, !dbg !2281
  ret { ptr, i32 } %2, !dbg !2281
}

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha653fea02727b72eE(ptr align 1 %bytes.0, i32 %bytes.1) unnamed_addr #2 !dbg !2282 {
start:
  %bytes.dbg.spill = alloca [8 x i8], align 4
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i32 4
  store i32 %bytes.1, ptr %0, align 4
    #dbg_declare(ptr %bytes.dbg.spill, !2287, !DIExpression(), !2288)
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::runtime
  %1 = call { ptr, i32 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7runtime17h97fbaf7f04d93a75E(ptr align 1 %bytes.0, i32 %bytes.1) #17, !dbg !2289
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !2289
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !2289
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !2291
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !2291
  ret { ptr, i32 } %3, !dbg !2291
}

; core::ffi::c_str::CStr::from_bytes_with_nul_unchecked::runtime
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7runtime17h97fbaf7f04d93a75E(ptr align 1 %bytes.0, i32 %bytes.1) unnamed_addr #2 !dbg !2292 {
start:
  %bytes.dbg.spill = alloca [8 x i8], align 4
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i32 4
  store i32 %bytes.1, ptr %0, align 4
    #dbg_declare(ptr %bytes.dbg.spill, !2296, !DIExpression(), !2297)
; call core::slice::<impl [T]>::is_empty
  %_2 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %bytes.0, i32 %bytes.1) #17, !dbg !2298
  br i1 %_2, label %bb5, label %bb2, !dbg !2300

bb2:                                              ; preds = %start
  %_6.0 = sub i32 %bytes.1, 1, !dbg !2301
  %_6.1 = icmp ult i32 %bytes.1, 1, !dbg !2301
  br i1 %_6.1, label %panic, label %bb3, !dbg !2301

bb5:                                              ; preds = %bb4, %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_8d17c0d7765c1f1b0dc7acf59030ea5a, i32 66, ptr align 4 @alloc_4734734726776c28171adc37e518bde7) #18, !dbg !2302
  unreachable, !dbg !2302

bb3:                                              ; preds = %bb2
  %_8 = icmp ult i32 %_6.0, %bytes.1, !dbg !2305
  br i1 %_8, label %bb4, label %panic1, !dbg !2305

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_b0677a05385078818fd397d323594923) #18, !dbg !2301
  unreachable, !dbg !2301

bb4:                                              ; preds = %bb3
  %1 = getelementptr inbounds nuw i8, ptr %bytes.0, i32 %_6.0, !dbg !2305
  %_3 = load i8, ptr %1, align 1, !dbg !2305
  %2 = icmp eq i8 %_3, 0, !dbg !2305
  br i1 %2, label %bb6, label %bb5, !dbg !2305

panic1:                                           ; preds = %bb3
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 %_6.0, i32 %bytes.1, ptr align 4 @alloc_d74285fe2bb24e0e5fc13cd1cd1415d9) #18, !dbg !2305
  unreachable, !dbg !2305

bb6:                                              ; preds = %bb4
  %3 = insertvalue { ptr, i32 } poison, ptr %bytes.0, 0, !dbg !2306
  %4 = insertvalue { ptr, i32 } %3, i32 %bytes.1, 1, !dbg !2306
  ret { ptr, i32 } %4, !dbg !2306
}

; core::ffi::c_str::CStr::to_bytes
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3ffi5c_str4CStr8to_bytes17hf4da749a303a719fE(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !2307 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %bytes.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !2310, !DIExpression(), !2313)
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %1 = call { ptr, i32 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17hd036897479adf9ebE(ptr align 1 %self.0, i32 %self.1) #17, !dbg !2314
  %bytes.0 = extractvalue { ptr, i32 } %1, 0, !dbg !2314
  %bytes.1 = extractvalue { ptr, i32 } %1, 1, !dbg !2314
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 4, !dbg !2314
  %2 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i32 4, !dbg !2314
  store i32 %bytes.1, ptr %2, align 4, !dbg !2314
    #dbg_declare(ptr %bytes.dbg.spill, !2311, !DIExpression(), !2315)
  store ptr %bytes.0, ptr %self.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %bytes.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !447, !DIExpression(), !2316)
  %_6.0 = sub i32 %bytes.1, 1, !dbg !2318
  %_6.1 = icmp ult i32 %bytes.1, 1, !dbg !2318
  br i1 %_6.1, label %panic, label %bb3, !dbg !2318

bb3:                                              ; preds = %start
; call core::slice::raw::from_raw_parts
  %4 = call { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17h8506f20c0934200fE(ptr %bytes.0, i32 %_6.0, ptr align 4 @alloc_48f1e36bbecaa5baf2b51523fa0f7d48) #17, !dbg !2319
  %_0.0 = extractvalue { ptr, i32 } %4, 0, !dbg !2319
  %_0.1 = extractvalue { ptr, i32 } %4, 1, !dbg !2319
  %5 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !2320
  %6 = insertvalue { ptr, i32 } %5, i32 %_0.1, 1, !dbg !2320
  ret { ptr, i32 } %6, !dbg !2320

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_f4bb89cd01a4042b909578d4bce679d0) #18, !dbg !2318
  unreachable, !dbg !2318
}

; core::fmt::rt::Argument::new_debug
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %x) unnamed_addr #2 !dbg !2321 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !2330, !DIExpression(), !2336)
; call core::ptr::non_null::NonNull<T>::from_ref
  %_4 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f140e76f1334349E"(ptr align 4 %x) #17, !dbg !2337
; call core::ptr::non_null::NonNull<T>::cast
  %_3 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haf0707dc4461958bE"(ptr %_4) #17, !dbg !2338
  store ptr @"_ZN50_$LT$$LP$U$C$T$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h834ab37bfdc2f8e5E", ptr %f.dbg.spill, align 4, !dbg !2339
    #dbg_declare(ptr %f.dbg.spill, !2331, !DIExpression(), !2340)
  store ptr %_3, ptr %_2, align 4, !dbg !2341
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !2341
  store ptr @"_ZN50_$LT$$LP$U$C$T$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h834ab37bfdc2f8e5E", ptr %0, align 4, !dbg !2341
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 8, i1 false), !dbg !2342
  ret void, !dbg !2343
}

; core::fmt::num::<impl core::fmt::Debug for u8>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hce95413df8f05b15E"(ptr align 1 %self, ptr align 4 %f) unnamed_addr #2 !dbg !2344 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2351, !DIExpression(), !2353)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2352, !DIExpression(), !2354)
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72b54bf2b5971ea0E(ptr align 4 %f) #17, !dbg !2355
  br i1 %_3, label %bb2, label %bb3, !dbg !2356

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hda8089ad17629515E(ptr align 4 %f) #17, !dbg !2357
  br i1 %_5, label %bb5, label %bb6, !dbg !2358

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17hf19d67508dd58d4aE"(ptr align 1 %self, ptr align 4 %f) #17, !dbg !2359
  %1 = zext i1 %0 to i8, !dbg !2359
  store i8 %1, ptr %_0, align 1, !dbg !2359
  br label %bb7, !dbg !2359

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
  %2 = call zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hf2721191f040b59aE"(ptr align 1 %self, ptr align 4 %f) #17, !dbg !2360
  %3 = zext i1 %2 to i8, !dbg !2360
  store i8 %3, ptr %_0, align 1, !dbg !2360
  br label %bb7, !dbg !2360

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h3a28df7a448ec4e8E"(ptr align 1 %self, ptr align 4 %f) #17, !dbg !2361
  %5 = zext i1 %4 to i8, !dbg !2361
  store i8 %5, ptr %_0, align 1, !dbg !2361
  br label %bb7, !dbg !2361

bb7:                                              ; preds = %bb2, %bb5, %bb6
  %6 = load i8, ptr %_0, align 1, !dbg !2362
  %7 = trunc nuw i8 %6 to i1, !dbg !2362
  ret i1 %7, !dbg !2362
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h7429cd3c1f263cabE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !2363 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2368, !DIExpression(), !2370)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !2369, !DIExpression(), !2371)
; call core::fmt::Formatter::debug_lower_hex
  %_3 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72b54bf2b5971ea0E(ptr align 4 %f) #17, !dbg !2372
  br i1 %_3, label %bb2, label %bb3, !dbg !2373

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_upper_hex
  %_5 = call zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hda8089ad17629515E(ptr align 4 %f) #17, !dbg !2374
  br i1 %_5, label %bb5, label %bb6, !dbg !2375

bb2:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %0 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h50261c4f5d2f5115E"(ptr align 4 %self, ptr align 4 %f) #17, !dbg !2376
  %1 = zext i1 %0 to i8, !dbg !2376
  store i8 %1, ptr %_0, align 1, !dbg !2376
  br label %bb7, !dbg !2376

bb6:                                              ; preds = %bb3
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %2 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcfc244072f79d997E"(ptr align 4 %self, ptr align 4 %f) #17, !dbg !2377
  %3 = zext i1 %2 to i8, !dbg !2377
  store i8 %3, ptr %_0, align 1, !dbg !2377
  br label %bb7, !dbg !2377

bb5:                                              ; preds = %bb3
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hcb782d3a6cd9db4aE"(ptr align 4 %self, ptr align 4 %f) #17, !dbg !2378
  %5 = zext i1 %4 to i8, !dbg !2378
  store i8 %5, ptr %_0, align 1, !dbg !2378
  br label %bb7, !dbg !2378

bb7:                                              ; preds = %bb2, %bb5, %bb6
  %6 = load i8, ptr %_0, align 1, !dbg !2379
  %7 = trunc nuw i8 %6 to i1, !dbg !2379
  ret i1 %7, !dbg !2379
}

; core::fmt::Write::write_fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @_ZN4core3fmt5Write9write_fmt17hdad00fb98f69e3d1E(ptr align 4 %self, ptr align 4 %args) unnamed_addr #1 !dbg !2380 {
start:
  %0 = alloca [24 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2439, !DIExpression(), !2443)
    #dbg_declare(ptr %args, !2440, !DIExpression(), !2444)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 4 %args, i32 24, i1 false), !dbg !2445
; call <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
  %_0 = call zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h9a8986ae569912f1E"(ptr align 4 %self, ptr align 4 %0) #17, !dbg !2446
  ret i1 %_0, !dbg !2447
}

; core::fmt::Arguments::estimated_capacity
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3fmt9Arguments18estimated_capacity17hd10c770fa84e30ffE(ptr align 4 %self) unnamed_addr #2 !dbg !2448 {
start:
  %pieces_length.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2454, !DIExpression(), !2457)
  %_14.0 = load ptr, ptr %self, align 4, !dbg !2458
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2458
  %_14.1 = load i32, ptr %0, align 4, !dbg !2458
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h61b462ed25bc8a6bE"(ptr align 4 %_14.0, i32 %_14.1) #17, !dbg !2459
  %_4.0 = extractvalue { ptr, ptr } %1, 0, !dbg !2459
  %_4.1 = extractvalue { ptr, ptr } %1, 1, !dbg !2459
; call core::iter::traits::iterator::Iterator::map
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h41ebf98691fa9ee0E(ptr %_4.0, ptr %_4.1) #17, !dbg !2460
  %_3.0 = extractvalue { ptr, ptr } %2, 0, !dbg !2460
  %_3.1 = extractvalue { ptr, ptr } %2, 1, !dbg !2460
; call core::iter::traits::iterator::Iterator::sum
  %pieces_length = call i32 @_ZN4core4iter6traits8iterator8Iterator3sum17h06caeb082aa12247E(ptr %_3.0, ptr %_3.1) #17, !dbg !2461
  store i32 %pieces_length, ptr %pieces_length.dbg.spill, align 4, !dbg !2461
    #dbg_declare(ptr %pieces_length.dbg.spill, !2455, !DIExpression(), !2462)
  %3 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2463
  %_15.0 = load ptr, ptr %3, align 4, !dbg !2463
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !2463
  %_15.1 = load i32, ptr %4, align 4, !dbg !2463
; call core::slice::<impl [T]>::is_empty
  %_5 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h3927176a461ce4f3E"(ptr align 4 %_15.0, i32 %_15.1) #17, !dbg !2464
  br i1 %_5, label %bb5, label %bb6, !dbg !2463

bb6:                                              ; preds = %start
  %_16.0 = load ptr, ptr %self, align 4, !dbg !2465
  %5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2465
  %_16.1 = load i32, ptr %5, align 4, !dbg !2465
; call core::slice::<impl [T]>::is_empty
  %_6 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hf54b78ef45a4106bE"(ptr align 4 %_16.0, i32 %_16.1) #17, !dbg !2466
  br i1 %_6, label %bb13, label %bb8, !dbg !2465

bb5:                                              ; preds = %start
  store i32 %pieces_length, ptr %_0, align 4, !dbg !2467
  br label %bb15, !dbg !2468

bb8:                                              ; preds = %bb6
  %_17.0 = load ptr, ptr %self, align 4, !dbg !2469
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2469
  %_17.1 = load i32, ptr %6, align 4, !dbg !2469
  %_11 = icmp ult i32 0, %_17.1, !dbg !2469
  br i1 %_11, label %bb9, label %panic, !dbg !2469

bb13:                                             ; preds = %bb11, %bb9, %bb6
; call core::num::<impl usize>::checked_mul
  %7 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E"(i32 %pieces_length, i32 2) #17, !dbg !2470
  %_13.0 = extractvalue { i32, i32 } %7, 0, !dbg !2470
  %_13.1 = extractvalue { i32, i32 } %7, 1, !dbg !2470
; call core::option::Option<T>::unwrap_or
  %8 = call i32 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hb5cdb4f217bc202aE"(i32 %_13.0, i32 %_13.1, i32 0) #17, !dbg !2471
  store i32 %8, ptr %_0, align 4, !dbg !2471
  br label %bb15, !dbg !2471

bb9:                                              ; preds = %bb8
  %_18.0 = load ptr, ptr %self, align 4, !dbg !2469
  %9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2469
  %_18.1 = load i32, ptr %9, align 4, !dbg !2469
  %10 = getelementptr inbounds nuw { ptr, i32 }, ptr %_18.0, i32 0, !dbg !2469
  %_19.0 = load ptr, ptr %10, align 4, !dbg !2469
  %11 = getelementptr inbounds i8, ptr %10, i32 4, !dbg !2469
  %_19.1 = load i32, ptr %11, align 4, !dbg !2469
; call core::str::<impl str>::is_empty
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1a6184bdcfacbb3aE"(ptr align 1 %_19.0, i32 %_19.1) #17, !dbg !2472
  br i1 %_7, label %bb11, label %bb13, !dbg !2469

panic:                                            ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 0, i32 %_17.1, ptr align 4 @alloc_99d03419440bec9986d39aaf03fb0991) #18, !dbg !2469
  unreachable, !dbg !2469

bb11:                                             ; preds = %bb9
  %_12 = icmp ult i32 %pieces_length, 16, !dbg !2473
  br i1 %_12, label %bb12, label %bb13, !dbg !2473

bb12:                                             ; preds = %bb11
  store i32 0, ptr %_0, align 4, !dbg !2474
  br label %bb15, !dbg !2475

bb15:                                             ; preds = %bb5, %bb13, %bb12
  %12 = load i32, ptr %_0, align 4, !dbg !2476
  ret i32 %12, !dbg !2476
}

; core::fmt::Arguments::estimated_capacity::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17hb5bc4f021df36a38E"(ptr align 1 %_1, ptr align 4 %x) unnamed_addr #2 !dbg !2477 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !2483, !DIExpression(), !2484)
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !2482, !DIExpression(), !2485)
  %_3.0 = load ptr, ptr %x, align 4, !dbg !2486
  %0 = getelementptr inbounds i8, ptr %x, i32 4, !dbg !2486
  %_3.1 = load i32, ptr %0, align 4, !dbg !2486
; call core::str::<impl str>::len
  %_0 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !2487
  ret i32 %_0, !dbg !2488
}

; core::fmt::Arguments::as_statically_known_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3fmt9Arguments23as_statically_known_str17h237d54dac2fc53a3E(ptr align 4 %self) unnamed_addr #2 !dbg !2489 {
start:
  %0 = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %s = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2505, !DIExpression(), !2508)
    #dbg_declare(ptr %s, !2506, !DIExpression(), !2509)
; call core::fmt::Arguments::as_str
  %1 = call { ptr, i32 } @_ZN4core3fmt9Arguments6as_str17h3d5c6286cb726aa2E(ptr align 4 %self) #17, !dbg !2510
  %2 = extractvalue { ptr, i32 } %1, 0, !dbg !2510
  %3 = extractvalue { ptr, i32 } %1, 1, !dbg !2510
  store ptr %2, ptr %s, align 4, !dbg !2510
  %4 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !2510
  store i32 %3, ptr %4, align 4, !dbg !2510
; call core::option::Option<T>::is_some
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h59be6c2f34b18cc5E"(ptr align 4 %s) #17, !dbg !2511
  %5 = call i1 @llvm.is.constant.i1(i1 %_4), !dbg !2512
  %6 = zext i1 %5 to i8, !dbg !2512
  store i8 %6, ptr %0, align 1, !dbg !2512
  %7 = load i8, ptr %0, align 1, !dbg !2512
  %_3 = trunc nuw i8 %7 to i1, !dbg !2512
  br i1 %_3, label %bb4, label %bb5, !dbg !2512

bb5:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !2513
  br label %bb6, !dbg !2514

bb4:                                              ; preds = %start
  %8 = load ptr, ptr %s, align 4, !dbg !2515
  %9 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !2515
  %10 = load i32, ptr %9, align 4, !dbg !2515
  store ptr %8, ptr %_0, align 4, !dbg !2515
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2515
  store i32 %10, ptr %11, align 4, !dbg !2515
  br label %bb6, !dbg !2514

bb6:                                              ; preds = %bb4, %bb5
  %12 = load ptr, ptr %_0, align 4, !dbg !2516
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2516
  %14 = load i32, ptr %13, align 4, !dbg !2516
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0, !dbg !2516
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1, !dbg !2516
  ret { ptr, i32 } %16, !dbg !2516
}

; core::fmt::Arguments::as_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3fmt9Arguments6as_str17h3d5c6286cb726aa2E(ptr align 4 %self) unnamed_addr #2 !dbg !2517 {
start:
  %s.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [16 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2520, !DIExpression(), !2523)
  %_3.0 = load ptr, ptr %self, align 4, !dbg !2524
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2524
  %_3.1 = load i32, ptr %0, align 4, !dbg !2524
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !2525
  %_4.0 = load ptr, ptr %1, align 4, !dbg !2525
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !2525
  %_4.1 = load i32, ptr %2, align 4, !dbg !2525
  store ptr %_3.0, ptr %_2, align 4, !dbg !2526
  %3 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !2526
  store i32 %_3.1, ptr %3, align 4, !dbg !2526
  %4 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !2526
  store ptr %_4.0, ptr %4, align 4, !dbg !2526
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !2526
  store i32 %_4.1, ptr %5, align 4, !dbg !2526
  %_15.0 = load ptr, ptr %_2, align 4, !dbg !2527
  %6 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !2527
  %_15.1 = load i32, ptr %6, align 4, !dbg !2527
  %7 = icmp eq i32 %_15.1, 0, !dbg !2527
  br i1 %7, label %bb2, label %bb3, !dbg !2527

bb2:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !2528
  %_16.0 = load ptr, ptr %8, align 4, !dbg !2528
  %9 = getelementptr inbounds i8, ptr %8, i32 4, !dbg !2528
  %_16.1 = load i32, ptr %9, align 4, !dbg !2528
  %10 = icmp eq i32 %_16.1, 0, !dbg !2528
  br i1 %10, label %bb6, label %bb1, !dbg !2528

bb3:                                              ; preds = %start
  %_17.0 = load ptr, ptr %_2, align 4, !dbg !2529
  %11 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !2529
  %_17.1 = load i32, ptr %11, align 4, !dbg !2529
  %12 = icmp eq i32 %_17.1, 1, !dbg !2529
  br i1 %12, label %bb4, label %bb1, !dbg !2529

bb6:                                              ; preds = %bb2
  store ptr inttoptr (i32 1 to ptr), ptr %_0, align 4, !dbg !2530
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2530
  store i32 0, ptr %13, align 4, !dbg !2530
  br label %bb7, !dbg !2531

bb1:                                              ; preds = %bb4, %bb3, %bb2
  store ptr null, ptr %_0, align 4, !dbg !2532
  br label %bb7, !dbg !2532

bb7:                                              ; preds = %bb1, %bb5, %bb6
  %14 = load ptr, ptr %_0, align 4, !dbg !2533
  %15 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2533
  %16 = load i32, ptr %15, align 4, !dbg !2533
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0, !dbg !2533
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1, !dbg !2533
  ret { ptr, i32 } %18, !dbg !2533

bb4:                                              ; preds = %bb3
  %19 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !2534
  %_18.0 = load ptr, ptr %19, align 4, !dbg !2534
  %20 = getelementptr inbounds i8, ptr %19, i32 4, !dbg !2534
  %_18.1 = load i32, ptr %20, align 4, !dbg !2534
  %21 = icmp eq i32 %_18.1, 0, !dbg !2534
  br i1 %21, label %bb5, label %bb1, !dbg !2534

bb5:                                              ; preds = %bb4
  %_19.0 = load ptr, ptr %_2, align 4, !dbg !2535
  %22 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !2535
  %_19.1 = load i32, ptr %22, align 4, !dbg !2535
  %s = getelementptr inbounds nuw { ptr, i32 }, ptr %_19.0, i32 0, !dbg !2535
  store ptr %s, ptr %s.dbg.spill, align 4, !dbg !2535
    #dbg_declare(ptr %s.dbg.spill, !2521, !DIExpression(), !2536)
  %_20.0 = load ptr, ptr %s, align 4, !dbg !2537
  %23 = getelementptr inbounds i8, ptr %s, i32 4, !dbg !2537
  %_20.1 = load i32, ptr %23, align 4, !dbg !2537
  store ptr %_20.0, ptr %_0, align 4, !dbg !2538
  %24 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2538
  store i32 %_20.1, ptr %24, align 4, !dbg !2538
  br label %bb7, !dbg !2539
}

; core::fmt::Formatter::write_fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd79f790f9e7cd2edE(ptr align 4 %self, ptr align 4 %fmt) unnamed_addr #2 !dbg !2540 {
start:
  %0 = alloca [24 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2545, !DIExpression(), !2549)
    #dbg_declare(ptr %fmt, !2546, !DIExpression(), !2550)
; call core::fmt::Arguments::as_statically_known_str
  %1 = call { ptr, i32 } @_ZN4core3fmt9Arguments23as_statically_known_str17h237d54dac2fc53a3E(ptr align 4 %fmt) #17, !dbg !2551
  %2 = extractvalue { ptr, i32 } %1, 0, !dbg !2551
  %3 = extractvalue { ptr, i32 } %1, 1, !dbg !2551
  store ptr %2, ptr %_3, align 4, !dbg !2551
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !2551
  store i32 %3, ptr %4, align 4, !dbg !2551
  %5 = load ptr, ptr %_3, align 4, !dbg !2552
  %6 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !2552
  %7 = load i32, ptr %6, align 4, !dbg !2552
  %8 = ptrtoint ptr %5 to i32, !dbg !2552
  %9 = icmp eq i32 %8, 0, !dbg !2552
  %_5 = select i1 %9, i32 0, i32 1, !dbg !2552
  %10 = trunc nuw i32 %_5 to i1, !dbg !2553
  br i1 %10, label %bb2, label %bb3, !dbg !2553

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 4, !dbg !2554
  %11 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !2554
  %s.1 = load i32, ptr %11, align 4, !dbg !2554
  store ptr %s.0, ptr %s.dbg.spill, align 4, !dbg !2554
  %12 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4, !dbg !2554
  store i32 %s.1, ptr %12, align 4, !dbg !2554
    #dbg_declare(ptr %s.dbg.spill, !2547, !DIExpression(), !2554)
  %_7.0 = load ptr, ptr %self, align 4, !dbg !2555
  %13 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2555
  %_7.1 = load ptr, ptr %13, align 4, !dbg !2555
  %14 = getelementptr inbounds i8, ptr %_7.1, i32 12, !dbg !2555
  %15 = load ptr, ptr %14, align 4, !dbg !2555, !invariant.load !21, !nonnull !21
  %16 = call zeroext i1 %15(ptr align 1 %_7.0, ptr align 1 %s.0, i32 %s.1) #17, !dbg !2556
  %17 = zext i1 %16 to i8, !dbg !2556
  store i8 %17, ptr %_0, align 1, !dbg !2556
  br label %bb4, !dbg !2556

bb3:                                              ; preds = %start
  %_8.0 = load ptr, ptr %self, align 4, !dbg !2557
  %18 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !2557
  %_8.1 = load ptr, ptr %18, align 4, !dbg !2557
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 4 %fmt, i32 24, i1 false), !dbg !2558
; call core::fmt::write
  %19 = call zeroext i1 @_ZN4core3fmt5write17hc2899684fc6bf93bE(ptr align 1 %_8.0, ptr align 4 %_8.1, ptr align 4 %0) #17, !dbg !2558
  %20 = zext i1 %19 to i8, !dbg !2558
  store i8 %20, ptr %_0, align 1, !dbg !2558
  br label %bb4, !dbg !2558

bb4:                                              ; preds = %bb3, %bb2
  %21 = load i8, ptr %_0, align 1, !dbg !2559
  %22 = trunc nuw i8 %21 to i1, !dbg !2559
  ret i1 %22, !dbg !2559

bb5:                                              ; No predecessors!
  unreachable, !dbg !2560
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem15size_of_val_raw17h79109169d713363cE(ptr %val.0, i32 %val.1) unnamed_addr #2 !dbg !2561 {
start:
  %0 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  store ptr %val.0, ptr %val.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4
  store i32 %val.1, ptr %1, align 4
    #dbg_declare(ptr %val.dbg.spill, !2566, !DIExpression(), !2567)
  %2 = mul nuw nsw i32 %val.1, 1, !dbg !2568
  store i32 %2, ptr %0, align 4, !dbg !2568
  %_0 = load i32, ptr %0, align 4, !dbg !2568
  ret i32 %_0, !dbg !2569
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem15size_of_val_raw17h7b5f9bff9272d22dE(ptr %val.0, i32 %val.1) unnamed_addr #2 !dbg !2570 {
start:
  %0 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  store ptr %val.0, ptr %val.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4
  store i32 %val.1, ptr %1, align 4
    #dbg_declare(ptr %val.dbg.spill, !2584, !DIExpression(), !2587)
  %2 = mul nuw nsw i32 %val.1, 1, !dbg !2588
  %3 = add i32 8, %2, !dbg !2588
  %4 = add i32 %3, 3, !dbg !2588
  %5 = and i32 %4, -4, !dbg !2588
  store i32 %5, ptr %0, align 4, !dbg !2588
  %_0 = load i32, ptr %0, align 4, !dbg !2588
  ret i32 %_0, !dbg !2589
}

; core::mem::size_of_val_raw
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem15size_of_val_raw17h8c1d2cf78d5527b3E(ptr %val.0, i32 %val.1) unnamed_addr #2 !dbg !2590 {
start:
  %0 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  store ptr %val.0, ptr %val.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4
  store i32 %val.1, ptr %1, align 4
    #dbg_declare(ptr %val.dbg.spill, !2598, !DIExpression(), !2601)
  %2 = mul nuw nsw i32 %val.1, 1, !dbg !2602
  %3 = add i32 8, %2, !dbg !2602
  %4 = add i32 %3, 3, !dbg !2602
  %5 = and i32 %4, -4, !dbg !2602
  store i32 %5, ptr %0, align 4, !dbg !2602
  %_0 = load i32, ptr %0, align 4, !dbg !2602
  ret i32 %_0, !dbg !2603
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem16align_of_val_raw17h0728738b66176619E(ptr %val.0, i32 %val.1) unnamed_addr #2 !dbg !2604 {
start:
  %0 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  store ptr %val.0, ptr %val.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4
  store i32 %val.1, ptr %1, align 4
    #dbg_declare(ptr %val.dbg.spill, !2606, !DIExpression(), !2607)
  %2 = mul nuw nsw i32 %val.1, 1, !dbg !2608
  %3 = add i32 8, %2, !dbg !2608
  %4 = add i32 %3, 3, !dbg !2608
  %5 = and i32 %4, -4, !dbg !2608
  store i32 4, ptr %0, align 4, !dbg !2608
  %_0 = load i32, ptr %0, align 4, !dbg !2608
  ret i32 %_0, !dbg !2609
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem16align_of_val_raw17h2a204d6bcc5fa0a3E(ptr %val.0, i32 %val.1) unnamed_addr #2 !dbg !2610 {
start:
  %0 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  store ptr %val.0, ptr %val.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4
  store i32 %val.1, ptr %1, align 4
    #dbg_declare(ptr %val.dbg.spill, !2623, !DIExpression(), !2626)
  %2 = mul nuw nsw i32 %val.1, 1, !dbg !2627
  %3 = add i32 0, %2, !dbg !2627
  %4 = add i32 %3, 0, !dbg !2627
  %5 = and i32 %4, -1, !dbg !2627
  store i32 1, ptr %0, align 4, !dbg !2627
  %_0 = load i32, ptr %0, align 4, !dbg !2627
  ret i32 %_0, !dbg !2628
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem16align_of_val_raw17h807b65e5d7397ac7E(ptr %val.0, i32 %val.1) unnamed_addr #2 !dbg !2629 {
start:
  %0 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  store ptr %val.0, ptr %val.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4
  store i32 %val.1, ptr %1, align 4
    #dbg_declare(ptr %val.dbg.spill, !2631, !DIExpression(), !2632)
  %2 = mul nuw nsw i32 %val.1, 1, !dbg !2633
  store i32 1, ptr %0, align 4, !dbg !2633
  %_0 = load i32, ptr %0, align 4, !dbg !2633
  ret i32 %_0, !dbg !2634
}

; core::mem::align_of_val_raw
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3mem16align_of_val_raw17h8401cc9a1dbaf96cE(ptr %val.0, i32 %val.1) unnamed_addr #2 !dbg !2635 {
start:
  %0 = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  store ptr %val.0, ptr %val.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4
  store i32 %val.1, ptr %1, align 4
    #dbg_declare(ptr %val.dbg.spill, !2637, !DIExpression(), !2638)
  %2 = mul nuw nsw i32 %val.1, 1, !dbg !2639
  %3 = add i32 8, %2, !dbg !2639
  %4 = add i32 %3, 3, !dbg !2639
  %5 = and i32 %4, -4, !dbg !2639
  store i32 4, ptr %0, align 4, !dbg !2639
  %_0 = load i32, ptr %0, align 4, !dbg !2639
  ret i32 %_0, !dbg !2640
}

; core::mem::take
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3mem4take17h141cde2045e6ee7bE(ptr align 4 %dest) unnamed_addr #2 !dbg !2641 {
start:
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !2646, !DIExpression(), !2649)
; call <alloc::boxed::Box<[T]> as core::default::Default>::default
  %0 = call { ptr, i32 } @"_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17h2b5961ec46a53765E"() #17, !dbg !2650
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !2650
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !2650
; call core::mem::replace
  %1 = call { ptr, i32 } @_ZN4core3mem7replace17h28a3c6463160f06fE(ptr align 4 %dest, ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !2651
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !2651
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !2651
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !2652
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !2652
  ret { ptr, i32 } %3, !dbg !2652
}

; core::mem::take
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core3mem4take17hd018c29f487d7d3bE(ptr align 4 %dest) unnamed_addr #2 !dbg !2653 {
start:
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !2658, !DIExpression(), !2661)
; call <core::slice::iter::Iter<T> as core::default::Default>::default
  %0 = call { ptr, ptr } @"_ZN75_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h38e03984e1dfce33E"() #17, !dbg !2662
  %_2.0 = extractvalue { ptr, ptr } %0, 0, !dbg !2662
  %_2.1 = extractvalue { ptr, ptr } %0, 1, !dbg !2662
; call core::mem::replace
  %1 = call { ptr, ptr } @_ZN4core3mem7replace17h09547d6588142868E(ptr align 4 %dest, ptr %_2.0, ptr %_2.1) #17, !dbg !2663
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !2663
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !2663
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !2664
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !2664
  ret { ptr, ptr } %3, !dbg !2664
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core3mem7replace17h09547d6588142868E(ptr align 4 %dest, ptr %src.0, ptr %src.1) unnamed_addr #2 !dbg !2665 {
start:
  %result.dbg.spill = alloca [8 x i8], align 4
  %src.dbg.spill = alloca [8 x i8], align 4
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !2669, !DIExpression(), !2673)
  store ptr %src.0, ptr %src.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 4
  store ptr %src.1, ptr %0, align 4
    #dbg_declare(ptr %src.dbg.spill, !2670, !DIExpression(), !2674)
  %result.0 = load ptr, ptr %dest, align 4, !dbg !2675
  %1 = getelementptr inbounds i8, ptr %dest, i32 4, !dbg !2675
  %result.1 = load ptr, ptr %1, align 4, !dbg !2675
  store ptr %result.0, ptr %result.dbg.spill, align 4, !dbg !2675
  %2 = getelementptr inbounds i8, ptr %result.dbg.spill, i32 4, !dbg !2675
  store ptr %result.1, ptr %2, align 4, !dbg !2675
    #dbg_declare(ptr %result.dbg.spill, !2671, !DIExpression(), !2676)
  store ptr %src.0, ptr %dest, align 4, !dbg !2677
  %3 = getelementptr inbounds i8, ptr %dest, i32 4, !dbg !2677
  store ptr %src.1, ptr %3, align 4, !dbg !2677
  %4 = insertvalue { ptr, ptr } poison, ptr %result.0, 0, !dbg !2678
  %5 = insertvalue { ptr, ptr } %4, ptr %result.1, 1, !dbg !2678
  ret { ptr, ptr } %5, !dbg !2678
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local { i16, i16 } @_ZN4core3mem7replace17h14cb4ef1ee48e710E(ptr align 2 %dest, i16 %src.0, i16 %src.1) unnamed_addr #2 !dbg !2679 {
start:
  %result.dbg.spill = alloca [4 x i8], align 2
  %src.dbg.spill = alloca [4 x i8], align 2
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !2684, !DIExpression(), !2690)
  store i16 %src.0, ptr %src.dbg.spill, align 2
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 2
  store i16 %src.1, ptr %0, align 2
    #dbg_declare(ptr %src.dbg.spill, !2685, !DIExpression(), !2691)
  %result.0 = load i16, ptr %dest, align 2, !dbg !2692
  %1 = getelementptr inbounds i8, ptr %dest, i32 2, !dbg !2692
  %result.1 = load i16, ptr %1, align 2, !dbg !2692
  store i16 %result.0, ptr %result.dbg.spill, align 2, !dbg !2692
  %2 = getelementptr inbounds i8, ptr %result.dbg.spill, i32 2, !dbg !2692
  store i16 %result.1, ptr %2, align 2, !dbg !2692
    #dbg_declare(ptr %result.dbg.spill, !2686, !DIExpression(), !2693)
  store i16 %src.0, ptr %dest, align 2, !dbg !2694
  %3 = getelementptr inbounds i8, ptr %dest, i32 2, !dbg !2694
  store i16 %src.1, ptr %3, align 2, !dbg !2694
  %4 = insertvalue { i16, i16 } poison, i16 %result.0, 0, !dbg !2695
  %5 = insertvalue { i16, i16 } %4, i16 %result.1, 1, !dbg !2695
  ret { i16, i16 } %5, !dbg !2695
}

; core::mem::replace
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3mem7replace17h28a3c6463160f06fE(ptr align 4 %dest, ptr align 1 %src.0, i32 %src.1) unnamed_addr #2 !dbg !2696 {
start:
  %result.dbg.spill = alloca [8 x i8], align 4
  %src.dbg.spill = alloca [8 x i8], align 4
  %dest.dbg.spill = alloca [4 x i8], align 4
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !2700, !DIExpression(), !2704)
  store ptr %src.0, ptr %src.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %src.dbg.spill, i32 4
  store i32 %src.1, ptr %0, align 4
    #dbg_declare(ptr %src.dbg.spill, !2701, !DIExpression(), !2705)
  %result.0 = load ptr, ptr %dest, align 4, !dbg !2706
  %1 = getelementptr inbounds i8, ptr %dest, i32 4, !dbg !2706
  %result.1 = load i32, ptr %1, align 4, !dbg !2706
  store ptr %result.0, ptr %result.dbg.spill, align 4, !dbg !2706
  %2 = getelementptr inbounds i8, ptr %result.dbg.spill, i32 4, !dbg !2706
  store i32 %result.1, ptr %2, align 4, !dbg !2706
    #dbg_declare(ptr %result.dbg.spill, !2702, !DIExpression(), !2707)
  store ptr %src.0, ptr %dest, align 4, !dbg !2708
  %3 = getelementptr inbounds i8, ptr %dest, i32 4, !dbg !2708
  store i32 %src.1, ptr %3, align 4, !dbg !2708
  %4 = insertvalue { ptr, i32 } poison, ptr %result.0, 0, !dbg !2709
  %5 = insertvalue { ptr, i32 } %4, i32 %result.1, 1, !dbg !2709
  ret { ptr, i32 } %5, !dbg !2709
}

; core::num::niche_types::CodePointInner::new_unchecked
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3num11niche_types14CodePointInner13new_unchecked17h8a3fdb38740dbe76E(i32 %val) unnamed_addr #2 !dbg !2710 {
start:
  %val.dbg.spill = alloca [4 x i8], align 4
  store i32 %val, ptr %val.dbg.spill, align 4
    #dbg_declare(ptr %val.dbg.spill, !2719, !DIExpression(), !2720)
  ret i32 %val, !dbg !2721
}

; core::num::niche_types::CodePointInner::as_inner
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3num11niche_types14CodePointInner8as_inner17h532c15cb190b5a36E(i32 %self) unnamed_addr #2 !dbg !2722 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2727, !DIExpression(), !2728)
  ret i32 %self, !dbg !2729
}

; core::num::niche_types::UsizeNoHighBit::new_unchecked
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3num11niche_types14UsizeNoHighBit13new_unchecked17h4b8d12aa55393029E(i32 %val) unnamed_addr #2 !dbg !2730 {
start:
  %val.dbg.spill = alloca [4 x i8], align 4
  store i32 %val, ptr %val.dbg.spill, align 4
    #dbg_declare(ptr %val.dbg.spill, !2735, !DIExpression(), !2736)
  ret i32 %val, !dbg !2737
}

; core::num::niche_types::UsizeNoHighBit::as_inner
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E(i32 %self) unnamed_addr #2 !dbg !2738 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2743, !DIExpression(), !2744)
  ret i32 %self, !dbg !2745
}

; core::num::<impl u8>::is_ascii_lowercase
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17h33e3e8f227d8bf79E"(ptr align 1 %self) unnamed_addr #2 !dbg !2746 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2752, !DIExpression(), !2753)
  %0 = load i8, ptr %self, align 1, !dbg !2754
  %_2 = icmp ule i8 97, %0, !dbg !2754
  br i1 %_2, label %bb2, label %bb1, !dbg !2754

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !2755
  br label %bb3, !dbg !2755

bb2:                                              ; preds = %start
  %1 = load i8, ptr %self, align 1, !dbg !2754
  %_3 = icmp ule i8 %1, 122, !dbg !2754
  %2 = icmp ne i1 %_3, false, !dbg !2754
  %3 = zext i1 %2 to i8, !dbg !2754
  store i8 %3, ptr %_0, align 1, !dbg !2754
  br label %bb3, !dbg !2754

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8, ptr %_0, align 1, !dbg !2757
  %5 = trunc nuw i8 %4 to i1, !dbg !2757
  ret i1 %5, !dbg !2757
}

; core::num::<impl u8>::is_ascii_uppercase
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17h8254e4d469dcb93aE"(ptr align 1 %self) unnamed_addr #2 !dbg !2758 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2760, !DIExpression(), !2761)
  %0 = load i8, ptr %self, align 1, !dbg !2762
  %_2 = icmp ule i8 65, %0, !dbg !2762
  br i1 %_2, label %bb2, label %bb1, !dbg !2762

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !2763
  br label %bb3, !dbg !2763

bb2:                                              ; preds = %start
  %1 = load i8, ptr %self, align 1, !dbg !2762
  %_3 = icmp ule i8 %1, 90, !dbg !2762
  %2 = icmp ne i1 %_3, false, !dbg !2762
  %3 = zext i1 %2 to i8, !dbg !2762
  store i8 %3, ptr %_0, align 1, !dbg !2762
  br label %bb3, !dbg !2762

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8, ptr %_0, align 1, !dbg !2765
  %5 = trunc nuw i8 %4 to i1, !dbg !2765
  ret i1 %5, !dbg !2765
}

; core::num::<impl u8>::to_ascii_lowercase
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h2600f862fc937d7dE"(ptr align 1 %self) unnamed_addr #2 !dbg !2766 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2770, !DIExpression(), !2771)
  %_2 = load i8, ptr %self, align 1, !dbg !2772
; call core::num::<impl u8>::is_ascii_uppercase
  %_5 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17h8254e4d469dcb93aE"(ptr align 1 %self) #17, !dbg !2773
  %_4 = zext i1 %_5 to i8, !dbg !2774
  %0 = call { i8, i1 } @llvm.umul.with.overflow.i8(i8 %_4, i8 32), !dbg !2775
  %_6.0 = extractvalue { i8, i1 } %0, 0, !dbg !2775
  %_6.1 = extractvalue { i8, i1 } %0, 1, !dbg !2775
  br i1 %_6.1, label %panic, label %bb2, !dbg !2775

bb2:                                              ; preds = %start
  %_0 = or i8 %_2, %_6.0, !dbg !2772
  ret i8 %_0, !dbg !2776

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E(ptr align 4 @alloc_8c1b8a14f2d6613fa49a4cca211f16a5) #18, !dbg !2775
  unreachable, !dbg !2775
}

; core::num::<impl u8>::to_ascii_uppercase
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17h32abef44752c4a63E"(ptr align 1 %self) unnamed_addr #2 !dbg !2777 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2779, !DIExpression(), !2780)
  %_2 = load i8, ptr %self, align 1, !dbg !2781
; call core::num::<impl u8>::is_ascii_lowercase
  %_5 = call zeroext i1 @"_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17h33e3e8f227d8bf79E"(ptr align 1 %self) #17, !dbg !2782
  %_4 = zext i1 %_5 to i8, !dbg !2783
  %0 = call { i8, i1 } @llvm.umul.with.overflow.i8(i8 %_4, i8 32), !dbg !2784
  %_6.0 = extractvalue { i8, i1 } %0, 0, !dbg !2784
  %_6.1 = extractvalue { i8, i1 } %0, 1, !dbg !2784
  br i1 %_6.1, label %panic, label %bb2, !dbg !2784

bb2:                                              ; preds = %start
  %_0 = xor i8 %_2, %_6.0, !dbg !2781
  ret i8 %_0, !dbg !2785

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E(ptr align 4 @alloc_cb27e286fefcfa06fde3b8c2148752ec) #18, !dbg !2784
  unreachable, !dbg !2784
}

; core::num::<impl i32>::unsigned_abs
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12unsigned_abs17hbd215522fd2374ffE"(i32 %self) unnamed_addr #2 !dbg !2786 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2793, !DIExpression(), !2794)
; call core::num::<impl i32>::wrapping_abs
  %_2 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_abs17h493ad40fb6ad4707E"(i32 %self) #17, !dbg !2795
  ret i32 %_2, !dbg !2796
}

; core::num::<impl i32>::wrapping_abs
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_abs17h493ad40fb6ad4707E"(i32 %self) unnamed_addr #2 !dbg !2797 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2801, !DIExpression(), !2802)
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2803, !DIExpression(), !2808)
  %_0.i = icmp slt i32 %self, 0, !dbg !2810
  br i1 %_0.i, label %bb2, label %bb3, !dbg !2811

bb3:                                              ; preds = %start
  store i32 %self, ptr %_0, align 4, !dbg !2812
  br label %bb4, !dbg !2813

bb2:                                              ; preds = %start
  store i32 %self, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !2814, !DIExpression(), !2817)
  store i32 0, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !2819, !DIExpression(), !2825)
  store i32 %self, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2824, !DIExpression(), !2827)
  %_0.i4 = sub i32 0, %self, !dbg !2828
  store i32 %_0.i4, ptr %_0, align 4, !dbg !2829
  br label %bb4, !dbg !2829

bb4:                                              ; preds = %bb2, %bb3
  %0 = load i32, ptr %_0, align 4, !dbg !2830
  ret i32 %0, !dbg !2830
}

; core::num::<impl u16>::from_be_bytes
; Function Attrs: inlinehint nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_be_bytes17he821cdf62b31ccf7E"(i16 %0) unnamed_addr #2 !dbg !2831 {
start:
  %1 = alloca [2 x i8], align 2
  %self.dbg.spill.i.i = alloca [2 x i8], align 2
  %x.dbg.spill.i = alloca [2 x i8], align 2
  %2 = alloca [2 x i8], align 2
  %3 = alloca [2 x i8], align 1
  %4 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %4, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %bytes, ptr align 2 %4, i32 2, i1 false)
    #dbg_declare(ptr %bytes, !2835, !DIExpression(), !2836)
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %3, ptr align 1 %bytes, i32 2, i1 false), !dbg !2837
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %2, ptr align 1 %3, i32 2, i1 false), !dbg !2837
  %5 = load i16, ptr %2, align 2, !dbg !2837
; call core::num::<impl u16>::from_ne_bytes
  %_2 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h1a68a017394d2e8dE"(i16 %5) #17, !dbg !2837
  store i16 %_2, ptr %x.dbg.spill.i, align 2
    #dbg_declare(ptr %x.dbg.spill.i, !2838, !DIExpression(), !2843)
  store i16 %_2, ptr %self.dbg.spill.i.i, align 2
    #dbg_declare(ptr %self.dbg.spill.i.i, !2845, !DIExpression(), !2848)
  %6 = call i16 @llvm.bswap.i16(i16 %_2), !dbg !2850
  store i16 %6, ptr %1, align 2, !dbg !2850
  %_0.i.i = load i16, ptr %1, align 2, !dbg !2850
  ret i16 %_0.i.i, !dbg !2851
}

; core::num::<impl u16>::from_le_bytes
; Function Attrs: inlinehint nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17h858c20ba26fb2425E"(i16 %0) unnamed_addr #2 !dbg !2852 {
start:
  %x.dbg.spill.i = alloca [2 x i8], align 2
  %1 = alloca [2 x i8], align 2
  %2 = alloca [2 x i8], align 1
  %3 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %3, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %bytes, ptr align 2 %3, i32 2, i1 false)
    #dbg_declare(ptr %bytes, !2854, !DIExpression(), !2855)
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %2, ptr align 1 %bytes, i32 2, i1 false), !dbg !2856
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %2, i32 2, i1 false), !dbg !2856
  %4 = load i16, ptr %1, align 2, !dbg !2856
; call core::num::<impl u16>::from_ne_bytes
  %_2 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h1a68a017394d2e8dE"(i16 %4) #17, !dbg !2856
  store i16 %_2, ptr %x.dbg.spill.i, align 2
    #dbg_declare(ptr %x.dbg.spill.i, !2857, !DIExpression(), !2860)
  ret i16 %_2, !dbg !2862
}

; core::num::<impl u16>::from_ne_bytes
; Function Attrs: inlinehint nounwind
define internal i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h1a68a017394d2e8dE"(i16 %0) unnamed_addr #2 !dbg !2863 {
start:
  %1 = alloca [2 x i8], align 2
  %bytes = alloca [2 x i8], align 1
  store i16 %0, ptr %1, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %bytes, ptr align 2 %1, i32 2, i1 false)
    #dbg_declare(ptr %bytes, !2865, !DIExpression(), !2866)
  %_0 = load i16, ptr %bytes, align 1, !dbg !2867
  ret i16 %_0, !dbg !2868
}

; core::num::<impl u16>::is_utf16_surrogate
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E"(i16 %self) unnamed_addr #2 !dbg !2869 {
start:
  %self.dbg.spill = alloca [2 x i8], align 2
  %_0 = alloca [1 x i8], align 1
  store i16 %self, ptr %self.dbg.spill, align 2
    #dbg_declare(ptr %self.dbg.spill, !2873, !DIExpression(), !2874)
  %_2 = icmp ule i16 -10240, %self, !dbg !2875
  br i1 %_2, label %bb2, label %bb1, !dbg !2875

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !2876
  br label %bb3, !dbg !2876

bb2:                                              ; preds = %start
  %_3 = icmp ule i16 %self, -8193, !dbg !2875
  %0 = icmp ne i1 %_3, false, !dbg !2875
  %1 = zext i1 %0 to i8, !dbg !2875
  store i8 %1, ptr %_0, align 1, !dbg !2875
  br label %bb3, !dbg !2875

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !2878
  %3 = trunc nuw i8 %2 to i1, !dbg !2878
  ret i1 %3, !dbg !2878
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %self, i32 %rhs) unnamed_addr #2 !dbg !2879 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2884, !DIExpression(), !2886)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !2885, !DIExpression(), !2887)
  %_5.0 = add i32 %self, %rhs, !dbg !2888
  %_5.1 = icmp ult i32 %_5.0, %self, !dbg !2888
  %0 = zext i1 %_5.1 to i8
  store i8 %0, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !2889, !DIExpression(), !2894)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !2896

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !2897
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !2898

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !2899
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !2898

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %1 = load i8, ptr %_0.i, align 1, !dbg !2900
  %2 = trunc nuw i8 %1 to i1, !dbg !2900
  br i1 %2, label %bb2, label %bb3, !dbg !2901

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %_6 = add nuw i32 %self, %rhs, !dbg !2902
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2903
  store i32 %_6, ptr %3, align 4, !dbg !2903
  store i32 1, ptr %_0, align 4, !dbg !2903
  br label %bb4, !dbg !2904

bb2:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !2905
  br label %bb4, !dbg !2904

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4, !dbg !2906
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2906
  %6 = load i32, ptr %5, align 4, !dbg !2906
  %7 = insertvalue { i32, i32 } poison, i32 %4, 0, !dbg !2906
  %8 = insertvalue { i32, i32 } %7, i32 %6, 1, !dbg !2906
  ret { i32, i32 } %8, !dbg !2906
}

; core::num::<impl usize>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E"(i32 %self, i32 %rhs) unnamed_addr #2 !dbg !2907 {
start:
  %b.dbg.spill.i1 = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %_0.i = alloca [1 x i8], align 1
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [4 x i8], align 4
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2909, !DIExpression(), !2914)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !2910, !DIExpression(), !2915)
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2916, !DIExpression(), !2929)
  store i32 %rhs, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2925, !DIExpression(), !2931)
  %0 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %self, i32 %rhs), !dbg !2932
  %_5.0.i = extractvalue { i32, i1 } %0, 0, !dbg !2932
  %_5.1.i = extractvalue { i32, i1 } %0, 1, !dbg !2932
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !2933
    #dbg_declare(ptr %a.dbg.spill.i, !2926, !DIExpression(), !2934)
  %1 = zext i1 %_5.1.i to i8, !dbg !2935
  store i8 %1, ptr %b.dbg.spill.i1, align 1, !dbg !2935
    #dbg_declare(ptr %b.dbg.spill.i1, !2928, !DIExpression(), !2936)
  %_5.0 = extractvalue { i32, i1 } %0, 0, !dbg !2937
  %_5.1 = extractvalue { i32, i1 } %0, 1, !dbg !2937
  store i32 %_5.0, ptr %a.dbg.spill, align 4, !dbg !2938
    #dbg_declare(ptr %a.dbg.spill, !2911, !DIExpression(), !2939)
  %2 = zext i1 %_5.1 to i8, !dbg !2940
  store i8 %2, ptr %b.dbg.spill, align 1, !dbg !2940
    #dbg_declare(ptr %b.dbg.spill, !2913, !DIExpression(), !2941)
  %3 = zext i1 %_5.1 to i8
  store i8 %3, ptr %b.dbg.spill.i, align 1
    #dbg_declare(ptr %b.dbg.spill.i, !2889, !DIExpression(), !2942)
  br i1 %_5.1, label %bb1.i, label %bb3.i, !dbg !2944

bb3.i:                                            ; preds = %start
  store i8 0, ptr %_0.i, align 1, !dbg !2945
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !2946

bb1.i:                                            ; preds = %start
  store i8 1, ptr %_0.i, align 1, !dbg !2947
  br label %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit, !dbg !2946

_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit: ; preds = %bb3.i, %bb1.i
  %4 = load i8, ptr %_0.i, align 1, !dbg !2948
  %5 = trunc nuw i8 %4 to i1, !dbg !2948
  br i1 %5, label %bb3, label %bb4, !dbg !2949

bb4:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2950
  store i32 %_5.0, ptr %6, align 4, !dbg !2950
  store i32 1, ptr %_0, align 4, !dbg !2950
  br label %bb5, !dbg !2951

bb3:                                              ; preds = %_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E.exit
  store i32 0, ptr %_0, align 4, !dbg !2952
  br label %bb5, !dbg !2951

bb5:                                              ; preds = %bb3, %bb4
  %7 = load i32, ptr %_0, align 4, !dbg !2953
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2953
  %9 = load i32, ptr %8, align 4, !dbg !2953
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !2953
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !2953
  ret { i32, i32 } %11, !dbg !2953
}

; core::num::<impl usize>::checked_sub
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h0a5e6ce25b7151bdE"(i32 %self, i32 %rhs) unnamed_addr #2 !dbg !2954 {
start:
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !2956, !DIExpression(), !2958)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !2957, !DIExpression(), !2959)
  %_3 = icmp ult i32 %self, %rhs, !dbg !2960
  br i1 %_3, label %bb1, label %bb2, !dbg !2960

bb2:                                              ; preds = %start
  %_4 = sub nuw i32 %self, %rhs, !dbg !2961
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2962
  store i32 %_4, ptr %0, align 4, !dbg !2962
  store i32 1, ptr %_0, align 4, !dbg !2962
  br label %bb3, !dbg !2963

bb1:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !2964
  br label %bb3, !dbg !2963

bb3:                                              ; preds = %bb1, %bb2
  %1 = load i32, ptr %_0, align 4, !dbg !2965
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !2965
  %3 = load i32, ptr %2, align 4, !dbg !2965
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !2965
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !2965
  ret { i32, i32 } %5, !dbg !2965
}

; core::num::<impl usize>::unchecked_add::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h12c128c37266108cE"(i32 %lhs, i32 %rhs, ptr align 4 %0) unnamed_addr #2 !dbg !2966 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %msg.dbg.spill = alloca [8 x i8], align 4
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %lhs.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store i32 %lhs, ptr %lhs.dbg.spill, align 4
    #dbg_declare(ptr %lhs.dbg.spill, !2971, !DIExpression(), !2975)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !2972, !DIExpression(), !2975)
  store ptr @alloc_3e1ebac14318b612ab4efabc52799932, ptr %msg.dbg.spill, align 4, !dbg !2976
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !2976
  store i32 186, ptr %1, align 4, !dbg !2976
    #dbg_declare(ptr %msg.dbg.spill, !2973, !DIExpression(), !2976)
  store i32 %lhs, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2977, !DIExpression(), !2984)
  store i32 %rhs, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2980, !DIExpression(), !2987)
  %_5.0.i = add i32 %lhs, %rhs, !dbg !2988
  %_5.1.i = icmp ult i32 %_5.0.i, %lhs, !dbg !2988
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !2989
    #dbg_declare(ptr %a.dbg.spill.i, !2981, !DIExpression(), !2990)
  %2 = zext i1 %_5.1.i to i8, !dbg !2991
  store i8 %2, ptr %b.dbg.spill.i, align 1, !dbg !2991
    #dbg_declare(ptr %b.dbg.spill.i, !2983, !DIExpression(), !2992)
  %3 = insertvalue { i32, i1 } poison, i32 %_5.0.i, 0, !dbg !2993
  %4 = insertvalue { i32, i1 } %3, i1 %_5.1.i, 1, !dbg !2993
  %_4.0 = extractvalue { i32, i1 } %4, 0, !dbg !2994
  %_4.1 = extractvalue { i32, i1 } %4, 1, !dbg !2994
  br i1 %_4.1, label %bb2, label %bb4, !dbg !2995

bb4:                                              ; preds = %start
  ret void, !dbg !2996

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !2997
  store ptr @alloc_3e1ebac14318b612ab4efabc52799932, ptr %5, align 4, !dbg !2997
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !2997
  store i32 186, ptr %6, align 4, !dbg !2997
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !2998
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !2999
  unreachable, !dbg !2999
}

; core::num::<impl usize>::unchecked_mul::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h04c96da029baf90aE"(i32 %lhs, i32 %rhs, ptr align 4 %0) unnamed_addr #2 !dbg !3000 {
start:
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %msg.dbg.spill = alloca [8 x i8], align 4
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %lhs.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store i32 %lhs, ptr %lhs.dbg.spill, align 4
    #dbg_declare(ptr %lhs.dbg.spill, !3003, !DIExpression(), !3007)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !3004, !DIExpression(), !3007)
  store ptr @alloc_db07ae5a9ce650d9b7cc970d048e6f0c, ptr %msg.dbg.spill, align 4, !dbg !3008
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !3008
  store i32 186, ptr %1, align 4, !dbg !3008
    #dbg_declare(ptr %msg.dbg.spill, !3005, !DIExpression(), !3008)
  store i32 %lhs, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2916, !DIExpression(), !3009)
  store i32 %rhs, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2925, !DIExpression(), !3012)
  %2 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %lhs, i32 %rhs), !dbg !3013
  %_5.0.i = extractvalue { i32, i1 } %2, 0, !dbg !3013
  %_5.1.i = extractvalue { i32, i1 } %2, 1, !dbg !3013
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !3014
    #dbg_declare(ptr %a.dbg.spill.i, !2926, !DIExpression(), !3015)
  %3 = zext i1 %_5.1.i to i8, !dbg !3016
  store i8 %3, ptr %b.dbg.spill.i, align 1, !dbg !3016
    #dbg_declare(ptr %b.dbg.spill.i, !2928, !DIExpression(), !3017)
  %_4.0 = extractvalue { i32, i1 } %2, 0, !dbg !3018
  %_4.1 = extractvalue { i32, i1 } %2, 1, !dbg !3018
  br i1 %_4.1, label %bb2, label %bb4, !dbg !3019

bb4:                                              ; preds = %start
  ret void, !dbg !3020

bb2:                                              ; preds = %start
  %4 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !3021
  store ptr @alloc_db07ae5a9ce650d9b7cc970d048e6f0c, ptr %4, align 4, !dbg !3021
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !3021
  store i32 186, ptr %5, align 4, !dbg !3021
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !3022
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !3023
  unreachable, !dbg !3023
}

; core::num::<impl usize>::is_multiple_of
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14is_multiple_of17h666402c515b77d3dE"(i32 %self, i32 %rhs) unnamed_addr #2 !dbg !3024 {
start:
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3028, !DIExpression(), !3030)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !3029, !DIExpression(), !3031)
  %0 = icmp eq i32 %rhs, 0, !dbg !3032
  br i1 %0, label %bb2, label %bb1, !dbg !3032

bb2:                                              ; preds = %start
  %1 = icmp eq i32 %self, 0, !dbg !3033
  %2 = zext i1 %1 to i8, !dbg !3033
  store i8 %2, ptr %_0, align 1, !dbg !3033
  br label %bb4, !dbg !3034

bb1:                                              ; preds = %start
  %_4 = icmp eq i32 %rhs, 0, !dbg !3035
  br i1 %_4, label %panic, label %bb3, !dbg !3035

bb4:                                              ; preds = %bb3, %bb2
  %3 = load i8, ptr %_0, align 1, !dbg !3036
  %4 = trunc nuw i8 %3 to i1, !dbg !3036
  ret i1 %4, !dbg !3036

bb3:                                              ; preds = %bb1
  %_3 = urem i32 %self, %rhs, !dbg !3035
  %5 = icmp eq i32 %_3, 0, !dbg !3035
  %6 = zext i1 %5 to i8, !dbg !3035
  store i8 %6, ptr %_0, align 1, !dbg !3035
  br label %bb4, !dbg !3037

panic:                                            ; preds = %bb1
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17hf7f0dd58d8b45737E(ptr align 4 @alloc_d3ea8a12337a4535ec15ce1eda77c8dd) #18, !dbg !3035
  unreachable, !dbg !3035
}

; core::num::<impl usize>::abs_diff
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17h44069b1809cd594fE"(i32 %self, i32 %other) unnamed_addr #2 !dbg !3038 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3042, !DIExpression(), !3044)
  store i32 %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !3043, !DIExpression(), !3045)
  %0 = icmp eq i32 4, 1, !dbg !3046
  br i1 %0, label %bb2, label %bb5, !dbg !3046

bb2:                                              ; preds = %start
  store i32 %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2819, !DIExpression(), !3047)
  store i32 %other, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2824, !DIExpression(), !3049)
  %_0.i = sub i32 %self, %other, !dbg !3050
; call core::num::<impl i32>::unsigned_abs
  %_4 = call i32 @"_ZN4core3num21_$LT$impl$u20$i32$GT$12unsigned_abs17hbd215522fd2374ffE"(i32 %_0.i) #17, !dbg !3051
  store i32 %_4, ptr %_0, align 4, !dbg !3052
  br label %bb10, !dbg !3053

bb5:                                              ; preds = %start
  %_8 = icmp ult i32 %self, %other, !dbg !3054
  br i1 %_8, label %bb6, label %bb8, !dbg !3054

bb10:                                             ; preds = %bb7, %bb9, %bb2
  %1 = load i32, ptr %_0, align 4, !dbg !3055
  ret i32 %1, !dbg !3055

bb8:                                              ; preds = %bb5
  %_10.0 = sub i32 %self, %other, !dbg !3056
  %_10.1 = icmp ult i32 %self, %other, !dbg !3056
  br i1 %_10.1, label %panic, label %bb9, !dbg !3056

bb6:                                              ; preds = %bb5
  %_9.0 = sub i32 %other, %self, !dbg !3057
  %_9.1 = icmp ult i32 %other, %self, !dbg !3057
  br i1 %_9.1, label %panic1, label %bb7, !dbg !3057

bb9:                                              ; preds = %bb8
  store i32 %_10.0, ptr %_0, align 4, !dbg !3056
  br label %bb10, !dbg !3058

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_d3ea8a12337a4535ec15ce1eda77c8dd) #18, !dbg !3056
  unreachable, !dbg !3056

bb7:                                              ; preds = %bb6
  store i32 %_9.0, ptr %_0, align 4, !dbg !3057
  br label %bb10, !dbg !3058

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_d3ea8a12337a4535ec15ce1eda77c8dd) #18, !dbg !3057
  unreachable, !dbg !3057
}

; core::num::<impl usize>::div_ceil
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h11bff4b73d459aa3E"(i32 %self, i32 %rhs, ptr align 4 %0) unnamed_addr #2 !dbg !3059 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  %d.dbg.spill = alloca [4 x i8], align 4
  %rhs.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3063, !DIExpression(), !3069)
  store i32 %rhs, ptr %rhs.dbg.spill, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !3064, !DIExpression(), !3070)
  %_4 = icmp eq i32 %rhs, 0, !dbg !3071
  br i1 %_4, label %panic, label %bb1, !dbg !3071

bb1:                                              ; preds = %start
  %d = udiv i32 %self, %rhs, !dbg !3071
  store i32 %d, ptr %d.dbg.spill, align 4, !dbg !3071
    #dbg_declare(ptr %d.dbg.spill, !3065, !DIExpression(), !3072)
  %_6 = icmp eq i32 %rhs, 0, !dbg !3073
  br i1 %_6, label %panic1, label %bb2, !dbg !3073

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h5051c6ff4ea8e3faE(ptr align 4 %0) #18, !dbg !3071
  unreachable, !dbg !3071

bb2:                                              ; preds = %bb1
  %r = urem i32 %self, %rhs, !dbg !3073
  store i32 %r, ptr %r.dbg.spill, align 4, !dbg !3073
    #dbg_declare(ptr %r.dbg.spill, !3067, !DIExpression(), !3074)
  %_7 = icmp ugt i32 %r, 0, !dbg !3075
  br i1 %_7, label %bb3, label %bb5, !dbg !3075

panic1:                                           ; preds = %bb1
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17hf7f0dd58d8b45737E(ptr align 4 %0) #18, !dbg !3073
  unreachable, !dbg !3073

bb5:                                              ; preds = %bb2
  store i32 %d, ptr %_0, align 4, !dbg !3076
  br label %bb6, !dbg !3077

bb3:                                              ; preds = %bb2
  %_8.0 = add i32 %d, 1, !dbg !3078
  %_8.1 = icmp ult i32 %_8.0, %d, !dbg !3078
  br i1 %_8.1, label %panic2, label %bb4, !dbg !3078

bb6:                                              ; preds = %bb4, %bb5
  %1 = load i32, ptr %_0, align 4, !dbg !3079
  ret i32 %1, !dbg !3079

bb4:                                              ; preds = %bb3
  store i32 %_8.0, ptr %_0, align 4, !dbg !3078
  br label %bb6, !dbg !3077

panic2:                                           ; preds = %bb3
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 %0) #18, !dbg !3078
  unreachable, !dbg !3078
}

; core::ops::control_flow::ControlFlow<B,C>::break_value
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h3786488487c19b0cE"(i32 %0) unnamed_addr #2 !dbg !3080 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !3085, !DIExpression(), !3088)
  %1 = load i32, ptr %self, align 4, !dbg !3089
  %2 = icmp eq i32 %1, 1114112, !dbg !3089
  %_2 = select i1 %2, i32 0, i32 1, !dbg !3089
  %3 = trunc nuw i32 %_2 to i1, !dbg !3090
  br i1 %3, label %bb2, label %bb3, !dbg !3090

bb2:                                              ; preds = %start
  %x = load i32, ptr %self, align 4, !dbg !3091
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !3091
    #dbg_declare(ptr %x.dbg.spill, !3086, !DIExpression(), !3092)
  store i32 %x, ptr %_0, align 4, !dbg !3093
  br label %bb6, !dbg !3094

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !3095
  br label %bb6, !dbg !3095

bb6:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %self, align 4, !dbg !3096
  %5 = icmp eq i32 %4, 1114112, !dbg !3096
  %_4 = select i1 %5, i32 0, i32 1, !dbg !3096
  %6 = trunc nuw i32 %_4 to i1, !dbg !3096
  br i1 %6, label %bb4, label %bb5, !dbg !3096

bb4:                                              ; preds = %bb5, %bb6
  %7 = load i32, ptr %_0, align 4, !dbg !3097
  ret i32 %7, !dbg !3097

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !3096

bb1:                                              ; No predecessors!
  unreachable, !dbg !3089
}

; core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::from_try
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h9bd09ff904c18546E"() unnamed_addr #2 !dbg !3098 {
start:
  %v.dbg.spill1 = alloca [0 x i8], align 1
  %v.dbg.spill = alloca [0 x i8], align 1
  %r.dbg.spill = alloca [0 x i8], align 1
  %_2 = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
    #dbg_declare(ptr %r.dbg.spill, !3105, !DIExpression(), !3110)
    #dbg_declare(ptr %v.dbg.spill, !3106, !DIExpression(), !3111)
    #dbg_declare(ptr %v.dbg.spill1, !3108, !DIExpression(), !3112)
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::branch
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8695537a035660e5E"() #17, !dbg !3113
  br label %bb4, !dbg !3114

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !3115
  br label %bb6, !dbg !3116

bb6:                                              ; preds = %bb3, %bb4
  %0 = load i8, ptr %_0, align 1, !dbg !3117
  %1 = trunc nuw i8 %0 to i1, !dbg !3117
  ret i1 %1, !dbg !3117

bb3:                                              ; No predecessors!
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::FromResidual<core::ops::try_trait::NeverShortCircuitResidual>>::from_residual
  call void @"_ZN158_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..try_trait..NeverShortCircuitResidual$GT$$GT$13from_residual17hcf0748bb94e2ae25E"() #17, !dbg !3118
  store i8 1, ptr %_0, align 1, !dbg !3119
  br label %bb6, !dbg !3120

bb2:                                              ; No predecessors!
  unreachable, !dbg !3113
}

; core::ops::control_flow::ControlFlow<R,<R as core::ops::try_trait::Try>::Output>::into_try
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17ha45297853c740410E"(i1 zeroext %0) unnamed_addr #2 !dbg !3121 {
start:
  %v.dbg.spill1 = alloca [0 x i8], align 1
  %v.dbg.spill = alloca [0 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
    #dbg_declare(ptr %self, !3126, !DIExpression(), !3131)
    #dbg_declare(ptr %v.dbg.spill, !3127, !DIExpression(), !3132)
    #dbg_declare(ptr %v.dbg.spill1, !3129, !DIExpression(), !3133)
  %2 = load i8, ptr %self, align 1, !dbg !3134
  %3 = trunc nuw i8 %2 to i1, !dbg !3134
  %_2 = zext i1 %3 to i32, !dbg !3134
  %4 = trunc nuw i32 %_2 to i1, !dbg !3135
  br i1 %4, label %bb2, label %bb3, !dbg !3135

bb2:                                              ; preds = %start
  br label %bb4, !dbg !3136

bb3:                                              ; preds = %start
; call <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
  call void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h275adc288524ea21E"() #17, !dbg !3137
  br label %bb4, !dbg !3137

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !3138

bb1:                                              ; No predecessors!
  unreachable, !dbg !3134
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nounwind
define internal i16 @_ZN4core3ops8function5FnMut8call_mut17h2f05ead342bdf086E(ptr align 1 %_1, i16 %0) unnamed_addr #2 !dbg !3139 {
start:
  %1 = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [4 x i8], align 4
  %2 = alloca [2 x i8], align 2
  %_2 = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_2, ptr align 2 %2, i32 2, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3147, !DIExpression(), !3155)
    #dbg_declare(ptr %_2, !3148, !DIExpression(), !3155)
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %_2, i32 2, i1 false), !dbg !3155
  %3 = load i16, ptr %1, align 2, !dbg !3155
; call core::num::<impl u16>::from_le_bytes
  %_0 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17h858c20ba26fb2425E"(i16 %3) #17, !dbg !3155
  ret i16 %_0, !dbg !3155
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nounwind
define internal i16 @_ZN4core3ops8function5FnMut8call_mut17h49be5b38701696c0E(ptr align 1 %_1, i16 %0) unnamed_addr #2 !dbg !3156 {
start:
  %1 = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [4 x i8], align 4
  %2 = alloca [2 x i8], align 2
  %_2 = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_2, ptr align 2 %2, i32 2, i1 false)
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3158, !DIExpression(), !3160)
    #dbg_declare(ptr %_2, !3159, !DIExpression(), !3160)
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %_2, i32 2, i1 false), !dbg !3160
  %3 = load i16, ptr %1, align 2, !dbg !3160
; call core::num::<impl u16>::from_be_bytes
  %_0 = call i16 @"_ZN4core3num21_$LT$impl$u20$u16$GT$13from_be_bytes17he821cdf62b31ccf7E"(i16 %3) #17, !dbg !3160
  ret i16 %_0, !dbg !3160
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nounwind
define dso_local i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h0646a66fbdde460aE"(ptr align 1 %self, i16 %0) unnamed_addr #1 !dbg !3161 {
start:
  %1 = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [4 x i8], align 4
  %2 = alloca [2 x i8], align 2
  %args = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %args, ptr align 2 %2, i32 2, i1 false)
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3165, !DIExpression(), !3169)
    #dbg_declare(ptr %args, !3166, !DIExpression(), !3170)
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %args, i32 2, i1 false), !dbg !3171
  %3 = load i16, ptr %1, align 2, !dbg !3171
; call core::ops::function::FnMut::call_mut
  %_0 = call i16 @_ZN4core3ops8function5FnMut8call_mut17h49be5b38701696c0E(ptr align 1 %self, i16 %3) #17, !dbg !3172
  ret i16 %_0, !dbg !3173
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nounwind
define dso_local i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h0e2c7e697a27e2b0E"(ptr align 1 %self, i16 %0) unnamed_addr #1 !dbg !3174 {
start:
  %1 = alloca [2 x i8], align 2
  %self.dbg.spill = alloca [4 x i8], align 4
  %2 = alloca [2 x i8], align 2
  %args = alloca [2 x i8], align 1
  store i16 %0, ptr %2, align 2
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %args, ptr align 2 %2, i32 2, i1 false)
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3176, !DIExpression(), !3178)
    #dbg_declare(ptr %args, !3177, !DIExpression(), !3179)
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %args, i32 2, i1 false), !dbg !3180
  %3 = load i16, ptr %1, align 2, !dbg !3180
; call core::ops::function::FnMut::call_mut
  %_0 = call i16 @_ZN4core3ops8function5FnMut8call_mut17h2f05ead342bdf086E(ptr align 1 %self, i16 %3) #17, !dbg !3181
  ret i16 %_0, !dbg !3182
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h878c7de198198c8aE"(ptr align 4 %f) unnamed_addr #2 !dbg !3183 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !3191, !DIExpression(), !3192)
  ret ptr %f, !dbg !3193
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h8e5a227b68c3356dE"(ptr align 4 %f) unnamed_addr #2 !dbg !3194 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !3201, !DIExpression(), !3202)
  ret ptr %f, !dbg !3203
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h00ae34164ac98efbE"(ptr align 4 %_1, i32 %b) unnamed_addr #2 !dbg !3204 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3210, !DIExpression(DW_OP_deref), !3211)
    #dbg_declare(ptr %a.dbg.spill, !3208, !DIExpression(), !3212)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !3209, !DIExpression(), !3213)
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h5aabf4c3929a7d79E"(ptr align 4 %_1, i32 %b) #17, !dbg !3214
  ret void, !dbg !3215
}

; core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h39ad0741d0772856E"(ptr align 4 %_1, i32 %b) unnamed_addr #2 !dbg !3216 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3222, !DIExpression(DW_OP_deref), !3223)
    #dbg_declare(ptr %a.dbg.spill, !3220, !DIExpression(), !3224)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !3221, !DIExpression(), !3225)
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h359248ba5520ec7dE"(ptr align 4 %_1, i32 %b) #17, !dbg !3226
  ret void, !dbg !3227
}

; core::ptr::write_bytes::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3ptr11write_bytes18precondition_check17hcc5ff36fde79da6cE(ptr %addr, i32 %align, i1 zeroext %zero_size, ptr align 4 %0) unnamed_addr #2 !dbg !3228 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %zero_size.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [4 x i8], align 4
  %addr.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %addr, ptr %addr.dbg.spill, align 4
    #dbg_declare(ptr %addr.dbg.spill, !3233, !DIExpression(), !3238)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !3234, !DIExpression(), !3238)
  %1 = zext i1 %zero_size to i8
  store i8 %1, ptr %zero_size.dbg.spill, align 1
    #dbg_declare(ptr %zero_size.dbg.spill, !3235, !DIExpression(), !3238)
  store ptr @alloc_dd79dfae92e8fdc23813c4c7a1b7cf72, ptr %msg.dbg.spill, align 4, !dbg !3239
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !3239
  store i32 228, ptr %2, align 4, !dbg !3239
    #dbg_declare(ptr %msg.dbg.spill, !3236, !DIExpression(), !3239)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_4 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %addr, i32 %align, i1 zeroext %zero_size) #17, !dbg !3240
  br i1 %_4, label %bb2, label %bb3, !dbg !3240

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !3242
  store ptr @alloc_dd79dfae92e8fdc23813c4c7a1b7cf72, ptr %3, align 4, !dbg !3242
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !3242
  store i32 228, ptr %4, align 4, !dbg !3242
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !3243
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !3244
  unreachable, !dbg !3244

bb2:                                              ; preds = %start
  ret void, !dbg !3245
}

; core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h28f3501fb6b9b61aE"(ptr align 4 %_1) unnamed_addr #1 !dbg !3246 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3251, !DIExpression(), !3254)
; call <<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h465bfa70caa3a397E"(ptr align 4 %_1) #17, !dbg !3254
  ret void, !dbg !3254
}

; core::ptr::copy_nonoverlapping::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %src, ptr %dst, i32 %size, i32 %align, i32 %count, ptr align 4 %0) unnamed_addr #2 !dbg !3255 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %_17 = alloca [8 x i8], align 4
  %_15 = alloca [24 x i8], align 4
  %zero_size = alloca [1 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !3261, !DIExpression(), !3270)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !3262, !DIExpression(), !3270)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !3263, !DIExpression(), !3270)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !3264, !DIExpression(), !3270)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !3265, !DIExpression(), !3270)
    #dbg_declare(ptr %zero_size, !3266, !DIExpression(), !3271)
  store ptr @alloc_bd3468a7b96187f70c1ce98a3e7a63bf, ptr %msg.dbg.spill, align 4, !dbg !3272
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !3272
  store i32 283, ptr %1, align 4, !dbg !3272
    #dbg_declare(ptr %msg.dbg.spill, !3268, !DIExpression(), !3272)
  %2 = icmp eq i32 %count, 0, !dbg !3273
  br i1 %2, label %bb1, label %bb2, !dbg !3273

bb1:                                              ; preds = %start
  store i8 1, ptr %zero_size, align 1, !dbg !3273
  br label %bb3, !dbg !3273

bb2:                                              ; preds = %start
  %3 = icmp eq i32 %size, 0, !dbg !3275
  %4 = zext i1 %3 to i8, !dbg !3275
  store i8 %4, ptr %zero_size, align 1, !dbg !3275
  br label %bb3, !dbg !3273

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i8, ptr %zero_size, align 1, !dbg !3276
  %_9 = trunc nuw i8 %5 to i1, !dbg !3276
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_8 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %src, i32 %align, i1 zeroext %_9) #17, !dbg !3277
  br i1 %_8, label %bb5, label %bb8, !dbg !3277

bb8:                                              ; preds = %bb5, %bb3
  store i8 0, ptr %_6, align 1, !dbg !3277
  br label %bb9, !dbg !3277

bb5:                                              ; preds = %bb3
  %6 = load i8, ptr %zero_size, align 1, !dbg !3278
  %_12 = trunc nuw i8 %6 to i1, !dbg !3278
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_10 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %dst, i32 %align, i1 zeroext %_12) #17, !dbg !3279
  br i1 %_10, label %bb7, label %bb8, !dbg !3279

bb7:                                              ; preds = %bb5
; call core::ub_checks::maybe_is_nonoverlapping
  %7 = call zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping17h181d6ea8dbb6d1a3E(ptr %src, ptr %dst, i32 %size, i32 %count) #17, !dbg !3280
  %8 = zext i1 %7 to i8, !dbg !3280
  store i8 %8, ptr %_6, align 1, !dbg !3280
  br label %bb9, !dbg !3280

bb9:                                              ; preds = %bb7, %bb8
  %9 = load i8, ptr %_6, align 1, !dbg !3281
  %10 = trunc nuw i8 %9 to i1, !dbg !3281
  br i1 %10, label %bb12, label %bb10, !dbg !3281

bb10:                                             ; preds = %bb9
  %11 = getelementptr inbounds nuw { ptr, i32 }, ptr %_17, i32 0, !dbg !3282
  store ptr @alloc_bd3468a7b96187f70c1ce98a3e7a63bf, ptr %11, align 4, !dbg !3282
  %12 = getelementptr inbounds i8, ptr %11, i32 4, !dbg !3282
  store i32 283, ptr %12, align 4, !dbg !3282
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_15, ptr align 4 %_17) #17, !dbg !3283
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_15, i1 zeroext false, ptr align 4 %0) #18, !dbg !3284
  unreachable, !dbg !3284

bb12:                                             ; preds = %bb9
  ret void, !dbg !3285
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr20slice_from_raw_parts17h08385c11687dd27cE(ptr %data, i32 %len) unnamed_addr #2 !dbg !3286 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !3295, !DIExpression(), !3297)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !3296, !DIExpression(), !3298)
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i32 } @_ZN4core3ptr8metadata14from_raw_parts17h173b9b9590597271E(ptr %data, i32 %len) #17, !dbg !3299
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !3299
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !3299
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !3300
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !3300
  ret { ptr, i32 } %2, !dbg !3300
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr20slice_from_raw_parts17hd361afd14c0d3bc0E(ptr %data, i32 %len) unnamed_addr #2 !dbg !3301 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !3310, !DIExpression(), !3312)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !3311, !DIExpression(), !3313)
; call core::ptr::metadata::from_raw_parts
  %0 = call { ptr, i32 } @_ZN4core3ptr8metadata14from_raw_parts17h3914c2039f641e39E(ptr %data, i32 %len) #17, !dbg !3314
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !3314
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !3314
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !3315
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !3315
  ret { ptr, i32 } %2, !dbg !3315
}

; core::ptr::drop_in_place<alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from::StringError>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17h0871071e578a1949E"(ptr align 4 %_1) unnamed_addr #1 !dbg !3316 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3321, !DIExpression(), !3322)
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE"(ptr align 4 %_1) #17, !dbg !3322
  ret void, !dbg !3322
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17h63344d021f1bfdeaE(ptr %data, i32 %len) unnamed_addr #2 !dbg !3323 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !3328, !DIExpression(), !3330)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !3329, !DIExpression(), !3331)
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i32 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h605ec3718cbaa691E(ptr %data, i32 %len) #17, !dbg !3332
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !3332
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !3332
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !3333
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !3333
  ret { ptr, i32 } %2, !dbg !3333
}

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17h92a5c4824fa45176E(ptr %data, i32 %len) unnamed_addr #2 !dbg !3334 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !3344, !DIExpression(), !3348)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !3345, !DIExpression(), !3349)
; call core::ptr::metadata::from_raw_parts_mut
  %0 = call { ptr, i32 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hace29152929145ccE(ptr %data, i32 %len) #17, !dbg !3350
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !3350
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !3350
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !3351
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !3351
  ret { ptr, i32 } %2, !dbg !3351
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE"(ptr align 4 %_1) unnamed_addr #1 !dbg !3352 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3357, !DIExpression(), !3359)
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h0b78a764740d5437E"(ptr align 4 %_1) #17, !dbg !3359
  ret void, !dbg !3359
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h0b78a764740d5437E"(ptr align 4 %_1) unnamed_addr #1 !dbg !3360 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3364, !DIExpression(), !3365)
; call <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c3b9e5e8807b552E"(ptr align 4 %_1) #17, !dbg !3365
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h87633ae3f28b3841E"(ptr align 4 %_1) #17, !dbg !3365
  ret void, !dbg !3365
}

; core::ptr::drop_in_place<alloc::string::FromUtf8Error>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h60f3530100380f94E"(ptr align 4 %_1) unnamed_addr #1 !dbg !3366 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3375, !DIExpression(), !3378)
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h0b78a764740d5437E"(ptr align 4 %_1) #17, !dbg !3378
  ret void, !dbg !3378
}

; core::ptr::copy::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3ptr4copy18precondition_check17he956a62a93a1dfd5E(ptr %src, ptr %dst, i32 %align, i1 zeroext %zero_size, ptr align 4 %0) unnamed_addr #2 !dbg !3379 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %zero_size.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %_11 = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !3384, !DIExpression(), !3390)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !3385, !DIExpression(), !3390)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !3386, !DIExpression(), !3390)
  %1 = zext i1 %zero_size to i8
  store i8 %1, ptr %zero_size.dbg.spill, align 1
    #dbg_declare(ptr %zero_size.dbg.spill, !3387, !DIExpression(), !3390)
  store ptr @alloc_5ee6cd0de5bab89c84438a39fb5fb08c, ptr %msg.dbg.spill, align 4, !dbg !3391
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !3391
  store i32 221, ptr %2, align 4, !dbg !3391
    #dbg_declare(ptr %msg.dbg.spill, !3388, !DIExpression(), !3391)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_5 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %src, i32 %align, i1 zeroext %zero_size) #17, !dbg !3392
  br i1 %_5, label %bb2, label %bb5, !dbg !3392

bb5:                                              ; preds = %bb2, %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_11, i32 0, !dbg !3394
  store ptr @alloc_5ee6cd0de5bab89c84438a39fb5fb08c, ptr %3, align 4, !dbg !3394
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !3394
  store i32 221, ptr %4, align 4, !dbg !3394
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 %_11) #17, !dbg !3395
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_9, i1 zeroext false, ptr align 4 %0) #18, !dbg !3396
  unreachable, !dbg !3396

bb2:                                              ; preds = %start
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_6 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %dst, i32 %align, i1 zeroext %zero_size) #17, !dbg !3397
  br i1 %_6, label %bb4, label %bb5, !dbg !3397

bb4:                                              ; preds = %bb2
  ret void, !dbg !3398
}

; core::ptr::read
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr4read17h63c7c9db3384bf20E(ptr %src, ptr align 4 %0) unnamed_addr #2 !dbg !3399 {
start:
  %src.dbg.spill = alloca [4 x i8], align 4
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !3404, !DIExpression(), !3405)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3406
  br i1 %_2, label %bb2, label %bb4, !dbg !3406

bb4:                                              ; preds = %bb2, %start
  %_0.0 = load ptr, ptr %src, align 4, !dbg !3408
  %1 = getelementptr inbounds i8, ptr %src, i32 4, !dbg !3408
  %_0.1 = load i32, ptr %1, align 4, !dbg !3408
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !3409
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !3409
  ret { ptr, i32 } %3, !dbg !3409

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17he51eee4fa7e018bbE(ptr %src, i32 4, i1 zeroext false, ptr align 4 %0) #17, !dbg !3410
  br label %bb4, !dbg !3410
}

; core::ptr::read
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3ptr4read17ha6d8c5539f92df21E(ptr %src, ptr align 4 %0) unnamed_addr #2 !dbg !3411 {
start:
  %src.dbg.spill = alloca [4 x i8], align 4
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !3416, !DIExpression(), !3417)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3418
  br i1 %_2, label %bb2, label %bb4, !dbg !3418

bb4:                                              ; preds = %bb2, %start
  ret void, !dbg !3420

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17he51eee4fa7e018bbE(ptr %src, i32 1, i1 zeroext true, ptr align 4 %0) #17, !dbg !3421
  br label %bb4, !dbg !3421
}

; core::ptr::read
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @_ZN4core3ptr4read17hbd9e7fdba50a345aE(ptr %src, ptr align 4 %0) unnamed_addr #2 !dbg !3422 {
start:
  %src.dbg.spill = alloca [4 x i8], align 4
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !3427, !DIExpression(), !3430)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3431
  br i1 %_2, label %bb2, label %bb4, !dbg !3431

bb4:                                              ; preds = %bb2, %start
  %_0.0 = load i32, ptr %src, align 4, !dbg !3433
  %1 = getelementptr inbounds i8, ptr %src, i32 4, !dbg !3433
  %_0.1 = load ptr, ptr %1, align 4, !dbg !3433
  %2 = insertvalue { i32, ptr } poison, i32 %_0.0, 0, !dbg !3434
  %3 = insertvalue { i32, ptr } %2, ptr %_0.1, 1, !dbg !3434
  ret { i32, ptr } %3, !dbg !3434

bb2:                                              ; preds = %start
; call core::ptr::read::precondition_check
  call void @_ZN4core3ptr4read18precondition_check17he51eee4fa7e018bbE(ptr %src, i32 4, i1 zeroext false, ptr align 4 %0) #17, !dbg !3435
  br label %bb4, !dbg !3435
}

; core::ptr::read::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3ptr4read18precondition_check17he51eee4fa7e018bbE(ptr %addr, i32 %align, i1 zeroext %is_zst, ptr align 4 %0) unnamed_addr #2 !dbg !3436 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [4 x i8], align 4
  %addr.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %addr, ptr %addr.dbg.spill, align 4
    #dbg_declare(ptr %addr.dbg.spill, !3439, !DIExpression(), !3444)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !3440, !DIExpression(), !3444)
  %1 = zext i1 %is_zst to i8
  store i8 %1, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !3441, !DIExpression(), !3444)
  store ptr @alloc_ed8641ebea8e5515740d4eb49a916ff5, ptr %msg.dbg.spill, align 4, !dbg !3445
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !3445
  store i32 218, ptr %2, align 4, !dbg !3445
    #dbg_declare(ptr %msg.dbg.spill, !3442, !DIExpression(), !3445)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_4 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %addr, i32 %align, i1 zeroext %is_zst) #17, !dbg !3446
  br i1 %_4, label %bb2, label %bb3, !dbg !3446

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !3448
  store ptr @alloc_ed8641ebea8e5515740d4eb49a916ff5, ptr %3, align 4, !dbg !3448
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !3448
  store i32 218, ptr %4, align 4, !dbg !3448
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !3449
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !3450
  unreachable, !dbg !3450

bb2:                                              ; preds = %start
  ret void, !dbg !3451
}

; core::ptr::drop_in_place<alloc::borrow::Cow<str>>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E"(ptr align 4 %_1) unnamed_addr #1 !dbg !3452 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3472, !DIExpression(), !3475)
  %0 = load i32, ptr %_1, align 4, !dbg !3475
  %1 = icmp eq i32 %0, -2147483648, !dbg !3475
  %_2 = select i1 %1, i32 0, i32 1, !dbg !3475
  %2 = icmp eq i32 %_2, 0, !dbg !3475
  br i1 %2, label %bb1, label %bb2, !dbg !3475

bb1:                                              ; preds = %bb2, %start
  ret void, !dbg !3475

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE"(ptr align 4 %_1) #17, !dbg !3475
  br label %bb1, !dbg !3475
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h87633ae3f28b3841E"(ptr align 4 %_1) unnamed_addr #1 !dbg !3476 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3481, !DIExpression(), !3482)
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b274ca7b30f6b82E"(ptr align 4 %_1) #17, !dbg !3482
  ret void, !dbg !3482
}

; core::ptr::drop_in_place<alloc::vec::drain::Drain<u8>>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17ha6b0991855101781E"(ptr align 4 %_1) unnamed_addr #1 !dbg !3483 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3488, !DIExpression(), !3491)
; call <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h680bf3e4dadaec29E"(ptr align 4 %_1) #17, !dbg !3491
  ret void, !dbg !3491
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nounwind
define dso_local void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h63d27b91458a9b7aE"(ptr align 4 %_1) unnamed_addr #1 !dbg !3492 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !3497, !DIExpression(), !3498)
  %_6.0 = load ptr, ptr %_1, align 4, !dbg !3498
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !3498
  %_6.1 = load i32, ptr %0, align 4, !dbg !3498
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3a138a3c13a5f3d4E"(ptr align 4 %_1) #17, !dbg !3498
  ret void, !dbg !3498
}

; core::ptr::write
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3ptr5write17hb8dcf6731a19344fE(ptr %dst, i32 %src, ptr align 4 %0) unnamed_addr #2 !dbg !3499 {
start:
  %src.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !3504, !DIExpression(), !3508)
  store i32 %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !3505, !DIExpression(), !3509)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3510
  br i1 %_3, label %bb2, label %bb4, !dbg !3510

bb4:                                              ; preds = %bb2, %start
  store i32 %src, ptr %dst, align 4, !dbg !3512
  ret void, !dbg !3513

bb2:                                              ; preds = %start
; call core::ptr::write::precondition_check
  call void @_ZN4core3ptr5write18precondition_check17h19f88040fb199b27E(ptr %dst, i32 4, i1 zeroext false, ptr align 4 %0) #17, !dbg !3514
  br label %bb4, !dbg !3514
}

; core::ptr::write
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3ptr5write17hbcf903752b270816E(ptr %dst, i8 %src, ptr align 4 %0) unnamed_addr #2 !dbg !3515 {
start:
  %src.dbg.spill = alloca [1 x i8], align 1
  %dst.dbg.spill = alloca [4 x i8], align 4
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !3519, !DIExpression(), !3521)
  store i8 %src, ptr %src.dbg.spill, align 1
    #dbg_declare(ptr %src.dbg.spill, !3520, !DIExpression(), !3522)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3523
  br i1 %_3, label %bb2, label %bb4, !dbg !3523

bb4:                                              ; preds = %bb2, %start
  store i8 %src, ptr %dst, align 1, !dbg !3525
  ret void, !dbg !3526

bb2:                                              ; preds = %start
; call core::ptr::write::precondition_check
  call void @_ZN4core3ptr5write18precondition_check17h19f88040fb199b27E(ptr %dst, i32 1, i1 zeroext false, ptr align 4 %0) #17, !dbg !3527
  br label %bb4, !dbg !3527
}

; core::ptr::write
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core3ptr5write17hfa22795ed418023fE(ptr %dst, i32 %0, ptr align 4 %1) unnamed_addr #2 !dbg !3528 {
start:
  %dst.dbg.spill = alloca [4 x i8], align 4
  %2 = alloca [4 x i8], align 4
  %src = alloca [4 x i8], align 4
  store i32 %0, ptr %2, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %src, ptr align 4 %2, i32 4, i1 false)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !3533, !DIExpression(), !3537)
    #dbg_declare(ptr %src, !3534, !DIExpression(), !3538)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3539
  br i1 %_3, label %bb2, label %bb4, !dbg !3539

bb4:                                              ; preds = %bb2, %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %dst, ptr align 4 %src, i32 4, i1 false), !dbg !3541
  ret void, !dbg !3542

bb2:                                              ; preds = %start
; call core::ptr::write::precondition_check
  call void @_ZN4core3ptr5write18precondition_check17h19f88040fb199b27E(ptr %dst, i32 4, i1 zeroext false, ptr align 4 %1) #17, !dbg !3543
  br label %bb4, !dbg !3543
}

; core::ptr::write::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3ptr5write18precondition_check17h19f88040fb199b27E(ptr %addr, i32 %align, i1 zeroext %is_zst, ptr align 4 %0) unnamed_addr #2 !dbg !3544 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [4 x i8], align 4
  %addr.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %_7 = alloca [24 x i8], align 4
  store ptr %addr, ptr %addr.dbg.spill, align 4
    #dbg_declare(ptr %addr.dbg.spill, !3549, !DIExpression(), !3554)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !3550, !DIExpression(), !3554)
  %1 = zext i1 %is_zst to i8
  store i8 %1, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !3551, !DIExpression(), !3554)
  store ptr @alloc_427173db73790c30e8410501502261c4, ptr %msg.dbg.spill, align 4, !dbg !3555
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !3555
  store i32 219, ptr %2, align 4, !dbg !3555
    #dbg_declare(ptr %msg.dbg.spill, !3552, !DIExpression(), !3555)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_4 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %addr, i32 %align, i1 zeroext %is_zst) #17, !dbg !3556
  br i1 %_4, label %bb2, label %bb3, !dbg !3556

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_9, i32 0, !dbg !3558
  store ptr @alloc_427173db73790c30e8410501502261c4, ptr %3, align 4, !dbg !3558
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !3558
  store i32 219, ptr %4, align 4, !dbg !3558
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_7, ptr align 4 %_9) #17, !dbg !3559
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_7, i1 zeroext false, ptr align 4 %0) #18, !dbg !3560
  unreachable, !dbg !3560

bb2:                                              ; preds = %start
  ret void, !dbg !3561
}

; core::ptr::unique::Unique<T>::from_non_null
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13from_non_null17h4d115aa3d57a36cbE"(ptr %pointer) unnamed_addr #2 !dbg !3562 {
start:
  %pointer.dbg.spill = alloca [4 x i8], align 4
  store ptr %pointer, ptr %pointer.dbg.spill, align 4
    #dbg_declare(ptr %pointer.dbg.spill, !3565, !DIExpression(), !3566)
  ret ptr %pointer, !dbg !3567
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1a2c11e95994a124E"(ptr %ptr) unnamed_addr #2 !dbg !3568 {
start:
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3573, !DIExpression(), !3574)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h54220ec484ab9072E"(ptr %ptr, ptr align 4 @alloc_6e3aab891144f743e5cf3d2e7adafb34) #17, !dbg !3575
  ret ptr %_2, !dbg !3576
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2637b50b1414bab6E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !3577 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3600, !DIExpression(), !3601)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8498bb13b76c4152E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_6e3aab891144f743e5cf3d2e7adafb34) #17, !dbg !3602
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !3602
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !3602
  %2 = insertvalue { ptr, i32 } poison, ptr %_2.0, 0, !dbg !3603
  %3 = insertvalue { ptr, i32 } %2, i32 %_2.1, 1, !dbg !3603
  ret { ptr, i32 } %3, !dbg !3603
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5d95d39446f99948E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !3604 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3618, !DIExpression(), !3619)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9e6bb5441538ac48E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_6e3aab891144f743e5cf3d2e7adafb34) #17, !dbg !3620
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !3620
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !3620
  %2 = insertvalue { ptr, i32 } poison, ptr %_2.0, 0, !dbg !3621
  %3 = insertvalue { ptr, i32 } %2, i32 %_2.1, 1, !dbg !3621
  ret { ptr, i32 } %3, !dbg !3621
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h6c776c765d583c79E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !3622 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3639, !DIExpression(), !3640)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hb78bbfc5ff31349eE"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_6e3aab891144f743e5cf3d2e7adafb34) #17, !dbg !3641
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !3641
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !3641
  %2 = insertvalue { ptr, i32 } poison, ptr %_2.0, 0, !dbg !3642
  %3 = insertvalue { ptr, i32 } %2, i32 %_2.1, 1, !dbg !3642
  ret { ptr, i32 } %3, !dbg !3642
}

; core::ptr::unique::Unique<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc67d77b77d277900E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !3643 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3653, !DIExpression(), !3654)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h05bee36eeb7c10c4E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_6e3aab891144f743e5cf3d2e7adafb34) #17, !dbg !3655
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !3655
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !3655
  %2 = insertvalue { ptr, i32 } poison, ptr %_2.0, 0, !dbg !3656
  %3 = insertvalue { ptr, i32 } %2, i32 %_2.1, 1, !dbg !3656
  ret { ptr, i32 } %3, !dbg !3656
}

; core::ptr::unique::Unique<T>::as_non_null_ptr
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h470acafb23eed9e7E"(ptr %self) unnamed_addr #2 !dbg !3657 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3660, !DIExpression(), !3661)
  ret ptr %self, !dbg !3662
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h51c98d4fd47d6bb9E"(ptr %self) unnamed_addr #2 !dbg !3663 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3670, !DIExpression(), !3671)
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hdc9c4827fe10252bE"(ptr %self) #17, !dbg !3672
  ret ptr %_2, !dbg !3673
}

; core::ptr::unique::Unique<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h87c533f9223a898dE"(ptr %self.0, i32 %self.1) unnamed_addr #2 !dbg !3674 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !3679, !DIExpression(), !3680)
; call core::ptr::non_null::NonNull<T>::cast
  %_2 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1822c35f19006601E"(ptr %self.0, i32 %self.1) #17, !dbg !3681
  ret ptr %_2, !dbg !3682
}

; core::ptr::unique::Unique<T>::as_ptr
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6e25ee3522f66bf8E"(ptr %self.0, i32 %self.1) unnamed_addr #2 !dbg !3683 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !3688, !DIExpression(), !3689)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !3690, !DIExpression(), !3696)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !3698
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !3698
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !3699
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !3699
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !3700
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !3700
  ret { ptr, i32 } %5, !dbg !3700
}

; core::ptr::unique::Unique<T>::dangling
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h2669c55e60a761bdE"() unnamed_addr #2 !dbg !3701 {
start:
; call core::ptr::non_null::NonNull<T>::dangling
  %_1 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hffce1f59d4a9cdf1E"() #17, !dbg !3719
  ret ptr %_1, !dbg !3720
}

; core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17h81d1862fc5dceea7E"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #2 !dbg !3721 {
start:
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3726, !DIExpression(), !3728)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !3727, !DIExpression(), !3729)
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17h379c7f3f7759cca7E"(ptr %self, ptr %origin, ptr align 4 %0) #17, !dbg !3730
  ret i32 %_0, !dbg !3731
}

; core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17ha07bd92acf028d9fE"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #2 !dbg !3732 {
start:
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3737, !DIExpression(), !3739)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !3738, !DIExpression(), !3740)
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hcb351b796122b61aE"(ptr %self, ptr %origin, ptr align 4 %0) #17, !dbg !3741
  ret i32 %_0, !dbg !3742
}

; core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17hd057e39fdb57dc82E"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #2 !dbg !3743 {
start:
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3748, !DIExpression(), !3750)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !3749, !DIExpression(), !3751)
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hade586b0eb215fe3E"(ptr %self, ptr %origin, ptr align 4 %0) #17, !dbg !3752
  ret i32 %_0, !dbg !3753
}

; core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %this, i32 %count, i32 %size, ptr align 4 %0) unnamed_addr #2 !dbg !3754 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !3759, !DIExpression(), !3764)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !3760, !DIExpression(), !3764)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !3761, !DIExpression(), !3764)
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %msg.dbg.spill, align 4, !dbg !3765
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !3765
  store i32 214, ptr %1, align 4, !dbg !3765
    #dbg_declare(ptr %msg.dbg.spill, !3762, !DIExpression(), !3765)
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17ha476053dc5c76815E"(ptr %this, i32 %count, i32 %size) #17, !dbg !3766
  br i1 %_4, label %bb2, label %bb3, !dbg !3766

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !3768
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %2, align 4, !dbg !3768
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !3768
  store i32 214, ptr %3, align 4, !dbg !3768
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !3769
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !3770
  unreachable, !dbg !3770

bb2:                                              ; preds = %start
  ret void, !dbg !3771
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17ha476053dc5c76815E"(ptr %this, i32 %count, i32 %size) unnamed_addr #2 !dbg !3772 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !3776, !DIExpression(), !3779)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !3777, !DIExpression(), !3780)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !3778, !DIExpression(), !3781)
  store ptr %this, ptr %_4, align 4, !dbg !3782
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !3782
  store i32 %count, ptr %0, align 4, !dbg !3782
  %1 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !3782
  store i32 %size, ptr %1, align 4, !dbg !3782
  %2 = load ptr, ptr %_4, align 4, !dbg !3784
  %3 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !3784
  %4 = load i32, ptr %3, align 4, !dbg !3784
  %5 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !3784
  %6 = load i32, ptr %5, align 4, !dbg !3784
; call core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17hc90d9367a26cfb65E"(ptr %2, i32 %4, i32 %6) #17, !dbg !3784
  ret i1 %_0, !dbg !3785
}

; core::ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17hc90d9367a26cfb65E"(ptr %this, i32 %count, i32 %size) unnamed_addr #2 !dbg !3786 {
start:
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %overflow.dbg.spill = alloca [1 x i8], align 1
  %byte_offset.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !3789, !DIExpression(), !3796)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !3790, !DIExpression(), !3796)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !3791, !DIExpression(), !3796)
; call core::num::<impl usize>::checked_mul
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E"(i32 %count, i32 %size) #17, !dbg !3797
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !3797
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !3797
  store i32 %1, ptr %_5, align 4, !dbg !3797
  %3 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !3797
  store i32 %2, ptr %3, align 4, !dbg !3797
  %_6 = load i32, ptr %_5, align 4, !dbg !3799
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !3799
  %5 = load i32, ptr %4, align 4, !dbg !3799
  %6 = trunc nuw i32 %_6 to i1, !dbg !3800
  br i1 %6, label %bb2, label %bb3, !dbg !3800

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !3801
  %byte_offset = load i32, ptr %7, align 4, !dbg !3801
  store i32 %byte_offset, ptr %byte_offset.dbg.spill, align 4, !dbg !3801
    #dbg_declare(ptr %byte_offset.dbg.spill, !3792, !DIExpression(), !3802)
  store ptr %this, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !3803, !DIExpression(), !3808)
  store ptr %this, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !3810, !DIExpression(), !3817)
  %_0.i = ptrtoint ptr %this to i32, !dbg !3819
  store i32 %_0.i, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2977, !DIExpression(), !3820)
  store i32 %byte_offset, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2980, !DIExpression(), !3822)
  %_5.0.i = add i32 %_0.i, %byte_offset, !dbg !3823
  %_5.1.i = icmp ult i32 %_5.0.i, %_0.i, !dbg !3823
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !3824
    #dbg_declare(ptr %a.dbg.spill.i, !2981, !DIExpression(), !3825)
  %8 = zext i1 %_5.1.i to i8, !dbg !3826
  store i8 %8, ptr %b.dbg.spill.i, align 1, !dbg !3826
    #dbg_declare(ptr %b.dbg.spill.i, !2983, !DIExpression(), !3827)
  %9 = insertvalue { i32, i1 } poison, i32 %_5.0.i, 0, !dbg !3828
  %10 = insertvalue { i32, i1 } %9, i1 %_5.1.i, 1, !dbg !3828
  %_8.0 = extractvalue { i32, i1 } %10, 0, !dbg !3829
  %_8.1 = extractvalue { i32, i1 } %10, 1, !dbg !3829
  %11 = zext i1 %_8.1 to i8, !dbg !3830
  store i8 %11, ptr %overflow.dbg.spill, align 1, !dbg !3830
    #dbg_declare(ptr %overflow.dbg.spill, !3794, !DIExpression(), !3831)
  %_10 = icmp ule i32 %byte_offset, 2147483647, !dbg !3832
  br i1 %_10, label %bb6, label %bb7, !dbg !3832

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !3833
  br label %bb8, !dbg !3834

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !3832
  br label %bb8, !dbg !3832

bb6:                                              ; preds = %bb2
  %12 = xor i1 %_8.1, true, !dbg !3835
  %13 = zext i1 %12 to i8, !dbg !3835
  store i8 %13, ptr %_0, align 1, !dbg !3835
  br label %bb8, !dbg !3832

bb8:                                              ; preds = %bb3, %bb6, %bb7
  %14 = load i8, ptr %_0, align 1, !dbg !3836
  %15 = trunc nuw i8 %14 to i1, !dbg !3836
  ret i1 %15, !dbg !3836

bb9:                                              ; No predecessors!
  unreachable, !dbg !3837
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h96f2294893cd0921E"(ptr %self) unnamed_addr #2 !dbg !3838 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3842, !DIExpression(), !3843)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !3844, !DIExpression(), !3849)
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h6d871e3f473eea11E"(ptr %self) #17, !dbg !3851
  ret i1 %_0, !dbg !3852
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf42c4102b4c84c5dE"(ptr %self) unnamed_addr #2 !dbg !3853 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !3857, !DIExpression(), !3858)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !3859, !DIExpression(), !3864)
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf56eacc16313c5f5E"(ptr %self) #17, !dbg !3866
  ret i1 %_0, !dbg !3867
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr8metadata14from_raw_parts17h173b9b9590597271E(ptr %data_pointer, i32 %metadata) unnamed_addr #2 !dbg !3868 {
start:
  %metadata.dbg.spill = alloca [4 x i8], align 4
  %data_pointer.dbg.spill = alloca [4 x i8], align 4
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 4
    #dbg_declare(ptr %data_pointer.dbg.spill, !3872, !DIExpression(), !3876)
  store i32 %metadata, ptr %metadata.dbg.spill, align 4
    #dbg_declare(ptr %metadata.dbg.spill, !3873, !DIExpression(), !3877)
  %0 = insertvalue { ptr, i32 } poison, ptr %data_pointer, 0, !dbg !3878
  %1 = insertvalue { ptr, i32 } %0, i32 %metadata, 1, !dbg !3878
  ret { ptr, i32 } %1, !dbg !3878
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr8metadata14from_raw_parts17h3914c2039f641e39E(ptr %data_pointer, i32 %metadata) unnamed_addr #2 !dbg !3879 {
start:
  %metadata.dbg.spill = alloca [4 x i8], align 4
  %data_pointer.dbg.spill = alloca [4 x i8], align 4
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 4
    #dbg_declare(ptr %data_pointer.dbg.spill, !3881, !DIExpression(), !3885)
  store i32 %metadata, ptr %metadata.dbg.spill, align 4
    #dbg_declare(ptr %metadata.dbg.spill, !3882, !DIExpression(), !3886)
  %0 = insertvalue { ptr, i32 } poison, ptr %data_pointer, 0, !dbg !3887
  %1 = insertvalue { ptr, i32 } %0, i32 %metadata, 1, !dbg !3887
  ret { ptr, i32 } %1, !dbg !3887
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr8metadata14from_raw_parts17hcf9bdc608fd62205E(ptr %data_pointer, i32 %metadata) unnamed_addr #2 !dbg !3888 {
start:
  %metadata.dbg.spill = alloca [4 x i8], align 4
  %data_pointer.dbg.spill = alloca [4 x i8], align 4
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 4
    #dbg_declare(ptr %data_pointer.dbg.spill, !3892, !DIExpression(), !3896)
  store i32 %metadata, ptr %metadata.dbg.spill, align 4
    #dbg_declare(ptr %metadata.dbg.spill, !3893, !DIExpression(), !3897)
  %0 = insertvalue { ptr, i32 } poison, ptr %data_pointer, 0, !dbg !3898
  %1 = insertvalue { ptr, i32 } %0, i32 %metadata, 1, !dbg !3898
  ret { ptr, i32 } %1, !dbg !3898
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr8metadata18from_raw_parts_mut17h605ec3718cbaa691E(ptr %data_pointer, i32 %metadata) unnamed_addr #2 !dbg !3899 {
start:
  %metadata.dbg.spill = alloca [4 x i8], align 4
  %data_pointer.dbg.spill = alloca [4 x i8], align 4
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 4
    #dbg_declare(ptr %data_pointer.dbg.spill, !3901, !DIExpression(), !3905)
  store i32 %metadata, ptr %metadata.dbg.spill, align 4
    #dbg_declare(ptr %metadata.dbg.spill, !3902, !DIExpression(), !3906)
  %0 = insertvalue { ptr, i32 } poison, ptr %data_pointer, 0, !dbg !3907
  %1 = insertvalue { ptr, i32 } %0, i32 %metadata, 1, !dbg !3907
  ret { ptr, i32 } %1, !dbg !3907
}

; core::ptr::metadata::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core3ptr8metadata18from_raw_parts_mut17hace29152929145ccE(ptr %data_pointer, i32 %metadata) unnamed_addr #2 !dbg !3908 {
start:
  %metadata.dbg.spill = alloca [4 x i8], align 4
  %data_pointer.dbg.spill = alloca [4 x i8], align 4
  store ptr %data_pointer, ptr %data_pointer.dbg.spill, align 4
    #dbg_declare(ptr %data_pointer.dbg.spill, !3910, !DIExpression(), !3914)
  store i32 %metadata, ptr %metadata.dbg.spill, align 4
    #dbg_declare(ptr %metadata.dbg.spill, !3911, !DIExpression(), !3915)
  %0 = insertvalue { ptr, i32 } poison, ptr %data_pointer, 0, !dbg !3916
  %1 = insertvalue { ptr, i32 } %0, i32 %metadata, 1, !dbg !3916
  ret { ptr, i32 } %1, !dbg !3916
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3ptr8metadata8metadata17h1aad4eed835b8620E(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !3917 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3919, !DIExpression(), !3920)
  ret i32 %ptr.1, !dbg !3921
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h05bee36eeb7c10c4E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !3922 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3927, !DIExpression(), !3928)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3929
  br i1 %_2, label %bb2, label %bb3, !dbg !3929

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !3931
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !3931
  ret { ptr, i32 } %3, !dbg !3931

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !3932
  br label %bb3, !dbg !3932
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h528a38cc869a3990E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !3933 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3945, !DIExpression(), !3946)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3947
  br i1 %_2, label %bb2, label %bb3, !dbg !3947

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !3949
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !3949
  ret { ptr, i32 } %3, !dbg !3949

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !3950
  br label %bb3, !dbg !3950
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h54220ec484ab9072E"(ptr %ptr, ptr align 4 %0) unnamed_addr #2 !dbg !3951 {
start:
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3956, !DIExpression(), !3957)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3958
  br i1 %_2, label %bb2, label %bb3, !dbg !3958

bb3:                                              ; preds = %bb2, %start
  ret ptr %ptr, !dbg !3960

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr, ptr align 4 %0) #17, !dbg !3961
  br label %bb3, !dbg !3961
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8498bb13b76c4152E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !3962 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3967, !DIExpression(), !3968)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3969
  br i1 %_2, label %bb2, label %bb3, !dbg !3969

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !3971
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !3971
  ret { ptr, i32 } %3, !dbg !3971

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !3972
  br label %bb3, !dbg !3972
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h887ea8867725a62aE"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !3973 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3981, !DIExpression(), !3982)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3983
  br i1 %_2, label %bb2, label %bb3, !dbg !3983

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !3985
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !3985
  ret { ptr, i32 } %3, !dbg !3985

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !3986
  br label %bb3, !dbg !3986
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9e6bb5441538ac48E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !3987 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !3992, !DIExpression(), !3993)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !3994
  br i1 %_2, label %bb2, label %bb3, !dbg !3994

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !3996
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !3996
  ret { ptr, i32 } %3, !dbg !3996

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !3997
  br label %bb3, !dbg !3997
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9fbda931aa6e85ffE"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !3998 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !4022, !DIExpression(), !4023)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4024
  br i1 %_2, label %bb2, label %bb3, !dbg !4024

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !4026
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !4026
  ret { ptr, i32 } %3, !dbg !4026

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !4027
  br label %bb3, !dbg !4027
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha8dad3f6b4196332E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !4028 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !4052, !DIExpression(), !4053)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4054
  br i1 %_2, label %bb2, label %bb3, !dbg !4054

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !4056
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !4056
  ret { ptr, i32 } %3, !dbg !4056

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !4057
  br label %bb3, !dbg !4057
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hb78bbfc5ff31349eE"(ptr %ptr.0, i32 %ptr.1, ptr align 4 %0) unnamed_addr #2 !dbg !4058 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !4063, !DIExpression(), !4064)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4065
  br i1 %_2, label %bb2, label %bb3, !dbg !4065

bb3:                                              ; preds = %bb2, %start
  %2 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !4067
  %3 = insertvalue { ptr, i32 } %2, i32 %ptr.1, 1, !dbg !4067
  ret { ptr, i32 } %3, !dbg !4067

bb2:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
  call void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr.0, ptr align 4 %0) #17, !dbg !4068
  br label %bb3, !dbg !4068
}

; core::ptr::non_null::NonNull<T>::new_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E"(ptr %ptr, ptr align 4 %0) unnamed_addr #2 !dbg !4069 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [8 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !4075, !DIExpression(), !4078)
  store ptr @alloc_560a59ed819b9d9a5841f6e731c4c8e5, ptr %msg.dbg.spill, align 4, !dbg !4079
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !4079
  store i32 210, ptr %1, align 4, !dbg !4079
    #dbg_declare(ptr %msg.dbg.spill, !4076, !DIExpression(), !4079)
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf42c4102b4c84c5dE"(ptr %ptr) #17, !dbg !4080
  br i1 %_2, label %bb2, label %bb3, !dbg !4082

bb3:                                              ; preds = %start
  ret void, !dbg !4083

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_6, i32 0, !dbg !4084
  store ptr @alloc_560a59ed819b9d9a5841f6e731c4c8e5, ptr %2, align 4, !dbg !4084
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !4084
  store i32 210, ptr %3, align 4, !dbg !4084
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 %_6) #17, !dbg !4085
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_4, i1 zeroext false, ptr align 4 %0) #18, !dbg !4086
  unreachable, !dbg !4086
}

; core::ptr::non_null::NonNull<T>::without_provenance
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hb3cf249ff93074e0E"(i32 %addr) unnamed_addr #2 !dbg !4087 {
start:
  %addr.dbg.spill.i1 = alloca [4 x i8], align 4
  %addr.dbg.spill.i = alloca [4 x i8], align 4
  %pointer.dbg.spill = alloca [4 x i8], align 4
  %addr.dbg.spill = alloca [4 x i8], align 4
  store i32 %addr, ptr %addr.dbg.spill, align 4
    #dbg_declare(ptr %addr.dbg.spill, !4099, !DIExpression(), !4102)
; call core::num::nonzero::NonZero<T>::get
  %_3 = call i32 @"_ZN4core3num7nonzero16NonZero$LT$T$GT$3get17hd42055a3ed6a2172E"(i32 %addr) #17, !dbg !4103
  store i32 %_3, ptr %addr.dbg.spill.i, align 4
    #dbg_declare(ptr %addr.dbg.spill.i, !4104, !DIExpression(), !4109)
  store i32 %_3, ptr %addr.dbg.spill.i1, align 4
    #dbg_declare(ptr %addr.dbg.spill.i1, !4111, !DIExpression(), !4116)
  %_0.i = inttoptr i32 %_3 to ptr, !dbg !4118
  store ptr %_0.i, ptr %pointer.dbg.spill, align 4, !dbg !4119
    #dbg_declare(ptr %pointer.dbg.spill, !4100, !DIExpression(), !4120)
  ret ptr %_0.i, !dbg !4121
}

; core::ptr::non_null::NonNull<T>::without_provenance
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hdc948f4f994dff57E"(i32 %addr) unnamed_addr #2 !dbg !4122 {
start:
  %addr.dbg.spill.i1 = alloca [4 x i8], align 4
  %addr.dbg.spill.i = alloca [4 x i8], align 4
  %pointer.dbg.spill = alloca [4 x i8], align 4
  %addr.dbg.spill = alloca [4 x i8], align 4
  store i32 %addr, ptr %addr.dbg.spill, align 4
    #dbg_declare(ptr %addr.dbg.spill, !4127, !DIExpression(), !4130)
; call core::num::nonzero::NonZero<T>::get
  %_3 = call i32 @"_ZN4core3num7nonzero16NonZero$LT$T$GT$3get17hd42055a3ed6a2172E"(i32 %addr) #17, !dbg !4131
  store i32 %_3, ptr %addr.dbg.spill.i, align 4
    #dbg_declare(ptr %addr.dbg.spill.i, !4132, !DIExpression(), !4137)
  store i32 %_3, ptr %addr.dbg.spill.i1, align 4
    #dbg_declare(ptr %addr.dbg.spill.i1, !4139, !DIExpression(), !4145)
  %_0.i = inttoptr i32 %_3 to ptr, !dbg !4147
  store ptr %_0.i, ptr %pointer.dbg.spill, align 4, !dbg !4148
    #dbg_declare(ptr %pointer.dbg.spill, !4128, !DIExpression(), !4149)
  ret ptr %_0.i, !dbg !4150
}

; core::ptr::non_null::NonNull<T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h879d8474d78b6cd8E"(ptr %self, ptr %subtracted) unnamed_addr #2 !dbg !4151 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %subtracted.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4156, !DIExpression(), !4158)
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 4
    #dbg_declare(ptr %subtracted.dbg.spill, !4157, !DIExpression(), !4159)
  store ptr %self, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4160, !DIExpression(), !4166)
  store ptr %subtracted, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4160, !DIExpression(), !4168)
; call core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17ha07bd92acf028d9fE"(ptr %self, ptr %subtracted, ptr align 4 @alloc_1ded1233f10ce63823f0773f448fe0b6) #17, !dbg !4170
  ret i32 %_0, !dbg !4171
}

; core::ptr::non_null::NonNull<T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hb8f9ff13572ac731E"(ptr %self, ptr %subtracted) unnamed_addr #2 !dbg !4172 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %subtracted.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4177, !DIExpression(), !4179)
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 4
    #dbg_declare(ptr %subtracted.dbg.spill, !4178, !DIExpression(), !4180)
  store ptr %self, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4181, !DIExpression(), !4187)
  store ptr %subtracted, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4181, !DIExpression(), !4189)
; call core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17hd057e39fdb57dc82E"(ptr %self, ptr %subtracted, ptr align 4 @alloc_1ded1233f10ce63823f0773f448fe0b6) #17, !dbg !4191
  ret i32 %_0, !dbg !4192
}

; core::ptr::non_null::NonNull<T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hfd39b030f221307bE"(ptr %self, ptr %subtracted) unnamed_addr #2 !dbg !4193 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %subtracted.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4198, !DIExpression(), !4200)
  store ptr %subtracted, ptr %subtracted.dbg.spill, align 4
    #dbg_declare(ptr %subtracted.dbg.spill, !4199, !DIExpression(), !4201)
  store ptr %self, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4202, !DIExpression(), !4208)
  store ptr %subtracted, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4202, !DIExpression(), !4210)
; call core::ptr::mut_ptr::<impl *mut T>::offset_from_unsigned
  %_0 = call i32 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17h81d1862fc5dceea7E"(ptr %self, ptr %subtracted, ptr align 4 @alloc_1ded1233f10ce63823f0773f448fe0b6) #17, !dbg !4212
  ret i32 %_0, !dbg !4213
}

; core::ptr::non_null::NonNull<T>::new
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5968324df1351dc8E"(ptr %ptr) unnamed_addr #2 !dbg !4214 {
start:
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !4232, !DIExpression(), !4233)
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_2 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h96f2294893cd0921E"(ptr %ptr) #17, !dbg !4234
  br i1 %_2, label %bb2, label %bb3, !dbg !4235

bb3:                                              ; preds = %start
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_3 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h54220ec484ab9072E"(ptr %ptr, ptr align 4 @alloc_4dd017ba710f698f3f5a92d842494f5b) #17, !dbg !4236
  store ptr %_3, ptr %_0, align 4, !dbg !4237
  br label %bb5, !dbg !4238

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !4239
  br label %bb5, !dbg !4238

bb5:                                              ; preds = %bb2, %bb3
  %0 = load ptr, ptr %_0, align 4, !dbg !4240
  ret ptr %0, !dbg !4240
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5317967526785ca4E"(ptr %self.0, i32 %self.1) unnamed_addr #2 !dbg !4241 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4256, !DIExpression(), !4257)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4258, !DIExpression(), !4268)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !4270
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !4270
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !4271
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !4271
  ret ptr %_4.0, !dbg !4272
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haf0707dc4461958bE"(ptr %self) unnamed_addr #2 !dbg !4273 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4283, !DIExpression(), !4284)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4285, !DIExpression(), !4292)
  ret ptr %self, !dbg !4294
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb0f3714333d545a0E"(ptr %self.0, i32 %self.1) unnamed_addr #2 !dbg !4295 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4305, !DIExpression(), !4306)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4307, !DIExpression(), !4317)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !4319
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !4319
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !4320
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !4320
  ret ptr %_4.0, !dbg !4321
}

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hdc9c4827fe10252bE"(ptr %self) unnamed_addr #2 !dbg !4322 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4327, !DIExpression(), !4328)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4329, !DIExpression(), !4335)
  ret ptr %self, !dbg !4337
}

; core::ptr::non_null::NonNull<T>::dangling
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hffce1f59d4a9cdf1E"() unnamed_addr #2 !dbg !4338 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4, !dbg !4345
; call core::ptr::alignment::Alignment::of
  %align = call i32 @_ZN4core3ptr9alignment9Alignment2of17h7755b249dd8e5150E() #17, !dbg !4345
  store i32 %align, ptr %align.dbg.spill, align 4, !dbg !4345
    #dbg_declare(ptr %align.dbg.spill, !4343, !DIExpression(), !4346)
; call core::ptr::alignment::Alignment::as_nonzero
  %_2 = call i32 @_ZN4core3ptr9alignment9Alignment10as_nonzero17h91cf2c4e24e67346E(i32 %align) #17, !dbg !4347
; call core::ptr::non_null::NonNull<T>::without_provenance
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hdc948f4f994dff57E"(i32 %_2) #17, !dbg !4348
  ret ptr %_0, !dbg !4349
}

; core::ptr::non_null::NonNull<T>::from_mut
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h1aac49e2a23c865eE"(ptr align 4 %r) unnamed_addr #2 !dbg !4350 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !4355, !DIExpression(), !4356)
  ret ptr %r, !dbg !4357
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1b16d23d519f4c51E"(ptr align 1 %r.0, i32 %r.1) unnamed_addr #2 !dbg !4358 {
start:
  %r.dbg.spill = alloca [8 x i8], align 4
  store ptr %r.0, ptr %r.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i32 4
  store i32 %r.1, ptr %0, align 4
    #dbg_declare(ptr %r.dbg.spill, !4367, !DIExpression(), !4368)
  %1 = insertvalue { ptr, i32 } poison, ptr %r.0, 0, !dbg !4369
  %2 = insertvalue { ptr, i32 } %1, i32 %r.1, 1, !dbg !4369
  ret { ptr, i32 } %2, !dbg !4369
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f140e76f1334349E"(ptr align 4 %r) unnamed_addr #2 !dbg !4370 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !4375, !DIExpression(), !4376)
  ret ptr %r, !dbg !4377
}

; core::ptr::non_null::NonNull<T>::from_ref
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f44a684d96c23b5E"(ptr align 1 %r.0, i32 %r.1) unnamed_addr #2 !dbg !4378 {
start:
  %r.dbg.spill = alloca [8 x i8], align 4
  store ptr %r.0, ptr %r.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %r.dbg.spill, i32 4
  store i32 %r.1, ptr %0, align 4
    #dbg_declare(ptr %r.dbg.spill, !4387, !DIExpression(), !4388)
  %1 = insertvalue { ptr, i32 } poison, ptr %r.0, 0, !dbg !4389
  %2 = insertvalue { ptr, i32 } %1, i32 %r.1, 1, !dbg !4389
  ret { ptr, i32 } %2, !dbg !4389
}

; core::ptr::non_null::NonNull<[T]>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb0f82c01d41aa59eE"(ptr %self.0, i32 %self.1) unnamed_addr #2 !dbg !4390 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4395, !DIExpression(), !4396)
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_2 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2f422c653439189dE"(ptr %self.0, i32 %self.1) #17, !dbg !4397
  store ptr %_2, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4329, !DIExpression(), !4398)
  ret ptr %_2, !dbg !4400
}

; core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2f422c653439189dE"(ptr %self.0, i32 %self.1) unnamed_addr #2 !dbg !4401 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4406, !DIExpression(), !4407)
; call core::ptr::non_null::NonNull<T>::cast
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1822c35f19006601E"(ptr %self.0, i32 %self.1) #17, !dbg !4408
  ret ptr %_0, !dbg !4409
}

; core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE"(ptr %data, i32 %len) unnamed_addr #2 !dbg !4410 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !4415, !DIExpression(), !4417)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !4416, !DIExpression(), !4418)
  store ptr %data, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4329, !DIExpression(), !4419)
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha3a5beed25bc1c5cE(ptr %data, i32 %len) #17, !dbg !4421
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !4421
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !4421
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h05bee36eeb7c10c4E"(ptr %_3.0, i32 %_3.1, ptr align 4 @alloc_695c299c6a74c118e2b1e2e854637e01) #17, !dbg !4422
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !4422
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !4422
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !4423
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !4423
  ret { ptr, i32 } %3, !dbg !4423
}

; core::ptr::alignment::Alignment::as_nonzero
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3ptr9alignment9Alignment10as_nonzero17h91cf2c4e24e67346E(i32 %self) unnamed_addr #2 !dbg !4424 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4430, !DIExpression(), !4431)
  ret i32 %self, !dbg !4432
}

; core::ptr::alignment::Alignment::new_unchecked
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3ptr9alignment9Alignment13new_unchecked17h0cea6419a241b6d9E(i32 %align, ptr align 4 %0) unnamed_addr #2 !dbg !4433 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !4438, !DIExpression(), !4439)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4440
  br i1 %_2, label %bb2, label %bb3, !dbg !4440

bb3:                                              ; preds = %bb2, %start
  ret i32 %align, !dbg !4442

bb2:                                              ; preds = %start
; call core::ptr::alignment::Alignment::new_unchecked::precondition_check
  call void @_ZN4core3ptr9alignment9Alignment13new_unchecked18precondition_check17h30bdb86857112a23E(i32 %align, ptr align 4 %0) #17, !dbg !4443
  br label %bb3, !dbg !4443
}

; core::ptr::alignment::Alignment::new_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core3ptr9alignment9Alignment13new_unchecked18precondition_check17h30bdb86857112a23E(i32 %align, ptr align 4 %0) unnamed_addr #2 !dbg !4444 {
start:
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %msg.dbg.spill = alloca [8 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [8 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !4450, !DIExpression(), !4453)
  store ptr @alloc_0625062a5eee489a7813ee965a38d15a, ptr %msg.dbg.spill, align 4, !dbg !4454
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !4454
  store i32 198, ptr %2, align 4, !dbg !4454
    #dbg_declare(ptr %msg.dbg.spill, !4451, !DIExpression(), !4454)
  store i32 %align, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4455, !DIExpression(), !4460)
  store i32 %align, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !4463, !DIExpression(), !4468)
  %3 = call i32 @llvm.ctpop.i32(i32 %align), !dbg !4470
  store i32 %3, ptr %1, align 4, !dbg !4470
  %_0.i.i = load i32, ptr %1, align 4, !dbg !4470
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !4471
  br i1 %_0.i, label %bb2, label %bb3, !dbg !4472

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds nuw { ptr, i32 }, ptr %_6, i32 0, !dbg !4473
  store ptr @alloc_0625062a5eee489a7813ee965a38d15a, ptr %4, align 4, !dbg !4473
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !4473
  store i32 198, ptr %5, align 4, !dbg !4473
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 %_6) #17, !dbg !4474
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_4, i1 zeroext false, ptr align 4 %0) #18, !dbg !4475
  unreachable, !dbg !4475

bb2:                                              ; preds = %start
  ret void, !dbg !4476
}

; core::ptr::alignment::Alignment::of
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3ptr9alignment9Alignment2of17h7755b249dd8e5150E() unnamed_addr #2 !dbg !4477 {
start:
  ret i32 1, !dbg !4481
}

; core::ptr::alignment::Alignment::of
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core3ptr9alignment9Alignment2of17ha22585e6cc44d869E() unnamed_addr #2 !dbg !4482 {
start:
  ret i32 1, !dbg !4484
}

; core::ptr::alignment::Alignment::new
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3ptr9alignment9Alignment3new17h269ae4b41cefe36aE(i32 %align) unnamed_addr #2 !dbg !4485 {
start:
  %0 = alloca [4 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !4501, !DIExpression(), !4502)
  store i32 %align, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4455, !DIExpression(), !4503)
  store i32 %align, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !4463, !DIExpression(), !4505)
  %1 = call i32 @llvm.ctpop.i32(i32 %align), !dbg !4507
  store i32 %1, ptr %0, align 4, !dbg !4507
  %_0.i.i = load i32, ptr %0, align 4, !dbg !4507
  %_0.i = icmp eq i32 %_0.i.i, 1, !dbg !4508
  br i1 %_0.i, label %bb2, label %bb4, !dbg !4509

bb4:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !4510
  br label %bb5, !dbg !4511

bb2:                                              ; preds = %start
; call core::ptr::alignment::Alignment::new_unchecked
  %_3 = call i32 @_ZN4core3ptr9alignment9Alignment13new_unchecked17h0cea6419a241b6d9E(i32 %align, ptr align 4 @alloc_9c3f9e766effa3b5868625c372b1b798) #17, !dbg !4512
  store i32 %_3, ptr %_0, align 4, !dbg !4513
  br label %bb5, !dbg !4511

bb5:                                              ; preds = %bb2, %bb4
  %2 = load i32, ptr %_0, align 4, !dbg !4514
  ret i32 %2, !dbg !4514
}

; core::ptr::alignment::Alignment::as_usize
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE(i32 %self) unnamed_addr #2 !dbg !4515 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4520, !DIExpression(), !4521)
  ret i32 %self, !dbg !4522
}

; core::ptr::const_ptr::<impl *const T>::with_metadata_of
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h18687fb54e0b84d8E"(ptr %self, ptr %meta.0, i32 %meta.1) unnamed_addr #2 !dbg !4523 {
start:
  %meta.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4527, !DIExpression(), !4531)
  store ptr %meta.0, ptr %meta.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %meta.dbg.spill, i32 4
  store i32 %meta.1, ptr %0, align 4
    #dbg_declare(ptr %meta.dbg.spill, !4528, !DIExpression(), !4532)
; call core::ptr::metadata::metadata
  %_4 = call i32 @_ZN4core3ptr8metadata8metadata17h1aad4eed835b8620E(ptr %meta.0, i32 %meta.1) #17, !dbg !4533
; call core::ptr::metadata::from_raw_parts
  %1 = call { ptr, i32 } @_ZN4core3ptr8metadata14from_raw_parts17hcf9bdc608fd62205E(ptr %self, i32 %_4) #17, !dbg !4534
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !4534
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !4534
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !4535
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !4535
  ret { ptr, i32 } %3, !dbg !4535
}

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17h379c7f3f7759cca7E"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #2 !dbg !4536 {
start:
  %1 = alloca [4 x i8], align 4
  %pointee_size.dbg.spill = alloca [4 x i8], align 4
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4540, !DIExpression(), !4544)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !4541, !DIExpression(), !4545)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4546
  br i1 %_3, label %bb2, label %bb3, !dbg !4546

bb3:                                              ; preds = %bb2, %start
  store i32 2, ptr %pointee_size.dbg.spill, align 4, !dbg !4548
    #dbg_declare(ptr %pointee_size.dbg.spill, !4542, !DIExpression(), !4549)
  %_8 = icmp ult i32 0, 2, !dbg !4550
  br i1 %_8, label %bb5, label %bb7, !dbg !4550

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h50309da3cfdf55efE"(ptr %self, ptr %origin, ptr align 4 %0) #17, !dbg !4551
  br label %bb3, !dbg !4551

bb7:                                              ; preds = %bb5, %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i32 73, ptr align 4 %0) #18, !dbg !4552
  unreachable, !dbg !4552

bb5:                                              ; preds = %bb3
  %_9 = icmp ule i32 2, 2147483647, !dbg !4553
  br i1 %_9, label %bb6, label %bb7, !dbg !4553

bb6:                                              ; preds = %bb5
  %2 = ptrtoint ptr %self to i32, !dbg !4554
  %3 = ptrtoint ptr %origin to i32, !dbg !4554
  %4 = sub nuw i32 %2, %3, !dbg !4554
  %5 = udiv exact i32 %4, 2, !dbg !4554
  store i32 %5, ptr %1, align 4, !dbg !4554
  %_0 = load i32, ptr %1, align 4, !dbg !4554
  ret i32 %_0, !dbg !4555
}

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hade586b0eb215fe3E"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #2 !dbg !4556 {
start:
  %1 = alloca [4 x i8], align 4
  %pointee_size.dbg.spill = alloca [4 x i8], align 4
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4560, !DIExpression(), !4564)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !4561, !DIExpression(), !4565)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4566
  br i1 %_3, label %bb2, label %bb3, !dbg !4566

bb3:                                              ; preds = %bb2, %start
  store i32 1, ptr %pointee_size.dbg.spill, align 4, !dbg !4568
    #dbg_declare(ptr %pointee_size.dbg.spill, !4562, !DIExpression(), !4569)
  %_8 = icmp ult i32 0, 1, !dbg !4570
  br i1 %_8, label %bb5, label %bb7, !dbg !4570

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h50309da3cfdf55efE"(ptr %self, ptr %origin, ptr align 4 %0) #17, !dbg !4571
  br label %bb3, !dbg !4571

bb7:                                              ; preds = %bb5, %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i32 73, ptr align 4 %0) #18, !dbg !4572
  unreachable, !dbg !4572

bb5:                                              ; preds = %bb3
  %_9 = icmp ule i32 1, 2147483647, !dbg !4573
  br i1 %_9, label %bb6, label %bb7, !dbg !4573

bb6:                                              ; preds = %bb5
  %2 = ptrtoint ptr %self to i32, !dbg !4574
  %3 = ptrtoint ptr %origin to i32, !dbg !4574
  %4 = sub nuw i32 %2, %3, !dbg !4574
  %5 = udiv exact i32 %4, 1, !dbg !4574
  store i32 %5, ptr %1, align 4, !dbg !4574
  %_0 = load i32, ptr %1, align 4, !dbg !4574
  ret i32 %_0, !dbg !4575
}

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hcb351b796122b61aE"(ptr %self, ptr %origin, ptr align 4 %0) unnamed_addr #2 !dbg !4576 {
start:
  %1 = alloca [4 x i8], align 4
  %pointee_size.dbg.spill = alloca [4 x i8], align 4
  %origin.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4580, !DIExpression(), !4584)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !4581, !DIExpression(), !4585)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4586
  br i1 %_3, label %bb2, label %bb3, !dbg !4586

bb3:                                              ; preds = %bb2, %start
  store i32 2, ptr %pointee_size.dbg.spill, align 4, !dbg !4588
    #dbg_declare(ptr %pointee_size.dbg.spill, !4582, !DIExpression(), !4589)
  %_8 = icmp ult i32 0, 2, !dbg !4590
  br i1 %_8, label %bb5, label %bb7, !dbg !4590

bb2:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h50309da3cfdf55efE"(ptr %self, ptr %origin, ptr align 4 %0) #17, !dbg !4591
  br label %bb3, !dbg !4591

bb7:                                              ; preds = %bb5, %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i32 73, ptr align 4 %0) #18, !dbg !4592
  unreachable, !dbg !4592

bb5:                                              ; preds = %bb3
  %_9 = icmp ule i32 2, 2147483647, !dbg !4593
  br i1 %_9, label %bb6, label %bb7, !dbg !4593

bb6:                                              ; preds = %bb5
  %2 = ptrtoint ptr %self to i32, !dbg !4594
  %3 = ptrtoint ptr %origin to i32, !dbg !4594
  %4 = sub nuw i32 %2, %3, !dbg !4594
  %5 = udiv exact i32 %4, 2, !dbg !4594
  store i32 %5, ptr %1, align 4, !dbg !4594
  %_0 = load i32, ptr %1, align 4, !dbg !4594
  ret i32 %_0, !dbg !4595
}

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h50309da3cfdf55efE"(ptr %this, ptr %origin, ptr align 4 %0) unnamed_addr #2 !dbg !4596 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %origin.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4601, !DIExpression(), !4605)
  store ptr %origin, ptr %origin.dbg.spill, align 4
    #dbg_declare(ptr %origin.dbg.spill, !4602, !DIExpression(), !4605)
  store ptr @alloc_de4e626d456b04760e72bc785ed7e52a, ptr %msg.dbg.spill, align 4, !dbg !4606
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !4606
  store i32 201, ptr %1, align 4, !dbg !4606
    #dbg_declare(ptr %msg.dbg.spill, !4603, !DIExpression(), !4606)
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge
  %_3 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned14runtime_ptr_ge17hc98e65b971afd35aE"(ptr %this, ptr %origin) #17, !dbg !4607
  br i1 %_3, label %bb2, label %bb3, !dbg !4607

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_7, i32 0, !dbg !4609
  store ptr @alloc_de4e626d456b04760e72bc785ed7e52a, ptr %2, align 4, !dbg !4609
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !4609
  store i32 201, ptr %3, align 4, !dbg !4609
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 %_7) #17, !dbg !4610
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_5, i1 zeroext false, ptr align 4 %0) #18, !dbg !4611
  unreachable, !dbg !4611

bb2:                                              ; preds = %start
  ret void, !dbg !4612
}

; core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hf5c34a4f3a3f1b2aE"(ptr %self, ptr %dest, i32 %count, ptr align 4 %0) unnamed_addr #2 !dbg !4613 {
start:
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %dest.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4617, !DIExpression(), !4620)
  store ptr %dest, ptr %dest.dbg.spill, align 4
    #dbg_declare(ptr %dest.dbg.spill, !4618, !DIExpression(), !4621)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !4619, !DIExpression(), !4622)
  store ptr %self, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !458, !DIExpression(), !4623)
  store ptr %dest, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !465, !DIExpression(), !4625)
  store i32 %count, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !466, !DIExpression(), !4626)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !4627
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !4627

bb2.i:                                            ; preds = %start
; call core::ptr::copy_nonoverlapping::precondition_check
  call void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %self, ptr %dest, i32 1, i32 1, i32 %count, ptr align 4 @alloc_15a52d1a884c78a5de92a2463d39823d) #17, !dbg !4628
  br label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !4628

_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit: ; preds = %start, %bb2.i
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %dest, ptr align 1 %self, i32 %count, i1 false), !dbg !4629
  ret void, !dbg !4630
}

; core::ptr::const_ptr::<impl *const T>::add::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h165b117dcf9af246E"(ptr %this, i32 %count, i32 %size, ptr align 4 %0) unnamed_addr #2 !dbg !4631 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4634, !DIExpression(), !4639)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !4635, !DIExpression(), !4639)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !4636, !DIExpression(), !4639)
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %msg.dbg.spill, align 4, !dbg !4640
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !4640
  store i32 214, ptr %1, align 4, !dbg !4640
    #dbg_declare(ptr %msg.dbg.spill, !4637, !DIExpression(), !4640)
; call core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h3419a66eee12dc4eE"(ptr %this, i32 %count, i32 %size) #17, !dbg !4641
  br i1 %_4, label %bb2, label %bb3, !dbg !4641

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !4643
  store ptr @alloc_4fb4eca1f8b9d0ded0407faa6b2654bb, ptr %2, align 4, !dbg !4643
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !4643
  store i32 214, ptr %3, align 4, !dbg !4643
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !4644
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !4645
  unreachable, !dbg !4645

bb2:                                              ; preds = %start
  ret void, !dbg !4646
}

; core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h3419a66eee12dc4eE"(ptr %this, i32 %count, i32 %size) unnamed_addr #2 !dbg !4647 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4649, !DIExpression(), !4652)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !4650, !DIExpression(), !4653)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !4651, !DIExpression(), !4654)
  store ptr %this, ptr %_4, align 4, !dbg !4655
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !4655
  store i32 %count, ptr %0, align 4, !dbg !4655
  %1 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !4655
  store i32 %size, ptr %1, align 4, !dbg !4655
  %2 = load ptr, ptr %_4, align 4, !dbg !4657
  %3 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !4657
  %4 = load i32, ptr %3, align 4, !dbg !4657
  %5 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !4657
  %6 = load i32, ptr %5, align 4, !dbg !4657
; call core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17hef3eae1824627a39E"(ptr %2, i32 %4, i32 %6) #17, !dbg !4657
  ret i1 %_0, !dbg !4658
}

; core::ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17hef3eae1824627a39E"(ptr %this, i32 %count, i32 %size) unnamed_addr #2 !dbg !4659 {
start:
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %b.dbg.spill.i = alloca [1 x i8], align 1
  %a.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %overflow.dbg.spill = alloca [1 x i8], align 1
  %byte_offset.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4662, !DIExpression(), !4669)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !4663, !DIExpression(), !4669)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !4664, !DIExpression(), !4669)
; call core::num::<impl usize>::checked_mul
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E"(i32 %count, i32 %size) #17, !dbg !4670
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !4670
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !4670
  store i32 %1, ptr %_5, align 4, !dbg !4670
  %3 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4670
  store i32 %2, ptr %3, align 4, !dbg !4670
  %_6 = load i32, ptr %_5, align 4, !dbg !4672
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4672
  %5 = load i32, ptr %4, align 4, !dbg !4672
  %6 = trunc nuw i32 %_6 to i1, !dbg !4673
  br i1 %6, label %bb2, label %bb3, !dbg !4673

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4674
  %byte_offset = load i32, ptr %7, align 4, !dbg !4674
  store i32 %byte_offset, ptr %byte_offset.dbg.spill, align 4, !dbg !4674
    #dbg_declare(ptr %byte_offset.dbg.spill, !4665, !DIExpression(), !4675)
  store ptr %this, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !3803, !DIExpression(), !4676)
  store ptr %this, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !3810, !DIExpression(), !4678)
  %_0.i = ptrtoint ptr %this to i32, !dbg !4680
  store i32 %_0.i, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !2977, !DIExpression(), !4681)
  store i32 %byte_offset, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !2980, !DIExpression(), !4683)
  %_5.0.i = add i32 %_0.i, %byte_offset, !dbg !4684
  %_5.1.i = icmp ult i32 %_5.0.i, %_0.i, !dbg !4684
  store i32 %_5.0.i, ptr %a.dbg.spill.i, align 4, !dbg !4685
    #dbg_declare(ptr %a.dbg.spill.i, !2981, !DIExpression(), !4686)
  %8 = zext i1 %_5.1.i to i8, !dbg !4687
  store i8 %8, ptr %b.dbg.spill.i, align 1, !dbg !4687
    #dbg_declare(ptr %b.dbg.spill.i, !2983, !DIExpression(), !4688)
  %9 = insertvalue { i32, i1 } poison, i32 %_5.0.i, 0, !dbg !4689
  %10 = insertvalue { i32, i1 } %9, i1 %_5.1.i, 1, !dbg !4689
  %_8.0 = extractvalue { i32, i1 } %10, 0, !dbg !4690
  %_8.1 = extractvalue { i32, i1 } %10, 1, !dbg !4690
  %11 = zext i1 %_8.1 to i8, !dbg !4691
  store i8 %11, ptr %overflow.dbg.spill, align 1, !dbg !4691
    #dbg_declare(ptr %overflow.dbg.spill, !4667, !DIExpression(), !4692)
  %_10 = icmp ule i32 %byte_offset, 2147483647, !dbg !4693
  br i1 %_10, label %bb6, label %bb7, !dbg !4693

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !4694
  br label %bb8, !dbg !4695

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !4693
  br label %bb8, !dbg !4693

bb6:                                              ; preds = %bb2
  %12 = xor i1 %_8.1, true, !dbg !4696
  %13 = zext i1 %12 to i8, !dbg !4696
  store i8 %13, ptr %_0, align 1, !dbg !4696
  br label %bb8, !dbg !4693

bb8:                                              ; preds = %bb3, %bb6, %bb7
  %14 = load i8, ptr %_0, align 1, !dbg !4697
  %15 = trunc nuw i8 %14 to i1, !dbg !4697
  ret i1 %15, !dbg !4697

bb9:                                              ; No predecessors!
  unreachable, !dbg !4698
}

; core::ptr::const_ptr::<impl *const T>::sub::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18precondition_check17h8fdae33813982b0eE"(ptr %this, i32 %count, i32 %size, ptr align 4 %0) unnamed_addr #2 !dbg !4699 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4702, !DIExpression(), !4707)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !4703, !DIExpression(), !4707)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !4704, !DIExpression(), !4707)
  store ptr @alloc_1b8364ec196346492b44312e47bde728, ptr %msg.dbg.spill, align 4, !dbg !4708
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !4708
  store i32 214, ptr %1, align 4, !dbg !4708
    #dbg_declare(ptr %msg.dbg.spill, !4705, !DIExpression(), !4708)
; call core::ptr::const_ptr::<impl *const T>::sub::runtime_sub_nowrap
  %_4 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18runtime_sub_nowrap17hf543ca3926447dedE"(ptr %this, i32 %count, i32 %size) #17, !dbg !4709
  br i1 %_4, label %bb2, label %bb3, !dbg !4709

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !4711
  store ptr @alloc_1b8364ec196346492b44312e47bde728, ptr %2, align 4, !dbg !4711
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !4711
  store i32 214, ptr %3, align 4, !dbg !4711
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !4712
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !4713
  unreachable, !dbg !4713

bb2:                                              ; preds = %start
  ret void, !dbg !4714
}

; core::ptr::const_ptr::<impl *const T>::sub::runtime_sub_nowrap
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18runtime_sub_nowrap17hf543ca3926447dedE"(ptr %this, i32 %count, i32 %size) unnamed_addr #2 !dbg !4715 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4717, !DIExpression(), !4720)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !4718, !DIExpression(), !4721)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !4719, !DIExpression(), !4722)
  store ptr %this, ptr %_4, align 4, !dbg !4723
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !4723
  store i32 %count, ptr %0, align 4, !dbg !4723
  %1 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !4723
  store i32 %size, ptr %1, align 4, !dbg !4723
  %2 = load ptr, ptr %_4, align 4, !dbg !4725
  %3 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !4725
  %4 = load i32, ptr %3, align 4, !dbg !4725
  %5 = getelementptr inbounds i8, ptr %_4, i32 8, !dbg !4725
  %6 = load i32, ptr %5, align 4, !dbg !4725
; call core::ptr::const_ptr::<impl *const T>::sub::runtime_sub_nowrap::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18runtime_sub_nowrap7runtime17h6a081fc76a8f9f37E"(ptr %2, i32 %4, i32 %6) #17, !dbg !4725
  ret i1 %_0, !dbg !4726
}

; core::ptr::const_ptr::<impl *const T>::sub::runtime_sub_nowrap::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18runtime_sub_nowrap7runtime17h6a081fc76a8f9f37E"(ptr %this, i32 %count, i32 %size) unnamed_addr #2 !dbg !4727 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %byte_offset.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !4730, !DIExpression(), !4735)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !4731, !DIExpression(), !4735)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !4732, !DIExpression(), !4735)
; call core::num::<impl usize>::checked_mul
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E"(i32 %count, i32 %size) #17, !dbg !4736
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !4736
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !4736
  store i32 %1, ptr %_5, align 4, !dbg !4736
  %3 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4736
  store i32 %2, ptr %3, align 4, !dbg !4736
  %_6 = load i32, ptr %_5, align 4, !dbg !4738
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4738
  %5 = load i32, ptr %4, align 4, !dbg !4738
  %6 = trunc nuw i32 %_6 to i1, !dbg !4739
  br i1 %6, label %bb2, label %bb3, !dbg !4739

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !4740
  %byte_offset = load i32, ptr %7, align 4, !dbg !4740
  store i32 %byte_offset, ptr %byte_offset.dbg.spill, align 4, !dbg !4740
    #dbg_declare(ptr %byte_offset.dbg.spill, !4733, !DIExpression(), !4741)
  %_7 = icmp ule i32 %byte_offset, 2147483647, !dbg !4742
  br i1 %_7, label %bb4, label %bb5, !dbg !4742

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !4743
  br label %bb7, !dbg !4744

bb5:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !4742
  br label %bb7, !dbg !4742

bb4:                                              ; preds = %bb2
  store ptr %this, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !3803, !DIExpression(), !4745)
  store ptr %this, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !3810, !DIExpression(), !4747)
  %_0.i = ptrtoint ptr %this to i32, !dbg !4749
  %8 = icmp uge i32 %_0.i, %byte_offset, !dbg !4750
  %9 = zext i1 %8 to i8, !dbg !4750
  store i8 %9, ptr %_0, align 1, !dbg !4750
  br label %bb7, !dbg !4742

bb7:                                              ; preds = %bb3, %bb4, %bb5
  %10 = load i8, ptr %_0, align 1, !dbg !4751
  %11 = trunc nuw i8 %10 to i1, !dbg !4751
  ret i1 %11, !dbg !4751

bb8:                                              ; No predecessors!
  unreachable, !dbg !4752
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h6d871e3f473eea11E"(ptr %self) unnamed_addr #2 !dbg !4753 {
start:
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4757, !DIExpression(), !4760)
  store ptr %self, ptr %ptr.dbg.spill, align 4, !dbg !4761
    #dbg_declare(ptr %ptr.dbg.spill, !4758, !DIExpression(), !4762)
; call core::ptr::const_ptr::<impl *const T>::is_null::runtime
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null7runtime17hbd280b595dfa2480E"(ptr %self) #17, !dbg !4763
  ret i1 %_0, !dbg !4765
}

; core::ptr::const_ptr::<impl *const T>::is_null::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null7runtime17hbd280b595dfa2480E"(ptr %ptr) unnamed_addr #2 !dbg !4766 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !4769, !DIExpression(), !4770)
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4771, !DIExpression(), !4776)
  store ptr %ptr, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4779, !DIExpression(), !4785)
  %_0.i = ptrtoint ptr %ptr to i32, !dbg !4787
  %_0 = icmp eq i32 %_0.i, 0, !dbg !4788
  ret i1 %_0, !dbg !4789
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3str11validations15utf8_first_byte17h8e8702373278c649E(i8 %byte, i32 %width) unnamed_addr #2 !dbg !4790 {
start:
  %width.dbg.spill = alloca [4 x i8], align 4
  %byte.dbg.spill = alloca [1 x i8], align 1
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4796, !DIExpression(), !4798)
  store i32 %width, ptr %width.dbg.spill, align 4
    #dbg_declare(ptr %width.dbg.spill, !4797, !DIExpression(), !4799)
  %_5 = icmp ult i32 %width, 8, !dbg !4800
  br i1 %_5, label %bb1, label %panic, !dbg !4800

bb1:                                              ; preds = %start
  %0 = and i32 %width, 7, !dbg !4800
  %1 = trunc i32 %0 to i8, !dbg !4800
  %_4 = lshr i8 127, %1, !dbg !4800
  %_3 = and i8 %byte, %_4, !dbg !4801
  %_0 = zext i8 %_3 to i32, !dbg !4801
  ret i32 %_0, !dbg !4802

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_shr_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h53cfb129f0f9bfb7E(ptr align 4 @alloc_290bcf1d3573927535d28e419dcd8e69) #18, !dbg !4800
  unreachable, !dbg !4800
}

; core::str::validations::utf8_is_cont_byte
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h949f0d4c22ec31d0E(i8 %byte) unnamed_addr #2 !dbg !4803 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4807, !DIExpression(), !4808)
  %_0 = icmp slt i8 %byte, -64, !dbg !4809
  ret i1 %_0, !dbg !4810
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h07be36f50abef2bdE(i32 %ch, i8 %byte) unnamed_addr #2 !dbg !4811 {
start:
  %byte.dbg.spill = alloca [1 x i8], align 1
  %ch.dbg.spill = alloca [4 x i8], align 4
  store i32 %ch, ptr %ch.dbg.spill, align 4
    #dbg_declare(ptr %ch.dbg.spill, !4815, !DIExpression(), !4817)
  store i8 %byte, ptr %byte.dbg.spill, align 1
    #dbg_declare(ptr %byte.dbg.spill, !4816, !DIExpression(), !4818)
  %_3 = shl i32 %ch, 6, !dbg !4819
  %_7 = and i8 %byte, 63, !dbg !4820
  %_6 = zext i8 %_7 to i32, !dbg !4820
  %_0 = or i32 %_3, %_6, !dbg !4819
  ret i32 %_0, !dbg !4821
}

; core::str::validations::next_code_point_reverse
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h72ee05c2af757cf7E(ptr align 4 %bytes) unnamed_addr #2 !dbg !4822 {
start:
  %next_byte.dbg.spill = alloca [1 x i8], align 1
  %x.dbg.spill = alloca [1 x i8], align 1
  %y.dbg.spill = alloca [1 x i8], align 1
  %z.dbg.spill = alloca [1 x i8], align 1
  %w.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [0 x i8], align 1
  %bytes.dbg.spill = alloca [4 x i8], align 4
  %ch = alloca [4 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %bytes, ptr %bytes.dbg.spill, align 4
    #dbg_declare(ptr %bytes.dbg.spill, !4839, !DIExpression(), !4861)
    #dbg_declare(ptr %ch, !4851, !DIExpression(), !4862)
    #dbg_declare(ptr %residual.dbg.spill, !4842, !DIExpression(), !4863)
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_3 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hffa724c77accbe4dE"(ptr align 4 %bytes) #17, !dbg !4864
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %0 = call align 1 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8da1c729ae03b550E"(ptr align 1 %_3) #17, !dbg !4865
  store ptr %0, ptr %_2, align 4, !dbg !4865
  %1 = load ptr, ptr %_2, align 4, !dbg !4865
  %2 = ptrtoint ptr %1 to i32, !dbg !4865
  %3 = icmp eq i32 %2, 0, !dbg !4865
  %_4 = select i1 %3, i32 1, i32 0, !dbg !4865
  %4 = trunc nuw i32 %_4 to i1, !dbg !4865
  br i1 %4, label %bb5, label %bb4, !dbg !4865

bb5:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  %5 = call { i32, i32 } @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h9e252ff832a4f32dE"() #17, !dbg !4866
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !4866
  %7 = extractvalue { i32, i32 } %5, 1, !dbg !4866
  store i32 %6, ptr %_0, align 4, !dbg !4866
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4866
  store i32 %7, ptr %8, align 4, !dbg !4866
  br label %bb26, !dbg !4866

bb4:                                              ; preds = %start
  %val = load ptr, ptr %_2, align 4, !dbg !4865
  store ptr %val, ptr %val.dbg.spill, align 4, !dbg !4865
    #dbg_declare(ptr %val.dbg.spill, !4844, !DIExpression(), !4867)
    #dbg_declare(ptr %val.dbg.spill, !4848, !DIExpression(), !4868)
  %_8 = load i8, ptr %val, align 1, !dbg !4869
  %_7 = icmp ult i8 %_8, -128, !dbg !4869
  br i1 %_7, label %bb6, label %bb7, !dbg !4869

bb7:                                              ; preds = %bb4
  %w = load i8, ptr %val, align 1, !dbg !4870
  store i8 %w, ptr %w.dbg.spill, align 1, !dbg !4870
    #dbg_declare(ptr %w.dbg.spill, !4840, !DIExpression(), !4871)
    #dbg_declare(ptr %w.dbg.spill, !4849, !DIExpression(), !4872)
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_14 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hffa724c77accbe4dE"(ptr align 4 %bytes) #17, !dbg !4873
; call core::option::Option<T>::unwrap_unchecked
  %_13 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4724f2f4d0bfd6b0E"(ptr align 1 %_14, ptr align 4 @alloc_925eca4c88c3e8b843cce0c4db81997b) #17, !dbg !4874
  %z = load i8, ptr %_13, align 1, !dbg !4875
  store i8 %z, ptr %z.dbg.spill, align 1, !dbg !4875
    #dbg_declare(ptr %z.dbg.spill, !4853, !DIExpression(), !4876)
; call core::str::validations::utf8_first_byte
  %_15 = call i32 @_ZN4core3str11validations15utf8_first_byte17h8e8702373278c649E(i8 %z, i32 2) #17, !dbg !4877
  store i32 %_15, ptr %ch, align 4, !dbg !4878
; call core::str::validations::utf8_is_cont_byte
  %_16 = call zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h949f0d4c22ec31d0E(i8 %z) #17, !dbg !4879
  br i1 %_16, label %bb12, label %bb24, !dbg !4879

bb6:                                              ; preds = %bb4
  %next_byte = load i8, ptr %val, align 1, !dbg !4880
  store i8 %next_byte, ptr %next_byte.dbg.spill, align 1, !dbg !4880
    #dbg_declare(ptr %next_byte.dbg.spill, !4846, !DIExpression(), !4868)
  %_9 = zext i8 %next_byte to i32, !dbg !4881
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4882
  store i32 %_9, ptr %9, align 4, !dbg !4882
  store i32 1, ptr %_0, align 4, !dbg !4882
  br label %bb26, !dbg !4883

bb24:                                             ; preds = %bb22, %bb7
  %_31 = load i32, ptr %ch, align 4, !dbg !4886
; call core::str::validations::utf8_acc_cont_byte
  %_30 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h07be36f50abef2bdE(i32 %_31, i8 %w) #17, !dbg !4887
  store i32 %_30, ptr %ch, align 4, !dbg !4888
  %_32 = load i32, ptr %ch, align 4, !dbg !4889
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4890
  store i32 %_32, ptr %10, align 4, !dbg !4890
  store i32 1, ptr %_0, align 4, !dbg !4890
  br label %bb26, !dbg !4891

bb12:                                             ; preds = %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_19 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hffa724c77accbe4dE"(ptr align 4 %bytes) #17, !dbg !4892
; call core::option::Option<T>::unwrap_unchecked
  %_18 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4724f2f4d0bfd6b0E"(ptr align 1 %_19, ptr align 4 @alloc_c8d4c825d834ea771e8279808c0dddc7) #17, !dbg !4893
  %y = load i8, ptr %_18, align 1, !dbg !4894
  store i8 %y, ptr %y.dbg.spill, align 1, !dbg !4894
    #dbg_declare(ptr %y.dbg.spill, !4855, !DIExpression(), !4895)
; call core::str::validations::utf8_first_byte
  %_20 = call i32 @_ZN4core3str11validations15utf8_first_byte17h8e8702373278c649E(i8 %y, i32 3) #17, !dbg !4896
  store i32 %_20, ptr %ch, align 4, !dbg !4897
; call core::str::validations::utf8_is_cont_byte
  %_21 = call zeroext i1 @_ZN4core3str11validations17utf8_is_cont_byte17h949f0d4c22ec31d0E(i8 %y) #17, !dbg !4898
  br i1 %_21, label %bb17, label %bb22, !dbg !4898

bb22:                                             ; preds = %bb17, %bb12
  %_29 = load i32, ptr %ch, align 4, !dbg !4899
; call core::str::validations::utf8_acc_cont_byte
  %_28 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h07be36f50abef2bdE(i32 %_29, i8 %z) #17, !dbg !4900
  store i32 %_28, ptr %ch, align 4, !dbg !4901
  br label %bb24, !dbg !4902

bb17:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %_24 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hffa724c77accbe4dE"(ptr align 4 %bytes) #17, !dbg !4903
; call core::option::Option<T>::unwrap_unchecked
  %_23 = call align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4724f2f4d0bfd6b0E"(ptr align 1 %_24, ptr align 4 @alloc_019a73d2c88f6e3bce62d53b671a5541) #17, !dbg !4904
  %x = load i8, ptr %_23, align 1, !dbg !4905
  store i8 %x, ptr %x.dbg.spill, align 1, !dbg !4905
    #dbg_declare(ptr %x.dbg.spill, !4857, !DIExpression(), !4906)
; call core::str::validations::utf8_first_byte
  %_25 = call i32 @_ZN4core3str11validations15utf8_first_byte17h8e8702373278c649E(i8 %x, i32 4) #17, !dbg !4907
  store i32 %_25, ptr %ch, align 4, !dbg !4908
  %_27 = load i32, ptr %ch, align 4, !dbg !4909
; call core::str::validations::utf8_acc_cont_byte
  %_26 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17h07be36f50abef2bdE(i32 %_27, i8 %y) #17, !dbg !4910
  store i32 %_26, ptr %ch, align 4, !dbg !4911
  br label %bb22, !dbg !4912

bb26:                                             ; preds = %bb5, %bb6, %bb24
  %11 = load i32, ptr %_0, align 4, !dbg !4891
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4891
  %13 = load i32, ptr %12, align 4, !dbg !4891
  %14 = insertvalue { i32, i32 } poison, i32 %11, 0, !dbg !4891
  %15 = insertvalue { i32, i32 } %14, i32 %13, 1, !dbg !4891
  ret { i32, i32 } %15, !dbg !4891

bb3:                                              ; No predecessors!
  unreachable, !dbg !4865
}

; core::str::<impl str>::char_indices
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h177befd449ee2c89E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !4913 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4923, !DIExpression(), !4924)
; call core::str::<impl str>::chars
  %1 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hdc83417ee00d71e3E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !4925
  %_2.0 = extractvalue { ptr, ptr } %1, 0, !dbg !4925
  %_2.1 = extractvalue { ptr, ptr } %1, 1, !dbg !4925
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !4926
  store i32 0, ptr %2, align 4, !dbg !4926
  store ptr %_2.0, ptr %_0, align 4, !dbg !4926
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !4926
  store ptr %_2.1, ptr %3, align 4, !dbg !4926
  ret void, !dbg !4927
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !4928 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4932, !DIExpression(), !4933)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !4939)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !4941
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !4941
  %_2.0 = extractvalue { ptr, i32 } %3, 0, !dbg !4942
  %_2.1 = extractvalue { ptr, i32 } %3, 1, !dbg !4942
  ret i32 %_2.1, !dbg !4943
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nounwind
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hdc83417ee00d71e3E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !4944 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4948, !DIExpression(), !4949)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !4950)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !4952
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !4952
  %_3.0 = extractvalue { ptr, i32 } %3, 0, !dbg !4953
  %_3.1 = extractvalue { ptr, i32 } %3, 1, !dbg !4953
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !4954
  %_2.0 = extractvalue { ptr, ptr } %4, 0, !dbg !4954
  %_2.1 = extractvalue { ptr, ptr } %4, 1, !dbg !4954
  %5 = insertvalue { ptr, ptr } poison, ptr %_2.0, 0, !dbg !4955
  %6 = insertvalue { ptr, ptr } %5, ptr %_2.1, 1, !dbg !4955
  ret { ptr, ptr } %6, !dbg !4955
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1a6184bdcfacbb3aE"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !4956 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !4960, !DIExpression(), !4961)
; call core::str::<impl str>::len
  %_2 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !4962
  %_0 = icmp eq i32 %_2, 0, !dbg !4963
  ret i1 %_0, !dbg !4964
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3str4iter5Chars6as_str17h4fa41a383d1b5080E(ptr align 4 %self) unnamed_addr #2 !dbg !4965 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4972, !DIExpression(), !4973)
; call core::slice::iter::Iter<T>::as_slice
  %0 = call { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4 %self) #17, !dbg !4974
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !4974
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !4974
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E(ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !4975
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !4975
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !4975
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !4976
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !4976
  ret { ptr, i32 } %3, !dbg !4976
}

; core::str::error::Utf8Error::valid_up_to
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3str5error9Utf8Error11valid_up_to17h319ff214de48af79E(ptr align 4 %self) unnamed_addr #2 !dbg !4977 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !4984, !DIExpression(), !4985)
  %_0 = load i32, ptr %self, align 4, !dbg !4986
  ret i32 %_0, !dbg !4987
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFull>::index
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h0e80e9d18d837736E"(ptr align 1 %slice.0, i32 %slice.1, ptr align 4 %0) unnamed_addr #2 !dbg !4988 {
start:
  %self.dbg.spill = alloca [0 x i8], align 1
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !4998, !DIExpression(), !4999)
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %1, align 4
    #dbg_declare(ptr %slice.dbg.spill, !4997, !DIExpression(), !5000)
    #dbg_declare(ptr %self.dbg.spill, !4996, !DIExpression(), !4999)
  %2 = insertvalue { ptr, i32 } poison, ptr %slice.0, 0, !dbg !5001
  %3 = insertvalue { ptr, i32 } %2, i32 %slice.1, 1, !dbg !5001
  ret { ptr, i32 } %3, !dbg !5001
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E(ptr align 1 %v.0, i32 %v.1) unnamed_addr #2 !dbg !5002 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !5008, !DIExpression(), !5009)
  %1 = insertvalue { ptr, i32 } poison, ptr %v.0, 0, !dbg !5010
  %2 = insertvalue { ptr, i32 } %1, i32 %v.1, 1, !dbg !5010
  ret { ptr, i32 } %2, !dbg !5010
}

; core::cell::Cell<T>::new
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core4cell13Cell$LT$T$GT$3new17h4393201bae3dbf67E"(i32 %value) unnamed_addr #2 !dbg !5011 {
start:
  %value.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill = alloca [4 x i8], align 4
  store i32 %value, ptr %value.dbg.spill, align 4
    #dbg_declare(ptr %value.dbg.spill, !5017, !DIExpression(), !5018)
  store i32 %value, ptr %value.dbg.spill.i, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !5019, !DIExpression(), !5025)
  ret i32 %value, !dbg !5027
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617h0ddfb08daf367a6fE(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #2 !dbg !5028 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !5033, !DIExpression(), !5034)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2517162552d9c862E"(ptr %iter.0, ptr %iter.1) #17, !dbg !5035
  %_2.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5035
  %_2.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5035
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5036
  store ptr %_2.0, ptr %2, align 4, !dbg !5036
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !5036
  store ptr %_2.1, ptr %3, align 4, !dbg !5036
  store i16 0, ptr %_0, align 4, !dbg !5036
  %4 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !5036
  store i16 undef, ptr %4, align 2, !dbg !5036
  ret void, !dbg !5037
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617h17941822919627ffE(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #2 !dbg !5038 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !5042, !DIExpression(), !5043)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he71e25bf9dbdc63bE"(ptr %iter.0, ptr %iter.1) #17, !dbg !5044
  %_2.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5044
  %_2.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5044
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5045
  store ptr %_2.0, ptr %2, align 4, !dbg !5045
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !5045
  store ptr %_2.1, ptr %3, align 4, !dbg !5045
  store i16 0, ptr %_0, align 4, !dbg !5045
  %4 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !5045
  store i16 undef, ptr %4, align 2, !dbg !5045
  ret void, !dbg !5046
}

; core::char::decode::decode_utf16
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4char6decode12decode_utf1617h59267bb08a162c81E(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #2 !dbg !5047 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !5051, !DIExpression(), !5052)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4967a440a24d431eE"(ptr %iter.0, ptr %iter.1) #17, !dbg !5053
  %_2.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5053
  %_2.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5053
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !5054
  store ptr %_2.0, ptr %2, align 4, !dbg !5054
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !5054
  store ptr %_2.1, ptr %3, align 4, !dbg !5054
  store i16 0, ptr %_0, align 4, !dbg !5054
  %4 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !5054
  store i16 undef, ptr %4, align 2, !dbg !5054
  ret void, !dbg !5055
}

; core::char::convert::char_try_from_u32
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char7convert17char_try_from_u3217h4e2faeb6573f1185E(i32 %i) unnamed_addr #2 !dbg !5056 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !5080, !DIExpression(), !5081)
  %_4 = xor i32 %i, 55296, !dbg !5082
  store i32 %_4, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5083, !DIExpression(), !5090)
  store i32 2048, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !5089, !DIExpression(), !5092)
  %_0.i = sub i32 %_4, 2048, !dbg !5093
  %_2 = icmp uge i32 %_0.i, 1112064, !dbg !5082
  br i1 %_2, label %bb3, label %bb4, !dbg !5082

bb4:                                              ; preds = %start
  store i32 %i, ptr %_0, align 4, !dbg !5094
  br label %bb5, !dbg !5095

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !5096
  br label %bb5, !dbg !5095

bb5:                                              ; preds = %bb3, %bb4
  %0 = load i32, ptr %_0, align 4, !dbg !5097
  ret i32 %0, !dbg !5097
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17hf744add997150557E(i32 %i, ptr align 4 %0) unnamed_addr #2 !dbg !5098 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !5102, !DIExpression(), !5103)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !5104
  br i1 %_2, label %bb2, label %bb3, !dbg !5104

bb3:                                              ; preds = %bb2, %start
  ret i32 %i, !dbg !5106

bb2:                                              ; preds = %start
; call core::char::convert::from_u32_unchecked::precondition_check
  call void @_ZN4core4char7convert18from_u32_unchecked18precondition_check17h15ed6a7325f4a6efE(i32 %i, ptr align 4 %0) #17, !dbg !5107
  br label %bb3, !dbg !5107
}

; core::char::convert::from_u32_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4char7convert18from_u32_unchecked18precondition_check17h15ed6a7325f4a6efE(i32 %i, ptr align 4 %0) unnamed_addr #2 !dbg !5108 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %_6 = alloca [24 x i8], align 4
  %_4 = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !5113, !DIExpression(), !5116)
  store ptr @alloc_4dc07e69e5d34e9d1484dfbbef0bb9b1, ptr %msg.dbg.spill, align 4, !dbg !5117
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !5117
  store i32 174, ptr %1, align 4, !dbg !5117
    #dbg_declare(ptr %msg.dbg.spill, !5114, !DIExpression(), !5117)
; call core::char::convert::char_try_from_u32
  %2 = call i32 @_ZN4core4char7convert17char_try_from_u3217h4e2faeb6573f1185E(i32 %i) #17, !dbg !5118
  store i32 %2, ptr %_4, align 4, !dbg !5118
; call core::result::Result<T,E>::is_ok
  %_2 = call zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1a55f48f0417a295E"(ptr align 4 %_4) #17, !dbg !5120
  br i1 %_2, label %bb3, label %bb4, !dbg !5118

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_8, i32 0, !dbg !5121
  store ptr @alloc_4dc07e69e5d34e9d1484dfbbef0bb9b1, ptr %3, align 4, !dbg !5121
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !5121
  store i32 174, ptr %4, align 4, !dbg !5121
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !5122
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_6, i1 zeroext false, ptr align 4 %0) #18, !dbg !5123
  unreachable, !dbg !5123

bb3:                                              ; preds = %start
  ret void, !dbg !5124
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core4char7methods15encode_utf8_raw17h5651d1f2b96f3c25E(i32 %code, ptr align 1 %dst.0, i32 %dst.1) unnamed_addr #2 !dbg !5125 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %dst_len.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %code.dbg.spill.i = alloca [4 x i8], align 4
  %_4.i = alloca [12 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [8 x i8], align 4
  %code.dbg.spill = alloca [4 x i8], align 4
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !5135, !DIExpression(), !5139)
  store ptr %dst.0, ptr %dst.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %dst.dbg.spill, i32 4
  store i32 %dst.1, ptr %0, align 4
    #dbg_declare(ptr %dst.dbg.spill, !5136, !DIExpression(), !5140)
; call core::char::methods::len_utf8
  %len = call i32 @_ZN4core4char7methods8len_utf817h526e1e68148fccd7E(i32 %code) #17, !dbg !5141
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !5141
    #dbg_declare(ptr %len.dbg.spill, !5137, !DIExpression(), !5142)
  %_4 = icmp ult i32 %dst.1, %len, !dbg !5143
  br i1 %_4, label %bb2, label %bb3, !dbg !5143

bb3:                                              ; preds = %start
  store ptr %dst.0, ptr %self.dbg.spill.i1, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %dst.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !5144, !DIExpression(), !5149)
; call core::char::methods::encode_utf8_raw_unchecked
  call void @_ZN4core4char7methods25encode_utf8_raw_unchecked17h85e7bbede87537d1E(i32 %code, ptr %dst.0) #17, !dbg !5151
  store ptr %dst.0, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %dst.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !5144, !DIExpression(), !5152)
; call core::slice::raw::from_raw_parts_mut
  %3 = call { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17heacb9b45dad9f98eE(ptr %dst.0, i32 %len, ptr align 4 @alloc_bc1173620796b796ebf04091cc898ca7) #17, !dbg !5154
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !5154
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !5154
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !5155
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !5155
  ret { ptr, i32 } %5, !dbg !5155

bb2:                                              ; preds = %start
  store i32 %code, ptr %code.dbg.spill.i, align 4
    #dbg_declare(ptr %code.dbg.spill.i, !5156, !DIExpression(), !5164)
  store i32 %len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !5162, !DIExpression(), !5164)
  store i32 %dst.1, ptr %dst_len.dbg.spill.i, align 4
    #dbg_declare(ptr %dst_len.dbg.spill.i, !5163, !DIExpression(), !5164)
  store i32 %code, ptr %_4.i, align 4, !dbg !5167
  %6 = getelementptr inbounds i8, ptr %_4.i, i32 4, !dbg !5167
  store i32 %len, ptr %6, align 4, !dbg !5167
  %7 = getelementptr inbounds i8, ptr %_4.i, i32 8, !dbg !5167
  store i32 %dst.1, ptr %7, align 4, !dbg !5167
  %8 = load i32, ptr %_4.i, align 4, !dbg !5169
  %9 = getelementptr inbounds i8, ptr %_4.i, i32 4, !dbg !5169
  %10 = load i32, ptr %9, align 4, !dbg !5169
  %11 = getelementptr inbounds i8, ptr %_4.i, i32 8, !dbg !5169
  %12 = load i32, ptr %11, align 4, !dbg !5169
; call core::char::methods::encode_utf8_raw::do_panic::runtime
  call void @_ZN4core4char7methods15encode_utf8_raw8do_panic7runtime17hf43c78897e0ac433E(i32 %8, i32 %10, i32 %12, ptr align 4 @alloc_7b13bce84bc30a18494a4a1a8c05d561) #18, !dbg !5169
  unreachable, !dbg !5169

_ZN4core4char7methods15encode_utf8_raw8do_panic17h579160be39dda5c0E.exit: ; No predecessors!
  unreachable, !dbg !5170
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h5020acdbefe335aeE"(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #2 !dbg !5171 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !5174, !DIExpression(), !5175)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h59267bb08a162c81E(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) #17, !dbg !5176
  ret void, !dbg !5177
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617he542c089b93c4231E"(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #2 !dbg !5178 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !5180, !DIExpression(), !5181)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h0ddfb08daf367a6fE(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) #17, !dbg !5182
  ret void, !dbg !5183
}

; core::char::methods::<impl char>::decode_utf16
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617hf07191350f05d07bE"(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #2 !dbg !5184 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !5186, !DIExpression(), !5187)
; call core::char::decode::decode_utf16
  call void @_ZN4core4char6decode12decode_utf1617h17941822919627ffE(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) #17, !dbg !5188
  ret void, !dbg !5189
}

; core::char::methods::<impl char>::is_case_ignorable
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$17is_case_ignorable17ha34e138c472dbef3E"(i32 %0) unnamed_addr #2 !dbg !5190 {
start:
  %_0 = alloca [1 x i8], align 1
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !5194, !DIExpression(), !5195)
; call core::char::methods::<impl char>::is_ascii
  %_2 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h60f03876197a0f94E"(ptr align 4 %self) #17, !dbg !5196
  br i1 %_2, label %bb2, label %bb5, !dbg !5197

bb5:                                              ; preds = %start
  %1 = load i32, ptr %self, align 4, !dbg !5198
; call core::unicode::unicode_data::case_ignorable::lookup
  %2 = call zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17h7bccb44ea784e7a9E(i32 %1) #17, !dbg !5198
  %3 = zext i1 %2 to i8, !dbg !5198
  store i8 %3, ptr %_0, align 1, !dbg !5198
  br label %bb6, !dbg !5198

bb2:                                              ; preds = %start
  %4 = load i32, ptr %self, align 4, !dbg !5199
  switch i32 %4, label %bb3 [
    i32 39, label %bb4
    i32 46, label %bb4
    i32 58, label %bb4
    i32 94, label %bb4
    i32 96, label %bb4
  ], !dbg !5199

bb6:                                              ; preds = %bb3, %bb4, %bb5
  %5 = load i8, ptr %_0, align 1, !dbg !5201
  %6 = trunc nuw i8 %5 to i1, !dbg !5201
  ret i1 %6, !dbg !5201

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !5202
  br label %bb6, !dbg !5202

bb4:                                              ; preds = %bb2, %bb2, %bb2, %bb2, %bb2
  store i8 1, ptr %_0, align 1, !dbg !5203
  br label %bb6, !dbg !5203
}

; core::char::methods::<impl char>::from_u32_unchecked
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %i) unnamed_addr #2 !dbg !5204 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !5208, !DIExpression(), !5209)
; call core::char::convert::from_u32_unchecked
  %_0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17hf744add997150557E(i32 %i, ptr align 4 @alloc_72730c135e8251cc498f914b9cedcd32) #17, !dbg !5210
  ret i32 %_0, !dbg !5211
}

; core::char::methods::<impl char>::is_ascii_alphabetic
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$19is_ascii_alphabetic17hd02ef05cca0a0a49E"(ptr align 4 %self) unnamed_addr #2 !dbg !5212 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5216, !DIExpression(), !5217)
  %0 = load i32, ptr %self, align 4, !dbg !5218
  %_4 = icmp ule i32 65, %0, !dbg !5218
  br i1 %_4, label %bb4, label %bb2, !dbg !5218

bb2:                                              ; preds = %bb4, %start
  %1 = load i32, ptr %self, align 4, !dbg !5219
  %_2 = icmp ule i32 97, %1, !dbg !5219
  br i1 %_2, label %bb3, label %bb1, !dbg !5219

bb4:                                              ; preds = %start
  %2 = load i32, ptr %self, align 4, !dbg !5218
  %_5 = icmp ule i32 %2, 90, !dbg !5218
  br i1 %_5, label %bb5, label %bb2, !dbg !5218

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1, !dbg !5220
  br label %bb6, !dbg !5220

bb1:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !5222
  br label %bb6, !dbg !5222

bb3:                                              ; preds = %bb2
  %3 = load i32, ptr %self, align 4, !dbg !5219
  %_3 = icmp ule i32 %3, 122, !dbg !5219
  %4 = icmp ne i1 %_3, false, !dbg !5219
  %5 = zext i1 %4 to i8, !dbg !5219
  store i8 %5, ptr %_0, align 1, !dbg !5219
  br label %bb6, !dbg !5219

bb6:                                              ; preds = %bb5, %bb3, %bb1
  %6 = load i8, ptr %_0, align 1, !dbg !5223
  %7 = trunc nuw i8 %6 to i1, !dbg !5223
  ret i1 %7, !dbg !5223
}

; core::char::methods::<impl char>::is_ascii
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h60f03876197a0f94E"(ptr align 4 %self) unnamed_addr #2 !dbg !5224 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5226, !DIExpression(), !5227)
  %_3 = load i32, ptr %self, align 4, !dbg !5228
  %_0 = icmp ule i32 %_3, 127, !dbg !5228
  ret i1 %_0, !dbg !5229
}

; core::char::methods::<impl char>::is_cased
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_cased17h406efb6a17678473E"(i32 %0) unnamed_addr #2 !dbg !5230 {
start:
  %_0 = alloca [1 x i8], align 1
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !5232, !DIExpression(), !5233)
; call core::char::methods::<impl char>::is_ascii
  %_2 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h60f03876197a0f94E"(ptr align 4 %self) #17, !dbg !5234
  br i1 %_2, label %bb2, label %bb3, !dbg !5235

bb3:                                              ; preds = %start
  %1 = load i32, ptr %self, align 4, !dbg !5236
; call core::unicode::unicode_data::cased::lookup
  %2 = call zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17h3e46302b6fe81cb0E(i32 %1) #17, !dbg !5236
  %3 = zext i1 %2 to i8, !dbg !5236
  store i8 %3, ptr %_0, align 1, !dbg !5236
  br label %bb4, !dbg !5236

bb2:                                              ; preds = %start
; call core::char::methods::<impl char>::is_ascii_alphabetic
  %4 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$19is_ascii_alphabetic17hd02ef05cca0a0a49E"(ptr align 4 %self) #17, !dbg !5237
  %5 = zext i1 %4 to i8, !dbg !5237
  store i8 %5, ptr %_0, align 1, !dbg !5237
  br label %bb4, !dbg !5237

bb4:                                              ; preds = %bb2, %bb3
  %6 = load i8, ptr %_0, align 1, !dbg !5238
  %7 = trunc nuw i8 %6 to i1, !dbg !5238
  ret i1 %7, !dbg !5238
}

; core::char::methods::<impl char>::len_utf8
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h43f83d25bab4344eE"(i32 %self) unnamed_addr #2 !dbg !5239 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store i32 %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5243, !DIExpression(), !5244)
; call core::char::methods::len_utf8
  %_0 = call i32 @_ZN4core4char7methods8len_utf817h526e1e68148fccd7E(i32 %self) #17, !dbg !5245
  ret i32 %_0, !dbg !5246
}

; core::char::methods::encode_utf8_raw_unchecked
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4char7methods25encode_utf8_raw_unchecked17h85e7bbede87537d1E(i32 %code, ptr %dst) unnamed_addr #2 !dbg !5247 {
start:
  %count.dbg.spill.i25 = alloca [4 x i8], align 4
  %self.dbg.spill.i26 = alloca [4 x i8], align 4
  %count.dbg.spill.i19 = alloca [4 x i8], align 4
  %self.dbg.spill.i20 = alloca [4 x i8], align 4
  %count.dbg.spill.i13 = alloca [4 x i8], align 4
  %self.dbg.spill.i14 = alloca [4 x i8], align 4
  %count.dbg.spill.i7 = alloca [4 x i8], align 4
  %self.dbg.spill.i8 = alloca [4 x i8], align 4
  %count.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %last4.dbg.spill = alloca [1 x i8], align 1
  %last3.dbg.spill = alloca [1 x i8], align 1
  %last2.dbg.spill = alloca [1 x i8], align 1
  %last1.dbg.spill = alloca [1 x i8], align 1
  %len.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  %code.dbg.spill = alloca [4 x i8], align 4
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !5251, !DIExpression(), !5263)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !5252, !DIExpression(), !5264)
; call core::char::methods::len_utf8
  %len = call i32 @_ZN4core4char7methods8len_utf817h526e1e68148fccd7E(i32 %code) #17, !dbg !5265
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !5265
    #dbg_declare(ptr %len.dbg.spill, !5253, !DIExpression(), !5266)
  %0 = icmp eq i32 %len, 1, !dbg !5267
  br i1 %0, label %bb2, label %bb3, !dbg !5267

bb2:                                              ; preds = %start
  %1 = trunc i32 %code to i8, !dbg !5268
  store i8 %1, ptr %dst, align 1, !dbg !5268
  br label %bb18, !dbg !5269

bb3:                                              ; preds = %start
  %_7 = lshr i32 %code, 0, !dbg !5271
  %_6 = and i32 %_7, 63, !dbg !5272
  %_5 = trunc i32 %_6 to i8, !dbg !5272
  %last1 = or i8 %_5, -128, !dbg !5272
  store i8 %last1, ptr %last1.dbg.spill, align 1, !dbg !5272
    #dbg_declare(ptr %last1.dbg.spill, !5255, !DIExpression(), !5273)
  %_13 = lshr i32 %code, 6, !dbg !5274
  %_12 = and i32 %_13, 63, !dbg !5275
  %_11 = trunc i32 %_12 to i8, !dbg !5275
  %last2 = or i8 %_11, -128, !dbg !5275
  store i8 %last2, ptr %last2.dbg.spill, align 1, !dbg !5275
    #dbg_declare(ptr %last2.dbg.spill, !5257, !DIExpression(), !5276)
  %_19 = lshr i32 %code, 12, !dbg !5277
  %_18 = and i32 %_19, 63, !dbg !5278
  %_17 = trunc i32 %_18 to i8, !dbg !5278
  %last3 = or i8 %_17, -128, !dbg !5278
  store i8 %last3, ptr %last3.dbg.spill, align 1, !dbg !5278
    #dbg_declare(ptr %last3.dbg.spill, !5259, !DIExpression(), !5279)
  %_25 = lshr i32 %code, 18, !dbg !5280
  %_24 = and i32 %_25, 63, !dbg !5281
  %_23 = trunc i32 %_24 to i8, !dbg !5281
  %last4 = or i8 %_23, -16, !dbg !5281
  store i8 %last4, ptr %last4.dbg.spill, align 1, !dbg !5281
    #dbg_declare(ptr %last4.dbg.spill, !5261, !DIExpression(), !5282)
  %2 = icmp eq i32 %len, 2, !dbg !5283
  br i1 %2, label %bb8, label %bb10, !dbg !5283

bb18:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit18", %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit30", %bb2
  ret void, !dbg !5284

bb8:                                              ; preds = %bb3
  %3 = or i8 %last2, -64, !dbg !5285
  store i8 %3, ptr %dst, align 1, !dbg !5285
  store ptr %dst, ptr %self.dbg.spill.i26, align 4
    #dbg_declare(ptr %self.dbg.spill.i26, !1808, !DIExpression(), !5286)
  store i32 1, ptr %count.dbg.spill.i25, align 4
    #dbg_declare(ptr %count.dbg.spill.i25, !1816, !DIExpression(), !5288)
; call core::ub_checks::check_language_ub
  %_3.i27 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !5289
  br i1 %_3.i27, label %bb2.i29, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit30", !dbg !5289

bb2.i29:                                          ; preds = %bb8
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %dst, i32 1, i32 1, ptr align 4 @alloc_459fdfec0fda0f1274d075bba2f2aeb4) #17, !dbg !5290
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit30", !dbg !5290

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit30": ; preds = %bb8, %bb2.i29
  %_0.i28 = getelementptr inbounds nuw i8, ptr %dst, i32 1, !dbg !5291
  store i8 %last1, ptr %_0.i28, align 1, !dbg !5292
  br label %bb18, !dbg !5293

bb10:                                             ; preds = %bb3
  %4 = icmp eq i32 %len, 3, !dbg !5295
  br i1 %4, label %bb11, label %bb12, !dbg !5295

bb11:                                             ; preds = %bb10
  %5 = or i8 %last3, -32, !dbg !5296
  store i8 %5, ptr %dst, align 1, !dbg !5296
  store ptr %dst, ptr %self.dbg.spill.i20, align 4
    #dbg_declare(ptr %self.dbg.spill.i20, !1808, !DIExpression(), !5297)
  store i32 1, ptr %count.dbg.spill.i19, align 4
    #dbg_declare(ptr %count.dbg.spill.i19, !1816, !DIExpression(), !5299)
; call core::ub_checks::check_language_ub
  %_3.i21 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !5300
  br i1 %_3.i21, label %bb2.i23, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit24", !dbg !5300

bb2.i23:                                          ; preds = %bb11
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %dst, i32 1, i32 1, ptr align 4 @alloc_4061f960675410a87b3264c715c9c2fe) #17, !dbg !5301
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit24", !dbg !5301

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit24": ; preds = %bb11, %bb2.i23
  %_0.i22 = getelementptr inbounds nuw i8, ptr %dst, i32 1, !dbg !5302
  store i8 %last2, ptr %_0.i22, align 1, !dbg !5303
  store ptr %dst, ptr %self.dbg.spill.i14, align 4
    #dbg_declare(ptr %self.dbg.spill.i14, !1808, !DIExpression(), !5304)
  store i32 2, ptr %count.dbg.spill.i13, align 4
    #dbg_declare(ptr %count.dbg.spill.i13, !1816, !DIExpression(), !5306)
; call core::ub_checks::check_language_ub
  %_3.i15 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !5307
  br i1 %_3.i15, label %bb2.i17, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit18", !dbg !5307

bb2.i17:                                          ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit24"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %dst, i32 2, i32 1, ptr align 4 @alloc_b74b59d83e83dbd98e30d4f14ff3afee) #17, !dbg !5308
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit18", !dbg !5308

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit18": ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit24", %bb2.i17
  %_0.i16 = getelementptr inbounds nuw i8, ptr %dst, i32 2, !dbg !5309
  store i8 %last1, ptr %_0.i16, align 1, !dbg !5310
  br label %bb18, !dbg !5293

bb12:                                             ; preds = %bb10
  store i8 %last4, ptr %dst, align 1, !dbg !5311
  store ptr %dst, ptr %self.dbg.spill.i8, align 4
    #dbg_declare(ptr %self.dbg.spill.i8, !1808, !DIExpression(), !5312)
  store i32 1, ptr %count.dbg.spill.i7, align 4
    #dbg_declare(ptr %count.dbg.spill.i7, !1816, !DIExpression(), !5314)
; call core::ub_checks::check_language_ub
  %_3.i9 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !5315
  br i1 %_3.i9, label %bb2.i11, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit12", !dbg !5315

bb2.i11:                                          ; preds = %bb12
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %dst, i32 1, i32 1, ptr align 4 @alloc_14c21c405a4a19bce7c56d4822ea1d1c) #17, !dbg !5316
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit12", !dbg !5316

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit12": ; preds = %bb12, %bb2.i11
  %_0.i10 = getelementptr inbounds nuw i8, ptr %dst, i32 1, !dbg !5317
  store i8 %last3, ptr %_0.i10, align 1, !dbg !5318
  store ptr %dst, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !1808, !DIExpression(), !5319)
  store i32 2, ptr %count.dbg.spill.i1, align 4
    #dbg_declare(ptr %count.dbg.spill.i1, !1816, !DIExpression(), !5321)
; call core::ub_checks::check_language_ub
  %_3.i3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !5322
  br i1 %_3.i3, label %bb2.i5, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit6", !dbg !5322

bb2.i5:                                           ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit12"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %dst, i32 2, i32 1, ptr align 4 @alloc_5c062dc56f3b8808e40e41b53dd7d023) #17, !dbg !5323
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit6", !dbg !5323

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit6": ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit12", %bb2.i5
  %_0.i4 = getelementptr inbounds nuw i8, ptr %dst, i32 2, !dbg !5324
  store i8 %last2, ptr %_0.i4, align 1, !dbg !5325
  store ptr %dst, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1808, !DIExpression(), !5326)
  store i32 3, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1816, !DIExpression(), !5328)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !5329
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !5329

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit6"
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %dst, i32 3, i32 1, ptr align 4 @alloc_acad745997fce1d6a376b7fe430f74c8) #17, !dbg !5330
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !5330

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit6", %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %dst, i32 3, !dbg !5331
  store i8 %last1, ptr %_0.i, align 1, !dbg !5332
  br label %bb18, !dbg !5284
}

; core::char::methods::len_utf8
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char7methods8len_utf817h526e1e68148fccd7E(i32 %code) unnamed_addr #2 !dbg !5333 {
start:
  %code.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %code, ptr %code.dbg.spill, align 4
    #dbg_declare(ptr %code.dbg.spill, !5337, !DIExpression(), !5338)
  %_2 = icmp ult i32 %code, 128, !dbg !5339
  br i1 %_2, label %bb6, label %bb1, !dbg !5339

bb1:                                              ; preds = %start
  %_3 = icmp ult i32 %code, 2048, !dbg !5340
  br i1 %_3, label %bb5, label %bb2, !dbg !5340

bb6:                                              ; preds = %start
  store i32 1, ptr %_0, align 4, !dbg !5341
  br label %bb7, !dbg !5341

bb2:                                              ; preds = %bb1
  %_4 = icmp ult i32 %code, 65536, !dbg !5342
  br i1 %_4, label %bb4, label %bb3, !dbg !5342

bb5:                                              ; preds = %bb1
  store i32 2, ptr %_0, align 4, !dbg !5343
  br label %bb7, !dbg !5343

bb3:                                              ; preds = %bb2
  store i32 4, ptr %_0, align 4, !dbg !5344
  br label %bb7, !dbg !5344

bb4:                                              ; preds = %bb2
  store i32 3, ptr %_0, align 4, !dbg !5345
  br label %bb7, !dbg !5345

bb7:                                              ; preds = %bb6, %bb5, %bb4, %bb3
  %0 = load i32, ptr %_0, align 4, !dbg !5346
  ret i32 %0, !dbg !5346
}

; core::hint::assert_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %cond, ptr align 4 %0) unnamed_addr #2 !dbg !5347 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %cond.dbg.spill = alloca [1 x i8], align 1
  %_5 = alloca [8 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  %1 = zext i1 %cond to i8
  store i8 %1, ptr %cond.dbg.spill, align 1
    #dbg_declare(ptr %cond.dbg.spill, !5353, !DIExpression(), !5356)
  store ptr @alloc_64e308ef4babfeb8b6220184de794a17, ptr %msg.dbg.spill, align 4, !dbg !5357
  %2 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !5357
  store i32 221, ptr %2, align 4, !dbg !5357
    #dbg_declare(ptr %msg.dbg.spill, !5354, !DIExpression(), !5357)
  br i1 %cond, label %bb3, label %bb1, !dbg !5358

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_5, i32 0, !dbg !5361
  store ptr @alloc_64e308ef4babfeb8b6220184de794a17, ptr %3, align 4, !dbg !5361
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !5361
  store i32 221, ptr %4, align 4, !dbg !5361
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 %_5) #17, !dbg !5362
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_3, i1 zeroext false, ptr align 4 %0) #18, !dbg !5363
  unreachable, !dbg !5363

bb3:                                              ; preds = %start
  ret void, !dbg !5364
}

; core::iter::traits::exact_size::ExactSizeIterator::len
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hf72db64fc94ef7e9E(ptr align 4 %self) unnamed_addr #2 !dbg !5365 {
start:
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right_val.dbg.spill = alloca [4 x i8], align 4
  %left_val.dbg.spill = alloca [4 x i8], align 4
  %lower.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_13 = alloca [24 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  %upper = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5372, !DIExpression(), !5383)
    #dbg_declare(ptr %upper, !5375, !DIExpression(), !5384)
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hcbf8eb201d7f87d2E"(ptr sret([12 x i8]) align 4 %_3, ptr align 4 %self) #17, !dbg !5385
  %lower = load i32, ptr %_3, align 4, !dbg !5386
  store i32 %lower, ptr %lower.dbg.spill, align 4, !dbg !5386
    #dbg_declare(ptr %lower.dbg.spill, !5373, !DIExpression(), !5387)
  %0 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !5388
  %1 = load i32, ptr %0, align 4, !dbg !5388
  %2 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5388
  %3 = load i32, ptr %2, align 4, !dbg !5388
  store i32 %1, ptr %upper, align 4, !dbg !5388
  %4 = getelementptr inbounds i8, ptr %upper, i32 4, !dbg !5388
  store i32 %3, ptr %4, align 4, !dbg !5388
  %5 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !5389
  store i32 %lower, ptr %5, align 4, !dbg !5389
  store i32 1, ptr %_7, align 4, !dbg !5389
  store ptr %upper, ptr %left_val.dbg.spill, align 4, !dbg !5390
    #dbg_declare(ptr %left_val.dbg.spill, !5376, !DIExpression(), !5392)
  store ptr %_7, ptr %right_val.dbg.spill, align 4, !dbg !5393
    #dbg_declare(ptr %right_val.dbg.spill, !5378, !DIExpression(), !5394)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_10 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h03d764e556e41ebcE"(ptr align 4 %upper, ptr align 4 %_7) #17, !dbg !5395
  br i1 %_10, label %bb3, label %bb4, !dbg !5395

bb4:                                              ; preds = %start
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !5396
    #dbg_declare(ptr %kind.dbg.spill, !5379, !DIExpression(), !5397)
  store ptr null, ptr %_13, align 4, !dbg !5398
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h2ffd30dd3e2c377bE(i8 0, ptr align 4 %upper, ptr align 4 %_7, ptr align 4 %_13, ptr align 4 @alloc_3d72edc095f0ef3737d1ff771ca62df8) #18, !dbg !5399
  unreachable, !dbg !5399

bb3:                                              ; preds = %start
  ret i32 %lower, !dbg !5400
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17h07ea06c9ea1f0e72E(ptr align 4 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #2 !dbg !5401 {
start:
  %predicate.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5409, !DIExpression(), !5414)
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i32 4
  store ptr %predicate.1, ptr %0, align 4
    #dbg_declare(ptr %predicate.dbg.spill, !5410, !DIExpression(), !5415)
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind::check
  %1 = call { ptr, ptr } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17h16a279aec322990dE(ptr align 1 %predicate.0, ptr align 1 %predicate.1) #17, !dbg !5416
  %_4.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5416
  %_4.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5416
; call core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
  %_3 = call i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17hb23917e3efb0dc81E(ptr align 4 %self, ptr align 1 %_4.0, ptr align 1 %_4.1) #17, !dbg !5417
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %_0 = call i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h3786488487c19b0cE"(i32 %_3) #17, !dbg !5418
  ret i32 %_0, !dbg !5419
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17h16a279aec322990dE(ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #2 !dbg !5420 {
start:
  %predicate.dbg.spill = alloca [8 x i8], align 4
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i32 4
  store ptr %predicate.1, ptr %0, align 4
    #dbg_declare(ptr %predicate.dbg.spill, !5429, !DIExpression(), !5432)
  %1 = insertvalue { ptr, ptr } poison, ptr %predicate.0, 0, !dbg !5433
  %2 = insertvalue { ptr, ptr } %1, ptr %predicate.1, 1, !dbg !5433
  ret { ptr, ptr } %2, !dbg !5433
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h6f52b05c9f4e5dc7E"(ptr align 4 %_1, i32 %0) unnamed_addr #2 !dbg !5434 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %x = alloca [4 x i8], align 4
  store i32 %0, ptr %x, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !5440, !DIExpression(DW_OP_deref), !5442)
    #dbg_declare(ptr %_2.dbg.spill, !5441, !DIExpression(), !5443)
    #dbg_declare(ptr %x, !5439, !DIExpression(), !5444)
  store i8 0, ptr %_9, align 1, !dbg !5445
  store i8 1, ptr %_9, align 1, !dbg !5445
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
  %_4 = call zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h38748408e8ecae87E"(ptr align 4 %_1, ptr align 4 %x) #17, !dbg !5445
  br i1 %_4, label %bb2, label %bb3, !dbg !5445

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !5446
  br label %bb4, !dbg !5447

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !5448
  %_8 = load i32, ptr %x, align 4, !dbg !5448
  store i32 %_8, ptr %_0, align 4, !dbg !5449
  br label %bb4, !dbg !5447

bb4:                                              ; preds = %bb2, %bb3
  %1 = load i8, ptr %_9, align 1, !dbg !5450
  %2 = trunc nuw i8 %1 to i1, !dbg !5450
  br i1 %2, label %bb6, label %bb5, !dbg !5450

bb5:                                              ; preds = %bb6, %bb4
  %3 = load i32, ptr %_0, align 4, !dbg !5451
  ret i32 %3, !dbg !5451

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !5450
}

; core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17hb23917e3efb0dc81E(ptr align 4 %self, ptr align 1 %0, ptr align 1 %1) unnamed_addr #2 !dbg !5452 {
start:
  %residual.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [4 x i8], align 4
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %f = alloca [8 x i8], align 4
  store ptr %0, ptr %f, align 4
  %2 = getelementptr inbounds i8, ptr %f, i32 4
  store ptr %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5456, !DIExpression(), !5470)
    #dbg_declare(ptr %init.dbg.spill, !5457, !DIExpression(), !5471)
    #dbg_declare(ptr %f, !5458, !DIExpression(), !5472)
    #dbg_declare(ptr %accum.dbg.spill, !5459, !DIExpression(), !5473)
    #dbg_declare(ptr %val.dbg.spill, !5465, !DIExpression(), !5474)
  br label %bb1, !dbg !5475

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %3 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8a4af8a65e0bc216E"(ptr align 4 %self) #17, !dbg !5476
  store i32 %3, ptr %_5, align 4, !dbg !5476
  %4 = load i32, ptr %_5, align 4, !dbg !5477
  %5 = icmp eq i32 %4, 1114112, !dbg !5477
  %_6 = select i1 %5, i32 0, i32 1, !dbg !5477
  %6 = trunc nuw i32 %_6 to i1, !dbg !5478
  br i1 %6, label %bb3, label %bb10, !dbg !5478

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !5479
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !5479
    #dbg_declare(ptr %x.dbg.spill, !5461, !DIExpression(), !5479)
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
  %_9 = call i32 @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h6f52b05c9f4e5dc7E"(ptr align 4 %f, i32 %x) #17, !dbg !5480
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %7 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12ce1bf600ceac79E"(i32 %_9) #17, !dbg !5480
  store i32 %7, ptr %_8, align 4, !dbg !5480
  %8 = load i32, ptr %_8, align 4, !dbg !5480
  %9 = icmp eq i32 %8, 1114112, !dbg !5480
  %_13 = select i1 %9, i32 0, i32 1, !dbg !5480
  %10 = trunc nuw i32 %_13 to i1, !dbg !5480
  br i1 %10, label %bb8, label %bb7, !dbg !5480

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %11 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1a7b489c338cc154E"() #17, !dbg !5481
  store i32 %11, ptr %_0, align 4, !dbg !5481
  br label %bb12, !dbg !5482

bb8:                                              ; preds = %bb3
  %residual = load i32, ptr %_8, align 4, !dbg !5483
  store i32 %residual, ptr %residual.dbg.spill, align 4, !dbg !5483
    #dbg_declare(ptr %residual.dbg.spill, !5463, !DIExpression(), !5484)
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %12 = call i32 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h1c1608b22587779cE"(i32 %residual) #17, !dbg !5485
  store i32 %12, ptr %_0, align 4, !dbg !5485
  br label %bb12, !dbg !5482

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !5475

bb12:                                             ; preds = %bb10, %bb8
  %13 = load i32, ptr %_0, align 4, !dbg !5486
  ret i32 %13, !dbg !5486

bb6:                                              ; No predecessors!
  unreachable, !dbg !5480
}

; core::iter::traits::iterator::Iterator::skip_while
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator10skip_while17h11ee7767fd6e264bE(ptr sret([12 x i8]) align 4 %_0, ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !5487 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5492, !DIExpression(), !5495)
    #dbg_declare(ptr %predicate.dbg.spill, !5493, !DIExpression(), !5496)
; call core::iter::adapters::skip_while::SkipWhile<I,P>::new
  call void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3c20aa351d303f35E"(ptr sret([12 x i8]) align 4 %_0, ptr %self.0, ptr %self.1) #17, !dbg !5497
  ret void, !dbg !5498
}

; core::iter::traits::iterator::Iterator::skip_while
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator10skip_while17h8364ad83c5b1951fE(ptr sret([12 x i8]) align 4 %_0, ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !5499 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5503, !DIExpression(), !5507)
    #dbg_declare(ptr %predicate.dbg.spill, !5504, !DIExpression(), !5508)
; call core::iter::adapters::skip_while::SkipWhile<I,P>::new
  call void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h92aabd5b4bfbdcbdE"(ptr sret([12 x i8]) align 4 %_0, ptr %self.0, ptr %self.1) #17, !dbg !5509
  ret void, !dbg !5510
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h14e1dfbe78c75388E(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !5511 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5515, !DIExpression(), !5519)
    #dbg_declare(ptr %f.dbg.spill, !5516, !DIExpression(), !5520)
; call core::iter::adapters::map::Map<I,F>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3b992ba92e06b38fE"(ptr %self.0, ptr %self.1) #17, !dbg !5521
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5521
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5521
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5522
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5522
  ret { ptr, ptr } %3, !dbg !5522
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h1a3302aedb79ddd0E(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !5523 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5527, !DIExpression(), !5529)
    #dbg_declare(ptr %f.dbg.spill, !5528, !DIExpression(), !5530)
; call core::iter::adapters::map::Map<I,F>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h53db666e82883828E"(ptr %self.0, ptr %self.1) #17, !dbg !5531
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5531
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5531
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5532
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5532
  ret { ptr, ptr } %3, !dbg !5532
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h3ee1244166e89cfcE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5533 {
start:
    #dbg_declare(ptr %self, !5537, !DIExpression(), !5541)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5538, !DIExpression(), !5542)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hdfcc33e85e2bb21eE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !5543
  ret void, !dbg !5544
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h415efc52b5b920f3E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5545 {
start:
    #dbg_declare(ptr %self, !5549, !DIExpression(), !5553)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5550, !DIExpression(), !5554)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf2159c97354589f0E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !5555
  ret void, !dbg !5556
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h41ebf98691fa9ee0E(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !5557 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5561, !DIExpression(), !5565)
    #dbg_declare(ptr %f.dbg.spill, !5562, !DIExpression(), !5566)
; call core::iter::adapters::map::Map<I,F>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hc525012c93a213ddE"(ptr %self.0, ptr %self.1) #17, !dbg !5567
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5567
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5567
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5568
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5568
  ret { ptr, ptr } %3, !dbg !5568
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator3map17h9527faa05991fa5aE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5569 {
start:
    #dbg_declare(ptr %self, !5573, !DIExpression(), !5577)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !5574, !DIExpression(), !5578)
; call core::iter::adapters::map::Map<I,F>::new
  call void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1226c194d618a651E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !5579
  ret void, !dbg !5580
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h9763f4e8d9728936E(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !5581 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5585, !DIExpression(), !5589)
    #dbg_declare(ptr %f.dbg.spill, !5586, !DIExpression(), !5590)
; call core::iter::adapters::map::Map<I,F>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb1b0225a12e6e567E"(ptr %self.0, ptr %self.1) #17, !dbg !5591
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5591
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5591
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5592
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5592
  ret { ptr, ptr } %3, !dbg !5592
}

; core::iter::traits::iterator::Iterator::rev
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3rev17hd0b95926e983aec0E(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !5593 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5597, !DIExpression(), !5599)
; call core::iter::adapters::rev::Rev<T>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he3e613b33ad0cb26E"(ptr %self.0, ptr %self.1) #17, !dbg !5600
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5600
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5600
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5601
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5601
  ret { ptr, ptr } %3, !dbg !5601
}

; core::iter::traits::iterator::Iterator::sum
; Function Attrs: nounwind
define dso_local i32 @_ZN4core4iter6traits8iterator8Iterator3sum17h06caeb082aa12247E(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !5602 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5606, !DIExpression(), !5610)
; call <usize as core::iter::traits::accum::Sum>::sum
  %_0 = call i32 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h00e688882549e0c6E"(ptr %self.0, ptr %self.1) #17, !dbg !5611
  ret i32 %_0, !dbg !5612
}

; core::iter::traits::iterator::Iterator::sum
; Function Attrs: nounwind
define dso_local i8 @_ZN4core4iter6traits8iterator8Iterator3sum17hef28a6c18ae3e6b0E(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !5613 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5617, !DIExpression(), !5621)
; call <u8 as core::iter::traits::accum::Sum>::sum
  %_0 = call i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h633143ec2d3d47baE"(ptr %self.0, ptr %self.1) #17, !dbg !5622
  ret i8 %_0, !dbg !5623
}

; core::iter::traits::iterator::Iterator::find
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core4iter6traits8iterator8Iterator4find17h5d6385388677c2c4E(ptr align 4 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #2 !dbg !5624 {
start:
  %predicate.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !5628, !DIExpression(), !5632)
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i32 4
  store ptr %predicate.1, ptr %0, align 4
    #dbg_declare(ptr %predicate.dbg.spill, !5629, !DIExpression(), !5633)
; call core::iter::traits::iterator::Iterator::find::check
  %1 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator4find5check17ha0e0e1bf72428063E(ptr align 1 %predicate.0, ptr align 1 %predicate.1) #17, !dbg !5634
  %_4.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5634
  %_4.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5634
; call core::iter::traits::iterator::Iterator::try_fold
  %_3 = call i32 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hd1ec53e5f2701640E(ptr align 4 %self, ptr align 1 %_4.0, ptr align 1 %_4.1) #17, !dbg !5635
; call core::ops::control_flow::ControlFlow<B,C>::break_value
  %_0 = call i32 @"_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h3786488487c19b0cE"(i32 %_3) #17, !dbg !5636
  ret i32 %_0, !dbg !5637
}

; core::iter::traits::iterator::Iterator::find::check
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator4find5check17ha0e0e1bf72428063E(ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #2 !dbg !5638 {
start:
  %predicate.dbg.spill = alloca [8 x i8], align 4
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i32 4
  store ptr %predicate.1, ptr %0, align 4
    #dbg_declare(ptr %predicate.dbg.spill, !5647, !DIExpression(), !5650)
  %1 = insertvalue { ptr, ptr } poison, ptr %predicate.0, 0, !dbg !5651
  %2 = insertvalue { ptr, ptr } %1, ptr %predicate.1, 1, !dbg !5651
  ret { ptr, ptr } %2, !dbg !5651
}

; core::iter::traits::iterator::Iterator::find::check::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h7288b3ffa0d94002E"(ptr align 4 %_1, i32 %0) unnamed_addr #2 !dbg !5652 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %x = alloca [4 x i8], align 4
  store i32 %0, ptr %x, align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !5658, !DIExpression(DW_OP_deref), !5660)
    #dbg_declare(ptr %_2.dbg.spill, !5659, !DIExpression(), !5661)
    #dbg_declare(ptr %x, !5657, !DIExpression(), !5662)
  store i8 0, ptr %_9, align 1, !dbg !5663
  store i8 1, ptr %_9, align 1, !dbg !5663
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next::check::{{closure}}
  %_4 = call zeroext i1 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17hea1036ca996dd1cbE"(ptr align 4 %_1, ptr align 4 %x) #17, !dbg !5663
  br i1 %_4, label %bb2, label %bb3, !dbg !5663

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !5664
  br label %bb4, !dbg !5665

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !5666
  %_8 = load i32, ptr %x, align 4, !dbg !5666
  store i32 %_8, ptr %_0, align 4, !dbg !5667
  br label %bb4, !dbg !5665

bb4:                                              ; preds = %bb2, %bb3
  %1 = load i8, ptr %_9, align 1, !dbg !5668
  %2 = trunc nuw i8 %1 to i1, !dbg !5668
  br i1 %2, label %bb6, label %bb5, !dbg !5668

bb5:                                              ; preds = %bb6, %bb4
  %3 = load i32, ptr %_0, align 4, !dbg !5669
  ret i32 %3, !dbg !5669

bb6:                                              ; preds = %bb4
  br label %bb5, !dbg !5668
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator4fold17h11413b9cfc449ae0E(ptr align 4 %self, ptr align 4 %0) unnamed_addr #2 !dbg !5670 {
start:
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %_11 = alloca [8 x i8], align 4
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %f = alloca [4 x i8], align 4
  store ptr %0, ptr %f, align 4
    #dbg_declare(ptr %self, !5679, !DIExpression(), !5688)
    #dbg_declare(ptr %init.dbg.spill, !5680, !DIExpression(), !5689)
    #dbg_declare(ptr %f, !5681, !DIExpression(), !5690)
    #dbg_declare(ptr %accum.dbg.spill, !5682, !DIExpression(), !5691)
    #dbg_declare(ptr %x, !5684, !DIExpression(), !5692)
  br label %bb1, !dbg !5693

bb1:                                              ; preds = %bb3, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc74a8ff9f3d47627E"(ptr sret([8 x i8]) align 4 %_5, ptr align 4 %self) #17, !dbg !5694
  %1 = load i16, ptr %_5, align 4, !dbg !5695
  %2 = icmp eq i16 %1, 2, !dbg !5695
  %_7 = select i1 %2, i32 0, i32 1, !dbg !5695
  %3 = trunc nuw i32 %_7 to i1, !dbg !5696
  br i1 %3, label %bb3, label %bb5, !dbg !5696

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %x, ptr align 4 %_5, i32 8, i1 false), !dbg !5692
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %x, i32 8, i1 false), !dbg !5697
; call core::iter::adapters::map::map_fold::{{closure}}
  call void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h7678013cee6030e9E"(ptr align 4 %f, ptr align 4 %_11) #17, !dbg !5697
  br label %bb1, !dbg !5693

bb5:                                              ; preds = %bb1
  ret void, !dbg !5698

bb8:                                              ; No predecessors!
  unreachable, !dbg !5699
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator4fold17h34daa7dcf129f3aeE(ptr align 4 %self, ptr align 4 %0) unnamed_addr #2 !dbg !5700 {
start:
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %_11 = alloca [8 x i8], align 4
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %f = alloca [4 x i8], align 4
  store ptr %0, ptr %f, align 4
    #dbg_declare(ptr %self, !5708, !DIExpression(), !5717)
    #dbg_declare(ptr %init.dbg.spill, !5709, !DIExpression(), !5718)
    #dbg_declare(ptr %f, !5710, !DIExpression(), !5719)
    #dbg_declare(ptr %accum.dbg.spill, !5711, !DIExpression(), !5720)
    #dbg_declare(ptr %x, !5713, !DIExpression(), !5721)
  br label %bb1, !dbg !5722

bb1:                                              ; preds = %bb3, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a098f8c0f59bfb3E"(ptr sret([8 x i8]) align 4 %_5, ptr align 4 %self) #17, !dbg !5723
  %1 = load i16, ptr %_5, align 4, !dbg !5724
  %2 = icmp eq i16 %1, 2, !dbg !5724
  %_7 = select i1 %2, i32 0, i32 1, !dbg !5724
  %3 = trunc nuw i32 %_7 to i1, !dbg !5725
  br i1 %3, label %bb3, label %bb5, !dbg !5725

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %x, ptr align 4 %_5, i32 8, i1 false), !dbg !5721
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %x, i32 8, i1 false), !dbg !5726
; call core::iter::adapters::map::map_fold::{{closure}}
  call void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h8959f768052622a8E"(ptr align 4 %f, ptr align 4 %_11) #17, !dbg !5726
  br label %bb1, !dbg !5722

bb5:                                              ; preds = %bb1
  ret void, !dbg !5727

bb8:                                              ; No predecessors!
  unreachable, !dbg !5728
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator4fold17hecebd7358d334c47E(ptr align 4 %self, ptr align 4 %0) unnamed_addr #2 !dbg !5729 {
start:
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %_11 = alloca [8 x i8], align 4
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %f = alloca [4 x i8], align 4
  store ptr %0, ptr %f, align 4
    #dbg_declare(ptr %self, !5737, !DIExpression(), !5746)
    #dbg_declare(ptr %init.dbg.spill, !5738, !DIExpression(), !5747)
    #dbg_declare(ptr %f, !5739, !DIExpression(), !5748)
    #dbg_declare(ptr %accum.dbg.spill, !5740, !DIExpression(), !5749)
    #dbg_declare(ptr %x, !5742, !DIExpression(), !5750)
  br label %bb1, !dbg !5751

bb1:                                              ; preds = %bb3, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee4e173d22a50904E"(ptr sret([8 x i8]) align 4 %_5, ptr align 4 %self) #17, !dbg !5752
  %1 = load i16, ptr %_5, align 4, !dbg !5753
  %2 = icmp eq i16 %1, 2, !dbg !5753
  %_7 = select i1 %2, i32 0, i32 1, !dbg !5753
  %3 = trunc nuw i32 %_7 to i1, !dbg !5754
  br i1 %3, label %bb3, label %bb5, !dbg !5754

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %x, ptr align 4 %_5, i32 8, i1 false), !dbg !5750
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %x, i32 8, i1 false), !dbg !5755
; call core::iter::adapters::map::map_fold::{{closure}}
  call void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hec3619a9d4d00ba4E"(ptr align 4 %f, ptr align 4 %_11) #17, !dbg !5755
  br label %bb1, !dbg !5751

bb5:                                              ; preds = %bb1
  ret void, !dbg !5756

bb8:                                              ; No predecessors!
  unreachable, !dbg !5757
}

; core::iter::traits::iterator::Iterator::cloned
; Function Attrs: nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17hafc97ffc625f8677E(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !5758 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5762, !DIExpression(), !5765)
; call core::iter::adapters::cloned::Cloned<I>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17h0a074f97ffafc930E"(ptr %self.0, ptr %self.1) #17, !dbg !5766
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5766
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5766
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5767
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5767
  ret { ptr, ptr } %3, !dbg !5767
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: nounwind
define dso_local { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6copied17h4c1953df581c139cE(ptr %self.0, ptr %self.1) unnamed_addr #1 !dbg !5768 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !5772, !DIExpression(), !5775)
; call core::iter::adapters::copied::Copied<I>::new
  %1 = call { ptr, ptr } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h02e3115f4c605eabE"(ptr %self.0, ptr %self.1) #17, !dbg !5776
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !5776
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !5776
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !5777
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !5777
  ret { ptr, ptr } %3, !dbg !5777
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h00b6c60aaf12ce63E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5778 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [12 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  %hint = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !5782, !DIExpression(), !5797)
    #dbg_declare(ptr %hint, !5783, !DIExpression(), !5798)
    #dbg_declare(ptr %args, !5791, !DIExpression(), !5799)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53a6dc5bd5e417f1E"(ptr sret([12 x i8]) align 4 %hint, ptr align 4 %self) #17, !dbg !5800
  %0 = getelementptr inbounds i8, ptr %hint, i32 4, !dbg !5801
  %_5.0 = load i32, ptr %0, align 4, !dbg !5801
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5801
  %_5.1 = load i32, ptr %1, align 4, !dbg !5801
; call core::option::Option<T>::is_none_or
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17hba06054a761fef88E"(i32 %_5.0, i32 %_5.1, ptr align 4 %hint) #17, !dbg !5802
  br i1 %_4, label %bb6, label %bb3, !dbg !5801

bb3:                                              ; preds = %start
  store ptr %hint, ptr %args.dbg.spill, align 4, !dbg !5803
    #dbg_declare(ptr %args.dbg.spill, !5785, !DIExpression(), !5804)
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %hint) #17, !dbg !5804
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !5804
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_13, i32 8, i1 false), !dbg !5804
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 @alloc_5839d769bb970d3f495194472e3ff692, ptr align 4 %args) #17, !dbg !5799
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_9, ptr align 4 @alloc_0dae9d559c153875d99f7186626f1805) #18, !dbg !5803
  unreachable, !dbg !5803

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_16, ptr align 4 %self, i32 12, i1 false), !dbg !5805
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h2e98aaf956810971E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_16) #17, !dbg !5806
  ret void, !dbg !5807
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h0534f5381279e41fE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5808 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [16 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  %hint = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !5812, !DIExpression(), !5823)
    #dbg_declare(ptr %hint, !5813, !DIExpression(), !5824)
    #dbg_declare(ptr %args, !5818, !DIExpression(), !5825)
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbdc558b76c528839E"(ptr sret([12 x i8]) align 4 %hint, ptr align 4 %self) #17, !dbg !5826
  %0 = getelementptr inbounds i8, ptr %hint, i32 4, !dbg !5827
  %_5.0 = load i32, ptr %0, align 4, !dbg !5827
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5827
  %_5.1 = load i32, ptr %1, align 4, !dbg !5827
; call core::option::Option<T>::is_none_or
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17h4ae3165fe5c581bbE"(i32 %_5.0, i32 %_5.1, ptr align 4 %hint) #17, !dbg !5828
  br i1 %_4, label %bb6, label %bb3, !dbg !5827

bb3:                                              ; preds = %start
  store ptr %hint, ptr %args.dbg.spill, align 4, !dbg !5829
    #dbg_declare(ptr %args.dbg.spill, !5815, !DIExpression(), !5830)
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %hint) #17, !dbg !5830
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !5830
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_13, i32 8, i1 false), !dbg !5830
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 @alloc_5839d769bb970d3f495194472e3ff692, ptr align 4 %args) #17, !dbg !5825
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_9, ptr align 4 @alloc_0dae9d559c153875d99f7186626f1805) #18, !dbg !5829
  unreachable, !dbg !5829

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_16, ptr align 4 %self, i32 16, i1 false), !dbg !5831
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hfdeb9e7846f4cf91E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_16) #17, !dbg !5832
  ret void, !dbg !5833
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h4baab2942ae0c3e1E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5834 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [12 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  %hint = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !5838, !DIExpression(), !5849)
    #dbg_declare(ptr %hint, !5839, !DIExpression(), !5850)
    #dbg_declare(ptr %args, !5844, !DIExpression(), !5851)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h89b22289d0fc54dcE"(ptr sret([12 x i8]) align 4 %hint, ptr align 4 %self) #17, !dbg !5852
  %0 = getelementptr inbounds i8, ptr %hint, i32 4, !dbg !5853
  %_5.0 = load i32, ptr %0, align 4, !dbg !5853
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5853
  %_5.1 = load i32, ptr %1, align 4, !dbg !5853
; call core::option::Option<T>::is_none_or
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17h7509a03bf33938e1E"(i32 %_5.0, i32 %_5.1, ptr align 4 %hint) #17, !dbg !5854
  br i1 %_4, label %bb6, label %bb3, !dbg !5853

bb3:                                              ; preds = %start
  store ptr %hint, ptr %args.dbg.spill, align 4, !dbg !5855
    #dbg_declare(ptr %args.dbg.spill, !5841, !DIExpression(), !5856)
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %hint) #17, !dbg !5856
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !5856
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_13, i32 8, i1 false), !dbg !5856
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 @alloc_5839d769bb970d3f495194472e3ff692, ptr align 4 %args) #17, !dbg !5851
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_9, ptr align 4 @alloc_0dae9d559c153875d99f7186626f1805) #18, !dbg !5855
  unreachable, !dbg !5855

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_16, ptr align 4 %self, i32 12, i1 false), !dbg !5857
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hfc63545a9e21dd59E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_16) #17, !dbg !5858
  ret void, !dbg !5859
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h9155694014f277cfE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5860 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [12 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  %hint = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !5864, !DIExpression(), !5875)
    #dbg_declare(ptr %hint, !5865, !DIExpression(), !5876)
    #dbg_declare(ptr %args, !5870, !DIExpression(), !5877)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49cdf9f6e3eb2dc6E"(ptr sret([12 x i8]) align 4 %hint, ptr align 4 %self) #17, !dbg !5878
  %0 = getelementptr inbounds i8, ptr %hint, i32 4, !dbg !5879
  %_5.0 = load i32, ptr %0, align 4, !dbg !5879
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5879
  %_5.1 = load i32, ptr %1, align 4, !dbg !5879
; call core::option::Option<T>::is_none_or
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17he91b33f9d7ed4de7E"(i32 %_5.0, i32 %_5.1, ptr align 4 %hint) #17, !dbg !5880
  br i1 %_4, label %bb6, label %bb3, !dbg !5879

bb3:                                              ; preds = %start
  store ptr %hint, ptr %args.dbg.spill, align 4, !dbg !5881
    #dbg_declare(ptr %args.dbg.spill, !5867, !DIExpression(), !5882)
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %hint) #17, !dbg !5882
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !5882
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_13, i32 8, i1 false), !dbg !5882
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 @alloc_5839d769bb970d3f495194472e3ff692, ptr align 4 %args) #17, !dbg !5877
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_9, ptr align 4 @alloc_0dae9d559c153875d99f7186626f1805) #18, !dbg !5881
  unreachable, !dbg !5881

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_16, ptr align 4 %self, i32 12, i1 false), !dbg !5883
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h88e8826910049821E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_16) #17, !dbg !5884
  ret void, !dbg !5885
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17h95e39428dc266a7cE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5886 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [12 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  %hint = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !5888, !DIExpression(), !5899)
    #dbg_declare(ptr %hint, !5889, !DIExpression(), !5900)
    #dbg_declare(ptr %args, !5894, !DIExpression(), !5901)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha770b931b3c13a9dE"(ptr sret([12 x i8]) align 4 %hint, ptr align 4 %self) #17, !dbg !5902
  %0 = getelementptr inbounds i8, ptr %hint, i32 4, !dbg !5903
  %_5.0 = load i32, ptr %0, align 4, !dbg !5903
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5903
  %_5.1 = load i32, ptr %1, align 4, !dbg !5903
; call core::option::Option<T>::is_none_or
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17hf0ddf8587f423d4eE"(i32 %_5.0, i32 %_5.1, ptr align 4 %hint) #17, !dbg !5904
  br i1 %_4, label %bb6, label %bb3, !dbg !5903

bb3:                                              ; preds = %start
  store ptr %hint, ptr %args.dbg.spill, align 4, !dbg !5905
    #dbg_declare(ptr %args.dbg.spill, !5891, !DIExpression(), !5906)
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %hint) #17, !dbg !5906
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !5906
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_13, i32 8, i1 false), !dbg !5906
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 @alloc_5839d769bb970d3f495194472e3ff692, ptr align 4 %args) #17, !dbg !5901
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_9, ptr align 4 @alloc_0dae9d559c153875d99f7186626f1805) #18, !dbg !5905
  unreachable, !dbg !5905

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_16, ptr align 4 %self, i32 12, i1 false), !dbg !5907
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17hac685922e551d632E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_16) #17, !dbg !5908
  ret void, !dbg !5909
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17hab070e2b81ea11acE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5910 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [16 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  %hint = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !5914, !DIExpression(), !5925)
    #dbg_declare(ptr %hint, !5915, !DIExpression(), !5926)
    #dbg_declare(ptr %args, !5920, !DIExpression(), !5927)
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h0171ada23766b7f2E"(ptr sret([12 x i8]) align 4 %hint, ptr align 4 %self) #17, !dbg !5928
  %0 = getelementptr inbounds i8, ptr %hint, i32 4, !dbg !5929
  %_5.0 = load i32, ptr %0, align 4, !dbg !5929
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5929
  %_5.1 = load i32, ptr %1, align 4, !dbg !5929
; call core::option::Option<T>::is_none_or
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17h387e6b7e86edd8e5E"(i32 %_5.0, i32 %_5.1, ptr align 4 %hint) #17, !dbg !5930
  br i1 %_4, label %bb6, label %bb3, !dbg !5929

bb3:                                              ; preds = %start
  store ptr %hint, ptr %args.dbg.spill, align 4, !dbg !5931
    #dbg_declare(ptr %args.dbg.spill, !5917, !DIExpression(), !5932)
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %hint) #17, !dbg !5932
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !5932
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_13, i32 8, i1 false), !dbg !5932
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 @alloc_5839d769bb970d3f495194472e3ff692, ptr align 4 %args) #17, !dbg !5927
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_9, ptr align 4 @alloc_0dae9d559c153875d99f7186626f1805) #18, !dbg !5931
  unreachable, !dbg !5931

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_16, ptr align 4 %self, i32 16, i1 false), !dbg !5933
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h352c46a264a5aa0eE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_16) #17, !dbg !5934
  ret void, !dbg !5935
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator7collect17hf987cbf227505394E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !5936 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %_16 = alloca [12 x i8], align 4
  %_13 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  %hint = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !5938, !DIExpression(), !5948)
    #dbg_declare(ptr %hint, !5939, !DIExpression(), !5949)
    #dbg_declare(ptr %args, !5944, !DIExpression(), !5950)
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfc3844d32c81b82fE"(ptr sret([12 x i8]) align 4 %hint, ptr align 4 %self) #17, !dbg !5951
  %0 = getelementptr inbounds i8, ptr %hint, i32 4, !dbg !5952
  %_5.0 = load i32, ptr %0, align 4, !dbg !5952
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !5952
  %_5.1 = load i32, ptr %1, align 4, !dbg !5952
; call core::option::Option<T>::is_none_or
  %_4 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17he4fbacfc159a5c29E"(i32 %_5.0, i32 %_5.1, ptr align 4 %hint) #17, !dbg !5953
  br i1 %_4, label %bb6, label %bb3, !dbg !5952

bb3:                                              ; preds = %start
  store ptr %hint, ptr %args.dbg.spill, align 4, !dbg !5954
    #dbg_declare(ptr %args.dbg.spill, !5941, !DIExpression(), !5955)
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E(ptr sret([8 x i8]) align 4 %_13, ptr align 4 %hint) #17, !dbg !5955
  %2 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !5955
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_13, i32 8, i1 false), !dbg !5955
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 @alloc_5839d769bb970d3f495194472e3ff692, ptr align 4 %args) #17, !dbg !5950
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_9, ptr align 4 @alloc_0dae9d559c153875d99f7186626f1805) #18, !dbg !5954
  unreachable, !dbg !5954

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_16, ptr align 4 %self, i32 12, i1 false), !dbg !5956
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h343fe317fc38becfE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_16) #17, !dbg !5957
  ret void, !dbg !5958
}

; core::iter::traits::iterator::Iterator::collect::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h069203ada9279684E"(ptr align 4 %_1, i32 %high) unnamed_addr #2 !dbg !5959 {
start:
  %high.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !5968, !DIExpression(DW_OP_deref), !5969)
  store i32 %high, ptr %high.dbg.spill, align 4
    #dbg_declare(ptr %high.dbg.spill, !5967, !DIExpression(), !5970)
  %_3 = load i32, ptr %_1, align 4, !dbg !5971
  %_0 = icmp uge i32 %high, %_3, !dbg !5972
  ret i1 %_0, !dbg !5973
}

; core::iter::traits::iterator::Iterator::collect::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h93a90841749055ddE"(ptr align 4 %_1, i32 %high) unnamed_addr #2 !dbg !5974 {
start:
  %high.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !5982, !DIExpression(DW_OP_deref), !5983)
  store i32 %high, ptr %high.dbg.spill, align 4
    #dbg_declare(ptr %high.dbg.spill, !5981, !DIExpression(), !5984)
  %_3 = load i32, ptr %_1, align 4, !dbg !5985
  %_0 = icmp uge i32 %high, %_3, !dbg !5986
  ret i1 %_0, !dbg !5987
}

; core::iter::traits::iterator::Iterator::collect::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h9e05c36c473fcb89E"(ptr align 4 %_1, i32 %high) unnamed_addr #2 !dbg !5988 {
start:
  %high.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !5996, !DIExpression(DW_OP_deref), !5997)
  store i32 %high, ptr %high.dbg.spill, align 4
    #dbg_declare(ptr %high.dbg.spill, !5995, !DIExpression(), !5998)
  %_3 = load i32, ptr %_1, align 4, !dbg !5999
  %_0 = icmp uge i32 %high, %_3, !dbg !6000
  ret i1 %_0, !dbg !6001
}

; core::iter::traits::iterator::Iterator::collect::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17ha74fa3270f5d2a29E"(ptr align 4 %_1, i32 %high) unnamed_addr #2 !dbg !6002 {
start:
  %high.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6010, !DIExpression(DW_OP_deref), !6011)
  store i32 %high, ptr %high.dbg.spill, align 4
    #dbg_declare(ptr %high.dbg.spill, !6009, !DIExpression(), !6012)
  %_3 = load i32, ptr %_1, align 4, !dbg !6013
  %_0 = icmp uge i32 %high, %_3, !dbg !6014
  ret i1 %_0, !dbg !6015
}

; core::iter::traits::iterator::Iterator::collect::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17hbb1f206f45e00d6bE"(ptr align 4 %_1, i32 %high) unnamed_addr #2 !dbg !6016 {
start:
  %high.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6024, !DIExpression(DW_OP_deref), !6025)
  store i32 %high, ptr %high.dbg.spill, align 4
    #dbg_declare(ptr %high.dbg.spill, !6023, !DIExpression(), !6026)
  %_3 = load i32, ptr %_1, align 4, !dbg !6027
  %_0 = icmp uge i32 %high, %_3, !dbg !6028
  ret i1 %_0, !dbg !6029
}

; core::iter::traits::iterator::Iterator::collect::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17he0e16c92ec0ca111E"(ptr align 4 %_1, i32 %high) unnamed_addr #2 !dbg !6030 {
start:
  %high.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6038, !DIExpression(DW_OP_deref), !6039)
  store i32 %high, ptr %high.dbg.spill, align 4
    #dbg_declare(ptr %high.dbg.spill, !6037, !DIExpression(), !6040)
  %_3 = load i32, ptr %_1, align 4, !dbg !6041
  %_0 = icmp uge i32 %high, %_3, !dbg !6042
  ret i1 %_0, !dbg !6043
}

; core::iter::traits::iterator::Iterator::collect::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17hfceb720a7bf54a7dE"(ptr align 4 %_1, i32 %high) unnamed_addr #2 !dbg !6044 {
start:
  %high.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6052, !DIExpression(DW_OP_deref), !6053)
  store i32 %high, ptr %high.dbg.spill, align 4
    #dbg_declare(ptr %high.dbg.spill, !6051, !DIExpression(), !6054)
  %_3 = load i32, ptr %_1, align 4, !dbg !6055
  %_0 = icmp uge i32 %high, %_3, !dbg !6056
  ret i1 %_0, !dbg !6057
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17h0645607ed23fde21E(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !6058 {
start:
    #dbg_declare(ptr %self, !6062, !DIExpression(), !6066)
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6063, !DIExpression(), !6067)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h94a381fdf96eae99E(ptr align 4 %f) #17, !dbg !6068
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9b95bb9acbc2b2d8E"(ptr align 4 %self, ptr align 4 %_4) #17, !dbg !6069
  ret void, !dbg !6070
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17h859a065e4dff12edE(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !6071 {
start:
    #dbg_declare(ptr %self, !6075, !DIExpression(), !6079)
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6076, !DIExpression(), !6080)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h8b191bf5f5353cbbE(ptr align 4 %f) #17, !dbg !6081
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9ffbd105e53ef9a2E"(ptr align 4 %self, ptr align 4 %_4) #17, !dbg !6082
  ret void, !dbg !6083
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17h8e14239f11058b32E(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !6084 {
start:
    #dbg_declare(ptr %self, !6088, !DIExpression(), !6092)
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6089, !DIExpression(), !6093)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h238f340ef83aa6d8E(ptr align 4 %f) #17, !dbg !6094
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h10c5a030ee96fe6fE"(ptr align 4 %self, ptr align 4 %_4) #17, !dbg !6095
  ret void, !dbg !6096
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17ha321f594e12e6296E(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !6097 {
start:
    #dbg_declare(ptr %self, !6101, !DIExpression(), !6105)
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6102, !DIExpression(), !6106)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hc60eb75827302f00E(ptr align 4 %f) #17, !dbg !6107
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h4241de272d72337eE"(ptr align 4 %self, ptr align 4 %_4) #17, !dbg !6108
  ret void, !dbg !6109
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nounwind
define dso_local void @_ZN4core4iter6traits8iterator8Iterator8for_each17hb73fe35e04a8db1eE(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !6110 {
start:
    #dbg_declare(ptr %self, !6114, !DIExpression(), !6118)
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6115, !DIExpression(), !6119)
; call core::iter::traits::iterator::Iterator::for_each::call
  %_4 = call align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hf593ef07d886244eE(ptr align 4 %f) #17, !dbg !6120
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9cd58454b5701ea2E"(ptr align 4 %self, ptr align 4 %_4) #17, !dbg !6121
  ret void, !dbg !6122
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h238f340ef83aa6d8E(ptr align 4 %f) unnamed_addr #2 !dbg !6123 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6127, !DIExpression(), !6130)
  ret ptr %f, !dbg !6131
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h8b191bf5f5353cbbE(ptr align 4 %f) unnamed_addr #2 !dbg !6132 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6136, !DIExpression(), !6139)
  ret ptr %f, !dbg !6140
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17h94a381fdf96eae99E(ptr align 4 %f) unnamed_addr #2 !dbg !6141 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6145, !DIExpression(), !6148)
  ret ptr %f, !dbg !6149
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hc60eb75827302f00E(ptr align 4 %f) unnamed_addr #2 !dbg !6150 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6154, !DIExpression(), !6157)
  ret ptr %f, !dbg !6158
}

; core::iter::traits::iterator::Iterator::for_each::call
; Function Attrs: inlinehint nounwind
define dso_local align 4 ptr @_ZN4core4iter6traits8iterator8Iterator8for_each4call17hf593ef07d886244eE(ptr align 4 %f) unnamed_addr #2 !dbg !6159 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !6163, !DIExpression(), !6166)
  ret ptr %f, !dbg !6167
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h359248ba5520ec7dE"(ptr align 4 %_1, i32 %item) unnamed_addr #2 !dbg !6168 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6174, !DIExpression(DW_OP_deref), !6176)
    #dbg_declare(ptr %_2.dbg.spill, !6175, !DIExpression(), !6177)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !6173, !DIExpression(), !6178)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hd440c1bffe5902e0E"(ptr align 4 %_1, i32 %item) #17, !dbg !6179
  ret void, !dbg !6180
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h5aabf4c3929a7d79E"(ptr align 4 %_1, i32 %item) unnamed_addr #2 !dbg !6181 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6187, !DIExpression(DW_OP_deref), !6189)
    #dbg_declare(ptr %_2.dbg.spill, !6188, !DIExpression(), !6190)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !6186, !DIExpression(), !6191)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h096d257cee374fd4E"(ptr align 4 %_1, i32 %item) #17, !dbg !6192
  ret void, !dbg !6193
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17ha1051e264a981eccE"(ptr align 4 %_1, i32 %item) unnamed_addr #2 !dbg !6194 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6200, !DIExpression(DW_OP_deref), !6202)
    #dbg_declare(ptr %_2.dbg.spill, !6201, !DIExpression(), !6203)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !6199, !DIExpression(), !6204)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hf1595fb0301c1399E"(ptr align 4 %_1, i32 %item) #17, !dbg !6205
  ret void, !dbg !6206
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hf1cd338897f1027fE"(ptr align 4 %_1, i32 %item) unnamed_addr #2 !dbg !6207 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6213, !DIExpression(DW_OP_deref), !6215)
    #dbg_declare(ptr %_2.dbg.spill, !6214, !DIExpression(), !6216)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !6212, !DIExpression(), !6217)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h9cb8e9ebfb0dc258E"(ptr align 4 %_1, i32 %item) #17, !dbg !6218
  ret void, !dbg !6219
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hf7193f7aad62f09dE"(ptr align 4 %_1, i32 %item) unnamed_addr #2 !dbg !6220 {
start:
  %item.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6226, !DIExpression(DW_OP_deref), !6228)
    #dbg_declare(ptr %_2.dbg.spill, !6227, !DIExpression(), !6229)
  store i32 %item, ptr %item.dbg.spill, align 4
    #dbg_declare(ptr %item.dbg.spill, !6225, !DIExpression(), !6230)
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h001e8a55092d7a17E"(ptr align 4 %_1, i32 %item) #17, !dbg !6231
  ret void, !dbg !6232
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17h589d773956655b6cE(ptr align 4 %self, ptr align 4 %0, ptr align 2 %1) unnamed_addr #2 !dbg !6233 {
start:
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_11 = alloca [8 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [8 x i8], align 4
  store ptr %0, ptr %f, align 4
  %2 = getelementptr inbounds i8, ptr %f, i32 4
  store ptr %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6238, !DIExpression(), !6252)
    #dbg_declare(ptr %init.dbg.spill, !6239, !DIExpression(), !6253)
    #dbg_declare(ptr %f, !6240, !DIExpression(), !6254)
    #dbg_declare(ptr %accum.dbg.spill, !6241, !DIExpression(), !6255)
    #dbg_declare(ptr %x, !6243, !DIExpression(), !6256)
    #dbg_declare(ptr %residual.dbg.spill, !6245, !DIExpression(), !6257)
    #dbg_declare(ptr %val.dbg.spill, !6247, !DIExpression(), !6258)
  br label %bb1, !dbg !6259

bb1:                                              ; preds = %bb7, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc74a8ff9f3d47627E"(ptr sret([8 x i8]) align 4 %_5, ptr align 4 %self) #17, !dbg !6260
  %3 = load i16, ptr %_5, align 4, !dbg !6261
  %4 = icmp eq i16 %3, 2, !dbg !6261
  %_6 = select i1 %4, i32 0, i32 1, !dbg !6261
  %5 = trunc nuw i32 %_6 to i1, !dbg !6262
  br i1 %5, label %bb3, label %bb10, !dbg !6262

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %x, ptr align 4 %_5, i32 8, i1 false), !dbg !6256
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %x, i32 8, i1 false), !dbg !6263
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
  %_9 = call zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h111e07f5607473d9E"(ptr align 4 %f, ptr align 4 %_11) #17, !dbg !6263
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %6 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc728983dae19b88dE"(i1 zeroext %_9) #17, !dbg !6263
  %7 = zext i1 %6 to i8, !dbg !6263
  store i8 %7, ptr %_8, align 1, !dbg !6263
  %8 = load i8, ptr %_8, align 1, !dbg !6263
  %9 = trunc nuw i8 %8 to i1, !dbg !6263
  %_13 = zext i1 %9 to i32, !dbg !6263
  %10 = trunc nuw i32 %_13 to i1, !dbg !6263
  br i1 %10, label %bb8, label %bb7, !dbg !6263

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %11 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h6cc3c0a370de7acfE"() #17, !dbg !6264
  %12 = zext i1 %11 to i8, !dbg !6264
  store i8 %12, ptr %_0, align 1, !dbg !6264
  br label %bb12, !dbg !6265

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %13 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h11ad804e7e25f717E"() #17, !dbg !6266
  %14 = zext i1 %13 to i8, !dbg !6266
  store i8 %14, ptr %_0, align 1, !dbg !6266
  br label %bb12, !dbg !6265

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !6259

bb12:                                             ; preds = %bb10, %bb8
  %15 = load i8, ptr %_0, align 1, !dbg !6267
  %16 = trunc nuw i8 %15 to i1, !dbg !6267
  ret i1 %16, !dbg !6267

bb6:                                              ; No predecessors!
  unreachable, !dbg !6263
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hc3031e90bc21e441E(ptr align 4 %self, ptr align 4 %0, ptr align 2 %1) unnamed_addr #2 !dbg !6268 {
start:
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_11 = alloca [8 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %x = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  %f = alloca [8 x i8], align 4
  store ptr %0, ptr %f, align 4
  %2 = getelementptr inbounds i8, ptr %f, i32 4
  store ptr %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6273, !DIExpression(), !6286)
    #dbg_declare(ptr %init.dbg.spill, !6274, !DIExpression(), !6287)
    #dbg_declare(ptr %f, !6275, !DIExpression(), !6288)
    #dbg_declare(ptr %accum.dbg.spill, !6276, !DIExpression(), !6289)
    #dbg_declare(ptr %x, !6278, !DIExpression(), !6290)
    #dbg_declare(ptr %residual.dbg.spill, !6280, !DIExpression(), !6291)
    #dbg_declare(ptr %val.dbg.spill, !6282, !DIExpression(), !6292)
  br label %bb1, !dbg !6293

bb1:                                              ; preds = %bb7, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee4e173d22a50904E"(ptr sret([8 x i8]) align 4 %_5, ptr align 4 %self) #17, !dbg !6294
  %3 = load i16, ptr %_5, align 4, !dbg !6295
  %4 = icmp eq i16 %3, 2, !dbg !6295
  %_6 = select i1 %4, i32 0, i32 1, !dbg !6295
  %5 = trunc nuw i32 %_6 to i1, !dbg !6296
  br i1 %5, label %bb3, label %bb10, !dbg !6296

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %x, ptr align 4 %_5, i32 8, i1 false), !dbg !6290
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %x, i32 8, i1 false), !dbg !6297
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::try_fold::{{closure}}
  %_9 = call zeroext i1 @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hf933ace932e6e75eE"(ptr align 4 %f, ptr align 4 %_11) #17, !dbg !6297
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %6 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc728983dae19b88dE"(i1 zeroext %_9) #17, !dbg !6297
  %7 = zext i1 %6 to i8, !dbg !6297
  store i8 %7, ptr %_8, align 1, !dbg !6297
  %8 = load i8, ptr %_8, align 1, !dbg !6297
  %9 = trunc nuw i8 %8 to i1, !dbg !6297
  %_13 = zext i1 %9 to i32, !dbg !6297
  %10 = trunc nuw i32 %_13 to i1, !dbg !6297
  br i1 %10, label %bb8, label %bb7, !dbg !6297

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %11 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h6cc3c0a370de7acfE"() #17, !dbg !6298
  %12 = zext i1 %11 to i8, !dbg !6298
  store i8 %12, ptr %_0, align 1, !dbg !6298
  br label %bb12, !dbg !6299

bb8:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %13 = call zeroext i1 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h11ad804e7e25f717E"() #17, !dbg !6300
  %14 = zext i1 %13 to i8, !dbg !6300
  store i8 %14, ptr %_0, align 1, !dbg !6300
  br label %bb12, !dbg !6299

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !6293

bb12:                                             ; preds = %bb10, %bb8
  %15 = load i8, ptr %_0, align 1, !dbg !6301
  %16 = trunc nuw i8 %15 to i1, !dbg !6301
  ret i1 %16, !dbg !6301

bb6:                                              ; No predecessors!
  unreachable, !dbg !6297
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define dso_local i32 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hd1ec53e5f2701640E(ptr align 4 %self, ptr align 1 %0, ptr align 1 %1) unnamed_addr #2 !dbg !6302 {
start:
  %residual.dbg.spill = alloca [4 x i8], align 4
  %x.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %accum.dbg.spill = alloca [0 x i8], align 1
  %init.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [4 x i8], align 4
  %_5 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  %f = alloca [8 x i8], align 4
  store ptr %0, ptr %f, align 4
  %2 = getelementptr inbounds i8, ptr %f, i32 4
  store ptr %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6306, !DIExpression(), !6319)
    #dbg_declare(ptr %init.dbg.spill, !6307, !DIExpression(), !6320)
    #dbg_declare(ptr %f, !6308, !DIExpression(), !6321)
    #dbg_declare(ptr %accum.dbg.spill, !6309, !DIExpression(), !6322)
    #dbg_declare(ptr %val.dbg.spill, !6315, !DIExpression(), !6323)
  br label %bb1, !dbg !6324

bb1:                                              ; preds = %bb7, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %3 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20cd7376025b9888E"(ptr align 4 %self) #17, !dbg !6325
  store i32 %3, ptr %_5, align 4, !dbg !6325
  %4 = load i32, ptr %_5, align 4, !dbg !6326
  %5 = icmp eq i32 %4, 1114112, !dbg !6326
  %_6 = select i1 %5, i32 0, i32 1, !dbg !6326
  %6 = trunc nuw i32 %_6 to i1, !dbg !6327
  br i1 %6, label %bb3, label %bb10, !dbg !6327

bb3:                                              ; preds = %bb1
  %x = load i32, ptr %_5, align 4, !dbg !6328
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !6328
    #dbg_declare(ptr %x.dbg.spill, !6311, !DIExpression(), !6328)
; call core::iter::traits::iterator::Iterator::find::check::{{closure}}
  %_9 = call i32 @"_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h7288b3ffa0d94002E"(ptr align 4 %f, i32 %x) #17, !dbg !6329
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %7 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12ce1bf600ceac79E"(i32 %_9) #17, !dbg !6329
  store i32 %7, ptr %_8, align 4, !dbg !6329
  %8 = load i32, ptr %_8, align 4, !dbg !6329
  %9 = icmp eq i32 %8, 1114112, !dbg !6329
  %_13 = select i1 %9, i32 0, i32 1, !dbg !6329
  %10 = trunc nuw i32 %_13 to i1, !dbg !6329
  br i1 %10, label %bb8, label %bb7, !dbg !6329

bb10:                                             ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %11 = call i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1a7b489c338cc154E"() #17, !dbg !6330
  store i32 %11, ptr %_0, align 4, !dbg !6330
  br label %bb12, !dbg !6331

bb8:                                              ; preds = %bb3
  %residual = load i32, ptr %_8, align 4, !dbg !6332
  store i32 %residual, ptr %residual.dbg.spill, align 4, !dbg !6332
    #dbg_declare(ptr %residual.dbg.spill, !6313, !DIExpression(), !6333)
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual<core::ops::control_flow::ControlFlow<B,core::convert::Infallible>>>::from_residual
  %12 = call i32 @"_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h1c1608b22587779cE"(i32 %residual) #17, !dbg !6334
  store i32 %12, ptr %_0, align 4, !dbg !6334
  br label %bb12, !dbg !6331

bb7:                                              ; preds = %bb3
  br label %bb1, !dbg !6324

bb12:                                             ; preds = %bb10, %bb8
  %13 = load i32, ptr %_0, align 4, !dbg !6335
  ret i32 %13, !dbg !6335

bb6:                                              ; No predecessors!
  unreachable, !dbg !6329
}

; core::iter::adapters::skip_while::SkipWhile<I,P>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3c20aa351d303f35E"(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !6336 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !6339, !DIExpression(), !6341)
    #dbg_declare(ptr %predicate.dbg.spill, !6340, !DIExpression(), !6342)
  store ptr %iter.0, ptr %_0, align 4, !dbg !6343
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6343
  store ptr %iter.1, ptr %1, align 4, !dbg !6343
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !6343
  store i8 0, ptr %2, align 4, !dbg !6343
  ret void, !dbg !6344
}

; core::iter::adapters::skip_while::SkipWhile<I,P>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h92aabd5b4bfbdcbdE"(ptr sret([12 x i8]) align 4 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !6345 {
start:
  %predicate.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !6348, !DIExpression(), !6350)
    #dbg_declare(ptr %predicate.dbg.spill, !6349, !DIExpression(), !6351)
  store ptr %iter.0, ptr %_0, align 4, !dbg !6352
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6352
  store ptr %iter.1, ptr %1, align 4, !dbg !6352
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !6352
  store i8 0, ptr %2, align 4, !dbg !6352
  ret void, !dbg !6353
}

; core::iter::adapters::try_process
; Function Attrs: nounwind
define dso_local void @_ZN4core4iter8adapters11try_process17h5a971f4fa39a6a0bE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !6354 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %_12 = alloca [1 x i8], align 1
  %_11 = alloca [12 x i8], align 4
  %_8 = alloca [16 x i8], align 4
  %value = alloca [12 x i8], align 4
  %shunt = alloca [16 x i8], align 4
  %residual = alloca [4 x i8], align 2
  %f = alloca [0 x i8], align 1
    #dbg_declare(ptr %iter, !6358, !DIExpression(), !6371)
    #dbg_declare(ptr %f, !6359, !DIExpression(), !6372)
    #dbg_declare(ptr %residual, !6360, !DIExpression(), !6373)
    #dbg_declare(ptr %shunt, !6362, !DIExpression(), !6374)
    #dbg_declare(ptr %value, !6364, !DIExpression(), !6375)
  store i8 0, ptr %_12, align 1, !dbg !6376
  store i16 0, ptr %residual, align 2, !dbg !6377
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %shunt, ptr align 4 %iter, i32 12, i1 false), !dbg !6378
  %0 = getelementptr inbounds i8, ptr %shunt, i32 12, !dbg !6378
  store ptr %residual, ptr %0, align 4, !dbg !6378
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %shunt, i32 16, i1 false), !dbg !6379
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17he44d5f1c2393ed42E"(ptr sret([12 x i8]) align 4 %value, ptr align 1 %f, ptr align 4 %_8) #17, !dbg !6379
  store i8 1, ptr %_12, align 1, !dbg !6380
  %1 = load i16, ptr %residual, align 2, !dbg !6381
  %2 = getelementptr inbounds i8, ptr %residual, i32 2, !dbg !6381
  %3 = load i16, ptr %2, align 2, !dbg !6381
  %_9 = zext i16 %1 to i32, !dbg !6381
  %4 = trunc nuw i32 %_9 to i1, !dbg !6382
  br i1 %4, label %bb4, label %bb3, !dbg !6382

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %residual, i32 2, !dbg !6383
  %r = load i16, ptr %5, align 2, !dbg !6383
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !6383
    #dbg_declare(ptr %r.dbg.spill, !6366, !DIExpression(), !6384)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0156064f922d25f6E"(ptr sret([12 x i8]) align 4 %_0, i16 %r, ptr align 4 @alloc_3d762eee5b01b661701b65b4aa18abf5) #17, !dbg !6385
  br label %bb8, !dbg !6385

bb3:                                              ; preds = %start
  store i8 0, ptr %_12, align 1, !dbg !6386
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %value, i32 12, i1 false), !dbg !6386
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::from_output
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h5d08afea4e007749E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_11) #17, !dbg !6387
  br label %bb8, !dbg !6387

bb8:                                              ; preds = %bb4, %bb3
  %6 = load i8, ptr %_12, align 1, !dbg !6388
  %7 = trunc nuw i8 %6 to i1, !dbg !6388
  br i1 %7, label %bb7, label %bb5, !dbg !6388

bb5:                                              ; preds = %bb7, %bb8
  store i8 0, ptr %_12, align 1, !dbg !6388
  ret void, !dbg !6389

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE"(ptr align 4 %value) #17, !dbg !6388
  br label %bb5, !dbg !6388

bb2:                                              ; No predecessors!
  unreachable, !dbg !6381
}

; core::iter::adapters::try_process
; Function Attrs: nounwind
define dso_local void @_ZN4core4iter8adapters11try_process17hbf0f27c7335f51e9E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !6390 {
start:
  %r.dbg.spill = alloca [2 x i8], align 2
  %_12 = alloca [1 x i8], align 1
  %_11 = alloca [12 x i8], align 4
  %_8 = alloca [16 x i8], align 4
  %value = alloca [12 x i8], align 4
  %shunt = alloca [16 x i8], align 4
  %residual = alloca [4 x i8], align 2
  %f = alloca [0 x i8], align 1
    #dbg_declare(ptr %iter, !6394, !DIExpression(), !6406)
    #dbg_declare(ptr %f, !6395, !DIExpression(), !6407)
    #dbg_declare(ptr %residual, !6396, !DIExpression(), !6408)
    #dbg_declare(ptr %shunt, !6398, !DIExpression(), !6409)
    #dbg_declare(ptr %value, !6400, !DIExpression(), !6410)
  store i8 0, ptr %_12, align 1, !dbg !6411
  store i16 0, ptr %residual, align 2, !dbg !6412
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %shunt, ptr align 4 %iter, i32 12, i1 false), !dbg !6413
  %0 = getelementptr inbounds i8, ptr %shunt, i32 12, !dbg !6413
  store ptr %residual, ptr %0, align 4, !dbg !6413
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %shunt, i32 16, i1 false), !dbg !6414
; call <core::result::Result<V,E> as core::iter::traits::collect::FromIterator<core::result::Result<A,E>>>::from_iter::{{closure}}
  call void @"_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h81a312cb4a3be80eE"(ptr sret([12 x i8]) align 4 %value, ptr align 1 %f, ptr align 4 %_8) #17, !dbg !6414
  store i8 1, ptr %_12, align 1, !dbg !6415
  %1 = load i16, ptr %residual, align 2, !dbg !6416
  %2 = getelementptr inbounds i8, ptr %residual, i32 2, !dbg !6416
  %3 = load i16, ptr %2, align 2, !dbg !6416
  %_9 = zext i16 %1 to i32, !dbg !6416
  %4 = trunc nuw i32 %_9 to i1, !dbg !6417
  br i1 %4, label %bb4, label %bb3, !dbg !6417

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %residual, i32 2, !dbg !6418
  %r = load i16, ptr %5, align 2, !dbg !6418
  store i16 %r, ptr %r.dbg.spill, align 2, !dbg !6418
    #dbg_declare(ptr %r.dbg.spill, !6402, !DIExpression(), !6419)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0156064f922d25f6E"(ptr sret([12 x i8]) align 4 %_0, i16 %r, ptr align 4 @alloc_3d762eee5b01b661701b65b4aa18abf5) #17, !dbg !6420
  br label %bb8, !dbg !6420

bb3:                                              ; preds = %start
  store i8 0, ptr %_12, align 1, !dbg !6421
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11, ptr align 4 %value, i32 12, i1 false), !dbg !6421
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::from_output
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h5d08afea4e007749E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_11) #17, !dbg !6422
  br label %bb8, !dbg !6422

bb8:                                              ; preds = %bb4, %bb3
  %6 = load i8, ptr %_12, align 1, !dbg !6423
  %7 = trunc nuw i8 %6 to i1, !dbg !6423
  br i1 %7, label %bb7, label %bb5, !dbg !6423

bb5:                                              ; preds = %bb7, %bb8
  store i8 0, ptr %_12, align 1, !dbg !6423
  ret void, !dbg !6424

bb7:                                              ; preds = %bb8
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE"(ptr align 4 %value) #17, !dbg !6423
  br label %bb5, !dbg !6423

bb2:                                              ; No predecessors!
  unreachable, !dbg !6416
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1226c194d618a651E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !6425 {
start:
    #dbg_declare(ptr %iter, !6428, !DIExpression(), !6430)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6429, !DIExpression(), !6431)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %iter, i32 12, i1 false), !dbg !6432
  ret void, !dbg !6433
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3b992ba92e06b38fE"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !6434 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !6437, !DIExpression(), !6439)
    #dbg_declare(ptr %f.dbg.spill, !6438, !DIExpression(), !6440)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !6441
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !6441
  ret { ptr, ptr } %2, !dbg !6441
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h53db666e82883828E"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !6442 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !6445, !DIExpression(), !6447)
    #dbg_declare(ptr %f.dbg.spill, !6446, !DIExpression(), !6448)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !6449
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !6449
  ret { ptr, ptr } %2, !dbg !6449
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb1b0225a12e6e567E"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !6450 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !6453, !DIExpression(), !6455)
    #dbg_declare(ptr %f.dbg.spill, !6454, !DIExpression(), !6456)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !6457
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !6457
  ret { ptr, ptr } %2, !dbg !6457
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hc525012c93a213ddE"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !6458 {
start:
  %f.dbg.spill = alloca [0 x i8], align 1
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !6461, !DIExpression(), !6463)
    #dbg_declare(ptr %f.dbg.spill, !6462, !DIExpression(), !6464)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !6465
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !6465
  ret { ptr, ptr } %2, !dbg !6465
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hdfcc33e85e2bb21eE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !6466 {
start:
    #dbg_declare(ptr %iter, !6469, !DIExpression(), !6471)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6470, !DIExpression(), !6472)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %iter, i32 12, i1 false), !dbg !6473
  ret void, !dbg !6474
}

; core::iter::adapters::map::Map<I,F>::new
; Function Attrs: nounwind
define dso_local void @"_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf2159c97354589f0E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !6475 {
start:
    #dbg_declare(ptr %iter, !6478, !DIExpression(), !6480)
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6479, !DIExpression(), !6481)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %iter, i32 12, i1 false), !dbg !6482
  ret void, !dbg !6483
}

; core::iter::adapters::map::map_fold
; Function Attrs: nounwind
define dso_local void @_ZN4core4iter8adapters3map8map_fold17h77b577df5c8d5e69E() unnamed_addr #1 !dbg !6484 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6488, !DIExpression(), !6493)
    #dbg_declare(ptr %g.dbg.spill, !6489, !DIExpression(), !6494)
  ret void, !dbg !6495
}

; core::iter::adapters::map::map_fold
; Function Attrs: nounwind
define dso_local align 4 ptr @_ZN4core4iter8adapters3map8map_fold17h9fbeeb88c390e13aE(ptr align 4 %g) unnamed_addr #1 !dbg !6496 {
start:
  %g.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6500, !DIExpression(), !6505)
  store ptr %g, ptr %g.dbg.spill, align 4
    #dbg_declare(ptr %g.dbg.spill, !6501, !DIExpression(), !6506)
  ret ptr %g, !dbg !6507
}

; core::iter::adapters::map::map_fold
; Function Attrs: nounwind
define dso_local void @_ZN4core4iter8adapters3map8map_fold17hcb0a43cac0c84b0cE() unnamed_addr #1 !dbg !6508 {
start:
  %g.dbg.spill = alloca [0 x i8], align 1
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6512, !DIExpression(), !6517)
    #dbg_declare(ptr %g.dbg.spill, !6513, !DIExpression(), !6518)
  ret void, !dbg !6519
}

; core::iter::adapters::map::map_fold
; Function Attrs: nounwind
define dso_local align 4 ptr @_ZN4core4iter8adapters3map8map_fold17hd4ff735be36beea1E(ptr align 4 %g) unnamed_addr #1 !dbg !6520 {
start:
  %g.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6524, !DIExpression(), !6529)
  store ptr %g, ptr %g.dbg.spill, align 4
    #dbg_declare(ptr %g.dbg.spill, !6525, !DIExpression(), !6530)
  ret ptr %g, !dbg !6531
}

; core::iter::adapters::map::map_fold
; Function Attrs: nounwind
define dso_local align 4 ptr @_ZN4core4iter8adapters3map8map_fold17heebc66200a6c1895E(ptr align 4 %g) unnamed_addr #1 !dbg !6532 {
start:
  %g.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %f.dbg.spill, !6536, !DIExpression(), !6541)
  store ptr %g, ptr %g.dbg.spill, align 4
    #dbg_declare(ptr %g.dbg.spill, !6537, !DIExpression(), !6542)
  ret ptr %g, !dbg !6543
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h7678013cee6030e9E"(ptr align 4 %_1, ptr align 4 %elt) unnamed_addr #2 !dbg !6544 {
start:
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6551, !DIExpression(DW_OP_deref), !6553)
    #dbg_declare(ptr %_1.dbg.spill, !6552, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4), !6554)
    #dbg_declare(ptr %acc.dbg.spill, !6549, !DIExpression(), !6555)
    #dbg_declare(ptr %elt, !6550, !DIExpression(), !6556)
  %_7 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !6557
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %elt, i32 8, i1 false), !dbg !6557
; call alloc::string::String::from_utf16be_lossy::{{closure}}
  %_6 = call i32 @"_ZN5alloc6string6String18from_utf16be_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h7c780542b90ad200E"(ptr align 1 %_7, ptr align 4 %_8) #17, !dbg !6557
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17ha1051e264a981eccE"(ptr align 4 %_1, i32 %_6) #17, !dbg !6558
  ret void, !dbg !6559
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h8959f768052622a8E"(ptr align 4 %_1, ptr align 4 %elt) unnamed_addr #2 !dbg !6560 {
start:
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6567, !DIExpression(DW_OP_deref), !6569)
    #dbg_declare(ptr %_1.dbg.spill, !6568, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4), !6570)
    #dbg_declare(ptr %acc.dbg.spill, !6565, !DIExpression(), !6571)
    #dbg_declare(ptr %elt, !6566, !DIExpression(), !6572)
  %_7 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !6573
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %elt, i32 8, i1 false), !dbg !6573
; call alloc::string::String::from_utf16_lossy::{{closure}}
  %_6 = call i32 @"_ZN5alloc6string6String16from_utf16_lossy28_$u7b$$u7b$closure$u7d$$u7d$17ha4b1862be1a2d797E"(ptr align 1 %_7, ptr align 4 %_8) #17, !dbg !6573
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hf1cd338897f1027fE"(ptr align 4 %_1, i32 %_6) #17, !dbg !6574
  ret void, !dbg !6575
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he28f978449630af4E"(ptr align 1 %_1, i32 %acc, ptr align 4 %elt) unnamed_addr #2 !dbg !6576 {
start:
  %elt.dbg.spill = alloca [4 x i8], align 4
  %acc.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6587, !DIExpression(DW_OP_deref), !6589)
    #dbg_declare(ptr %_1.dbg.spill, !6588, !DIExpression(DW_OP_deref), !6590)
  store i32 %acc, ptr %acc.dbg.spill, align 4
    #dbg_declare(ptr %acc.dbg.spill, !6585, !DIExpression(), !6591)
  store ptr %elt, ptr %elt.dbg.spill, align 4
    #dbg_declare(ptr %elt.dbg.spill, !6586, !DIExpression(), !6592)
; call core::fmt::Arguments::estimated_capacity::{{closure}}
  %_6 = call i32 @"_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17hb5bc4f021df36a38E"(ptr align 1 %_1, ptr align 4 %elt) #17, !dbg !6593
; call <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
  %_0 = call i32 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17hf3d98d5c7cb8263eE"(ptr align 1 %_1, i32 %acc, i32 %_6) #17, !dbg !6594
  ret i32 %_0, !dbg !6595
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he747967c238de89dE"(ptr align 1 %_1, i8 %acc, ptr align 1 %elt) unnamed_addr #2 !dbg !6596 {
start:
  %elt.dbg.spill = alloca [4 x i8], align 4
  %acc.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6607, !DIExpression(DW_OP_deref), !6609)
    #dbg_declare(ptr %_1.dbg.spill, !6608, !DIExpression(DW_OP_deref), !6610)
  store i8 %acc, ptr %acc.dbg.spill, align 1
    #dbg_declare(ptr %acc.dbg.spill, !6605, !DIExpression(), !6611)
  store ptr %elt, ptr %elt.dbg.spill, align 4
    #dbg_declare(ptr %elt.dbg.spill, !6606, !DIExpression(), !6612)
; call alloc::str::convert_while_ascii::{{closure}}
  %_6 = call i8 @"_ZN5alloc3str19convert_while_ascii28_$u7b$$u7b$closure$u7d$$u7d$17h3d80ddc3b3c51e89E"(ptr align 1 %_1, ptr align 1 %elt) #17, !dbg !6613
; call <u8 as core::iter::traits::accum::Sum>::sum::{{closure}}
  %_0 = call i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h76494bbec28dd2d5E"(ptr align 1 %_1, i8 %acc, i8 %_6) #17, !dbg !6614
  ret i8 %_0, !dbg !6615
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hec3619a9d4d00ba4E"(ptr align 4 %_1, ptr align 4 %elt) unnamed_addr #2 !dbg !6616 {
start:
  %acc.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !6623, !DIExpression(DW_OP_deref), !6625)
    #dbg_declare(ptr %_1.dbg.spill, !6624, !DIExpression(DW_OP_deref, DW_OP_plus_uconst, 4), !6626)
    #dbg_declare(ptr %acc.dbg.spill, !6621, !DIExpression(), !6627)
    #dbg_declare(ptr %elt, !6622, !DIExpression(), !6628)
  %_7 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !6629
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %elt, i32 8, i1 false), !dbg !6629
; call alloc::string::String::from_utf16le_lossy::{{closure}}
  %_6 = call i32 @"_ZN5alloc6string6String18from_utf16le_lossy28_$u7b$$u7b$closure$u7d$$u7d$17hd433e831c02c510bE"(ptr align 1 %_7, ptr align 4 %_8) #17, !dbg !6629
; call core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  call void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hf7193f7aad62f09dE"(ptr align 4 %_1, i32 %_6) #17, !dbg !6630
  ret void, !dbg !6631
}

; core::iter::adapters::rev::Rev<T>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he3e613b33ad0cb26E"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !6632 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !6636, !DIExpression(), !6637)
  %1 = insertvalue { ptr, ptr } poison, ptr %iter.0, 0, !dbg !6638
  %2 = insertvalue { ptr, ptr } %1, ptr %iter.1, 1, !dbg !6638
  ret { ptr, ptr } %2, !dbg !6638
}

; core::iter::adapters::cloned::Cloned<I>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17h0a074f97ffafc930E"(ptr %it.0, ptr %it.1) unnamed_addr #1 !dbg !6639 {
start:
  %it.dbg.spill = alloca [8 x i8], align 4
  store ptr %it.0, ptr %it.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %it.dbg.spill, i32 4
  store ptr %it.1, ptr %0, align 4
    #dbg_declare(ptr %it.dbg.spill, !6642, !DIExpression(), !6643)
  %1 = insertvalue { ptr, ptr } poison, ptr %it.0, 0, !dbg !6644
  %2 = insertvalue { ptr, ptr } %1, ptr %it.1, 1, !dbg !6644
  ret { ptr, ptr } %2, !dbg !6644
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h02e3115f4c605eabE"(ptr %it.0, ptr %it.1) unnamed_addr #1 !dbg !6645 {
start:
  %it.dbg.spill = alloca [8 x i8], align 4
  store ptr %it.0, ptr %it.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %it.dbg.spill, i32 4
  store ptr %it.1, ptr %0, align 4
    #dbg_declare(ptr %it.dbg.spill, !6648, !DIExpression(), !6649)
  %1 = insertvalue { ptr, ptr } poison, ptr %it.0, 0, !dbg !6650
  %2 = insertvalue { ptr, ptr } %1, ptr %it.1, 1, !dbg !6650
  ret { ptr, ptr } %2, !dbg !6650
}

; core::sync::atomic::AtomicUsize::new
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4sync6atomic11AtomicUsize3new17h516593380012ce35E(i32 %v) unnamed_addr #2 !dbg !6651 {
start:
  %value.dbg.spill.i = alloca [4 x i8], align 4
  %v.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %v, ptr %v.dbg.spill, align 4
    #dbg_declare(ptr %v.dbg.spill, !6657, !DIExpression(), !6658)
  store i32 %v, ptr %value.dbg.spill.i, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !5019, !DIExpression(), !6659)
  store i32 %v, ptr %_0, align 4, !dbg !6661
  %0 = load i32, ptr %_0, align 4, !dbg !6662
  ret i32 %0, !dbg !6662
}

; core::wtf8::decode_surrogate
; Function Attrs: inlinehint nounwind
define internal i16 @_ZN4core4wtf816decode_surrogate17h7fef71ac8b53fc15E(i8 %second_byte, i8 %third_byte) unnamed_addr #2 !dbg !6663 {
start:
  %third_byte.dbg.spill = alloca [1 x i8], align 1
  %second_byte.dbg.spill = alloca [1 x i8], align 1
  store i8 %second_byte, ptr %second_byte.dbg.spill, align 1
    #dbg_declare(ptr %second_byte.dbg.spill, !6668, !DIExpression(), !6670)
  store i8 %third_byte, ptr %third_byte.dbg.spill, align 1
    #dbg_declare(ptr %third_byte.dbg.spill, !6669, !DIExpression(), !6671)
  %_6 = zext i8 %second_byte to i16, !dbg !6672
  %_5 = and i16 %_6, 63, !dbg !6673
  %_4 = shl i16 %_5, 6, !dbg !6673
  %_3 = or i16 -10240, %_4, !dbg !6674
  %_10 = zext i8 %third_byte to i16, !dbg !6675
  %_9 = and i16 %_10, 63, !dbg !6675
  %_0 = or i16 %_3, %_9, !dbg !6674
  ret i16 %_0, !dbg !6676
}

; core::wtf8::Wtf8::next_surrogate
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core4wtf84Wtf814next_surrogate17h4ca7c63da452551aE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1, i32 %0) unnamed_addr #2 !dbg !6677 {
start:
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %b3.dbg.spill4 = alloca [1 x i8], align 1
  %b2.dbg.spill2 = alloca [1 x i8], align 1
  %b3.dbg.spill = alloca [4 x i8], align 4
  %b2.dbg.spill = alloca [4 x i8], align 4
  %b.dbg.spill = alloca [1 x i8], align 1
  %val.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  %_20 = alloca [8 x i8], align 4
  %_9 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %pos = alloca [4 x i8], align 4
  store i32 %0, ptr %pos, align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !6703, !DIExpression(), !6718)
    #dbg_declare(ptr %pos, !6704, !DIExpression(), !6719)
    #dbg_declare(ptr %iter, !6705, !DIExpression(), !6720)
    #dbg_declare(ptr %residual.dbg.spill, !6709, !DIExpression(), !6721)
  %_7 = load i32, ptr %pos, align 4, !dbg !6722
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !6723, !DIExpression(), !6732)
  store i32 %_7, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !6729, !DIExpression(), !6734)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32 %_7, ptr align 1 %self.0, i32 %self.1, ptr align 4 @alloc_d2bffffeabb75125ae3b62ffbb831591) #17, !dbg !6735
  %_0.0.i = extractvalue { ptr, i32 } %3, 0, !dbg !6735
  %_0.1.i = extractvalue { ptr, i32 } %3, 1, !dbg !6735
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !6736
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !6736
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !6737
  %5 = extractvalue { ptr, ptr } %4, 0, !dbg !6737
  %6 = extractvalue { ptr, ptr } %4, 1, !dbg !6737
  store ptr %5, ptr %iter, align 4, !dbg !6737
  %7 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !6737
  store ptr %6, ptr %7, align 4, !dbg !6737
  br label %bb2, !dbg !6737

bb2:                                              ; preds = %bb10, %bb14, %bb29, %bb33, %bb24, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_10 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6738
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %8 = call align 1 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8da1c729ae03b550E"(ptr align 1 %_10) #17, !dbg !6739
  store ptr %8, ptr %_9, align 4, !dbg !6739
  %9 = load ptr, ptr %_9, align 4, !dbg !6739
  %10 = ptrtoint ptr %9 to i32, !dbg !6739
  %11 = icmp eq i32 %10, 0, !dbg !6739
  %_12 = select i1 %11, i32 1, i32 0, !dbg !6739
  %12 = trunc nuw i32 %_12 to i1, !dbg !6739
  br i1 %12, label %bb7, label %bb6, !dbg !6739

bb7:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  call void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17hcab65765ef4b2869E"(ptr sret([12 x i8]) align 4 %_0) #17, !dbg !6740
  br label %bb34, !dbg !6740

bb6:                                              ; preds = %bb2
  %val = load ptr, ptr %_9, align 4, !dbg !6739
  store ptr %val, ptr %val.dbg.spill, align 4, !dbg !6739
    #dbg_declare(ptr %val.dbg.spill, !6711, !DIExpression(), !6741)
  %b = load i8, ptr %val, align 1, !dbg !6742
  store i8 %b, ptr %b.dbg.spill, align 1, !dbg !6742
    #dbg_declare(ptr %b.dbg.spill, !6707, !DIExpression(), !6743)
  %_14 = icmp ult i8 %b, -128, !dbg !6744
  br i1 %_14, label %bb8, label %bb9, !dbg !6744

bb9:                                              ; preds = %bb6
  %_16 = icmp ult i8 %b, -32, !dbg !6745
  br i1 %_16, label %bb11, label %bb12, !dbg !6745

bb8:                                              ; preds = %bb6
  %13 = load i32, ptr %pos, align 4, !dbg !6746
  %_15.0 = add i32 %13, 1, !dbg !6746
  %_15.1 = icmp ult i32 %_15.0, %13, !dbg !6746
  br i1 %_15.1, label %panic8, label %bb10, !dbg !6746

bb12:                                             ; preds = %bb9
  %14 = icmp eq i8 %b, -19, !dbg !6747
  br i1 %14, label %bb15, label %bb16, !dbg !6747

bb11:                                             ; preds = %bb9
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_17 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6748
  %15 = load i32, ptr %pos, align 4, !dbg !6749
  %_19.0 = add i32 %15, 2, !dbg !6749
  %_19.1 = icmp ult i32 %_19.0, %15, !dbg !6749
  br i1 %_19.1, label %panic7, label %bb14, !dbg !6749

bb15:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_21 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6750
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_23 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6751
  store ptr %_21, ptr %_20, align 4, !dbg !6752
  %16 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6752
  store ptr %_23, ptr %16, align 4, !dbg !6752
  %17 = load ptr, ptr %_20, align 4, !dbg !6752
  %18 = ptrtoint ptr %17 to i32, !dbg !6752
  %19 = icmp eq i32 %18, 0, !dbg !6752
  %_26 = select i1 %19, i32 0, i32 1, !dbg !6752
  %20 = trunc nuw i32 %_26 to i1, !dbg !6753
  br i1 %20, label %bb20, label %bb19, !dbg !6753

bb16:                                             ; preds = %bb12
  %_35 = icmp ult i8 %b, -16, !dbg !6754
  br i1 %_35, label %bb25, label %bb26, !dbg !6754

bb20:                                             ; preds = %bb15
  %21 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6752
  %22 = load ptr, ptr %21, align 4, !dbg !6752
  %23 = ptrtoint ptr %22 to i32, !dbg !6752
  %24 = icmp eq i32 %23, 0, !dbg !6752
  %_25 = select i1 %24, i32 0, i32 1, !dbg !6752
  %25 = trunc nuw i32 %_25 to i1, !dbg !6753
  br i1 %25, label %bb21, label %bb19, !dbg !6753

bb19:                                             ; preds = %bb21, %bb20, %bb15
  %26 = load i32, ptr %pos, align 4, !dbg !6755
  %_34.0 = add i32 %26, 3, !dbg !6755
  %_34.1 = icmp ult i32 %_34.0, %26, !dbg !6755
  br i1 %_34.1, label %panic, label %bb24, !dbg !6755

bb21:                                             ; preds = %bb20
  %b2 = load ptr, ptr %_20, align 4, !dbg !6756
  store ptr %b2, ptr %b2.dbg.spill, align 4, !dbg !6756
    #dbg_declare(ptr %b2.dbg.spill, !6715, !DIExpression(), !6757)
  %27 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6758
  %b3 = load ptr, ptr %27, align 4, !dbg !6758
  store ptr %b3, ptr %b3.dbg.spill, align 4, !dbg !6758
    #dbg_declare(ptr %b3.dbg.spill, !6717, !DIExpression(), !6759)
  %_30 = load i8, ptr %b2, align 1, !dbg !6760
  %_29 = icmp uge i8 %_30, -96, !dbg !6760
  br i1 %_29, label %bb22, label %bb19, !dbg !6760

bb22:                                             ; preds = %bb21
  %_50 = load ptr, ptr %_20, align 4, !dbg !6756
  %b21 = load i8, ptr %_50, align 1, !dbg !6756
  store i8 %b21, ptr %b2.dbg.spill2, align 1, !dbg !6756
    #dbg_declare(ptr %b2.dbg.spill2, !6713, !DIExpression(), !6757)
  %28 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !6758
  %_51 = load ptr, ptr %28, align 4, !dbg !6758
  %b33 = load i8, ptr %_51, align 1, !dbg !6758
  store i8 %b33, ptr %b3.dbg.spill4, align 1, !dbg !6758
    #dbg_declare(ptr %b3.dbg.spill4, !6716, !DIExpression(), !6759)
  %_32 = load i32, ptr %pos, align 4, !dbg !6761
; call core::wtf8::decode_surrogate
  %_33 = call i16 @_ZN4core4wtf816decode_surrogate17h7fef71ac8b53fc15E(i8 %b21, i8 %b33) #17, !dbg !6762
  %29 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6763
  store i32 %_32, ptr %29, align 4, !dbg !6763
  %30 = getelementptr inbounds i8, ptr %29, i32 4, !dbg !6763
  store i16 %_33, ptr %30, align 4, !dbg !6763
  store i32 1, ptr %_0, align 4, !dbg !6763
  br label %bb34, !dbg !6764

bb34:                                             ; preds = %bb7, %bb22
  ret void, !dbg !6766

bb24:                                             ; preds = %bb19
  store i32 %_34.0, ptr %pos, align 4, !dbg !6755
  br label %bb2, !dbg !6767

panic:                                            ; preds = %bb19
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_9a52d1bb75af0980e0517cfec604041e) #18, !dbg !6755
  unreachable, !dbg !6755

bb26:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_41 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6768
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_43 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6769
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_45 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6770
  %31 = load i32, ptr %pos, align 4, !dbg !6771
  %_47.0 = add i32 %31, 4, !dbg !6771
  %_47.1 = icmp ult i32 %_47.0, %31, !dbg !6771
  br i1 %_47.1, label %panic5, label %bb33, !dbg !6771

bb25:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_36 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6772
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_38 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4 %iter) #17, !dbg !6773
  %32 = load i32, ptr %pos, align 4, !dbg !6774
  %_40.0 = add i32 %32, 3, !dbg !6774
  %_40.1 = icmp ult i32 %_40.0, %32, !dbg !6774
  br i1 %_40.1, label %panic6, label %bb29, !dbg !6774

bb33:                                             ; preds = %bb26
  store i32 %_47.0, ptr %pos, align 4, !dbg !6771
  br label %bb2, !dbg !6775

panic5:                                           ; preds = %bb26
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_c66c0f2d9650f5f24f63645533076454) #18, !dbg !6771
  unreachable, !dbg !6771

bb29:                                             ; preds = %bb25
  store i32 %_40.0, ptr %pos, align 4, !dbg !6774
  br label %bb2, !dbg !6775

panic6:                                           ; preds = %bb25
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_92888cb7a4167958b4d53f5a0bf06535) #18, !dbg !6774
  unreachable, !dbg !6774

bb14:                                             ; preds = %bb11
  store i32 %_19.0, ptr %pos, align 4, !dbg !6749
  br label %bb2, !dbg !6776

panic7:                                           ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_33f2d9b83c16d450a5bfa80b42ce6f02) #18, !dbg !6749
  unreachable, !dbg !6749

bb10:                                             ; preds = %bb8
  store i32 %_15.0, ptr %pos, align 4, !dbg !6746
  br label %bb2, !dbg !6777

panic8:                                           ; preds = %bb8
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_045e7a240c0da05c38dad2337ece0743) #18, !dbg !6746
  unreachable, !dbg !6746

bb5:                                              ; No predecessors!
  unreachable, !dbg !6739
}

; core::wtf8::Wtf8::from_bytes_unchecked
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core4wtf84Wtf820from_bytes_unchecked17h0b03043889451617E(ptr align 1 %value.0, i32 %value.1) unnamed_addr #2 !dbg !6778 {
start:
  %value.dbg.spill = alloca [8 x i8], align 4
  store ptr %value.0, ptr %value.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %value.dbg.spill, i32 4
  store i32 %value.1, ptr %0, align 4
    #dbg_declare(ptr %value.dbg.spill, !6783, !DIExpression(), !6784)
  %1 = insertvalue { ptr, i32 } poison, ptr %value.0, 0, !dbg !6785
  %2 = insertvalue { ptr, i32 } %1, i32 %value.1, 1, !dbg !6785
  ret { ptr, i32 } %2, !dbg !6785
}

; core::wtf8::Wtf8::from_mut_bytes_unchecked
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core4wtf84Wtf824from_mut_bytes_unchecked17hceb39cf6c353907fE(ptr align 1 %value.0, i32 %value.1) unnamed_addr #2 !dbg !6786 {
start:
  %value.dbg.spill = alloca [8 x i8], align 4
  store ptr %value.0, ptr %value.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %value.dbg.spill, i32 4
  store i32 %value.1, ptr %0, align 4
    #dbg_declare(ptr %value.dbg.spill, !6795, !DIExpression(), !6796)
  %1 = insertvalue { ptr, i32 } poison, ptr %value.0, 0, !dbg !6797
  %2 = insertvalue { ptr, i32 } %1, i32 %value.1, 1, !dbg !6797
  ret { ptr, i32 } %2, !dbg !6797
}

; core::wtf8::Wtf8::len
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4wtf84Wtf83len17h6b8ffe7c2e815550E(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !6798 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6803, !DIExpression(), !6804)
  ret i32 %self.1, !dbg !6805
}

; core::wtf8::Wtf8::as_bytes
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !6806 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !6811, !DIExpression(), !6812)
  %1 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !6813
  %2 = insertvalue { ptr, i32 } %1, i32 %self.1, 1, !dbg !6813
  ret { ptr, i32 } %2, !dbg !6813
}

; core::wtf8::CodePoint::from_u32_unchecked
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4wtf89CodePoint18from_u32_unchecked17hb8f3683f824849b5E(i32 %value) unnamed_addr #2 !dbg !6814 {
start:
  %value.dbg.spill = alloca [4 x i8], align 4
  store i32 %value, ptr %value.dbg.spill, align 4
    #dbg_declare(ptr %value.dbg.spill, !6822, !DIExpression(), !6823)
; call core::num::niche_types::CodePointInner::new_unchecked
  %_2 = call i32 @_ZN4core3num11niche_types14CodePointInner13new_unchecked17h8a3fdb38740dbe76E(i32 %value) #17, !dbg !6824
  ret i32 %_2, !dbg !6825
}

; core::wtf8::CodePoint::to_u32
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4wtf89CodePoint6to_u3217h02d6270e7c09274aE(ptr align 4 %self) unnamed_addr #2 !dbg !6826 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6832, !DIExpression(), !6833)
  %_2 = load i32, ptr %self, align 4, !dbg !6834
; call core::num::niche_types::CodePointInner::as_inner
  %_0 = call i32 @_ZN4core3num11niche_types14CodePointInner8as_inner17h532c15cb190b5a36E(i32 %_2) #17, !dbg !6835
  ret i32 %_0, !dbg !6836
}

; core::wtf8::CodePoint::from_char
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4wtf89CodePoint9from_char17hdb05d5e5a71cbfebE(i32 %value) unnamed_addr #2 !dbg !6837 {
start:
  %value.dbg.spill = alloca [4 x i8], align 4
  store i32 %value, ptr %value.dbg.spill, align 4
    #dbg_declare(ptr %value.dbg.spill, !6842, !DIExpression(), !6843)
; call core::wtf8::CodePoint::from_u32_unchecked
  %_0 = call i32 @_ZN4core4wtf89CodePoint18from_u32_unchecked17hb8f3683f824849b5E(i32 %value) #17, !dbg !6844
  ret i32 %_0, !dbg !6845
}

; core::alloc::layout::size_align
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout10size_align17h043df471973d8cceE() unnamed_addr #1 !dbg !6846 {
start:
  %0 = insertvalue { i32, i32 } poison, i32 8, 0, !dbg !6861
  %1 = insertvalue { i32, i32 } %0, i32 4, 1, !dbg !6861
  ret { i32, i32 } %1, !dbg !6861
}

; core::alloc::layout::size_align
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout10size_align17h0c77b4273ffd08e1E() unnamed_addr #1 !dbg !6862 {
start:
  %0 = insertvalue { i32, i32 } poison, i32 8, 0, !dbg !6870
  %1 = insertvalue { i32, i32 } %0, i32 4, 1, !dbg !6870
  ret { i32, i32 } %1, !dbg !6870
}

; core::alloc::layout::Layout::pad_to_align
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5alloc6layout6Layout12pad_to_align17hd6bb20c13501b721E(ptr align 4 %self) unnamed_addr #2 !dbg !6871 {
start:
  %new_size.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6876, !DIExpression(), !6879)
  %_3 = load i32, ptr %self, align 4, !dbg !6880
; call core::alloc::layout::Layout::size_rounded_up_to_custom_align
  %new_size = call i32 @_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17ha0b8d205b201db59E(ptr align 4 %self, i32 %_3) #17, !dbg !6881
  store i32 %new_size, ptr %new_size.dbg.spill, align 4, !dbg !6881
    #dbg_declare(ptr %new_size.dbg.spill, !6877, !DIExpression(), !6882)
; call core::alloc::layout::Layout::align
  %_4 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %self) #17, !dbg !6883
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %new_size, i32 %_4, ptr align 4 @alloc_3453a4f84abb7e9d90083a1e00d413d5) #17, !dbg !6884
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !6884
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !6884
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !6885
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !6885
  ret { i32, i32 } %2, !dbg !6885
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout6Layout13for_value_raw17h09860ca8dbc1ac9cE(ptr %t.0, i32 %t.1) unnamed_addr #1 !dbg !6886 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %t.dbg.spill = alloca [8 x i8], align 4
  store ptr %t.0, ptr %t.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4
  store i32 %t.1, ptr %0, align 4
    #dbg_declare(ptr %t.dbg.spill, !6891, !DIExpression(), !6895)
; call core::mem::size_of_val_raw
  %_5 = call i32 @_ZN4core3mem15size_of_val_raw17h8c1d2cf78d5527b3E(ptr %t.0, i32 %t.1) #17, !dbg !6896
; call core::mem::align_of_val_raw
  %_6 = call i32 @_ZN4core3mem16align_of_val_raw17h8401cc9a1dbaf96cE(ptr %t.0, i32 %t.1) #17, !dbg !6897
  store i32 %_5, ptr %size.dbg.spill, align 4, !dbg !6898
    #dbg_declare(ptr %size.dbg.spill, !6892, !DIExpression(), !6899)
  store i32 %_6, ptr %align.dbg.spill, align 4, !dbg !6900
    #dbg_declare(ptr %align.dbg.spill, !6894, !DIExpression(), !6901)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %_5, i32 %_6, ptr align 4 @alloc_6dcff38ecac6deb22cc28f6145ba0975) #17, !dbg !6902
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !6902
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !6902
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !6903
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !6903
  ret { i32, i32 } %3, !dbg !6903
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout6Layout13for_value_raw17h24b292b48d264a7cE(ptr %t.0, i32 %t.1) unnamed_addr #1 !dbg !6904 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %t.dbg.spill = alloca [8 x i8], align 4
  store ptr %t.0, ptr %t.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4
  store i32 %t.1, ptr %0, align 4
    #dbg_declare(ptr %t.dbg.spill, !6909, !DIExpression(), !6913)
; call core::mem::size_of_val_raw
  %_5 = call i32 @_ZN4core3mem15size_of_val_raw17h7b5f9bff9272d22dE(ptr %t.0, i32 %t.1) #17, !dbg !6914
; call core::mem::align_of_val_raw
  %_6 = call i32 @_ZN4core3mem16align_of_val_raw17h0728738b66176619E(ptr %t.0, i32 %t.1) #17, !dbg !6915
  store i32 %_5, ptr %size.dbg.spill, align 4, !dbg !6916
    #dbg_declare(ptr %size.dbg.spill, !6910, !DIExpression(), !6917)
  store i32 %_6, ptr %align.dbg.spill, align 4, !dbg !6918
    #dbg_declare(ptr %align.dbg.spill, !6912, !DIExpression(), !6919)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %_5, i32 %_6, ptr align 4 @alloc_6dcff38ecac6deb22cc28f6145ba0975) #17, !dbg !6920
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !6920
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !6920
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !6921
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !6921
  ret { i32, i32 } %3, !dbg !6921
}

; core::alloc::layout::Layout::for_value_raw
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout6Layout13for_value_raw17h769be55b98bbc847E(ptr %t.0, i32 %t.1) unnamed_addr #1 !dbg !6922 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %t.dbg.spill = alloca [8 x i8], align 4
  store ptr %t.0, ptr %t.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4
  store i32 %t.1, ptr %0, align 4
    #dbg_declare(ptr %t.dbg.spill, !6927, !DIExpression(), !6931)
; call core::mem::size_of_val_raw
  %_5 = call i32 @_ZN4core3mem15size_of_val_raw17h79109169d713363cE(ptr %t.0, i32 %t.1) #17, !dbg !6932
; call core::mem::align_of_val_raw
  %_6 = call i32 @_ZN4core3mem16align_of_val_raw17h807b65e5d7397ac7E(ptr %t.0, i32 %t.1) #17, !dbg !6933
  store i32 %_5, ptr %size.dbg.spill, align 4, !dbg !6934
    #dbg_declare(ptr %size.dbg.spill, !6928, !DIExpression(), !6935)
  store i32 %_6, ptr %align.dbg.spill, align 4, !dbg !6936
    #dbg_declare(ptr %align.dbg.spill, !6930, !DIExpression(), !6937)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %_5, i32 %_6, ptr align 4 @alloc_6dcff38ecac6deb22cc28f6145ba0975) #17, !dbg !6938
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !6938
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !6938
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !6939
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !6939
  ret { i32, i32 } %3, !dbg !6939
}

; core::alloc::layout::Layout::repeat_packed
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5alloc6layout6Layout13repeat_packed17hd684fbfa65570bc6E(ptr align 4 %self, i32 %n) unnamed_addr #2 !dbg !6940 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %n.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6961, !DIExpression(), !6965)
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !6962, !DIExpression(), !6966)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !6967
  %_4 = load i32, ptr %0, align 4, !dbg !6967
; call core::num::<impl usize>::checked_mul
  %1 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E"(i32 %_4, i32 %n) #17, !dbg !6968
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !6968
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !6968
  store i32 %2, ptr %_3, align 4, !dbg !6968
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6968
  store i32 %3, ptr %4, align 4, !dbg !6968
  %_5 = load i32, ptr %_3, align 4, !dbg !6967
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6967
  %6 = load i32, ptr %5, align 4, !dbg !6967
  %7 = trunc nuw i32 %_5 to i1, !dbg !6969
  br i1 %7, label %bb2, label %bb3, !dbg !6969

bb2:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !6970
  %size = load i32, ptr %8, align 4, !dbg !6970
  store i32 %size, ptr %size.dbg.spill, align 4, !dbg !6970
    #dbg_declare(ptr %size.dbg.spill, !6963, !DIExpression(), !6970)
  %_7 = load i32, ptr %self, align 4, !dbg !6971
; call core::alloc::layout::Layout::from_size_alignment
  %9 = call { i32, i32 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hc7ff22cca4893d6dE(i32 %size, i32 %_7) #17, !dbg !6972
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !6972
  %11 = extractvalue { i32, i32 } %9, 1, !dbg !6972
  store i32 %10, ptr %_0, align 4, !dbg !6972
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6972
  store i32 %11, ptr %12, align 4, !dbg !6972
  br label %bb4, !dbg !6972

bb3:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !6973
  br label %bb4, !dbg !6974

bb4:                                              ; preds = %bb3, %bb2
  %13 = load i32, ptr %_0, align 4, !dbg !6975
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !6975
  %15 = load i32, ptr %14, align 4, !dbg !6975
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !6975
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !6975
  ret { i32, i32 } %17, !dbg !6975

bb5:                                              ; No predecessors!
  unreachable, !dbg !6976
}

; core::alloc::layout::Layout::padding_needed_for
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core5alloc6layout6Layout18padding_needed_for17h7c7334a8a9cd85d3E(ptr align 4 %self, i32 %align) unnamed_addr #2 !dbg !6977 {
start:
  %len_rounded_up.dbg.spill = alloca [4 x i8], align 4
  %align.dbg.spill2 = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !6982, !DIExpression(), !6988)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !6983, !DIExpression(), !6989)
; call core::ptr::alignment::Alignment::new
  %0 = call i32 @_ZN4core3ptr9alignment9Alignment3new17h269ae4b41cefe36aE(i32 %align) #17, !dbg !6990
  store i32 %0, ptr %_4, align 4, !dbg !6990
  %1 = load i32, ptr %_4, align 4, !dbg !6990
  %2 = icmp eq i32 %1, 0, !dbg !6990
  %_5 = select i1 %2, i32 0, i32 1, !dbg !6990
  %3 = trunc nuw i32 %_5 to i1, !dbg !6991
  br i1 %3, label %bb2, label %bb3, !dbg !6991

bb2:                                              ; preds = %start
  %align1 = load i32, ptr %_4, align 4, !dbg !6992
  store i32 %align1, ptr %align.dbg.spill2, align 4, !dbg !6992
    #dbg_declare(ptr %align.dbg.spill2, !6984, !DIExpression(), !6993)
; call core::alloc::layout::Layout::size_rounded_up_to_custom_align
  %len_rounded_up = call i32 @_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17ha0b8d205b201db59E(ptr align 4 %self, i32 %align1) #17, !dbg !6994
  store i32 %len_rounded_up, ptr %len_rounded_up.dbg.spill, align 4, !dbg !6994
    #dbg_declare(ptr %len_rounded_up.dbg.spill, !6986, !DIExpression(), !6995)
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !6996
  %_7 = load i32, ptr %4, align 4, !dbg !6996
  %5 = sub nuw i32 %len_rounded_up, %_7, !dbg !6997
  store i32 %5, ptr %_0, align 4, !dbg !6997
  br label %bb5, !dbg !6998

bb3:                                              ; preds = %start
  store i32 -1, ptr %_0, align 4, !dbg !6999
  br label %bb5, !dbg !7000

bb5:                                              ; preds = %bb3, %bb2
  %6 = load i32, ptr %_0, align 4, !dbg !6998
  ret i32 %6, !dbg !6998

bb6:                                              ; No predecessors!
  unreachable, !dbg !7001
}

; core::alloc::layout::Layout::from_size_alignment
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hc7ff22cca4893d6dE(i32 %size, i32 %align) unnamed_addr #2 !dbg !7002 {
start:
  %align.dbg.spill.i = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !7007, !DIExpression(), !7009)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !7008, !DIExpression(), !7010)
  store i32 %align, ptr %align.dbg.spill.i, align 4
    #dbg_declare(ptr %align.dbg.spill.i, !7011, !DIExpression(), !7015)
; call core::ptr::alignment::Alignment::as_usize
  %_5.i = call i32 @_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE(i32 %align) #17, !dbg !7017
  %_0.i = sub nuw i32 -2147483648, %_5.i, !dbg !7018
  %_3 = icmp ugt i32 %size, %_0.i, !dbg !7019
  br i1 %_3, label %bb2, label %bb3, !dbg !7019

bb3:                                              ; preds = %start
  store i32 %align, ptr %_0, align 4, !dbg !7020
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7020
  store i32 %size, ptr %0, align 4, !dbg !7020
  br label %bb4, !dbg !7021

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !7022
  br label %bb4, !dbg !7021

bb4:                                              ; preds = %bb2, %bb3
  %1 = load i32, ptr %_0, align 4, !dbg !7021
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7021
  %3 = load i32, ptr %2, align 4, !dbg !7021
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !7021
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !7021
  ret { i32, i32 } %5, !dbg !7021
}

; core::alloc::layout::Layout::from_size_align_unchecked
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %size, i32 %align, ptr align 4 %0) unnamed_addr #2 !dbg !7023 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !7028, !DIExpression(), !7030)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !7029, !DIExpression(), !7031)
  br label %bb1, !dbg !7032

bb1:                                              ; preds = %start
; call core::alloc::layout::Layout::from_size_align_unchecked::precondition_check
  call void @_ZN4core5alloc6layout6Layout25from_size_align_unchecked18precondition_check17ha019ed5da67ab6f9E(i32 %size, i32 %align, ptr align 4 %0) #17, !dbg !7034
  br label %bb2, !dbg !7034

bb2:                                              ; preds = %bb1
  %1 = insertvalue { i32, i32 } poison, i32 %align, 0, !dbg !7035
  %2 = insertvalue { i32, i32 } %1, i32 %size, 1, !dbg !7035
  ret { i32, i32 } %2, !dbg !7035
}

; core::alloc::layout::Layout::from_size_align_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5alloc6layout6Layout25from_size_align_unchecked18precondition_check17ha019ed5da67ab6f9E(i32 %size, i32 %align, ptr align 4 %0) unnamed_addr #2 !dbg !7036 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !7040, !DIExpression(), !7044)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !7041, !DIExpression(), !7044)
  store ptr @alloc_1be5ea12ba708d9a11b6e93a7d387a75, ptr %msg.dbg.spill, align 4, !dbg !7045
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !7045
  store i32 281, ptr %1, align 4, !dbg !7045
    #dbg_declare(ptr %msg.dbg.spill, !7042, !DIExpression(), !7045)
; call core::alloc::layout::Layout::is_size_align_valid
  %_3 = call zeroext i1 @_ZN4core5alloc6layout6Layout19is_size_align_valid17h77ec66f10f926786E(i32 %size, i32 %align) #17, !dbg !7046
  br i1 %_3, label %bb2, label %bb3, !dbg !7046

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_7, i32 0, !dbg !7048
  store ptr @alloc_1be5ea12ba708d9a11b6e93a7d387a75, ptr %2, align 4, !dbg !7048
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !7048
  store i32 281, ptr %3, align 4, !dbg !7048
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 %_7) #17, !dbg !7049
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_5, i1 zeroext false, ptr align 4 %0) #18, !dbg !7050
  unreachable, !dbg !7050

bb2:                                              ; preds = %start
  ret void, !dbg !7051
}

; core::alloc::layout::Layout::size_rounded_up_to_custom_align
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17ha0b8d205b201db59E(ptr align 4 %self, i32 %align) unnamed_addr #2 !dbg !7052 {
start:
  %size_rounded_up.dbg.spill = alloca [4 x i8], align 4
  %align_m1.dbg.spill = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7057, !DIExpression(), !7063)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !7058, !DIExpression(), !7064)
; call core::ptr::alignment::Alignment::as_usize
  %_4 = call i32 @_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE(i32 %align) #17, !dbg !7065
  %align_m1 = sub nuw i32 %_4, 1, !dbg !7066
  store i32 %align_m1, ptr %align_m1.dbg.spill, align 4, !dbg !7066
    #dbg_declare(ptr %align_m1.dbg.spill, !7059, !DIExpression(), !7067)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7068
  %_6 = load i32, ptr %0, align 4, !dbg !7068
  %_5 = add nuw i32 %_6, %align_m1, !dbg !7069
  %_7 = xor i32 %align_m1, -1, !dbg !7070
  %size_rounded_up = and i32 %_5, %_7, !dbg !7069
  store i32 %size_rounded_up, ptr %size_rounded_up.dbg.spill, align 4, !dbg !7069
    #dbg_declare(ptr %size_rounded_up.dbg.spill, !7061, !DIExpression(), !7071)
  ret i32 %size_rounded_up, !dbg !7072
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout6Layout3new17h8411cd06de775e47E() unnamed_addr #2 !dbg !7073 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4, !dbg !7081
  %size.dbg.spill = alloca [4 x i8], align 4, !dbg !7081
; call core::alloc::layout::size_align
  %0 = call { i32, i32 } @_ZN4core5alloc6layout10size_align17h043df471973d8cceE() #17, !dbg !7081
  %_3.0 = extractvalue { i32, i32 } %0, 0, !dbg !7081
  %_3.1 = extractvalue { i32, i32 } %0, 1, !dbg !7081
  store i32 %_3.0, ptr %size.dbg.spill, align 4, !dbg !7082
    #dbg_declare(ptr %size.dbg.spill, !7078, !DIExpression(), !7083)
  store i32 %_3.1, ptr %align.dbg.spill, align 4, !dbg !7084
    #dbg_declare(ptr %align.dbg.spill, !7080, !DIExpression(), !7085)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %_3.0, i32 %_3.1, ptr align 4 @alloc_38a335a089e9b7c14a96d53c27d949d2) #17, !dbg !7086
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !7086
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !7086
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !7087
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !7087
  ret { i32, i32 } %3, !dbg !7087
}

; core::alloc::layout::Layout::new
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout6Layout3new17h9702638446ad85a0E() unnamed_addr #2 !dbg !7088 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4, !dbg !7094
  %size.dbg.spill = alloca [4 x i8], align 4, !dbg !7094
; call core::alloc::layout::size_align
  %0 = call { i32, i32 } @_ZN4core5alloc6layout10size_align17h0c77b4273ffd08e1E() #17, !dbg !7094
  %_3.0 = extractvalue { i32, i32 } %0, 0, !dbg !7094
  %_3.1 = extractvalue { i32, i32 } %0, 1, !dbg !7094
  store i32 %_3.0, ptr %size.dbg.spill, align 4, !dbg !7095
    #dbg_declare(ptr %size.dbg.spill, !7091, !DIExpression(), !7096)
  store i32 %_3.1, ptr %align.dbg.spill, align 4, !dbg !7097
    #dbg_declare(ptr %align.dbg.spill, !7093, !DIExpression(), !7098)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %_3.0, i32 %_3.1, ptr align 4 @alloc_38a335a089e9b7c14a96d53c27d949d2) #17, !dbg !7099
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !7099
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !7099
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !7100
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !7100
  ret { i32, i32 } %3, !dbg !7100
}

; core::alloc::layout::Layout::size
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %self) unnamed_addr #2 !dbg !7101 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7106, !DIExpression(), !7107)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7108
  %_0 = load i32, ptr %0, align 4, !dbg !7108
  ret i32 %_0, !dbg !7109
}

; core::alloc::layout::Layout::align
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %self) unnamed_addr #2 !dbg !7110 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7113, !DIExpression(), !7114)
  %_2 = load i32, ptr %self, align 4, !dbg !7115
; call core::ptr::alignment::Alignment::as_usize
  %_0 = call i32 @_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE(i32 %_2) #17, !dbg !7116
  ret i32 %_0, !dbg !7117
}

; core::alloc::layout::Layout::array
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @_ZN4core5alloc6layout6Layout5array17hbb3a65fd97d1bfd1E(i32 %n) unnamed_addr #2 !dbg !7118 {
start:
  %n.dbg.spill = alloca [4 x i8], align 4
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !7123, !DIExpression(), !7124)
; call core::alloc::layout::Layout::array::inner
  %0 = call { i32, i32 } @_ZN4core5alloc6layout6Layout5array5inner17hf986857a41e92cb7E(i32 1, i32 1, i32 %n) #17, !dbg !7125
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !7125
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !7125
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !7126
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !7126
  ret { i32, i32 } %2, !dbg !7126
}

; core::alloc::layout::Layout::array::inner
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5alloc6layout6Layout5array5inner17hf986857a41e92cb7E(i32 %element_layout.0, i32 %element_layout.1, i32 %n) unnamed_addr #2 !dbg !7127 {
start:
  %align.dbg.spill.i = alloca [4 x i8], align 4
  %array_size.dbg.spill = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %element_size.dbg.spill = alloca [4 x i8], align 4
  %n.dbg.spill = alloca [4 x i8], align 4
  %element_layout.dbg.spill = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i32 %element_layout.0, ptr %element_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %element_layout.dbg.spill, i32 4
  store i32 %element_layout.1, ptr %0, align 4
    #dbg_declare(ptr %element_layout.dbg.spill, !7132, !DIExpression(), !7139)
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !7133, !DIExpression(), !7140)
  store i32 %element_layout.1, ptr %element_size.dbg.spill, align 4, !dbg !7141
    #dbg_declare(ptr %element_size.dbg.spill, !7134, !DIExpression(), !7142)
  store i32 %element_layout.0, ptr %align.dbg.spill, align 4, !dbg !7143
    #dbg_declare(ptr %align.dbg.spill, !7136, !DIExpression(), !7144)
  %1 = icmp eq i32 %element_layout.1, 0, !dbg !7145
  br i1 %1, label %bb5, label %bb1, !dbg !7145

bb5:                                              ; preds = %bb3, %start
  %array_size = mul nuw i32 %element_layout.1, %n, !dbg !7146
  store i32 %array_size, ptr %array_size.dbg.spill, align 4, !dbg !7146
    #dbg_declare(ptr %array_size.dbg.spill, !7137, !DIExpression(), !7147)
; call core::ptr::alignment::Alignment::as_usize
  %_11 = call i32 @_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE(i32 %element_layout.0) #17, !dbg !7148
; call core::alloc::layout::Layout::from_size_align_unchecked
  %2 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %array_size, i32 %_11, ptr align 4 @alloc_a231eb0541291d8f8d42de2adf715ec2) #17, !dbg !7149
  %_10.0 = extractvalue { i32, i32 } %2, 0, !dbg !7149
  %_10.1 = extractvalue { i32, i32 } %2, 1, !dbg !7149
  store i32 %_10.0, ptr %_0, align 4, !dbg !7150
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7150
  store i32 %_10.1, ptr %3, align 4, !dbg !7150
  br label %bb8, !dbg !7151

bb1:                                              ; preds = %start
  store i32 %element_layout.0, ptr %align.dbg.spill.i, align 4
    #dbg_declare(ptr %align.dbg.spill.i, !7011, !DIExpression(), !7152)
; call core::ptr::alignment::Alignment::as_usize
  %_5.i = call i32 @_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE(i32 %element_layout.0) #17, !dbg !7154
  %_0.i = sub nuw i32 -2147483648, %_5.i, !dbg !7155
  %_8 = icmp eq i32 %element_layout.1, 0, !dbg !7156
  br i1 %_8, label %panic, label %bb3, !dbg !7156

bb3:                                              ; preds = %bb1
  %_6 = udiv i32 %_0.i, %element_layout.1, !dbg !7156
  %_5 = icmp ugt i32 %n, %_6, !dbg !7157
  br i1 %_5, label %bb4, label %bb5, !dbg !7157

panic:                                            ; preds = %bb1
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h5051c6ff4ea8e3faE(ptr align 4 @alloc_5a96614c406c6146cfd11eb1fd8ccaac) #18, !dbg !7156
  unreachable, !dbg !7156

bb4:                                              ; preds = %bb3
  store i32 0, ptr %_0, align 4, !dbg !7158
  br label %bb8, !dbg !7151

bb8:                                              ; preds = %bb4, %bb5
  %4 = load i32, ptr %_0, align 4, !dbg !7151
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7151
  %6 = load i32, ptr %5, align 4, !dbg !7151
  %7 = insertvalue { i32, i32 } poison, i32 %4, 0, !dbg !7151
  %8 = insertvalue { i32, i32 } %7, i32 %6, 1, !dbg !7151
  ret { i32, i32 } %8, !dbg !7151
}

; core::alloc::layout::Layout::extend
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5alloc6layout6Layout6extend17h66fe036cba65f0e0E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self, i32 %next.0, i32 %next.1) unnamed_addr #2 !dbg !7159 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  %new_size.dbg.spill = alloca [4 x i8], align 4
  %offset.dbg.spill = alloca [4 x i8], align 4
  %new_align.dbg.spill = alloca [4 x i8], align 4
  %next.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_13 = alloca [12 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7183, !DIExpression(), !7193)
  store i32 %next.0, ptr %next.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %next.dbg.spill, i32 4
  store i32 %next.1, ptr %0, align 4
    #dbg_declare(ptr %next.dbg.spill, !7184, !DIExpression(), !7194)
  %_4 = load i32, ptr %self, align 4, !dbg !7195
; call core::ptr::alignment::Alignment::max
  %new_align = call i32 @_ZN4core3ptr9alignment9Alignment3max17he5095f248a36770fE(i32 %_4, i32 %next.0) #17, !dbg !7196
  store i32 %new_align, ptr %new_align.dbg.spill, align 4, !dbg !7196
    #dbg_declare(ptr %new_align.dbg.spill, !7185, !DIExpression(), !7197)
; call core::alloc::layout::Layout::size_rounded_up_to_custom_align
  %offset = call i32 @_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17ha0b8d205b201db59E(ptr align 4 %self, i32 %next.0) #17, !dbg !7198
  store i32 %offset, ptr %offset.dbg.spill, align 4, !dbg !7198
    #dbg_declare(ptr %offset.dbg.spill, !7187, !DIExpression(), !7199)
  %new_size = add nuw i32 %offset, %next.1, !dbg !7200
  store i32 %new_size, ptr %new_size.dbg.spill, align 4, !dbg !7200
    #dbg_declare(ptr %new_size.dbg.spill, !7189, !DIExpression(), !7201)
; call core::alloc::layout::Layout::from_size_alignment
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout19from_size_alignment17hc7ff22cca4893d6dE(i32 %new_size, i32 %new_align) #17, !dbg !7202
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !7202
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !7202
  store i32 %2, ptr %_10, align 4, !dbg !7202
  %4 = getelementptr inbounds i8, ptr %_10, i32 4, !dbg !7202
  store i32 %3, ptr %4, align 4, !dbg !7202
  %5 = load i32, ptr %_10, align 4, !dbg !7202
  %6 = getelementptr inbounds i8, ptr %_10, i32 4, !dbg !7202
  %7 = load i32, ptr %6, align 4, !dbg !7202
  %8 = icmp eq i32 %5, 0, !dbg !7202
  %_11 = select i1 %8, i32 1, i32 0, !dbg !7202
  %9 = trunc nuw i32 %_11 to i1, !dbg !7203
  br i1 %9, label %bb5, label %bb4, !dbg !7203

bb5:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !7204
  br label %bb6, !dbg !7205

bb4:                                              ; preds = %start
  %layout.0 = load i32, ptr %_10, align 4, !dbg !7206
  %10 = getelementptr inbounds i8, ptr %_10, i32 4, !dbg !7206
  %layout.1 = load i32, ptr %10, align 4, !dbg !7206
  store i32 %layout.0, ptr %layout.dbg.spill, align 4, !dbg !7206
  %11 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4, !dbg !7206
  store i32 %layout.1, ptr %11, align 4, !dbg !7206
    #dbg_declare(ptr %layout.dbg.spill, !7191, !DIExpression(), !7206)
  store i32 %layout.0, ptr %_13, align 4, !dbg !7207
  %12 = getelementptr inbounds i8, ptr %_13, i32 4, !dbg !7207
  store i32 %layout.1, ptr %12, align 4, !dbg !7207
  %13 = getelementptr inbounds i8, ptr %_13, i32 8, !dbg !7207
  store i32 %offset, ptr %13, align 4, !dbg !7207
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_13, i32 12, i1 false), !dbg !7208
  br label %bb6, !dbg !7205

bb6:                                              ; preds = %bb5, %bb4
  ret void, !dbg !7209

bb7:                                              ; No predecessors!
  unreachable, !dbg !7210
}

; core::alloc::layout::Layout::repeat
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5alloc6layout6Layout6repeat17h3713722149b2470fE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self, i32 %n) unnamed_addr #2 !dbg !7211 {
start:
  %repeated.dbg.spill = alloca [8 x i8], align 4
  %n.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [12 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  %padded = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7216, !DIExpression(), !7222)
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !7217, !DIExpression(), !7223)
    #dbg_declare(ptr %padded, !7218, !DIExpression(), !7224)
; call core::alloc::layout::Layout::pad_to_align
  %0 = call { i32, i32 } @_ZN4core5alloc6layout6Layout12pad_to_align17hd6bb20c13501b721E(ptr align 4 %self) #17, !dbg !7225
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !7225
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !7225
  store i32 %1, ptr %padded, align 4, !dbg !7225
  %3 = getelementptr inbounds i8, ptr %padded, i32 4, !dbg !7225
  store i32 %2, ptr %3, align 4, !dbg !7225
; call core::alloc::layout::Layout::repeat_packed
  %4 = call { i32, i32 } @_ZN4core5alloc6layout6Layout13repeat_packed17hd684fbfa65570bc6E(ptr align 4 %padded, i32 %n) #17, !dbg !7226
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !7226
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !7226
  store i32 %5, ptr %_4, align 4, !dbg !7226
  %7 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !7226
  store i32 %6, ptr %7, align 4, !dbg !7226
  %8 = load i32, ptr %_4, align 4, !dbg !7227
  %9 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !7227
  %10 = load i32, ptr %9, align 4, !dbg !7227
  %11 = icmp eq i32 %8, 0, !dbg !7227
  %_6 = select i1 %11, i32 1, i32 0, !dbg !7227
  %12 = trunc nuw i32 %_6 to i1, !dbg !7228
  br i1 %12, label %bb5, label %bb3, !dbg !7228

bb5:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !7229
  br label %bb6, !dbg !7230

bb3:                                              ; preds = %start
  %repeated.0 = load i32, ptr %_4, align 4, !dbg !7231
  %13 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !7231
  %repeated.1 = load i32, ptr %13, align 4, !dbg !7231
  store i32 %repeated.0, ptr %repeated.dbg.spill, align 4, !dbg !7231
  %14 = getelementptr inbounds i8, ptr %repeated.dbg.spill, i32 4, !dbg !7231
  store i32 %repeated.1, ptr %14, align 4, !dbg !7231
    #dbg_declare(ptr %repeated.dbg.spill, !7220, !DIExpression(), !7231)
; call core::alloc::layout::Layout::size
  %_9 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %padded) #17, !dbg !7232
  store i32 %repeated.0, ptr %_8, align 4, !dbg !7233
  %15 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !7233
  store i32 %repeated.1, ptr %15, align 4, !dbg !7233
  %16 = getelementptr inbounds i8, ptr %_8, i32 8, !dbg !7233
  store i32 %_9, ptr %16, align 4, !dbg !7233
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_8, i32 12, i1 false), !dbg !7234
  br label %bb6, !dbg !7230

bb6:                                              ; preds = %bb5, %bb3
  ret void, !dbg !7235

bb7:                                              ; No predecessors!
  unreachable, !dbg !7236
}

; core::alloc::layout::Layout::dangling
; Function Attrs: inlinehint nounwind
define internal ptr @_ZN4core5alloc6layout6Layout8dangling17h4aeee76b033d9204E(ptr align 4 %self) unnamed_addr #2 !dbg !7237 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7242, !DIExpression(), !7243)
  %_3 = load i32, ptr %self, align 4, !dbg !7244
; call core::ptr::alignment::Alignment::as_nonzero
  %_2 = call i32 @_ZN4core3ptr9alignment9Alignment10as_nonzero17h91cf2c4e24e67346E(i32 %_3) #17, !dbg !7245
; call core::ptr::non_null::NonNull<T>::without_provenance
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hb3cf249ff93074e0E"(i32 %_2) #17, !dbg !7246
  ret ptr %_0, !dbg !7247
}

; core::alloc::layout::Layout::alignment
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core5alloc6layout6Layout9alignment17hcd7615b9c84f4810E(ptr align 4 %self) unnamed_addr #2 !dbg !7248 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7253, !DIExpression(), !7254)
  %_0 = load i32, ptr %self, align 4, !dbg !7255
  ret i32 %_0, !dbg !7256
}

; core::error::Error::description
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN4core5error5Error11description17h2c60e9cf1692feeaE(ptr align 4 %self) unnamed_addr #1 !dbg !7257 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7264, !DIExpression(), !7267)
  ret { ptr, i32 } { ptr @alloc_04d7ce44d7c86a9a02b346ab945bf155, i32 40 }, !dbg !7268
}

; core::error::Error::description
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN4core5error5Error11description17he14e8c6f3ee22003E(ptr align 4 %self) unnamed_addr #1 !dbg !7269 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7273, !DIExpression(), !7276)
  ret { ptr, i32 } { ptr @alloc_04d7ce44d7c86a9a02b346ab945bf155, i32 40 }, !dbg !7277
}

; core::error::Error::cause
; Function Attrs: nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error5cause17h70f54b427eb43c4cE(ptr align 4 %self) unnamed_addr #1 !dbg !7278 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7305, !DIExpression(), !7306)
; call core::error::Error::source
  %0 = call { ptr, ptr } @_ZN4core5error5Error6source17hf403cbc540d20139E(ptr align 4 %self) #17, !dbg !7307
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !7307
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !7307
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !7308
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !7308
  ret { ptr, ptr } %2, !dbg !7308
}

; core::error::Error::cause
; Function Attrs: nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error5cause17h8f5d85379d4ac393E(ptr align 4 %self) unnamed_addr #1 !dbg !7309 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7313, !DIExpression(), !7314)
; call core::error::Error::source
  %0 = call { ptr, ptr } @_ZN4core5error5Error6source17h9a1b86d2bfee8a73E(ptr align 4 %self) #17, !dbg !7315
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !7315
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !7315
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !7316
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !7316
  ret { ptr, ptr } %2, !dbg !7316
}

; core::error::Error::source
; Function Attrs: nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error6source17h9a1b86d2bfee8a73E(ptr align 4 %self) unnamed_addr #1 !dbg !7317 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7319, !DIExpression(), !7320)
  ret { ptr, ptr } { ptr null, ptr undef }, !dbg !7321
}

; core::error::Error::source
; Function Attrs: nounwind
define dso_local { ptr, ptr } @_ZN4core5error5Error6source17hf403cbc540d20139E(ptr align 4 %self) unnamed_addr #1 !dbg !7322 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7324, !DIExpression(), !7325)
  ret { ptr, ptr } { ptr null, ptr undef }, !dbg !7326
}

; core::error::Error::provide
; Function Attrs: nounwind
define dso_local void @_ZN4core5error5Error7provide17h421f2a69dcbdf26fE(ptr align 4 %self, ptr align 4 %request.0, ptr align 4 %request.1) unnamed_addr #1 !dbg !7327 {
start:
  %request.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7350, !DIExpression(), !7352)
  store ptr %request.0, ptr %request.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %request.dbg.spill, i32 4
  store ptr %request.1, ptr %0, align 4
    #dbg_declare(ptr %request.dbg.spill, !7351, !DIExpression(), !7353)
  ret void, !dbg !7354
}

; core::error::Error::provide
; Function Attrs: nounwind
define dso_local void @_ZN4core5error5Error7provide17h804af5c6ecda1838E(ptr align 4 %self, ptr align 4 %request.0, ptr align 4 %request.1) unnamed_addr #1 !dbg !7355 {
start:
  %request.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7359, !DIExpression(), !7361)
  store ptr %request.0, ptr %request.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %request.dbg.spill, i32 4
  store ptr %request.1, ptr %0, align 4
    #dbg_declare(ptr %request.dbg.spill, !7360, !DIExpression(), !7362)
  ret void, !dbg !7363
}

; core::error::Error::type_id
; Function Attrs: nounwind
define dso_local void @_ZN4core5error5Error7type_id17h89860cf44f21bc22E(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !7364 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7370, !DIExpression(), !7372)
    #dbg_declare(ptr %_2.dbg.spill, !7371, !DIExpression(), !7373)
; call core::any::TypeId::of
  call void @_ZN4core3any6TypeId2of17h80ececb577e45a52E(ptr sret([16 x i8]) align 4 %_0) #17, !dbg !7374
  ret void, !dbg !7375
}

; core::error::Error::type_id
; Function Attrs: nounwind
define dso_local void @_ZN4core5error5Error7type_id17hb25c7eddb00d2a3bE(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !7376 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !7380, !DIExpression(), !7382)
    #dbg_declare(ptr %_2.dbg.spill, !7381, !DIExpression(), !7383)
; call core::any::TypeId::of
  call void @_ZN4core3any6TypeId2of17h2f39189d873d9981E(ptr sret([16 x i8]) align 4 %_0) #17, !dbg !7384
  ret void, !dbg !7385
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1dd74b4882c2d5a2E"(ptr align 1 %self.0, i32 %self.1, i32 %index, ptr align 4 %0) unnamed_addr #2 !dbg !7386 {
start:
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !7388, !DIExpression(), !7390)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !7389, !DIExpression(), !7391)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %2 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h447b40add29d5986E"(i32 %index, ptr %self.0, i32 %self.1) #17, !dbg !7392
  %_3.0 = extractvalue { ptr, i32 } %2, 0, !dbg !7392
  %_3.1 = extractvalue { ptr, i32 } %2, 1, !dbg !7392
  %3 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !7393
  %4 = insertvalue { ptr, i32 } %3, i32 %_3.1, 1, !dbg !7393
  ret { ptr, i32 } %4, !dbg !7393
}

; core::slice::<impl [T]>::get_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h86dafd40d2594af2E"(ptr align 1 %self.0, i32 %self.1, i32 %index, ptr align 4 %0) unnamed_addr #2 !dbg !7394 {
start:
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !7398, !DIExpression(), !7402)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !7399, !DIExpression(), !7403)
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %2 = call { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h421f68b7de29a1d7E"(i32 %index, ptr %self.0, i32 %self.1) #17, !dbg !7404
  %_3.0 = extractvalue { ptr, i32 } %2, 0, !dbg !7404
  %_3.1 = extractvalue { ptr, i32 } %2, 1, !dbg !7404
  %3 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !7405
  %4 = insertvalue { ptr, i32 } %3, i32 %_3.1, 1, !dbg !7405
  ret { ptr, i32 } %4, !dbg !7405
}

; core::slice::<impl [T]>::align_to_offsets
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16align_to_offsets17hc6d64b8cd185f960E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !7406 {
start:
  %ts_len.dbg.spill = alloca [4 x i8], align 4
  %us_len.dbg.spill = alloca [4 x i8], align 4
  %us.dbg.spill = alloca [4 x i8], align 4
  %ts.dbg.spill = alloca [4 x i8], align 4
  %gcd.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !7410, !DIExpression(), !7423)
  store i32 1, ptr %gcd.dbg.spill, align 4, !dbg !7424
    #dbg_declare(ptr %gcd.dbg.spill, !7411, !DIExpression(), !7425)
  %ts = udiv i32 2, 1, !dbg !7426
  store i32 %ts, ptr %ts.dbg.spill, align 4, !dbg !7426
    #dbg_declare(ptr %ts.dbg.spill, !7413, !DIExpression(), !7427)
  %us = udiv i32 1, 1, !dbg !7428
  store i32 %us, ptr %us.dbg.spill, align 4, !dbg !7428
    #dbg_declare(ptr %us.dbg.spill, !7415, !DIExpression(), !7429)
  %_12 = icmp eq i32 %ts, 0, !dbg !7430
  br i1 %_12, label %panic, label %bb5, !dbg !7430

bb5:                                              ; preds = %start
  %_10 = udiv i32 %self.1, %ts, !dbg !7430
  %1 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_10, i32 %us), !dbg !7430
  %_13.0 = extractvalue { i32, i1 } %1, 0, !dbg !7430
  %_13.1 = extractvalue { i32, i1 } %1, 1, !dbg !7430
  br i1 %_13.1, label %panic1, label %bb6, !dbg !7430

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h5051c6ff4ea8e3faE(ptr align 4 @alloc_31f1d0a1aaf088efaf1abf9f2cd56d8e) #18, !dbg !7430
  unreachable, !dbg !7430

bb6:                                              ; preds = %bb5
  store i32 %_13.0, ptr %us_len.dbg.spill, align 4, !dbg !7430
    #dbg_declare(ptr %us_len.dbg.spill, !7417, !DIExpression(), !7431)
  %_16 = icmp eq i32 %ts, 0, !dbg !7432
  br i1 %_16, label %panic2, label %bb7, !dbg !7432

panic1:                                           ; preds = %bb5
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E(ptr align 4 @alloc_31f1d0a1aaf088efaf1abf9f2cd56d8e) #18, !dbg !7430
  unreachable, !dbg !7430

bb7:                                              ; preds = %bb6
  %ts_len = urem i32 %self.1, %ts, !dbg !7432
  store i32 %ts_len, ptr %ts_len.dbg.spill, align 4, !dbg !7432
    #dbg_declare(ptr %ts_len.dbg.spill, !7419, !DIExpression(), !7433)
  %2 = insertvalue { i32, i32 } poison, i32 %_13.0, 0, !dbg !7434
  %3 = insertvalue { i32, i32 } %2, i32 %ts_len, 1, !dbg !7434
  ret { i32, i32 } %3, !dbg !7434

panic2:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_rem_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17hf7f0dd58d8b45737E(ptr align 4 @alloc_02a34a8db5f5e1aa5bc419079a5bf5d6) #18, !dbg !7432
  unreachable, !dbg !7432
}

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h90fa6615ae1899cfE"(ptr align 1 %self.0, i32 %self.1, i32 %index, ptr align 4 %0) unnamed_addr #2 !dbg !7435 {
start:
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !7443, !DIExpression(), !7446)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !7444, !DIExpression(), !7447)
; call <core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
  %2 = call { ptr, i32 } @"_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h5685335e62eb6191E"(i32 %index, ptr %self.0, i32 %self.1) #17, !dbg !7448
  %_3.0 = extractvalue { ptr, i32 } %2, 0, !dbg !7448
  %_3.1 = extractvalue { ptr, i32 } %2, 1, !dbg !7448
  %3 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !7449
  %4 = insertvalue { ptr, i32 } %3, i32 %_3.1, 1, !dbg !7449
  ret { ptr, i32 } %4, !dbg !7449
}

; core::slice::<impl [T]>::as_chunks_unchecked
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked17hc664e3a446fbe54aE"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %0) unnamed_addr #2 !dbg !7450 {
start:
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %1 = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill, !7454, !DIExpression(), !7457)
; call core::ub_checks::check_language_ub
  %_2 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7458
  br i1 %_2, label %bb2, label %bb3, !dbg !7458

bb3:                                              ; preds = %bb2, %start
  %3 = udiv exact i32 %self.1, 2, !dbg !7460
  store i32 %3, ptr %1, align 4, !dbg !7460
  %new_len = load i32, ptr %1, align 4, !dbg !7460
  store i32 %new_len, ptr %new_len.dbg.spill, align 4, !dbg !7460
    #dbg_declare(ptr %new_len.dbg.spill, !7455, !DIExpression(), !7461)
  store ptr %self.0, ptr %self.dbg.spill.i1, align 4
  %4 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %self.1, ptr %4, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !447, !DIExpression(), !7462)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !7464, !DIExpression(), !7470)
; call core::slice::raw::from_raw_parts
  %5 = call { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17hb912f82c06f6dcbaE(ptr %self.0, i32 %new_len, ptr align 4 %0) #17, !dbg !7472
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !7472
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !7472
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !7473
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !7473
  ret { ptr, i32 } %7, !dbg !7473

bb2:                                              ; preds = %start
; call core::slice::<impl [T]>::as_chunks_unchecked::precondition_check
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked18precondition_check17hc594328cd71589b1E"(i32 2, i32 %self.1, ptr align 4 %0) #17, !dbg !7474
  br label %bb3, !dbg !7474
}

; core::slice::<impl [T]>::as_chunks_unchecked::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked18precondition_check17hc594328cd71589b1E"(i32 %n, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !7475 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %n.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  store i32 %n, ptr %n.dbg.spill, align 4
    #dbg_declare(ptr %n.dbg.spill, !7478, !DIExpression(), !7482)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7479, !DIExpression(), !7482)
  store ptr @alloc_14ffc53cef370592b8278fafba49890b, ptr %msg.dbg.spill, align 4, !dbg !7483
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !7483
  store i32 249, ptr %1, align 4, !dbg !7483
    #dbg_declare(ptr %msg.dbg.spill, !7480, !DIExpression(), !7483)
  %2 = icmp eq i32 %n, 0, !dbg !7484
  br i1 %2, label %bb4, label %bb1, !dbg !7484

bb4:                                              ; preds = %bb1, %start
  %3 = getelementptr inbounds nuw { ptr, i32 }, ptr %_7, i32 0, !dbg !7486
  store ptr @alloc_14ffc53cef370592b8278fafba49890b, ptr %3, align 4, !dbg !7486
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !7486
  store i32 249, ptr %4, align 4, !dbg !7486
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 %_7) #17, !dbg !7487
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_5, i1 zeroext false, ptr align 4 %0) #18, !dbg !7488
  unreachable, !dbg !7488

bb1:                                              ; preds = %start
; call core::num::<impl usize>::is_multiple_of
  %_3 = call zeroext i1 @"_ZN4core3num23_$LT$impl$u20$usize$GT$14is_multiple_of17h666402c515b77d3dE"(i32 %len, i32 %n) #17, !dbg !7489
  br i1 %_3, label %bb3, label %bb4, !dbg !7490

bb3:                                              ; preds = %bb1
  ret void, !dbg !7491
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1d6c4e206d8f8bc2E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !7492 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !7496, !DIExpression(), !7497)
; call core::slice::iter::Iter<T>::new
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h30d8497769b03873E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !7498
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !7498
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !7498
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !7499
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !7499
  ret { ptr, ptr } %3, !dbg !7499
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h747981fe58cbafc4E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !7500 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !7504, !DIExpression(), !7505)
; call core::slice::iter::Iter<T>::new
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17he8c2bbb2cd1bb8e2E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !7506
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !7506
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !7506
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !7507
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !7507
  ret { ptr, ptr } %3, !dbg !7507
}

; core::slice::<impl [T]>::align_to
; Function Attrs: nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17hebffc43b8ef6e788E"(ptr sret([24 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !7508 {
start:
  %self.dbg.spill.i3 = alloca [8 x i8], align 4
  %self.dbg.spill.i2 = alloca [8 x i8], align 4
  %self.dbg.spill.i1 = alloca [8 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ts_len.dbg.spill = alloca [4 x i8], align 4
  %us_len.dbg.spill = alloca [4 x i8], align 4
  %rest.dbg.spill = alloca [8 x i8], align 4
  %left.dbg.spill = alloca [8 x i8], align 4
  %offset.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_17 = alloca [16 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !7521, !DIExpression(), !7532)
  br label %bb1, !dbg !7533

bb1:                                              ; preds = %start
  br label %bb3, !dbg !7534

bb3:                                              ; preds = %bb1
  store ptr %self.0, ptr %self.dbg.spill.i3, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i3, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !447, !DIExpression(), !7535)
  store ptr %self.0, ptr %ptr.dbg.spill, align 4, !dbg !7537
    #dbg_declare(ptr %ptr.dbg.spill, !7522, !DIExpression(), !7538)
; call core::ptr::align_offset
  %offset = call i32 @_ZN4core3ptr12align_offset17h16ec7fcc959379a0E(ptr %self.0, i32 2) #17, !dbg !7539
  store i32 %offset, ptr %offset.dbg.spill, align 4, !dbg !7539
    #dbg_declare(ptr %offset.dbg.spill, !7524, !DIExpression(), !7540)
  %_9 = icmp ugt i32 %offset, %self.1, !dbg !7541
  br i1 %_9, label %bb7, label %bb8, !dbg !7541

bb8:                                              ; preds = %bb3
; call core::slice::<impl [T]>::split_at
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h15cdf9799531bd5dE"(ptr sret([16 x i8]) align 4 %_17, ptr align 1 %self.0, i32 %self.1, i32 %offset, ptr align 4 @alloc_71bf1616a8398ac8b17e3cc1520df00b) #17, !dbg !7542
  %left.0 = load ptr, ptr %_17, align 4, !dbg !7543
  %2 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !7543
  %left.1 = load i32, ptr %2, align 4, !dbg !7543
  store ptr %left.0, ptr %left.dbg.spill, align 4, !dbg !7543
  %3 = getelementptr inbounds i8, ptr %left.dbg.spill, i32 4, !dbg !7543
  store i32 %left.1, ptr %3, align 4, !dbg !7543
    #dbg_declare(ptr %left.dbg.spill, !7526, !DIExpression(), !7544)
  %4 = getelementptr inbounds i8, ptr %_17, i32 8, !dbg !7545
  %rest.0 = load ptr, ptr %4, align 4, !dbg !7545
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !7545
  %rest.1 = load i32, ptr %5, align 4, !dbg !7545
  store ptr %rest.0, ptr %rest.dbg.spill, align 4, !dbg !7545
  %6 = getelementptr inbounds i8, ptr %rest.dbg.spill, i32 4, !dbg !7545
  store i32 %rest.1, ptr %6, align 4, !dbg !7545
    #dbg_declare(ptr %rest.dbg.spill, !7528, !DIExpression(), !7546)
; call core::slice::<impl [T]>::align_to_offsets
  %7 = call { i32, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16align_to_offsets17hc6d64b8cd185f960E"(ptr align 1 %rest.0, i32 %rest.1) #17, !dbg !7547
  %_20.0 = extractvalue { i32, i32 } %7, 0, !dbg !7547
  %_20.1 = extractvalue { i32, i32 } %7, 1, !dbg !7547
  store i32 %_20.0, ptr %us_len.dbg.spill, align 4, !dbg !7548
    #dbg_declare(ptr %us_len.dbg.spill, !7529, !DIExpression(), !7549)
  store i32 %_20.1, ptr %ts_len.dbg.spill, align 4, !dbg !7550
    #dbg_declare(ptr %ts_len.dbg.spill, !7531, !DIExpression(), !7551)
  store ptr %rest.0, ptr %self.dbg.spill.i2, align 4
  %8 = getelementptr inbounds i8, ptr %self.dbg.spill.i2, i32 4
  store i32 %rest.1, ptr %8, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !447, !DIExpression(), !7552)
; call core::slice::raw::from_raw_parts
  %9 = call { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17hca28aac29c6895e6E(ptr %rest.0, i32 %_20.0, ptr align 4 @alloc_0e2ccf6490e9b83a6926d2963507c263) #17, !dbg !7554
  %_21.0 = extractvalue { ptr, i32 } %9, 0, !dbg !7554
  %_21.1 = extractvalue { ptr, i32 } %9, 1, !dbg !7554
  store ptr %rest.0, ptr %self.dbg.spill.i1, align 4
  %10 = getelementptr inbounds i8, ptr %self.dbg.spill.i1, i32 4
  store i32 %rest.1, ptr %10, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !447, !DIExpression(), !7555)
  %_29.0 = sub i32 %rest.1, %_20.1, !dbg !7557
  %_29.1 = icmp ult i32 %rest.1, %_20.1, !dbg !7557
  br i1 %_29.1, label %panic, label %bb14, !dbg !7557

bb7:                                              ; preds = %bb3
  store ptr %self.0, ptr %_0, align 4, !dbg !7558
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7558
  store i32 %self.1, ptr %11, align 4, !dbg !7558
  %12 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !7558
  store ptr inttoptr (i32 2 to ptr), ptr %12, align 4, !dbg !7558
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !7558
  store i32 0, ptr %13, align 4, !dbg !7558
  %14 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !7558
  store ptr inttoptr (i32 1 to ptr), ptr %14, align 4, !dbg !7558
  %15 = getelementptr inbounds i8, ptr %14, i32 4, !dbg !7558
  store i32 0, ptr %15, align 4, !dbg !7558
  br label %bb17, !dbg !7559

bb14:                                             ; preds = %bb8
  store ptr %rest.0, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1789, !DIExpression(), !7560)
  store i32 %_29.0, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1797, !DIExpression(), !7562)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7563
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !7563

bb2.i:                                            ; preds = %bb14
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h165b117dcf9af246E"(ptr %rest.0, i32 %_29.0, i32 1, ptr align 4 @alloc_83a94b6c055111122dec44aad52c2fce) #17, !dbg !7564
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !7564

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit": ; preds = %bb14, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %rest.0, i32 %_29.0, !dbg !7565
; call core::slice::raw::from_raw_parts
  %16 = call { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17h8506f20c0934200fE(ptr %_0.i, i32 %_20.1, ptr align 4 @alloc_c537b9e3e800c4c09831a2fdf28bce19) #17, !dbg !7566
  %_24.0 = extractvalue { ptr, i32 } %16, 0, !dbg !7566
  %_24.1 = extractvalue { ptr, i32 } %16, 1, !dbg !7566
  store ptr %left.0, ptr %_0, align 4, !dbg !7567
  %17 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7567
  store i32 %left.1, ptr %17, align 4, !dbg !7567
  %18 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !7567
  store ptr %_21.0, ptr %18, align 4, !dbg !7567
  %19 = getelementptr inbounds i8, ptr %18, i32 4, !dbg !7567
  store i32 %_21.1, ptr %19, align 4, !dbg !7567
  %20 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !7567
  store ptr %_24.0, ptr %20, align 4, !dbg !7567
  %21 = getelementptr inbounds i8, ptr %20, i32 4, !dbg !7567
  store i32 %_24.1, ptr %21, align 4, !dbg !7567
  br label %bb17, !dbg !7559

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_a95a4cb603d5e2d17d0e349849044107) #18, !dbg !7557
  unreachable, !dbg !7557

bb17:                                             ; preds = %bb7, %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit"
  ret void, !dbg !7568

bb2:                                              ; No predecessors!
  unreachable
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h3927176a461ce4f3E"(ptr align 4 %self.0, i32 %self.1) unnamed_addr #2 !dbg !7569 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !7573, !DIExpression(), !7576)
  %_0 = icmp eq i32 %self.1, 0, !dbg !7577
  ret i1 %_0, !dbg !7578
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hf54b78ef45a4106bE"(ptr align 4 %self.0, i32 %self.1) unnamed_addr #2 !dbg !7579 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !7583, !DIExpression(), !7584)
  %_0 = icmp eq i32 %self.1, 0, !dbg !7585
  ret i1 %_0, !dbg !7586
}

; core::slice::<impl [T]>::as_chunks
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17hd0a4c83639f3e067E"(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1, ptr align 4 %0) unnamed_addr #2 !dbg !7587 {
start:
  %array_slice.dbg.spill = alloca [8 x i8], align 4
  %remainder.dbg.spill = alloca [8 x i8], align 4
  %multiple_of_n.dbg.spill = alloca [8 x i8], align 4
  %len_rounded_down.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_13 = alloca [16 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !7595, !DIExpression(), !7603)
  br label %bb3, !dbg !7604

bb3:                                              ; preds = %start
  %_7 = udiv i32 %self.1, 2, !dbg !7605
  %2 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_7, i32 2), !dbg !7605
  %_10.0 = extractvalue { i32, i1 } %2, 0, !dbg !7605
  %_10.1 = extractvalue { i32, i1 } %2, 1, !dbg !7605
  br i1 %_10.1, label %panic, label %bb5, !dbg !7605

bb1:                                              ; No predecessors!
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 @alloc_52400e043e1e9b1bf2be730ef0b31a1f) #17, !dbg !7606
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_4, ptr align 4 %0) #18, !dbg !7606
  unreachable, !dbg !7606

bb5:                                              ; preds = %bb3
  store i32 %_10.0, ptr %len_rounded_down.dbg.spill, align 4, !dbg !7605
    #dbg_declare(ptr %len_rounded_down.dbg.spill, !7596, !DIExpression(), !7607)
; call core::slice::<impl [T]>::split_at_unchecked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h2dab4c08f64d725cE"(ptr sret([16 x i8]) align 4 %_13, ptr align 1 %self.0, i32 %self.1, i32 %_10.0, ptr align 4 %0) #17, !dbg !7608
  %multiple_of_n.0 = load ptr, ptr %_13, align 4, !dbg !7609
  %3 = getelementptr inbounds i8, ptr %_13, i32 4, !dbg !7609
  %multiple_of_n.1 = load i32, ptr %3, align 4, !dbg !7609
  store ptr %multiple_of_n.0, ptr %multiple_of_n.dbg.spill, align 4, !dbg !7609
  %4 = getelementptr inbounds i8, ptr %multiple_of_n.dbg.spill, i32 4, !dbg !7609
  store i32 %multiple_of_n.1, ptr %4, align 4, !dbg !7609
    #dbg_declare(ptr %multiple_of_n.dbg.spill, !7598, !DIExpression(), !7610)
  %5 = getelementptr inbounds i8, ptr %_13, i32 8, !dbg !7611
  %remainder.0 = load ptr, ptr %5, align 4, !dbg !7611
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !7611
  %remainder.1 = load i32, ptr %6, align 4, !dbg !7611
  store ptr %remainder.0, ptr %remainder.dbg.spill, align 4, !dbg !7611
  %7 = getelementptr inbounds i8, ptr %remainder.dbg.spill, i32 4, !dbg !7611
  store i32 %remainder.1, ptr %7, align 4, !dbg !7611
    #dbg_declare(ptr %remainder.dbg.spill, !7600, !DIExpression(), !7612)
; call core::slice::<impl [T]>::as_chunks_unchecked
  %8 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked17hc664e3a446fbe54aE"(ptr align 1 %multiple_of_n.0, i32 %multiple_of_n.1, ptr align 4 %0) #17, !dbg !7613
  %array_slice.0 = extractvalue { ptr, i32 } %8, 0, !dbg !7613
  %array_slice.1 = extractvalue { ptr, i32 } %8, 1, !dbg !7613
  store ptr %array_slice.0, ptr %array_slice.dbg.spill, align 4, !dbg !7613
  %9 = getelementptr inbounds i8, ptr %array_slice.dbg.spill, i32 4, !dbg !7613
  store i32 %array_slice.1, ptr %9, align 4, !dbg !7613
    #dbg_declare(ptr %array_slice.dbg.spill, !7601, !DIExpression(), !7614)
  store ptr %array_slice.0, ptr %_0, align 4, !dbg !7615
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7615
  store i32 %array_slice.1, ptr %10, align 4, !dbg !7615
  %11 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !7615
  store ptr %remainder.0, ptr %11, align 4, !dbg !7615
  %12 = getelementptr inbounds i8, ptr %11, i32 4, !dbg !7615
  store i32 %remainder.1, ptr %12, align 4, !dbg !7615
  ret void, !dbg !7616

panic:                                            ; preds = %bb3
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E(ptr align 4 %0) #18, !dbg !7605
  unreachable, !dbg !7605
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17hb912f82c06f6dcbaE(ptr %data, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !7617 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !7623, !DIExpression(), !7625)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7624, !DIExpression(), !7626)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7627
  br i1 %_3, label %bb2, label %bb5, !dbg !7627

bb5:                                              ; preds = %bb2, %start
; call core::ptr::slice_from_raw_parts
  %1 = call { ptr, i32 } @_ZN4core3ptr20slice_from_raw_parts17hd361afd14c0d3bc0E(ptr %data, i32 %len) #17, !dbg !7629
  %_8.0 = extractvalue { ptr, i32 } %1, 0, !dbg !7629
  %_8.1 = extractvalue { ptr, i32 } %1, 1, !dbg !7629
  %2 = insertvalue { ptr, i32 } poison, ptr %_8.0, 0, !dbg !7630
  %3 = insertvalue { ptr, i32 } %2, i32 %_8.1, 1, !dbg !7630
  ret { ptr, i32 } %3, !dbg !7630

bb2:                                              ; preds = %start
; call core::slice::raw::from_raw_parts::precondition_check
  call void @_ZN4core5slice3raw14from_raw_parts18precondition_check17haf94a5081294d436E(ptr %data, i32 2, i32 1, i32 %len, ptr align 4 %0) #17, !dbg !7631
  br label %bb5, !dbg !7631
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17hca28aac29c6895e6E(ptr %data, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !7632 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !7636, !DIExpression(), !7638)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7637, !DIExpression(), !7639)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7640
  br i1 %_3, label %bb2, label %bb5, !dbg !7640

bb5:                                              ; preds = %bb2, %start
; call core::ptr::slice_from_raw_parts
  %1 = call { ptr, i32 } @_ZN4core3ptr20slice_from_raw_parts17h08385c11687dd27cE(ptr %data, i32 %len) #17, !dbg !7642
  %_8.0 = extractvalue { ptr, i32 } %1, 0, !dbg !7642
  %_8.1 = extractvalue { ptr, i32 } %1, 1, !dbg !7642
  %2 = insertvalue { ptr, i32 } poison, ptr %_8.0, 0, !dbg !7643
  %3 = insertvalue { ptr, i32 } %2, i32 %_8.1, 1, !dbg !7643
  ret { ptr, i32 } %3, !dbg !7643

bb2:                                              ; preds = %start
; call core::slice::raw::from_raw_parts::precondition_check
  call void @_ZN4core5slice3raw14from_raw_parts18precondition_check17haf94a5081294d436E(ptr %data, i32 2, i32 2, i32 %len, ptr align 4 %0) #17, !dbg !7644
  br label %bb5, !dbg !7644
}

; core::slice::raw::from_raw_parts::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5slice3raw14from_raw_parts18precondition_check17haf94a5081294d436E(ptr %data, i32 %size, i32 %align, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !7645 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  %_11 = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !7650, !DIExpression(), !7656)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !7651, !DIExpression(), !7656)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !7652, !DIExpression(), !7656)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7653, !DIExpression(), !7656)
  store ptr @alloc_a28e8c8fd5088943a8b5d44af697ff83, ptr %msg.dbg.spill, align 4, !dbg !7657
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !7657
  store i32 279, ptr %1, align 4, !dbg !7657
    #dbg_declare(ptr %msg.dbg.spill, !7654, !DIExpression(), !7657)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_5 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %data, i32 %align, i1 zeroext false) #17, !dbg !7658
  br i1 %_5, label %bb2, label %bb5, !dbg !7658

bb5:                                              ; preds = %bb2, %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_11, i32 0, !dbg !7660
  store ptr @alloc_a28e8c8fd5088943a8b5d44af697ff83, ptr %2, align 4, !dbg !7660
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !7660
  store i32 279, ptr %3, align 4, !dbg !7660
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 %_11) #17, !dbg !7661
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_9, i1 zeroext false, ptr align 4 %0) #18, !dbg !7662
  unreachable, !dbg !7662

bb2:                                              ; preds = %start
; call core::ub_checks::is_valid_allocation_size
  %_7 = call zeroext i1 @_ZN4core9ub_checks24is_valid_allocation_size17hf07e9f27c08ad4ddE(i32 %size, i32 %len) #17, !dbg !7663
  br i1 %_7, label %bb4, label %bb5, !dbg !7663

bb4:                                              ; preds = %bb2
  ret void, !dbg !7664
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17h52107d0139937d65E(ptr %data, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !7665 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !7669, !DIExpression(), !7671)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7670, !DIExpression(), !7672)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7673
  br i1 %_3, label %bb2, label %bb5, !dbg !7673

bb5:                                              ; preds = %bb2, %start
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17h63344d021f1bfdeaE(ptr %data, i32 %len) #17, !dbg !7675
  %_8.0 = extractvalue { ptr, i32 } %1, 0, !dbg !7675
  %_8.1 = extractvalue { ptr, i32 } %1, 1, !dbg !7675
  %2 = insertvalue { ptr, i32 } poison, ptr %_8.0, 0, !dbg !7676
  %3 = insertvalue { ptr, i32 } %2, i32 %_8.1, 1, !dbg !7676
  ret { ptr, i32 } %3, !dbg !7676

bb2:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut::precondition_check
  call void @_ZN4core5slice3raw18from_raw_parts_mut18precondition_check17h519148e56e25adbcE(ptr %data, i32 1, i32 1, i32 %len, ptr align 4 %0) #17, !dbg !7677
  br label %bb5, !dbg !7677
}

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17hed5ebb1c23f3321bE(ptr %data, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !7678 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !7686, !DIExpression(), !7688)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7687, !DIExpression(), !7689)
; call core::ub_checks::check_language_ub
  %_3 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7690
  br i1 %_3, label %bb2, label %bb5, !dbg !7690

bb5:                                              ; preds = %bb2, %start
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17h92a5c4824fa45176E(ptr %data, i32 %len) #17, !dbg !7692
  %_8.0 = extractvalue { ptr, i32 } %1, 0, !dbg !7692
  %_8.1 = extractvalue { ptr, i32 } %1, 1, !dbg !7692
  %2 = insertvalue { ptr, i32 } poison, ptr %_8.0, 0, !dbg !7693
  %3 = insertvalue { ptr, i32 } %2, i32 %_8.1, 1, !dbg !7693
  ret { ptr, i32 } %3, !dbg !7693

bb2:                                              ; preds = %start
; call core::slice::raw::from_raw_parts_mut::precondition_check
  call void @_ZN4core5slice3raw18from_raw_parts_mut18precondition_check17h519148e56e25adbcE(ptr %data, i32 1, i32 1, i32 %len, ptr align 4 %0) #17, !dbg !7694
  br label %bb5, !dbg !7694
}

; core::slice::raw::from_raw_parts_mut::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @_ZN4core5slice3raw18from_raw_parts_mut18precondition_check17h519148e56e25adbcE(ptr %data, i32 %size, i32 %align, i32 %len, ptr align 4 %0) unnamed_addr #2 !dbg !7695 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %data.dbg.spill = alloca [4 x i8], align 4
  %_11 = alloca [8 x i8], align 4
  %_9 = alloca [24 x i8], align 4
  store ptr %data, ptr %data.dbg.spill, align 4
    #dbg_declare(ptr %data.dbg.spill, !7698, !DIExpression(), !7704)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !7699, !DIExpression(), !7704)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !7700, !DIExpression(), !7704)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7701, !DIExpression(), !7704)
  store ptr @alloc_5c1a2f972552229672fc942406cfc298, ptr %msg.dbg.spill, align 4, !dbg !7705
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !7705
  store i32 283, ptr %1, align 4, !dbg !7705
    #dbg_declare(ptr %msg.dbg.spill, !7702, !DIExpression(), !7705)
; call core::ub_checks::maybe_is_aligned_and_not_null
  %_5 = call zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %data, i32 %align, i1 zeroext false) #17, !dbg !7706
  br i1 %_5, label %bb2, label %bb5, !dbg !7706

bb5:                                              ; preds = %bb2, %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_11, i32 0, !dbg !7708
  store ptr @alloc_5c1a2f972552229672fc942406cfc298, ptr %2, align 4, !dbg !7708
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !7708
  store i32 283, ptr %3, align 4, !dbg !7708
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_9, ptr align 4 %_11) #17, !dbg !7709
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_9, i1 zeroext false, ptr align 4 %0) #18, !dbg !7710
  unreachable, !dbg !7710

bb2:                                              ; preds = %start
; call core::ub_checks::is_valid_allocation_size
  %_7 = call zeroext i1 @_ZN4core9ub_checks24is_valid_allocation_size17hf07e9f27c08ad4ddE(i32 %size, i32 %len) #17, !dbg !7711
  br i1 %_7, label %bb4, label %bb5, !dbg !7711

bb4:                                              ; preds = %bb2
  ret void, !dbg !7712
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h30d8497769b03873E"(ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #2 !dbg !7713 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %end_or_len = alloca [4 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !7717, !DIExpression(), !7724)
    #dbg_declare(ptr %end_or_len, !7722, !DIExpression(), !7725)
  store i32 %slice.1, ptr %len.dbg.spill, align 4, !dbg !7726
    #dbg_declare(ptr %len.dbg.spill, !7718, !DIExpression(), !7727)
; call core::ptr::non_null::NonNull<T>::from_ref
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1b16d23d519f4c51E"(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !7728
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !7728
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !7728
; call core::ptr::non_null::NonNull<T>::cast
  %ptr = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb0f3714333d545a0E"(ptr %_4.0, i32 %_4.1) #17, !dbg !7729
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !7729
    #dbg_declare(ptr %ptr.dbg.spill, !7720, !DIExpression(), !7730)
  br label %bb4, !dbg !7731

bb4:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4160, !DIExpression(), !7732)
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !7734, !DIExpression(), !7740)
  store i32 %slice.1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !7739, !DIExpression(), !7742)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7743
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hfc5fc5e82f6833d7E.exit", !dbg !7743

bb2.i:                                            ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %ptr, i32 %slice.1, i32 2, ptr align 4 @alloc_bb23dba18f73b6eacb8962cd115e8b65) #17, !dbg !7745
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hfc5fc5e82f6833d7E.exit", !dbg !7745

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hfc5fc5e82f6833d7E.exit": ; preds = %bb4, %bb2.i
  %_0.i = getelementptr inbounds nuw [2 x i8], ptr %ptr, i32 %slice.1, !dbg !7746
  store ptr %_0.i, ptr %end_or_len, align 4, !dbg !7747
  br label %bb7, !dbg !7748

bb7:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hfc5fc5e82f6833d7E.exit"
  %_8 = load ptr, ptr %end_or_len, align 4, !dbg !7749
  %2 = insertvalue { ptr, ptr } poison, ptr %ptr, 0, !dbg !7750
  %3 = insertvalue { ptr, ptr } %2, ptr %_8, 1, !dbg !7750
  ret { ptr, ptr } %3, !dbg !7750

bb3:                                              ; No predecessors!
  unreachable
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17he8c2bbb2cd1bb8e2E"(ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #2 !dbg !7751 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %end_or_len = alloca [4 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !7754, !DIExpression(), !7761)
    #dbg_declare(ptr %end_or_len, !7759, !DIExpression(), !7762)
  store i32 %slice.1, ptr %len.dbg.spill, align 4, !dbg !7763
    #dbg_declare(ptr %len.dbg.spill, !7755, !DIExpression(), !7764)
; call core::ptr::non_null::NonNull<T>::from_ref
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f44a684d96c23b5E"(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !7765
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !7765
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !7765
; call core::ptr::non_null::NonNull<T>::cast
  %ptr = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5317967526785ca4E"(ptr %_4.0, i32 %_4.1) #17, !dbg !7766
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !7766
    #dbg_declare(ptr %ptr.dbg.spill, !7757, !DIExpression(), !7767)
  br label %bb4, !dbg !7768

bb4:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4181, !DIExpression(), !7769)
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !7771, !DIExpression(), !7777)
  store i32 %slice.1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !7776, !DIExpression(), !7779)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !7780
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0b542c96349ecd54E.exit", !dbg !7780

bb2.i:                                            ; preds = %bb4
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %ptr, i32 %slice.1, i32 1, ptr align 4 @alloc_bb23dba18f73b6eacb8962cd115e8b65) #17, !dbg !7782
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0b542c96349ecd54E.exit", !dbg !7782

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0b542c96349ecd54E.exit": ; preds = %bb4, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %ptr, i32 %slice.1, !dbg !7783
  store ptr %_0.i, ptr %end_or_len, align 4, !dbg !7784
  br label %bb7, !dbg !7785

bb7:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0b542c96349ecd54E.exit"
  %_8 = load ptr, ptr %end_or_len, align 4, !dbg !7786
  %2 = insertvalue { ptr, ptr } poison, ptr %ptr, 0, !dbg !7787
  %3 = insertvalue { ptr, ptr } %2, ptr %_8, 1, !dbg !7787
  ret { ptr, ptr } %3, !dbg !7787

bb3:                                              ; No predecessors!
  unreachable
}

; core::slice::index::slice_index_fail
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 %start1, i32 %end, i32 %len, ptr align 4 %0) unnamed_addr #4 !dbg !7788 {
start:
  %end.dbg.spill.i5 = alloca [4 x i8], align 4
  %start.dbg.spill.i6 = alloca [4 x i8], align 4
  %len.dbg.spill.i3 = alloca [4 x i8], align 4
  %end.dbg.spill.i4 = alloca [4 x i8], align 4
  %len.dbg.spill.i2 = alloca [4 x i8], align 4
  %start.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill.i = alloca [4 x i8], align 4
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  store i32 %start1, ptr %start.dbg.spill, align 4
    #dbg_declare(ptr %start.dbg.spill, !7790, !DIExpression(), !7793)
  store i32 %end, ptr %end.dbg.spill, align 4
    #dbg_declare(ptr %end.dbg.spill, !7791, !DIExpression(), !7794)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !7792, !DIExpression(), !7795)
  %_4 = icmp ugt i32 %start1, %len, !dbg !7796
  br i1 %_4, label %bb1, label %bb2, !dbg !7796

bb2:                                              ; preds = %start
  %_6 = icmp ugt i32 %end, %len, !dbg !7797
  br i1 %_6, label %bb3, label %bb4, !dbg !7797

bb1:                                              ; preds = %start
  store i32 %start1, ptr %start.dbg.spill.i, align 4
    #dbg_declare(ptr %start.dbg.spill.i, !7798, !DIExpression(), !7803)
  store i32 %len, ptr %len.dbg.spill.i2, align 4
    #dbg_declare(ptr %len.dbg.spill.i2, !7802, !DIExpression(), !7803)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h6c3d7c12f3ee175fE(i32 %start1, i32 %len, ptr align 4 %0) #18, !dbg !7806
  unreachable, !dbg !7806

_ZN4core5slice5index16slice_index_fail8do_panic17h7b5eeb3cd5064bf8E.exit: ; No predecessors!
  unreachable, !dbg !7808

bb4:                                              ; preds = %bb2
  %_8 = icmp ugt i32 %start1, %end, !dbg !7809
  br i1 %_8, label %bb5, label %bb6, !dbg !7809

bb3:                                              ; preds = %bb2
  store i32 %end, ptr %end.dbg.spill.i4, align 4
    #dbg_declare(ptr %end.dbg.spill.i4, !7810, !DIExpression(), !7814)
  store i32 %len, ptr %len.dbg.spill.i3, align 4
    #dbg_declare(ptr %len.dbg.spill.i3, !7813, !DIExpression(), !7814)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h26c13eef9ac779e8E(i32 %end, i32 %len, ptr align 4 %0) #18, !dbg !7816
  unreachable, !dbg !7816

_ZN4core5slice5index16slice_index_fail8do_panic17ha4978ed09fb396c5E.exit: ; No predecessors!
  unreachable, !dbg !7808

bb6:                                              ; preds = %bb4
  store i32 %end, ptr %end.dbg.spill.i, align 4
    #dbg_declare(ptr %end.dbg.spill.i, !7818, !DIExpression(), !7822)
  store i32 %len, ptr %len.dbg.spill.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i, !7821, !DIExpression(), !7822)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17hc2ae076305a9deb2E(i32 %end, i32 %len, ptr align 4 %0) #18, !dbg !7824
  unreachable, !dbg !7824

_ZN4core5slice5index16slice_index_fail8do_panic17h23a360d8865a5df8E.exit: ; No predecessors!
  unreachable, !dbg !7808

bb5:                                              ; preds = %bb4
  store i32 %start1, ptr %start.dbg.spill.i6, align 4
    #dbg_declare(ptr %start.dbg.spill.i6, !7826, !DIExpression(), !7830)
  store i32 %end, ptr %end.dbg.spill.i5, align 4
    #dbg_declare(ptr %end.dbg.spill.i5, !7829, !DIExpression(), !7830)
; call core::slice::index::slice_index_fail::do_panic::runtime
  call void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h13d72b053e4c8ae7E(i32 %start1, i32 %end, ptr align 4 %0) #18, !dbg !7832
  unreachable, !dbg !7832

_ZN4core5slice5index16slice_index_fail8do_panic17hdddde5dc9635833dE.exit: ; No predecessors!
  unreachable, !dbg !7808
}

; core::slice::index::range
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN4core5slice5index5range17h9654c3e01792ff9dE(i32 %0, i32 %1, i32 %bounds, ptr align 4 %2) unnamed_addr #1 !dbg !7834 {
start:
  %start.dbg.spill24 = alloca [4 x i8], align 4
  %start.dbg.spill21 = alloca [4 x i8], align 4
  %start.dbg.spill19 = alloca [4 x i8], align 4
  %start.dbg.spill17 = alloca [4 x i8], align 4
  %start.dbg.spill15 = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %end.dbg.spill12 = alloca [4 x i8], align 4
  %end.dbg.spill10 = alloca [4 x i8], align 4
  %end.dbg.spill8 = alloca [4 x i8], align 4
  %end.dbg.spill6 = alloca [4 x i8], align 4
  %end.dbg.spill4 = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %bounds.dbg.spill = alloca [4 x i8], align 4
  %_20 = alloca [8 x i8], align 4
  %start1 = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %end = alloca [4 x i8], align 4
  %range = alloca [8 x i8], align 4
  store i32 %0, ptr %range, align 4
  %3 = getelementptr inbounds i8, ptr %range, i32 4
  store i32 %1, ptr %3, align 4
    #dbg_declare(ptr %range, !7838, !DIExpression(), !7868)
  store i32 %bounds, ptr %bounds.dbg.spill, align 4
    #dbg_declare(ptr %bounds.dbg.spill, !7839, !DIExpression(), !7869)
    #dbg_declare(ptr %end, !7842, !DIExpression(), !7870)
    #dbg_declare(ptr %start1, !7854, !DIExpression(), !7871)
  store i32 %bounds, ptr %len.dbg.spill, align 4, !dbg !7872
    #dbg_declare(ptr %len.dbg.spill, !7840, !DIExpression(), !7873)
; call <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound
  %4 = call { i32, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17hdfe857fdf916721cE"(ptr align 4 %range) #17, !dbg !7874
  %5 = extractvalue { i32, ptr } %4, 0, !dbg !7874
  %6 = extractvalue { i32, ptr } %4, 1, !dbg !7874
  store i32 %5, ptr %_5, align 4, !dbg !7874
  %7 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7874
  store ptr %6, ptr %7, align 4, !dbg !7874
  %_7 = load i32, ptr %_5, align 4, !dbg !7875
  %8 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7875
  %9 = load ptr, ptr %8, align 4, !dbg !7875
  switch i32 %_7, label %bb2 [
    i32 0, label %bb5
    i32 1, label %bb4
    i32 2, label %bb3
  ], !dbg !7876

bb2:                                              ; preds = %bb11, %start
  unreachable, !dbg !7877

bb5:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7879
  %end2 = load ptr, ptr %10, align 4, !dbg !7879
  store ptr %end2, ptr %end.dbg.spill, align 4, !dbg !7879
    #dbg_declare(ptr %end.dbg.spill, !7846, !DIExpression(), !7880)
  %_10 = load i32, ptr %end2, align 4, !dbg !7881
  %_9 = icmp uge i32 %_10, %bounds, !dbg !7881
  br i1 %_9, label %bb6, label %bb7, !dbg !7881

bb4:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7882
  %end7 = load ptr, ptr %11, align 4, !dbg !7882
  store ptr %end7, ptr %end.dbg.spill8, align 4, !dbg !7882
    #dbg_declare(ptr %end.dbg.spill8, !7851, !DIExpression(), !7883)
  %_16 = load i32, ptr %end7, align 4, !dbg !7884
  %_15 = icmp ugt i32 %_16, %bounds, !dbg !7884
  br i1 %_15, label %bb9, label %bb10, !dbg !7884

bb3:                                              ; preds = %start
  store i32 %bounds, ptr %end, align 4, !dbg !7885
  br label %bb11, !dbg !7885

bb7:                                              ; preds = %bb5
  %12 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7886
  %_43 = load ptr, ptr %12, align 4, !dbg !7886
  %end3 = load i32, ptr %_43, align 4, !dbg !7886
  store i32 %end3, ptr %end.dbg.spill4, align 4, !dbg !7886
    #dbg_declare(ptr %end.dbg.spill4, !7847, !DIExpression(), !7887)
  %_13.0 = add i32 %end3, 1, !dbg !7888
  %_13.1 = icmp ult i32 %_13.0, %end3, !dbg !7888
  br i1 %_13.1, label %panic, label %bb8, !dbg !7888

bb6:                                              ; preds = %bb5
  %13 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7879
  %_42 = load ptr, ptr %13, align 4, !dbg !7879
  %end5 = load i32, ptr %_42, align 4, !dbg !7879
  store i32 %end5, ptr %end.dbg.spill6, align 4, !dbg !7879
    #dbg_declare(ptr %end.dbg.spill6, !7844, !DIExpression(), !7880)
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 0, i32 %end5, i32 %bounds, ptr align 4 %2) #18, !dbg !7889
  unreachable, !dbg !7889

bb8:                                              ; preds = %bb7
  store i32 %_13.0, ptr %end, align 4, !dbg !7888
  br label %bb11, !dbg !7890

panic:                                            ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 %2) #18, !dbg !7888
  unreachable, !dbg !7888

bb11:                                             ; preds = %bb3, %bb10, %bb8
; call <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound
  %14 = call { i32, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h98a94e3505a05bb9E"(ptr align 4 %range) #17, !dbg !7891
  %15 = extractvalue { i32, ptr } %14, 0, !dbg !7891
  %16 = extractvalue { i32, ptr } %14, 1, !dbg !7891
  store i32 %15, ptr %_20, align 4, !dbg !7891
  %17 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7891
  store ptr %16, ptr %17, align 4, !dbg !7891
  %_22 = load i32, ptr %_20, align 4, !dbg !7892
  %18 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7892
  %19 = load ptr, ptr %18, align 4, !dbg !7892
  switch i32 %_22, label %bb2 [
    i32 0, label %bb14
    i32 1, label %bb15
    i32 2, label %bb13
  ], !dbg !7893

bb10:                                             ; preds = %bb4
  %20 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7894
  %_45 = load ptr, ptr %20, align 4, !dbg !7894
  %end9 = load i32, ptr %_45, align 4, !dbg !7894
  store i32 %end9, ptr %end.dbg.spill10, align 4, !dbg !7894
    #dbg_declare(ptr %end.dbg.spill10, !7852, !DIExpression(), !7895)
  store i32 %end9, ptr %end, align 4, !dbg !7896
  br label %bb11, !dbg !7897

bb9:                                              ; preds = %bb4
  %21 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !7882
  %_44 = load ptr, ptr %21, align 4, !dbg !7882
  %end11 = load i32, ptr %_44, align 4, !dbg !7882
  store i32 %end11, ptr %end.dbg.spill12, align 4, !dbg !7882
    #dbg_declare(ptr %end.dbg.spill12, !7849, !DIExpression(), !7883)
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 0, i32 %end11, i32 %bounds, ptr align 4 %2) #18, !dbg !7898
  unreachable, !dbg !7898

bb14:                                             ; preds = %bb11
  %22 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7899
  %start13 = load ptr, ptr %22, align 4, !dbg !7899
  store ptr %start13, ptr %start.dbg.spill, align 4, !dbg !7899
    #dbg_declare(ptr %start.dbg.spill, !7863, !DIExpression(), !7900)
  %_33 = load i32, ptr %start13, align 4, !dbg !7901
  %_34 = load i32, ptr %end, align 4, !dbg !7902
  %_32 = icmp ugt i32 %_33, %_34, !dbg !7901
  br i1 %_32, label %bb19, label %bb20, !dbg !7901

bb15:                                             ; preds = %bb11
  %23 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7903
  %start18 = load ptr, ptr %23, align 4, !dbg !7903
  store ptr %start18, ptr %start.dbg.spill19, align 4, !dbg !7903
    #dbg_declare(ptr %start.dbg.spill19, !7858, !DIExpression(), !7904)
  %_25 = load i32, ptr %start18, align 4, !dbg !7905
  %_26 = load i32, ptr %end, align 4, !dbg !7906
  %_24 = icmp uge i32 %_25, %_26, !dbg !7905
  br i1 %_24, label %bb16, label %bb17, !dbg !7905

bb13:                                             ; preds = %bb11
  store i32 0, ptr %start1, align 4, !dbg !7907
  br label %bb21, !dbg !7907

bb20:                                             ; preds = %bb14
  %24 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7908
  %_51 = load ptr, ptr %24, align 4, !dbg !7908
  %start14 = load i32, ptr %_51, align 4, !dbg !7908
  store i32 %start14, ptr %start.dbg.spill15, align 4, !dbg !7908
    #dbg_declare(ptr %start.dbg.spill15, !7864, !DIExpression(), !7909)
  store i32 %start14, ptr %start1, align 4, !dbg !7910
  br label %bb21, !dbg !7911

bb19:                                             ; preds = %bb14
  %25 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7899
  %_50 = load ptr, ptr %25, align 4, !dbg !7899
  %start16 = load i32, ptr %_50, align 4, !dbg !7899
  store i32 %start16, ptr %start.dbg.spill17, align 4, !dbg !7899
    #dbg_declare(ptr %start.dbg.spill17, !7861, !DIExpression(), !7900)
  %_36 = load i32, ptr %end, align 4, !dbg !7912
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 %start16, i32 %_36, i32 %bounds, ptr align 4 %2) #18, !dbg !7913
  unreachable, !dbg !7913

bb21:                                             ; preds = %bb13, %bb18, %bb20
  %_38 = load i32, ptr %start1, align 4, !dbg !7914
  %_39 = load i32, ptr %end, align 4, !dbg !7915
  %26 = insertvalue { i32, i32 } poison, i32 %_38, 0, !dbg !7916
  %27 = insertvalue { i32, i32 } %26, i32 %_39, 1, !dbg !7916
  ret { i32, i32 } %27, !dbg !7916

bb17:                                             ; preds = %bb15
  %28 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7917
  %_49 = load ptr, ptr %28, align 4, !dbg !7917
  %start20 = load i32, ptr %_49, align 4, !dbg !7917
  store i32 %start20, ptr %start.dbg.spill21, align 4, !dbg !7917
    #dbg_declare(ptr %start.dbg.spill21, !7859, !DIExpression(), !7918)
  %_30.0 = add i32 %start20, 1, !dbg !7919
  %_30.1 = icmp ult i32 %_30.0, %start20, !dbg !7919
  br i1 %_30.1, label %panic22, label %bb18, !dbg !7919

bb16:                                             ; preds = %bb15
  %29 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !7903
  %_48 = load ptr, ptr %29, align 4, !dbg !7903
  %start23 = load i32, ptr %_48, align 4, !dbg !7903
  store i32 %start23, ptr %start.dbg.spill24, align 4, !dbg !7903
    #dbg_declare(ptr %start.dbg.spill24, !7856, !DIExpression(), !7904)
  %_28 = load i32, ptr %end, align 4, !dbg !7920
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 %start23, i32 %_28, i32 %bounds, ptr align 4 %2) #18, !dbg !7921
  unreachable, !dbg !7921

bb18:                                             ; preds = %bb17
  store i32 %_30.0, ptr %start1, align 4, !dbg !7919
  br label %bb21, !dbg !7922

panic22:                                          ; preds = %bb17
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 %2) #18, !dbg !7919
  unreachable, !dbg !7919
}

; core::slice::memchr::memchr_naive
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5slice6memchr12memchr_naive17h72741c3649231f0dE(i8 %x, ptr align 1 %text.0, i32 %text.1) unnamed_addr #2 !dbg !7923 {
start:
  %text.dbg.spill = alloca [8 x i8], align 4
  %x.dbg.spill = alloca [1 x i8], align 1
  %i = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !7929, !DIExpression(), !7933)
  store ptr %text.0, ptr %text.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %text.dbg.spill, i32 4
  store i32 %text.1, ptr %0, align 4
    #dbg_declare(ptr %text.dbg.spill, !7930, !DIExpression(), !7934)
    #dbg_declare(ptr %i, !7931, !DIExpression(), !7935)
  store i32 0, ptr %i, align 4, !dbg !7936
  br label %bb1, !dbg !7937

bb1:                                              ; preds = %bb6, %start
  %_5 = load i32, ptr %i, align 4, !dbg !7938
  %_4 = icmp ult i32 %_5, %text.1, !dbg !7938
  br i1 %_4, label %bb2, label %bb7, !dbg !7938

bb7:                                              ; preds = %bb1
  store i32 0, ptr %_0, align 4, !dbg !7939
  br label %bb8, !dbg !7940

bb2:                                              ; preds = %bb1
  %_9 = load i32, ptr %i, align 4, !dbg !7941
  %_11 = icmp ult i32 %_9, %text.1, !dbg !7942
  br i1 %_11, label %bb3, label %panic, !dbg !7942

bb8:                                              ; preds = %bb4, %bb7
  %1 = load i32, ptr %_0, align 4, !dbg !7940
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7940
  %3 = load i32, ptr %2, align 4, !dbg !7940
  %4 = insertvalue { i32, i32 } poison, i32 %1, 0, !dbg !7940
  %5 = insertvalue { i32, i32 } %4, i32 %3, 1, !dbg !7940
  ret { i32, i32 } %5, !dbg !7940

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds nuw i8, ptr %text.0, i32 %_9, !dbg !7942
  %_8 = load i8, ptr %6, align 1, !dbg !7942
  %_7 = icmp eq i8 %_8, %x, !dbg !7942
  br i1 %_7, label %bb4, label %bb5, !dbg !7942

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 %_9, i32 %text.1, ptr align 4 @alloc_dc2830e6168cd7059bdfdd23c204604a) #18, !dbg !7942
  unreachable, !dbg !7942

bb5:                                              ; preds = %bb3
  %7 = load i32, ptr %i, align 4, !dbg !7943
  %_13.0 = add i32 %7, 1, !dbg !7943
  %_13.1 = icmp ult i32 %_13.0, %7, !dbg !7943
  br i1 %_13.1, label %panic1, label %bb6, !dbg !7943

bb4:                                              ; preds = %bb3
  %_12 = load i32, ptr %i, align 4, !dbg !7944
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7945
  store i32 %_12, ptr %8, align 4, !dbg !7945
  store i32 1, ptr %_0, align 4, !dbg !7945
  br label %bb8, !dbg !7940

bb6:                                              ; preds = %bb5
  store i32 %_13.0, ptr %i, align 4, !dbg !7943
  br label %bb1, !dbg !7937

panic1:                                           ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_446d6b56150b55fa180f023c26fcb951) #18, !dbg !7943
  unreachable, !dbg !7943
}

; core::slice::memchr::memchr
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E(i8 %x, ptr align 1 %text.0, i32 %text.1) unnamed_addr #2 !dbg !7946 {
start:
  %text.dbg.spill = alloca [8 x i8], align 4
  %x.dbg.spill = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  store i8 %x, ptr %x.dbg.spill, align 1
    #dbg_declare(ptr %x.dbg.spill, !7948, !DIExpression(), !7950)
  store ptr %text.0, ptr %text.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %text.dbg.spill, i32 4
  store i32 %text.1, ptr %0, align 4
    #dbg_declare(ptr %text.dbg.spill, !7949, !DIExpression(), !7951)
  %1 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 2, i32 4), !dbg !7952
  %_6.0 = extractvalue { i32, i1 } %1, 0, !dbg !7952
  %_6.1 = extractvalue { i32, i1 } %1, 1, !dbg !7952
  br i1 %_6.1, label %panic, label %bb1, !dbg !7952

bb1:                                              ; preds = %start
  %_3 = icmp ult i32 %text.1, %_6.0, !dbg !7953
  br i1 %_3, label %bb2, label %bb3, !dbg !7953

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E(ptr align 4 @alloc_16136c0fde075309b69bc41ca34aef15) #18, !dbg !7952
  unreachable, !dbg !7952

bb3:                                              ; preds = %bb1
; call core::slice::memchr::memchr_aligned
  %2 = call { i32, i32 } @_ZN4core5slice6memchr14memchr_aligned17hbe785d517767e361E(i8 %x, ptr align 1 %text.0, i32 %text.1) #17, !dbg !7954
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7954
  %4 = extractvalue { i32, i32 } %2, 1, !dbg !7954
  store i32 %3, ptr %_0, align 4, !dbg !7954
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7954
  store i32 %4, ptr %5, align 4, !dbg !7954
  br label %bb4, !dbg !7954

bb2:                                              ; preds = %bb1
; call core::slice::memchr::memchr_naive
  %6 = call { i32, i32 } @_ZN4core5slice6memchr12memchr_naive17h72741c3649231f0dE(i8 %x, ptr align 1 %text.0, i32 %text.1) #17, !dbg !7955
  %7 = extractvalue { i32, i32 } %6, 0, !dbg !7955
  %8 = extractvalue { i32, i32 } %6, 1, !dbg !7955
  store i32 %7, ptr %_0, align 4, !dbg !7955
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7955
  store i32 %8, ptr %9, align 4, !dbg !7955
  br label %bb4, !dbg !7955

bb4:                                              ; preds = %bb2, %bb3
  %10 = load i32, ptr %_0, align 4, !dbg !7956
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !7956
  %12 = load i32, ptr %11, align 4, !dbg !7956
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !7956
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !7956
  ret { i32, i32 } %14, !dbg !7956
}

; core::option::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
define internal void @_ZN4core6option13unwrap_failed17hb44eba05d48b3214E(ptr align 4 %0) unnamed_addr #5 !dbg !7957 {
start:
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_5f55955de67e57c79064b537689facea, i32 43, ptr align 4 %0) #18, !dbg !7960
  unreachable, !dbg !7960
}

; core::option::Option<T>::is_none_or
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17h387e6b7e86edd8e5E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !7961 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !7968, !DIExpression(), !7972)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !7969, !DIExpression(), !7973)
  store i8 0, ptr %_7, align 1, !dbg !7974
  store i8 1, ptr %_7, align 1, !dbg !7974
  %_3 = load i32, ptr %self, align 4, !dbg !7974
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7974
  %4 = load i32, ptr %3, align 4, !dbg !7974
  %5 = trunc nuw i32 %_3 to i1, !dbg !7975
  br i1 %5, label %bb2, label %bb3, !dbg !7975

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7976
  %x = load i32, ptr %6, align 4, !dbg !7976
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !7976
    #dbg_declare(ptr %x.dbg.spill, !7970, !DIExpression(), !7977)
  store i8 0, ptr %_7, align 1, !dbg !7978
; call core::iter::traits::iterator::Iterator::collect::{{closure}}
  %7 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h93a90841749055ddE"(ptr align 4 %f, i32 %x) #17, !dbg !7978
  %8 = zext i1 %7 to i8, !dbg !7978
  store i8 %8, ptr %_0, align 1, !dbg !7978
  br label %bb6, !dbg !7978

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !7979
  br label %bb6, !dbg !7979

bb6:                                              ; preds = %bb2, %bb3
  %9 = load i8, ptr %_7, align 1, !dbg !7980
  %10 = trunc nuw i8 %9 to i1, !dbg !7980
  br i1 %10, label %bb5, label %bb4, !dbg !7980

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1, !dbg !7981
  %12 = trunc nuw i8 %11 to i1, !dbg !7981
  ret i1 %12, !dbg !7981

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !7980

bb1:                                              ; No predecessors!
  unreachable, !dbg !7974
}

; core::option::Option<T>::is_none_or
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17h4ae3165fe5c581bbE"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !7982 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !7989, !DIExpression(), !7993)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !7990, !DIExpression(), !7994)
  store i8 0, ptr %_7, align 1, !dbg !7995
  store i8 1, ptr %_7, align 1, !dbg !7995
  %_3 = load i32, ptr %self, align 4, !dbg !7995
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7995
  %4 = load i32, ptr %3, align 4, !dbg !7995
  %5 = trunc nuw i32 %_3 to i1, !dbg !7996
  br i1 %5, label %bb2, label %bb3, !dbg !7996

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !7997
  %x = load i32, ptr %6, align 4, !dbg !7997
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !7997
    #dbg_declare(ptr %x.dbg.spill, !7991, !DIExpression(), !7998)
  store i8 0, ptr %_7, align 1, !dbg !7999
; call core::iter::traits::iterator::Iterator::collect::{{closure}}
  %7 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17hfceb720a7bf54a7dE"(ptr align 4 %f, i32 %x) #17, !dbg !7999
  %8 = zext i1 %7 to i8, !dbg !7999
  store i8 %8, ptr %_0, align 1, !dbg !7999
  br label %bb6, !dbg !7999

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !8000
  br label %bb6, !dbg !8000

bb6:                                              ; preds = %bb2, %bb3
  %9 = load i8, ptr %_7, align 1, !dbg !8001
  %10 = trunc nuw i8 %9 to i1, !dbg !8001
  br i1 %10, label %bb5, label %bb4, !dbg !8001

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1, !dbg !8002
  %12 = trunc nuw i8 %11 to i1, !dbg !8002
  ret i1 %12, !dbg !8002

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8001

bb1:                                              ; No predecessors!
  unreachable, !dbg !7995
}

; core::option::Option<T>::is_none_or
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17h7509a03bf33938e1E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8003 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8010, !DIExpression(), !8014)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8011, !DIExpression(), !8015)
  store i8 0, ptr %_7, align 1, !dbg !8016
  store i8 1, ptr %_7, align 1, !dbg !8016
  %_3 = load i32, ptr %self, align 4, !dbg !8016
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8016
  %4 = load i32, ptr %3, align 4, !dbg !8016
  %5 = trunc nuw i32 %_3 to i1, !dbg !8017
  br i1 %5, label %bb2, label %bb3, !dbg !8017

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8018
  %x = load i32, ptr %6, align 4, !dbg !8018
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8018
    #dbg_declare(ptr %x.dbg.spill, !8012, !DIExpression(), !8019)
  store i8 0, ptr %_7, align 1, !dbg !8020
; call core::iter::traits::iterator::Iterator::collect::{{closure}}
  %7 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17he0e16c92ec0ca111E"(ptr align 4 %f, i32 %x) #17, !dbg !8020
  %8 = zext i1 %7 to i8, !dbg !8020
  store i8 %8, ptr %_0, align 1, !dbg !8020
  br label %bb6, !dbg !8020

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !8021
  br label %bb6, !dbg !8021

bb6:                                              ; preds = %bb2, %bb3
  %9 = load i8, ptr %_7, align 1, !dbg !8022
  %10 = trunc nuw i8 %9 to i1, !dbg !8022
  br i1 %10, label %bb5, label %bb4, !dbg !8022

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1, !dbg !8023
  %12 = trunc nuw i8 %11 to i1, !dbg !8023
  ret i1 %12, !dbg !8023

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8022

bb1:                                              ; No predecessors!
  unreachable, !dbg !8016
}

; core::option::Option<T>::is_none_or
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17hba06054a761fef88E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8024 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8031, !DIExpression(), !8035)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8032, !DIExpression(), !8036)
  store i8 0, ptr %_7, align 1, !dbg !8037
  store i8 1, ptr %_7, align 1, !dbg !8037
  %_3 = load i32, ptr %self, align 4, !dbg !8037
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8037
  %4 = load i32, ptr %3, align 4, !dbg !8037
  %5 = trunc nuw i32 %_3 to i1, !dbg !8038
  br i1 %5, label %bb2, label %bb3, !dbg !8038

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8039
  %x = load i32, ptr %6, align 4, !dbg !8039
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8039
    #dbg_declare(ptr %x.dbg.spill, !8033, !DIExpression(), !8040)
  store i8 0, ptr %_7, align 1, !dbg !8041
; call core::iter::traits::iterator::Iterator::collect::{{closure}}
  %7 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17ha74fa3270f5d2a29E"(ptr align 4 %f, i32 %x) #17, !dbg !8041
  %8 = zext i1 %7 to i8, !dbg !8041
  store i8 %8, ptr %_0, align 1, !dbg !8041
  br label %bb6, !dbg !8041

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !8042
  br label %bb6, !dbg !8042

bb6:                                              ; preds = %bb2, %bb3
  %9 = load i8, ptr %_7, align 1, !dbg !8043
  %10 = trunc nuw i8 %9 to i1, !dbg !8043
  br i1 %10, label %bb5, label %bb4, !dbg !8043

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1, !dbg !8044
  %12 = trunc nuw i8 %11 to i1, !dbg !8044
  ret i1 %12, !dbg !8044

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8043

bb1:                                              ; No predecessors!
  unreachable, !dbg !8037
}

; core::option::Option<T>::is_none_or
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17he4fbacfc159a5c29E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8045 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8052, !DIExpression(), !8056)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8053, !DIExpression(), !8057)
  store i8 0, ptr %_7, align 1, !dbg !8058
  store i8 1, ptr %_7, align 1, !dbg !8058
  %_3 = load i32, ptr %self, align 4, !dbg !8058
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8058
  %4 = load i32, ptr %3, align 4, !dbg !8058
  %5 = trunc nuw i32 %_3 to i1, !dbg !8059
  br i1 %5, label %bb2, label %bb3, !dbg !8059

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8060
  %x = load i32, ptr %6, align 4, !dbg !8060
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8060
    #dbg_declare(ptr %x.dbg.spill, !8054, !DIExpression(), !8061)
  store i8 0, ptr %_7, align 1, !dbg !8062
; call core::iter::traits::iterator::Iterator::collect::{{closure}}
  %7 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h9e05c36c473fcb89E"(ptr align 4 %f, i32 %x) #17, !dbg !8062
  %8 = zext i1 %7 to i8, !dbg !8062
  store i8 %8, ptr %_0, align 1, !dbg !8062
  br label %bb6, !dbg !8062

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !8063
  br label %bb6, !dbg !8063

bb6:                                              ; preds = %bb2, %bb3
  %9 = load i8, ptr %_7, align 1, !dbg !8064
  %10 = trunc nuw i8 %9 to i1, !dbg !8064
  br i1 %10, label %bb5, label %bb4, !dbg !8064

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1, !dbg !8065
  %12 = trunc nuw i8 %11 to i1, !dbg !8065
  ret i1 %12, !dbg !8065

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8064

bb1:                                              ; No predecessors!
  unreachable, !dbg !8058
}

; core::option::Option<T>::is_none_or
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17he91b33f9d7ed4de7E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8066 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8073, !DIExpression(), !8077)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8074, !DIExpression(), !8078)
  store i8 0, ptr %_7, align 1, !dbg !8079
  store i8 1, ptr %_7, align 1, !dbg !8079
  %_3 = load i32, ptr %self, align 4, !dbg !8079
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8079
  %4 = load i32, ptr %3, align 4, !dbg !8079
  %5 = trunc nuw i32 %_3 to i1, !dbg !8080
  br i1 %5, label %bb2, label %bb3, !dbg !8080

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8081
  %x = load i32, ptr %6, align 4, !dbg !8081
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8081
    #dbg_declare(ptr %x.dbg.spill, !8075, !DIExpression(), !8082)
  store i8 0, ptr %_7, align 1, !dbg !8083
; call core::iter::traits::iterator::Iterator::collect::{{closure}}
  %7 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17hbb1f206f45e00d6bE"(ptr align 4 %f, i32 %x) #17, !dbg !8083
  %8 = zext i1 %7 to i8, !dbg !8083
  store i8 %8, ptr %_0, align 1, !dbg !8083
  br label %bb6, !dbg !8083

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !8084
  br label %bb6, !dbg !8084

bb6:                                              ; preds = %bb2, %bb3
  %9 = load i8, ptr %_7, align 1, !dbg !8085
  %10 = trunc nuw i8 %9 to i1, !dbg !8085
  br i1 %10, label %bb5, label %bb4, !dbg !8085

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1, !dbg !8086
  %12 = trunc nuw i8 %11 to i1, !dbg !8086
  ret i1 %12, !dbg !8086

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8085

bb1:                                              ; No predecessors!
  unreachable, !dbg !8079
}

; core::option::Option<T>::is_none_or
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$10is_none_or17hf0ddf8587f423d4eE"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8087 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8094, !DIExpression(), !8098)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8095, !DIExpression(), !8099)
  store i8 0, ptr %_7, align 1, !dbg !8100
  store i8 1, ptr %_7, align 1, !dbg !8100
  %_3 = load i32, ptr %self, align 4, !dbg !8100
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8100
  %4 = load i32, ptr %3, align 4, !dbg !8100
  %5 = trunc nuw i32 %_3 to i1, !dbg !8101
  br i1 %5, label %bb2, label %bb3, !dbg !8101

bb2:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8102
  %x = load i32, ptr %6, align 4, !dbg !8102
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8102
    #dbg_declare(ptr %x.dbg.spill, !8096, !DIExpression(), !8103)
  store i8 0, ptr %_7, align 1, !dbg !8104
; call core::iter::traits::iterator::Iterator::collect::{{closure}}
  %7 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h069203ada9279684E"(ptr align 4 %f, i32 %x) #17, !dbg !8104
  %8 = zext i1 %7 to i8, !dbg !8104
  store i8 %8, ptr %_0, align 1, !dbg !8104
  br label %bb6, !dbg !8104

bb3:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !8105
  br label %bb6, !dbg !8105

bb6:                                              ; preds = %bb2, %bb3
  %9 = load i8, ptr %_7, align 1, !dbg !8106
  %10 = trunc nuw i8 %9 to i1, !dbg !8106
  br i1 %10, label %bb5, label %bb4, !dbg !8106

bb4:                                              ; preds = %bb5, %bb6
  %11 = load i8, ptr %_0, align 1, !dbg !8107
  %12 = trunc nuw i8 %11 to i1, !dbg !8107
  ret i1 %12, !dbg !8107

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8106

bb1:                                              ; No predecessors!
  unreachable, !dbg !8100
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core6option15Option$LT$T$GT$3map17h94312db253717797E"(i32 %0, i32 %1) unnamed_addr #2 !dbg !8108 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [0 x i8], align 1
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8119, !DIExpression(), !8123)
    #dbg_declare(ptr %f.dbg.spill, !8120, !DIExpression(), !8124)
  store i8 0, ptr %_8, align 1, !dbg !8125
  store i8 1, ptr %_8, align 1, !dbg !8125
  %_3 = load i32, ptr %self, align 4, !dbg !8125
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8125
  %4 = load i32, ptr %3, align 4, !dbg !8125
  %5 = trunc nuw i32 %_3 to i1, !dbg !8126
  br i1 %5, label %bb3, label %bb2, !dbg !8126

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8127
  %x = load i32, ptr %6, align 4, !dbg !8127
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8127
    #dbg_declare(ptr %x.dbg.spill, !8121, !DIExpression(), !8128)
  store i8 0, ptr %_8, align 1, !dbg !8129
; call <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
  %_5 = call i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17hffcce9777e67d4f7E"(i32 %x) #17, !dbg !8129
  store i32 %_5, ptr %_0, align 4, !dbg !8130
  br label %bb7, !dbg !8131

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !8132
  br label %bb7, !dbg !8132

bb7:                                              ; preds = %bb3, %bb2
  %7 = load i8, ptr %_8, align 1, !dbg !8133
  %8 = trunc nuw i8 %7 to i1, !dbg !8133
  br i1 %8, label %bb6, label %bb5, !dbg !8133

bb5:                                              ; preds = %bb6, %bb7
  %9 = load i32, ptr %_0, align 4, !dbg !8134
  ret i32 %9, !dbg !8134

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8133

bb1:                                              ; No predecessors!
  unreachable, !dbg !8125
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17hcfc3e3e90154290fE"(i24 %0, ptr align 1 %f) unnamed_addr #2 !dbg !8135 {
start:
  %1 = alloca [2 x i8], align 2
  %f.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_7 = alloca [2 x i8], align 1
  %x = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 2
  %2 = alloca [4 x i8], align 4
  %self = alloca [3 x i8], align 1
  store i24 %0, ptr %2, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %self, ptr align 4 %2, i32 3, i1 false)
    #dbg_declare(ptr %self, !8142, !DIExpression(), !8146)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8143, !DIExpression(), !8147)
    #dbg_declare(ptr %x, !8144, !DIExpression(), !8148)
  store i8 0, ptr %_8, align 1, !dbg !8149
  store i8 1, ptr %_8, align 1, !dbg !8149
  %3 = load i8, ptr %self, align 1, !dbg !8149
  %4 = trunc nuw i8 %3 to i1, !dbg !8149
  %_3 = zext i1 %4 to i32, !dbg !8149
  %5 = trunc nuw i32 %_3 to i1, !dbg !8150
  br i1 %5, label %bb3, label %bb2, !dbg !8150

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !8151
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %x, ptr align 1 %6, i32 2, i1 false), !dbg !8151
  store i8 0, ptr %_8, align 1, !dbg !8152
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_7, ptr align 1 %x, i32 2, i1 false), !dbg !8152
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %_7, i32 2, i1 false), !dbg !8152
  %7 = load i16, ptr %1, align 2, !dbg !8152
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h0e2c7e697a27e2b0E"(ptr align 1 %f, i16 %7) #17, !dbg !8152
  %8 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !8153
  store i16 %_5, ptr %8, align 2, !dbg !8153
  store i16 1, ptr %_0, align 2, !dbg !8153
  br label %bb7, !dbg !8154

bb2:                                              ; preds = %start
  store i16 0, ptr %_0, align 2, !dbg !8155
  br label %bb7, !dbg !8155

bb7:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_8, align 1, !dbg !8156
  %10 = trunc nuw i8 %9 to i1, !dbg !8156
  br i1 %10, label %bb6, label %bb5, !dbg !8156

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i16, ptr %_0, align 2, !dbg !8157
  %12 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !8157
  %13 = load i16, ptr %12, align 2, !dbg !8157
  %14 = insertvalue { i16, i16 } poison, i16 %11, 0, !dbg !8157
  %15 = insertvalue { i16, i16 } %14, i16 %13, 1, !dbg !8157
  ret { i16, i16 } %15, !dbg !8157

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8156

bb1:                                              ; No predecessors!
  unreachable, !dbg !8149
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define dso_local { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$3map17he097700b04df08d9E"(i24 %0, ptr align 1 %f) unnamed_addr #2 !dbg !8158 {
start:
  %1 = alloca [2 x i8], align 2
  %f.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_7 = alloca [2 x i8], align 1
  %x = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 2
  %2 = alloca [4 x i8], align 4
  %self = alloca [3 x i8], align 1
  store i24 %0, ptr %2, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %self, ptr align 4 %2, i32 3, i1 false)
    #dbg_declare(ptr %self, !8161, !DIExpression(), !8165)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8162, !DIExpression(), !8166)
    #dbg_declare(ptr %x, !8163, !DIExpression(), !8167)
  store i8 0, ptr %_8, align 1, !dbg !8168
  store i8 1, ptr %_8, align 1, !dbg !8168
  %3 = load i8, ptr %self, align 1, !dbg !8168
  %4 = trunc nuw i8 %3 to i1, !dbg !8168
  %_3 = zext i1 %4 to i32, !dbg !8168
  %5 = trunc nuw i32 %_3 to i1, !dbg !8169
  br i1 %5, label %bb3, label %bb2, !dbg !8169

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !8170
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %x, ptr align 1 %6, i32 2, i1 false), !dbg !8170
  store i8 0, ptr %_8, align 1, !dbg !8171
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_7, ptr align 1 %x, i32 2, i1 false), !dbg !8171
  call void @llvm.memcpy.p0.p0.i32(ptr align 2 %1, ptr align 1 %_7, i32 2, i1 false), !dbg !8171
  %7 = load i16, ptr %1, align 2, !dbg !8171
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %_5 = call i16 @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h0646a66fbdde460aE"(ptr align 1 %f, i16 %7) #17, !dbg !8171
  %8 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !8172
  store i16 %_5, ptr %8, align 2, !dbg !8172
  store i16 1, ptr %_0, align 2, !dbg !8172
  br label %bb7, !dbg !8173

bb2:                                              ; preds = %start
  store i16 0, ptr %_0, align 2, !dbg !8174
  br label %bb7, !dbg !8174

bb7:                                              ; preds = %bb3, %bb2
  %9 = load i8, ptr %_8, align 1, !dbg !8175
  %10 = trunc nuw i8 %9 to i1, !dbg !8175
  br i1 %10, label %bb6, label %bb5, !dbg !8175

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i16, ptr %_0, align 2, !dbg !8176
  %12 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !8176
  %13 = load i16, ptr %12, align 2, !dbg !8176
  %14 = insertvalue { i16, i16 } poison, i16 %11, 0, !dbg !8176
  %15 = insertvalue { i16, i16 } %14, i16 %13, 1, !dbg !8176
  ret { i16, i16 } %15, !dbg !8176

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8175

bb1:                                              ; No predecessors!
  unreachable, !dbg !8168
}

; core::option::Option<T>::take
; Function Attrs: inlinehint nounwind
define dso_local { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17h4524744efa872fecE"(ptr align 2 %self) unnamed_addr #2 !dbg !8177 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8182, !DIExpression(), !8183)
; call core::mem::replace
  %0 = call { i16, i16 } @_ZN4core3mem7replace17h14cb4ef1ee48e710E(ptr align 2 %self, i16 0, i16 undef) #17, !dbg !8184
  %_0.0 = extractvalue { i16, i16 } %0, 0, !dbg !8184
  %_0.1 = extractvalue { i16, i16 } %0, 1, !dbg !8184
  %1 = insertvalue { i16, i16 } poison, i16 %_0.0, 0, !dbg !8185
  %2 = insertvalue { i16, i16 } %1, i16 %_0.1, 1, !dbg !8185
  ret { i16, i16 } %2, !dbg !8185
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7f0a41a439ef3779E"(ptr sret([8 x i8]) align 4 %_0, i32 %0, i32 %1, i32 %err.0, i32 %err.1) unnamed_addr #2 !dbg !8186 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [8 x i8], align 4
  %_6 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8205, !DIExpression(), !8209)
  store i32 %err.0, ptr %err.dbg.spill, align 4
  %3 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4
  store i32 %err.1, ptr %3, align 4
    #dbg_declare(ptr %err.dbg.spill, !8206, !DIExpression(), !8210)
  store i8 0, ptr %_6, align 1, !dbg !8211
  store i8 1, ptr %_6, align 1, !dbg !8211
  %_3 = load i32, ptr %self, align 4, !dbg !8211
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8211
  %5 = load i32, ptr %4, align 4, !dbg !8211
  %6 = trunc nuw i32 %_3 to i1, !dbg !8212
  br i1 %6, label %bb3, label %bb2, !dbg !8212

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8213
  %v = load i32, ptr %7, align 4, !dbg !8213
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !8213
    #dbg_declare(ptr %v.dbg.spill, !8207, !DIExpression(), !8214)
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8215
  store i32 %v, ptr %8, align 4, !dbg !8215
  store i32 -2147483647, ptr %_0, align 4, !dbg !8215
  br label %bb6, !dbg !8216

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !8217
  store i32 %err.0, ptr %_0, align 4, !dbg !8218
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8218
  store i32 %err.1, ptr %9, align 4, !dbg !8218
  br label %bb6, !dbg !8219

bb6:                                              ; preds = %bb3, %bb2
  %10 = load i8, ptr %_6, align 1, !dbg !8220
  %11 = trunc nuw i8 %10 to i1, !dbg !8220
  br i1 %11, label %bb5, label %bb4, !dbg !8220

bb4:                                              ; preds = %bb5, %bb6
  ret void, !dbg !8221

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8220

bb1:                                              ; No predecessors!
  unreachable, !dbg !8211
}

; core::option::Option<T>::ok_or
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9504f9ce93f07665E"(ptr %0) unnamed_addr #2 !dbg !8222 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %err.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !8241, !DIExpression(), !8245)
    #dbg_declare(ptr %err.dbg.spill, !8242, !DIExpression(), !8246)
  store i8 0, ptr %_6, align 1, !dbg !8247
  store i8 1, ptr %_6, align 1, !dbg !8247
  %1 = load ptr, ptr %self, align 4, !dbg !8247
  %2 = ptrtoint ptr %1 to i32, !dbg !8247
  %3 = icmp eq i32 %2, 0, !dbg !8247
  %_3 = select i1 %3, i32 0, i32 1, !dbg !8247
  %4 = trunc nuw i32 %_3 to i1, !dbg !8248
  br i1 %4, label %bb3, label %bb2, !dbg !8248

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 4, !dbg !8249
  store ptr %v, ptr %v.dbg.spill, align 4, !dbg !8249
    #dbg_declare(ptr %v.dbg.spill, !8243, !DIExpression(), !8250)
  store ptr %v, ptr %_0, align 4, !dbg !8251
  br label %bb6, !dbg !8252

bb2:                                              ; preds = %start
  store i8 0, ptr %_6, align 1, !dbg !8253
  store ptr null, ptr %_0, align 4, !dbg !8254
  br label %bb6, !dbg !8255

bb6:                                              ; preds = %bb3, %bb2
  %5 = load i8, ptr %_6, align 1, !dbg !8256
  %6 = trunc nuw i8 %5 to i1, !dbg !8256
  br i1 %6, label %bb5, label %bb4, !dbg !8256

bb4:                                              ; preds = %bb5, %bb6
  %7 = load ptr, ptr %_0, align 4, !dbg !8257
  ret ptr %7, !dbg !8257

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8256

bb1:                                              ; No predecessors!
  unreachable, !dbg !8247
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h485d96c1aeb5d92bE"(ptr align 4 %self) unnamed_addr #2 !dbg !8258 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8264, !DIExpression(), !8265)
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hc09341d0f5c027b0E"(ptr align 4 %self) #17, !dbg !8266
  %_0 = xor i1 %_2, true, !dbg !8267
  ret i1 %_0, !dbg !8268
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17ha87fa5e8c650b7d4E"(ptr align 2 %self) unnamed_addr #2 !dbg !8269 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8275, !DIExpression(), !8276)
  %0 = load i16, ptr %self, align 2, !dbg !8277
  %1 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !8277
  %2 = load i16, ptr %1, align 2, !dbg !8277
  %_2 = zext i16 %0 to i32, !dbg !8277
  %_0 = icmp eq i32 %_2, 1, !dbg !8278
  ret i1 %_0, !dbg !8280
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17hc09341d0f5c027b0E"(ptr align 4 %self) unnamed_addr #2 !dbg !8281 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !8284, !DIExpression(), !8285)
  %_2 = load i32, ptr %self, align 4, !dbg !8286
  %_0 = icmp eq i32 %_2, 1, !dbg !8287
  ret i1 %_0, !dbg !8289
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h15a9c95e93f58520E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8290 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8303, !DIExpression(), !8307)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8304, !DIExpression(), !8308)
  store i8 0, ptr %_7, align 1, !dbg !8309
  store i8 1, ptr %_7, align 1, !dbg !8309
  %_3 = load i32, ptr %self, align 4, !dbg !8309
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8309
  %4 = load i32, ptr %3, align 4, !dbg !8309
  %5 = trunc nuw i32 %_3 to i1, !dbg !8310
  br i1 %5, label %bb3, label %bb2, !dbg !8310

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8311
  %x = load i32, ptr %6, align 4, !dbg !8311
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8311
    #dbg_declare(ptr %x.dbg.spill, !8305, !DIExpression(), !8312)
  store i8 0, ptr %_7, align 1, !dbg !8313
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %7 = call { i32, i32 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h5feeae50c5f1488fE"(ptr align 4 %f, i32 %x) #17, !dbg !8313
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !8313
  %9 = extractvalue { i32, i32 } %7, 1, !dbg !8313
  store i32 %8, ptr %_0, align 4, !dbg !8313
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8313
  store i32 %9, ptr %10, align 4, !dbg !8313
  br label %bb6, !dbg !8313

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !8314
  br label %bb6, !dbg !8314

bb6:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_7, align 1, !dbg !8315
  %12 = trunc nuw i8 %11 to i1, !dbg !8315
  br i1 %12, label %bb5, label %bb4, !dbg !8315

bb4:                                              ; preds = %bb5, %bb6
  %13 = load i32, ptr %_0, align 4, !dbg !8316
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8316
  %15 = load i32, ptr %14, align 4, !dbg !8316
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !8316
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !8316
  ret { i32, i32 } %17, !dbg !8316

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8315

bb1:                                              ; No predecessors!
  unreachable, !dbg !8309
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h30ba2367727980b4E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8317 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8327, !DIExpression(), !8331)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8328, !DIExpression(), !8332)
  store i8 0, ptr %_7, align 1, !dbg !8333
  store i8 1, ptr %_7, align 1, !dbg !8333
  %_3 = load i32, ptr %self, align 4, !dbg !8333
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8333
  %4 = load i32, ptr %3, align 4, !dbg !8333
  %5 = trunc nuw i32 %_3 to i1, !dbg !8334
  br i1 %5, label %bb3, label %bb2, !dbg !8334

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8335
  %x = load i32, ptr %6, align 4, !dbg !8335
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8335
    #dbg_declare(ptr %x.dbg.spill, !8329, !DIExpression(), !8336)
  store i8 0, ptr %_7, align 1, !dbg !8337
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %7 = call { i32, i32 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h0245b0971940b5c2E"(ptr align 4 %f, i32 %x) #17, !dbg !8337
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !8337
  %9 = extractvalue { i32, i32 } %7, 1, !dbg !8337
  store i32 %8, ptr %_0, align 4, !dbg !8337
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8337
  store i32 %9, ptr %10, align 4, !dbg !8337
  br label %bb6, !dbg !8337

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !8338
  br label %bb6, !dbg !8338

bb6:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_7, align 1, !dbg !8339
  %12 = trunc nuw i8 %11 to i1, !dbg !8339
  br i1 %12, label %bb5, label %bb4, !dbg !8339

bb4:                                              ; preds = %bb5, %bb6
  %13 = load i32, ptr %_0, align 4, !dbg !8340
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8340
  %15 = load i32, ptr %14, align 4, !dbg !8340
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !8340
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !8340
  ret { i32, i32 } %17, !dbg !8340

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8339

bb1:                                              ; No predecessors!
  unreachable, !dbg !8333
}

; core::option::Option<T>::and_then
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h387791a40a65eb08E"(i32 %0, i32 %1, ptr align 4 %f) unnamed_addr #2 !dbg !8341 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8351, !DIExpression(), !8355)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !8352, !DIExpression(), !8356)
  store i8 0, ptr %_7, align 1, !dbg !8357
  store i8 1, ptr %_7, align 1, !dbg !8357
  %_3 = load i32, ptr %self, align 4, !dbg !8357
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8357
  %4 = load i32, ptr %3, align 4, !dbg !8357
  %5 = trunc nuw i32 %_3 to i1, !dbg !8358
  br i1 %5, label %bb3, label %bb2, !dbg !8358

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8359
  %x = load i32, ptr %6, align 4, !dbg !8359
  store i32 %x, ptr %x.dbg.spill, align 4, !dbg !8359
    #dbg_declare(ptr %x.dbg.spill, !8353, !DIExpression(), !8360)
  store i8 0, ptr %_7, align 1, !dbg !8361
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
  %7 = call { i32, i32 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h05bb2c1aa7da1326E"(ptr align 4 %f, i32 %x) #17, !dbg !8361
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !8361
  %9 = extractvalue { i32, i32 } %7, 1, !dbg !8361
  store i32 %8, ptr %_0, align 4, !dbg !8361
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8361
  store i32 %9, ptr %10, align 4, !dbg !8361
  br label %bb6, !dbg !8361

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !8362
  br label %bb6, !dbg !8362

bb6:                                              ; preds = %bb3, %bb2
  %11 = load i8, ptr %_7, align 1, !dbg !8363
  %12 = trunc nuw i8 %11 to i1, !dbg !8363
  br i1 %12, label %bb5, label %bb4, !dbg !8363

bb4:                                              ; preds = %bb5, %bb6
  %13 = load i32, ptr %_0, align 4, !dbg !8364
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8364
  %15 = load i32, ptr %14, align 4, !dbg !8364
  %16 = insertvalue { i32, i32 } poison, i32 %13, 0, !dbg !8364
  %17 = insertvalue { i32, i32 } %16, i32 %15, 1, !dbg !8364
  ret { i32, i32 } %17, !dbg !8364

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8363

bb1:                                              ; No predecessors!
  unreachable, !dbg !8357
}

; core::option::Option<&T>::cloned
; Function Attrs: nounwind
define dso_local { i16, i16 } @"_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hfa3c6d43cdc2252bE"(ptr align 2 %0) unnamed_addr #1 !dbg !8365 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %t.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 2
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !8381, !DIExpression(), !8384)
  %1 = load ptr, ptr %self, align 4, !dbg !8385
  %2 = ptrtoint ptr %1 to i32, !dbg !8385
  %3 = icmp eq i32 %2, 0, !dbg !8385
  %_2 = select i1 %3, i32 0, i32 1, !dbg !8385
  %4 = trunc nuw i32 %_2 to i1, !dbg !8386
  br i1 %4, label %bb3, label %bb2, !dbg !8386

bb3:                                              ; preds = %start
  %t = load ptr, ptr %self, align 4, !dbg !8387
  store ptr %t, ptr %t.dbg.spill, align 4, !dbg !8387
    #dbg_declare(ptr %t.dbg.spill, !8382, !DIExpression(), !8388)
  store ptr %t, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !8389, !DIExpression(), !8398)
  %_0.i = load i16, ptr %t, align 2, !dbg !8400
  %5 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !8401
  store i16 %_0.i, ptr %5, align 2, !dbg !8401
  store i16 1, ptr %_0, align 2, !dbg !8401
  br label %bb5, !dbg !8402

bb2:                                              ; preds = %start
  store i16 0, ptr %_0, align 2, !dbg !8403
  br label %bb5, !dbg !8403

bb5:                                              ; preds = %bb3, %bb2
  %6 = load i16, ptr %_0, align 2, !dbg !8404
  %7 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !8404
  %8 = load i16, ptr %7, align 2, !dbg !8404
  %9 = insertvalue { i16, i16 } poison, i16 %6, 0, !dbg !8404
  %10 = insertvalue { i16, i16 } %9, i16 %8, 1, !dbg !8404
  ret { i16, i16 } %10, !dbg !8404

bb1:                                              ; No predecessors!
  unreachable, !dbg !8385
}

; core::option::Option<&T>::copied
; Function Attrs: nounwind
define dso_local i24 @"_ZN4core6option19Option$LT$$RF$T$GT$6copied17h2aea4de361f9caadE"(ptr align 1 %0) unnamed_addr #1 !dbg !8405 {
start:
  %v = alloca [2 x i8], align 1
  %_0 = alloca [4 x i8], align 1
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !8421, !DIExpression(), !8424)
    #dbg_declare(ptr %v, !8422, !DIExpression(), !8425)
  %1 = load ptr, ptr %self, align 4, !dbg !8426
  %2 = ptrtoint ptr %1 to i32, !dbg !8426
  %3 = icmp eq i32 %2, 0, !dbg !8426
  %_2 = select i1 %3, i32 0, i32 1, !dbg !8426
  %4 = trunc nuw i32 %_2 to i1, !dbg !8427
  br i1 %4, label %bb3, label %bb2, !dbg !8427

bb3:                                              ; preds = %start
  %_4 = load ptr, ptr %self, align 4, !dbg !8428
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %v, ptr align 1 %_4, i32 2, i1 false), !dbg !8428
  %5 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !8429
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %5, ptr align 1 %v, i32 2, i1 false), !dbg !8429
  store i8 1, ptr %_0, align 1, !dbg !8429
  br label %bb4, !dbg !8430

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !8431
  br label %bb4, !dbg !8431

bb4:                                              ; preds = %bb3, %bb2
  %6 = load i24, ptr %_0, align 1, !dbg !8432
  ret i24 %6, !dbg !8432

bb1:                                              ; No predecessors!
  unreachable, !dbg !8426
}

; core::result::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
define dso_local void @_ZN4core6result13unwrap_failed17hbf072231b1fad67dE(ptr align 1 %_msg.0, i32 %_msg.1, ptr align 1 %_error, ptr align 4 %0) unnamed_addr #5 !dbg !8433 {
start:
  %_error.dbg.spill = alloca [4 x i8], align 4
  %_msg.dbg.spill = alloca [8 x i8], align 4
  store ptr %_msg.0, ptr %_msg.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %_msg.dbg.spill, i32 4
  store i32 %_msg.1, ptr %1, align 4
    #dbg_declare(ptr %_msg.dbg.spill, !8438, !DIExpression(), !8442)
  store ptr %_error, ptr %_error.dbg.spill, align 4
    #dbg_declare(ptr %_error.dbg.spill, !8439, !DIExpression(), !8443)
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_476509aa7047bd805d630c6546685797, i32 14, ptr align 4 %0) #18, !dbg !8444
  unreachable, !dbg !8444
}

; core::result::Result<T,E>::unwrap_or_else
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h8fc6d2a2227fa507E"(ptr align 4 %self, ptr align 4 %op, ptr align 4 %0) unnamed_addr #2 !dbg !8445 {
start:
  %t.dbg.spill = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !8457, !DIExpression(), !8463)
  store ptr %op, ptr %op.dbg.spill, align 4
    #dbg_declare(ptr %op.dbg.spill, !8458, !DIExpression(), !8464)
    #dbg_declare(ptr %e.dbg.spill, !8461, !DIExpression(), !8465)
  store i8 0, ptr %_8, align 1, !dbg !8466
  store i8 1, ptr %_8, align 1, !dbg !8466
  %_3 = load i32, ptr %self, align 4, !dbg !8466
  %1 = trunc nuw i32 %_3 to i1, !dbg !8467
  br i1 %1, label %bb2, label %bb3, !dbg !8467

bb2:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !8468
; call alloc::rc::Rc<T>::allocate_for_layout::{{closure}}
  %2 = call { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$19allocate_for_layout28_$u7b$$u7b$closure$u7d$$u7d$17h84bc834276d50e30E"(ptr align 4 %op) #17, !dbg !8468
  %3 = extractvalue { ptr, i32 } %2, 0, !dbg !8468
  %4 = extractvalue { ptr, i32 } %2, 1, !dbg !8468
  store ptr %3, ptr %_0, align 4, !dbg !8468
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8468
  store i32 %4, ptr %5, align 4, !dbg !8468
  br label %bb6, !dbg !8468

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8469
  %t.0 = load ptr, ptr %6, align 4, !dbg !8469
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !8469
  %t.1 = load i32, ptr %7, align 4, !dbg !8469
  store ptr %t.0, ptr %t.dbg.spill, align 4, !dbg !8469
  %8 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4, !dbg !8469
  store i32 %t.1, ptr %8, align 4, !dbg !8469
    #dbg_declare(ptr %t.dbg.spill, !8459, !DIExpression(), !8470)
  store ptr %t.0, ptr %_0, align 4, !dbg !8471
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8471
  store i32 %t.1, ptr %9, align 4, !dbg !8471
  br label %bb6, !dbg !8472

bb6:                                              ; preds = %bb2, %bb3
  %10 = load i8, ptr %_8, align 1, !dbg !8473
  %11 = trunc nuw i8 %10 to i1, !dbg !8473
  br i1 %11, label %bb5, label %bb4, !dbg !8473

bb4:                                              ; preds = %bb5, %bb6
  %12 = load ptr, ptr %_0, align 4, !dbg !8474
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8474
  %14 = load i32, ptr %13, align 4, !dbg !8474
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0, !dbg !8474
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1, !dbg !8474
  ret { ptr, i32 } %16, !dbg !8474

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8473

bb1:                                              ; No predecessors!
  unreachable, !dbg !8466
}

; core::result::Result<T,E>::unwrap_or_else
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17he0e8bd1bfc76508bE"(ptr %0, i32 %1, ptr align 4 %op, ptr align 4 %2) unnamed_addr #2 !dbg !8475 {
start:
  %t.dbg.spill = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [1 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %3 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %3, align 4
    #dbg_declare(ptr %self, !8487, !DIExpression(), !8493)
  store ptr %op, ptr %op.dbg.spill, align 4
    #dbg_declare(ptr %op.dbg.spill, !8488, !DIExpression(), !8494)
    #dbg_declare(ptr %e.dbg.spill, !8491, !DIExpression(), !8495)
  store i8 0, ptr %_8, align 1, !dbg !8496
  store i8 1, ptr %_8, align 1, !dbg !8496
  %4 = load ptr, ptr %self, align 4, !dbg !8496
  %5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8496
  %6 = load i32, ptr %5, align 4, !dbg !8496
  %7 = ptrtoint ptr %4 to i32, !dbg !8496
  %8 = icmp eq i32 %7, 0, !dbg !8496
  %_3 = select i1 %8, i32 1, i32 0, !dbg !8496
  %9 = trunc nuw i32 %_3 to i1, !dbg !8497
  br i1 %9, label %bb2, label %bb3, !dbg !8497

bb2:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !8498
; call alloc::sync::Arc<T>::allocate_for_layout::{{closure}}
  %10 = call { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$19allocate_for_layout28_$u7b$$u7b$closure$u7d$$u7d$17h132db41e10edc885E"(ptr align 4 %op) #17, !dbg !8498
  %11 = extractvalue { ptr, i32 } %10, 0, !dbg !8498
  %12 = extractvalue { ptr, i32 } %10, 1, !dbg !8498
  store ptr %11, ptr %_0, align 4, !dbg !8498
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8498
  store i32 %12, ptr %13, align 4, !dbg !8498
  br label %bb6, !dbg !8498

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 4, !dbg !8499
  %14 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8499
  %t.1 = load i32, ptr %14, align 4, !dbg !8499
  store ptr %t.0, ptr %t.dbg.spill, align 4, !dbg !8499
  %15 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4, !dbg !8499
  store i32 %t.1, ptr %15, align 4, !dbg !8499
    #dbg_declare(ptr %t.dbg.spill, !8489, !DIExpression(), !8500)
  store ptr %t.0, ptr %_0, align 4, !dbg !8501
  %16 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8501
  store i32 %t.1, ptr %16, align 4, !dbg !8501
  br label %bb6, !dbg !8502

bb6:                                              ; preds = %bb2, %bb3
  %17 = load i8, ptr %_8, align 1, !dbg !8503
  %18 = trunc nuw i8 %17 to i1, !dbg !8503
  br i1 %18, label %bb5, label %bb4, !dbg !8503

bb4:                                              ; preds = %bb5, %bb6
  %19 = load ptr, ptr %_0, align 4, !dbg !8504
  %20 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8504
  %21 = load i32, ptr %20, align 4, !dbg !8504
  %22 = insertvalue { ptr, i32 } poison, ptr %19, 0, !dbg !8504
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1, !dbg !8504
  ret { ptr, i32 } %23, !dbg !8504

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8503

bb1:                                              ; No predecessors!
  unreachable, !dbg !8496
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hdb328e8875e8f43dE"(ptr align 4 %self) unnamed_addr #2 !dbg !8505 {
start:
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_7 = alloca [12 x i8], align 4
  %t = alloca [12 x i8], align 4
  %_0 = alloca [8 x i8], align 4
    #dbg_declare(ptr %self, !8515, !DIExpression(), !8521)
    #dbg_declare(ptr %op.dbg.spill, !8516, !DIExpression(), !8522)
    #dbg_declare(ptr %t, !8517, !DIExpression(), !8523)
    #dbg_declare(ptr %e.dbg.spill, !8519, !DIExpression(), !8524)
  store i8 0, ptr %_9, align 1, !dbg !8525
  store i8 1, ptr %_9, align 1, !dbg !8525
  %0 = load i32, ptr %self, align 4, !dbg !8525
  %1 = icmp eq i32 %0, 0, !dbg !8525
  %_3 = select i1 %1, i32 1, i32 0, !dbg !8525
  %2 = trunc nuw i32 %_3 to i1, !dbg !8526
  br i1 %2, label %bb2, label %bb3, !dbg !8526

bb2:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !8527
  br label %bb7, !dbg !8528

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %t, ptr align 4 %self, i32 12, i1 false), !dbg !8529
  store i8 0, ptr %_9, align 1, !dbg !8530
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_7, ptr align 4 %t, i32 12, i1 false), !dbg !8530
; call alloc::raw_vec::layout_array::{{closure}}
  %3 = call { i32, i32 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17h972d17445e96bc10E"(ptr align 4 %_7) #17, !dbg !8530
  %_5.0 = extractvalue { i32, i32 } %3, 0, !dbg !8530
  %_5.1 = extractvalue { i32, i32 } %3, 1, !dbg !8530
  store i32 %_5.0, ptr %_0, align 4, !dbg !8531
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8531
  store i32 %_5.1, ptr %4, align 4, !dbg !8531
  br label %bb7, !dbg !8532

bb7:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_9, align 1, !dbg !8533
  %6 = trunc nuw i8 %5 to i1, !dbg !8533
  br i1 %6, label %bb6, label %bb5, !dbg !8533

bb5:                                              ; preds = %bb6, %bb7
  %7 = load i32, ptr %_0, align 4, !dbg !8534
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8534
  %9 = load i32, ptr %8, align 4, !dbg !8534
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !8534
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !8534
  ret { i32, i32 } %11, !dbg !8534

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8533

bb1:                                              ; No predecessors!
  unreachable, !dbg !8525
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc7655a8bfca1ac16E"(i1 zeroext %0, ptr align 1 %msg.0, i32 %msg.1, ptr align 4 %1) unnamed_addr #2 !dbg !8535 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %t.dbg.spill = alloca [0 x i8], align 1
  %e = alloca [0 x i8], align 1
  %self = alloca [1 x i8], align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %self, align 1
    #dbg_declare(ptr %t.dbg.spill, !8542, !DIExpression(), !8546)
    #dbg_declare(ptr %self, !8540, !DIExpression(), !8547)
  store ptr %msg.0, ptr %msg.dbg.spill, align 4
  %3 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4
  store i32 %msg.1, ptr %3, align 4
    #dbg_declare(ptr %msg.dbg.spill, !8541, !DIExpression(), !8548)
    #dbg_declare(ptr %e, !8544, !DIExpression(), !8549)
  %4 = load i8, ptr %self, align 1, !dbg !8550
  %5 = trunc nuw i8 %4 to i1, !dbg !8550
  %_3 = zext i1 %5 to i32, !dbg !8550
  %6 = trunc nuw i32 %_3 to i1, !dbg !8551
  br i1 %6, label %bb2, label %bb3, !dbg !8551

bb2:                                              ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17hbb00ed45a9f740bcE(ptr align 1 %msg.0, i32 %msg.1, ptr align 1 %e, ptr align 4 %1) #18, !dbg !8552
  unreachable, !dbg !8552

bb3:                                              ; preds = %start
  ret void, !dbg !8553

bb1:                                              ; No predecessors!
  unreachable, !dbg !8550
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h38cc76addc955dbdE"(ptr sret([12 x i8]) align 4 %_0, ptr %0, i32 %1, ptr align 4 %op) unnamed_addr #2 !dbg !8554 {
start:
  %t.dbg.spill = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8581, !DIExpression(), !8587)
  store ptr %op, ptr %op.dbg.spill, align 4
    #dbg_declare(ptr %op.dbg.spill, !8582, !DIExpression(), !8588)
    #dbg_declare(ptr %e.dbg.spill, !8585, !DIExpression(), !8589)
  store i8 0, ptr %_9, align 1, !dbg !8590
  store i8 1, ptr %_9, align 1, !dbg !8590
  %3 = load ptr, ptr %self, align 4, !dbg !8590
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8590
  %5 = load i32, ptr %4, align 4, !dbg !8590
  %6 = ptrtoint ptr %3 to i32, !dbg !8590
  %7 = icmp eq i32 %6, 0, !dbg !8590
  %_3 = select i1 %7, i32 1, i32 0, !dbg !8590
  %8 = trunc nuw i32 %_3 to i1, !dbg !8591
  br i1 %8, label %bb2, label %bb3, !dbg !8591

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !8592
; call alloc::raw_vec::RawVecInner<A>::shrink_unchecked::{{closure}}
  %9 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hfb1d4dc77e5d9ed8E"(ptr align 4 %op) #17, !dbg !8592
  %_6.0 = extractvalue { i32, i32 } %9, 0, !dbg !8592
  %_6.1 = extractvalue { i32, i32 } %9, 1, !dbg !8592
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8593
  store i32 %_6.0, ptr %10, align 4, !dbg !8593
  %11 = getelementptr inbounds i8, ptr %10, i32 4, !dbg !8593
  store i32 %_6.1, ptr %11, align 4, !dbg !8593
  store i32 1, ptr %_0, align 4, !dbg !8593
  br label %bb7, !dbg !8594

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 4, !dbg !8595
  %12 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8595
  %t.1 = load i32, ptr %12, align 4, !dbg !8595
  store ptr %t.0, ptr %t.dbg.spill, align 4, !dbg !8595
  %13 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4, !dbg !8595
  store i32 %t.1, ptr %13, align 4, !dbg !8595
    #dbg_declare(ptr %t.dbg.spill, !8583, !DIExpression(), !8596)
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8597
  store ptr %t.0, ptr %14, align 4, !dbg !8597
  %15 = getelementptr inbounds i8, ptr %14, i32 4, !dbg !8597
  store i32 %t.1, ptr %15, align 4, !dbg !8597
  store i32 0, ptr %_0, align 4, !dbg !8597
  br label %bb7, !dbg !8598

bb7:                                              ; preds = %bb2, %bb3
  %16 = load i8, ptr %_9, align 1, !dbg !8599
  %17 = trunc nuw i8 %16 to i1, !dbg !8599
  br i1 %17, label %bb6, label %bb5, !dbg !8599

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !8600

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8599

bb1:                                              ; No predecessors!
  unreachable, !dbg !8590
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h73a9e8ee8601aa1eE"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !8601 {
start:
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %_8 = alloca [20 x i8], align 4
  %_6 = alloca [16 x i8], align 4
  %e = alloca [20 x i8], align 4
  %t = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !8646, !DIExpression(), !8652)
    #dbg_declare(ptr %op.dbg.spill, !8647, !DIExpression(), !8653)
    #dbg_declare(ptr %t, !8648, !DIExpression(), !8654)
    #dbg_declare(ptr %e, !8650, !DIExpression(), !8655)
  store i8 0, ptr %_9, align 1, !dbg !8656
  store i8 1, ptr %_9, align 1, !dbg !8656
  %0 = load i32, ptr %self, align 4, !dbg !8656
  %1 = icmp eq i32 %0, -2147483648, !dbg !8656
  %_3 = select i1 %1, i32 0, i32 1, !dbg !8656
  %2 = trunc nuw i32 %_3 to i1, !dbg !8657
  br i1 %2, label %bb2, label %bb3, !dbg !8657

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %e, ptr align 4 %self, i32 20, i1 false), !dbg !8658
  store i8 0, ptr %_9, align 1, !dbg !8659
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %e, i32 20, i1 false), !dbg !8659
; call alloc::ffi::c_str::CString::into_string::{{closure}}
  call void @"_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17hfd3b06a1e6dcc217E"(ptr sret([16 x i8]) align 4 %_6, ptr align 4 %_8) #17, !dbg !8659
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_6, i32 16, i1 false), !dbg !8660
  br label %bb7, !dbg !8661

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8662
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %t, ptr align 4 %3, i32 12, i1 false), !dbg !8662
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %t, i32 12, i1 false), !dbg !8663
  %4 = getelementptr inbounds i8, ptr %_0, i32 12, !dbg !8663
  store i8 2, ptr %4, align 4, !dbg !8663
  br label %bb7, !dbg !8664

bb7:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_9, align 1, !dbg !8665
  %6 = trunc nuw i8 %5 to i1, !dbg !8665
  br i1 %6, label %bb6, label %bb5, !dbg !8665

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !8666

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8665

bb1:                                              ; No predecessors!
  unreachable, !dbg !8656
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h90d6cec6483c057dE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !8667 {
start:
  %e.dbg.spill = alloca [2 x i8], align 2
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %t = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !8695, !DIExpression(), !8701)
    #dbg_declare(ptr %op.dbg.spill, !8696, !DIExpression(), !8702)
    #dbg_declare(ptr %t, !8697, !DIExpression(), !8703)
  store i8 0, ptr %_9, align 1, !dbg !8704
  store i8 1, ptr %_9, align 1, !dbg !8704
  %0 = load i32, ptr %self, align 4, !dbg !8704
  %1 = icmp eq i32 %0, -2147483648, !dbg !8704
  %_3 = select i1 %1, i32 1, i32 0, !dbg !8704
  %2 = trunc nuw i32 %_3 to i1, !dbg !8705
  br i1 %2, label %bb2, label %bb3, !dbg !8705

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8706
  %e = load i16, ptr %3, align 4, !dbg !8706
  store i16 %e, ptr %e.dbg.spill, align 2, !dbg !8706
    #dbg_declare(ptr %e.dbg.spill, !8699, !DIExpression(), !8707)
  store i8 0, ptr %_9, align 1, !dbg !8708
; call alloc::string::String::from_utf16le::{{closure}}
  call void @"_ZN5alloc6string6String12from_utf16le28_$u7b$$u7b$closure$u7d$$u7d$17h220fc65bc53b3963E"(i16 %e) #17, !dbg !8708
  store i32 -2147483648, ptr %_0, align 4, !dbg !8709
  br label %bb7, !dbg !8710

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %t, ptr align 4 %self, i32 12, i1 false), !dbg !8711
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %t, i32 12, i1 false), !dbg !8712
  br label %bb7, !dbg !8713

bb7:                                              ; preds = %bb2, %bb3
  %4 = load i8, ptr %_9, align 1, !dbg !8714
  %5 = trunc nuw i8 %4 to i1, !dbg !8714
  br i1 %5, label %bb6, label %bb5, !dbg !8714

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !8715

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8714

bb1:                                              ; No predecessors!
  unreachable, !dbg !8704
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9191610bed43e73bE"(ptr sret([12 x i8]) align 4 %_0, i32 %0, i32 %1) unnamed_addr #2 !dbg !8716 {
start:
  %t.dbg.spill = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8738, !DIExpression(), !8744)
    #dbg_declare(ptr %op.dbg.spill, !8739, !DIExpression(), !8745)
    #dbg_declare(ptr %e.dbg.spill, !8742, !DIExpression(), !8746)
  store i8 0, ptr %_9, align 1, !dbg !8747
  store i8 1, ptr %_9, align 1, !dbg !8747
  %3 = load i32, ptr %self, align 4, !dbg !8747
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8747
  %5 = load i32, ptr %4, align 4, !dbg !8747
  %6 = icmp eq i32 %3, 0, !dbg !8747
  %_3 = select i1 %6, i32 1, i32 0, !dbg !8747
  %7 = trunc nuw i32 %_3 to i1, !dbg !8748
  br i1 %7, label %bb2, label %bb3, !dbg !8748

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !8749
; call alloc::raw_vec::layout_array::{{closure}}
  %8 = call { i32, i32 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17hf1e01f90190308e7E"() #17, !dbg !8749
  %_6.0 = extractvalue { i32, i32 } %8, 0, !dbg !8749
  %_6.1 = extractvalue { i32, i32 } %8, 1, !dbg !8749
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8750
  store i32 %_6.0, ptr %9, align 4, !dbg !8750
  %10 = getelementptr inbounds i8, ptr %9, i32 4, !dbg !8750
  store i32 %_6.1, ptr %10, align 4, !dbg !8750
  store i32 1, ptr %_0, align 4, !dbg !8750
  br label %bb7, !dbg !8751

bb3:                                              ; preds = %start
  %t.0 = load i32, ptr %self, align 4, !dbg !8752
  %11 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8752
  %t.1 = load i32, ptr %11, align 4, !dbg !8752
  store i32 %t.0, ptr %t.dbg.spill, align 4, !dbg !8752
  %12 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4, !dbg !8752
  store i32 %t.1, ptr %12, align 4, !dbg !8752
    #dbg_declare(ptr %t.dbg.spill, !8740, !DIExpression(), !8753)
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8754
  store i32 %t.0, ptr %13, align 4, !dbg !8754
  %14 = getelementptr inbounds i8, ptr %13, i32 4, !dbg !8754
  store i32 %t.1, ptr %14, align 4, !dbg !8754
  store i32 0, ptr %_0, align 4, !dbg !8754
  br label %bb7, !dbg !8755

bb7:                                              ; preds = %bb2, %bb3
  %15 = load i8, ptr %_9, align 1, !dbg !8756
  %16 = trunc nuw i8 %15 to i1, !dbg !8756
  br i1 %16, label %bb6, label %bb5, !dbg !8756

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !8757

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8756

bb1:                                              ; No predecessors!
  unreachable, !dbg !8747
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h94788840a701f0cfE"(ptr sret([12 x i8]) align 4 %_0, ptr %0, i32 %1, ptr align 4 %op) unnamed_addr #2 !dbg !8758 {
start:
  %t.dbg.spill = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %op.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [1 x i8], align 1
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !8769, !DIExpression(), !8775)
  store ptr %op, ptr %op.dbg.spill, align 4
    #dbg_declare(ptr %op.dbg.spill, !8770, !DIExpression(), !8776)
    #dbg_declare(ptr %e.dbg.spill, !8773, !DIExpression(), !8777)
  store i8 0, ptr %_9, align 1, !dbg !8778
  store i8 1, ptr %_9, align 1, !dbg !8778
  %3 = load ptr, ptr %self, align 4, !dbg !8778
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8778
  %5 = load i32, ptr %4, align 4, !dbg !8778
  %6 = ptrtoint ptr %3 to i32, !dbg !8778
  %7 = icmp eq i32 %6, 0, !dbg !8778
  %_3 = select i1 %7, i32 1, i32 0, !dbg !8778
  %8 = trunc nuw i32 %_3 to i1, !dbg !8779
  br i1 %8, label %bb2, label %bb3, !dbg !8779

bb2:                                              ; preds = %start
  store i8 0, ptr %_9, align 1, !dbg !8780
; call alloc::raw_vec::RawVecInner<A>::finish_grow::{{closure}}
  %9 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hc5279fb8e4bfc125E"(ptr align 4 %op) #17, !dbg !8780
  %_6.0 = extractvalue { i32, i32 } %9, 0, !dbg !8780
  %_6.1 = extractvalue { i32, i32 } %9, 1, !dbg !8780
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8781
  store i32 %_6.0, ptr %10, align 4, !dbg !8781
  %11 = getelementptr inbounds i8, ptr %10, i32 4, !dbg !8781
  store i32 %_6.1, ptr %11, align 4, !dbg !8781
  store i32 1, ptr %_0, align 4, !dbg !8781
  br label %bb7, !dbg !8782

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 4, !dbg !8783
  %12 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8783
  %t.1 = load i32, ptr %12, align 4, !dbg !8783
  store ptr %t.0, ptr %t.dbg.spill, align 4, !dbg !8783
  %13 = getelementptr inbounds i8, ptr %t.dbg.spill, i32 4, !dbg !8783
  store i32 %t.1, ptr %13, align 4, !dbg !8783
    #dbg_declare(ptr %t.dbg.spill, !8771, !DIExpression(), !8784)
  %14 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !8785
  store ptr %t.0, ptr %14, align 4, !dbg !8785
  %15 = getelementptr inbounds i8, ptr %14, i32 4, !dbg !8785
  store i32 %t.1, ptr %15, align 4, !dbg !8785
  store i32 0, ptr %_0, align 4, !dbg !8785
  br label %bb7, !dbg !8786

bb7:                                              ; preds = %bb2, %bb3
  %16 = load i8, ptr %_9, align 1, !dbg !8787
  %17 = trunc nuw i8 %16 to i1, !dbg !8787
  br i1 %17, label %bb6, label %bb5, !dbg !8787

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !8788

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8787

bb1:                                              ; No predecessors!
  unreachable, !dbg !8778
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9dc848eac107c796E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !8789 {
start:
  %e.dbg.spill = alloca [2 x i8], align 2
  %op.dbg.spill = alloca [0 x i8], align 1
  %_9 = alloca [1 x i8], align 1
  %t = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !8798, !DIExpression(), !8804)
    #dbg_declare(ptr %op.dbg.spill, !8799, !DIExpression(), !8805)
    #dbg_declare(ptr %t, !8800, !DIExpression(), !8806)
  store i8 0, ptr %_9, align 1, !dbg !8807
  store i8 1, ptr %_9, align 1, !dbg !8807
  %0 = load i32, ptr %self, align 4, !dbg !8807
  %1 = icmp eq i32 %0, -2147483648, !dbg !8807
  %_3 = select i1 %1, i32 1, i32 0, !dbg !8807
  %2 = trunc nuw i32 %_3 to i1, !dbg !8808
  br i1 %2, label %bb2, label %bb3, !dbg !8808

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8809
  %e = load i16, ptr %3, align 4, !dbg !8809
  store i16 %e, ptr %e.dbg.spill, align 2, !dbg !8809
    #dbg_declare(ptr %e.dbg.spill, !8802, !DIExpression(), !8810)
  store i8 0, ptr %_9, align 1, !dbg !8811
; call alloc::string::String::from_utf16be::{{closure}}
  call void @"_ZN5alloc6string6String12from_utf16be28_$u7b$$u7b$closure$u7d$$u7d$17hd716dae50148b655E"(i16 %e) #17, !dbg !8811
  store i32 -2147483648, ptr %_0, align 4, !dbg !8812
  br label %bb7, !dbg !8813

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %t, ptr align 4 %self, i32 12, i1 false), !dbg !8814
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %t, i32 12, i1 false), !dbg !8815
  br label %bb7, !dbg !8816

bb7:                                              ; preds = %bb2, %bb3
  %4 = load i8, ptr %_9, align 1, !dbg !8817
  %5 = trunc nuw i8 %4 to i1, !dbg !8817
  br i1 %5, label %bb6, label %bb5, !dbg !8817

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !8818

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !8817

bb1:                                              ; No predecessors!
  unreachable, !dbg !8807
}

; core::result::Result<T,E>::unwrap_or
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17hf7981cfaf74295d8E"(ptr align 4 %self, i32 %default) unnamed_addr #2 !dbg !8819 {
start:
  %t.dbg.spill = alloca [4 x i8], align 4
  %default.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
    #dbg_declare(ptr %self, !8824, !DIExpression(), !8828)
  store i32 %default, ptr %default.dbg.spill, align 4
    #dbg_declare(ptr %default.dbg.spill, !8825, !DIExpression(), !8829)
  store i8 0, ptr %_5, align 1, !dbg !8830
  store i8 1, ptr %_5, align 1, !dbg !8830
  %0 = load i16, ptr %self, align 4, !dbg !8830
  %_3 = zext i16 %0 to i32, !dbg !8830
  %1 = trunc nuw i32 %_3 to i1, !dbg !8831
  br i1 %1, label %bb2, label %bb3, !dbg !8831

bb2:                                              ; preds = %start
  store i8 0, ptr %_5, align 1, !dbg !8832
  store i32 %default, ptr %_0, align 4, !dbg !8832
  br label %bb6, !dbg !8832

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !8833
  %t = load i32, ptr %2, align 4, !dbg !8833
  store i32 %t, ptr %t.dbg.spill, align 4, !dbg !8833
    #dbg_declare(ptr %t.dbg.spill, !8826, !DIExpression(), !8834)
  store i32 %t, ptr %_0, align 4, !dbg !8835
  br label %bb6, !dbg !8836

bb6:                                              ; preds = %bb2, %bb3
  %3 = load i8, ptr %_5, align 1, !dbg !8837
  %4 = trunc nuw i8 %3 to i1, !dbg !8837
  br i1 %4, label %bb5, label %bb4, !dbg !8837

bb4:                                              ; preds = %bb5, %bb6
  %5 = load i16, ptr %self, align 4, !dbg !8837
  %_6 = zext i16 %5 to i32, !dbg !8837
  %6 = trunc nuw i32 %_6 to i1, !dbg !8837
  br i1 %6, label %bb8, label %bb7, !dbg !8837

bb5:                                              ; preds = %bb6
  br label %bb4, !dbg !8837

bb8:                                              ; preds = %bb4
  br label %bb7, !dbg !8837

bb7:                                              ; preds = %bb8, %bb4
  %7 = load i32, ptr %_0, align 4, !dbg !8838
  ret i32 %7, !dbg !8838

bb1:                                              ; No predecessors!
  unreachable, !dbg !8830
}

; core::unicode::unicode_data::case_ignorable::lookup
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable6lookup17h7bccb44ea784e7a9E(i32 %0) unnamed_addr #2 !dbg !8839 {
start:
  %_0 = alloca [1 x i8], align 1
  %c = alloca [4 x i8], align 4
  store i32 %0, ptr %c, align 4
    #dbg_declare(ptr %c, !8845, !DIExpression(), !8846)
; call core::char::methods::<impl char>::is_ascii
  %_2 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h60f03876197a0f94E"(ptr align 4 %c) #17, !dbg !8847
  br i1 %_2, label %bb2, label %bb3, !dbg !8848

bb3:                                              ; preds = %start
  %_6 = load i32, ptr %c, align 4, !dbg !8849
  %_5 = icmp uge i32 %_6, 168, !dbg !8849
  br i1 %_5, label %bb4, label %bb5, !dbg !8849

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_62bb002bf8ca4b98cdd2b6cd0b17aa10, i32 31, ptr align 4 @alloc_5639efddd3a328c770d46af5bb253917) #18, !dbg !8850
  unreachable, !dbg !8850

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1, !dbg !8849
  br label %bb6, !dbg !8849

bb4:                                              ; preds = %bb3
  %1 = load i32, ptr %c, align 4, !dbg !8852
; call core::unicode::unicode_data::case_ignorable::lookup_slow
  %2 = call zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable11lookup_slow17h2dcf7200dc067d64E(i32 %1) #17, !dbg !8852
  %3 = zext i1 %2 to i8, !dbg !8852
  store i8 %3, ptr %_0, align 1, !dbg !8852
  br label %bb6, !dbg !8852

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_0, align 1, !dbg !8853
  %5 = trunc nuw i8 %4 to i1, !dbg !8853
  ret i1 %5, !dbg !8853
}

; core::unicode::unicode_data::cased::lookup
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core7unicode12unicode_data5cased6lookup17h3e46302b6fe81cb0E(i32 %0) unnamed_addr #2 !dbg !8854 {
start:
  %_0 = alloca [1 x i8], align 1
  %c = alloca [4 x i8], align 4
  store i32 %0, ptr %c, align 4
    #dbg_declare(ptr %c, !8857, !DIExpression(), !8858)
; call core::char::methods::<impl char>::is_ascii
  %_2 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h60f03876197a0f94E"(ptr align 4 %c) #17, !dbg !8859
  br i1 %_2, label %bb2, label %bb3, !dbg !8860

bb3:                                              ; preds = %start
  %_6 = load i32, ptr %c, align 4, !dbg !8861
  %_5 = icmp uge i32 %_6, 170, !dbg !8861
  br i1 %_5, label %bb4, label %bb5, !dbg !8861

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_62bb002bf8ca4b98cdd2b6cd0b17aa10, i32 31, ptr align 4 @alloc_8db620f4c9f1e44c7a999e8905a95324) #18, !dbg !8862
  unreachable, !dbg !8862

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1, !dbg !8861
  br label %bb6, !dbg !8861

bb4:                                              ; preds = %bb3
  %1 = load i32, ptr %c, align 4, !dbg !8864
; call core::unicode::unicode_data::cased::lookup_slow
  %2 = call zeroext i1 @_ZN4core7unicode12unicode_data5cased11lookup_slow17h74ffb592b97fb8e0E(i32 %1) #17, !dbg !8864
  %3 = zext i1 %2 to i8, !dbg !8864
  store i8 %3, ptr %_0, align 1, !dbg !8864
  br label %bb6, !dbg !8864

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i8, ptr %_0, align 1, !dbg !8865
  %5 = trunc nuw i8 %4 to i1, !dbg !8865
  ret i1 %5, !dbg !8865
}

; core::panicking::panic_const::panic_const_div_by_zero
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h5051c6ff4ea8e3faE(ptr align 4 %0) unnamed_addr #4 !dbg !8866 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_2ca80fe829e7dcbb4661228c202cce92) #17, !dbg !8869
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 %0) #18, !dbg !8870
  unreachable, !dbg !8870
}

; core::panicking::panic_const::panic_const_rem_by_zero
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const23panic_const_rem_by_zero17hf7f0dd58d8b45737E(ptr align 4 %0) unnamed_addr #4 !dbg !8871 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_4a5d1f504800cbe61e09126ad8023985) #17, !dbg !8872
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 %0) #18, !dbg !8873
  unreachable, !dbg !8873
}

; core::panicking::panic_const::panic_const_add_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 %0) unnamed_addr #4 !dbg !8874 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_491fd71eacc9ac6df50464189817658a) #17, !dbg !8875
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 %0) #18, !dbg !8876
  unreachable, !dbg !8876
}

; core::panicking::panic_const::panic_const_mul_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E(ptr align 4 %0) unnamed_addr #4 !dbg !8877 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_3a541098c7af55f2d1b57c8374ee944e) #17, !dbg !8878
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 %0) #18, !dbg !8879
  unreachable, !dbg !8879
}

; core::panicking::panic_const::panic_const_shl_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_shl_overflow17ha8a57b421ff69571E(ptr align 4 %0) unnamed_addr #4 !dbg !8880 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_26eab6319fe0d02af8105663e6a2ea8b) #17, !dbg !8881
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 %0) #18, !dbg !8882
  unreachable, !dbg !8882
}

; core::panicking::panic_const::panic_const_shr_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_shr_overflow17h53cfb129f0f9bfb7E(ptr align 4 %0) unnamed_addr #4 !dbg !8883 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_0f75c28593fb3281511a86ba9b3adf6f) #17, !dbg !8884
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 %0) #18, !dbg !8885
  unreachable, !dbg !8885
}

; core::panicking::panic_const::panic_const_sub_overflow
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 %0) unnamed_addr #4 !dbg !8886 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_7daa13c2a11e2a3dbea9e2a29716d6f6) #17, !dbg !8887
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 %0) #18, !dbg !8888
  unreachable, !dbg !8888
}

; core::panicking::assert_failed
; Function Attrs: inlinehint noreturn nounwind
define dso_local void @_ZN4core9panicking13assert_failed17h59a1cc89abfda22fE(i8 %kind, ptr align 1 %0, ptr align 1 %1, ptr align 4 %args, ptr align 4 %2) unnamed_addr #4 !dbg !8889 {
start:
  %3 = alloca [24 x i8], align 4
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right = alloca [4 x i8], align 4
  %left = alloca [4 x i8], align 4
  store ptr %0, ptr %left, align 4
  store ptr %1, ptr %right, align 4
  store i8 %kind, ptr %kind.dbg.spill, align 1
    #dbg_declare(ptr %kind.dbg.spill, !8906, !DIExpression(), !8912)
    #dbg_declare(ptr %left, !8907, !DIExpression(), !8913)
    #dbg_declare(ptr %right, !8908, !DIExpression(), !8914)
    #dbg_declare(ptr %args, !8909, !DIExpression(), !8915)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %3, ptr align 4 %args, i32 24, i1 false), !dbg !8916
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17ha9096800332a722cE(i8 %kind, ptr align 1 %left, ptr align 4 @vtable.0, ptr align 1 %right, ptr align 4 @vtable.0, ptr align 4 %3, ptr align 4 %2) #18, !dbg !8916
  unreachable, !dbg !8916
}

; core::panicking::assert_failed
; Function Attrs: inlinehint noreturn nounwind
define dso_local void @_ZN4core9panicking13assert_failed17hf2b3c7a53ef8be1eE(i8 %kind, ptr align 4 %0, ptr align 4 %1, ptr align 4 %args, ptr align 4 %2) unnamed_addr #4 !dbg !8917 {
start:
  %3 = alloca [24 x i8], align 4
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right = alloca [4 x i8], align 4
  %left = alloca [4 x i8], align 4
  store ptr %0, ptr %left, align 4
  store ptr %1, ptr %right, align 4
  store i8 %kind, ptr %kind.dbg.spill, align 1
    #dbg_declare(ptr %kind.dbg.spill, !8921, !DIExpression(), !8926)
    #dbg_declare(ptr %left, !8922, !DIExpression(), !8927)
    #dbg_declare(ptr %right, !8923, !DIExpression(), !8928)
    #dbg_declare(ptr %args, !8924, !DIExpression(), !8929)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %3, ptr align 4 %args, i32 24, i1 false), !dbg !8930
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17ha9096800332a722cE(i8 %kind, ptr align 1 %left, ptr align 4 @vtable.1, ptr align 1 %right, ptr align 4 @vtable.1, ptr align 4 %3, ptr align 4 %2) #18, !dbg !8930
  unreachable, !dbg !8930
}

; core::panicking::panic_nounwind
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking14panic_nounwind17h92ec681c78bc5927E(ptr align 1 %expr.0, i32 %expr.1) unnamed_addr #4 !dbg !8931 {
start:
  %expr.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  store ptr %expr.0, ptr %expr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %expr.dbg.spill, i32 4
  store i32 %expr.1, ptr %0, align 4
    #dbg_declare(ptr %expr.dbg.spill, !8935, !DIExpression(), !8936)
  %1 = getelementptr inbounds nuw { ptr, i32 }, ptr %_5, i32 0, !dbg !8937
  store ptr %expr.0, ptr %1, align 4, !dbg !8937
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !8937
  store i32 %expr.1, ptr %2, align 4, !dbg !8937
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 %_5) #17, !dbg !8938
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_3, i1 zeroext false, ptr align 4 @alloc_55a1350f0592d90727796c17fe69030d) #18, !dbg !8939
  unreachable, !dbg !8939
}

; core::panicking::panic_bounds_check
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 %index, i32 %len, ptr align 4 %0) unnamed_addr #4 !dbg !8940 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !8942, !DIExpression(), !8955)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !8943, !DIExpression(), !8956)
  call void @llvm.trap(), !dbg !8957
  unreachable, !dbg !8957
}

; core::panicking::panic_nounwind_fmt
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %fmt, i1 zeroext %force_no_backtrace, ptr align 4 %0) unnamed_addr #4 !dbg !8958 {
start:
  %force_no_backtrace.dbg.spill = alloca [1 x i8], align 1
  %_3 = alloca [28 x i8], align 4
    #dbg_declare(ptr %fmt, !8962, !DIExpression(), !8964)
  %1 = zext i1 %force_no_backtrace to i8
  store i8 %1, ptr %force_no_backtrace.dbg.spill, align 1
    #dbg_declare(ptr %force_no_backtrace.dbg.spill, !8963, !DIExpression(), !8965)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %fmt, i32 24, i1 false), !dbg !8966
  %2 = getelementptr inbounds i8, ptr %_3, i32 24, !dbg !8966
  %3 = zext i1 %force_no_backtrace to i8, !dbg !8966
  store i8 %3, ptr %2, align 4, !dbg !8966
  %4 = getelementptr inbounds i8, ptr %_3, i32 24, !dbg !8968
  %5 = load i8, ptr %4, align 4, !dbg !8968
  %6 = trunc nuw i8 %5 to i1, !dbg !8968
; call core::panicking::panic_nounwind_fmt::runtime
  call void @_ZN4core9panicking18panic_nounwind_fmt7runtime17hf0cf52a188ea282eE(ptr align 4 %_3, i1 zeroext %6, ptr align 4 %0) #18, !dbg !8968
  unreachable, !dbg !8968
}

; core::panicking::panic_nounwind_fmt::runtime
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking18panic_nounwind_fmt7runtime17hf0cf52a188ea282eE(ptr align 4 %fmt, i1 zeroext %force_no_backtrace, ptr align 4 %0) unnamed_addr #4 !dbg !8969 {
start:
    #dbg_declare(ptr %fmt, !8972, !DIExpression(), !8983)
  %force_no_backtrace.dbg.spill = alloca [1 x i8], align 1
  %1 = zext i1 %force_no_backtrace to i8
  store i8 %1, ptr %force_no_backtrace.dbg.spill, align 1
    #dbg_declare(ptr %force_no_backtrace.dbg.spill, !8973, !DIExpression(), !8983)
  call void @llvm.trap(), !dbg !8984
  unreachable, !dbg !8984
}

; core::panicking::assert_failed_inner
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking19assert_failed_inner17ha9096800332a722cE(i8 %kind, ptr align 1 %0, ptr align 4 %1, ptr align 1 %2, ptr align 4 %3, ptr align 4 %args, ptr align 4 %4) unnamed_addr #4 !dbg !8986 {
start:
  %kind.dbg.spill = alloca [1 x i8], align 1
  %_32 = alloca [8 x i8], align 4
  %_31 = alloca [8 x i8], align 4
  %_30 = alloca [8 x i8], align 4
  %args5 = alloca [24 x i8], align 4
  %args4 = alloca [12 x i8], align 4
  %_24 = alloca [24 x i8], align 4
  %_20 = alloca [8 x i8], align 4
  %_19 = alloca [8 x i8], align 4
  %_18 = alloca [8 x i8], align 4
  %_17 = alloca [8 x i8], align 4
  %args3 = alloca [32 x i8], align 4
  %args2 = alloca [16 x i8], align 4
  %_10 = alloca [24 x i8], align 4
  %args1 = alloca [24 x i8], align 4
  %op = alloca [8 x i8], align 4
  %right = alloca [8 x i8], align 4
  %left = alloca [8 x i8], align 4
  store ptr %0, ptr %left, align 4
  %5 = getelementptr inbounds i8, ptr %left, i32 4
  store ptr %1, ptr %5, align 4
  store ptr %2, ptr %right, align 4
  %6 = getelementptr inbounds i8, ptr %right, i32 4
  store ptr %3, ptr %6, align 4
  store i8 %kind, ptr %kind.dbg.spill, align 1
    #dbg_declare(ptr %kind.dbg.spill, !8998, !DIExpression(), !9032)
    #dbg_declare(ptr %left, !8999, !DIExpression(), !9033)
    #dbg_declare(ptr %right, !9000, !DIExpression(), !9034)
    #dbg_declare(ptr %args, !9001, !DIExpression(), !9035)
    #dbg_declare(ptr %op, !9002, !DIExpression(), !9036)
    #dbg_declare(ptr %args1, !9004, !DIExpression(), !9037)
    #dbg_declare(ptr %args2, !9006, !DIExpression(), !9038)
    #dbg_declare(ptr %args3, !9016, !DIExpression(), !9039)
    #dbg_declare(ptr %args4, !9020, !DIExpression(), !9040)
    #dbg_declare(ptr %args5, !9028, !DIExpression(), !9041)
  %_6 = zext i8 %kind to i32, !dbg !9042
  switch i32 %_6, label %bb1 [
    i32 0, label %bb4
    i32 1, label %bb3
    i32 2, label %bb2
  ], !dbg !9043

bb1:                                              ; preds = %start
  unreachable, !dbg !9044

bb4:                                              ; preds = %start
  store ptr @alloc_afe773f6aac346e81183863a42d1bf80, ptr %op, align 4, !dbg !9046
  %7 = getelementptr inbounds i8, ptr %op, i32 4, !dbg !9046
  store i32 2, ptr %7, align 4, !dbg !9046
  br label %bb5, !dbg !9046

bb3:                                              ; preds = %start
  store ptr @alloc_0052d85ea4a4ba787769bf683e9f0575, ptr %op, align 4, !dbg !9047
  %8 = getelementptr inbounds i8, ptr %op, i32 4, !dbg !9047
  store i32 2, ptr %8, align 4, !dbg !9047
  br label %bb5, !dbg !9048

bb2:                                              ; preds = %start
  store ptr @alloc_cf04f28336c1420ddcf7f6488de62f68, ptr %op, align 4, !dbg !9049
  %9 = getelementptr inbounds i8, ptr %op, i32 4, !dbg !9049
  store i32 7, ptr %9, align 4, !dbg !9049
  br label %bb5, !dbg !9050

bb5:                                              ; preds = %bb2, %bb3, %bb4
  %10 = load ptr, ptr %args, align 4, !dbg !9051
  %11 = ptrtoint ptr %10 to i32, !dbg !9051
  %12 = icmp eq i32 %11, 0, !dbg !9051
  %_7 = select i1 %12, i32 0, i32 1, !dbg !9051
  %13 = trunc nuw i32 %_7 to i1, !dbg !9052
  br i1 %13, label %bb7, label %bb6, !dbg !9052

bb7:                                              ; preds = %bb5
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %args1, ptr align 4 %args, i32 24, i1 false), !dbg !9053
  store ptr %op, ptr %args2, align 4, !dbg !9054
  %14 = getelementptr inbounds i8, ptr %args2, i32 4, !dbg !9054
  store ptr %args1, ptr %14, align 4, !dbg !9054
  %15 = getelementptr inbounds i8, ptr %args2, i32 8, !dbg !9054
  store ptr %left, ptr %15, align 4, !dbg !9054
  %16 = getelementptr inbounds i8, ptr %args2, i32 12, !dbg !9054
  store ptr %right, ptr %16, align 4, !dbg !9054
  %_36 = load ptr, ptr %args2, align 4, !dbg !9038
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h50897f56d49ff652E(ptr sret([8 x i8]) align 4 %_17, ptr align 4 %_36) #17, !dbg !9038
  %17 = getelementptr inbounds i8, ptr %args2, i32 4, !dbg !9038
  %_37 = load ptr, ptr %17, align 4, !dbg !9038
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17hbc2a7c81607dc7f5E(ptr sret([8 x i8]) align 4 %_18, ptr align 4 %_37) #17, !dbg !9038
  %18 = getelementptr inbounds i8, ptr %args2, i32 8, !dbg !9038
  %_38 = load ptr, ptr %18, align 4, !dbg !9038
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17hfd367f54582a32f4E(ptr sret([8 x i8]) align 4 %_19, ptr align 4 %_38) #17, !dbg !9038
  %19 = getelementptr inbounds i8, ptr %args2, i32 12, !dbg !9038
  %_39 = load ptr, ptr %19, align 4, !dbg !9038
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17hfd367f54582a32f4E(ptr sret([8 x i8]) align 4 %_20, ptr align 4 %_39) #17, !dbg !9038
  %20 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args3, i32 0, !dbg !9038
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %20, ptr align 4 %_17, i32 8, i1 false), !dbg !9038
  %21 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args3, i32 1, !dbg !9038
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %21, ptr align 4 %_18, i32 8, i1 false), !dbg !9038
  %22 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args3, i32 2, !dbg !9038
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %22, ptr align 4 %_19, i32 8, i1 false), !dbg !9038
  %23 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args3, i32 3, !dbg !9038
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %23, ptr align 4 %_20, i32 8, i1 false), !dbg !9038
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h65b816c58701147fE"(ptr sret([24 x i8]) align 4 %_10, ptr align 4 @alloc_597d0d0cadbebb25ae7939c6fc833a99, ptr align 4 %args3) #17, !dbg !9039
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_10, ptr align 4 %4) #18, !dbg !9054
  unreachable, !dbg !9054

bb6:                                              ; preds = %bb5
  store ptr %op, ptr %args4, align 4, !dbg !9055
  %24 = getelementptr inbounds i8, ptr %args4, i32 4, !dbg !9055
  store ptr %left, ptr %24, align 4, !dbg !9055
  %25 = getelementptr inbounds i8, ptr %args4, i32 8, !dbg !9055
  store ptr %right, ptr %25, align 4, !dbg !9055
  %_35 = load ptr, ptr %args4, align 4, !dbg !9040
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h50897f56d49ff652E(ptr sret([8 x i8]) align 4 %_30, ptr align 4 %_35) #17, !dbg !9040
  %26 = getelementptr inbounds i8, ptr %args4, i32 4, !dbg !9040
  %_40 = load ptr, ptr %26, align 4, !dbg !9040
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17hfd367f54582a32f4E(ptr sret([8 x i8]) align 4 %_31, ptr align 4 %_40) #17, !dbg !9040
  %27 = getelementptr inbounds i8, ptr %args4, i32 8, !dbg !9040
  %_41 = load ptr, ptr %27, align 4, !dbg !9040
; call core::fmt::rt::Argument::new_debug
  call void @_ZN4core3fmt2rt8Argument9new_debug17hfd367f54582a32f4E(ptr sret([8 x i8]) align 4 %_32, ptr align 4 %_41) #17, !dbg !9040
  %28 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args5, i32 0, !dbg !9040
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %28, ptr align 4 %_30, i32 8, i1 false), !dbg !9040
  %29 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args5, i32 1, !dbg !9040
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %29, ptr align 4 %_31, i32 8, i1 false), !dbg !9040
  %30 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args5, i32 2, !dbg !9040
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %30, ptr align 4 %_32, i32 8, i1 false), !dbg !9040
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h6d1b11f6189ac0beE"(ptr sret([24 x i8]) align 4 %_24, ptr align 4 @alloc_df6180be46d27f739349b4d5526bbf05, ptr align 4 %args5) #17, !dbg !9041
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_24, ptr align 4 %4) #18, !dbg !9055
  unreachable, !dbg !9055
}

; core::panicking::panic
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 %expr.0, i32 %expr.1, ptr align 4 %0) unnamed_addr #4 !dbg !9056 {
start:
  %expr.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  store ptr %expr.0, ptr %expr.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %expr.dbg.spill, i32 4
  store i32 %expr.1, ptr %1, align 4
    #dbg_declare(ptr %expr.dbg.spill, !9060, !DIExpression(), !9061)
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_5, i32 0, !dbg !9062
  store ptr %expr.0, ptr %2, align 4, !dbg !9062
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !9062
  store i32 %expr.1, ptr %3, align 4, !dbg !9062
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 %_5) #17, !dbg !9063
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_3, ptr align 4 %0) #18, !dbg !9064
  unreachable, !dbg !9064
}

; core::panicking::panic_fmt
; Function Attrs: inlinehint noreturn nounwind
define internal void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %fmt, ptr align 4 %0) unnamed_addr #4 !dbg !9065 {
start:
    #dbg_declare(ptr %fmt, !9069, !DIExpression(), !9072)
  call void @llvm.trap(), !dbg !9073
  unreachable, !dbg !9073
}

; core::ub_checks::maybe_is_aligned
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned17h9894fc37ada87e73E(ptr %ptr, i32 %align) unnamed_addr #2 !dbg !9074 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9079, !DIExpression(), !9081)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !9080, !DIExpression(), !9082)
; call core::ub_checks::maybe_is_aligned::runtime
  %_0 = call zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned7runtime17hb58490c59891d4c9E(ptr %ptr, i32 %align) #17, !dbg !9083
  ret i1 %_0, !dbg !9085
}

; core::ub_checks::maybe_is_aligned::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned7runtime17hb58490c59891d4c9E(ptr %ptr, i32 %align) unnamed_addr #2 !dbg !9086 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9089, !DIExpression(), !9091)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !9090, !DIExpression(), !9091)
; call core::ptr::const_ptr::<impl *const T>::is_aligned_to
  %_0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h9d68787d1567a990E"(ptr %ptr, i32 %align) #17, !dbg !9092
  ret i1 %_0, !dbg !9094
}

; core::ub_checks::check_language_ub
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() unnamed_addr #2 !dbg !9095 {
start:
  %_0 = alloca [1 x i8], align 1
  br label %bb1, !dbg !9096

bb1:                                              ; preds = %start
; call core::ub_checks::check_language_ub::runtime
  %0 = call zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17h95447c125060130fE() #17, !dbg !9097
  %1 = zext i1 %0 to i8, !dbg !9097
  store i8 %1, ptr %_0, align 1, !dbg !9097
  br label %bb3, !dbg !9097

bb3:                                              ; preds = %bb1
  %2 = load i8, ptr %_0, align 1, !dbg !9099
  %3 = trunc nuw i8 %2 to i1, !dbg !9099
  ret i1 %3, !dbg !9099

bb2:                                              ; No predecessors!
  unreachable
}

; core::ub_checks::check_language_ub::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks17check_language_ub7runtime17h95447c125060130fE() unnamed_addr #2 !dbg !9100 {
start:
  ret i1 true, !dbg !9102
}

; core::ub_checks::maybe_is_nonoverlapping
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping17h181d6ea8dbb6d1a3E(ptr %src, ptr %dst, i32 %size, i32 %count) unnamed_addr #2 !dbg !9103 {
start:
  %count.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [16 x i8], align 4
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !9107, !DIExpression(), !9111)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !9108, !DIExpression(), !9112)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !9109, !DIExpression(), !9113)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !9110, !DIExpression(), !9114)
  store ptr %src, ptr %_5, align 4, !dbg !9115
  %0 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !9115
  store ptr %dst, ptr %0, align 4, !dbg !9115
  %1 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !9115
  store i32 %size, ptr %1, align 4, !dbg !9115
  %2 = getelementptr inbounds i8, ptr %_5, i32 12, !dbg !9115
  store i32 %count, ptr %2, align 4, !dbg !9115
  %3 = load ptr, ptr %_5, align 4, !dbg !9117
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !9117
  %5 = load ptr, ptr %4, align 4, !dbg !9117
  %6 = getelementptr inbounds i8, ptr %_5, i32 8, !dbg !9117
  %7 = load i32, ptr %6, align 4, !dbg !9117
  %8 = getelementptr inbounds i8, ptr %_5, i32 12, !dbg !9117
  %9 = load i32, ptr %8, align 4, !dbg !9117
; call core::ub_checks::maybe_is_nonoverlapping::runtime
  %_0 = call zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping7runtime17h6bf1cd564fcdd605E(ptr %3, ptr %5, i32 %7, i32 %9) #17, !dbg !9117
  ret i1 %_0, !dbg !9118
}

; core::ub_checks::maybe_is_nonoverlapping::runtime
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks23maybe_is_nonoverlapping7runtime17h6bf1cd564fcdd605E(ptr %src, ptr %dst, i32 %size, i32 %count) unnamed_addr #2 !dbg !9119 {
start:
  %self.dbg.spill.i7 = alloca [4 x i8], align 4
  %self.dbg.spill.i6 = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %diff.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill2 = alloca [4 x i8], align 4
  %dst_usize.dbg.spill = alloca [4 x i8], align 4
  %src_usize.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %dst.dbg.spill = alloca [4 x i8], align 4
  %src.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  store ptr %src, ptr %src.dbg.spill, align 4
    #dbg_declare(ptr %src.dbg.spill, !9122, !DIExpression(), !9134)
  store ptr %dst, ptr %dst.dbg.spill, align 4
    #dbg_declare(ptr %dst.dbg.spill, !9123, !DIExpression(), !9134)
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !9124, !DIExpression(), !9134)
  store i32 %count, ptr %count.dbg.spill, align 4
    #dbg_declare(ptr %count.dbg.spill, !9125, !DIExpression(), !9134)
  store ptr %src, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !3803, !DIExpression(), !9135)
  store ptr %src, ptr %self.dbg.spill.i6, align 4
    #dbg_declare(ptr %self.dbg.spill.i6, !3810, !DIExpression(), !9138)
  %_0.i5 = ptrtoint ptr %src to i32, !dbg !9140
  store i32 %_0.i5, ptr %src_usize.dbg.spill, align 4, !dbg !9141
    #dbg_declare(ptr %src_usize.dbg.spill, !9126, !DIExpression(), !9142)
  store ptr %dst, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !3803, !DIExpression(), !9143)
  store ptr %dst, ptr %self.dbg.spill.i7, align 4
    #dbg_declare(ptr %self.dbg.spill.i7, !3810, !DIExpression(), !9145)
  %_0.i = ptrtoint ptr %dst to i32, !dbg !9147
  store i32 %_0.i, ptr %dst_usize.dbg.spill, align 4, !dbg !9148
    #dbg_declare(ptr %dst_usize.dbg.spill, !9128, !DIExpression(), !9149)
; call core::num::<impl usize>::checked_mul
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E"(i32 %size, i32 %count) #17, !dbg !9150
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !9150
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !9150
  store i32 %1, ptr %_9, align 4, !dbg !9150
  %3 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !9150
  store i32 %2, ptr %3, align 4, !dbg !9150
  %_10 = load i32, ptr %_9, align 4, !dbg !9151
  %4 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !9151
  %5 = load i32, ptr %4, align 4, !dbg !9151
  %6 = trunc nuw i32 %_10 to i1, !dbg !9152
  br i1 %6, label %bb4, label %bb5, !dbg !9152

bb4:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !9153
  %size1 = load i32, ptr %7, align 4, !dbg !9153
  store i32 %size1, ptr %size.dbg.spill2, align 4, !dbg !9153
    #dbg_declare(ptr %size.dbg.spill2, !9130, !DIExpression(), !9154)
; call core::num::<impl usize>::abs_diff
  %diff = call i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17h44069b1809cd594fE"(i32 %_0.i5, i32 %_0.i) #17, !dbg !9155
  store i32 %diff, ptr %diff.dbg.spill, align 4, !dbg !9155
    #dbg_declare(ptr %diff.dbg.spill, !9132, !DIExpression(), !9156)
  %_0 = icmp uge i32 %diff, %size1, !dbg !9157
  ret i1 %_0, !dbg !9158

bb5:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h92ec681c78bc5927E(ptr align 1 @alloc_763310d78c99c2c1ad3f8a9821e942f3, i32 61) #18, !dbg !9159
  unreachable, !dbg !9159

bb7:                                              ; No predecessors!
  unreachable, !dbg !9160
}

; core::ub_checks::is_valid_allocation_size
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks24is_valid_allocation_size17hf07e9f27c08ad4ddE(i32 %size, i32 %len) unnamed_addr #2 !dbg !9161 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %max_len = alloca [4 x i8], align 4
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !9163, !DIExpression(), !9167)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !9164, !DIExpression(), !9168)
    #dbg_declare(ptr %max_len, !9165, !DIExpression(), !9169)
  %0 = icmp eq i32 %size, 0, !dbg !9170
  br i1 %0, label %bb1, label %bb2, !dbg !9170

bb1:                                              ; preds = %start
  store i32 -1, ptr %max_len, align 4, !dbg !9171
  br label %bb4, !dbg !9172

bb2:                                              ; preds = %start
  %_5 = icmp eq i32 %size, 0, !dbg !9173
  br i1 %_5, label %panic, label %bb3, !dbg !9173

bb4:                                              ; preds = %bb3, %bb1
  %_6 = load i32, ptr %max_len, align 4, !dbg !9174
  %_0 = icmp ule i32 %len, %_6, !dbg !9175
  ret i1 %_0, !dbg !9176

bb3:                                              ; preds = %bb2
  %1 = udiv i32 2147483647, %size, !dbg !9173
  store i32 %1, ptr %max_len, align 4, !dbg !9173
  br label %bb4, !dbg !9172

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_div_by_zero
  call void @_ZN4core9panicking11panic_const23panic_const_div_by_zero17h5051c6ff4ea8e3faE(ptr align 4 @alloc_329dec4fe38a59083c3b039c87a8d615) #18, !dbg !9173
  unreachable, !dbg !9173
}

; core::ub_checks::maybe_is_aligned_and_not_null
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E(ptr %ptr, i32 %align, i1 zeroext %is_zst) unnamed_addr #2 !dbg !9177 {
start:
  %is_zst.dbg.spill = alloca [1 x i8], align 1
  %align.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9181, !DIExpression(), !9184)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !9182, !DIExpression(), !9185)
  %0 = zext i1 %is_zst to i8
  store i8 %0, ptr %is_zst.dbg.spill, align 1
    #dbg_declare(ptr %is_zst.dbg.spill, !9183, !DIExpression(), !9186)
; call core::ub_checks::maybe_is_aligned
  %_4 = call zeroext i1 @_ZN4core9ub_checks16maybe_is_aligned17h9894fc37ada87e73E(ptr %ptr, i32 %align) #17, !dbg !9187
  br i1 %_4, label %bb2, label %bb3, !dbg !9187

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !9187
  br label %bb7, !dbg !9187

bb2:                                              ; preds = %start
  br i1 %is_zst, label %bb4, label %bb5, !dbg !9188

bb7:                                              ; preds = %bb4, %bb5, %bb3
  %1 = load i8, ptr %_0, align 1, !dbg !9189
  %2 = trunc nuw i8 %1 to i1, !dbg !9189
  ret i1 %2, !dbg !9189

bb5:                                              ; preds = %bb2
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_5 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf56eacc16313c5f5E"(ptr %ptr) #17, !dbg !9190
  %3 = xor i1 %_5, true, !dbg !9191
  %4 = zext i1 %3 to i8, !dbg !9191
  store i8 %4, ptr %_0, align 1, !dbg !9191
  br label %bb7, !dbg !9192

bb4:                                              ; preds = %bb2
  store i8 1, ptr %_0, align 1, !dbg !9192
  br label %bb7, !dbg !9192
}

; <(U,T) as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN50_$LT$$LP$U$C$T$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h834ab37bfdc2f8e5E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !9193 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %T = alloca [4 x i8], align 4
  %U = alloca [4 x i8], align 4
  %builder = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9196, !DIExpression(), !9212)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !9197, !DIExpression(), !9213)
    #dbg_declare(ptr %builder, !9198, !DIExpression(), !9214)
    #dbg_declare(ptr %U, !9207, !DIExpression(), !9215)
    #dbg_declare(ptr %T, !9209, !DIExpression(), !9215)
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h6b1332a2f9e3757dE(ptr sret([12 x i8]) align 4 %builder, ptr align 4 %f, ptr align 1 inttoptr (i32 1 to ptr), i32 0) #17, !dbg !9216
  store ptr %self, ptr %U, align 4, !dbg !9217
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !9217
  store ptr %0, ptr %T, align 4, !dbg !9217
; call core::fmt::builders::DebugTuple::field
  %_7 = call align 4 ptr @_ZN4core3fmt8builders10DebugTuple5field17h8986a07ca92d9240E(ptr align 4 %builder, ptr align 1 %U, ptr align 4 @vtable.2) #17, !dbg !9218
; call core::fmt::builders::DebugTuple::field
  %_11 = call align 4 ptr @_ZN4core3fmt8builders10DebugTuple5field17h8986a07ca92d9240E(ptr align 4 %builder, ptr align 1 %T, ptr align 4 @vtable.3) #17, !dbg !9218
; call core::fmt::builders::DebugTuple::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hc4ba190d2045a9c6E(ptr align 4 %builder) #17, !dbg !9219
  ret i1 %_0, !dbg !9220
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E"(i32 %self.0, i32 %self.1, ptr align 4 %0) unnamed_addr #2 !dbg !9221 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store i32 %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !9226, !DIExpression(), !9230)
; call <alloc::collections::TryReserveError as core::convert::From<alloc::collections::TryReserveErrorKind>>::from
  %2 = call { i32, i32 } @"_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17had8cb7e0f7597304E"(i32 %self.0, i32 %self.1) #17, !dbg !9231
  %_0.0 = extractvalue { i32, i32 } %2, 0, !dbg !9231
  %_0.1 = extractvalue { i32, i32 } %2, 1, !dbg !9231
  %3 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !9232
  %4 = insertvalue { i32, i32 } %3, i32 %_0.1, 1, !dbg !9232
  ret { i32, i32 } %4, !dbg !9232
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha9f6daaa8dcf4fd2E"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %0) unnamed_addr #2 !dbg !9233 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill, !9237, !DIExpression(), !9241)
; call alloc::boxed::convert::<impl core::convert::From<&[T]> for alloc::boxed::Box<[T]>>::from
  %2 = call { ptr, i32 } @"_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17h1a1cbdc56ea64e36E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !9242
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9242
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9242
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9243
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !9243
  ret { ptr, i32 } %4, !dbg !9243
}

; <T as core::convert::Into<U>>::into
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb85bfb109eca2be5E"(ptr %self, ptr align 4 %0) unnamed_addr #2 !dbg !9244 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9248, !DIExpression(), !9252)
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_0 = call ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9667c3a18e98260fE"(ptr %self) #17, !dbg !9253
  ret ptr %_0, !dbg !9254
}

; <u8 as core::iter::traits::accum::Sum>::sum
; Function Attrs: nounwind
define dso_local i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h633143ec2d3d47baE"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !9255 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !9258, !DIExpression(), !9261)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i8 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h7f4571960d69e0faE"(ptr %iter.0, ptr %iter.1, i8 0) #17, !dbg !9262
  ret i8 %_0, !dbg !9263
}

; <u8 as core::iter::traits::accum::Sum>::sum::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h76494bbec28dd2d5E"(ptr align 1 %_1, i8 %a, i8 %b) unnamed_addr #2 !dbg !9264 {
start:
  %b.dbg.spill = alloca [1 x i8], align 1
  %a.dbg.spill = alloca [1 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !9271, !DIExpression(), !9272)
  store i8 %a, ptr %a.dbg.spill, align 1
    #dbg_declare(ptr %a.dbg.spill, !9269, !DIExpression(), !9273)
  store i8 %b, ptr %b.dbg.spill, align 1
    #dbg_declare(ptr %b.dbg.spill, !9270, !DIExpression(), !9274)
  %_4.0 = add i8 %a, %b, !dbg !9275
  %_4.1 = icmp ult i8 %_4.0, %a, !dbg !9275
  br i1 %_4.1, label %panic, label %bb1, !dbg !9275

bb1:                                              ; preds = %start
  ret i8 %_4.0, !dbg !9276

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_5c43ed6f6908ea217cb78f182d0fdb8d) #18, !dbg !9275
  unreachable, !dbg !9275
}

; <&str as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nounwind
define internal void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd4160544094e76aeE"(ptr sret([64 x i8]) align 8 %_0, ptr align 1 %self.0, i32 %self.1, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #2 !dbg !9277 {
start:
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9320, !DIExpression(), !9322)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %1, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !9321, !DIExpression(), !9323)
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17hd72aa41e5ff4ca63E(ptr sret([64 x i8]) align 8 %_0, ptr align 1 %haystack.0, i32 %haystack.1, ptr align 1 %self.0, i32 %self.1) #17, !dbg !9324
  ret void, !dbg !9325
}

; <usize as core::iter::traits::accum::Sum>::sum
; Function Attrs: nounwind
define dso_local i32 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h00e688882549e0c6E"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !9326 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !9328, !DIExpression(), !9331)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  %_0 = call i32 @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h45d345b8de3281a9E"(ptr %iter.0, ptr %iter.1, i32 0) #17, !dbg !9332
  ret i32 %_0, !dbg !9333
}

; <usize as core::iter::traits::accum::Sum>::sum::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17hf3d98d5c7cb8263eE"(ptr align 1 %_1, i32 %a, i32 %b) unnamed_addr #2 !dbg !9334 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !9341, !DIExpression(), !9342)
  store i32 %a, ptr %a.dbg.spill, align 4
    #dbg_declare(ptr %a.dbg.spill, !9339, !DIExpression(), !9343)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !9340, !DIExpression(), !9344)
  %_4.0 = add i32 %a, %b, !dbg !9345
  %_4.1 = icmp ult i32 %_4.0, %a, !dbg !9345
  br i1 %_4.1, label %panic, label %bb1, !dbg !9345

bb1:                                              ; preds = %start
  ret i32 %_4.0, !dbg !9346

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_5c43ed6f6908ea217cb78f182d0fdb8d) #18, !dbg !9345
  unreachable, !dbg !9345
}

; <alloc::string::Drain as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN57_$LT$alloc..string..Drain$u20$as$u20$core..fmt..Debug$GT$3fmt17h46d880b4ac377b22E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !9347 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9360, !DIExpression(), !9362)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !9361, !DIExpression(), !9363)
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h6b1332a2f9e3757dE(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %f, ptr align 1 @alloc_7c803916a094a5a08efe0ee16b3f38af, i32 5) #17, !dbg !9364
; call alloc::string::Drain::as_str
  %0 = call { ptr, i32 } @_ZN5alloc6string5Drain6as_str17he2aaed28f3bd3c11E(ptr align 4 %self) #17, !dbg !9365
  %1 = extractvalue { ptr, i32 } %0, 0, !dbg !9365
  %2 = extractvalue { ptr, i32 } %0, 1, !dbg !9365
  store ptr %1, ptr %_9, align 4, !dbg !9365
  %3 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !9365
  store i32 %2, ptr %3, align 4, !dbg !9365
; call core::fmt::builders::DebugTuple::field
  %_3 = call align 4 ptr @_ZN4core3fmt8builders10DebugTuple5field17h8986a07ca92d9240E(ptr align 4 %_5, ptr align 1 %_9, ptr align 4 @vtable.4) #17, !dbg !9366
; call core::fmt::builders::DebugTuple::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hc4ba190d2045a9c6E(ptr align 4 %_3) #17, !dbg !9367
  ret i1 %_0, !dbg !9368
}

; <alloc::string::String as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17h68e51c38356b61cbE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !9369 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9375, !DIExpression(), !9377)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !9376, !DIExpression(), !9378)
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h674e141af3001a2dE"(ptr align 4 %self) #17, !dbg !9379
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !9379
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !9379
; call <str as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h260472e2af1bf49dE"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 %f) #17, !dbg !9380
  ret i1 %_0, !dbg !9381
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17hd9bae8fdfa467958E"(ptr align 4 %self, i32 %c) unnamed_addr #2 !dbg !9382 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9387, !DIExpression(), !9389)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !9388, !DIExpression(), !9390)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %self, i32 %c) #17, !dbg !9391
  ret i1 false, !dbg !9392
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17he33dda6c037d345bE"(ptr align 4 %self, ptr align 1 %s.0, i32 %s.1) unnamed_addr #2 !dbg !9393 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9397, !DIExpression(), !9399)
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !9398, !DIExpression(), !9400)
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %self, ptr align 1 %s.0, i32 %s.1) #17, !dbg !9401
  ret i1 false, !dbg !9402
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17hd00f5b8f953c5378E"(ptr align 1 %self) unnamed_addr #2 !dbg !9403 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9409, !DIExpression(), !9410)
  ret void, !dbg !9411
}

; <alloc::wtf8::Wtf8Buf as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN59_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..fmt..Display$GT$3fmt17h6dccffb25b3aeae7E"(ptr align 4 %self, ptr align 4 %formatter) unnamed_addr #1 !dbg !9412 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  %formatter.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9424, !DIExpression(), !9428)
  store ptr %formatter, ptr %formatter.dbg.spill, align 4
    #dbg_declare(ptr %formatter.dbg.spill, !9425, !DIExpression(), !9429)
; call alloc::wtf8::Wtf8Buf::as_known_utf8
  %0 = call { ptr, i32 } @_ZN5alloc4wtf87Wtf8Buf13as_known_utf817h68284879eece96fcE(ptr align 4 %self) #17, !dbg !9430
  %1 = extractvalue { ptr, i32 } %0, 0, !dbg !9430
  %2 = extractvalue { ptr, i32 } %0, 1, !dbg !9430
  store ptr %1, ptr %_3, align 4, !dbg !9430
  %3 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !9430
  store i32 %2, ptr %3, align 4, !dbg !9430
  %4 = load ptr, ptr %_3, align 4, !dbg !9431
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !9431
  %6 = load i32, ptr %5, align 4, !dbg !9431
  %7 = ptrtoint ptr %4 to i32, !dbg !9431
  %8 = icmp eq i32 %7, 0, !dbg !9431
  %_4 = select i1 %8, i32 0, i32 1, !dbg !9431
  %9 = trunc nuw i32 %_4 to i1, !dbg !9432
  br i1 %9, label %bb2, label %bb3, !dbg !9432

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 4, !dbg !9433
  %10 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !9433
  %s.1 = load i32, ptr %10, align 4, !dbg !9433
  store ptr %s.0, ptr %s.dbg.spill, align 4, !dbg !9433
  %11 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4, !dbg !9433
  store i32 %s.1, ptr %11, align 4, !dbg !9433
    #dbg_declare(ptr %s.dbg.spill, !9426, !DIExpression(), !9433)
; call <str as core::fmt::Display>::fmt
  %12 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h7747b9db9493592eE"(ptr align 1 %s.0, i32 %s.1, ptr align 4 %formatter) #17, !dbg !9434
  %13 = zext i1 %12 to i8, !dbg !9434
  store i8 %13, ptr %_0, align 1, !dbg !9434
  br label %bb5, !dbg !9434

bb3:                                              ; preds = %start
; call <alloc::wtf8::Wtf8Buf as core::ops::deref::Deref>::deref
  %14 = call { ptr, i32 } @"_ZN64_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6dbca4ec3c2cbfe5E"(ptr align 4 %self) #17, !dbg !9435
  %_6.0 = extractvalue { ptr, i32 } %14, 0, !dbg !9435
  %_6.1 = extractvalue { ptr, i32 } %14, 1, !dbg !9435
; call <core::wtf8::Wtf8 as core::fmt::Display>::fmt
  %15 = call zeroext i1 @"_ZN55_$LT$core..wtf8..Wtf8$u20$as$u20$core..fmt..Display$GT$3fmt17haf7a1fa3a11b0887E"(ptr align 1 %_6.0, i32 %_6.1, ptr align 4 %formatter) #17, !dbg !9436
  %16 = zext i1 %15 to i8, !dbg !9436
  store i8 %16, ptr %_0, align 1, !dbg !9436
  br label %bb5, !dbg !9436

bb5:                                              ; preds = %bb3, %bb2
  %17 = load i8, ptr %_0, align 1, !dbg !9437
  %18 = trunc nuw i8 %17 to i1, !dbg !9437
  ret i1 %18, !dbg !9437

bb6:                                              ; No predecessors!
  unreachable, !dbg !9438
}

; alloc::collections::TryReserveError::kind
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @_ZN5alloc11collections15TryReserveError4kind17h3365508834357dd0E(ptr align 4 %self) unnamed_addr #2 !dbg !9439 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9445, !DIExpression(), !9446)
; call <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
  %0 = call { i32, i32 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17ha86a7b1c990e0e9fE"(ptr align 4 %self) #17, !dbg !9447
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !9447
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !9447
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !9448
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !9448
  ret { i32, i32 } %2, !dbg !9448
}

; alloc::collections::btree::node::splitpoint
; Function Attrs: nounwind
define dso_local void @_ZN5alloc11collections5btree4node10splitpoint17h59bb27f72dcf72afE(ptr sret([12 x i8]) align 4 %_0, i32 %edge_idx) unnamed_addr #1 !dbg !9449 {
start:
  %edge_idx.dbg.spill = alloca [4 x i8], align 4
  store i32 %edge_idx, ptr %edge_idx.dbg.spill, align 4
    #dbg_declare(ptr %edge_idx.dbg.spill, !9472, !DIExpression(), !9473)
  %_2 = icmp ule i32 %edge_idx, 11, !dbg !9474
  br i1 %_2, label %bb2, label %bb1, !dbg !9474

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_1ac27a7ad4b1fedc41713a13c30f215d, i32 38, ptr align 4 @alloc_4d388b9e1a02fab8fd9a9b4ef61447e3) #18, !dbg !9475
  unreachable, !dbg !9475

bb2:                                              ; preds = %start
  %_4 = icmp ule i32 0, %edge_idx, !dbg !9476
  br i1 %_4, label %bb6, label %bb5, !dbg !9476

bb5:                                              ; preds = %bb6, %bb2
  switch i32 %edge_idx, label %bb3 [
    i32 5, label %bb8
    i32 6, label %bb7
  ], !dbg !9477

bb6:                                              ; preds = %bb2
  %_5 = icmp ult i32 %edge_idx, 5, !dbg !9476
  br i1 %_5, label %bb4, label %bb5, !dbg !9476

bb4:                                              ; preds = %bb6
  store i32 4, ptr %_0, align 4, !dbg !9478
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9478
  store i32 0, ptr %0, align 4, !dbg !9478
  %1 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !9478
  store i32 %edge_idx, ptr %1, align 4, !dbg !9478
  br label %bb14, !dbg !9479

bb3:                                              ; preds = %bb5
  %_19.0 = sub i32 %edge_idx, 7, !dbg !9480
  %_19.1 = icmp ult i32 %edge_idx, 7, !dbg !9480
  br i1 %_19.1, label %panic, label %bb13, !dbg !9480

bb8:                                              ; preds = %bb5
  store i32 5, ptr %_0, align 4, !dbg !9481
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9481
  store i32 0, ptr %2, align 4, !dbg !9481
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !9481
  store i32 %edge_idx, ptr %3, align 4, !dbg !9481
  br label %bb14, !dbg !9482

bb7:                                              ; preds = %bb5
  store i32 5, ptr %_0, align 4, !dbg !9483
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9483
  store i32 1, ptr %4, align 4, !dbg !9483
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !9483
  store i32 0, ptr %5, align 4, !dbg !9483
  br label %bb14, !dbg !9484

bb14:                                             ; preds = %bb4, %bb13, %bb7, %bb8
  ret void, !dbg !9485

bb13:                                             ; preds = %bb3
  store i32 6, ptr %_0, align 4, !dbg !9486
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9486
  store i32 1, ptr %6, align 4, !dbg !9486
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !9486
  store i32 %_19.0, ptr %7, align 4, !dbg !9486
  br label %bb14, !dbg !9487

panic:                                            ; preds = %bb3
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_2fa1f14da61fa2954d7a9740aaf8a5a8) #18, !dbg !9480
  unreachable, !dbg !9480
}

; alloc::rc::Rc<T>::from_inner
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$10from_inner17h44aeff79326fb47fE"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !9488 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9500, !DIExpression(), !9501)
; call alloc::rc::Rc<T,A>::from_inner_in
  %1 = call { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17h1687f0a17f41dd4cE"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !9502
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9502
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9502
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9503
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !9503
  ret { ptr, i32 } %3, !dbg !9503
}

; alloc::rc::Rc<T>::allocate_for_layout
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$19allocate_for_layout17h69293dd76dae0c10E"(i32 %value_layout.0, i32 %value_layout.1, ptr align 4 %mem_to_rc_inner) unnamed_addr #1 !dbg !9504 {
start:
  %mem_to_rc_inner.dbg.spill = alloca [4 x i8], align 4
  %allocate.dbg.spill = alloca [0 x i8], align 1
  %value_layout.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %value_layout.0, ptr %value_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %value_layout.dbg.spill, i32 4
  store i32 %value_layout.1, ptr %0, align 4
    #dbg_declare(ptr %value_layout.dbg.spill, !9518, !DIExpression(), !9523)
    #dbg_declare(ptr %allocate.dbg.spill, !9519, !DIExpression(), !9524)
  store ptr %mem_to_rc_inner, ptr %mem_to_rc_inner.dbg.spill, align 4
    #dbg_declare(ptr %mem_to_rc_inner.dbg.spill, !9520, !DIExpression(), !9525)
    #dbg_declare(ptr %layout, !9521, !DIExpression(), !9526)
; call alloc::rc::rc_inner_layout_for_value_layout
  %1 = call { i32, i32 } @_ZN5alloc2rc32rc_inner_layout_for_value_layout17h6c6f54d46bc6df2eE(i32 %value_layout.0, i32 %value_layout.1) #17, !dbg !9527
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9527
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !9527
  store i32 %2, ptr %layout, align 4, !dbg !9527
  %4 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !9527
  store i32 %3, ptr %4, align 4, !dbg !9527
; call alloc::rc::Rc<T>::try_allocate_for_layout
  call void @"_ZN5alloc2rc11Rc$LT$T$GT$23try_allocate_for_layout17ha2d81cb34e01b8adE"(ptr sret([12 x i8]) align 4 %_5, i32 %value_layout.0, i32 %value_layout.1, ptr align 4 %mem_to_rc_inner) #17, !dbg !9528
; call core::result::Result<T,E>::unwrap_or_else
  %5 = call { ptr, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h8fc6d2a2227fa507E"(ptr align 4 %_5, ptr align 4 %layout, ptr align 4 @alloc_debba9ede09d9f4e5c41b104c1bdb935) #17, !dbg !9529
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !9529
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !9529
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9530
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !9530
  ret { ptr, i32 } %7, !dbg !9530
}

; alloc::rc::Rc<T>::allocate_for_layout::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$19allocate_for_layout28_$u7b$$u7b$closure$u7d$$u7d$17h84bc834276d50e30E"(ptr align 4 %_1) unnamed_addr #2 !dbg !9531 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !9535, !DIExpression(DW_OP_deref), !9537)
    #dbg_declare(ptr %_2.dbg.spill, !9536, !DIExpression(), !9538)
  %_4.0 = load i32, ptr %_1, align 4, !dbg !9539
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !9539
  %_4.1 = load i32, ptr %0, align 4, !dbg !9539
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h1e5cf49dcf30c6c7E(i32 %_4.0, i32 %_4.1) #18, !dbg !9540
  unreachable, !dbg !9540
}

; alloc::rc::Rc<T>::try_allocate_for_layout
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc2rc11Rc$LT$T$GT$23try_allocate_for_layout17ha2d81cb34e01b8adE"(ptr sret([12 x i8]) align 4 %_0, i32 %value_layout.0, i32 %value_layout.1, ptr align 4 %mem_to_rc_inner) unnamed_addr #2 !dbg !9541 {
start:
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %val.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %val.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right_val.dbg.spill = alloca [4 x i8], align 4
  %left_val.dbg.spill = alloca [4 x i8], align 4
  %inner.dbg.spill = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %residual.dbg.spill = alloca [0 x i8], align 1
  %mem_to_rc_inner.dbg.spill = alloca [4 x i8], align 4
  %allocate.dbg.spill = alloca [0 x i8], align 1
  %value_layout.dbg.spill = alloca [8 x i8], align 4
  %_25 = alloca [24 x i8], align 4
  %_17 = alloca [8 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %value_layout.0, ptr %value_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %value_layout.dbg.spill, i32 4
  store i32 %value_layout.1, ptr %0, align 4
    #dbg_declare(ptr %value_layout.dbg.spill, !9546, !DIExpression(), !9566)
    #dbg_declare(ptr %allocate.dbg.spill, !9547, !DIExpression(), !9567)
  store ptr %mem_to_rc_inner, ptr %mem_to_rc_inner.dbg.spill, align 4
    #dbg_declare(ptr %mem_to_rc_inner.dbg.spill, !9548, !DIExpression(), !9568)
    #dbg_declare(ptr %layout, !9549, !DIExpression(), !9569)
    #dbg_declare(ptr %residual.dbg.spill, !9553, !DIExpression(), !9570)
; call alloc::rc::rc_inner_layout_for_value_layout
  %1 = call { i32, i32 } @_ZN5alloc2rc32rc_inner_layout_for_value_layout17h6c6f54d46bc6df2eE(i32 %value_layout.0, i32 %value_layout.1) #17, !dbg !9571
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9571
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !9571
  store i32 %2, ptr %layout, align 4, !dbg !9571
  %4 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !9571
  store i32 %3, ptr %4, align 4, !dbg !9571
  %_7.0 = load i32, ptr %layout, align 4, !dbg !9572
  %5 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !9572
  %_7.1 = load i32, ptr %5, align 4, !dbg !9572
; call alloc::rc::Rc<[T]>::allocate_for_slice::{{closure}}
  %6 = call { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h53dfcd36625c322cE"(i32 %_7.0, i32 %_7.1) #17, !dbg !9572
  %_6.0 = extractvalue { ptr, i32 } %6, 0, !dbg !9572
  %_6.1 = extractvalue { ptr, i32 } %6, 1, !dbg !9572
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %7 = call { ptr, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h067890e4fde95786E"(ptr %_6.0, i32 %_6.1) #17, !dbg !9572
  %8 = extractvalue { ptr, i32 } %7, 0, !dbg !9572
  %9 = extractvalue { ptr, i32 } %7, 1, !dbg !9572
  store ptr %8, ptr %_5, align 4, !dbg !9572
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !9572
  store i32 %9, ptr %10, align 4, !dbg !9572
  %11 = load ptr, ptr %_5, align 4, !dbg !9572
  %12 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !9572
  %13 = load i32, ptr %12, align 4, !dbg !9572
  %14 = ptrtoint ptr %11 to i32, !dbg !9572
  %15 = icmp eq i32 %14, 0, !dbg !9572
  %_8 = select i1 %15, i32 1, i32 0, !dbg !9572
  %16 = trunc nuw i32 %_8 to i1, !dbg !9572
  br i1 %16, label %bb6, label %bb5, !dbg !9572

bb6:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdcf57f4260b9a90fE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 @alloc_7f4a080ec5941f85872c03902ba9ad20) #17, !dbg !9573
  br label %bb19, !dbg !9574

bb5:                                              ; preds = %start
  %ptr.0 = load ptr, ptr %_5, align 4, !dbg !9572
  %17 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !9572
  %ptr.1 = load i32, ptr %17, align 4, !dbg !9572
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !9572
  %18 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !9572
  store i32 %ptr.1, ptr %18, align 4, !dbg !9572
    #dbg_declare(ptr %ptr.dbg.spill, !9551, !DIExpression(), !9575)
    #dbg_declare(ptr %ptr.dbg.spill, !9555, !DIExpression(), !9576)
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_14 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2f422c653439189dE"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !9577
  store ptr %_14, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !4329, !DIExpression(), !9578)
; call alloc::rc::Rc<[T]>::allocate_for_slice::{{closure}}
  %19 = call { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h73212051466d7917E"(ptr align 4 %mem_to_rc_inner, ptr %_14) #17, !dbg !9580
  %inner.0 = extractvalue { ptr, i32 } %19, 0, !dbg !9580
  %inner.1 = extractvalue { ptr, i32 } %19, 1, !dbg !9580
  store ptr %inner.0, ptr %inner.dbg.spill, align 4, !dbg !9580
  %20 = getelementptr inbounds i8, ptr %inner.dbg.spill, i32 4, !dbg !9580
  store i32 %inner.1, ptr %20, align 4, !dbg !9580
    #dbg_declare(ptr %inner.dbg.spill, !9557, !DIExpression(), !9581)
; call core::alloc::layout::Layout::for_value_raw
  %21 = call { i32, i32 } @_ZN4core5alloc6layout6Layout13for_value_raw17h09860ca8dbc1ac9cE(ptr %inner.0, i32 %inner.1) #17, !dbg !9582
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !9582
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !9582
  store i32 %22, ptr %_17, align 4, !dbg !9582
  %24 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !9582
  store i32 %23, ptr %24, align 4, !dbg !9582
  store ptr %_17, ptr %left_val.dbg.spill, align 4, !dbg !9583
    #dbg_declare(ptr %left_val.dbg.spill, !9559, !DIExpression(), !9584)
  store ptr %layout, ptr %right_val.dbg.spill, align 4, !dbg !9583
    #dbg_declare(ptr %right_val.dbg.spill, !9562, !DIExpression(), !9584)
; call <core::alloc::layout::Layout as core::cmp::PartialEq>::eq
  %_22 = call zeroext i1 @"_ZN68_$LT$core..alloc..layout..Layout$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0e3def2e6f7d49aE"(ptr align 4 %_17, ptr align 4 %layout) #17, !dbg !9584
  br i1 %_22, label %bb14, label %bb13, !dbg !9584

bb13:                                             ; preds = %bb5
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !9584
    #dbg_declare(ptr %kind.dbg.spill, !9563, !DIExpression(), !9585)
  store ptr null, ptr %_25, align 4, !dbg !9585
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hf2b3c7a53ef8be1eE(i8 0, ptr align 4 %_17, ptr align 4 %layout, ptr align 4 %_25, ptr align 4 @alloc_1b6a038938a83810c36a031b196509a0) #18, !dbg !9585
  unreachable, !dbg !9585

bb14:                                             ; preds = %bb5
; call core::cell::Cell<T>::new
  %_28 = call i32 @"_ZN4core4cell13Cell$LT$T$GT$3new17h4393201bae3dbf67E"(i32 1) #17, !dbg !9586
  store ptr %inner.0, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !9587, !DIExpression(), !9591)
  store i32 %_28, ptr %val.dbg.spill.i1, align 4
    #dbg_declare(ptr %val.dbg.spill.i1, !9590, !DIExpression(), !9593)
; call core::ptr::write
  call void @_ZN4core3ptr5write17hb8dcf6731a19344fE(ptr %inner.0, i32 %_28, ptr align 4 @alloc_a97c99214fc24fb1b7716eff3d5a33fa) #17, !dbg !9594
  %_30 = getelementptr inbounds i8, ptr %inner.0, i32 4, !dbg !9595
; call core::cell::Cell<T>::new
  %_31 = call i32 @"_ZN4core4cell13Cell$LT$T$GT$3new17h4393201bae3dbf67E"(i32 1) #17, !dbg !9596
  store ptr %_30, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9587, !DIExpression(), !9597)
  store i32 %_31, ptr %val.dbg.spill.i, align 4
    #dbg_declare(ptr %val.dbg.spill.i, !9590, !DIExpression(), !9599)
; call core::ptr::write
  call void @_ZN4core3ptr5write17hb8dcf6731a19344fE(ptr %_30, i32 %_31, ptr align 4 @alloc_be912f8ba74a976d787c56a9401ff03f) #17, !dbg !9600
  %25 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !9601
  store ptr %inner.0, ptr %25, align 4, !dbg !9601
  %26 = getelementptr inbounds i8, ptr %25, i32 4, !dbg !9601
  store i32 %inner.1, ptr %26, align 4, !dbg !9601
  store i32 0, ptr %_0, align 4, !dbg !9601
  br label %bb19, !dbg !9574

bb19:                                             ; preds = %bb6, %bb14
  ret void, !dbg !9602

bb4:                                              ; No predecessors!
  unreachable, !dbg !9572
}

; alloc::rc::Rc<T>::from_ptr
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$8from_ptr17h98c160283f4ee6ecE"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !9603 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9608, !DIExpression(), !9609)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h887ea8867725a62aE"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_b08c3e5ee1a6b4f8bac236e5b418e76e) #17, !dbg !9610
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9610
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9610
; call alloc::rc::Rc<T>::from_inner
  %2 = call { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$10from_inner17h44aeff79326fb47fE"(ptr %_2.0, i32 %_2.1) #17, !dbg !9611
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9611
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9611
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9612
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !9612
  ret { ptr, i32 } %4, !dbg !9612
}

; alloc::rc::Rc<T>::from_raw
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$8from_raw17h6f48e13b04b279bbE"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !9613 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9625, !DIExpression(), !9626)
; call alloc::rc::Rc<T,A>::from_raw_in
  %1 = call { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_raw_in17h614bf3b00e90bd74E"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !9627
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9627
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9627
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9628
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !9628
  ret { ptr, i32 } %3, !dbg !9628
}

; alloc::rc::Rc<T>::into_raw
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$8into_raw17h2ab08474558f018aE"(ptr %this.0, i32 %this.1) unnamed_addr #1 !dbg !9629 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %this.dbg.spill = alloca [8 x i8], align 4
  %this = alloca [8 x i8], align 4
  store ptr %this.0, ptr %this.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %this.dbg.spill, i32 4
  store i32 %this.1, ptr %0, align 4
    #dbg_declare(ptr %this.dbg.spill, !9634, !DIExpression(), !9642)
    #dbg_declare(ptr %this, !9635, !DIExpression(), !9643)
  store ptr %this.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %this.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !9644, !DIExpression(), !9651)
  %2 = insertvalue { ptr, i32 } poison, ptr %this.0, 0, !dbg !9653
  %3 = insertvalue { ptr, i32 } %2, i32 %this.1, 1, !dbg !9653
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !9654
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !9654
  store ptr %4, ptr %this, align 4, !dbg !9654
  %6 = getelementptr inbounds i8, ptr %this, i32 4, !dbg !9654
  store i32 %5, ptr %6, align 4, !dbg !9654
  store ptr %this, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9655, !DIExpression(), !9663)
; call alloc::rc::Rc<T,A>::as_ptr
  %7 = call { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$6as_ptr17h49098fb28ff5c4d5E"(ptr align 4 %this) #17, !dbg !9665
  %_0.0 = extractvalue { ptr, i32 } %7, 0, !dbg !9665
  %_0.1 = extractvalue { ptr, i32 } %7, 1, !dbg !9665
  %8 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9666
  %9 = insertvalue { ptr, i32 } %8, i32 %_0.1, 1, !dbg !9666
  ret { ptr, i32 } %9, !dbg !9666
}

; alloc::rc::data_offset
; Function Attrs: nounwind
define dso_local i32 @_ZN5alloc2rc11data_offset17h217cf52f8b73d0ecE(ptr %ptr.0, i32 %ptr.1) unnamed_addr #1 !dbg !9667 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9669, !DIExpression(), !9670)
; call core::mem::align_of_val_raw
  %_2 = call i32 @_ZN4core3mem16align_of_val_raw17h2a204d6bcc5fa0a3E(ptr %ptr.0, i32 %ptr.1) #17, !dbg !9671
; call alloc::rc::data_offset_align
  %_0 = call i32 @_ZN5alloc2rc17data_offset_align17hcec6aee450e513eeE(i32 %_2) #17, !dbg !9672
  ret i32 %_0, !dbg !9673
}

; alloc::rc::Rc<T,A>::from_ptr_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_ptr_in17hce7a5d9ba848ce7bE"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !9674 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9679, !DIExpression(), !9681)
    #dbg_declare(ptr %alloc.dbg.spill, !9680, !DIExpression(), !9682)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9fbda931aa6e85ffE"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_3f04bf49dab1483fb74cb198a7c2d022) #17, !dbg !9683
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9683
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9683
; call alloc::rc::Rc<T,A>::from_inner_in
  %2 = call { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17he0e6f6bafa51fb1eE"(ptr %_3.0, i32 %_3.1) #17, !dbg !9684
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9684
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9684
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9685
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !9685
  ret { ptr, i32 } %4, !dbg !9685
}

; alloc::rc::Rc<T,A>::from_raw_in
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_raw_in17h614bf3b00e90bd74E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #1 !dbg !9686 {
start:
  %self.dbg.spill.i1.i = alloca [8 x i8], align 4
  %count.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %_0.i.i = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %rc_ptr.dbg.spill = alloca [8 x i8], align 4
  %offset.dbg.spill = alloca [4 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9691, !DIExpression(), !9697)
    #dbg_declare(ptr %alloc.dbg.spill, !9692, !DIExpression(), !9698)
; call alloc::rc::data_offset
  %offset = call i32 @_ZN5alloc2rc11data_offset17h217cf52f8b73d0ecE(ptr %ptr.0, i32 %ptr.1) #17, !dbg !9699
  store i32 %offset, ptr %offset.dbg.spill, align 4, !dbg !9699
    #dbg_declare(ptr %offset.dbg.spill, !9693, !DIExpression(), !9700)
  store ptr %ptr.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9701, !DIExpression(), !9707)
  store i32 %offset, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !9706, !DIExpression(), !9709)
  store ptr %ptr.0, ptr %self.dbg.spill.i1.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i1.i, i32 4
  store i32 %ptr.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i1.i, !9710, !DIExpression(), !9716)
  store ptr %ptr.0, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !9718, !DIExpression(), !9722)
  store i32 %offset, ptr %count.dbg.spill.i.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i.i, !9721, !DIExpression(), !9724)
; call core::ub_checks::check_language_ub
  %_3.i.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !9725
  br i1 %_3.i.i, label %bb2.i.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$8byte_sub17hf465fe39072e60a6E.exit", !dbg !9725

bb2.i.i:                                          ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::sub::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18precondition_check17h8fdae33813982b0eE"(ptr %ptr.0, i32 %offset, i32 1, ptr align 4 @alloc_8513a0b966609e9782a6298b1c45c99f) #17, !dbg !9727
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$8byte_sub17hf465fe39072e60a6E.exit", !dbg !9727

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$8byte_sub17hf465fe39072e60a6E.exit": ; preds = %start, %bb2.i.i
  %_7.i.i = sub nsw i32 0, %offset, !dbg !9728
  %3 = getelementptr inbounds i8, ptr %ptr.0, i32 %_7.i.i, !dbg !9729
  store ptr %3, ptr %_0.i.i, align 4, !dbg !9729
  %4 = load ptr, ptr %_0.i.i, align 4, !dbg !9730
; call core::ptr::const_ptr::<impl *const T>::with_metadata_of
  %5 = call { ptr, i32 } @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h18687fb54e0b84d8E"(ptr %4, ptr %ptr.0, i32 %ptr.1) #17, !dbg !9731
  %_0.0.i = extractvalue { ptr, i32 } %5, 0, !dbg !9731
  %_0.1.i = extractvalue { ptr, i32 } %5, 1, !dbg !9731
  %_5.0 = extractvalue { ptr, i32 } %5, 0, !dbg !9732
  %_5.1 = extractvalue { ptr, i32 } %5, 1, !dbg !9732
  store ptr %_5.0, ptr %rc_ptr.dbg.spill, align 4, !dbg !9733
  %6 = getelementptr inbounds i8, ptr %rc_ptr.dbg.spill, i32 4, !dbg !9733
  store i32 %_5.1, ptr %6, align 4, !dbg !9733
    #dbg_declare(ptr %rc_ptr.dbg.spill, !9695, !DIExpression(), !9734)
; call alloc::rc::Rc<T,A>::from_ptr_in
  %7 = call { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_ptr_in17hce7a5d9ba848ce7bE"(ptr %_5.0, i32 %_5.1) #17, !dbg !9735
  %_0.0 = extractvalue { ptr, i32 } %7, 0, !dbg !9735
  %_0.1 = extractvalue { ptr, i32 } %7, 1, !dbg !9735
  %8 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9736
  %9 = insertvalue { ptr, i32 } %8, i32 %_0.1, 1, !dbg !9736
  ret { ptr, i32 } %9, !dbg !9736
}

; alloc::rc::Rc<T,A>::from_inner_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17h1687f0a17f41dd4cE"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !9737 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9742, !DIExpression(), !9744)
    #dbg_declare(ptr %alloc.dbg.spill, !9743, !DIExpression(), !9745)
  %1 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !9746
  %2 = insertvalue { ptr, i32 } %1, i32 %ptr.1, 1, !dbg !9746
  ret { ptr, i32 } %2, !dbg !9746
}

; alloc::rc::Rc<T,A>::from_inner_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17he0e6f6bafa51fb1eE"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !9747 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !9752, !DIExpression(), !9754)
    #dbg_declare(ptr %alloc.dbg.spill, !9753, !DIExpression(), !9755)
  %1 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !9756
  %2 = insertvalue { ptr, i32 } %1, i32 %ptr.1, 1, !dbg !9756
  ret { ptr, i32 } %2, !dbg !9756
}

; alloc::rc::Rc<T,A>::as_ptr
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc15Rc$LT$T$C$A$GT$6as_ptr17h49098fb28ff5c4d5E"(ptr align 4 %this) unnamed_addr #1 !dbg !9757 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !9762, !DIExpression(), !9765)
  %_3.0 = load ptr, ptr %this, align 4, !dbg !9766
  %0 = getelementptr inbounds i8, ptr %this, i32 4, !dbg !9766
  %_3.1 = load i32, ptr %0, align 4, !dbg !9766
  store ptr %_3.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_3.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9767, !DIExpression(), !9773)
  %2 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !9775
  %3 = insertvalue { ptr, i32 } %2, i32 %_3.1, 1, !dbg !9775
  %ptr.0 = extractvalue { ptr, i32 } %3, 0, !dbg !9776
  %ptr.1 = extractvalue { ptr, i32 } %3, 1, !dbg !9776
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !9776
  %4 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !9776
  store i32 %ptr.1, ptr %4, align 4, !dbg !9776
    #dbg_declare(ptr %ptr.dbg.spill, !9763, !DIExpression(), !9777)
  %_4.0 = getelementptr inbounds i8, ptr %ptr.0, i32 8, !dbg !9778
  %5 = insertvalue { ptr, i32 } poison, ptr %_4.0, 0, !dbg !9779
  %6 = insertvalue { ptr, i32 } %5, i32 %ptr.1, 1, !dbg !9779
  ret { ptr, i32 } %6, !dbg !9779
}

; alloc::rc::data_offset_align
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN5alloc2rc17data_offset_align17hcec6aee450e513eeE(i32 %align) unnamed_addr #2 !dbg !9780 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !9784, !DIExpression(), !9787)
    #dbg_declare(ptr %layout, !9785, !DIExpression(), !9788)
; call core::alloc::layout::Layout::new
  %0 = call { i32, i32 } @_ZN4core5alloc6layout6Layout3new17h8411cd06de775e47E() #17, !dbg !9789
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !9789
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !9789
  store i32 %1, ptr %layout, align 4, !dbg !9789
  %3 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !9789
  store i32 %2, ptr %3, align 4, !dbg !9789
; call core::alloc::layout::Layout::size
  %_3 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !9790
; call core::alloc::layout::Layout::padding_needed_for
  %_5 = call i32 @_ZN4core5alloc6layout6Layout18padding_needed_for17h7c7334a8a9cd85d3E(ptr align 4 %layout, i32 %align) #17, !dbg !9791
  %_7.0 = add i32 %_3, %_5, !dbg !9792
  %_7.1 = icmp ult i32 %_7.0, %_3, !dbg !9792
  br i1 %_7.1, label %panic, label %bb4, !dbg !9792

bb4:                                              ; preds = %start
  ret i32 %_7.0, !dbg !9793

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_bef1b87e0f52c72d6e877c99b0cc3a10) #18, !dbg !9792
  unreachable, !dbg !9792
}

; alloc::rc::Rc<[T]>::copy_from_slice
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$15copy_from_slice17hc1e1af185925dfd7E"(ptr align 1 %v.0, i32 %v.1) unnamed_addr #1 !dbg !9794 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !9799, !DIExpression(), !9802)
; call alloc::rc::Rc<[T]>::allocate_for_slice
  %1 = call { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h3767b62e0f407519E"(i32 %v.1) #17, !dbg !9803
  %ptr.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9803
  %ptr.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9803
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !9803
  %2 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !9803
  store i32 %ptr.1, ptr %2, align 4, !dbg !9803
    #dbg_declare(ptr %ptr.dbg.spill, !9800, !DIExpression(), !9804)
  store ptr %v.0, ptr %self.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %v.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !447, !DIExpression(), !9805)
  %_7.0 = getelementptr inbounds i8, ptr %ptr.0, i32 8, !dbg !9807
  store ptr %v.0, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !458, !DIExpression(), !9808)
  store ptr %_7.0, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !465, !DIExpression(), !9810)
  store i32 %v.1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !466, !DIExpression(), !9811)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !9812
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !9812

bb2.i:                                            ; preds = %start
; call core::ptr::copy_nonoverlapping::precondition_check
  call void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %v.0, ptr %_7.0, i32 1, i32 1, i32 %v.1, ptr align 4 @alloc_15a52d1a884c78a5de92a2463d39823d) #17, !dbg !9813
  br label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !9813

_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit: ; preds = %start, %bb2.i
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_7.0, ptr align 1 %v.0, i32 %v.1, i1 false), !dbg !9814
; call alloc::rc::Rc<T>::from_ptr
  %4 = call { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$8from_ptr17h98c160283f4ee6ecE"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !9815
  %_0.0 = extractvalue { ptr, i32 } %4, 0, !dbg !9815
  %_0.1 = extractvalue { ptr, i32 } %4, 1, !dbg !9815
  %5 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9816
  %6 = insertvalue { ptr, i32 } %5, i32 %_0.1, 1, !dbg !9816
  ret { ptr, i32 } %6, !dbg !9816
}

; alloc::rc::Rc<[T]>::allocate_for_slice
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h3767b62e0f407519E"(i32 %0) unnamed_addr #1 !dbg !9817 {
start:
  %t.dbg.spill.i = alloca [8 x i8], align 4
  %e.i = alloca [0 x i8], align 1
  %self.i = alloca [8 x i8], align 4
  %len = alloca [4 x i8], align 4
  store i32 %0, ptr %len, align 4
    #dbg_declare(ptr %len, !9822, !DIExpression(), !9823)
  %1 = load i32, ptr %len, align 4, !dbg !9824
; call core::alloc::layout::Layout::array
  %2 = call { i32, i32 } @_ZN4core5alloc6layout6Layout5array17hbb3a65fd97d1bfd1E(i32 %1) #17, !dbg !9824
  %_3.0 = extractvalue { i32, i32 } %2, 0, !dbg !9824
  %_3.1 = extractvalue { i32, i32 } %2, 1, !dbg !9824
  store i32 %_3.0, ptr %self.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_3.1, ptr %3, align 4
    #dbg_declare(ptr %self.i, !9825, !DIExpression(), !9835)
    #dbg_declare(ptr %e.i, !9833, !DIExpression(), !9837)
  %4 = load i32, ptr %self.i, align 4, !dbg !9838
  %5 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !9838
  %6 = load i32, ptr %5, align 4, !dbg !9838
  %7 = icmp eq i32 %4, 0, !dbg !9838
  %_2.i = select i1 %7, i32 1, i32 0, !dbg !9838
  %8 = trunc nuw i32 %_2.i to i1, !dbg !9839
  br i1 %8, label %bb2.i, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h37b0cdb4594bde65E.exit", !dbg !9839

bb2.i:                                            ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17hbf072231b1fad67dE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i32 43, ptr align 1 %e.i, ptr align 4 @alloc_a96446c88e0beded17719cd1bae3b1b1) #18, !dbg !9840
  unreachable, !dbg !9840

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h37b0cdb4594bde65E.exit": ; preds = %start
  %t.0.i = load i32, ptr %self.i, align 4, !dbg !9841
  %9 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !9841
  %t.1.i = load i32, ptr %9, align 4, !dbg !9841
  store i32 %t.0.i, ptr %t.dbg.spill.i, align 4, !dbg !9841
  %10 = getelementptr inbounds i8, ptr %t.dbg.spill.i, i32 4, !dbg !9841
  store i32 %t.1.i, ptr %10, align 4, !dbg !9841
    #dbg_declare(ptr %t.dbg.spill.i, !9831, !DIExpression(), !9842)
  %11 = insertvalue { i32, i32 } poison, i32 %t.0.i, 0, !dbg !9843
  %12 = insertvalue { i32, i32 } %11, i32 %t.1.i, 1, !dbg !9843
  %_2.0 = extractvalue { i32, i32 } %12, 0, !dbg !9844
  %_2.1 = extractvalue { i32, i32 } %12, 1, !dbg !9844
; call alloc::rc::Rc<T>::allocate_for_layout
  %13 = call { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$19allocate_for_layout17h69293dd76dae0c10E"(i32 %_2.0, i32 %_2.1, ptr align 4 %len) #17, !dbg !9845
  %_0.0 = extractvalue { ptr, i32 } %13, 0, !dbg !9845
  %_0.1 = extractvalue { ptr, i32 } %13, 1, !dbg !9845
  %14 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9846
  %15 = insertvalue { ptr, i32 } %14, i32 %_0.1, 1, !dbg !9846
  ret { ptr, i32 } %15, !dbg !9846
}

; alloc::rc::Rc<[T]>::allocate_for_slice::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h53dfcd36625c322cE"(i32 %layout.0, i32 %layout.1) unnamed_addr #2 !dbg !9847 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !9852, !DIExpression(), !9853)
  store i32 %layout.0, ptr %layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4
  store i32 %layout.1, ptr %0, align 4
    #dbg_declare(ptr %layout.dbg.spill, !9851, !DIExpression(), !9854)
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE"(ptr align 1 inttoptr (i32 1 to ptr), i32 %layout.0, i32 %layout.1) #17, !dbg !9855
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9855
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9855
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9856
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !9856
  ret { ptr, i32 } %3, !dbg !9856
}

; alloc::rc::Rc<[T]>::allocate_for_slice::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h73212051466d7917E"(ptr align 4 %_1, ptr %mem) unnamed_addr #2 !dbg !9857 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %mem.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !9862, !DIExpression(DW_OP_deref), !9863)
  store ptr %mem, ptr %mem.dbg.spill, align 4
    #dbg_declare(ptr %mem.dbg.spill, !9861, !DIExpression(), !9864)
  store ptr %mem, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9865, !DIExpression(), !9870)
  %_5 = load i32, ptr %_1, align 4, !dbg !9872
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha3a5beed25bc1c5cE(ptr %mem, i32 %_5) #17, !dbg !9873
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !9873
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !9873
  %1 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !9874
  %2 = insertvalue { ptr, i32 } %1, i32 %_3.1, 1, !dbg !9874
  ret { ptr, i32 } %2, !dbg !9874
}

; alloc::rc::rc_inner_layout_for_value_layout
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN5alloc2rc32rc_inner_layout_for_value_layout17h6c6f54d46bc6df2eE(i32 %layout.0, i32 %layout.1) unnamed_addr #1 !dbg !9875 {
start:
  %e.i = alloca [0 x i8], align 1
  %layout.dbg.spill = alloca [8 x i8], align 4
  %_6 = alloca [8 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store i32 %layout.0, ptr %layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4
  store i32 %layout.1, ptr %0, align 4
    #dbg_declare(ptr %layout.dbg.spill, !9879, !DIExpression(), !9880)
; call core::alloc::layout::Layout::new
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout3new17h8411cd06de775e47E() #17, !dbg !9881
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !9881
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !9881
  store i32 %2, ptr %_6, align 4, !dbg !9881
  %4 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !9881
  store i32 %3, ptr %4, align 4, !dbg !9881
; call core::alloc::layout::Layout::extend
  call void @_ZN4core5alloc6layout6Layout6extend17h66fe036cba65f0e0E(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %_6, i32 %layout.0, i32 %layout.1) #17, !dbg !9882
    #dbg_declare(ptr %_3, !9883, !DIExpression(), !9893)
    #dbg_declare(ptr %_4, !9890, !DIExpression(), !9895)
    #dbg_declare(ptr %e.i, !9891, !DIExpression(), !9896)
  %5 = load i32, ptr %_4, align 4, !dbg !9897
  %6 = icmp eq i32 %5, 0, !dbg !9897
  %_2.i = select i1 %6, i32 1, i32 0, !dbg !9897
  %7 = trunc nuw i32 %_2.i to i1, !dbg !9898
  br i1 %7, label %bb2.i, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7b63fb84987f0c45E.exit", !dbg !9898

bb2.i:                                            ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17hbf072231b1fad67dE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i32 43, ptr align 1 %e.i, ptr align 4 @alloc_2a715f562894b28f3c5ca32d902d30c4) #18, !dbg !9899
  unreachable, !dbg !9899

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7b63fb84987f0c45E.exit": ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %_4, i32 12, i1 false), !dbg !9900
; call core::alloc::layout::Layout::pad_to_align
  %8 = call { i32, i32 } @_ZN4core5alloc6layout6Layout12pad_to_align17hd6bb20c13501b721E(ptr align 4 %_3) #17, !dbg !9901
  %_0.0 = extractvalue { i32, i32 } %8, 0, !dbg !9901
  %_0.1 = extractvalue { i32, i32 } %8, 1, !dbg !9901
  %9 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !9902
  %10 = insertvalue { i32, i32 } %9, i32 %_0.1, 1, !dbg !9902
  ret { i32, i32 } %10, !dbg !9902
}

; alloc::ffi::c_str::<impl core::default::Default for alloc::boxed::Box<core::ffi::c_str::CStr>>::default
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3ffi5c_str100_$LT$impl$u20$core..default..Default$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$7default17hddc8fc96dad6de2aE"() unnamed_addr #1 !dbg !9903 {
start:
; call alloc::ffi::c_str::<impl core::convert::From<&core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
  %0 = call { ptr, i32 } @"_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17hdfd5d25b40010dcbE"(ptr align 1 @alloc_914b2c69d7eca30497b9feaf15ac92f1, i32 1) #17, !dbg !9907
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !9907
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !9907
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9908
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !9908
  ret { ptr, i32 } %2, !dbg !9908
}

; alloc::ffi::c_str::<impl core::convert::From<&core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17hdfd5d25b40010dcbE"(ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !9909 {
start:
  %boxed.dbg.spill = alloca [8 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !9914, !DIExpression(), !9917)
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %1 = call { ptr, i32 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17hd036897479adf9ebE(ptr align 1 %s.0, i32 %s.1) #17, !dbg !9918
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9918
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9918
; call alloc::boxed::convert::<impl core::convert::From<&[T]> for alloc::boxed::Box<[T]>>::from
  %2 = call { ptr, i32 } @"_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17h1a1cbdc56ea64e36E"(ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !9919
  %boxed.0 = extractvalue { ptr, i32 } %2, 0, !dbg !9919
  %boxed.1 = extractvalue { ptr, i32 } %2, 1, !dbg !9919
  store ptr %boxed.0, ptr %boxed.dbg.spill, align 4, !dbg !9919
  %3 = getelementptr inbounds i8, ptr %boxed.dbg.spill, i32 4, !dbg !9919
  store i32 %boxed.1, ptr %3, align 4, !dbg !9919
    #dbg_declare(ptr %boxed.dbg.spill, !9915, !DIExpression(), !9920)
; call alloc::boxed::Box<T>::into_raw
  %4 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17ha41afd7940b056a7E"(ptr align 1 %boxed.0, i32 %boxed.1) #17, !dbg !9921
  %_5.0 = extractvalue { ptr, i32 } %4, 0, !dbg !9921
  %_5.1 = extractvalue { ptr, i32 } %4, 1, !dbg !9921
; call alloc::boxed::Box<T>::from_raw
  %5 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hfe770a3a0fb06ffdE"(ptr %_5.0, i32 %_5.1) #17, !dbg !9922
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !9922
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !9922
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9923
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !9923
  ret { ptr, i32 } %7, !dbg !9923
}

; alloc::ffi::c_str::<impl core::convert::From<&mut core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3ffi5c_str139_$LT$impl$u20$core..convert..From$LT$$RF$mut$u20$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h03f5acae6f222f58E"(ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !9924 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !9933, !DIExpression(), !9934)
; call alloc::ffi::c_str::<impl core::convert::From<&core::ffi::c_str::CStr> for alloc::boxed::Box<core::ffi::c_str::CStr>>::from
  %1 = call { ptr, i32 } @"_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17hdfd5d25b40010dcbE"(ptr align 1 %s.0, i32 %s.1) #17, !dbg !9935
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9935
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9935
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9936
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !9936
  ret { ptr, i32 } %3, !dbg !9936
}

; alloc::ffi::c_str::IntoStringError::utf8_error
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17h81e2e7abf5767986E(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !9937 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9943, !DIExpression(), !9944)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9945
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %0, i32 8, i1 false), !dbg !9945
  ret void, !dbg !9946
}

; alloc::ffi::c_str::IntoStringError::into_cstring
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17h66582bb5aba9df53E(ptr align 4 %self) unnamed_addr #1 !dbg !9947 {
start:
    #dbg_declare(ptr %self, !9952, !DIExpression(), !9953)
  %_0.0 = load ptr, ptr %self, align 4, !dbg !9954
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !9954
  %_0.1 = load i32, ptr %0, align 4, !dbg !9954
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9955
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !9955
  ret { ptr, i32 } %2, !dbg !9955
}

; alloc::ffi::c_str::FromVecWithNulError::into_bytes
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17hf6953d006eb999d9E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !9956 {
start:
    #dbg_declare(ptr %self, !9976, !DIExpression(), !9977)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9978
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %0, i32 12, i1 false), !dbg !9978
  ret void, !dbg !9979
}

; alloc::ffi::c_str::FromVecWithNulError::as_bytes
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17h5617e99a0cba297eE(ptr align 4 %self) unnamed_addr #1 !dbg !9980 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !9986, !DIExpression(), !9987)
  %_2 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !9988
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i32 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h21b98dc1e8dac725E"(ptr align 4 %_2, ptr align 4 @alloc_dd4b2f06adf47aee65e6c4a28c824eff) #17, !dbg !9989
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !9989
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !9989
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9990
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !9990
  ret { ptr, i32 } %2, !dbg !9990
}

; alloc::ffi::c_str::<impl core::ffi::c_str::CStr>::into_c_string
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17h41c1f35a0e008804E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !9991 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !9994, !DIExpression(), !9995)
; call <alloc::ffi::c_str::CString as core::convert::From<alloc::boxed::Box<core::ffi::c_str::CStr>>>::from
  %1 = call { ptr, i32 } @"_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17h064dad4af83ee6c3E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !9996
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !9996
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !9996
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !9997
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !9997
  ret { ptr, i32 } %3, !dbg !9997
}

; alloc::ffi::c_str::<impl core::ffi::c_str::CStr>::to_string_lossy
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17hdbbc177d25b3c72fE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !9998 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10003, !DIExpression(), !10004)
; call core::ffi::c_str::CStr::to_bytes
  %1 = call { ptr, i32 } @_ZN4core3ffi5c_str4CStr8to_bytes17hf4da749a303a719fE(ptr align 1 %self.0, i32 %self.1) #17, !dbg !10005
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10005
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10005
; call alloc::string::String::from_utf8_lossy
  call void @_ZN5alloc6string6String15from_utf8_lossy17h322252d81ba4304aE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !10006
  ret void, !dbg !10007
}

; alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::clone_into
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$10clone_into17h0299472760d34272E"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %target) unnamed_addr #1 !dbg !10008 {
start:
  %target.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_10 = alloca [12 x i8], align 4
  %b = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10014, !DIExpression(), !10018)
  store ptr %target, ptr %target.dbg.spill, align 4
    #dbg_declare(ptr %target.dbg.spill, !10015, !DIExpression(), !10019)
    #dbg_declare(ptr %b, !10016, !DIExpression(), !10020)
; call core::mem::take
  %1 = call { ptr, i32 } @_ZN4core3mem4take17h141cde2045e6ee7bE(ptr align 4 %target) #17, !dbg !10021
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10021
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10021
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h40445ef263cfe410E"(ptr sret([12 x i8]) align 4 %b, ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !10022
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %2 = call { ptr, i32 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17hd036897479adf9ebE(ptr align 1 %self.0, i32 %self.1) #17, !dbg !10023
  %_7.0 = extractvalue { ptr, i32 } %2, 0, !dbg !10023
  %_7.1 = extractvalue { ptr, i32 } %2, 1, !dbg !10023
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17h77f52a6af8cf214eE"(ptr align 1 %_7.0, i32 %_7.1, ptr align 4 %b) #17, !dbg !10024
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_10, ptr align 4 %b, i32 12, i1 false), !dbg !10025
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %3 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h9a45a2727095a7bbE"(ptr align 4 %_10) #17, !dbg !10026
  %_9.0 = extractvalue { ptr, i32 } %3, 0, !dbg !10026
  %_9.1 = extractvalue { ptr, i32 } %3, 1, !dbg !10026
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h63d27b91458a9b7aE"(ptr align 4 %target) #17, !dbg !10027
  store ptr %_9.0, ptr %target, align 4, !dbg !10027
  %4 = getelementptr inbounds i8, ptr %target, i32 4, !dbg !10027
  store i32 %_9.1, ptr %4, align 4, !dbg !10027
  ret void, !dbg !10028
}

; alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17haacd9a91ba7d82a0E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !10029 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10031, !DIExpression(), !10032)
; call core::ffi::c_str::CStr::to_bytes_with_nul
  %1 = call { ptr, i32 } @_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17hd036897479adf9ebE(ptr align 1 %self.0, i32 %self.1) #17, !dbg !10033
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10033
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10033
; call <T as core::convert::Into<U>>::into
  %2 = call { ptr, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha9f6daaa8dcf4fd2E"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 @alloc_1f6600c78053aac1d4355be6ca85675a) #17, !dbg !10034
  %_2.0 = extractvalue { ptr, i32 } %2, 0, !dbg !10034
  %_2.1 = extractvalue { ptr, i32 } %2, 1, !dbg !10034
  %3 = insertvalue { ptr, i32 } poison, ptr %_2.0, 0, !dbg !10035
  %4 = insertvalue { ptr, i32 } %3, i32 %_2.1, 1, !dbg !10035
  ret { ptr, i32 } %4, !dbg !10035
}

; alloc::ffi::c_str::CString::into_bytes
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString10into_bytes17hbd338bb8d849f9e8E(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !10036 {
start:
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right_val.dbg.spill = alloca [4 x i8], align 4
  %left_val.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_14 = alloca [24 x i8], align 4
  %_nul = alloca [2 x i8], align 1
  %vec = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10041, !DIExpression(), !10053)
    #dbg_declare(ptr %vec, !10042, !DIExpression(), !10054)
    #dbg_declare(ptr %_nul, !10044, !DIExpression(), !10055)
; call alloc::ffi::c_str::CString::into_inner
  %1 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString10into_inner17hbcdcd443f75a46f3E(ptr align 1 %self.0, i32 %self.1) #17, !dbg !10056
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10056
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10056
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h40445ef263cfe410E"(ptr sret([12 x i8]) align 4 %vec, ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !10057
; call alloc::vec::Vec<T,A>::pop
  %2 = call { i1, i8 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h35b0868d37c3c7f2E"(ptr align 4 %vec) #17, !dbg !10058
  %3 = extractvalue { i1, i8 } %2, 0, !dbg !10058
  %4 = extractvalue { i1, i8 } %2, 1, !dbg !10058
  %5 = zext i1 %3 to i8, !dbg !10058
  store i8 %5, ptr %_nul, align 1, !dbg !10058
  %6 = getelementptr inbounds i8, ptr %_nul, i32 1, !dbg !10058
  store i8 %4, ptr %6, align 1, !dbg !10058
  store ptr %_nul, ptr %left_val.dbg.spill, align 4, !dbg !10059
    #dbg_declare(ptr %left_val.dbg.spill, !10046, !DIExpression(), !10060)
  store ptr @alloc_c8f8d850bafb8c953da39152ff673a10, ptr %right_val.dbg.spill, align 4, !dbg !10059
    #dbg_declare(ptr %right_val.dbg.spill, !10049, !DIExpression(), !10060)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_11 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h93b587d97881e664E"(ptr align 1 %_nul, ptr align 1 @alloc_c8f8d850bafb8c953da39152ff673a10) #17, !dbg !10060
  br i1 %_11, label %bb6, label %bb5, !dbg !10060

bb5:                                              ; preds = %start
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !10060
    #dbg_declare(ptr %kind.dbg.spill, !10050, !DIExpression(), !10061)
  store ptr null, ptr %_14, align 4, !dbg !10061
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h59a1cc89abfda22fE(i8 0, ptr align 1 %_nul, ptr align 1 @alloc_c8f8d850bafb8c953da39152ff673a10, ptr align 4 %_14, ptr align 4 @alloc_0dbe6953ab8757e93fd933847a105907) #18, !dbg !10061
  unreachable, !dbg !10061

bb6:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %vec, i32 12, i1 false), !dbg !10062
  ret void, !dbg !10063
}

; alloc::ffi::c_str::CString::into_inner
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc3ffi5c_str7CString10into_inner17hbcdcd443f75a46f3E(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !10064 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %this = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10069, !DIExpression(), !10077)
    #dbg_declare(ptr %this, !10070, !DIExpression(), !10078)
  store ptr %self.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !10079, !DIExpression(), !10085)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !10087
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !10087
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !10088
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !10088
  store ptr %4, ptr %this, align 4, !dbg !10088
  %6 = getelementptr inbounds i8, ptr %this, i32 4, !dbg !10088
  store i32 %5, ptr %6, align 4, !dbg !10088
  store ptr %this, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !10089, !DIExpression(), !10096)
; call core::ptr::read
  %7 = call { ptr, i32 } @_ZN4core3ptr4read17h63c7c9db3384bf20E(ptr %this, ptr align 4 @alloc_3b0be91aa0227e795e70cf4bbf78514e) #17, !dbg !10098
  %_0.0 = extractvalue { ptr, i32 } %7, 0, !dbg !10098
  %_0.1 = extractvalue { ptr, i32 } %7, 1, !dbg !10098
  %8 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10099
  %9 = insertvalue { ptr, i32 } %8, i32 %_0.1, 1, !dbg !10099
  ret { ptr, i32 } %9, !dbg !10099
}

; alloc::ffi::c_str::CString::into_string
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString11into_string17h06372032653c0a48E(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !10100 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  %_2 = alloca [20 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10105, !DIExpression(), !10106)
; call alloc::ffi::c_str::CString::into_bytes
  call void @_ZN5alloc3ffi5c_str7CString10into_bytes17hbd338bb8d849f9e8E(ptr sret([12 x i8]) align 4 %_3, ptr align 1 %self.0, i32 %self.1) #17, !dbg !10107
; call alloc::string::String::from_utf8
  call void @_ZN5alloc6string6String9from_utf817hec1be3bb109edba9E(ptr sret([20 x i8]) align 4 %_2, ptr align 4 %_3) #17, !dbg !10108
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h73a9e8ee8601aa1eE"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %_2) #17, !dbg !10109
  ret void, !dbg !10110
}

; alloc::ffi::c_str::CString::into_string::{{closure}}
; Function Attrs: inlinehint nounwind
define internal void @"_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17hfd3b06a1e6dcc217E"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %e) unnamed_addr #2 !dbg !10111 {
start:
  %_1.dbg.spill = alloca [0 x i8], align 1
  %_6 = alloca [12 x i8], align 4
  %_3 = alloca [8 x i8], align 4
    #dbg_declare(ptr %_1.dbg.spill, !10116, !DIExpression(), !10117)
    #dbg_declare(ptr %e, !10115, !DIExpression(), !10118)
; call alloc::string::FromUtf8Error::utf8_error
  call void @_ZN5alloc6string13FromUtf8Error10utf8_error17h48509d57271b9f9aE(ptr sret([8 x i8]) align 4 %_3, ptr align 4 %e) #17, !dbg !10119
; call alloc::string::FromUtf8Error::into_bytes
  call void @_ZN5alloc6string13FromUtf8Error10into_bytes17hda8fda9cd1c911e7E(ptr sret([12 x i8]) align 4 %_6, ptr align 4 %e) #17, !dbg !10120
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %0 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E(ptr align 4 %_6) #17, !dbg !10121
  %_5.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10121
  %_5.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10121
  store ptr %_5.0, ptr %_0, align 4, !dbg !10122
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10122
  store i32 %_5.1, ptr %1, align 4, !dbg !10122
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !10122
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %_3, i32 8, i1 false), !dbg !10122
  ret void, !dbg !10123
}

; alloc::ffi::c_str::CString::into_boxed_c_str
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17h4fe3229376c8603bE(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !10124 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10129, !DIExpression(), !10130)
; call alloc::ffi::c_str::CString::into_inner
  %1 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString10into_inner17hbcdcd443f75a46f3E(ptr align 1 %self.0, i32 %self.1) #17, !dbg !10131
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10131
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10131
; call alloc::boxed::Box<T>::into_raw
  %2 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17ha41afd7940b056a7E"(ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !10132
  %_3.0 = extractvalue { ptr, i32 } %2, 0, !dbg !10132
  %_3.1 = extractvalue { ptr, i32 } %2, 1, !dbg !10132
; call alloc::boxed::Box<T>::from_raw
  %3 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hfe770a3a0fb06ffdE"(ptr %_3.0, i32 %_3.1) #17, !dbg !10133
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !10133
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !10133
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10134
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !10134
  ret { ptr, i32 } %5, !dbg !10134
}

; alloc::ffi::c_str::CString::as_bytes_with_nul
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17he9933c147850b584E(ptr align 4 %self) unnamed_addr #2 !dbg !10135 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10140, !DIExpression(), !10141)
  %_3.0 = load ptr, ptr %self, align 4, !dbg !10142
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !10142
  %_3.1 = load i32, ptr %0, align 4, !dbg !10142
  %1 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !10143
  %2 = insertvalue { ptr, i32 } %1, i32 %_3.1, 1, !dbg !10143
  ret { ptr, i32 } %2, !dbg !10143
}

; alloc::ffi::c_str::CString::from_vec_with_nul
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17he89ac216ebfa45f0E(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %v) unnamed_addr #1 !dbg !10144 {
start:
  %nul_pos.dbg.spill5 = alloca [4 x i8], align 4
  %nul_pos.dbg.spill3 = alloca [4 x i8], align 4
  %nul_pos.dbg.spill = alloca [4 x i8], align 4
  %_18 = alloca [20 x i8], align 4
  %_16 = alloca [20 x i8], align 4
  %nul_pos = alloca [8 x i8], align 4
    #dbg_declare(ptr %v, !10164, !DIExpression(), !10172)
    #dbg_declare(ptr %nul_pos, !10165, !DIExpression(), !10173)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %v) #17, !dbg !10174
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10174
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10174
; call core::slice::memchr::memchr
  %1 = call { i32, i32 } @_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E(i8 0, ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !10175
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10175
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !10175
  store i32 %2, ptr %nul_pos, align 4, !dbg !10175
  %4 = getelementptr inbounds i8, ptr %nul_pos, i32 4, !dbg !10175
  store i32 %3, ptr %4, align 4, !dbg !10175
  %_5 = load i32, ptr %nul_pos, align 4, !dbg !10176
  %5 = getelementptr inbounds i8, ptr %nul_pos, i32 4, !dbg !10176
  %6 = load i32, ptr %5, align 4, !dbg !10176
  %7 = trunc nuw i32 %_5 to i1, !dbg !10177
  br i1 %7, label %bb5, label %bb4, !dbg !10177

bb5:                                              ; preds = %start
  %nul_pos1 = getelementptr inbounds i8, ptr %nul_pos, i32 4, !dbg !10178
  store ptr %nul_pos1, ptr %nul_pos.dbg.spill, align 4, !dbg !10178
    #dbg_declare(ptr %nul_pos.dbg.spill, !10169, !DIExpression(), !10179)
  %_10 = load i32, ptr %nul_pos1, align 4, !dbg !10180
  %_11.0 = add i32 %_10, 1, !dbg !10180
  %_11.1 = icmp ult i32 %_11.0, %_10, !dbg !10180
  br i1 %_11.1, label %panic, label %bb6, !dbg !10180

bb4:                                              ; preds = %start
  store i32 1, ptr %_18, align 4, !dbg !10181
  %8 = getelementptr inbounds i8, ptr %_18, i32 4, !dbg !10181
  store i32 undef, ptr %8, align 4, !dbg !10181
  %9 = getelementptr inbounds i8, ptr %_18, i32 8, !dbg !10181
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %9, ptr align 4 %v, i32 12, i1 false), !dbg !10181
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_18, i32 20, i1 false), !dbg !10182
  br label %bb11, !dbg !10183

bb11:                                             ; preds = %bb8, %bb9, %bb4
  ret void, !dbg !10184

bb6:                                              ; preds = %bb5
; call alloc::vec::Vec<T,A>::len
  %_12 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %v) #17, !dbg !10185
  %_8 = icmp eq i32 %_11.0, %_12, !dbg !10180
  br i1 %_8, label %bb8, label %bb9, !dbg !10180

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_6991bcfdb3f3f96dda0d1e2b31c5bb6c) #18, !dbg !10180
  unreachable, !dbg !10180

bb9:                                              ; preds = %bb6
  %10 = getelementptr inbounds i8, ptr %nul_pos, i32 4, !dbg !10186
  %nul_pos2 = load i32, ptr %10, align 4, !dbg !10186
  store i32 %nul_pos2, ptr %nul_pos.dbg.spill3, align 4, !dbg !10186
    #dbg_declare(ptr %nul_pos.dbg.spill3, !10170, !DIExpression(), !10187)
  store i32 0, ptr %_16, align 4, !dbg !10188
  %11 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !10188
  store i32 %nul_pos2, ptr %11, align 4, !dbg !10188
  %12 = getelementptr inbounds i8, ptr %_16, i32 8, !dbg !10188
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %12, ptr align 4 %v, i32 12, i1 false), !dbg !10188
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_16, i32 20, i1 false), !dbg !10189
  br label %bb11, !dbg !10190

bb8:                                              ; preds = %bb6
  %13 = getelementptr inbounds i8, ptr %nul_pos, i32 4, !dbg !10178
  %nul_pos4 = load i32, ptr %13, align 4, !dbg !10178
  store i32 %nul_pos4, ptr %nul_pos.dbg.spill5, align 4, !dbg !10178
    #dbg_declare(ptr %nul_pos.dbg.spill5, !10167, !DIExpression(), !10179)
; call alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
  %14 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h55cdf3b035099001E(ptr align 4 %v) #17, !dbg !10191
  %_14.0 = extractvalue { ptr, i32 } %14, 0, !dbg !10191
  %_14.1 = extractvalue { ptr, i32 } %14, 1, !dbg !10191
  %15 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10192
  store ptr %_14.0, ptr %15, align 4, !dbg !10192
  %16 = getelementptr inbounds i8, ptr %15, i32 4, !dbg !10192
  store i32 %_14.1, ptr %16, align 4, !dbg !10192
  store i32 2, ptr %_0, align 4, !dbg !10192
  br label %bb11, !dbg !10193

bb3:                                              ; No predecessors!
  unreachable, !dbg !10176
}

; alloc::ffi::c_str::CString::from_vec_unchecked
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17h2488c29354f95cb5E(ptr align 4 %v) unnamed_addr #1 !dbg !10194 {
start:
  %_4 = alloca [8 x i8], align 4
    #dbg_declare(ptr %v, !10199, !DIExpression(), !10200)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %v) #17, !dbg !10201
  %_5.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10201
  %_5.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10201
; call core::slice::memchr::memchr
  %1 = call { i32, i32 } @_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E(i8 0, ptr align 1 %_5.0, i32 %_5.1) #17, !dbg !10202
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10202
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !10202
  store i32 %2, ptr %_4, align 4, !dbg !10202
  %4 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !10202
  store i32 %3, ptr %4, align 4, !dbg !10202
; call core::option::Option<T>::is_none
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h16c8da6f96ce2b21E"(ptr align 4 %_4) #17, !dbg !10203
  br i1 %_2, label %bb5, label %bb4, !dbg !10202

bb4:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_9ed1d40f60081ac3c8582d1e71419d75, i32 49, ptr align 4 @alloc_e0ace294cc66a1d5f3914411dd3d57b0) #18, !dbg !10204
  unreachable, !dbg !10204

bb5:                                              ; preds = %start
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %5 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E(ptr align 4 %v) #17, !dbg !10205
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !10205
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !10205
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10206
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !10206
  ret { ptr, i32 } %7, !dbg !10206
}

; alloc::ffi::c_str::CString::_from_vec_unchecked
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E(ptr align 4 %v) unnamed_addr #1 !dbg !10207 {
start:
  %_7 = alloca [12 x i8], align 4
    #dbg_declare(ptr %v, !10210, !DIExpression(), !10211)
; call alloc::vec::Vec<T,A>::reserve_exact
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hca79a55e5fecd666E"(ptr align 4 %v, i32 1) #17, !dbg !10212
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hc841b239736e971bE"(ptr align 4 %v, i8 0) #17, !dbg !10213
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_7, ptr align 4 %v, i32 12, i1 false), !dbg !10214
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h9a45a2727095a7bbE"(ptr align 4 %_7) #17, !dbg !10215
  %_6.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10215
  %_6.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10215
  %1 = insertvalue { ptr, i32 } poison, ptr %_6.0, 0, !dbg !10216
  %2 = insertvalue { ptr, i32 } %1, i32 %_6.1, 1, !dbg !10216
  ret { ptr, i32 } %2, !dbg !10216
}

; alloc::ffi::c_str::CString::into_bytes_with_nul
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h88e97f61fe1b32cdE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !10217 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10220, !DIExpression(), !10221)
; call alloc::ffi::c_str::CString::into_inner
  %1 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString10into_inner17hbcdcd443f75a46f3E(ptr align 1 %self.0, i32 %self.1) #17, !dbg !10222
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10222
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10222
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h40445ef263cfe410E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !10223
  ret void, !dbg !10224
}

; alloc::ffi::c_str::CString::from_vec_with_nul_unchecked
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17h89b544e319a77d7eE(ptr align 4 %v) unnamed_addr #1 !dbg !10225 {
start:
  %val.dbg.spill.i = alloca [4 x i8], align 4
  %self.i = alloca [8 x i8], align 4
    #dbg_declare(ptr %v, !10228, !DIExpression(), !10229)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %v) #17, !dbg !10230
  %_6.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10230
  %_6.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10230
; call core::slice::memchr::memchr
  %1 = call { i32, i32 } @_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E(i8 0, ptr align 1 %_6.0, i32 %_6.1) #17, !dbg !10231
  %_5.0 = extractvalue { i32, i32 } %1, 0, !dbg !10231
  %_5.1 = extractvalue { i32, i32 } %1, 1, !dbg !10231
  store i32 %_5.0, ptr %self.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_5.1, ptr %2, align 4
    #dbg_declare(ptr %self.i, !10232, !DIExpression(), !10240)
  %_2.i = load i32, ptr %self.i, align 4, !dbg !10242
  %3 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !10242
  %4 = load i32, ptr %3, align 4, !dbg !10242
  %5 = trunc nuw i32 %_2.i to i1, !dbg !10243
  br i1 %5, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit", label %bb2.i, !dbg !10243

bb2.i:                                            ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17hb44eba05d48b3214E(ptr align 4 @alloc_a29a9eb26bac8f5e3aaf4551ec48da07) #18, !dbg !10244
  unreachable, !dbg !10244

"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit": ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !10245
  %val.i = load i32, ptr %6, align 4, !dbg !10245
  store i32 %val.i, ptr %val.dbg.spill.i, align 4, !dbg !10245
    #dbg_declare(ptr %val.dbg.spill.i, !10238, !DIExpression(), !10246)
  %_8.0 = add i32 %val.i, 1, !dbg !10231
  %_8.1 = icmp ult i32 %_8.0, %val.i, !dbg !10231
  br i1 %_8.1, label %panic, label %bb4, !dbg !10231

bb4:                                              ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit"
; call alloc::vec::Vec<T,A>::len
  %_9 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %v) #17, !dbg !10247
  %_2 = icmp eq i32 %_8.0, %_9, !dbg !10231
  br i1 %_2, label %bb7, label %bb6, !dbg !10231

panic:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_3c31ae41b8dfe17cb054717d587e7f9d) #18, !dbg !10231
  unreachable, !dbg !10231

bb6:                                              ; preds = %bb4
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_4ca7a4293309f2a594112e5992259be2, i32 63, ptr align 4 @alloc_1d69ff1de79b374d6d824e6570ecc8fd) #18, !dbg !10248
  unreachable, !dbg !10248

bb7:                                              ; preds = %bb4
; call alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
  %7 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h55cdf3b035099001E(ptr align 4 %v) #17, !dbg !10249
  %_0.0 = extractvalue { ptr, i32 } %7, 0, !dbg !10249
  %_0.1 = extractvalue { ptr, i32 } %7, 1, !dbg !10249
  %8 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10250
  %9 = insertvalue { ptr, i32 } %8, i32 %_0.1, 1, !dbg !10250
  ret { ptr, i32 } %9, !dbg !10250
}

; alloc::ffi::c_str::CString::_from_vec_with_nul_unchecked
; Function Attrs: nounwind
define internal { ptr, i32 } @_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h55cdf3b035099001E(ptr align 4 %v) unnamed_addr #1 !dbg !10251 {
start:
    #dbg_declare(ptr %v, !10254, !DIExpression(), !10255)
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h9a45a2727095a7bbE"(ptr align 4 %v) #17, !dbg !10256
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10256
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10256
  %1 = insertvalue { ptr, i32 } poison, ptr %_2.0, 0, !dbg !10257
  %2 = insertvalue { ptr, i32 } %1, i32 %_2.1, 1, !dbg !10257
  ret { ptr, i32 } %2, !dbg !10257
}

; alloc::ffi::c_str::CString::as_c_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc3ffi5c_str7CString8as_c_str17hfb3641ecc152d7d9E(ptr align 4 %self) unnamed_addr #2 !dbg !10258 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10263, !DIExpression(), !10264)
; call alloc::ffi::c_str::CString::as_bytes_with_nul
  %0 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17he9933c147850b584E(ptr align 4 %self) #17, !dbg !10265
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10265
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10265
; call core::ffi::c_str::CStr::from_bytes_with_nul_unchecked
  %1 = call { ptr, i32 } @_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha653fea02727b72eE(ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !10266
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10266
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10266
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10267
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !10267
  ret { ptr, i32 } %3, !dbg !10267
}

; alloc::ffi::c_str::CString::from_raw
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc3ffi5c_str7CString8from_raw17h86e3a4d9cec3a165E(ptr %ptr) unnamed_addr #1 !dbg !10268 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !10273, !DIExpression(), !10278)
  %_3 = call i32 @strlen(ptr %ptr) #17, !dbg !10279
  %_5.0 = add i32 %_3, 1, !dbg !10279
  %_5.1 = icmp ult i32 %_5.0, %_3, !dbg !10279
  br i1 %_5.1, label %panic, label %bb2, !dbg !10279

bb2:                                              ; preds = %start
  store i32 %_5.0, ptr %len.dbg.spill, align 4, !dbg !10279
    #dbg_declare(ptr %len.dbg.spill, !10274, !DIExpression(), !10280)
; call core::slice::raw::from_raw_parts_mut
  %0 = call { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17hed5ebb1c23f3321bE(ptr %ptr, i32 %_5.0, ptr align 4 @alloc_1467a334148e9393fd9bf41b19510d4e) #17, !dbg !10281
  %slice.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10281
  %slice.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10281
  store ptr %slice.0, ptr %slice.dbg.spill, align 4, !dbg !10281
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4, !dbg !10281
  store i32 %slice.1, ptr %1, align 4, !dbg !10281
    #dbg_declare(ptr %slice.dbg.spill, !10276, !DIExpression(), !10282)
; call alloc::boxed::Box<T>::from_raw
  %2 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h595bf8cefd372b4aE"(ptr %slice.0, i32 %slice.1) #17, !dbg !10283
  %_7.0 = extractvalue { ptr, i32 } %2, 0, !dbg !10283
  %_7.1 = extractvalue { ptr, i32 } %2, 1, !dbg !10283
  %3 = insertvalue { ptr, i32 } poison, ptr %_7.0, 0, !dbg !10284
  %4 = insertvalue { ptr, i32 } %3, i32 %_7.1, 1, !dbg !10284
  ret { ptr, i32 } %4, !dbg !10284

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_1a90fd89c30054db6c92462549027e00) #18, !dbg !10279
  unreachable, !dbg !10279
}

; alloc::ffi::c_str::NulError::nul_position
; Function Attrs: nounwind
define dso_local i32 @_ZN5alloc3ffi5c_str8NulError12nul_position17h57a8f2561db9a58fE(ptr align 4 %self) unnamed_addr #1 !dbg !10285 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10295, !DIExpression(), !10296)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !10297
  %_0 = load i32, ptr %0, align 4, !dbg !10297
  ret i32 %_0, !dbg !10298
}

; alloc::ffi::c_str::NulError::into_vec
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3ffi5c_str8NulError8into_vec17hf70ac2b71f003851E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !10299 {
start:
    #dbg_declare(ptr %self, !10304, !DIExpression(), !10305)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !10306
  ret void, !dbg !10307
}

; alloc::fmt::format::format_inner
; Function Attrs: nounwind
define dso_local void @_ZN5alloc3fmt6format12format_inner17h86b286e24ffde914E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %args) unnamed_addr #1 !dbg !10308 {
start:
  %0 = alloca [24 x i8], align 4
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %output = alloca [12 x i8], align 4
    #dbg_declare(ptr %args, !10315, !DIExpression(), !10320)
    #dbg_declare(ptr %output, !10318, !DIExpression(), !10321)
; call core::fmt::Arguments::estimated_capacity
  %capacity = call i32 @_ZN4core3fmt9Arguments18estimated_capacity17hd10c770fa84e30ffE(ptr align 4 %args) #17, !dbg !10322
  store i32 %capacity, ptr %capacity.dbg.spill, align 4, !dbg !10322
    #dbg_declare(ptr %capacity.dbg.spill, !10316, !DIExpression(), !10323)
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE(ptr sret([12 x i8]) align 4 %output, i32 %capacity) #17, !dbg !10324
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 4 %args, i32 24, i1 false), !dbg !10325
; call core::fmt::Write::write_fmt
  %_6 = call zeroext i1 @_ZN4core3fmt5Write9write_fmt17hdad00fb98f69e3d1E(ptr align 4 %output, ptr align 4 %0) #17, !dbg !10326
; call core::result::Result<T,E>::expect
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc7655a8bfca1ac16E"(i1 zeroext %_6, ptr align 1 @alloc_a439077caaee6bab9af745f1531d72a4, i32 86, ptr align 4 @alloc_07fc410862dd0ba787a5eaefbe034f24) #17, !dbg !10327
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %output, i32 12, i1 false), !dbg !10328
  ret void, !dbg !10329
}

; alloc::str::convert_while_ascii
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc3str19convert_while_ascii17h247351e9b033564eE(ptr sret([20 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1, ptr %convert) unnamed_addr #2 !dbg !10330 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %value.dbg.spill.i12 = alloca [1 x i8], align 1
  %value.dbg.spill.i = alloca [1 x i8], align 1
  %val.dbg.spill.i10 = alloca [1 x i8], align 1
  %val.dbg.spill.i = alloca [1 x i8], align 1
  %j.dbg.spill7 = alloca [4 x i8], align 4
  %rest.dbg.spill = alloca [8 x i8], align 4
  %j.dbg.spill = alloca [4 x i8], align 4
  %out_chunk.dbg.spill = alloca [8 x i8], align 4
  %chunk.dbg.spill = alloca [8 x i8], align 4
  %convert.dbg.spill = alloca [4 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  %_84 = alloca [12 x i8], align 4
  %ascii_string = alloca [12 x i8], align 4
  %byte = alloca [1 x i8], align 1
  %_41 = alloca [8 x i8], align 4
  %iter1 = alloca [8 x i8], align 4
  %_23 = alloca [8 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %is_ascii = alloca [16 x i8], align 1
  %ascii_prefix_len = alloca [4 x i8], align 4
  %out_slice = alloca [8 x i8], align 4
  %out = alloca [12 x i8], align 4
  %slice = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !10340, !DIExpression(), !10373)
  store ptr %convert, ptr %convert.dbg.spill, align 4
    #dbg_declare(ptr %convert.dbg.spill, !10341, !DIExpression(), !10374)
    #dbg_declare(ptr %slice, !10342, !DIExpression(), !10375)
    #dbg_declare(ptr %out, !10344, !DIExpression(), !10376)
    #dbg_declare(ptr %out_slice, !10346, !DIExpression(), !10377)
    #dbg_declare(ptr %ascii_prefix_len, !10348, !DIExpression(), !10378)
    #dbg_declare(ptr %is_ascii, !10350, !DIExpression(), !10379)
    #dbg_declare(ptr %iter, !10359, !DIExpression(), !10380)
    #dbg_declare(ptr %iter1, !10363, !DIExpression(), !10381)
    #dbg_declare(ptr %byte, !10367, !DIExpression(), !10382)
    #dbg_declare(ptr %ascii_string, !10369, !DIExpression(), !10383)
  store ptr %s.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %s.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !10384)
  %2 = insertvalue { ptr, i32 } poison, ptr %s.0, 0, !dbg !10386
  %3 = insertvalue { ptr, i32 } %2, i32 %s.1, 1, !dbg !10386
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !10387
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !10387
  store ptr %4, ptr %slice, align 4, !dbg !10387
  %6 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10387
  store i32 %5, ptr %6, align 4, !dbg !10387
  %_6.0 = load ptr, ptr %slice, align 4, !dbg !10388
  %7 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10388
  %_6.1 = load i32, ptr %7, align 4, !dbg !10388
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %out, i32 %_6.1) #17, !dbg !10389
; call alloc::vec::Vec<T,A>::spare_capacity_mut
  %8 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hb9b6a0b0bf470925E"(ptr align 4 %out) #17, !dbg !10390
  %9 = extractvalue { ptr, i32 } %8, 0, !dbg !10390
  %10 = extractvalue { ptr, i32 } %8, 1, !dbg !10390
  store ptr %9, ptr %out_slice, align 4, !dbg !10390
  %11 = getelementptr inbounds i8, ptr %out_slice, i32 4, !dbg !10390
  store i32 %10, ptr %11, align 4, !dbg !10390
  store i32 0, ptr %ascii_prefix_len, align 4, !dbg !10391
  call void @llvm.memset.p0.i32(ptr align 1 %is_ascii, i8 0, i32 16, i1 false), !dbg !10392
  br label %bb4, !dbg !10393

bb4:                                              ; preds = %bb29, %start
  %_13.0 = load ptr, ptr %slice, align 4, !dbg !10394
  %12 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10394
  %_13.1 = load i32, ptr %12, align 4, !dbg !10394
  %_11 = icmp uge i32 %_13.1, 16, !dbg !10394
  br i1 %_11, label %bb5, label %bb32, !dbg !10394

bb32:                                             ; preds = %bb39, %bb13, %bb4
  %_62.0 = load ptr, ptr %slice, align 4, !dbg !10395
  %13 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10395
  %_62.1 = load i32, ptr %13, align 4, !dbg !10395
  %_60 = icmp ugt i32 %_62.1, 0, !dbg !10395
  br i1 %_60, label %bb33, label %bb42, !dbg !10395

bb5:                                              ; preds = %bb4
  %_15.0 = load ptr, ptr %slice, align 4, !dbg !10396
  %14 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10396
  %_15.1 = load i32, ptr %14, align 4, !dbg !10396
; call core::slice::<impl [T]>::get_unchecked
  %15 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h86dafd40d2594af2E"(ptr align 1 %_15.0, i32 %_15.1, i32 16, ptr align 4 @alloc_0c9327735b41175dcf8a06d13e63a22a) #17, !dbg !10397
  %chunk.0 = extractvalue { ptr, i32 } %15, 0, !dbg !10397
  %chunk.1 = extractvalue { ptr, i32 } %15, 1, !dbg !10397
  store ptr %chunk.0, ptr %chunk.dbg.spill, align 4, !dbg !10397
  %16 = getelementptr inbounds i8, ptr %chunk.dbg.spill, i32 4, !dbg !10397
  store i32 %chunk.1, ptr %16, align 4, !dbg !10397
    #dbg_declare(ptr %chunk.dbg.spill, !10355, !DIExpression(), !10398)
  %_18.0 = load ptr, ptr %out_slice, align 4, !dbg !10399
  %17 = getelementptr inbounds i8, ptr %out_slice, i32 4, !dbg !10399
  %_18.1 = load i32, ptr %17, align 4, !dbg !10399
; call core::slice::<impl [T]>::get_unchecked_mut
  %18 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h90fa6615ae1899cfE"(ptr align 1 %_18.0, i32 %_18.1, i32 16, ptr align 4 @alloc_159c752da95d04370d29fd24a6fcccb3) #17, !dbg !10400
  %out_chunk.0 = extractvalue { ptr, i32 } %18, 0, !dbg !10400
  %out_chunk.1 = extractvalue { ptr, i32 } %18, 1, !dbg !10400
  store ptr %out_chunk.0, ptr %out_chunk.dbg.spill, align 4, !dbg !10400
  %19 = getelementptr inbounds i8, ptr %out_chunk.dbg.spill, i32 4, !dbg !10400
  store i32 %out_chunk.1, ptr %19, align 4, !dbg !10400
    #dbg_declare(ptr %out_chunk.dbg.spill, !10357, !DIExpression(), !10401)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %20 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 0, i32 16) #17, !dbg !10402
  %_20.0 = extractvalue { i32, i32 } %20, 0, !dbg !10402
  %_20.1 = extractvalue { i32, i32 } %20, 1, !dbg !10402
  store i32 %_20.0, ptr %iter, align 4, !dbg !10402
  %21 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !10402
  store i32 %_20.1, ptr %21, align 4, !dbg !10402
  br label %bb9, !dbg !10403

bb9:                                              ; preds = %bb15, %bb5
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %22 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter) #17, !dbg !10380
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !10380
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !10380
  store i32 %23, ptr %_23, align 4, !dbg !10380
  %25 = getelementptr inbounds i8, ptr %_23, i32 4, !dbg !10380
  store i32 %24, ptr %25, align 4, !dbg !10380
  %_25 = load i32, ptr %_23, align 4, !dbg !10380
  %26 = getelementptr inbounds i8, ptr %_23, i32 4, !dbg !10380
  %27 = load i32, ptr %26, align 4, !dbg !10380
  %28 = trunc nuw i32 %_25 to i1, !dbg !10380
  br i1 %28, label %bb12, label %bb13, !dbg !10380

bb12:                                             ; preds = %bb9
  %29 = getelementptr inbounds i8, ptr %_23, i32 4, !dbg !10404
  %j6 = load i32, ptr %29, align 4, !dbg !10404
  store i32 %j6, ptr %j.dbg.spill7, align 4, !dbg !10404
    #dbg_declare(ptr %j.dbg.spill7, !10361, !DIExpression(), !10405)
  %_29 = icmp ult i32 %j6, %chunk.1, !dbg !10406
  br i1 %_29, label %bb14, label %panic8, !dbg !10406

bb13:                                             ; preds = %bb9
; call core::slice::<impl [T]>::iter
  %30 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h747981fe58cbafc4E"(ptr align 1 %is_ascii, i32 16) #17, !dbg !10407
  %_35.0 = extractvalue { ptr, ptr } %30, 0, !dbg !10407
  %_35.1 = extractvalue { ptr, ptr } %30, 1, !dbg !10407
; call core::iter::traits::iterator::Iterator::map
  %31 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h9763f4e8d9728936E(ptr %_35.0, ptr %_35.1) #17, !dbg !10408
  %_34.0 = extractvalue { ptr, ptr } %31, 0, !dbg !10408
  %_34.1 = extractvalue { ptr, ptr } %31, 1, !dbg !10408
; call core::iter::traits::iterator::Iterator::sum
  %_33 = call i8 @_ZN4core4iter6traits8iterator8Iterator3sum17hef28a6c18ae3e6b0E(ptr %_34.0, ptr %_34.1) #17, !dbg !10409
  %_32 = zext i8 %_33 to i32, !dbg !10410
  %_31 = icmp ne i32 %_32, 16, !dbg !10410
  br i1 %_31, label %bb32, label %bb19, !dbg !10410

bb19:                                             ; preds = %bb13
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %32 = call { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32 0, i32 16) #17, !dbg !10411
  %_38.0 = extractvalue { i32, i32 } %32, 0, !dbg !10411
  %_38.1 = extractvalue { i32, i32 } %32, 1, !dbg !10411
  store i32 %_38.0, ptr %iter1, align 4, !dbg !10411
  %33 = getelementptr inbounds i8, ptr %iter1, i32 4, !dbg !10411
  store i32 %_38.1, ptr %33, align 4, !dbg !10411
  br label %bb21, !dbg !10412

bb21:                                             ; preds = %bb28, %bb19
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
  %34 = call { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4 %iter1) #17, !dbg !10381
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !10381
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !10381
  store i32 %35, ptr %_41, align 4, !dbg !10381
  %37 = getelementptr inbounds i8, ptr %_41, i32 4, !dbg !10381
  store i32 %36, ptr %37, align 4, !dbg !10381
  %_43 = load i32, ptr %_41, align 4, !dbg !10381
  %38 = getelementptr inbounds i8, ptr %_41, i32 4, !dbg !10381
  %39 = load i32, ptr %38, align 4, !dbg !10381
  %40 = trunc nuw i32 %_43 to i1, !dbg !10381
  br i1 %40, label %bb23, label %bb24, !dbg !10381

bb23:                                             ; preds = %bb21
  %41 = getelementptr inbounds i8, ptr %_41, i32 4, !dbg !10413
  %j = load i32, ptr %41, align 4, !dbg !10413
  store i32 %j, ptr %j.dbg.spill, align 4, !dbg !10413
    #dbg_declare(ptr %j.dbg.spill, !10365, !DIExpression(), !10414)
  %_49 = icmp ult i32 %j, %chunk.1, !dbg !10415
  br i1 %_49, label %bb25, label %panic2, !dbg !10415

bb24:                                             ; preds = %bb21
  %42 = load i32, ptr %ascii_prefix_len, align 4, !dbg !10416
  %_53.0 = add i32 %42, 16, !dbg !10416
  %_53.1 = icmp ult i32 %_53.0, %42, !dbg !10416
  br i1 %_53.1, label %panic, label %bb29, !dbg !10416

bb29:                                             ; preds = %bb24
  store i32 %_53.0, ptr %ascii_prefix_len, align 4, !dbg !10416
  %_55.0 = load ptr, ptr %slice, align 4, !dbg !10417
  %43 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10417
  %_55.1 = load i32, ptr %43, align 4, !dbg !10417
; call core::slice::<impl [T]>::get_unchecked
  %44 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1dd74b4882c2d5a2E"(ptr align 1 %_55.0, i32 %_55.1, i32 16, ptr align 4 @alloc_2cca64da9494bdde6000c8ad9201c6e4) #17, !dbg !10418
  %_54.0 = extractvalue { ptr, i32 } %44, 0, !dbg !10418
  %_54.1 = extractvalue { ptr, i32 } %44, 1, !dbg !10418
  store ptr %_54.0, ptr %slice, align 4, !dbg !10419
  %45 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10419
  store i32 %_54.1, ptr %45, align 4, !dbg !10419
  %_58.0 = load ptr, ptr %out_slice, align 4, !dbg !10420
  %46 = getelementptr inbounds i8, ptr %out_slice, i32 4, !dbg !10420
  %_58.1 = load i32, ptr %46, align 4, !dbg !10420
; call core::slice::<impl [T]>::get_unchecked_mut
  %47 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h812f1e61fa4cca46E"(ptr align 1 %_58.0, i32 %_58.1, i32 16, ptr align 4 @alloc_159e7b10184e62f2ac5c9218813d7ec4) #17, !dbg !10421
  %_57.0 = extractvalue { ptr, i32 } %47, 0, !dbg !10421
  %_57.1 = extractvalue { ptr, i32 } %47, 1, !dbg !10421
  store ptr %_57.0, ptr %out_slice, align 4, !dbg !10422
  %48 = getelementptr inbounds i8, ptr %out_slice, i32 4, !dbg !10422
  store i32 %_57.1, ptr %48, align 4, !dbg !10422
  br label %bb4, !dbg !10393

panic:                                            ; preds = %bb24
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_f26af93b2ca8e02040827d9b8a9a1a3b) #18, !dbg !10416
  unreachable, !dbg !10416

bb25:                                             ; preds = %bb23
  %_47 = getelementptr inbounds nuw i8, ptr %chunk.0, i32 %j, !dbg !10423
  %_46 = call i8 %convert(ptr align 1 %_47) #17, !dbg !10424
  store i8 %_46, ptr %val.dbg.spill.i10, align 1
    #dbg_declare(ptr %val.dbg.spill.i10, !10425, !DIExpression(), !10432)
  store i8 %_46, ptr %value.dbg.spill.i, align 1
    #dbg_declare(ptr %value.dbg.spill.i, !10434, !DIExpression(), !10440)
  %_52 = icmp ult i32 %j, %out_chunk.1, !dbg !10442
  br i1 %_52, label %bb28, label %panic3, !dbg !10442

panic2:                                           ; preds = %bb23
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 %j, i32 %chunk.1, ptr align 4 @alloc_55f31086f28179261dbfbb0c51062542) #18, !dbg !10415
  unreachable, !dbg !10415

bb28:                                             ; preds = %bb25
  %49 = getelementptr inbounds nuw i8, ptr %out_chunk.0, i32 %j, !dbg !10442
  store i8 %_46, ptr %49, align 1, !dbg !10442
  br label %bb21, !dbg !10412

panic3:                                           ; preds = %bb25
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 %j, i32 %out_chunk.1, ptr align 4 @alloc_505381e02f8e98a838c0fb6a5288d424) #18, !dbg !10442
  unreachable, !dbg !10442

bb42:                                             ; preds = %bb34, %bb32
  %_82 = load i32, ptr %ascii_prefix_len, align 4, !dbg !10443
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E"(ptr align 4 %out, i32 %_82) #17, !dbg !10444
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_84, ptr align 4 %out, i32 12, i1 false), !dbg !10445
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %ascii_string, ptr align 4 %_84) #17, !dbg !10446
  %_86.0 = load ptr, ptr %slice, align 4, !dbg !10447
  %50 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10447
  %_86.1 = load i32, ptr %50, align 4, !dbg !10447
; call core::str::converts::from_utf8_unchecked
  %51 = call { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E(ptr align 1 %_86.0, i32 %_86.1) #17, !dbg !10448
  %rest.0 = extractvalue { ptr, i32 } %51, 0, !dbg !10448
  %rest.1 = extractvalue { ptr, i32 } %51, 1, !dbg !10448
  store ptr %rest.0, ptr %rest.dbg.spill, align 4, !dbg !10448
  %52 = getelementptr inbounds i8, ptr %rest.dbg.spill, i32 4, !dbg !10448
  store i32 %rest.1, ptr %52, align 4, !dbg !10448
    #dbg_declare(ptr %rest.dbg.spill, !10371, !DIExpression(), !10449)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %ascii_string, i32 12, i1 false), !dbg !10450
  %53 = getelementptr inbounds i8, ptr %_0, i32 12, !dbg !10450
  store ptr %rest.0, ptr %53, align 4, !dbg !10450
  %54 = getelementptr inbounds i8, ptr %53, i32 4, !dbg !10450
  store i32 %rest.1, ptr %54, align 4, !dbg !10450
  ret void, !dbg !10451

bb33:                                             ; preds = %bb32
  %55 = load ptr, ptr %slice, align 4, !dbg !10452
  %56 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10452
  %_65 = load i32, ptr %56, align 4, !dbg !10452
  %_66 = icmp ult i32 0, %_65, !dbg !10452
  br i1 %_66, label %bb34, label %panic4, !dbg !10452

bb34:                                             ; preds = %bb33
  %57 = load ptr, ptr %slice, align 4, !dbg !10452
  %58 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10452
  %59 = load i32, ptr %58, align 4, !dbg !10452
  %60 = getelementptr inbounds nuw i8, ptr %57, i32 0, !dbg !10452
  %61 = load i8, ptr %60, align 1, !dbg !10452
  store i8 %61, ptr %byte, align 1, !dbg !10452
  %62 = load i8, ptr %byte, align 1, !dbg !10453
  %_67 = icmp ugt i8 %62, 127, !dbg !10453
  br i1 %_67, label %bb42, label %bb35, !dbg !10453

panic4:                                           ; preds = %bb33
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 0, i32 %_65, ptr align 4 @alloc_106c39d69df85ea91e46838150d7866a) #18, !dbg !10452
  unreachable, !dbg !10452

bb35:                                             ; preds = %bb34
  %_69 = call i8 %convert(ptr align 1 %byte) #17, !dbg !10454
  store i8 %_69, ptr %val.dbg.spill.i, align 1
    #dbg_declare(ptr %val.dbg.spill.i, !10425, !DIExpression(), !10455)
  store i8 %_69, ptr %value.dbg.spill.i12, align 1
    #dbg_declare(ptr %value.dbg.spill.i12, !10434, !DIExpression(), !10457)
  %_72.0 = load ptr, ptr %out_slice, align 4, !dbg !10459
  %63 = getelementptr inbounds i8, ptr %out_slice, i32 4, !dbg !10459
  %_72.1 = load i32, ptr %63, align 4, !dbg !10459
; call core::slice::<impl [T]>::get_unchecked_mut
  %_71 = call align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hf54e9fae4fa3f120E"(ptr align 1 %_72.0, i32 %_72.1, i32 0, ptr align 4 @alloc_0a0d11f26ac78e28ac9fd8b44f00cbbb) #17, !dbg !10460
  store i8 %_69, ptr %_71, align 1, !dbg !10461
  %64 = load i32, ptr %ascii_prefix_len, align 4, !dbg !10462
  %_73.0 = add i32 %64, 1, !dbg !10462
  %_73.1 = icmp ult i32 %_73.0, %64, !dbg !10462
  br i1 %_73.1, label %panic5, label %bb39, !dbg !10462

bb39:                                             ; preds = %bb35
  store i32 %_73.0, ptr %ascii_prefix_len, align 4, !dbg !10462
  %_75.0 = load ptr, ptr %slice, align 4, !dbg !10463
  %65 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10463
  %_75.1 = load i32, ptr %65, align 4, !dbg !10463
; call core::slice::<impl [T]>::get_unchecked
  %66 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1dd74b4882c2d5a2E"(ptr align 1 %_75.0, i32 %_75.1, i32 1, ptr align 4 @alloc_aab0c89d765f456daf0281acd303cec5) #17, !dbg !10464
  %_74.0 = extractvalue { ptr, i32 } %66, 0, !dbg !10464
  %_74.1 = extractvalue { ptr, i32 } %66, 1, !dbg !10464
  store ptr %_74.0, ptr %slice, align 4, !dbg !10465
  %67 = getelementptr inbounds i8, ptr %slice, i32 4, !dbg !10465
  store i32 %_74.1, ptr %67, align 4, !dbg !10465
  %_78.0 = load ptr, ptr %out_slice, align 4, !dbg !10466
  %68 = getelementptr inbounds i8, ptr %out_slice, i32 4, !dbg !10466
  %_78.1 = load i32, ptr %68, align 4, !dbg !10466
; call core::slice::<impl [T]>::get_unchecked_mut
  %69 = call { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h812f1e61fa4cca46E"(ptr align 1 %_78.0, i32 %_78.1, i32 1, ptr align 4 @alloc_65dc09517c12adf97a73dbf02e7bebde) #17, !dbg !10467
  %_77.0 = extractvalue { ptr, i32 } %69, 0, !dbg !10467
  %_77.1 = extractvalue { ptr, i32 } %69, 1, !dbg !10467
  store ptr %_77.0, ptr %out_slice, align 4, !dbg !10468
  %70 = getelementptr inbounds i8, ptr %out_slice, i32 4, !dbg !10468
  store i32 %_77.1, ptr %70, align 4, !dbg !10468
  br label %bb32, !dbg !10469

panic5:                                           ; preds = %bb35
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_87dc9894d44c165fcc9a8e931a977869) #18, !dbg !10462
  unreachable, !dbg !10462

bb14:                                             ; preds = %bb12
  %71 = getelementptr inbounds nuw i8, ptr %chunk.0, i32 %j6, !dbg !10406
  %_27 = load i8, ptr %71, align 1, !dbg !10406
  %_30 = icmp ult i32 %j6, 16, !dbg !10470
  br i1 %_30, label %bb15, label %panic9, !dbg !10470

panic8:                                           ; preds = %bb12
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 %j6, i32 %chunk.1, ptr align 4 @alloc_1b7e5c532c794617759c1ae50b4ed1d8) #18, !dbg !10406
  unreachable, !dbg !10406

bb15:                                             ; preds = %bb14
  %72 = getelementptr inbounds nuw i8, ptr %is_ascii, i32 %j6, !dbg !10470
  %73 = icmp ule i8 %_27, 127, !dbg !10470
  %74 = zext i1 %73 to i8, !dbg !10470
  store i8 %74, ptr %72, align 1, !dbg !10470
  br label %bb9, !dbg !10403

panic9:                                           ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE(i32 %j6, i32 16, ptr align 4 @alloc_09070637dcc585742614807db6bbe739) #18, !dbg !10470
  unreachable, !dbg !10470

bb11:                                             ; No predecessors!
  unreachable, !dbg !10471
}

; alloc::str::convert_while_ascii::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN5alloc3str19convert_while_ascii28_$u7b$$u7b$closure$u7d$$u7d$17h3d80ddc3b3c51e89E"(ptr align 1 %_1, ptr align 1 %x) unnamed_addr #2 !dbg !10473 {
start:
  %x.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10479, !DIExpression(), !10480)
  store ptr %x, ptr %x.dbg.spill, align 4
    #dbg_declare(ptr %x.dbg.spill, !10478, !DIExpression(), !10481)
  %0 = load i8, ptr %x, align 1, !dbg !10482
  %_3 = trunc nuw i8 %0 to i1, !dbg !10482
  %_0 = zext i1 %_3 to i8, !dbg !10482
  ret i8 %_0, !dbg !10483
}

; alloc::str::<impl str>::into_string
; Function Attrs: inlinehint nounwind
define internal void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17hbdbf9a1951d573f4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !10484 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10492, !DIExpression(), !10495)
; call alloc::boxed::convert::<impl core::convert::From<alloc::boxed::Box<str,A>> for alloc::boxed::Box<[u8],A>>::from
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed7convert131_$LT$impl$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$GT$4from17h0c8b806982e781b7E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !10496
  %slice.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10496
  %slice.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10496
  store ptr %slice.0, ptr %slice.dbg.spill, align 4, !dbg !10496
  %2 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4, !dbg !10496
  store i32 %slice.1, ptr %2, align 4, !dbg !10496
    #dbg_declare(ptr %slice.dbg.spill, !10493, !DIExpression(), !10497)
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h40445ef263cfe410E"(ptr sret([12 x i8]) align 4 %_3, ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !10498
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_3) #17, !dbg !10499
  ret void, !dbg !10500
}

; alloc::str::<impl str>::to_lowercase
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase17h27e40ddb7db006c1E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !10501 {
start:
  %c.dbg.spill8 = alloca [4 x i8], align 4
  %b.dbg.spill6 = alloca [4 x i8], align 4
  %a.dbg.spill4 = alloca [4 x i8], align 4
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill2 = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %sigma_lowercase.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %i.dbg.spill = alloca [4 x i8], align 4
  %prefix_len.dbg.spill = alloca [4 x i8], align 4
  %rest.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_22 = alloca [12 x i8], align 4
  %_12 = alloca [8 x i8], align 4
  %iter = alloca [12 x i8], align 4
  %_9 = alloca [12 x i8], align 4
  %_8 = alloca [12 x i8], align 4
  %_4 = alloca [20 x i8], align 4
  %s = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10505, !DIExpression(), !10527)
    #dbg_declare(ptr %s, !10506, !DIExpression(), !10528)
    #dbg_declare(ptr %iter, !10511, !DIExpression(), !10529)
; call alloc::str::convert_while_ascii
  call void @_ZN5alloc3str19convert_while_ascii17h247351e9b033564eE(ptr sret([20 x i8]) align 4 %_4, ptr align 1 %self.0, i32 %self.1, ptr @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h2600f862fc937d7dE") #17, !dbg !10530
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %s, ptr align 4 %_4, i32 12, i1 false), !dbg !10531
  %1 = getelementptr inbounds i8, ptr %_4, i32 12, !dbg !10532
  %rest.0 = load ptr, ptr %1, align 4, !dbg !10532
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !10532
  %rest.1 = load i32, ptr %2, align 4, !dbg !10532
  store ptr %rest.0, ptr %rest.dbg.spill, align 4, !dbg !10532
  %3 = getelementptr inbounds i8, ptr %rest.dbg.spill, i32 4, !dbg !10532
  store i32 %rest.1, ptr %3, align 4, !dbg !10532
    #dbg_declare(ptr %rest.dbg.spill, !10508, !DIExpression(), !10533)
; call alloc::string::String::len
  %prefix_len = call i32 @_ZN5alloc6string6String3len17h8f2b854020f019dbE(ptr align 4 %s) #17, !dbg !10534
  store i32 %prefix_len, ptr %prefix_len.dbg.spill, align 4, !dbg !10534
    #dbg_declare(ptr %prefix_len.dbg.spill, !10509, !DIExpression(), !10535)
; call core::str::<impl str>::char_indices
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h177befd449ee2c89E"(ptr sret([12 x i8]) align 4 %_9, ptr align 1 %rest.0, i32 %rest.1) #17, !dbg !10536
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4d12ca2a640fa948E"(ptr sret([12 x i8]) align 4 %_8, ptr align 4 %_9) #17, !dbg !10537
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter, ptr align 4 %_8, i32 12, i1 false), !dbg !10537
  br label %bb5, !dbg !10538

bb5:                                              ; preds = %bb16, %bb17, %bb18, %bb11, %start
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %4 = call { i32, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc01ba1f3a9afe6bbE"(ptr align 4 %iter) #17, !dbg !10529
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !10529
  %6 = extractvalue { i32, i32 } %4, 1, !dbg !10529
  store i32 %5, ptr %_12, align 4, !dbg !10529
  %7 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !10529
  store i32 %6, ptr %7, align 4, !dbg !10529
  %8 = load i32, ptr %_12, align 4, !dbg !10529
  %9 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !10529
  %10 = load i32, ptr %9, align 4, !dbg !10529
  %11 = icmp eq i32 %10, 1114112, !dbg !10529
  %_14 = select i1 %11, i32 0, i32 1, !dbg !10529
  %12 = trunc nuw i32 %_14 to i1, !dbg !10529
  br i1 %12, label %bb8, label %bb9, !dbg !10529

bb8:                                              ; preds = %bb5
  %i = load i32, ptr %_12, align 4, !dbg !10539
  store i32 %i, ptr %i.dbg.spill, align 4, !dbg !10539
    #dbg_declare(ptr %i.dbg.spill, !10513, !DIExpression(), !10540)
  %13 = getelementptr inbounds i8, ptr %_12, i32 4, !dbg !10541
  %c = load i32, ptr %13, align 4, !dbg !10541
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !10541
    #dbg_declare(ptr %c.dbg.spill, !10515, !DIExpression(), !10542)
  %14 = icmp eq i32 %c, 931, !dbg !10543
  br i1 %14, label %bb10, label %bb13, !dbg !10543

bb9:                                              ; preds = %bb5
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %s, i32 12, i1 false), !dbg !10544
  ret void, !dbg !10545

bb10:                                             ; preds = %bb8
  %_19.0 = add i32 %prefix_len, %i, !dbg !10546
  %_19.1 = icmp ult i32 %_19.0, %prefix_len, !dbg !10546
  br i1 %_19.1, label %panic, label %bb11, !dbg !10546

bb13:                                             ; preds = %bb8
; call core::unicode::unicode_data::conversions::to_lower
  call void @_ZN4core7unicode12unicode_data11conversions8to_lower17h3d1efec1c789f8c8E(ptr sret([12 x i8]) align 4 %_22, i32 %c) #17, !dbg !10547
  %15 = getelementptr inbounds nuw i32, ptr %_22, i32 1, !dbg !10548
  %16 = load i32, ptr %15, align 4, !dbg !10548
  %17 = icmp eq i32 %16, 0, !dbg !10548
  br i1 %17, label %bb18, label %bb15, !dbg !10548

bb11:                                             ; preds = %bb10
; call alloc::str::<impl str>::to_lowercase::map_uppercase_sigma
  %sigma_lowercase = call i32 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17h0d0732ef0aaa22b8E"(ptr align 1 %self.0, i32 %self.1, i32 %_19.0) #17, !dbg !10549
  store i32 %sigma_lowercase, ptr %sigma_lowercase.dbg.spill, align 4, !dbg !10549
    #dbg_declare(ptr %sigma_lowercase.dbg.spill, !10516, !DIExpression(), !10550)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %sigma_lowercase) #17, !dbg !10551
  br label %bb5, !dbg !10551

panic:                                            ; preds = %bb10
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_140dc710192e4660100995a44691c807) #18, !dbg !10546
  unreachable, !dbg !10546

bb18:                                             ; preds = %bb13
  %18 = getelementptr inbounds nuw i32, ptr %_22, i32 0, !dbg !10552
  %a = load i32, ptr %18, align 4, !dbg !10552
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !10552
    #dbg_declare(ptr %a.dbg.spill, !10518, !DIExpression(), !10553)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %a) #17, !dbg !10554
  br label %bb5, !dbg !10554

bb15:                                             ; preds = %bb13
  %19 = getelementptr inbounds nuw i32, ptr %_22, i32 2, !dbg !10548
  %20 = load i32, ptr %19, align 4, !dbg !10548
  %21 = icmp eq i32 %20, 0, !dbg !10548
  br i1 %21, label %bb17, label %bb16, !dbg !10548

bb17:                                             ; preds = %bb15
  %22 = getelementptr inbounds nuw i32, ptr %_22, i32 0, !dbg !10555
  %a1 = load i32, ptr %22, align 4, !dbg !10555
  store i32 %a1, ptr %a.dbg.spill2, align 4, !dbg !10555
    #dbg_declare(ptr %a.dbg.spill2, !10520, !DIExpression(), !10556)
  %23 = getelementptr inbounds nuw i32, ptr %_22, i32 1, !dbg !10557
  %b = load i32, ptr %23, align 4, !dbg !10557
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !10557
    #dbg_declare(ptr %b.dbg.spill, !10522, !DIExpression(), !10558)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %a1) #17, !dbg !10559
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %b) #17, !dbg !10560
  br label %bb5, !dbg !10560

bb16:                                             ; preds = %bb15
  %24 = getelementptr inbounds nuw i32, ptr %_22, i32 0, !dbg !10561
  %a3 = load i32, ptr %24, align 4, !dbg !10561
  store i32 %a3, ptr %a.dbg.spill4, align 4, !dbg !10561
    #dbg_declare(ptr %a.dbg.spill4, !10523, !DIExpression(), !10562)
  %25 = getelementptr inbounds nuw i32, ptr %_22, i32 1, !dbg !10563
  %b5 = load i32, ptr %25, align 4, !dbg !10563
  store i32 %b5, ptr %b.dbg.spill6, align 4, !dbg !10563
    #dbg_declare(ptr %b.dbg.spill6, !10525, !DIExpression(), !10564)
  %26 = getelementptr inbounds nuw i32, ptr %_22, i32 2, !dbg !10565
  %c7 = load i32, ptr %26, align 4, !dbg !10565
  store i32 %c7, ptr %c.dbg.spill8, align 4, !dbg !10565
    #dbg_declare(ptr %c.dbg.spill8, !10526, !DIExpression(), !10566)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %a3) #17, !dbg !10567
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %b5) #17, !dbg !10568
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %c7) #17, !dbg !10569
  br label %bb5, !dbg !10569

bb7:                                              ; No predecessors!
  unreachable, !dbg !10529
}

; alloc::str::<impl str>::to_lowercase::map_uppercase_sigma
; Function Attrs: nounwind
define internal i32 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17h0d0732ef0aaa22b8E"(ptr align 1 %from.0, i32 %from.1, i32 %i) unnamed_addr #1 !dbg !10570 {
start:
  %i.dbg.spill = alloca [4 x i8], align 4
  %from.dbg.spill = alloca [8 x i8], align 4
  %is_word_final = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  store ptr %from.0, ptr %from.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %from.dbg.spill, i32 4
  store i32 %from.1, ptr %0, align 4
    #dbg_declare(ptr %from.dbg.spill, !10574, !DIExpression(), !10578)
  store i32 %i, ptr %i.dbg.spill, align 4
    #dbg_declare(ptr %i.dbg.spill, !10575, !DIExpression(), !10579)
    #dbg_declare(ptr %is_word_final, !10576, !DIExpression(), !10580)
; call core::char::methods::<impl char>::len_utf8
  %_3 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h43f83d25bab4344eE"(i32 931) #17, !dbg !10581
  %1 = icmp eq i32 %_3, 2, !dbg !10582
  br i1 %1, label %bb3, label %bb2, !dbg !10582

bb3:                                              ; preds = %start
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %2 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1 %from.0, i32 %from.1, i32 %i, ptr align 4 @alloc_a88579596bb6f7bdad7b700096fbfdfe) #17, !dbg !10583
  %_9.0 = extractvalue { ptr, i32 } %2, 0, !dbg !10583
  %_9.1 = extractvalue { ptr, i32 } %2, 1, !dbg !10583
; call core::str::<impl str>::chars
  %3 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hdc83417ee00d71e3E"(ptr align 1 %_9.0, i32 %_9.1) #17, !dbg !10584
  %_8.0 = extractvalue { ptr, ptr } %3, 0, !dbg !10584
  %_8.1 = extractvalue { ptr, ptr } %3, 1, !dbg !10584
; call core::iter::traits::iterator::Iterator::rev
  %4 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3rev17hd0b95926e983aec0E(ptr %_8.0, ptr %_8.1) #17, !dbg !10585
  %_7.0 = extractvalue { ptr, ptr } %4, 0, !dbg !10585
  %_7.1 = extractvalue { ptr, ptr } %4, 1, !dbg !10585
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
  %_6 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17h7a0f16609c93e4c1E"(ptr %_7.0, ptr %_7.1) #17, !dbg !10586
  br i1 %_6, label %bb8, label %bb9, !dbg !10586

bb2:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_19e04ffb8ff30923e1e2debaf035124d, i32 38, ptr align 4 @alloc_ddff4e55976dd181666e0ed3143ee6c8) #18, !dbg !10587
  unreachable, !dbg !10587

bb9:                                              ; preds = %bb3
  store i8 0, ptr %is_word_final, align 1, !dbg !10586
  br label %bb14, !dbg !10586

bb8:                                              ; preds = %bb3
  %_16.0 = add i32 %i, 2, !dbg !10588
  %_16.1 = icmp ult i32 %_16.0, %i, !dbg !10588
  br i1 %_16.1, label %panic, label %bb10, !dbg !10588

bb14:                                             ; preds = %bb10, %bb9
  %5 = load i8, ptr %is_word_final, align 1, !dbg !10589
  %_17 = trunc nuw i8 %5 to i1, !dbg !10589
  br i1 %_17, label %bb15, label %bb16, !dbg !10589

bb10:                                             ; preds = %bb8
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %6 = call { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1 %from.0, i32 %from.1, i32 %_16.0, ptr align 4 @alloc_7cdc929191e77e09fb4b1661ef37815a) #17, !dbg !10590
  %_13.0 = extractvalue { ptr, i32 } %6, 0, !dbg !10590
  %_13.1 = extractvalue { ptr, i32 } %6, 1, !dbg !10590
; call core::str::<impl str>::chars
  %7 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hdc83417ee00d71e3E"(ptr align 1 %_13.0, i32 %_13.1) #17, !dbg !10591
  %_12.0 = extractvalue { ptr, ptr } %7, 0, !dbg !10591
  %_12.1 = extractvalue { ptr, ptr } %7, 1, !dbg !10591
; call alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
  %_11 = call zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17h9c8d1db5fcc39ba4E"(ptr %_12.0, ptr %_12.1) #17, !dbg !10592
  %8 = xor i1 %_11, true, !dbg !10593
  %9 = zext i1 %8 to i8, !dbg !10593
  store i8 %9, ptr %is_word_final, align 1, !dbg !10593
  br label %bb14, !dbg !10586

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_e0d084125ca9ef9ffdda5eaa91115ab3) #18, !dbg !10588
  unreachable, !dbg !10588

bb16:                                             ; preds = %bb14
  store i32 963, ptr %_0, align 4, !dbg !10594
  br label %bb17, !dbg !10595

bb15:                                             ; preds = %bb14
  store i32 962, ptr %_0, align 4, !dbg !10596
  br label %bb17, !dbg !10595

bb17:                                             ; preds = %bb15, %bb16
  %10 = load i32, ptr %_0, align 4, !dbg !10597
  ret i32 %10, !dbg !10597
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
; Function Attrs: nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17h7a0f16609c93e4c1E"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !10598 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %iter.dbg.spill = alloca [8 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !10602, !DIExpression(), !10606)
; call core::iter::traits::iterator::Iterator::skip_while
  call void @_ZN4core4iter6traits8iterator8Iterator10skip_while17h8364ad83c5b1951fE(ptr sret([12 x i8]) align 4 %_4, ptr %iter.0, ptr %iter.1) #17, !dbg !10607
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
  %1 = call i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2f382edd73bf86e2E"(ptr align 4 %_4) #17, !dbg !10608
  store i32 %1, ptr %_2, align 4, !dbg !10608
  %2 = load i32, ptr %_2, align 4, !dbg !10609
  %3 = icmp eq i32 %2, 1114112, !dbg !10609
  %_5 = select i1 %3, i32 0, i32 1, !dbg !10609
  %4 = trunc nuw i32 %_5 to i1, !dbg !10610
  br i1 %4, label %bb5, label %bb4, !dbg !10610

bb5:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !10611
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !10611
    #dbg_declare(ptr %c.dbg.spill, !10603, !DIExpression(), !10612)
; call core::char::methods::<impl char>::is_cased
  %5 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_cased17h406efb6a17678473E"(i32 %c) #17, !dbg !10613
  %6 = zext i1 %5 to i8, !dbg !10613
  store i8 %6, ptr %_0, align 1, !dbg !10613
  br label %bb6, !dbg !10613

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10614
  br label %bb6, !dbg !10614

bb6:                                              ; preds = %bb5, %bb4
  %7 = load i8, ptr %_0, align 1, !dbg !10615
  %8 = trunc nuw i8 %7 to i1, !dbg !10615
  ret i1 %8, !dbg !10615

bb3:                                              ; No predecessors!
  unreachable, !dbg !10609
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased
; Function Attrs: nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17h9c8d1db5fcc39ba4E"(ptr %iter.0, ptr %iter.1) unnamed_addr #1 !dbg !10616 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %iter.dbg.spill = alloca [8 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store ptr %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !10620, !DIExpression(), !10624)
; call core::iter::traits::iterator::Iterator::skip_while
  call void @_ZN4core4iter6traits8iterator8Iterator10skip_while17h11ee7767fd6e264bE(ptr sret([12 x i8]) align 4 %_4, ptr %iter.0, ptr %iter.1) #17, !dbg !10625
; call <core::iter::adapters::skip_while::SkipWhile<I,P> as core::iter::traits::iterator::Iterator>::next
  %1 = call i32 @"_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf1d20452622fd094E"(ptr align 4 %_4) #17, !dbg !10626
  store i32 %1, ptr %_2, align 4, !dbg !10626
  %2 = load i32, ptr %_2, align 4, !dbg !10627
  %3 = icmp eq i32 %2, 1114112, !dbg !10627
  %_5 = select i1 %3, i32 0, i32 1, !dbg !10627
  %4 = trunc nuw i32 %_5 to i1, !dbg !10628
  br i1 %4, label %bb5, label %bb4, !dbg !10628

bb5:                                              ; preds = %start
  %c = load i32, ptr %_2, align 4, !dbg !10629
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !10629
    #dbg_declare(ptr %c.dbg.spill, !10621, !DIExpression(), !10630)
; call core::char::methods::<impl char>::is_cased
  %5 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_cased17h406efb6a17678473E"(i32 %c) #17, !dbg !10631
  %6 = zext i1 %5 to i8, !dbg !10631
  store i8 %6, ptr %_0, align 1, !dbg !10631
  br label %bb6, !dbg !10631

bb4:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !10632
  br label %bb6, !dbg !10632

bb6:                                              ; preds = %bb5, %bb4
  %7 = load i8, ptr %_0, align 1, !dbg !10633
  %8 = trunc nuw i8 %7 to i1, !dbg !10633
  ret i1 %8, !dbg !10633

bb3:                                              ; No predecessors!
  unreachable, !dbg !10627
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h147f58b0431ce64fE"(ptr align 1 %_1, ptr align 4 %_2) unnamed_addr #2 !dbg !10634 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10640, !DIExpression(), !10642)
  store ptr %_2, ptr %_2.dbg.spill, align 4
    #dbg_declare(ptr %_2.dbg.spill, !10641, !DIExpression(), !10643)
  %c = load i32, ptr %_2, align 4, !dbg !10644
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !10644
    #dbg_declare(ptr %c.dbg.spill, !10638, !DIExpression(), !10645)
; call core::char::methods::<impl char>::is_case_ignorable
  %_0 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$17is_case_ignorable17ha34e138c472dbef3E"(i32 %c) #17, !dbg !10646
  ret i1 %_0, !dbg !10647
}

; alloc::str::<impl str>::to_lowercase::case_ignorable_then_cased::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h775e7e2c581a2f52E"(ptr align 1 %_1, ptr align 4 %_2) unnamed_addr #2 !dbg !10648 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_2.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !10654, !DIExpression(), !10656)
  store ptr %_2, ptr %_2.dbg.spill, align 4
    #dbg_declare(ptr %_2.dbg.spill, !10655, !DIExpression(), !10657)
  %c = load i32, ptr %_2, align 4, !dbg !10658
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !10658
    #dbg_declare(ptr %c.dbg.spill, !10652, !DIExpression(), !10659)
; call core::char::methods::<impl char>::is_case_ignorable
  %_0 = call zeroext i1 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$17is_case_ignorable17ha34e138c472dbef3E"(i32 %c) #17, !dbg !10660
  ret i1 %_0, !dbg !10661
}

; alloc::str::<impl str>::to_uppercase
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_uppercase17h9468e9169c888009E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !10662 {
start:
  %c.dbg.spill8 = alloca [4 x i8], align 4
  %b.dbg.spill6 = alloca [4 x i8], align 4
  %a.dbg.spill4 = alloca [4 x i8], align 4
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill2 = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [4 x i8], align 4
  %rest.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_14 = alloca [12 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %_4 = alloca [20 x i8], align 4
  %s = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10664, !DIExpression(), !10681)
    #dbg_declare(ptr %s, !10665, !DIExpression(), !10682)
    #dbg_declare(ptr %iter, !10668, !DIExpression(), !10683)
; call alloc::str::convert_while_ascii
  call void @_ZN5alloc3str19convert_while_ascii17h247351e9b033564eE(ptr sret([20 x i8]) align 4 %_4, ptr align 1 %self.0, i32 %self.1, ptr @"_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17h32abef44752c4a63E") #17, !dbg !10684
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %s, ptr align 4 %_4, i32 12, i1 false), !dbg !10685
  %1 = getelementptr inbounds i8, ptr %_4, i32 12, !dbg !10686
  %rest.0 = load ptr, ptr %1, align 4, !dbg !10686
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !10686
  %rest.1 = load i32, ptr %2, align 4, !dbg !10686
  store ptr %rest.0, ptr %rest.dbg.spill, align 4, !dbg !10686
  %3 = getelementptr inbounds i8, ptr %rest.dbg.spill, i32 4, !dbg !10686
  store i32 %rest.1, ptr %3, align 4, !dbg !10686
    #dbg_declare(ptr %rest.dbg.spill, !10667, !DIExpression(), !10687)
; call core::str::<impl str>::chars
  %4 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hdc83417ee00d71e3E"(ptr align 1 %rest.0, i32 %rest.1) #17, !dbg !10688
  %_7.0 = extractvalue { ptr, ptr } %4, 0, !dbg !10688
  %_7.1 = extractvalue { ptr, ptr } %4, 1, !dbg !10688
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %5 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf08d3cb0f782247dE"(ptr %_7.0, ptr %_7.1) #17, !dbg !10689
  %_6.0 = extractvalue { ptr, ptr } %5, 0, !dbg !10689
  %_6.1 = extractvalue { ptr, ptr } %5, 1, !dbg !10689
  store ptr %_6.0, ptr %iter, align 4, !dbg !10689
  %6 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !10689
  store ptr %_6.1, ptr %6, align 4, !dbg !10689
  br label %bb4, !dbg !10690

bb4:                                              ; preds = %bb11, %bb12, %bb13, %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %7 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20cd7376025b9888E"(ptr align 4 %iter) #17, !dbg !10683
  store i32 %7, ptr %_10, align 4, !dbg !10683
  %8 = load i32, ptr %_10, align 4, !dbg !10683
  %9 = icmp eq i32 %8, 1114112, !dbg !10683
  %_12 = select i1 %9, i32 0, i32 1, !dbg !10683
  %10 = trunc nuw i32 %_12 to i1, !dbg !10683
  br i1 %10, label %bb7, label %bb8, !dbg !10683

bb7:                                              ; preds = %bb4
  %c = load i32, ptr %_10, align 4, !dbg !10691
  store i32 %c, ptr %c.dbg.spill, align 4, !dbg !10691
    #dbg_declare(ptr %c.dbg.spill, !10670, !DIExpression(), !10692)
; call core::unicode::unicode_data::conversions::to_upper
  call void @_ZN4core7unicode12unicode_data11conversions8to_upper17h87ea07d945ccc06aE(ptr sret([12 x i8]) align 4 %_14, i32 %c) #17, !dbg !10693
  %11 = getelementptr inbounds nuw i32, ptr %_14, i32 1, !dbg !10694
  %12 = load i32, ptr %11, align 4, !dbg !10694
  %13 = icmp eq i32 %12, 0, !dbg !10694
  br i1 %13, label %bb13, label %bb10, !dbg !10694

bb8:                                              ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %s, i32 12, i1 false), !dbg !10695
  ret void, !dbg !10696

bb13:                                             ; preds = %bb7
  %14 = getelementptr inbounds nuw i32, ptr %_14, i32 0, !dbg !10697
  %a = load i32, ptr %14, align 4, !dbg !10697
  store i32 %a, ptr %a.dbg.spill, align 4, !dbg !10697
    #dbg_declare(ptr %a.dbg.spill, !10672, !DIExpression(), !10698)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %a) #17, !dbg !10699
  br label %bb4, !dbg !10699

bb10:                                             ; preds = %bb7
  %15 = getelementptr inbounds nuw i32, ptr %_14, i32 2, !dbg !10694
  %16 = load i32, ptr %15, align 4, !dbg !10694
  %17 = icmp eq i32 %16, 0, !dbg !10694
  br i1 %17, label %bb12, label %bb11, !dbg !10694

bb12:                                             ; preds = %bb10
  %18 = getelementptr inbounds nuw i32, ptr %_14, i32 0, !dbg !10700
  %a1 = load i32, ptr %18, align 4, !dbg !10700
  store i32 %a1, ptr %a.dbg.spill2, align 4, !dbg !10700
    #dbg_declare(ptr %a.dbg.spill2, !10674, !DIExpression(), !10701)
  %19 = getelementptr inbounds nuw i32, ptr %_14, i32 1, !dbg !10702
  %b = load i32, ptr %19, align 4, !dbg !10702
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !10702
    #dbg_declare(ptr %b.dbg.spill, !10676, !DIExpression(), !10703)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %a1) #17, !dbg !10704
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %b) #17, !dbg !10705
  br label %bb4, !dbg !10705

bb11:                                             ; preds = %bb10
  %20 = getelementptr inbounds nuw i32, ptr %_14, i32 0, !dbg !10706
  %a3 = load i32, ptr %20, align 4, !dbg !10706
  store i32 %a3, ptr %a.dbg.spill4, align 4, !dbg !10706
    #dbg_declare(ptr %a.dbg.spill4, !10677, !DIExpression(), !10707)
  %21 = getelementptr inbounds nuw i32, ptr %_14, i32 1, !dbg !10708
  %b5 = load i32, ptr %21, align 4, !dbg !10708
  store i32 %b5, ptr %b.dbg.spill6, align 4, !dbg !10708
    #dbg_declare(ptr %b.dbg.spill6, !10679, !DIExpression(), !10709)
  %22 = getelementptr inbounds nuw i32, ptr %_14, i32 2, !dbg !10710
  %c7 = load i32, ptr %22, align 4, !dbg !10710
  store i32 %c7, ptr %c.dbg.spill8, align 4, !dbg !10710
    #dbg_declare(ptr %c.dbg.spill8, !10680, !DIExpression(), !10711)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %a3) #17, !dbg !10712
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %b5) #17, !dbg !10713
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %s, i32 %c7) #17, !dbg !10714
  br label %bb4, !dbg !10714

bb6:                                              ; No predecessors!
  unreachable, !dbg !10683
}

; alloc::str::from_boxed_utf8_unchecked
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h4a17908cfa49f8e2E(ptr align 1 %v.0, i32 %v.1) unnamed_addr #2 !dbg !10715 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !10719, !DIExpression(), !10720)
; call alloc::boxed::Box<T>::into_raw
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17ha41afd7940b056a7E"(ptr align 1 %v.0, i32 %v.1) #17, !dbg !10721
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10721
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10721
; call alloc::boxed::Box<T>::from_raw
  %2 = call { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hd749f9e4715d884fE"(ptr %_3.0, i32 %_3.1) #17, !dbg !10722
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !10722
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !10722
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10723
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !10723
  ret { ptr, i32 } %4, !dbg !10723
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nounwind
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hb794441537176e61E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !10724 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !10727, !DIExpression(), !10728)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !10729)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !10731
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !10731
  %_3.0 = extractvalue { ptr, i32 } %3, 0, !dbg !10732
  %_3.1 = extractvalue { ptr, i32 } %3, 1, !dbg !10732
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17he3cbfef68a0c3d3cE"(ptr sret([12 x i8]) align 4 %_2, ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !10733
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_2) #17, !dbg !10734
  ret void, !dbg !10735
}

; alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h5c7ca20179da90ceE"(ptr align 4 %self) unnamed_addr #2 !dbg !10736 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10741, !DIExpression(), !10742)
; call <alloc::string::String as core::ops::index::Index<I>>::index
  %0 = call { ptr, i32 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h37c79d989a4cc233E"(ptr align 4 %self, ptr align 4 @alloc_4299fdaa7a4544d4451ba415def7c466) #17, !dbg !10743
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !10743
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !10743
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10744
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !10744
  ret { ptr, i32 } %2, !dbg !10744
}

; alloc::vec::Vec<T>::with_capacity
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %_0, i32 %capacity) unnamed_addr #2 !dbg !10745 {
start:
  %capacity.dbg.spill = alloca [4 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !10751, !DIExpression(), !10752)
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h29df3afc943f947fE"(ptr sret([12 x i8]) align 4 %_0, i32 %capacity) #17, !dbg !10753
  ret void, !dbg !10754
}

; alloc::vec::Vec<T>::into_raw_parts
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3vec12Vec$LT$T$GT$14into_raw_parts17h523d483769e29f83E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !10755 {
start:
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %me = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !10765, !DIExpression(), !10771)
    #dbg_declare(ptr %me, !10766, !DIExpression(), !10772)
    #dbg_declare(ptr %self, !10773, !DIExpression(), !10779)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %me, ptr align 4 %self, i32 12, i1 false), !dbg !10781
  store ptr %me, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !10782, !DIExpression(), !10789)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %me) #17, !dbg !10791
  store ptr %me, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !10792, !DIExpression(), !10799)
; call alloc::vec::Vec<T,A>::len
  %_6 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %me) #17, !dbg !10801
  store ptr %me, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !10792, !DIExpression(), !10802)
; call alloc::vec::Vec<T,A>::capacity
  %_9 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hb1ab5c7920d048deE"(ptr align 4 %me) #17, !dbg !10804
  store ptr %_3, ptr %_0, align 4, !dbg !10805
  %0 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10805
  store i32 %_6, ptr %0, align 4, !dbg !10805
  %1 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !10805
  store i32 %_9, ptr %1, align 4, !dbg !10805
  ret void, !dbg !10806
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h8bc511fc2432249cE"(ptr sret([12 x i8]) align 4 %_0) unnamed_addr #2 !dbg !10807 {
start:
; call alloc::raw_vec::RawVec<T>::new
  %0 = call { i32, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h41a3a000cf7375baE"() #17, !dbg !10811
  %_1.0 = extractvalue { i32, ptr } %0, 0, !dbg !10811
  %_1.1 = extractvalue { i32, ptr } %0, 1, !dbg !10811
  store i32 %_1.0, ptr %_0, align 4, !dbg !10812
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10812
  store ptr %_1.1, ptr %1, align 4, !dbg !10812
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !10812
  store i32 0, ptr %2, align 4, !dbg !10812
  ret void, !dbg !10813
}

; alloc::vec::Vec<T,A>::as_mut_ptr
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %self) unnamed_addr #2 !dbg !10814 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10819, !DIExpression(), !10820)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_0 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h270e5ed45b1e0b2eE"(ptr align 4 %self) #17, !dbg !10821
  ret ptr %_0, !dbg !10822
}

; alloc::vec::Vec<T,A>::insert_mut::assert_failed
; Function Attrs: cold minsize noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10insert_mut13assert_failed17he5e6a8f0cce1fe1aE"(i32 %0, i32 %1, ptr align 4 %2) unnamed_addr #6 !dbg !10823 {
start:
  %args.dbg.spill = alloca [8 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %args = alloca [16 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  %len = alloca [4 x i8], align 4
  %index = alloca [4 x i8], align 4
  store i32 %0, ptr %index, align 4
  store i32 %1, ptr %len, align 4
    #dbg_declare(ptr %index, !10827, !DIExpression(), !10835)
    #dbg_declare(ptr %len, !10828, !DIExpression(), !10836)
    #dbg_declare(ptr %args, !10832, !DIExpression(), !10837)
  store ptr %index, ptr %args.dbg.spill, align 4, !dbg !10838
  %3 = getelementptr inbounds i8, ptr %args.dbg.spill, i32 4, !dbg !10838
  store ptr %len, ptr %3, align 4, !dbg !10838
    #dbg_declare(ptr %args.dbg.spill, !10829, !DIExpression(), !10839)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %index) #17, !dbg !10839
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_10, ptr align 4 %len) #17, !dbg !10839
  %4 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !10839
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %4, ptr align 4 %_9, i32 8, i1 false), !dbg !10839
  %5 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 1, !dbg !10839
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %5, ptr align 4 %_10, i32 8, i1 false), !dbg !10839
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hc865914cb945b354E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 @alloc_98466829dde9674989532d5ba303a94e, ptr align 4 %args) #17, !dbg !10837
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_4, ptr align 4 %2) #18, !dbg !10838
  unreachable, !dbg !10838
}

; alloc::vec::Vec<T,A>::swap_remove::assert_failed
; Function Attrs: cold minsize noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11swap_remove13assert_failed17h73cf784a59db371dE"(i32 %0, i32 %1) unnamed_addr #6 !dbg !10840 {
start:
  %args.dbg.spill = alloca [8 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %args = alloca [16 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  %len = alloca [4 x i8], align 4
  %index = alloca [4 x i8], align 4
  store i32 %0, ptr %index, align 4
  store i32 %1, ptr %len, align 4
    #dbg_declare(ptr %index, !10843, !DIExpression(), !10851)
    #dbg_declare(ptr %len, !10844, !DIExpression(), !10852)
    #dbg_declare(ptr %args, !10848, !DIExpression(), !10853)
  store ptr %index, ptr %args.dbg.spill, align 4, !dbg !10854
  %2 = getelementptr inbounds i8, ptr %args.dbg.spill, i32 4, !dbg !10854
  store ptr %len, ptr %2, align 4, !dbg !10854
    #dbg_declare(ptr %args.dbg.spill, !10845, !DIExpression(), !10855)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %index) #17, !dbg !10855
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_10, ptr align 4 %len) #17, !dbg !10855
  %3 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !10855
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %3, ptr align 4 %_9, i32 8, i1 false), !dbg !10855
  %4 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 1, !dbg !10855
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %4, ptr align 4 %_10, i32 8, i1 false), !dbg !10855
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hc865914cb945b354E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 @alloc_a69ec275a9c583294426f949b22e3d0b, ptr align 4 %args) #17, !dbg !10853
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_4, ptr align 4 @alloc_d34252fcd2296cfa5c4a4aa6fa0479c8) #18, !dbg !10854
  unreachable, !dbg !10854
}

; alloc::vec::Vec<T,A>::try_reserve
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h1eb4e013042aec4aE"(ptr align 4 %self, i32 %additional) unnamed_addr #1 !dbg !10856 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10861, !DIExpression(), !10863)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !10862, !DIExpression(), !10864)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10865
  %_4 = load i32, ptr %0, align 4, !dbg !10865
; call alloc::raw_vec::RawVec<T,A>::try_reserve
  %1 = call { i32, i32 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h56ca3271bda081a1E"(ptr align 4 %self, i32 %_4, i32 %additional) #17, !dbg !10866
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !10866
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !10866
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !10867
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !10867
  ret { i32, i32 } %3, !dbg !10867
}

; alloc::vec::Vec<T,A>::as_mut_slice
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h72bca9be0aef2792E"(ptr align 4 %self) unnamed_addr #2 !dbg !10868 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10873, !DIExpression(), !10874)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_2 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %self) #17, !dbg !10875
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10876
  %_3 = load i32, ptr %0, align 4, !dbg !10876
; call core::slice::raw::from_raw_parts_mut
  %1 = call { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17heacb9b45dad9f98eE(ptr %_2, i32 %_3, ptr align 4 @alloc_f913d9899e8fadd833c4b940ff4bdb28) #17, !dbg !10877
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !10877
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !10877
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10878
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !10878
  ret { ptr, i32 } %3, !dbg !10878
}

; alloc::vec::Vec<T,A>::reserve_exact
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hca79a55e5fecd666E"(ptr align 4 %self, i32 %additional) unnamed_addr #1 !dbg !10879 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10884, !DIExpression(), !10886)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !10885, !DIExpression(), !10887)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10888
  %_5 = load i32, ptr %0, align 4, !dbg !10888
; call alloc::raw_vec::RawVec<T,A>::reserve_exact
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17hbd64d136cffbc680E"(ptr align 4 %self, i32 %_5, i32 %additional) #17, !dbg !10889
  ret void, !dbg !10890
}

; alloc::vec::Vec<T,A>::shrink_to_fit
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17h0283fd91ba36fdc0E"(ptr align 4 %self) unnamed_addr #2 !dbg !10891 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10896, !DIExpression(), !10897)
; call alloc::vec::Vec<T,A>::capacity
  %_3 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hb1ab5c7920d048deE"(ptr align 4 %self) #17, !dbg !10898
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10899
  %_5 = load i32, ptr %0, align 4, !dbg !10899
  %_2 = icmp ugt i32 %_3, %_5, !dbg !10900
  br i1 %_2, label %bb2, label %bb3, !dbg !10900

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !10901

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10902
  %_8 = load i32, ptr %1, align 4, !dbg !10902
; call alloc::raw_vec::RawVec<T,A>::shrink_to_fit
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17h5ec911174bc48a2bE"(ptr align 4 %self, i32 %_8) #17, !dbg !10903
  br label %bb3, !dbg !10903
}

; alloc::vec::Vec<T,A>::append_elements
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h72af747639aaced0E"(ptr align 4 %self, ptr %other.0, i32 %other.1) unnamed_addr #2 !dbg !10904 {
start:
  %count.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %count.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10909, !DIExpression(), !10915)
  store ptr %other.0, ptr %other.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %other.dbg.spill, i32 4
  store i32 %other.1, ptr %0, align 4
    #dbg_declare(ptr %other.dbg.spill, !10910, !DIExpression(), !10916)
; call core::ptr::const_ptr::<impl *const [T]>::len
  %count = call i32 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5431d645439ae544E"(ptr %other.0, i32 %other.1) #17, !dbg !10917
  store i32 %count, ptr %count.dbg.spill, align 4, !dbg !10917
    #dbg_declare(ptr %count.dbg.spill, !10911, !DIExpression(), !10918)
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1dfb094011f11624E"(ptr align 4 %self, i32 %count) #17, !dbg !10919
; call alloc::vec::Vec<T,A>::len
  %len = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %self) #17, !dbg !10920
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !10920
    #dbg_declare(ptr %len.dbg.spill, !10913, !DIExpression(), !10921)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %self) #17, !dbg !10922
  store ptr %_10, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1808, !DIExpression(), !10923)
  store i32 %len, ptr %count.dbg.spill.i1, align 4
    #dbg_declare(ptr %count.dbg.spill.i1, !1816, !DIExpression(), !10925)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !10926
  br i1 %_3.i, label %bb2.i2, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !10926

bb2.i2:                                           ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %_10, i32 %len, i32 1, ptr align 4 @alloc_a1315837ef81ce3d009f9040f76e6b20) #17, !dbg !10927
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !10927

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %start, %bb2.i2
  %_0.i = getelementptr inbounds nuw i8, ptr %_10, i32 %len, !dbg !10928
  store ptr %other.0, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !458, !DIExpression(), !10929)
  store ptr %_0.i, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !465, !DIExpression(), !10931)
  store i32 %count, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !466, !DIExpression(), !10932)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !10933
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !10933

bb2.i:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
; call core::ptr::copy_nonoverlapping::precondition_check
  call void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %other.0, ptr %_0.i, i32 1, i32 1, i32 %count, ptr align 4 @alloc_15a52d1a884c78a5de92a2463d39823d) #17, !dbg !10934
  br label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !10934

_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit: ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", %bb2.i
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_0.i, ptr align 1 %other.0, i32 %count, i1 false), !dbg !10935
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10936
  %2 = load i32, ptr %1, align 4, !dbg !10936
  %_11.0 = add i32 %2, %count, !dbg !10936
  %_11.1 = icmp ult i32 %_11.0, %2, !dbg !10936
  br i1 %_11.1, label %panic, label %bb7, !dbg !10936

bb7:                                              ; preds = %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit
  %3 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !10936
  store i32 %_11.0, ptr %3, align 4, !dbg !10936
  ret void, !dbg !10937

panic:                                            ; preds = %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_caf5c4628188627ca366c4753c30889c) #18, !dbg !10936
  unreachable, !dbg !10936
}

; alloc::vec::Vec<T,A>::into_boxed_slice
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h9a45a2727095a7bbE"(ptr align 4 %self) unnamed_addr #1 !dbg !10938 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %buf.dbg.spill = alloca [8 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %me = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !10943, !DIExpression(), !10950)
    #dbg_declare(ptr %me, !10944, !DIExpression(), !10951)
; call alloc::vec::Vec<T,A>::shrink_to_fit
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17h0283fd91ba36fdc0E"(ptr align 4 %self) #17, !dbg !10952
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_5, ptr align 4 %self, i32 12, i1 false), !dbg !10953
    #dbg_declare(ptr %_5, !10773, !DIExpression(), !10954)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %me, ptr align 4 %_5, i32 12, i1 false), !dbg !10956
  store ptr %me, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !10792, !DIExpression(), !10957)
; call core::ptr::read
  %0 = call { i32, ptr } @_ZN4core3ptr4read17hbd9e7fdba50a345aE(ptr %me, ptr align 4 @alloc_5d171970be64d63537133b950c5a6d77) #17, !dbg !10959
  %buf.0 = extractvalue { i32, ptr } %0, 0, !dbg !10959
  %buf.1 = extractvalue { i32, ptr } %0, 1, !dbg !10959
  store i32 %buf.0, ptr %buf.dbg.spill, align 4, !dbg !10959
  %1 = getelementptr inbounds i8, ptr %buf.dbg.spill, i32 4, !dbg !10959
  store ptr %buf.1, ptr %1, align 4, !dbg !10959
    #dbg_declare(ptr %buf.dbg.spill, !10946, !DIExpression(), !10960)
  store ptr %me, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !10792, !DIExpression(), !10961)
; call alloc::vec::Vec<T,A>::len
  %len = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %me) #17, !dbg !10963
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !10963
    #dbg_declare(ptr %len.dbg.spill, !10948, !DIExpression(), !10964)
; call alloc::raw_vec::RawVec<T,A>::into_box
  %2 = call { ptr, i32 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17he871bc64efd70c4fE"(i32 %buf.0, ptr %buf.1, i32 %len) #17, !dbg !10965
  %_14.0 = extractvalue { ptr, i32 } %2, 0, !dbg !10965
  %_14.1 = extractvalue { ptr, i32 } %2, 1, !dbg !10965
; call alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
  %3 = call { ptr, i32 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h24e8cf368fce8da5E"(ptr align 1 %_14.0, i32 %_14.1) #17, !dbg !10966
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !10966
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !10966
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !10967
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !10967
  ret { ptr, i32 } %5, !dbg !10967
}

; alloc::vec::Vec<T,A>::with_capacity_in
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h29df3afc943f947fE"(ptr sret([12 x i8]) align 4 %_0, i32 %capacity) unnamed_addr #2 !dbg !10968 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [4 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !10973, !DIExpression(), !10975)
    #dbg_declare(ptr %alloc.dbg.spill, !10974, !DIExpression(), !10976)
; call alloc::raw_vec::RawVec<T,A>::with_capacity_in
  %0 = call { i32, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h1eb3d526f5c1625aE"(i32 %capacity) #17, !dbg !10977
  %_3.0 = extractvalue { i32, ptr } %0, 0, !dbg !10977
  %_3.1 = extractvalue { i32, ptr } %0, 1, !dbg !10977
  store i32 %_3.0, ptr %_0, align 4, !dbg !10978
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !10978
  store ptr %_3.1, ptr %1, align 4, !dbg !10978
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !10978
  store i32 0, ptr %2, align 4, !dbg !10978
  ret void, !dbg !10979
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %self, ptr align 1 %other.0, i32 %other.1) unnamed_addr #1 !dbg !10980 {
start:
  %other.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !10985, !DIExpression(), !10987)
  store ptr %other.0, ptr %other.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %other.dbg.spill, i32 4
  store i32 %other.1, ptr %0, align 4
    #dbg_declare(ptr %other.dbg.spill, !10986, !DIExpression(), !10988)
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %other.0, i32 %other.1) #17, !dbg !10989
  %_3.0 = extractvalue { ptr, ptr } %1, 0, !dbg !10989
  %_3.1 = extractvalue { ptr, ptr } %1, 1, !dbg !10989
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hb418f7fbabe4ee11E"(ptr align 4 %self, ptr %_3.0, ptr %_3.1) #17, !dbg !10990
  ret void, !dbg !10991
}

; alloc::vec::Vec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17h5c0a2620d4516e37E"(ptr sret([12 x i8]) align 4 %_0, ptr %ptr, i32 %length, i32 %capacity) unnamed_addr #2 !dbg !10992 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %length.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !10997, !DIExpression(), !11001)
  store i32 %length, ptr %length.dbg.spill, align 4
    #dbg_declare(ptr %length.dbg.spill, !10998, !DIExpression(), !11002)
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !10999, !DIExpression(), !11003)
    #dbg_declare(ptr %alloc.dbg.spill, !11000, !DIExpression(), !11004)
  br label %bb1, !dbg !11005

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::from_raw_parts_in::precondition_check
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in18precondition_check17h82ea3908133a860eE"(i32 %length, i32 %capacity, ptr align 4 @alloc_7596cade4405370a27951651992ed797) #17, !dbg !11005
  br label %bb2, !dbg !11005

bb2:                                              ; preds = %bb1
; call alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
  %0 = call { i32, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hf44c9700e0c4bc99E"(ptr %ptr, i32 %capacity) #17, !dbg !11006
  %_7.0 = extractvalue { i32, ptr } %0, 0, !dbg !11006
  %_7.1 = extractvalue { i32, ptr } %0, 1, !dbg !11006
  store i32 %_7.0, ptr %_0, align 4, !dbg !11007
  %1 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11007
  store ptr %_7.1, ptr %1, align 4, !dbg !11007
  %2 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !11007
  store i32 %length, ptr %2, align 4, !dbg !11007
  ret void, !dbg !11008
}

; alloc::vec::Vec<T,A>::from_raw_parts_in::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in18precondition_check17h82ea3908133a860eE"(i32 %length, i32 %capacity, ptr align 4 %0) unnamed_addr #2 !dbg !11009 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %length.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  store i32 %length, ptr %length.dbg.spill, align 4
    #dbg_declare(ptr %length.dbg.spill, !11012, !DIExpression(), !11016)
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !11013, !DIExpression(), !11016)
  store ptr @alloc_82a99021b1306c9239507412b95c0e74, ptr %msg.dbg.spill, align 4, !dbg !11017
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !11017
  store i32 205, ptr %1, align 4, !dbg !11017
    #dbg_declare(ptr %msg.dbg.spill, !11014, !DIExpression(), !11017)
  %_3 = icmp ule i32 %length, %capacity, !dbg !11018
  br i1 %_3, label %bb1, label %bb2, !dbg !11018

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_7, i32 0, !dbg !11020
  store ptr @alloc_82a99021b1306c9239507412b95c0e74, ptr %2, align 4, !dbg !11020
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !11020
  store i32 205, ptr %3, align 4, !dbg !11020
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 %_7) #17, !dbg !11021
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_5, i1 zeroext false, ptr align 4 %0) #18, !dbg !11022
  unreachable, !dbg !11022

bb1:                                              ; preds = %start
  ret void, !dbg !11023
}

; alloc::vec::Vec<T,A>::try_reserve_exact
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h542714a9ce1f26ddE"(ptr align 4 %self, i32 %additional) unnamed_addr #1 !dbg !11024 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11027, !DIExpression(), !11029)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !11028, !DIExpression(), !11030)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11031
  %_4 = load i32, ptr %0, align 4, !dbg !11031
; call alloc::raw_vec::RawVec<T,A>::try_reserve_exact
  %1 = call { i32, i32 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h7aba69813c9ad828E"(ptr align 4 %self, i32 %_4, i32 %additional) #17, !dbg !11032
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !11032
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !11032
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !11033
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !11033
  ret { i32, i32 } %3, !dbg !11033
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hb9b6a0b0bf470925E"(ptr align 4 %self) unnamed_addr #2 !dbg !11034 {
start:
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11039, !DIExpression(), !11040)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_4 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %self) #17, !dbg !11041
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11042
  %_5 = load i32, ptr %0, align 4, !dbg !11042
  store ptr %_4, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1808, !DIExpression(), !11043)
  store i32 %_5, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1816, !DIExpression(), !11045)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !11046
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !11046

bb2.i:                                            ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %_4, i32 %_5, i32 1, ptr align 4 @alloc_e9a73f5e10236bb05d8252efe3519cfd) #17, !dbg !11047
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !11047

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %start, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %_4, i32 %_5, !dbg !11048
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_7 = call i32 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h3b95e211ae59eadbE"(ptr align 4 %self) #17, !dbg !11049
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11050
  %_9 = load i32, ptr %1, align 4, !dbg !11050
  %_10.0 = sub i32 %_7, %_9, !dbg !11051
  %_10.1 = icmp ult i32 %_7, %_9, !dbg !11051
  br i1 %_10.1, label %panic, label %bb4, !dbg !11051

bb4:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
; call core::slice::raw::from_raw_parts_mut
  %2 = call { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17h52107d0139937d65E(ptr %_0.i, i32 %_10.0, ptr align 4 @alloc_babe9aa630765810a897f737ce34cf5c) #17, !dbg !11052
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11052
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11052
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11053
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !11053
  ret { ptr, i32 } %4, !dbg !11053

panic:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_67f272f0c662a44cbebb1612002c4cec) #18, !dbg !11051
  unreachable, !dbg !11051
}

; alloc::vec::Vec<T,A>::len
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %self) unnamed_addr #2 !dbg !11054 {
start:
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11059, !DIExpression(), !11062)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11063
  %len = load i32, ptr %0, align 4, !dbg !11063
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !11063
    #dbg_declare(ptr %len.dbg.spill, !11060, !DIExpression(), !11064)
  %_2 = icmp ule i32 %len, 2147483647, !dbg !11065
  ret i32 %len, !dbg !11066
}

; alloc::vec::Vec<T,A>::pop
; Function Attrs: inlinehint nounwind
define dso_local { i1, i8 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h35b0868d37c3c7f2E"(ptr align 4 %self) unnamed_addr #2 !dbg !11067 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [2 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11072, !DIExpression(), !11073)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11074
  %_2 = load i32, ptr %0, align 4, !dbg !11074
  %1 = icmp eq i32 %_2, 0, !dbg !11074
  br i1 %1, label %bb1, label %bb2, !dbg !11074

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !11075
  br label %bb10, !dbg !11076

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11077
  %3 = load i32, ptr %2, align 4, !dbg !11077
  %_3.0 = sub i32 %3, 1, !dbg !11077
  %_3.1 = icmp ult i32 %3, 1, !dbg !11077
  br i1 %_3.1, label %panic, label %bb3, !dbg !11077

bb10:                                             ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", %bb1
  %4 = load i8, ptr %_0, align 1, !dbg !11078
  %5 = trunc nuw i8 %4 to i1, !dbg !11078
  %6 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11078
  %7 = load i8, ptr %6, align 1, !dbg !11078
  %8 = insertvalue { i1, i8 } poison, i1 %5, 0, !dbg !11078
  %9 = insertvalue { i1, i8 } %8, i8 %7, 1, !dbg !11078
  ret { i1, i8 } %9, !dbg !11078

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11077
  store i32 %_3.0, ptr %10, align 4, !dbg !11077
  %11 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11079
  %_6 = load i32, ptr %11, align 4, !dbg !11079
; call alloc::vec::Vec<T,A>::capacity
  %_7 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hb1ab5c7920d048deE"(ptr align 4 %self) #17, !dbg !11080
  %_5 = icmp ult i32 %_6, %_7, !dbg !11079
  %12 = zext i1 %_5 to i8
  store i8 %12, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !11081, !DIExpression(), !11084)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !11086
  br i1 %_2.i, label %bb2.i1, label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !11086

bb2.i1:                                           ; preds = %bb3
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %_5, ptr align 4 @alloc_514c4533805056f68c72b09388c55afd) #17, !dbg !11088
  br label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !11088

_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit: ; preds = %bb3, %bb2.i1
; call alloc::vec::Vec<T,A>::as_ptr
  %_11 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h05f13e46615c6203E"(ptr align 4 %self) #17, !dbg !11089
; call alloc::vec::Vec<T,A>::len
  %_13 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %self) #17, !dbg !11090
  store ptr %_11, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1789, !DIExpression(), !11091)
  store i32 %_13, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1797, !DIExpression(), !11093)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !11094
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !11094

bb2.i:                                            ; preds = %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h165b117dcf9af246E"(ptr %_11, i32 %_13, i32 1, ptr align 4 @alloc_2863d98c5b047020c6884fa6673ef81c) #17, !dbg !11095
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !11095

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit": ; preds = %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %_11, i32 %_13, !dbg !11096
; call core::ptr::read
  %_9 = call i8 @_ZN4core3ptr4read17h55792a7124c9f053E(ptr %_0.i, ptr align 4 @alloc_20ea928a13eb1d8aa010bbbc483bd70c) #17, !dbg !11097
  %13 = getelementptr inbounds i8, ptr %_0, i32 1, !dbg !11098
  store i8 %_9, ptr %13, align 1, !dbg !11098
  store i8 1, ptr %_0, align 1, !dbg !11098
  br label %bb10, !dbg !11076

panic:                                            ; preds = %bb2
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_9e87c75a97c4dd2280f18449e0bf5109) #18, !dbg !11077
  unreachable, !dbg !11077
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hc841b239736e971bE"(ptr align 4 %self, i8 %value) unnamed_addr #2 !dbg !11099 {
start:
  %value.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11104, !DIExpression(), !11106)
  store i8 %value, ptr %value.dbg.spill, align 1
    #dbg_declare(ptr %value.dbg.spill, !11105, !DIExpression(), !11107)
; call alloc::vec::Vec<T,A>::push_mut
  %_3 = call align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8push_mut17h1d4f7bfb507a72c0E"(ptr align 4 %self, i8 %value) #17, !dbg !11108
  ret void, !dbg !11109
}

; alloc::vec::Vec<T,A>::clear
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h48061e4466c7faf2E"(ptr align 4 %self) unnamed_addr #2 !dbg !11110 {
start:
  %elems.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11113, !DIExpression(), !11116)
; call alloc::vec::Vec<T,A>::as_mut_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h72bca9be0aef2792E"(ptr align 4 %self) #17, !dbg !11117
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !11117
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !11117
  store ptr %_3.0, ptr %elems.dbg.spill, align 4, !dbg !11118
  %1 = getelementptr inbounds i8, ptr %elems.dbg.spill, i32 4, !dbg !11118
  store i32 %_3.1, ptr %1, align 4, !dbg !11118
    #dbg_declare(ptr %elems.dbg.spill, !11114, !DIExpression(), !11119)
  %2 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11120
  store i32 0, ptr %2, align 4, !dbg !11120
  ret void, !dbg !11121
}

; alloc::vec::Vec<T,A>::drain
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17ha53cb2c886e1fc3fE"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %self, i32 %range.0, i32 %range.1) unnamed_addr #1 !dbg !11122 {
start:
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %range_slice.dbg.spill = alloca [8 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %start.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %range.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11128, !DIExpression(), !11137)
  store i32 %range.0, ptr %range.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %range.dbg.spill, i32 4
  store i32 %range.1, ptr %0, align 4
    #dbg_declare(ptr %range.dbg.spill, !11129, !DIExpression(), !11138)
; call alloc::vec::Vec<T,A>::len
  %len = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %self) #17, !dbg !11139
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !11139
    #dbg_declare(ptr %len.dbg.spill, !11130, !DIExpression(), !11140)
; call core::slice::index::range
  %1 = call { i32, i32 } @_ZN4core5slice5index5range17h9654c3e01792ff9dE(i32 %range.0, i32 %range.1, i32 %len, ptr align 4 @alloc_1d71947b654bf1b94ec960579a124296) #17, !dbg !11141
  %_7.0 = extractvalue { i32, i32 } %1, 0, !dbg !11141
  %_7.1 = extractvalue { i32, i32 } %1, 1, !dbg !11141
  store i32 %_7.0, ptr %start.dbg.spill, align 4, !dbg !11142
    #dbg_declare(ptr %start.dbg.spill, !11132, !DIExpression(), !11143)
  store i32 %_7.1, ptr %end.dbg.spill, align 4, !dbg !11144
    #dbg_declare(ptr %end.dbg.spill, !11134, !DIExpression(), !11145)
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E"(ptr align 4 %self, i32 %_7.0) #17, !dbg !11146
; call alloc::vec::Vec<T,A>::as_ptr
  %_12 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h05f13e46615c6203E"(ptr align 4 %self) #17, !dbg !11147
  store ptr %_12, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1789, !DIExpression(), !11148)
  store i32 %_7.0, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1797, !DIExpression(), !11150)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !11151
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !11151

bb2.i:                                            ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::add::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h165b117dcf9af246E"(ptr %_12, i32 %_7.0, i32 1, ptr align 4 @alloc_bf0b6ac61ef597ae829a4390209d800f) #17, !dbg !11152
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit", !dbg !11152

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit": ; preds = %start, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %_12, i32 %_7.0, !dbg !11153
  %_15.0 = sub i32 %_7.1, %_7.0, !dbg !11154
  %_15.1 = icmp ult i32 %_7.1, %_7.0, !dbg !11154
  br i1 %_15.1, label %panic, label %bb6, !dbg !11154

bb6:                                              ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit"
; call core::slice::raw::from_raw_parts
  %2 = call { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17h8506f20c0934200fE(ptr %_0.i, i32 %_15.0, ptr align 4 @alloc_035f9d148a7a01b751fc868f84e6c91f) #17, !dbg !11155
  %range_slice.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11155
  %range_slice.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11155
  store ptr %range_slice.0, ptr %range_slice.dbg.spill, align 4, !dbg !11155
  %3 = getelementptr inbounds i8, ptr %range_slice.dbg.spill, i32 4, !dbg !11155
  store i32 %range_slice.1, ptr %3, align 4, !dbg !11155
    #dbg_declare(ptr %range_slice.dbg.spill, !11135, !DIExpression(), !11156)
  %_17.0 = sub i32 %len, %_7.1, !dbg !11157
  %_17.1 = icmp ult i32 %len, %_7.1, !dbg !11157
  br i1 %_17.1, label %panic1, label %bb8, !dbg !11157

panic:                                            ; preds = %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E.exit"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_66caa2a4c985b4ca87eb2903360ec7dc) #18, !dbg !11154
  unreachable, !dbg !11154

bb8:                                              ; preds = %bb6
; call core::slice::<impl [T]>::iter
  %4 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1 %range_slice.0, i32 %range_slice.1) #17, !dbg !11158
  %_18.0 = extractvalue { ptr, ptr } %4, 0, !dbg !11158
  %_18.1 = extractvalue { ptr, ptr } %4, 1, !dbg !11158
; call <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
  %_19 = call ptr @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h7acb551dcbbe105aE"(ptr align 4 %self) #17, !dbg !11159
  %5 = getelementptr inbounds i8, ptr %_0, i32 12, !dbg !11160
  store i32 %_7.1, ptr %5, align 4, !dbg !11160
  %6 = getelementptr inbounds i8, ptr %_0, i32 16, !dbg !11160
  store i32 %_17.0, ptr %6, align 4, !dbg !11160
  store ptr %_18.0, ptr %_0, align 4, !dbg !11160
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11160
  store ptr %_18.1, ptr %7, align 4, !dbg !11160
  %8 = getelementptr inbounds i8, ptr %_0, i32 8, !dbg !11160
  store ptr %_19, ptr %8, align 4, !dbg !11160
  ret void, !dbg !11161

panic1:                                           ; preds = %bb6
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_30c7cfa087dda64e85e2d07c2118a35f) #18, !dbg !11157
  unreachable, !dbg !11157
}

; alloc::vec::Vec<T,A>::as_ptr
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h05f13e46615c6203E"(ptr align 4 %self) unnamed_addr #2 !dbg !11162 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11167, !DIExpression(), !11168)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_2 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h270e5ed45b1e0b2eE"(ptr align 4 %self) #17, !dbg !11169
  ret ptr %_2, !dbg !11170
}

; alloc::vec::Vec<T,A>::remove::assert_failed
; Function Attrs: cold minsize noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17hb7a76f866e2f7e16E"(i32 %0, i32 %1, ptr align 4 %2) unnamed_addr #6 !dbg !11171 {
start:
  %args.dbg.spill = alloca [8 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %args = alloca [16 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  %len = alloca [4 x i8], align 4
  %index = alloca [4 x i8], align 4
  store i32 %0, ptr %index, align 4
  store i32 %1, ptr %len, align 4
    #dbg_declare(ptr %index, !11174, !DIExpression(), !11182)
    #dbg_declare(ptr %len, !11175, !DIExpression(), !11183)
    #dbg_declare(ptr %args, !11179, !DIExpression(), !11184)
  store ptr %index, ptr %args.dbg.spill, align 4, !dbg !11185
  %3 = getelementptr inbounds i8, ptr %args.dbg.spill, i32 4, !dbg !11185
  store ptr %len, ptr %3, align 4, !dbg !11185
    #dbg_declare(ptr %args.dbg.spill, !11176, !DIExpression(), !11186)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %index) #17, !dbg !11186
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_10, ptr align 4 %len) #17, !dbg !11186
  %4 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !11186
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %4, ptr align 4 %_9, i32 8, i1 false), !dbg !11186
  %5 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 1, !dbg !11186
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %5, ptr align 4 %_10, i32 8, i1 false), !dbg !11186
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hc865914cb945b354E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 @alloc_93081500eef5d83dc2e7ee77b1137713, ptr align 4 %args) #17, !dbg !11184
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_4, ptr align 4 %2) #18, !dbg !11185
  unreachable, !dbg !11185
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1dfb094011f11624E"(ptr align 4 %self, i32 %additional) unnamed_addr #1 !dbg !11187 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11190, !DIExpression(), !11192)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !11191, !DIExpression(), !11193)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11194
  %_5 = load i32, ptr %0, align 4, !dbg !11194
; call alloc::raw_vec::RawVec<T,A>::reserve
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h95700aedeb7f36a4E"(ptr align 4 %self, i32 %_5, i32 %additional) #17, !dbg !11195
  ret void, !dbg !11196
}

; alloc::vec::Vec<T,A>::set_len
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E"(ptr align 4 %self, i32 %new_len) unnamed_addr #2 !dbg !11197 {
start:
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11200, !DIExpression(), !11202)
  store i32 %new_len, ptr %new_len.dbg.spill, align 4
    #dbg_declare(ptr %new_len.dbg.spill, !11201, !DIExpression(), !11203)
  br label %bb1, !dbg !11204

bb1:                                              ; preds = %start
; call alloc::vec::Vec<T,A>::capacity
  %_5 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hb1ab5c7920d048deE"(ptr align 4 %self) #17, !dbg !11205
; call alloc::vec::Vec<T,A>::set_len::precondition_check
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len18precondition_check17hb34a41dcb8712f37E"(i32 %new_len, i32 %_5, ptr align 4 @alloc_a9defe2f9f26c8fba4a45c86a5565734) #17, !dbg !11204
  br label %bb3, !dbg !11204

bb3:                                              ; preds = %bb1
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11206
  store i32 %new_len, ptr %0, align 4, !dbg !11206
  ret void, !dbg !11207
}

; alloc::vec::Vec<T,A>::set_len::precondition_check
; Function Attrs: inlinehint nounwind
define internal void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len18precondition_check17hb34a41dcb8712f37E"(i32 %new_len, i32 %capacity, ptr align 4 %0) unnamed_addr #2 !dbg !11208 {
start:
  %msg.dbg.spill = alloca [8 x i8], align 4
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  store i32 %new_len, ptr %new_len.dbg.spill, align 4
    #dbg_declare(ptr %new_len.dbg.spill, !11211, !DIExpression(), !11215)
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !11212, !DIExpression(), !11215)
  store ptr @alloc_57d70e9d94c65ecfc15225d29a5ed72b, ptr %msg.dbg.spill, align 4, !dbg !11216
  %1 = getelementptr inbounds i8, ptr %msg.dbg.spill, i32 4, !dbg !11216
  store i32 198, ptr %1, align 4, !dbg !11216
    #dbg_declare(ptr %msg.dbg.spill, !11213, !DIExpression(), !11216)
  %_3 = icmp ule i32 %new_len, %capacity, !dbg !11217
  br i1 %_3, label %bb1, label %bb2, !dbg !11217

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_7, i32 0, !dbg !11219
  store ptr @alloc_57d70e9d94c65ecfc15225d29a5ed72b, ptr %2, align 4, !dbg !11219
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !11219
  store i32 198, ptr %3, align 4, !dbg !11219
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 %_7) #17, !dbg !11220
; call core::panicking::panic_nounwind_fmt
  call void @_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E(ptr align 4 %_5, i1 zeroext false, ptr align 4 %0) #18, !dbg !11221
  unreachable, !dbg !11221

bb1:                                              ; preds = %start
  ret void, !dbg !11222
}

; alloc::vec::Vec<T,A>::as_slice
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h9aca5a4efbfbef1bE"(ptr align 4 %self) unnamed_addr #2 !dbg !11223 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11228, !DIExpression(), !11229)
; call alloc::vec::Vec<T,A>::as_ptr
  %_2 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h05f13e46615c6203E"(ptr align 4 %self) #17, !dbg !11230
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11231
  %_3 = load i32, ptr %0, align 4, !dbg !11231
; call core::slice::raw::from_raw_parts
  %1 = call { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17h8506f20c0934200fE(ptr %_2, i32 %_3, ptr align 4 @alloc_5db4ff6c4fc059772c09f358802262f7) #17, !dbg !11232
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11232
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11232
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11233
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !11233
  ret { ptr, i32 } %3, !dbg !11233
}

; alloc::vec::Vec<T,A>::capacity
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hb1ab5c7920d048deE"(ptr align 4 %self) unnamed_addr #2 !dbg !11234 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11237, !DIExpression(), !11238)
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_0 = call i32 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h3b95e211ae59eadbE"(ptr align 4 %self) #17, !dbg !11239
  ret i32 %_0, !dbg !11240
}

; alloc::vec::Vec<T,A>::push_mut
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8push_mut17h1d4f7bfb507a72c0E"(ptr align 4 %self, i8 %value) unnamed_addr #2 !dbg !11241 {
start:
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %value.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11247, !DIExpression(), !11253)
  store i8 %value, ptr %value.dbg.spill, align 1
    #dbg_declare(ptr %value.dbg.spill, !11248, !DIExpression(), !11254)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11255
  %len = load i32, ptr %0, align 4, !dbg !11255
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !11255
    #dbg_declare(ptr %len.dbg.spill, !11249, !DIExpression(), !11256)
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_5 = call i32 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h3b95e211ae59eadbE"(ptr align 4 %self) #17, !dbg !11257
  %_4 = icmp eq i32 %len, %_5, !dbg !11258
  br i1 %_4, label %bb2, label %bb3, !dbg !11258

bb3:                                              ; preds = %bb2, %start
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %self) #17, !dbg !11259
  store ptr %_10, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1808, !DIExpression(), !11260)
  store i32 %len, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1816, !DIExpression(), !11262)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !11263
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !11263

bb2.i:                                            ; preds = %bb3
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %_10, i32 %len, i32 1, ptr align 4 @alloc_5d0f037c86eb8bf21fa01b1073783172) #17, !dbg !11264
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !11264

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %bb3, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %_10, i32 %len, !dbg !11265
  store ptr %_0.i, ptr %end.dbg.spill, align 4, !dbg !11266
    #dbg_declare(ptr %end.dbg.spill, !11251, !DIExpression(), !11267)
; call core::ptr::write
  call void @_ZN4core3ptr5write17hbcf903752b270816E(ptr %_0.i, i8 %value, ptr align 4 @alloc_7c167cc8dbd2de7d53b557130f9b224d) #17, !dbg !11268
  %_12.0 = add i32 %len, 1, !dbg !11269
  %_12.1 = icmp ult i32 %_12.0, %len, !dbg !11269
  br i1 %_12.1, label %panic, label %bb7, !dbg !11269

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVec<T,A>::grow_one
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hff492d12cb2c26b4E"(ptr align 4 %self) #17, !dbg !11270
  br label %bb3, !dbg !11270

bb7:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !11271
  store i32 %_12.0, ptr %1, align 4, !dbg !11271
  ret ptr %_0.i, !dbg !11272

panic:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_fdf9e28585bd9798eb77e72742907e14) #18, !dbg !11269
  unreachable, !dbg !11269
}

; alloc::vec::Vec<T,A>::allocator
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hcc761d55e3a5cf15E"(ptr align 4 %self) unnamed_addr #2 !dbg !11273 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11278, !DIExpression(), !11279)
; call alloc::raw_vec::RawVec<T,A>::allocator
  %_0 = call align 1 ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h17b3fc1aaad8adddE"(ptr align 4 %self) #17, !dbg !11280
  ret ptr %_0, !dbg !11281
}

; alloc::vec::Vec<T,A>::split_off::assert_failed
; Function Attrs: cold minsize noreturn nounwind optsize
define dso_local void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9split_off13assert_failed17h1516409d2224b70fE"(i32 %0, i32 %1, ptr align 4 %2) unnamed_addr #6 !dbg !11282 {
start:
  %args.dbg.spill = alloca [8 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %args = alloca [16 x i8], align 4
  %_4 = alloca [24 x i8], align 4
  %len = alloca [4 x i8], align 4
  %at = alloca [4 x i8], align 4
  store i32 %0, ptr %at, align 4
  store i32 %1, ptr %len, align 4
    #dbg_declare(ptr %at, !11285, !DIExpression(), !11293)
    #dbg_declare(ptr %len, !11286, !DIExpression(), !11294)
    #dbg_declare(ptr %args, !11290, !DIExpression(), !11295)
  store ptr %at, ptr %args.dbg.spill, align 4, !dbg !11296
  %3 = getelementptr inbounds i8, ptr %args.dbg.spill, i32 4, !dbg !11296
  store ptr %len, ptr %3, align 4, !dbg !11296
    #dbg_declare(ptr %args.dbg.spill, !11287, !DIExpression(), !11297)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %at) #17, !dbg !11297
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_10, ptr align 4 %len) #17, !dbg !11297
  %4 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !11297
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %4, ptr align 4 %_9, i32 8, i1 false), !dbg !11297
  %5 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 1, !dbg !11297
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %5, ptr align 4 %_10, i32 8, i1 false), !dbg !11297
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hc865914cb945b354E"(ptr sret([24 x i8]) align 4 %_4, ptr align 4 @alloc_5a75699d3c1a02296480c06ab0fe9179, ptr align 4 %args) #17, !dbg !11295
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_4, ptr align 4 %2) #18, !dbg !11296
  unreachable, !dbg !11296
}

; alloc::vec::into_iter::IntoIter<T,A>::as_slice
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17h923844f361fd15ffE"(ptr align 4 %self) unnamed_addr #1 !dbg !11298 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11303, !DIExpression(), !11304)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !11305
  %_4 = load ptr, ptr %0, align 4, !dbg !11305
  store ptr %_4, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4329, !DIExpression(), !11306)
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %_5 = call i32 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hf72db64fc94ef7e9E(ptr align 4 %self) #17, !dbg !11308
; call core::slice::raw::from_raw_parts
  %1 = call { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17h8506f20c0934200fE(ptr %_4, i32 %_5, ptr align 4 @alloc_3fba6c1144e2d174136bfeea57d0ab10) #17, !dbg !11309
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11309
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11309
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11310
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !11310
  ret { ptr, i32 } %3, !dbg !11310
}

; alloc::sync::data_offset
; Function Attrs: nounwind
define dso_local i32 @_ZN5alloc4sync11data_offset17h9415375490ac633dE(ptr %ptr.0, i32 %ptr.1) unnamed_addr #1 !dbg !11311 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11313, !DIExpression(), !11314)
; call core::mem::align_of_val_raw
  %_2 = call i32 @_ZN4core3mem16align_of_val_raw17h2a204d6bcc5fa0a3E(ptr %ptr.0, i32 %ptr.1) #17, !dbg !11315
; call alloc::sync::data_offset_align
  %_0 = call i32 @_ZN5alloc4sync17data_offset_align17hd46190c9c428fc67E(i32 %_2) #17, !dbg !11316
  ret i32 %_0, !dbg !11317
}

; alloc::sync::Arc<T>::allocate_for_layout
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$19allocate_for_layout17h890562bbce1b1ee8E"(i32 %value_layout.0, i32 %value_layout.1, ptr align 4 %mem_to_arcinner) unnamed_addr #1 !dbg !11318 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %mem_to_arcinner.dbg.spill = alloca [4 x i8], align 4
  %allocate.dbg.spill = alloca [0 x i8], align 1
  %value_layout.dbg.spill = alloca [8 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %value_layout.0, ptr %value_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %value_layout.dbg.spill, i32 4
  store i32 %value_layout.1, ptr %0, align 4
    #dbg_declare(ptr %value_layout.dbg.spill, !11338, !DIExpression(), !11345)
    #dbg_declare(ptr %allocate.dbg.spill, !11339, !DIExpression(), !11346)
  store ptr %mem_to_arcinner, ptr %mem_to_arcinner.dbg.spill, align 4
    #dbg_declare(ptr %mem_to_arcinner.dbg.spill, !11340, !DIExpression(), !11347)
    #dbg_declare(ptr %layout, !11341, !DIExpression(), !11348)
; call alloc::sync::arcinner_layout_for_value_layout
  %1 = call { i32, i32 } @_ZN5alloc4sync32arcinner_layout_for_value_layout17h6dbf0a4dd8fecdcaE(i32 %value_layout.0, i32 %value_layout.1) #17, !dbg !11349
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11349
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !11349
  store i32 %2, ptr %layout, align 4, !dbg !11349
  %4 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !11349
  store i32 %3, ptr %4, align 4, !dbg !11349
  %_7.0 = load i32, ptr %layout, align 4, !dbg !11350
  %5 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !11350
  %_7.1 = load i32, ptr %5, align 4, !dbg !11350
; call alloc::sync::Arc<[T]>::allocate_for_slice::{{closure}}
  %6 = call { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h8cd9adf16b4b5178E"(i32 %_7.0, i32 %_7.1) #17, !dbg !11350
  %_6.0 = extractvalue { ptr, i32 } %6, 0, !dbg !11350
  %_6.1 = extractvalue { ptr, i32 } %6, 1, !dbg !11350
; call core::result::Result<T,E>::unwrap_or_else
  %7 = call { ptr, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17he0e8bd1bfc76508bE"(ptr %_6.0, i32 %_6.1, ptr align 4 %layout, ptr align 4 @alloc_ff65de5aea8ad234bb70451d09078a62) #17, !dbg !11351
  %ptr.0 = extractvalue { ptr, i32 } %7, 0, !dbg !11351
  %ptr.1 = extractvalue { ptr, i32 } %7, 1, !dbg !11351
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !11351
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !11351
  store i32 %ptr.1, ptr %8, align 4, !dbg !11351
    #dbg_declare(ptr %ptr.dbg.spill, !11343, !DIExpression(), !11352)
  %9 = load i32, ptr %layout, align 4, !dbg !11353
  %10 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !11353
  %11 = load i32, ptr %10, align 4, !dbg !11353
; call alloc::sync::Arc<T>::initialize_arcinner
  %12 = call { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$19initialize_arcinner17h2035784ea8eb4865E"(ptr %ptr.0, i32 %ptr.1, i32 %9, i32 %11, ptr align 4 %mem_to_arcinner) #17, !dbg !11353
  %_0.0 = extractvalue { ptr, i32 } %12, 0, !dbg !11353
  %_0.1 = extractvalue { ptr, i32 } %12, 1, !dbg !11353
  %13 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11354
  %14 = insertvalue { ptr, i32 } %13, i32 %_0.1, 1, !dbg !11354
  ret { ptr, i32 } %14, !dbg !11354
}

; alloc::sync::Arc<T>::allocate_for_layout::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$19allocate_for_layout28_$u7b$$u7b$closure$u7d$$u7d$17h132db41e10edc885E"(ptr align 4 %_1) unnamed_addr #2 !dbg !11355 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !11359, !DIExpression(DW_OP_deref), !11361)
    #dbg_declare(ptr %_2.dbg.spill, !11360, !DIExpression(), !11362)
  %_4.0 = load i32, ptr %_1, align 4, !dbg !11363
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !11363
  %_4.1 = load i32, ptr %0, align 4, !dbg !11363
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h1e5cf49dcf30c6c7E(i32 %_4.0, i32 %_4.1) #18, !dbg !11364
  unreachable, !dbg !11364
}

; alloc::sync::Arc<T>::initialize_arcinner
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$19initialize_arcinner17h2035784ea8eb4865E"(ptr %ptr.0, i32 %ptr.1, i32 %0, i32 %1, ptr align 4 %mem_to_arcinner) unnamed_addr #1 !dbg !11365 {
start:
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %3 = alloca [4 x i8], align 4
  %val.i2 = alloca [4 x i8], align 4
  %4 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %5 = alloca [4 x i8], align 4
  %val.i = alloca [4 x i8], align 4
  %6 = alloca [4 x i8], align 4
  %7 = alloca [4 x i8], align 4
  %8 = alloca [4 x i8], align 4
  %9 = alloca [4 x i8], align 4
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right_val.dbg.spill = alloca [4 x i8], align 4
  %left_val.dbg.spill = alloca [4 x i8], align 4
  %inner.dbg.spill = alloca [8 x i8], align 4
  %mem_to_arcinner.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 4
  %_20 = alloca [4 x i8], align 4
  %_17 = alloca [24 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %0, ptr %layout, align 4
  %10 = getelementptr inbounds i8, ptr %layout, i32 4
  store i32 %1, ptr %10, align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %11 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %11, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11371, !DIExpression(), !11383)
    #dbg_declare(ptr %layout, !11372, !DIExpression(), !11384)
  store ptr %mem_to_arcinner, ptr %mem_to_arcinner.dbg.spill, align 4
    #dbg_declare(ptr %mem_to_arcinner.dbg.spill, !11373, !DIExpression(), !11385)
; call core::ptr::non_null::NonNull<[T]>::as_non_null_ptr
  %_6 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2f422c653439189dE"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !11386
  store ptr %_6, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !4329, !DIExpression(), !11387)
; call alloc::sync::Arc<[T]>::allocate_for_slice::{{closure}}
  %12 = call { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17hf9a40612878757aaE"(ptr align 4 %mem_to_arcinner, ptr %_6) #17, !dbg !11389
  %inner.0 = extractvalue { ptr, i32 } %12, 0, !dbg !11389
  %inner.1 = extractvalue { ptr, i32 } %12, 1, !dbg !11389
  store ptr %inner.0, ptr %inner.dbg.spill, align 4, !dbg !11389
  %13 = getelementptr inbounds i8, ptr %inner.dbg.spill, i32 4, !dbg !11389
  store i32 %inner.1, ptr %13, align 4, !dbg !11389
    #dbg_declare(ptr %inner.dbg.spill, !11374, !DIExpression(), !11390)
; call core::alloc::layout::Layout::for_value_raw
  %14 = call { i32, i32 } @_ZN4core5alloc6layout6Layout13for_value_raw17h24b292b48d264a7cE(ptr %inner.0, i32 %inner.1) #17, !dbg !11391
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !11391
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !11391
  store i32 %15, ptr %_9, align 4, !dbg !11391
  %17 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !11391
  store i32 %16, ptr %17, align 4, !dbg !11391
  store ptr %_9, ptr %left_val.dbg.spill, align 4, !dbg !11392
    #dbg_declare(ptr %left_val.dbg.spill, !11376, !DIExpression(), !11393)
  store ptr %layout, ptr %right_val.dbg.spill, align 4, !dbg !11392
    #dbg_declare(ptr %right_val.dbg.spill, !11379, !DIExpression(), !11393)
; call <core::alloc::layout::Layout as core::cmp::PartialEq>::eq
  %_14 = call zeroext i1 @"_ZN68_$LT$core..alloc..layout..Layout$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0e3def2e6f7d49aE"(ptr align 4 %_9, ptr align 4 %layout) #17, !dbg !11393
  br i1 %_14, label %bb7, label %bb6, !dbg !11393

bb6:                                              ; preds = %start
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !11393
    #dbg_declare(ptr %kind.dbg.spill, !11380, !DIExpression(), !11394)
  store ptr null, ptr %_17, align 4, !dbg !11394
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hf2b3c7a53ef8be1eE(i8 0, ptr align 4 %_9, ptr align 4 %layout, ptr align 4 %_17, ptr align 4 @alloc_33a5fa23c89f2fdda7a91a041e13d6be) #18, !dbg !11394
  unreachable, !dbg !11394

bb7:                                              ; preds = %start
; call core::sync::atomic::AtomicUsize::new
  %18 = call i32 @_ZN4core4sync6atomic11AtomicUsize3new17h516593380012ce35E(i32 1) #17, !dbg !11395
  store i32 %18, ptr %9, align 4, !dbg !11395
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_20, ptr align 4 %9, i32 4, i1 false), !dbg !11395
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %8, ptr align 4 %_20, i32 4, i1 false), !dbg !11396
  %19 = load i32, ptr %8, align 4, !dbg !11396
  store i32 %19, ptr %3, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %val.i2, ptr align 4 %3, i32 4, i1 false)
  store ptr %inner.0, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !11397, !DIExpression(), !11401)
    #dbg_declare(ptr %val.i2, !11400, !DIExpression(), !11403)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %2, ptr align 4 %val.i2, i32 4, i1 false), !dbg !11404
  %20 = load i32, ptr %2, align 4, !dbg !11404
; call core::ptr::write
  call void @_ZN4core3ptr5write17hfa22795ed418023fE(ptr %inner.0, i32 %20, ptr align 4 @alloc_0cd1959e984c71bf81b616e1381d1df2) #17, !dbg !11404
  %_22 = getelementptr inbounds i8, ptr %inner.0, i32 4, !dbg !11405
; call core::sync::atomic::AtomicUsize::new
  %21 = call i32 @_ZN4core4sync6atomic11AtomicUsize3new17h516593380012ce35E(i32 1) #17, !dbg !11406
  store i32 %21, ptr %7, align 4, !dbg !11406
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_23, ptr align 4 %7, i32 4, i1 false), !dbg !11406
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %6, ptr align 4 %_23, i32 4, i1 false), !dbg !11405
  %22 = load i32, ptr %6, align 4, !dbg !11405
  store i32 %22, ptr %5, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %val.i, ptr align 4 %5, i32 4, i1 false)
  store ptr %_22, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !11397, !DIExpression(), !11407)
    #dbg_declare(ptr %val.i, !11400, !DIExpression(), !11409)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %4, ptr align 4 %val.i, i32 4, i1 false), !dbg !11410
  %23 = load i32, ptr %4, align 4, !dbg !11410
; call core::ptr::write
  call void @_ZN4core3ptr5write17hfa22795ed418023fE(ptr %_22, i32 %23, ptr align 4 @alloc_ec2f562d2bfe097a14c5136f0b40877d) #17, !dbg !11410
  %24 = insertvalue { ptr, i32 } poison, ptr %inner.0, 0, !dbg !11411
  %25 = insertvalue { ptr, i32 } %24, i32 %inner.1, 1, !dbg !11411
  ret { ptr, i32 } %25, !dbg !11411
}

; alloc::sync::Arc<T>::from_ptr
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$8from_ptr17hf1f749b652109d73E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #1 !dbg !11412 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11417, !DIExpression(), !11418)
; call alloc::sync::Arc<T,A>::from_ptr_in
  %1 = call { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h2c60f532ef6a2c45E"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !11419
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11419
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11419
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11420
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !11420
  ret { ptr, i32 } %3, !dbg !11420
}

; alloc::sync::Arc<T>::from_raw
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$8from_raw17haeb1b77b43f746b8E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !11421 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11432, !DIExpression(), !11433)
; call alloc::sync::Arc<T,A>::from_raw_in
  %1 = call { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_raw_in17h3e2a3a7f8ef49983E"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !11434
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11434
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11434
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11435
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !11435
  ret { ptr, i32 } %3, !dbg !11435
}

; alloc::sync::Arc<T>::into_raw
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$8into_raw17h43858592ae09c3a7E"(ptr %this.0, i32 %this.1) unnamed_addr #1 !dbg !11436 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %this.dbg.spill = alloca [8 x i8], align 4
  %this = alloca [8 x i8], align 4
  store ptr %this.0, ptr %this.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %this.dbg.spill, i32 4
  store i32 %this.1, ptr %0, align 4
    #dbg_declare(ptr %this.dbg.spill, !11441, !DIExpression(), !11449)
    #dbg_declare(ptr %this, !11442, !DIExpression(), !11450)
  store ptr %this.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %this.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !11451, !DIExpression(), !11457)
  %2 = insertvalue { ptr, i32 } poison, ptr %this.0, 0, !dbg !11459
  %3 = insertvalue { ptr, i32 } %2, i32 %this.1, 1, !dbg !11459
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !11460
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !11460
  store ptr %4, ptr %this, align 4, !dbg !11460
  %6 = getelementptr inbounds i8, ptr %this, i32 4, !dbg !11460
  store i32 %5, ptr %6, align 4, !dbg !11460
  store ptr %this, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !11461, !DIExpression(), !11468)
; call alloc::sync::Arc<T,A>::as_ptr
  %7 = call { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$6as_ptr17h4ad520fd4ba446caE"(ptr align 4 %this) #17, !dbg !11470
  %_0.0 = extractvalue { ptr, i32 } %7, 0, !dbg !11470
  %_0.1 = extractvalue { ptr, i32 } %7, 1, !dbg !11470
  %8 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11471
  %9 = insertvalue { ptr, i32 } %8, i32 %_0.1, 1, !dbg !11471
  ret { ptr, i32 } %9, !dbg !11471
}

; alloc::sync::Arc<T,A>::from_ptr_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h2c60f532ef6a2c45E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !11472 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11477, !DIExpression(), !11479)
    #dbg_declare(ptr %alloc.dbg.spill, !11478, !DIExpression(), !11480)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h528a38cc869a3990E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_616fc3f4c1ffd5c10e90514273f11e08) #17, !dbg !11481
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11481
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11481
; call alloc::sync::Arc<T,A>::from_inner_in
  %2 = call { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17he4e15a5cd3c4ab95E"(ptr %_3.0, i32 %_3.1) #17, !dbg !11482
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11482
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11482
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11483
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !11483
  ret { ptr, i32 } %4, !dbg !11483
}

; alloc::sync::Arc<T,A>::from_ptr_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h4b255b8502527d68E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !11484 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11489, !DIExpression(), !11491)
    #dbg_declare(ptr %alloc.dbg.spill, !11490, !DIExpression(), !11492)
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha8dad3f6b4196332E"(ptr %ptr.0, i32 %ptr.1, ptr align 4 @alloc_616fc3f4c1ffd5c10e90514273f11e08) #17, !dbg !11493
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11493
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11493
; call alloc::sync::Arc<T,A>::from_inner_in
  %2 = call { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17h530f39af753c12dbE"(ptr %_3.0, i32 %_3.1) #17, !dbg !11494
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11494
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11494
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11495
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !11495
  ret { ptr, i32 } %4, !dbg !11495
}

; alloc::sync::Arc<T,A>::from_raw_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_raw_in17h3e2a3a7f8ef49983E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !11496 {
start:
  %self.dbg.spill.i1.i = alloca [8 x i8], align 4
  %count.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %_0.i.i = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %arc_ptr.dbg.spill = alloca [8 x i8], align 4
  %offset.dbg.spill = alloca [4 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11501, !DIExpression(), !11507)
    #dbg_declare(ptr %alloc.dbg.spill, !11502, !DIExpression(), !11508)
; call alloc::sync::data_offset
  %offset = call i32 @_ZN5alloc4sync11data_offset17h9415375490ac633dE(ptr %ptr.0, i32 %ptr.1) #17, !dbg !11509
  store i32 %offset, ptr %offset.dbg.spill, align 4, !dbg !11509
    #dbg_declare(ptr %offset.dbg.spill, !11503, !DIExpression(), !11510)
  store ptr %ptr.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %ptr.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9701, !DIExpression(), !11511)
  store i32 %offset, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !9706, !DIExpression(), !11513)
  store ptr %ptr.0, ptr %self.dbg.spill.i1.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i1.i, i32 4
  store i32 %ptr.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i1.i, !9710, !DIExpression(), !11514)
  store ptr %ptr.0, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !9718, !DIExpression(), !11516)
  store i32 %offset, ptr %count.dbg.spill.i.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i.i, !9721, !DIExpression(), !11518)
; call core::ub_checks::check_language_ub
  %_3.i.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !11519
  br i1 %_3.i.i, label %bb2.i.i, label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$8byte_sub17hf465fe39072e60a6E.exit", !dbg !11519

bb2.i.i:                                          ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::sub::precondition_check
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18precondition_check17h8fdae33813982b0eE"(ptr %ptr.0, i32 %offset, i32 1, ptr align 4 @alloc_ef9f84f8ecf7ac4b5a4d795f67b59da5) #17, !dbg !11520
  br label %"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$8byte_sub17hf465fe39072e60a6E.exit", !dbg !11520

"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$8byte_sub17hf465fe39072e60a6E.exit": ; preds = %start, %bb2.i.i
  %_7.i.i = sub nsw i32 0, %offset, !dbg !11521
  %3 = getelementptr inbounds i8, ptr %ptr.0, i32 %_7.i.i, !dbg !11522
  store ptr %3, ptr %_0.i.i, align 4, !dbg !11522
  %4 = load ptr, ptr %_0.i.i, align 4, !dbg !11523
; call core::ptr::const_ptr::<impl *const T>::with_metadata_of
  %5 = call { ptr, i32 } @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h18687fb54e0b84d8E"(ptr %4, ptr %ptr.0, i32 %ptr.1) #17, !dbg !11524
  %_0.0.i = extractvalue { ptr, i32 } %5, 0, !dbg !11524
  %_0.1.i = extractvalue { ptr, i32 } %5, 1, !dbg !11524
  %_5.0 = extractvalue { ptr, i32 } %5, 0, !dbg !11525
  %_5.1 = extractvalue { ptr, i32 } %5, 1, !dbg !11525
  store ptr %_5.0, ptr %arc_ptr.dbg.spill, align 4, !dbg !11526
  %6 = getelementptr inbounds i8, ptr %arc_ptr.dbg.spill, i32 4, !dbg !11526
  store i32 %_5.1, ptr %6, align 4, !dbg !11526
    #dbg_declare(ptr %arc_ptr.dbg.spill, !11505, !DIExpression(), !11527)
; call alloc::sync::Arc<T,A>::from_ptr_in
  %7 = call { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h4b255b8502527d68E"(ptr %_5.0, i32 %_5.1) #17, !dbg !11528
  %_0.0 = extractvalue { ptr, i32 } %7, 0, !dbg !11528
  %_0.1 = extractvalue { ptr, i32 } %7, 1, !dbg !11528
  %8 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11529
  %9 = insertvalue { ptr, i32 } %8, i32 %_0.1, 1, !dbg !11529
  ret { ptr, i32 } %9, !dbg !11529
}

; alloc::sync::Arc<T,A>::from_inner_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17h530f39af753c12dbE"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !11530 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11535, !DIExpression(), !11537)
    #dbg_declare(ptr %alloc.dbg.spill, !11536, !DIExpression(), !11538)
  %1 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !11539
  %2 = insertvalue { ptr, i32 } %1, i32 %ptr.1, 1, !dbg !11539
  ret { ptr, i32 } %2, !dbg !11539
}

; alloc::sync::Arc<T,A>::from_inner_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17he4e15a5cd3c4ab95E"(ptr %ptr.0, i32 %ptr.1) unnamed_addr #2 !dbg !11540 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [8 x i8], align 4
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !11545, !DIExpression(), !11547)
    #dbg_declare(ptr %alloc.dbg.spill, !11546, !DIExpression(), !11548)
  %1 = insertvalue { ptr, i32 } poison, ptr %ptr.0, 0, !dbg !11549
  %2 = insertvalue { ptr, i32 } %1, i32 %ptr.1, 1, !dbg !11549
  ret { ptr, i32 } %2, !dbg !11549
}

; alloc::sync::Arc<T,A>::as_ptr
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync16Arc$LT$T$C$A$GT$6as_ptr17h4ad520fd4ba446caE"(ptr align 4 %this) unnamed_addr #1 !dbg !11550 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %this.dbg.spill = alloca [4 x i8], align 4
  store ptr %this, ptr %this.dbg.spill, align 4
    #dbg_declare(ptr %this.dbg.spill, !11555, !DIExpression(), !11558)
  %_3.0 = load ptr, ptr %this, align 4, !dbg !11559
  %0 = getelementptr inbounds i8, ptr %this, i32 4, !dbg !11559
  %_3.1 = load i32, ptr %0, align 4, !dbg !11559
  store ptr %_3.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_3.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !11560, !DIExpression(), !11566)
  %2 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !11568
  %3 = insertvalue { ptr, i32 } %2, i32 %_3.1, 1, !dbg !11568
  %ptr.0 = extractvalue { ptr, i32 } %3, 0, !dbg !11569
  %ptr.1 = extractvalue { ptr, i32 } %3, 1, !dbg !11569
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !11569
  %4 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !11569
  store i32 %ptr.1, ptr %4, align 4, !dbg !11569
    #dbg_declare(ptr %ptr.dbg.spill, !11556, !DIExpression(), !11570)
  %_4.0 = getelementptr inbounds i8, ptr %ptr.0, i32 8, !dbg !11571
  %5 = insertvalue { ptr, i32 } poison, ptr %_4.0, 0, !dbg !11572
  %6 = insertvalue { ptr, i32 } %5, i32 %ptr.1, 1, !dbg !11572
  ret { ptr, i32 } %6, !dbg !11572
}

; alloc::sync::data_offset_align
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN5alloc4sync17data_offset_align17hd46190c9c428fc67E(i32 %align) unnamed_addr #2 !dbg !11573 {
start:
  %align.dbg.spill = alloca [4 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !11575, !DIExpression(), !11578)
    #dbg_declare(ptr %layout, !11576, !DIExpression(), !11579)
; call core::alloc::layout::Layout::new
  %0 = call { i32, i32 } @_ZN4core5alloc6layout6Layout3new17h9702638446ad85a0E() #17, !dbg !11580
  %1 = extractvalue { i32, i32 } %0, 0, !dbg !11580
  %2 = extractvalue { i32, i32 } %0, 1, !dbg !11580
  store i32 %1, ptr %layout, align 4, !dbg !11580
  %3 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !11580
  store i32 %2, ptr %3, align 4, !dbg !11580
; call core::alloc::layout::Layout::size
  %_3 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !11581
; call core::alloc::layout::Layout::padding_needed_for
  %_5 = call i32 @_ZN4core5alloc6layout6Layout18padding_needed_for17h7c7334a8a9cd85d3E(ptr align 4 %layout, i32 %align) #17, !dbg !11582
  %_7.0 = add i32 %_3, %_5, !dbg !11583
  %_7.1 = icmp ult i32 %_7.0, %_3, !dbg !11583
  br i1 %_7.1, label %panic, label %bb4, !dbg !11583

bb4:                                              ; preds = %start
  ret i32 %_7.0, !dbg !11584

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_d57a0042b59523b866ac3597cd551653) #18, !dbg !11583
  unreachable, !dbg !11583
}

; alloc::sync::Arc<[T]>::copy_from_slice
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$15copy_from_slice17h693720af8eb58578E"(ptr align 1 %v.0, i32 %v.1) unnamed_addr #1 !dbg !11585 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !11590, !DIExpression(), !11593)
; call alloc::sync::Arc<[T]>::allocate_for_slice
  %1 = call { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h549bd140e82d1cafE"(i32 %v.1) #17, !dbg !11594
  %ptr.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11594
  %ptr.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11594
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !11594
  %2 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !11594
  store i32 %ptr.1, ptr %2, align 4, !dbg !11594
    #dbg_declare(ptr %ptr.dbg.spill, !11591, !DIExpression(), !11595)
  store ptr %v.0, ptr %self.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %v.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !447, !DIExpression(), !11596)
  %_7.0 = getelementptr inbounds i8, ptr %ptr.0, i32 8, !dbg !11598
  store ptr %v.0, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !458, !DIExpression(), !11599)
  store ptr %_7.0, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !465, !DIExpression(), !11601)
  store i32 %v.1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !466, !DIExpression(), !11602)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !11603
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !11603

bb2.i:                                            ; preds = %start
; call core::ptr::copy_nonoverlapping::precondition_check
  call void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %v.0, ptr %_7.0, i32 1, i32 1, i32 %v.1, ptr align 4 @alloc_15a52d1a884c78a5de92a2463d39823d) #17, !dbg !11604
  br label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !11604

_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit: ; preds = %start, %bb2.i
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_7.0, ptr align 1 %v.0, i32 %v.1, i1 false), !dbg !11605
; call alloc::sync::Arc<T>::from_ptr
  %4 = call { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$8from_ptr17hf1f749b652109d73E"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !11606
  %_0.0 = extractvalue { ptr, i32 } %4, 0, !dbg !11606
  %_0.1 = extractvalue { ptr, i32 } %4, 1, !dbg !11606
  %5 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11607
  %6 = insertvalue { ptr, i32 } %5, i32 %_0.1, 1, !dbg !11607
  ret { ptr, i32 } %6, !dbg !11607
}

; alloc::sync::Arc<[T]>::allocate_for_slice
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h549bd140e82d1cafE"(i32 %0) unnamed_addr #1 !dbg !11608 {
start:
  %t.dbg.spill.i = alloca [8 x i8], align 4
  %e.i = alloca [0 x i8], align 1
  %self.i = alloca [8 x i8], align 4
  %len = alloca [4 x i8], align 4
  store i32 %0, ptr %len, align 4
    #dbg_declare(ptr %len, !11613, !DIExpression(), !11614)
  %1 = load i32, ptr %len, align 4, !dbg !11615
; call core::alloc::layout::Layout::array
  %2 = call { i32, i32 } @_ZN4core5alloc6layout6Layout5array17hbb3a65fd97d1bfd1E(i32 %1) #17, !dbg !11615
  %_3.0 = extractvalue { i32, i32 } %2, 0, !dbg !11615
  %_3.1 = extractvalue { i32, i32 } %2, 1, !dbg !11615
  store i32 %_3.0, ptr %self.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.i, i32 4
  store i32 %_3.1, ptr %3, align 4
    #dbg_declare(ptr %self.i, !9825, !DIExpression(), !11616)
    #dbg_declare(ptr %e.i, !9833, !DIExpression(), !11618)
  %4 = load i32, ptr %self.i, align 4, !dbg !11619
  %5 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !11619
  %6 = load i32, ptr %5, align 4, !dbg !11619
  %7 = icmp eq i32 %4, 0, !dbg !11619
  %_2.i = select i1 %7, i32 1, i32 0, !dbg !11619
  %8 = trunc nuw i32 %_2.i to i1, !dbg !11620
  br i1 %8, label %bb2.i, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h37b0cdb4594bde65E.exit", !dbg !11620

bb2.i:                                            ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17hbf072231b1fad67dE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i32 43, ptr align 1 %e.i, ptr align 4 @alloc_02b85bf94bdbe0c6db97958dbfdc3815) #18, !dbg !11621
  unreachable, !dbg !11621

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h37b0cdb4594bde65E.exit": ; preds = %start
  %t.0.i = load i32, ptr %self.i, align 4, !dbg !11622
  %9 = getelementptr inbounds i8, ptr %self.i, i32 4, !dbg !11622
  %t.1.i = load i32, ptr %9, align 4, !dbg !11622
  store i32 %t.0.i, ptr %t.dbg.spill.i, align 4, !dbg !11622
  %10 = getelementptr inbounds i8, ptr %t.dbg.spill.i, i32 4, !dbg !11622
  store i32 %t.1.i, ptr %10, align 4, !dbg !11622
    #dbg_declare(ptr %t.dbg.spill.i, !9831, !DIExpression(), !11623)
  %11 = insertvalue { i32, i32 } poison, i32 %t.0.i, 0, !dbg !11624
  %12 = insertvalue { i32, i32 } %11, i32 %t.1.i, 1, !dbg !11624
  %_2.0 = extractvalue { i32, i32 } %12, 0, !dbg !11625
  %_2.1 = extractvalue { i32, i32 } %12, 1, !dbg !11625
; call alloc::sync::Arc<T>::allocate_for_layout
  %13 = call { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$19allocate_for_layout17h890562bbce1b1ee8E"(i32 %_2.0, i32 %_2.1, ptr align 4 %len) #17, !dbg !11626
  %_0.0 = extractvalue { ptr, i32 } %13, 0, !dbg !11626
  %_0.1 = extractvalue { ptr, i32 } %13, 1, !dbg !11626
  %14 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11627
  %15 = insertvalue { ptr, i32 } %14, i32 %_0.1, 1, !dbg !11627
  ret { ptr, i32 } %15, !dbg !11627
}

; alloc::sync::Arc<[T]>::allocate_for_slice::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h8cd9adf16b4b5178E"(i32 %layout.0, i32 %layout.1) unnamed_addr #2 !dbg !11628 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !11633, !DIExpression(), !11634)
  store i32 %layout.0, ptr %layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4
  store i32 %layout.1, ptr %0, align 4
    #dbg_declare(ptr %layout.dbg.spill, !11632, !DIExpression(), !11635)
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %1 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE"(ptr align 1 inttoptr (i32 1 to ptr), i32 %layout.0, i32 %layout.1) #17, !dbg !11636
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11636
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11636
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11637
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !11637
  ret { ptr, i32 } %3, !dbg !11637
}

; alloc::sync::Arc<[T]>::allocate_for_slice::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17hf9a40612878757aaE"(ptr align 4 %_1, ptr %mem) unnamed_addr #2 !dbg !11638 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %mem.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !11643, !DIExpression(DW_OP_deref), !11644)
  store ptr %mem, ptr %mem.dbg.spill, align 4
    #dbg_declare(ptr %mem.dbg.spill, !11642, !DIExpression(), !11645)
  store ptr %mem, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9865, !DIExpression(), !11646)
  %_5 = load i32, ptr %_1, align 4, !dbg !11648
; call core::ptr::slice_from_raw_parts_mut
  %0 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha3a5beed25bc1c5cE(ptr %mem, i32 %_5) #17, !dbg !11649
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !11649
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !11649
  %1 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !11650
  %2 = insertvalue { ptr, i32 } %1, i32 %_3.1, 1, !dbg !11650
  ret { ptr, i32 } %2, !dbg !11650
}

; alloc::sync::arcinner_layout_for_value_layout
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN5alloc4sync32arcinner_layout_for_value_layout17h6dbf0a4dd8fecdcaE(i32 %layout.0, i32 %layout.1) unnamed_addr #1 !dbg !11651 {
start:
  %e.i = alloca [0 x i8], align 1
  %layout.dbg.spill = alloca [8 x i8], align 4
  %_6 = alloca [8 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store i32 %layout.0, ptr %layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4
  store i32 %layout.1, ptr %0, align 4
    #dbg_declare(ptr %layout.dbg.spill, !11653, !DIExpression(), !11654)
; call core::alloc::layout::Layout::new
  %1 = call { i32, i32 } @_ZN4core5alloc6layout6Layout3new17h9702638446ad85a0E() #17, !dbg !11655
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11655
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !11655
  store i32 %2, ptr %_6, align 4, !dbg !11655
  %4 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !11655
  store i32 %3, ptr %4, align 4, !dbg !11655
; call core::alloc::layout::Layout::extend
  call void @_ZN4core5alloc6layout6Layout6extend17h66fe036cba65f0e0E(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %_6, i32 %layout.0, i32 %layout.1) #17, !dbg !11656
    #dbg_declare(ptr %_3, !9883, !DIExpression(), !11657)
    #dbg_declare(ptr %_4, !9890, !DIExpression(), !11659)
    #dbg_declare(ptr %e.i, !9891, !DIExpression(), !11660)
  %5 = load i32, ptr %_4, align 4, !dbg !11661
  %6 = icmp eq i32 %5, 0, !dbg !11661
  %_2.i = select i1 %6, i32 1, i32 0, !dbg !11661
  %7 = trunc nuw i32 %_2.i to i1, !dbg !11662
  br i1 %7, label %bb2.i, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7b63fb84987f0c45E.exit", !dbg !11662

bb2.i:                                            ; preds = %start
; call core::result::unwrap_failed
  call void @_ZN4core6result13unwrap_failed17hbf072231b1fad67dE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i32 43, ptr align 1 %e.i, ptr align 4 @alloc_1b26471aaa0792f2a26c240077bf1f3e) #18, !dbg !11663
  unreachable, !dbg !11663

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7b63fb84987f0c45E.exit": ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %_4, i32 12, i1 false), !dbg !11664
; call core::alloc::layout::Layout::pad_to_align
  %8 = call { i32, i32 } @_ZN4core5alloc6layout6Layout12pad_to_align17hd6bb20c13501b721E(ptr align 4 %_3) #17, !dbg !11665
  %_0.0 = extractvalue { i32, i32 } %8, 0, !dbg !11665
  %_0.1 = extractvalue { i32, i32 } %8, 1, !dbg !11665
  %9 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !11666
  %10 = insertvalue { i32, i32 } %9, i32 %_0.1, 1, !dbg !11666
  ret { i32, i32 } %10, !dbg !11666
}

; alloc::wtf8::clone_into
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc4wtf810clone_into17h4c68d45e2c3acdb6E(ptr align 1 %slice.0, i32 %slice.1, ptr align 4 %buf) unnamed_addr #2 !dbg !11667 {
start:
  %buf.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !11672, !DIExpression(), !11674)
  store ptr %buf, ptr %buf.dbg.spill, align 4
    #dbg_declare(ptr %buf.dbg.spill, !11673, !DIExpression(), !11675)
  %1 = getelementptr inbounds i8, ptr %buf, i32 12, !dbg !11676
  store i8 0, ptr %1, align 4, !dbg !11676
; call core::wtf8::Wtf8::as_bytes
  %2 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !11677
  %_4.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11677
  %_4.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11677
; call alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
  call void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17h77f52a6af8cf214eE"(ptr align 1 %_4.0, i32 %_4.1, ptr align 4 %buf) #17, !dbg !11678
  ret void, !dbg !11679
}

; alloc::wtf8::to_string_lossy
; Function Attrs: nounwind
define internal void @_ZN5alloc4wtf815to_string_lossy17hab172b277adef279E(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #1 !dbg !11680 {
start:
  %index.dbg.spill.i16 = alloca [4 x i8], align 4
  %self.dbg.spill.i17 = alloca [8 x i8], align 4
  %ptr.dbg.spill2.i.i6 = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i7 = alloca [4 x i8], align 4
  %len.dbg.spill.i.i8 = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i9 = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i10 = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i11 = alloca [8 x i8], align 4
  %self.dbg.spill.i.i12 = alloca [8 x i8], align 4
  %_3.i.i = alloca [8 x i8], align 4
  %index.dbg.spill.i13 = alloca [8 x i8], align 4
  %self.dbg.spill.i14 = alloca [8 x i8], align 4
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i5 = alloca [8 x i8], align 4
  %self.dbg.spill.i4 = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %surrogate_pos.dbg.spill2 = alloca [4 x i8], align 4
  %wtf8_bytes.dbg.spill = alloca [8 x i8], align 4
  %surrogate_pos.dbg.spill = alloca [4 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_40 = alloca [12 x i8], align 4
  %_39 = alloca [12 x i8], align 4
  %_20 = alloca [12 x i8], align 4
  %pos = alloca [4 x i8], align 4
  %utf8_bytes = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !11684, !DIExpression(), !11695)
    #dbg_declare(ptr %utf8_bytes, !11689, !DIExpression(), !11696)
    #dbg_declare(ptr %pos, !11691, !DIExpression(), !11697)
; call core::wtf8::Wtf8::next_surrogate
  call void @_ZN4core4wtf84Wtf814next_surrogate17h4ca7c63da452551aE(ptr sret([12 x i8]) align 4 %_5, ptr align 1 %slice.0, i32 %slice.1, i32 0) #17, !dbg !11698
  %_6 = load i32, ptr %_5, align 4, !dbg !11699
  %1 = trunc nuw i32 %_6 to i1, !dbg !11700
  br i1 %1, label %bb4, label %bb5, !dbg !11700

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !11701
  %surrogate_pos = load i32, ptr %2, align 4, !dbg !11701
  store i32 %surrogate_pos, ptr %surrogate_pos.dbg.spill, align 4, !dbg !11701
    #dbg_declare(ptr %surrogate_pos.dbg.spill, !11685, !DIExpression(), !11702)
; call core::wtf8::Wtf8::as_bytes
  %3 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !11703
  %wtf8_bytes.0 = extractvalue { ptr, i32 } %3, 0, !dbg !11703
  %wtf8_bytes.1 = extractvalue { ptr, i32 } %3, 1, !dbg !11703
  store ptr %wtf8_bytes.0, ptr %wtf8_bytes.dbg.spill, align 4, !dbg !11703
  %4 = getelementptr inbounds i8, ptr %wtf8_bytes.dbg.spill, i32 4, !dbg !11703
  store i32 %wtf8_bytes.1, ptr %4, align 4, !dbg !11703
    #dbg_declare(ptr %wtf8_bytes.dbg.spill, !11687, !DIExpression(), !11704)
; call core::wtf8::Wtf8::len
  %_9 = call i32 @_ZN4core4wtf84Wtf83len17h6b8ffe7c2e815550E(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !11705
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %utf8_bytes, i32 %_9) #17, !dbg !11706
  store ptr %wtf8_bytes.0, ptr %self.dbg.spill.i5, align 4
  %5 = getelementptr inbounds i8, ptr %self.dbg.spill.i5, i32 4
  store i32 %wtf8_bytes.1, ptr %5, align 4
    #dbg_declare(ptr %self.dbg.spill.i5, !11707, !DIExpression(), !11711)
  store i32 %surrogate_pos, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !11710, !DIExpression(), !11713)
  store i32 %surrogate_pos, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !11714, !DIExpression(), !11720)
  store ptr %wtf8_bytes.0, ptr %slice.dbg.spill.i.i, align 4
  %6 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 %wtf8_bytes.1, ptr %6, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !11719, !DIExpression(), !11722)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %7 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 %surrogate_pos, ptr %7, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !11723, !DIExpression(), !11730)
  store ptr %wtf8_bytes.0, ptr %slice.dbg.spill.i.i.i, align 4
  %8 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 %wtf8_bytes.1, ptr %8, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !11728, !DIExpression(), !11732)
; call core::num::<impl usize>::checked_sub
  %9 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h0a5e6ce25b7151bdE"(i32 %surrogate_pos, i32 0) #17, !dbg !11733
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !11733
  %11 = extractvalue { i32, i32 } %9, 1, !dbg !11733
  store i32 %10, ptr %_3.i.i.i, align 4, !dbg !11733
  %12 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !11733
  store i32 %11, ptr %12, align 4, !dbg !11733
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !11733
  %13 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !11733
  %14 = load i32, ptr %13, align 4, !dbg !11733
  %15 = trunc nuw i32 %_6.i.i.i to i1, !dbg !11734
  br i1 %15, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !11734

bb2.i.i.i:                                        ; preds = %bb4
  %16 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !11735
  %new_len.i.i.i = load i32, ptr %16, align 4, !dbg !11735
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !11735
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !11729, !DIExpression(), !11735)
  %_8.i.i.i = icmp ule i32 %surrogate_pos, %wtf8_bytes.1, !dbg !11736
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3f2fb1ea6dffffe7E.exit", label %bb5.i.i.i, !dbg !11736

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %bb4
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 0, i32 %surrogate_pos, i32 %wtf8_bytes.1, ptr align 4 @alloc_72bdd5826cd9b32313454ca574545738) #18, !dbg !11737
  unreachable, !dbg !11737

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3f2fb1ea6dffffe7E.exit": ; preds = %bb2.i.i.i
  store ptr %wtf8_bytes.0, ptr %ptr.dbg.spill.i.i, align 4
  %17 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 %wtf8_bytes.1, ptr %17, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1271, !DIExpression(), !11738)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !1276, !DIExpression(), !11740)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !1277, !DIExpression(), !11741)
  store ptr %wtf8_bytes.0, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !11742
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1278, !DIExpression(), !11743)
  store ptr %wtf8_bytes.0, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !11744
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !1280, !DIExpression(), !11745)
  %18 = insertvalue { ptr, i32 } %3, i32 %new_len.i.i.i, 1, !dbg !11746
  %_11.0.i.i.i = extractvalue { ptr, i32 } %18, 0, !dbg !11747
  %_0.0.i.i = extractvalue { ptr, i32 } %18, 0, !dbg !11748
  %_0.0.i = extractvalue { ptr, i32 } %18, 0, !dbg !11749
  %19 = insertvalue { ptr, i32 } %18, i32 %new_len.i.i.i, 1, !dbg !11750
  %_12.0 = extractvalue { ptr, i32 } %19, 0, !dbg !11751
  %_12.1 = extractvalue { ptr, i32 } %19, 1, !dbg !11751
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %utf8_bytes, ptr align 1 %_12.0, i32 %_12.1) #17, !dbg !11752
  store ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, ptr %self.dbg.spill.i4, align 4
  %20 = getelementptr inbounds i8, ptr %self.dbg.spill.i4, i32 4
  store i32 3, ptr %20, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !4934, !DIExpression(), !11753)
  %_16.0 = extractvalue { ptr, i32 } { ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3 }, 0, !dbg !11755
  %_16.1 = extractvalue { ptr, i32 } { ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3 }, 1, !dbg !11755
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %utf8_bytes, ptr align 1 %_16.0, i32 %_16.1) #17, !dbg !11756
  %_19.0 = add i32 %surrogate_pos, 3, !dbg !11757
  %_19.1 = icmp ult i32 %_19.0, %surrogate_pos, !dbg !11757
  br i1 %_19.1, label %panic, label %bb13, !dbg !11757

bb5:                                              ; preds = %start
; call core::wtf8::Wtf8::as_bytes
  %21 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !11758
  %_3.0 = extractvalue { ptr, i32 } %21, 0, !dbg !11758
  %_3.1 = extractvalue { ptr, i32 } %21, 1, !dbg !11758
; call core::str::converts::from_utf8_unchecked
  %22 = call { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E(ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !11759
  %_2.0 = extractvalue { ptr, i32 } %22, 0, !dbg !11759
  %_2.1 = extractvalue { ptr, i32 } %22, 1, !dbg !11759
  %23 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11760
  store ptr %_2.0, ptr %23, align 4, !dbg !11760
  %24 = getelementptr inbounds i8, ptr %23, i32 4, !dbg !11760
  store i32 %_2.1, ptr %24, align 4, !dbg !11760
  store i32 -2147483648, ptr %_0, align 4, !dbg !11760
  br label %bb27, !dbg !11761

bb13:                                             ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3f2fb1ea6dffffe7E.exit"
  store i32 %_19.0, ptr %pos, align 4, !dbg !11757
  br label %bb14, !dbg !11762

panic:                                            ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3f2fb1ea6dffffe7E.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_3f3a91417fbfb3de771e34ec36aa2f55) #18, !dbg !11757
  unreachable, !dbg !11757

bb14:                                             ; preds = %bb23, %bb13
  %_21 = load i32, ptr %pos, align 4, !dbg !11763
; call core::wtf8::Wtf8::next_surrogate
  call void @_ZN4core4wtf84Wtf814next_surrogate17h4ca7c63da452551aE(ptr sret([12 x i8]) align 4 %_20, ptr align 1 %slice.0, i32 %slice.1, i32 %_21) #17, !dbg !11764
  %_22 = load i32, ptr %_20, align 4, !dbg !11765
  %25 = trunc nuw i32 %_22 to i1, !dbg !11766
  br i1 %25, label %bb18, label %bb17, !dbg !11766

bb18:                                             ; preds = %bb14
  %26 = getelementptr inbounds i8, ptr %_20, i32 4, !dbg !11767
  %surrogate_pos1 = load i32, ptr %26, align 4, !dbg !11767
  store i32 %surrogate_pos1, ptr %surrogate_pos.dbg.spill2, align 4, !dbg !11767
    #dbg_declare(ptr %surrogate_pos.dbg.spill2, !11693, !DIExpression(), !11768)
  %_28 = load i32, ptr %pos, align 4, !dbg !11769
  store ptr %wtf8_bytes.0, ptr %self.dbg.spill.i14, align 4
  %27 = getelementptr inbounds i8, ptr %self.dbg.spill.i14, i32 4
  store i32 %wtf8_bytes.1, ptr %27, align 4
    #dbg_declare(ptr %self.dbg.spill.i14, !11770, !DIExpression(), !11778)
  store i32 %_28, ptr %index.dbg.spill.i13, align 4
  %28 = getelementptr inbounds i8, ptr %index.dbg.spill.i13, i32 4
  store i32 %surrogate_pos1, ptr %28, align 4
    #dbg_declare(ptr %index.dbg.spill.i13, !11775, !DIExpression(), !11780)
  store i32 %_28, ptr %self.dbg.spill.i.i12, align 4
  %29 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i12, i32 4
  store i32 %surrogate_pos1, ptr %29, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i12, !11723, !DIExpression(), !11781)
  store ptr %wtf8_bytes.0, ptr %slice.dbg.spill.i.i11, align 4
  %30 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i11, i32 4
  store i32 %wtf8_bytes.1, ptr %30, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i11, !11728, !DIExpression(), !11783)
; call core::num::<impl usize>::checked_sub
  %31 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h0a5e6ce25b7151bdE"(i32 %surrogate_pos1, i32 %_28) #17, !dbg !11784
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !11784
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !11784
  store i32 %32, ptr %_3.i.i, align 4, !dbg !11784
  %34 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !11784
  store i32 %33, ptr %34, align 4, !dbg !11784
  %_6.i.i = load i32, ptr %_3.i.i, align 4, !dbg !11784
  %35 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !11784
  %36 = load i32, ptr %35, align 4, !dbg !11784
  %37 = trunc nuw i32 %_6.i.i to i1, !dbg !11785
  br i1 %37, label %bb2.i.i, label %bb5.i.i, !dbg !11785

bb2.i.i:                                          ; preds = %bb18
  %38 = getelementptr inbounds i8, ptr %_3.i.i, i32 4, !dbg !11786
  %new_len.i.i = load i32, ptr %38, align 4, !dbg !11786
  store i32 %new_len.i.i, ptr %new_len.dbg.spill.i.i, align 4, !dbg !11786
    #dbg_declare(ptr %new_len.dbg.spill.i.i, !11729, !DIExpression(), !11786)
  %_8.i.i = icmp ule i32 %surrogate_pos1, %wtf8_bytes.1, !dbg !11787
  br i1 %_8.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5c37b5c2d23c000E.exit", label %bb5.i.i, !dbg !11787

bb5.i.i:                                          ; preds = %bb2.i.i, %bb18
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 %_28, i32 %surrogate_pos1, i32 %wtf8_bytes.1, ptr align 4 @alloc_40fade489781e31c1a69ab393315160c) #18, !dbg !11788
  unreachable, !dbg !11788

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5c37b5c2d23c000E.exit": ; preds = %bb2.i.i
  store ptr %wtf8_bytes.0, ptr %ptr.dbg.spill.i.i10, align 4
  %39 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i10, i32 4
  store i32 %wtf8_bytes.1, ptr %39, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i10, !1271, !DIExpression(), !11789)
  store i32 %_28, ptr %offset.dbg.spill.i.i9, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i9, !1276, !DIExpression(), !11791)
  store i32 %new_len.i.i, ptr %len.dbg.spill.i.i8, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i8, !1277, !DIExpression(), !11792)
  store ptr %wtf8_bytes.0, ptr %ptr.dbg.spill1.i.i7, align 4, !dbg !11793
    #dbg_declare(ptr %ptr.dbg.spill1.i.i7, !1278, !DIExpression(), !11794)
  %ptr.i.i = getelementptr inbounds nuw i8, ptr %wtf8_bytes.0, i32 %_28, !dbg !11795
  store ptr %ptr.i.i, ptr %ptr.dbg.spill2.i.i6, align 4, !dbg !11795
    #dbg_declare(ptr %ptr.dbg.spill2.i.i6, !1280, !DIExpression(), !11796)
  %40 = insertvalue { ptr, i32 } poison, ptr %ptr.i.i, 0, !dbg !11797
  %41 = insertvalue { ptr, i32 } %40, i32 %new_len.i.i, 1, !dbg !11797
  %42 = insertvalue { ptr, i32 } poison, ptr %ptr.i.i, 0, !dbg !11798
  %43 = insertvalue { ptr, i32 } %42, i32 %new_len.i.i, 1, !dbg !11798
  %_26.0 = extractvalue { ptr, i32 } %43, 0, !dbg !11799
  %_26.1 = extractvalue { ptr, i32 } %43, 1, !dbg !11799
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %utf8_bytes, ptr align 1 %_26.0, i32 %_26.1) #17, !dbg !11800
  store ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, ptr %self.dbg.spill.i, align 4
  %44 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 3, ptr %44, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !11801)
  %_31.0 = extractvalue { ptr, i32 } { ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3 }, 0, !dbg !11803
  %_31.1 = extractvalue { ptr, i32 } { ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3 }, 1, !dbg !11803
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %utf8_bytes, ptr align 1 %_31.0, i32 %_31.1) #17, !dbg !11804
  %_33.0 = add i32 %surrogate_pos1, 3, !dbg !11805
  %_33.1 = icmp ult i32 %_33.0, %surrogate_pos1, !dbg !11805
  br i1 %_33.1, label %panic3, label %bb23, !dbg !11805

bb17:                                             ; preds = %bb14
  %_38 = load i32, ptr %pos, align 4, !dbg !11806
  store ptr %wtf8_bytes.0, ptr %self.dbg.spill.i17, align 4
  %45 = getelementptr inbounds i8, ptr %self.dbg.spill.i17, i32 4
  store i32 %wtf8_bytes.1, ptr %45, align 4
    #dbg_declare(ptr %self.dbg.spill.i17, !6723, !DIExpression(), !11807)
  store i32 %_38, ptr %index.dbg.spill.i16, align 4
    #dbg_declare(ptr %index.dbg.spill.i16, !6729, !DIExpression(), !11809)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %46 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32 %_38, ptr align 1 %wtf8_bytes.0, i32 %wtf8_bytes.1, ptr align 4 @alloc_02d8f0eb6397ba23a450087ec7563f45) #17, !dbg !11810
  %_0.0.i18 = extractvalue { ptr, i32 } %46, 0, !dbg !11810
  %_0.1.i = extractvalue { ptr, i32 } %46, 1, !dbg !11810
  %_36.0 = extractvalue { ptr, i32 } %46, 0, !dbg !11811
  %_36.1 = extractvalue { ptr, i32 } %46, 1, !dbg !11811
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %utf8_bytes, ptr align 1 %_36.0, i32 %_36.1) #17, !dbg !11812
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_40, ptr align 4 %utf8_bytes, i32 12, i1 false), !dbg !11813
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %_39, ptr align 4 %_40) #17, !dbg !11814
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_39, i32 12, i1 false), !dbg !11815
  br label %bb27, !dbg !11816

bb27:                                             ; preds = %bb5, %bb17
  ret void, !dbg !11818

bb23:                                             ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5c37b5c2d23c000E.exit"
  store i32 %_33.0, ptr %pos, align 4, !dbg !11819
  br label %bb14, !dbg !11762

panic3:                                           ; preds = %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5c37b5c2d23c000E.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_7de025867be6066a044c67a4b0a74352) #18, !dbg !11805
  unreachable, !dbg !11805

bb16:                                             ; No predecessors!
  unreachable, !dbg !11765
}

; alloc::wtf8::<impl core::wtf8::Wtf8>::clone_into
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$10clone_into17h95a954d179003937E"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %buf) unnamed_addr #1 !dbg !11820 {
start:
  %buf.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11823, !DIExpression(), !11825)
  store ptr %buf, ptr %buf.dbg.spill, align 4
    #dbg_declare(ptr %buf.dbg.spill, !11824, !DIExpression(), !11826)
; call alloc::wtf8::clone_into
  call void @_ZN5alloc4wtf810clone_into17h4c68d45e2c3acdb6E(ptr align 1 %self.0, i32 %self.1, ptr align 4 %buf) #17, !dbg !11827
  ret void, !dbg !11828
}

; alloc::wtf8::<impl core::wtf8::Wtf8>::to_string_lossy
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$15to_string_lossy17h165c88a1ca506aafE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !11829 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11832, !DIExpression(), !11833)
; call alloc::wtf8::to_string_lossy
  call void @_ZN5alloc4wtf815to_string_lossy17hab172b277adef279E(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) #17, !dbg !11834
  ret void, !dbg !11835
}

; alloc::wtf8::<impl core::wtf8::Wtf8>::into_rc
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$7into_rc17h30fff39b7099d8d2E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !11836 {
start:
  %rc.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11841, !DIExpression(), !11844)
; call core::wtf8::Wtf8::as_bytes
  %1 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %self.0, i32 %self.1) #17, !dbg !11845
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11845
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11845
; call <alloc::rc::Rc<[T]> as core::convert::From<&[T]>>::from
  %2 = call { ptr, i32 } @"_ZN95_$LT$alloc..rc..Rc$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h29358df697d12a9dE"(ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !11846
  %rc.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11846
  %rc.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11846
  store ptr %rc.0, ptr %rc.dbg.spill, align 4, !dbg !11846
  %3 = getelementptr inbounds i8, ptr %rc.dbg.spill, i32 4, !dbg !11846
  store i32 %rc.1, ptr %3, align 4, !dbg !11846
    #dbg_declare(ptr %rc.dbg.spill, !11842, !DIExpression(), !11847)
; call alloc::rc::Rc<T>::into_raw
  %4 = call { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$8into_raw17h2ab08474558f018aE"(ptr %rc.0, i32 %rc.1) #17, !dbg !11848
  %_5.0 = extractvalue { ptr, i32 } %4, 0, !dbg !11848
  %_5.1 = extractvalue { ptr, i32 } %4, 1, !dbg !11848
; call alloc::rc::Rc<T>::from_raw
  %5 = call { ptr, i32 } @"_ZN5alloc2rc11Rc$LT$T$GT$8from_raw17h6f48e13b04b279bbE"(ptr %_5.0, i32 %_5.1) #17, !dbg !11849
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !11849
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !11849
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11850
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !11850
  ret { ptr, i32 } %7, !dbg !11850
}

; alloc::wtf8::<impl core::wtf8::Wtf8>::into_arc
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8into_arc17h1fc2d5a255e01984E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !11851 {
start:
  %arc.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11856, !DIExpression(), !11859)
; call core::wtf8::Wtf8::as_bytes
  %1 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %self.0, i32 %self.1) #17, !dbg !11860
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11860
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11860
; call <alloc::sync::Arc<[T]> as core::convert::From<&[T]>>::from
  %2 = call { ptr, i32 } @"_ZN98_$LT$alloc..sync..Arc$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h9a4bdf719c65c157E"(ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !11861
  %arc.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11861
  %arc.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11861
  store ptr %arc.0, ptr %arc.dbg.spill, align 4, !dbg !11861
  %3 = getelementptr inbounds i8, ptr %arc.dbg.spill, i32 4, !dbg !11861
  store i32 %arc.1, ptr %3, align 4, !dbg !11861
    #dbg_declare(ptr %arc.dbg.spill, !11857, !DIExpression(), !11862)
; call alloc::sync::Arc<T>::into_raw
  %4 = call { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$8into_raw17h43858592ae09c3a7E"(ptr %arc.0, i32 %arc.1) #17, !dbg !11863
  %_5.0 = extractvalue { ptr, i32 } %4, 0, !dbg !11863
  %_5.1 = extractvalue { ptr, i32 } %4, 1, !dbg !11863
; call alloc::sync::Arc<T>::from_raw
  %5 = call { ptr, i32 } @"_ZN5alloc4sync12Arc$LT$T$GT$8from_raw17haeb1b77b43f746b8E"(ptr %_5.0, i32 %_5.1) #17, !dbg !11864
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !11864
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !11864
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11865
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !11865
  ret { ptr, i32 } %7, !dbg !11865
}

; alloc::wtf8::<impl core::wtf8::Wtf8>::into_box
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8into_box17ha327a62227d92943E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !11866 {
start:
  %boxed.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11875, !DIExpression(), !11878)
; call core::wtf8::Wtf8::as_bytes
  %1 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %self.0, i32 %self.1) #17, !dbg !11879
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11879
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11879
; call <T as core::convert::Into<U>>::into
  %2 = call { ptr, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha9f6daaa8dcf4fd2E"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 @alloc_d9ed152a944270ebea68117b897b2fa7) #17, !dbg !11880
  %boxed.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11880
  %boxed.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11880
  store ptr %boxed.0, ptr %boxed.dbg.spill, align 4, !dbg !11880
  %3 = getelementptr inbounds i8, ptr %boxed.dbg.spill, i32 4, !dbg !11880
  store i32 %boxed.1, ptr %3, align 4, !dbg !11880
    #dbg_declare(ptr %boxed.dbg.spill, !11876, !DIExpression(), !11881)
  %4 = insertvalue { ptr, i32 } poison, ptr %boxed.0, 0, !dbg !11882
  %5 = insertvalue { ptr, i32 } %4, i32 %boxed.1, 1, !dbg !11882
  ret { ptr, i32 } %5, !dbg !11882
}

; alloc::wtf8::<impl core::wtf8::Wtf8>::to_owned
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8to_owned17h8e00f054d89bd696E"(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !11883 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !11888, !DIExpression(), !11889)
; call alloc::wtf8::to_owned
  call void @_ZN5alloc4wtf88to_owned17h31a5efc662d37019E(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) #17, !dbg !11890
  ret void, !dbg !11891
}

; alloc::wtf8::<impl core::wtf8::Wtf8>::empty_box
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$9empty_box17h9c1ecad2793703d1E"() unnamed_addr #1 !dbg !11892 {
start:
  %boxed.dbg.spill = alloca [8 x i8], align 4, !dbg !11899
; call <alloc::boxed::Box<[T]> as core::default::Default>::default
  %0 = call { ptr, i32 } @"_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17h2b5961ec46a53765E"() #17, !dbg !11899
  %boxed.0 = extractvalue { ptr, i32 } %0, 0, !dbg !11899
  %boxed.1 = extractvalue { ptr, i32 } %0, 1, !dbg !11899
  store ptr %boxed.0, ptr %boxed.dbg.spill, align 4, !dbg !11899
  %1 = getelementptr inbounds i8, ptr %boxed.dbg.spill, i32 4, !dbg !11899
  store i32 %boxed.1, ptr %1, align 4, !dbg !11899
    #dbg_declare(ptr %boxed.dbg.spill, !11897, !DIExpression(), !11900)
  %2 = insertvalue { ptr, i32 } poison, ptr %boxed.0, 0, !dbg !11901
  %3 = insertvalue { ptr, i32 } %2, i32 %boxed.1, 1, !dbg !11901
  ret { ptr, i32 } %3, !dbg !11901
}

; alloc::wtf8::Wtf8Buf::into_string
; Function Attrs: nounwind
define dso_local void @_ZN5alloc4wtf87Wtf8Buf11into_string17hceaf914b337f589bE(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !11902 {
start:
  %_9 = alloca [12 x i8], align 4
  %_8 = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !11922, !DIExpression(), !11923)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !11924
  %1 = load i8, ptr %0, align 4, !dbg !11924
  %_2 = trunc nuw i8 %1 to i1, !dbg !11924
  br i1 %_2, label %bb5, label %bb1, !dbg !11924

bb1:                                              ; preds = %start
; call <alloc::wtf8::Wtf8Buf as core::ops::deref::Deref>::deref
  %2 = call { ptr, i32 } @"_ZN64_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6dbca4ec3c2cbfe5E"(ptr align 4 %self) #17, !dbg !11925
  %_6.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11925
  %_6.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11925
; call core::wtf8::Wtf8::next_surrogate
  call void @_ZN4core4wtf84Wtf814next_surrogate17h4ca7c63da452551aE(ptr sret([12 x i8]) align 4 %_5, ptr align 1 %_6.0, i32 %_6.1, i32 0) #17, !dbg !11926
; call core::option::Option<T>::is_none
  %_3 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h485d96c1aeb5d92bE"(ptr align 4 %_5) #17, !dbg !11927
  br i1 %_3, label %bb5, label %bb7, !dbg !11925

bb5:                                              ; preds = %bb1, %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_9, ptr align 4 %self, i32 12, i1 false), !dbg !11928
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %_8, ptr align 4 %_9) #17, !dbg !11929
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11930
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %3, ptr align 4 %_8, i32 12, i1 false), !dbg !11930
  store i32 -2147483648, ptr %_0, align 4, !dbg !11930
  br label %bb8, !dbg !11931

bb7:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 16, i1 false), !dbg !11932
  br label %bb8, !dbg !11931

bb8:                                              ; preds = %bb5, %bb7
  ret void, !dbg !11933
}

; alloc::wtf8::Wtf8Buf::as_mut_slice
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc4wtf87Wtf8Buf12as_mut_slice17h070ab0b5060d4428E(ptr align 4 %self) unnamed_addr #2 !dbg !11934 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11939, !DIExpression(), !11940)
; call <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %0 = call { ptr, i32 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5816c49960636028E"(ptr align 4 %self) #17, !dbg !11941
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !11941
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !11941
; call core::wtf8::Wtf8::from_mut_bytes_unchecked
  %1 = call { ptr, i32 } @_ZN4core4wtf84Wtf824from_mut_bytes_unchecked17hceb39cf6c353907fE(ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !11942
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !11942
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !11942
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !11943
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !11943
  ret { ptr, i32 } %3, !dbg !11943
}

; alloc::wtf8::Wtf8Buf::as_known_utf8
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc4wtf87Wtf8Buf13as_known_utf817h68284879eece96fcE(ptr align 4 %self) unnamed_addr #2 !dbg !11944 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !11949, !DIExpression(), !11950)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !11951
  %1 = load i8, ptr %0, align 4, !dbg !11951
  %_2 = trunc nuw i8 %1 to i1, !dbg !11951
  br i1 %_2, label %bb1, label %bb5, !dbg !11951

bb5:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !11952
  br label %bb6, !dbg !11953

bb1:                                              ; preds = %start
; call <alloc::wtf8::Wtf8Buf as core::ops::deref::Deref>::deref
  %2 = call { ptr, i32 } @"_ZN64_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6dbca4ec3c2cbfe5E"(ptr align 4 %self) #17, !dbg !11954
  %_5.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11954
  %_5.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11954
; call core::wtf8::Wtf8::as_bytes
  %3 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %_5.0, i32 %_5.1) #17, !dbg !11955
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !11955
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !11955
; call core::str::converts::from_utf8_unchecked
  %4 = call { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E(ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !11956
  %_3.0 = extractvalue { ptr, i32 } %4, 0, !dbg !11956
  %_3.1 = extractvalue { ptr, i32 } %4, 1, !dbg !11956
  store ptr %_3.0, ptr %_0, align 4, !dbg !11957
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11957
  store i32 %_3.1, ptr %5, align 4, !dbg !11957
  br label %bb6, !dbg !11953

bb6:                                              ; preds = %bb1, %bb5
  %6 = load ptr, ptr %_0, align 4, !dbg !11958
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !11958
  %8 = load i32, ptr %7, align 4, !dbg !11958
  %9 = insertvalue { ptr, i32 } poison, ptr %6, 0, !dbg !11958
  %10 = insertvalue { ptr, i32 } %9, i32 %8, 1, !dbg !11958
  ret { ptr, i32 } %10, !dbg !11958
}

; alloc::wtf8::Wtf8Buf::with_capacity
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc4wtf87Wtf8Buf13with_capacity17h68c2bbb0c7ecaf02E(ptr sret([16 x i8]) align 4 %_0, i32 %capacity) unnamed_addr #2 !dbg !11959 {
start:
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !11964, !DIExpression(), !11965)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %_2, i32 %capacity) #17, !dbg !11966
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 12, i1 false), !dbg !11967
  %0 = getelementptr inbounds i8, ptr %_0, i32 12, !dbg !11967
  store i8 1, ptr %0, align 4, !dbg !11967
  ret void, !dbg !11968
}

; alloc::wtf8::Wtf8Buf::into_string_lossy
; Function Attrs: nounwind
define dso_local void @_ZN5alloc4wtf87Wtf8Buf17into_string_lossy17hfa9b0e4c35cb638fE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !11969 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %surrogate_pos.dbg.spill = alloca [4 x i8], align 4
  %_18 = alloca [12 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %pos = alloca [4 x i8], align 4
    #dbg_declare(ptr %self, !11974, !DIExpression(), !11979)
    #dbg_declare(ptr %pos, !11975, !DIExpression(), !11980)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !11981
  %1 = load i8, ptr %0, align 4, !dbg !11981
  %_2 = trunc nuw i8 %1 to i1, !dbg !11981
  br i1 %_2, label %bb9, label %bb1, !dbg !11981

bb1:                                              ; preds = %start
  store i32 0, ptr %pos, align 4, !dbg !11982
  br label %bb2, !dbg !11983

bb9:                                              ; preds = %bb2, %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_18, ptr align 4 %self, i32 12, i1 false), !dbg !11984
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_18) #17, !dbg !11985
  ret void, !dbg !11986

bb2:                                              ; preds = %bb6, %bb1
; call <alloc::wtf8::Wtf8Buf as core::ops::deref::Deref>::deref
  %2 = call { ptr, i32 } @"_ZN64_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6dbca4ec3c2cbfe5E"(ptr align 4 %self) #17, !dbg !11987
  %_5.0 = extractvalue { ptr, i32 } %2, 0, !dbg !11987
  %_5.1 = extractvalue { ptr, i32 } %2, 1, !dbg !11987
  %_7 = load i32, ptr %pos, align 4, !dbg !11988
; call core::wtf8::Wtf8::next_surrogate
  call void @_ZN4core4wtf84Wtf814next_surrogate17h4ca7c63da452551aE(ptr sret([12 x i8]) align 4 %_4, ptr align 1 %_5.0, i32 %_5.1, i32 %_7) #17, !dbg !11989
  %_8 = load i32, ptr %_4, align 4, !dbg !11987
  %3 = trunc nuw i32 %_8 to i1, !dbg !11990
  br i1 %3, label %bb5, label %bb9, !dbg !11990

bb5:                                              ; preds = %bb2
  %4 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !11991
  %surrogate_pos = load i32, ptr %4, align 4, !dbg !11991
  store i32 %surrogate_pos, ptr %surrogate_pos.dbg.spill, align 4, !dbg !11991
    #dbg_declare(ptr %surrogate_pos.dbg.spill, !11977, !DIExpression(), !11991)
  %_10.0 = add i32 %surrogate_pos, 3, !dbg !11992
  %_10.1 = icmp ult i32 %_10.0, %surrogate_pos, !dbg !11992
  br i1 %_10.1, label %panic, label %bb6, !dbg !11992

bb6:                                              ; preds = %bb5
  store i32 %_10.0, ptr %pos, align 4, !dbg !11993
  %_15 = load i32, ptr %pos, align 4, !dbg !11994
; call <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
  %5 = call { ptr, i32 } @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17he933b014ebbd65c1E"(ptr align 4 %self, i32 %surrogate_pos, i32 %_15, ptr align 4 @alloc_7fbeeeee8a7caae03fc19dc7f102cd8a) #17, !dbg !11995
  %_12.0 = extractvalue { ptr, i32 } %5, 0, !dbg !11995
  %_12.1 = extractvalue { ptr, i32 } %5, 1, !dbg !11995
  store ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, ptr %self.dbg.spill.i, align 4
  %6 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 3, ptr %6, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !11996)
  %_16.0 = extractvalue { ptr, i32 } { ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3 }, 0, !dbg !11998
  %_16.1 = extractvalue { ptr, i32 } { ptr @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3 }, 1, !dbg !11998
; call core::slice::<impl [T]>::copy_from_slice
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h10a9bbe4ea233c0cE"(ptr align 1 %_12.0, i32 %_12.1, ptr align 1 %_16.0, i32 %_16.1, ptr align 4 @alloc_94834333f150919af22539b7e6bde3ce) #17, !dbg !11999
  br label %bb2, !dbg !11999

panic:                                            ; preds = %bb5
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_7b160cc14db43b9cb173aef84de13ec5) #18, !dbg !11992
  unreachable, !dbg !11992

bb11:                                             ; No predecessors!
  unreachable, !dbg !12000
}

; alloc::wtf8::Wtf8Buf::push_code_point_unchecked
; Function Attrs: nounwind
define dso_local void @_ZN5alloc4wtf87Wtf8Buf25push_code_point_unchecked17he846b99334e62b04E(ptr align 4 %self, i32 %0) unnamed_addr #1 !dbg !12001 {
start:
  %bytes.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %bytes = alloca [4 x i8], align 1
  %code_point = alloca [4 x i8], align 4
  store i32 %0, ptr %code_point, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12006, !DIExpression(), !12013)
    #dbg_declare(ptr %code_point, !12007, !DIExpression(), !12014)
    #dbg_declare(ptr %bytes, !12008, !DIExpression(), !12015)
  call void @llvm.memset.p0.i32(ptr align 1 %bytes, i8 0, i32 4, i1 false), !dbg !12016
; call core::wtf8::CodePoint::to_u32
  %_5 = call i32 @_ZN4core4wtf89CodePoint6to_u3217h02d6270e7c09274aE(ptr align 4 %code_point) #17, !dbg !12017
; call core::char::methods::encode_utf8_raw
  %1 = call { ptr, i32 } @_ZN4core4char7methods15encode_utf8_raw17h5651d1f2b96f3c25E(i32 %_5, ptr align 1 %bytes, i32 4) #17, !dbg !12018
  %bytes.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12018
  %bytes.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12018
  store ptr %bytes.0, ptr %bytes.dbg.spill, align 4, !dbg !12018
  %2 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i32 4, !dbg !12018
  store i32 %bytes.1, ptr %2, align 4, !dbg !12018
    #dbg_declare(ptr %bytes.dbg.spill, !12011, !DIExpression(), !12019)
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %self, ptr align 1 %bytes.0, i32 %bytes.1) #17, !dbg !12020
  ret void, !dbg !12021
}

; alloc::wtf8::Wtf8Buf::clear
; Function Attrs: nounwind
define dso_local void @_ZN5alloc4wtf87Wtf8Buf5clear17h24528a3c25445074E(ptr align 4 %self) unnamed_addr #1 !dbg !12022 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12027, !DIExpression(), !12028)
; call alloc::vec::Vec<T,A>::clear
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h48061e4466c7faf2E"(ptr align 4 %self) #17, !dbg !12029
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !12030
  store i8 1, ptr %0, align 4, !dbg !12030
  ret void, !dbg !12031
}

; alloc::wtf8::Wtf8Buf::as_slice
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc4wtf87Wtf8Buf8as_slice17h1c24bb81eee39dafE(ptr align 4 %self) unnamed_addr #2 !dbg !12032 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12037, !DIExpression(), !12038)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %self) #17, !dbg !12039
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !12039
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !12039
; call core::wtf8::Wtf8::from_bytes_unchecked
  %1 = call { ptr, i32 } @_ZN4core4wtf84Wtf820from_bytes_unchecked17h0b03043889451617E(ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !12040
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12040
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12040
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12041
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !12041
  ret { ptr, i32 } %3, !dbg !12041
}

; alloc::wtf8::Wtf8Buf::from_box
; Function Attrs: nounwind
define dso_local void @_ZN5alloc4wtf87Wtf8Buf8from_box17h59544362b44a51baE(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %boxed.0, i32 %boxed.1) unnamed_addr #1 !dbg !12042 {
start:
  %bytes.dbg.spill = alloca [8 x i8], align 4
  %boxed.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store ptr %boxed.0, ptr %boxed.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %boxed.dbg.spill, i32 4
  store i32 %boxed.1, ptr %0, align 4
    #dbg_declare(ptr %boxed.dbg.spill, !12047, !DIExpression(), !12050)
  store ptr %boxed.0, ptr %bytes.dbg.spill, align 4, !dbg !12051
  %1 = getelementptr inbounds i8, ptr %bytes.dbg.spill, i32 4, !dbg !12051
  store i32 %boxed.1, ptr %1, align 4, !dbg !12051
    #dbg_declare(ptr %bytes.dbg.spill, !12048, !DIExpression(), !12052)
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h40445ef263cfe410E"(ptr sret([12 x i8]) align 4 %_3, ptr align 1 %boxed.0, i32 %boxed.1) #17, !dbg !12053
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_3, i32 12, i1 false), !dbg !12054
  %2 = getelementptr inbounds i8, ptr %_0, i32 12, !dbg !12054
  store i8 0, ptr %2, align 4, !dbg !12054
  ret void, !dbg !12055
}

; alloc::wtf8::Wtf8Buf::from_wide
; Function Attrs: nounwind
define dso_local void @_ZN5alloc4wtf87Wtf8Buf9from_wide17h9a8f6a521fd00398E(ptr sret([16 x i8]) align 4 %_0, ptr align 2 %v.0, i32 %v.1) unnamed_addr #1 !dbg !12056 {
start:
  %code_point.dbg.spill = alloca [4 x i8], align 4
  %surrogate.dbg.spill = alloca [2 x i8], align 2
  %ch.dbg.spill = alloca [4 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  %surrogate = alloca [2 x i8], align 2
  %item = alloca [8 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %iter = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %string = alloca [16 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !12061, !DIExpression(), !12076)
    #dbg_declare(ptr %string, !12062, !DIExpression(), !12077)
    #dbg_declare(ptr %iter, !12064, !DIExpression(), !12078)
    #dbg_declare(ptr %item, !12066, !DIExpression(), !12079)
    #dbg_declare(ptr %surrogate, !12070, !DIExpression(), !12080)
; call alloc::wtf8::Wtf8Buf::with_capacity
  call void @_ZN5alloc4wtf87Wtf8Buf13with_capacity17h68c2bbb0c7ecaf02E(ptr sret([16 x i8]) align 4 %string, i32 %v.1) #17, !dbg !12081
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbadac3e2abbd3b18E"(ptr align 2 %v.0, i32 %v.1) #17, !dbg !12082
  %_7.0 = extractvalue { ptr, ptr } %1, 0, !dbg !12082
  %_7.1 = extractvalue { ptr, ptr } %1, 1, !dbg !12082
; call core::iter::traits::iterator::Iterator::cloned
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17hafc97ffc625f8677E(ptr %_7.0, ptr %_7.1) #17, !dbg !12083
  %_6.0 = extractvalue { ptr, ptr } %2, 0, !dbg !12083
  %_6.1 = extractvalue { ptr, ptr } %2, 1, !dbg !12083
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h5020acdbefe335aeE"(ptr sret([12 x i8]) align 4 %_5, ptr %_6.0, ptr %_6.1) #17, !dbg !12084
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h79a45a5431d99095E"(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %_5) #17, !dbg !12084
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter, ptr align 4 %_4, i32 12, i1 false), !dbg !12084
  br label %bb6, !dbg !12085

bb6:                                              ; preds = %bb11, %bb12, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a098f8c0f59bfb3E"(ptr sret([8 x i8]) align 4 %_10, ptr align 4 %iter) #17, !dbg !12078
  %3 = load i16, ptr %_10, align 4, !dbg !12078
  %4 = icmp eq i16 %3, 2, !dbg !12078
  %_12 = select i1 %4, i32 0, i32 1, !dbg !12078
  %5 = trunc nuw i32 %_12 to i1, !dbg !12078
  br i1 %5, label %bb9, label %bb10, !dbg !12078

bb9:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %item, ptr align 4 %_10, i32 8, i1 false), !dbg !12086
  %6 = load i16, ptr %item, align 4, !dbg !12087
  %_14 = zext i16 %6 to i32, !dbg !12087
  %7 = trunc nuw i32 %_14 to i1, !dbg !12088
  br i1 %7, label %bb11, label %bb12, !dbg !12088

bb10:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %string, i32 16, i1 false), !dbg !12089
  ret void, !dbg !12090

bb11:                                             ; preds = %bb9
  %8 = getelementptr inbounds i8, ptr %item, i32 2, !dbg !12091
  %9 = load i16, ptr %8, align 2, !dbg !12091
  store i16 %9, ptr %surrogate, align 2, !dbg !12091
; call core::char::decode::DecodeUtf16Error::unpaired_surrogate
  %surrogate1 = call i16 @_ZN4core4char6decode16DecodeUtf16Error18unpaired_surrogate17h0ddf666293e1966cE(ptr align 2 %surrogate) #17, !dbg !12092
  store i16 %surrogate1, ptr %surrogate.dbg.spill, align 2, !dbg !12092
    #dbg_declare(ptr %surrogate.dbg.spill, !12072, !DIExpression(), !12093)
  %_21 = zext i16 %surrogate1 to i32, !dbg !12094
; call core::wtf8::CodePoint::from_u32_unchecked
  %code_point = call i32 @_ZN4core4wtf89CodePoint18from_u32_unchecked17hb8f3683f824849b5E(i32 %_21) #17, !dbg !12095
  store i32 %code_point, ptr %code_point.dbg.spill, align 4, !dbg !12095
    #dbg_declare(ptr %code_point.dbg.spill, !12074, !DIExpression(), !12096)
  %10 = getelementptr inbounds i8, ptr %string, i32 12, !dbg !12097
  store i8 0, ptr %10, align 4, !dbg !12097
; call alloc::wtf8::Wtf8Buf::push_code_point_unchecked
  call void @_ZN5alloc4wtf87Wtf8Buf25push_code_point_unchecked17he846b99334e62b04E(ptr align 4 %string, i32 %code_point) #17, !dbg !12098
  br label %bb6, !dbg !12098

bb12:                                             ; preds = %bb9
  %11 = getelementptr inbounds i8, ptr %item, i32 4, !dbg !12099
  %ch = load i32, ptr %11, align 4, !dbg !12099
  store i32 %ch, ptr %ch.dbg.spill, align 4, !dbg !12099
    #dbg_declare(ptr %ch.dbg.spill, !12068, !DIExpression(), !12100)
; call alloc::wtf8::Wtf8Buf::push_char
  call void @_ZN5alloc4wtf87Wtf8Buf9push_char17ha5abd75dfbedb9b6E(ptr align 4 %string, i32 %ch) #17, !dbg !12101
  br label %bb6, !dbg !12101

bb8:                                              ; No predecessors!
  unreachable, !dbg !12102
}

; alloc::wtf8::Wtf8Buf::push_char
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc4wtf87Wtf8Buf9push_char17ha5abd75dfbedb9b6E(ptr align 4 %self, i32 %c) unnamed_addr #2 !dbg !12104 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12109, !DIExpression(), !12111)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !12110, !DIExpression(), !12112)
; call core::wtf8::CodePoint::from_char
  %_3 = call i32 @_ZN4core4wtf89CodePoint9from_char17hdb05d5e5a71cbfebE(i32 %c) #17, !dbg !12113
; call alloc::wtf8::Wtf8Buf::push_code_point_unchecked
  call void @_ZN5alloc4wtf87Wtf8Buf25push_code_point_unchecked17he846b99334e62b04E(ptr align 4 %self, i32 %_3) #17, !dbg !12114
  ret void, !dbg !12115
}

; alloc::wtf8::to_owned
; Function Attrs: nounwind
define internal void @_ZN5alloc4wtf88to_owned17h31a5efc662d37019E(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #1 !dbg !12116 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !12118, !DIExpression(), !12119)
; call core::wtf8::Wtf8::as_bytes
  %1 = call { ptr, i32 } @_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !12120
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12120
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12120
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hb62a9abc9ced4c0cE"(ptr sret([12 x i8]) align 4 %_2, ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !12121
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 12, i1 false), !dbg !12122
  %2 = getelementptr inbounds i8, ptr %_0, i32 12, !dbg !12122
  store i8 0, ptr %2, align 4, !dbg !12122
  ret void, !dbg !12123
}

; alloc::alloc::alloc_zeroed
; Function Attrs: inlinehint nounwind
define internal ptr @_ZN5alloc5alloc12alloc_zeroed17hafd657b05720231aE(i32 %0, i32 %1) unnamed_addr #2 !dbg !12124 {
start:
  %layout = alloca [8 x i8], align 4
  store i32 %0, ptr %layout, align 4
  %2 = getelementptr inbounds i8, ptr %layout, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %layout, !12128, !DIExpression(), !12129)
; call __rustc::__rust_no_alloc_shim_is_unstable_v2
  call void @_RNvCsaKOfhLrNfTz_7___rustc35___rust_no_alloc_shim_is_unstable_v2() #17, !dbg !12130
; call core::alloc::layout::Layout::size
  %_3 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !12131
; call core::alloc::layout::Layout::align
  %_5 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %layout) #17, !dbg !12132
; call __rustc::__rust_alloc_zeroed
  %_0 = call ptr @_RNvCsaKOfhLrNfTz_7___rustc19___rust_alloc_zeroed(i32 %_3, i32 %_5) #17, !dbg !12133
  ret ptr %_0, !dbg !12134
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nounwind
define internal ptr @_ZN5alloc5alloc15exchange_malloc17h6d84c5d751dea1cdE(i32 %size, i32 %align) unnamed_addr #2 !dbg !12135 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %layout.dbg.spill = alloca [8 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !12139, !DIExpression(), !12145)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !12140, !DIExpression(), !12146)
; call core::alloc::layout::Layout::from_size_align_unchecked
  %0 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %size, i32 %align, ptr align 4 @alloc_88beea65e4fab49399d118295256fbde) #17, !dbg !12147
  %layout.0 = extractvalue { i32, i32 } %0, 0, !dbg !12147
  %layout.1 = extractvalue { i32, i32 } %0, 1, !dbg !12147
  store i32 %layout.0, ptr %layout.dbg.spill, align 4, !dbg !12147
  %1 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4, !dbg !12147
  store i32 %layout.1, ptr %1, align 4, !dbg !12147
    #dbg_declare(ptr %layout.dbg.spill, !12141, !DIExpression(), !12148)
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %2 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE"(ptr align 1 inttoptr (i32 1 to ptr), i32 %layout.0, i32 %layout.1) #17, !dbg !12149
  %3 = extractvalue { ptr, i32 } %2, 0, !dbg !12149
  %4 = extractvalue { ptr, i32 } %2, 1, !dbg !12149
  store ptr %3, ptr %_4, align 4, !dbg !12149
  %5 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !12149
  store i32 %4, ptr %5, align 4, !dbg !12149
  %6 = load ptr, ptr %_4, align 4, !dbg !12150
  %7 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !12150
  %8 = load i32, ptr %7, align 4, !dbg !12150
  %9 = ptrtoint ptr %6 to i32, !dbg !12150
  %10 = icmp eq i32 %9, 0, !dbg !12150
  %_6 = select i1 %10, i32 1, i32 0, !dbg !12150
  %11 = trunc nuw i32 %_6 to i1, !dbg !12151
  br i1 %11, label %bb4, label %bb5, !dbg !12151

bb4:                                              ; preds = %start
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h1e5cf49dcf30c6c7E(i32 %layout.0, i32 %layout.1) #18, !dbg !12152
  unreachable, !dbg !12152

bb5:                                              ; preds = %start
  %ptr.0 = load ptr, ptr %_4, align 4, !dbg !12153
  %12 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !12153
  %ptr.1 = load i32, ptr %12, align 4, !dbg !12153
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !12153
  %13 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !12153
  store i32 %ptr.1, ptr %13, align 4, !dbg !12153
    #dbg_declare(ptr %ptr.dbg.spill, !12143, !DIExpression(), !12154)
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_0 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb0f82c01d41aa59eE"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !12155
  ret ptr %_0, !dbg !12156

bb3:                                              ; No predecessors!
  unreachable, !dbg !12150
}

; alloc::alloc::handle_alloc_error
; Function Attrs: cold minsize noreturn nounwind optsize
define dso_local void @_ZN5alloc5alloc18handle_alloc_error17h1e5cf49dcf30c6c7E(i32 %layout.0, i32 %layout.1) unnamed_addr #6 !dbg !12157 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  store i32 %layout.0, ptr %layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4
  store i32 %layout.1, ptr %0, align 4
    #dbg_declare(ptr %layout.dbg.spill, !12161, !DIExpression(), !12162)
; call alloc::alloc::handle_alloc_error::ct_error
  call void @_ZN5alloc5alloc18handle_alloc_error8ct_error17h16e347b0607ab49cE(i32 %layout.0, i32 %layout.1) #18, !dbg !12163
  unreachable, !dbg !12163
}

; alloc::alloc::handle_alloc_error::ct_error
; Function Attrs: noreturn nounwind
define dso_local void @_ZN5alloc5alloc18handle_alloc_error8ct_error17h16e347b0607ab49cE(i32 %_1.0, i32 %_1.1) unnamed_addr #0 !dbg !12164 {
start:
  %_1.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  store i32 %_1.0, ptr %_1.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %_1.dbg.spill, i32 4
  store i32 %_1.1, ptr %0, align 4
    #dbg_declare(ptr %_1.dbg.spill, !12167, !DIExpression(), !12168)
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 @alloc_ce1fa81c485b8c61dc81113ef6ca6281) #17, !dbg !12169
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_3, ptr align 4 @alloc_95cbbc64a088f857bf17106a890a7e2c) #18, !dbg !12169
  unreachable, !dbg !12169
}

; alloc::alloc::alloc
; Function Attrs: inlinehint nounwind
define internal ptr @_ZN5alloc5alloc5alloc17h37a31fc1ab4dfd1eE(i32 %0, i32 %1) unnamed_addr #2 !dbg !12170 {
start:
  %layout = alloca [8 x i8], align 4
  store i32 %0, ptr %layout, align 4
  %2 = getelementptr inbounds i8, ptr %layout, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %layout, !12172, !DIExpression(), !12173)
; call __rustc::__rust_no_alloc_shim_is_unstable_v2
  call void @_RNvCsaKOfhLrNfTz_7___rustc35___rust_no_alloc_shim_is_unstable_v2() #17, !dbg !12174
; call core::alloc::layout::Layout::size
  %_3 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !12175
; call core::alloc::layout::Layout::align
  %_5 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %layout) #17, !dbg !12176
; call __rustc::__rust_alloc
  %_0 = call ptr @_RNvCsaKOfhLrNfTz_7___rustc12___rust_alloc(i32 %_3, i32 %_5) #17, !dbg !12177
  ret ptr %_0, !dbg !12178
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc5alloc6Global10alloc_impl17h1d93fc195818213bE(ptr align 1 %self, i32 %0, i32 %1, i1 zeroext %zeroed) unnamed_addr #2 !dbg !12179 {
start:
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %size.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [0 x i8], align 1
  %zeroed.dbg.spill = alloca [1 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  %raw_ptr = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %0, ptr %layout, align 4
  %2 = getelementptr inbounds i8, ptr %layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12184, !DIExpression(), !12197)
    #dbg_declare(ptr %layout, !12185, !DIExpression(), !12198)
  %3 = zext i1 %zeroed to i8
  store i8 %3, ptr %zeroed.dbg.spill, align 1
    #dbg_declare(ptr %zeroed.dbg.spill, !12186, !DIExpression(), !12199)
    #dbg_declare(ptr %raw_ptr, !12189, !DIExpression(), !12200)
    #dbg_declare(ptr %residual.dbg.spill, !12193, !DIExpression(), !12201)
; call core::alloc::layout::Layout::size
  %size = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !12202
  store i32 %size, ptr %size.dbg.spill, align 4, !dbg !12202
    #dbg_declare(ptr %size.dbg.spill, !12187, !DIExpression(), !12203)
  %4 = icmp eq i32 %size, 0, !dbg !12204
  br i1 %4, label %bb3, label %bb2, !dbg !12204

bb3:                                              ; preds = %start
; call core::alloc::layout::Layout::dangling
  %_7 = call ptr @_ZN4core5alloc6layout6Layout8dangling17h4aeee76b033d9204E(ptr align 4 %layout) #17, !dbg !12205
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %5 = call { ptr, i32 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE"(ptr %_7, i32 0) #17, !dbg !12206
  %_6.0 = extractvalue { ptr, i32 } %5, 0, !dbg !12206
  %_6.1 = extractvalue { ptr, i32 } %5, 1, !dbg !12206
  store ptr %_6.0, ptr %_0, align 4, !dbg !12207
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12207
  store i32 %_6.1, ptr %6, align 4, !dbg !12207
  br label %bb16, !dbg !12208

bb2:                                              ; preds = %start
  br i1 %zeroed, label %bb6, label %bb7, !dbg !12209

bb16:                                             ; preds = %bb14, %bb13, %bb3
  %7 = load ptr, ptr %_0, align 4, !dbg !12210
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12210
  %9 = load i32, ptr %8, align 4, !dbg !12210
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0, !dbg !12210
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1, !dbg !12210
  ret { ptr, i32 } %11, !dbg !12210

bb7:                                              ; preds = %bb2
  %12 = load i32, ptr %layout, align 4, !dbg !12211
  %13 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !12211
  %14 = load i32, ptr %13, align 4, !dbg !12211
; call alloc::alloc::alloc
  %15 = call ptr @_ZN5alloc5alloc5alloc17h37a31fc1ab4dfd1eE(i32 %12, i32 %14) #17, !dbg !12211
  store ptr %15, ptr %raw_ptr, align 4, !dbg !12211
  br label %bb8, !dbg !12211

bb6:                                              ; preds = %bb2
  %16 = load i32, ptr %layout, align 4, !dbg !12212
  %17 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !12212
  %18 = load i32, ptr %17, align 4, !dbg !12212
; call alloc::alloc::alloc_zeroed
  %19 = call ptr @_ZN5alloc5alloc12alloc_zeroed17hafd657b05720231aE(i32 %16, i32 %18) #17, !dbg !12212
  store ptr %19, ptr %raw_ptr, align 4, !dbg !12212
  br label %bb8, !dbg !12212

bb8:                                              ; preds = %bb6, %bb7
  %_13 = load ptr, ptr %raw_ptr, align 4, !dbg !12213
; call core::ptr::non_null::NonNull<T>::new
  %_12 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5968324df1351dc8E"(ptr %_13) #17, !dbg !12214
; call core::option::Option<T>::ok_or
  %_11 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9504f9ce93f07665E"(ptr %_12) #17, !dbg !12215
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %20 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h661768b3f16f6fc8E"(ptr %_11) #17, !dbg !12214
  store ptr %20, ptr %_10, align 4, !dbg !12214
  %21 = load ptr, ptr %_10, align 4, !dbg !12214
  %22 = ptrtoint ptr %21 to i32, !dbg !12214
  %23 = icmp eq i32 %22, 0, !dbg !12214
  %_14 = select i1 %23, i32 1, i32 0, !dbg !12214
  %24 = trunc nuw i32 %_14 to i1, !dbg !12214
  br i1 %24, label %bb14, label %bb13, !dbg !12214

bb14:                                             ; preds = %bb8
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %25 = call { ptr, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbd212d42dd8e72f9E"(ptr align 4 @alloc_410e3011a7a5ea88f7eef411e235cc80) #17, !dbg !12216
  %26 = extractvalue { ptr, i32 } %25, 0, !dbg !12216
  %27 = extractvalue { ptr, i32 } %25, 1, !dbg !12216
  store ptr %26, ptr %_0, align 4, !dbg !12216
  %28 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12216
  store i32 %27, ptr %28, align 4, !dbg !12216
  br label %bb16, !dbg !12216

bb13:                                             ; preds = %bb8
  %ptr = load ptr, ptr %_10, align 4, !dbg !12214
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !12214
    #dbg_declare(ptr %ptr.dbg.spill, !12191, !DIExpression(), !12217)
    #dbg_declare(ptr %ptr.dbg.spill, !12195, !DIExpression(), !12218)
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %29 = call { ptr, i32 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE"(ptr %ptr, i32 %size) #17, !dbg !12219
  %_16.0 = extractvalue { ptr, i32 } %29, 0, !dbg !12219
  %_16.1 = extractvalue { ptr, i32 } %29, 1, !dbg !12219
  store ptr %_16.0, ptr %_0, align 4, !dbg !12220
  %30 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12220
  store i32 %_16.1, ptr %30, align 4, !dbg !12220
  br label %bb16, !dbg !12221

bb12:                                             ; No predecessors!
  unreachable, !dbg !12214
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc5alloc6Global9grow_impl17h16709bd49e1d55b1E(ptr align 1 %self, ptr %ptr, i32 %0, i32 %1, i32 %2, i32 %3, i1 zeroext %zeroed) unnamed_addr #2 !dbg !12222 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i9 = alloca [4 x i8], align 4
  %self.dbg.spill.i8 = alloca [4 x i8], align 4
  %count.dbg.spill.i5 = alloca [4 x i8], align 4
  %self.dbg.spill.i6 = alloca [4 x i8], align 4
  %count.dbg.spill.i.i = alloca [4 x i8], align 4
  %val.dbg.spill.i.i = alloca [1 x i8], align 1
  %dst.dbg.spill.i.i = alloca [4 x i8], align 4
  %_8.i.i = alloca [1 x i8], align 1
  %count.dbg.spill.i4 = alloca [4 x i8], align 4
  %val.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill3 = alloca [4 x i8], align 4
  %raw_ptr.dbg.spill = alloca [4 x i8], align 4
  %new_size.dbg.spill = alloca [4 x i8], align 4
  %new_ptr.dbg.spill = alloca [8 x i8], align 4
  %old_size.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %zeroed.dbg.spill = alloca [1 x i8], align 1
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_40 = alloca [8 x i8], align 4
  %_30 = alloca [4 x i8], align 4
  %old_size = alloca [4 x i8], align 4
  %_12 = alloca [24 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %new_layout = alloca [8 x i8], align 4
  %old_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %old_layout, align 4
  %4 = getelementptr inbounds i8, ptr %old_layout, i32 4
  store i32 %1, ptr %4, align 4
  store i32 %2, ptr %new_layout, align 4
  %5 = getelementptr inbounds i8, ptr %new_layout, i32 4
  store i32 %3, ptr %5, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12227, !DIExpression(), !12253)
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !12228, !DIExpression(), !12254)
    #dbg_declare(ptr %old_layout, !12229, !DIExpression(), !12255)
    #dbg_declare(ptr %new_layout, !12230, !DIExpression(), !12256)
  %6 = zext i1 %zeroed to i8
  store i8 %6, ptr %zeroed.dbg.spill, align 1
    #dbg_declare(ptr %zeroed.dbg.spill, !12231, !DIExpression(), !12257)
    #dbg_declare(ptr %old_size, !12232, !DIExpression(), !12258)
    #dbg_declare(ptr %old_size, !12245, !DIExpression(), !12259)
    #dbg_declare(ptr %residual.dbg.spill, !12241, !DIExpression(), !12260)
    #dbg_declare(ptr %residual.dbg.spill1, !12249, !DIExpression(), !12261)
; call core::alloc::layout::Layout::size
  %_7 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %new_layout) #17, !dbg !12262
; call core::alloc::layout::Layout::size
  %_9 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %old_layout) #17, !dbg !12263
  %_6 = icmp uge i32 %_7, %_9, !dbg !12264
  br i1 %_6, label %bb5, label %bb3, !dbg !12264

bb3:                                              ; preds = %start
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_12, ptr align 4 @alloc_b24ad36b3132cfd2b6a88b8dbfde46ef) #17, !dbg !12265
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_12, ptr align 4 @alloc_fd673fa8e7c9193d1d5e1474d960f7d8) #18, !dbg !12265
  unreachable, !dbg !12265

bb5:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %7 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %old_layout) #17, !dbg !12266
  store i32 %7, ptr %old_size, align 4, !dbg !12266
  %8 = load i32, ptr %old_size, align 4, !dbg !12267
  %9 = icmp eq i32 %8, 0, !dbg !12267
  br i1 %9, label %bb8, label %bb7, !dbg !12267

bb8:                                              ; preds = %bb5
  %10 = load i32, ptr %new_layout, align 4, !dbg !12268
  %11 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !12268
  %12 = load i32, ptr %11, align 4, !dbg !12268
; call alloc::alloc::Global::alloc_impl
  %13 = call { ptr, i32 } @_ZN5alloc5alloc6Global10alloc_impl17h1d93fc195818213bE(ptr align 1 %self, i32 %10, i32 %12, i1 zeroext %zeroed) #17, !dbg !12269
  %14 = extractvalue { ptr, i32 } %13, 0, !dbg !12269
  %15 = extractvalue { ptr, i32 } %13, 1, !dbg !12269
  store ptr %14, ptr %_0, align 4, !dbg !12269
  %16 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12269
  store i32 %15, ptr %16, align 4, !dbg !12269
  br label %bb37, !dbg !12269

bb7:                                              ; preds = %bb5
  store ptr %old_size, ptr %old_size.dbg.spill, align 4, !dbg !12270
    #dbg_declare(ptr %old_size.dbg.spill, !12234, !DIExpression(), !12258)
; call core::alloc::layout::Layout::align
  %_18 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %old_layout) #17, !dbg !12271
; call core::alloc::layout::Layout::align
  %_20 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %new_layout) #17, !dbg !12272
  %_17 = icmp eq i32 %_18, %_20, !dbg !12273
  br i1 %_17, label %bb11, label %bb12, !dbg !12273

bb37:                                             ; preds = %bb23, %bb27, %bb32, %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, %bb8
  %17 = load ptr, ptr %_0, align 4, !dbg !12274
  %18 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12274
  %19 = load i32, ptr %18, align 4, !dbg !12274
  %20 = insertvalue { ptr, i32 } poison, ptr %17, 0, !dbg !12274
  %21 = insertvalue { ptr, i32 } %20, i32 %19, 1, !dbg !12274
  ret { ptr, i32 } %21, !dbg !12274

bb12:                                             ; preds = %bb7
  %22 = load i32, ptr %new_layout, align 4, !dbg !12275
  %23 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !12275
  %24 = load i32, ptr %23, align 4, !dbg !12275
; call alloc::alloc::Global::alloc_impl
  %25 = call { ptr, i32 } @_ZN5alloc5alloc6Global10alloc_impl17h1d93fc195818213bE(ptr align 1 %self, i32 %22, i32 %24, i1 zeroext %zeroed) #17, !dbg !12276
  %_41.0 = extractvalue { ptr, i32 } %25, 0, !dbg !12276
  %_41.1 = extractvalue { ptr, i32 } %25, 1, !dbg !12276
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %26 = call { ptr, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h067890e4fde95786E"(ptr %_41.0, i32 %_41.1) #17, !dbg !12275
  %27 = extractvalue { ptr, i32 } %26, 0, !dbg !12275
  %28 = extractvalue { ptr, i32 } %26, 1, !dbg !12275
  store ptr %27, ptr %_40, align 4, !dbg !12275
  %29 = getelementptr inbounds i8, ptr %_40, i32 4, !dbg !12275
  store i32 %28, ptr %29, align 4, !dbg !12275
  %30 = load ptr, ptr %_40, align 4, !dbg !12275
  %31 = getelementptr inbounds i8, ptr %_40, i32 4, !dbg !12275
  %32 = load i32, ptr %31, align 4, !dbg !12275
  %33 = ptrtoint ptr %30 to i32, !dbg !12275
  %34 = icmp eq i32 %33, 0, !dbg !12275
  %_42 = select i1 %34, i32 1, i32 0, !dbg !12275
  %35 = trunc nuw i32 %_42 to i1, !dbg !12275
  br i1 %35, label %bb32, label %bb31, !dbg !12275

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::size
  %new_size = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %new_layout) #17, !dbg !12277
  store i32 %new_size, ptr %new_size.dbg.spill, align 4, !dbg !12277
    #dbg_declare(ptr %new_size.dbg.spill, !12235, !DIExpression(), !12278)
; call core::alloc::layout::Layout::size
  %_26 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %old_layout) #17, !dbg !12279
  %_25 = icmp uge i32 %new_size, %_26, !dbg !12280
  %36 = zext i1 %_25 to i8
  store i8 %36, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !11081, !DIExpression(), !12281)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !12283
  br i1 %_2.i, label %bb2.i10, label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !12283

bb2.i10:                                          ; preds = %bb11
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %_25, ptr align 4 @alloc_435544b3da4835fed9cb9d01cbc732a6) #17, !dbg !12284
  br label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !12284

_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit: ; preds = %bb11, %bb2.i10
  store ptr %ptr, ptr %self.dbg.spill.i8, align 4
    #dbg_declare(ptr %self.dbg.spill.i8, !4329, !DIExpression(), !12285)
  %37 = load i32, ptr %old_layout, align 4, !dbg !12287
  %38 = getelementptr inbounds i8, ptr %old_layout, i32 4, !dbg !12287
  %39 = load i32, ptr %38, align 4, !dbg !12287
; call alloc::alloc::realloc
  %raw_ptr = call ptr @_ZN5alloc5alloc7realloc17h57000c9ca6dea045E(ptr %ptr, i32 %37, i32 %39, i32 %new_size) #17, !dbg !12287
  store ptr %raw_ptr, ptr %raw_ptr.dbg.spill, align 4, !dbg !12287
    #dbg_declare(ptr %raw_ptr.dbg.spill, !12237, !DIExpression(), !12288)
; call core::ptr::non_null::NonNull<T>::new
  %_32 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5968324df1351dc8E"(ptr %raw_ptr) #17, !dbg !12289
; call core::option::Option<T>::ok_or
  %_31 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9504f9ce93f07665E"(ptr %_32) #17, !dbg !12290
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %40 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h661768b3f16f6fc8E"(ptr %_31) #17, !dbg !12289
  store ptr %40, ptr %_30, align 4, !dbg !12289
  %41 = load ptr, ptr %_30, align 4, !dbg !12289
  %42 = ptrtoint ptr %41 to i32, !dbg !12289
  %43 = icmp eq i32 %42, 0, !dbg !12289
  %_33 = select i1 %43, i32 1, i32 0, !dbg !12289
  %44 = trunc nuw i32 %_33 to i1, !dbg !12289
  br i1 %44, label %bb23, label %bb22, !dbg !12289

bb32:                                             ; preds = %bb12
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %45 = call { ptr, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbd212d42dd8e72f9E"(ptr align 4 @alloc_3d4f281bf1c329aa9f954c87456081b8) #17, !dbg !12291
  %46 = extractvalue { ptr, i32 } %45, 0, !dbg !12291
  %47 = extractvalue { ptr, i32 } %45, 1, !dbg !12291
  store ptr %46, ptr %_0, align 4, !dbg !12291
  %48 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12291
  store i32 %47, ptr %48, align 4, !dbg !12291
  br label %bb37, !dbg !12291

bb31:                                             ; preds = %bb12
  %new_ptr.0 = load ptr, ptr %_40, align 4, !dbg !12275
  %49 = getelementptr inbounds i8, ptr %_40, i32 4, !dbg !12275
  %new_ptr.1 = load i32, ptr %49, align 4, !dbg !12275
  store ptr %new_ptr.0, ptr %new_ptr.dbg.spill, align 4, !dbg !12275
  %50 = getelementptr inbounds i8, ptr %new_ptr.dbg.spill, i32 4, !dbg !12275
  store i32 %new_ptr.1, ptr %50, align 4, !dbg !12275
    #dbg_declare(ptr %new_ptr.dbg.spill, !12247, !DIExpression(), !12292)
    #dbg_declare(ptr %new_ptr.dbg.spill, !12251, !DIExpression(), !12293)
  store ptr %ptr, ptr %self.dbg.spill.i9, align 4
    #dbg_declare(ptr %self.dbg.spill.i9, !4329, !DIExpression(), !12294)
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_47 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb0f82c01d41aa59eE"(ptr %new_ptr.0, i32 %new_ptr.1) #17, !dbg !12296
  %51 = load i32, ptr %old_size, align 4, !dbg !12297
  store ptr %ptr, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !458, !DIExpression(), !12298)
  store ptr %_47, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !465, !DIExpression(), !12300)
  store i32 %51, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !466, !DIExpression(), !12301)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !12302
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !12302

bb2.i:                                            ; preds = %bb31
; call core::ptr::copy_nonoverlapping::precondition_check
  call void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %ptr, ptr %_47, i32 1, i32 1, i32 %51, ptr align 4 @alloc_15a52d1a884c78a5de92a2463d39823d) #17, !dbg !12303
  br label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !12303

_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit: ; preds = %bb31, %bb2.i
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_47, ptr align 1 %ptr, i32 %51, i1 false), !dbg !12304
  %52 = load i32, ptr %old_layout, align 4, !dbg !12305
  %53 = getelementptr inbounds i8, ptr %old_layout, i32 4, !dbg !12305
  %54 = load i32, ptr %53, align 4, !dbg !12305
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E"(ptr align 1 %self, ptr %ptr, i32 %52, i32 %54) #17, !dbg !12306
  store ptr %new_ptr.0, ptr %_0, align 4, !dbg !12307
  %55 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12307
  store i32 %new_ptr.1, ptr %55, align 4, !dbg !12307
  br label %bb37, !dbg !12308

bb23:                                             ; preds = %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %56 = call { ptr, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbd212d42dd8e72f9E"(ptr align 4 @alloc_90c17810543037c827a07bc5b67a6947) #17, !dbg !12309
  %57 = extractvalue { ptr, i32 } %56, 0, !dbg !12309
  %58 = extractvalue { ptr, i32 } %56, 1, !dbg !12309
  store ptr %57, ptr %_0, align 4, !dbg !12309
  %59 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12309
  store i32 %58, ptr %59, align 4, !dbg !12309
  br label %bb37, !dbg !12309

bb22:                                             ; preds = %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
  %ptr2 = load ptr, ptr %_30, align 4, !dbg !12289
  store ptr %ptr2, ptr %ptr.dbg.spill3, align 4, !dbg !12289
    #dbg_declare(ptr %ptr.dbg.spill3, !12239, !DIExpression(), !12310)
    #dbg_declare(ptr %ptr.dbg.spill3, !12243, !DIExpression(), !12311)
  br i1 %zeroed, label %bb24, label %bb27, !dbg !12312

bb27:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h0af7790923225223E.exit", %bb22
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %60 = call { ptr, i32 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE"(ptr %ptr2, i32 %new_size) #17, !dbg !12313
  %_39.0 = extractvalue { ptr, i32 } %60, 0, !dbg !12313
  %_39.1 = extractvalue { ptr, i32 } %60, 1, !dbg !12313
  store ptr %_39.0, ptr %_0, align 4, !dbg !12314
  %61 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !12314
  store i32 %_39.1, ptr %61, align 4, !dbg !12314
  br label %bb37, !dbg !12315

bb24:                                             ; preds = %bb22
  %62 = load i32, ptr %old_size, align 4, !dbg !12316
  store ptr %raw_ptr, ptr %self.dbg.spill.i6, align 4
    #dbg_declare(ptr %self.dbg.spill.i6, !1808, !DIExpression(), !12317)
  store i32 %62, ptr %count.dbg.spill.i5, align 4
    #dbg_declare(ptr %count.dbg.spill.i5, !1816, !DIExpression(), !12319)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !12320
  br i1 %_3.i, label %bb2.i7, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !12320

bb2.i7:                                           ; preds = %bb24
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %raw_ptr, i32 %62, i32 1, ptr align 4 @alloc_b092d604ef8ec680e603116988fc7eb6) #17, !dbg !12321
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !12321

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %bb24, %bb2.i7
  %_0.i = getelementptr inbounds nuw i8, ptr %raw_ptr, i32 %62, !dbg !12322
  %63 = load i32, ptr %old_size, align 4, !dbg !12323
  %_38.0 = sub i32 %new_size, %63, !dbg !12323
  %_38.1 = icmp ult i32 %new_size, %63, !dbg !12323
  br i1 %_38.1, label %panic, label %bb26, !dbg !12323

bb26:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
  store ptr %_0.i, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !12324, !DIExpression(), !12331)
  store i8 0, ptr %val.dbg.spill.i, align 1
    #dbg_declare(ptr %val.dbg.spill.i, !12329, !DIExpression(), !12333)
  store i32 %_38.0, ptr %count.dbg.spill.i4, align 4
    #dbg_declare(ptr %count.dbg.spill.i4, !12330, !DIExpression(), !12334)
  store ptr %_0.i, ptr %dst.dbg.spill.i.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i.i, !12335, !DIExpression(), !12342)
  store i8 0, ptr %val.dbg.spill.i.i, align 1
    #dbg_declare(ptr %val.dbg.spill.i.i, !12340, !DIExpression(), !12344)
  store i32 %_38.0, ptr %count.dbg.spill.i.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i.i, !12341, !DIExpression(), !12345)
; call core::ub_checks::check_language_ub
  %_4.i.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !12346
  br i1 %_4.i.i, label %bb2.i.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h0af7790923225223E.exit", !dbg !12346

bb2.i.i:                                          ; preds = %bb26
  %64 = icmp eq i32 %_38.0, 0, !dbg !12348
  %65 = zext i1 %64 to i8, !dbg !12348
  store i8 %65, ptr %_8.i.i, align 1, !dbg !12348
  %66 = load i8, ptr %_8.i.i, align 1, !dbg !12349
  %67 = trunc nuw i8 %66 to i1, !dbg !12349
; call core::ptr::write_bytes::precondition_check
  call void @_ZN4core3ptr11write_bytes18precondition_check17hcc5ff36fde79da6cE(ptr %_0.i, i32 1, i1 zeroext %67, ptr align 4 @alloc_dd33e9f7b7e993f204455249b11b870d) #17, !dbg !12349
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h0af7790923225223E.exit", !dbg !12349

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h0af7790923225223E.exit": ; preds = %bb26, %bb2.i.i
  call void @llvm.memset.p0.i32(ptr align 1 %_0.i, i8 0, i32 %_38.0, i1 false), !dbg !12350
  br label %bb27, !dbg !12351

panic:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_d01086e838fca3c5668315ab93cd79f1) #18, !dbg !12323
  unreachable, !dbg !12323

bb21:                                             ; No predecessors!
  unreachable, !dbg !12352
}

; alloc::alloc::dealloc
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc5alloc7dealloc17h0cb82864f8267aaaE(ptr %ptr, i32 %0, i32 %1) unnamed_addr #2 !dbg !12354 {
start:
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %0, ptr %layout, align 4
  %2 = getelementptr inbounds i8, ptr %layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !12358, !DIExpression(), !12360)
    #dbg_declare(ptr %layout, !12359, !DIExpression(), !12361)
; call core::alloc::layout::Layout::size
  %_3 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !12362
; call core::alloc::layout::Layout::align
  %_5 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %layout) #17, !dbg !12363
; call __rustc::__rust_dealloc
  call void @_RNvCsaKOfhLrNfTz_7___rustc14___rust_dealloc(ptr %ptr, i32 %_3, i32 %_5) #17, !dbg !12364
  ret void, !dbg !12365
}

; alloc::alloc::realloc
; Function Attrs: inlinehint nounwind
define internal ptr @_ZN5alloc5alloc7realloc17h57000c9ca6dea045E(ptr %ptr, i32 %0, i32 %1, i32 %new_size) unnamed_addr #2 !dbg !12366 {
start:
  %new_size.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %0, ptr %layout, align 4
  %2 = getelementptr inbounds i8, ptr %layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !12370, !DIExpression(), !12373)
    #dbg_declare(ptr %layout, !12371, !DIExpression(), !12374)
  store i32 %new_size, ptr %new_size.dbg.spill, align 4
    #dbg_declare(ptr %new_size.dbg.spill, !12372, !DIExpression(), !12375)
; call core::alloc::layout::Layout::size
  %_4 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !12376
; call core::alloc::layout::Layout::align
  %_6 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %layout) #17, !dbg !12377
; call __rustc::__rust_realloc
  %_0 = call ptr @_RNvCsaKOfhLrNfTz_7___rustc14___rust_realloc(ptr %ptr, i32 %_4, i32 %_6, i32 %new_size) #17, !dbg !12378
  ret ptr %_0, !dbg !12379
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h595bf8cefd372b4aE"(ptr %raw.0, i32 %raw.1) unnamed_addr #2 !dbg !12380 {
start:
  %raw.dbg.spill = alloca [8 x i8], align 4
  store ptr %raw.0, ptr %raw.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4
  store i32 %raw.1, ptr %0, align 4
    #dbg_declare(ptr %raw.dbg.spill, !12386, !DIExpression(), !12387)
; call alloc::boxed::Box<T,A>::from_raw_in
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17he7ab9b92841103baE"(ptr %raw.0, i32 %raw.1) #17, !dbg !12388
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12388
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12388
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12389
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !12389
  ret { ptr, i32 } %3, !dbg !12389
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hd749f9e4715d884fE"(ptr %raw.0, i32 %raw.1) unnamed_addr #2 !dbg !12390 {
start:
  %raw.dbg.spill = alloca [8 x i8], align 4
  store ptr %raw.0, ptr %raw.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4
  store i32 %raw.1, ptr %0, align 4
    #dbg_declare(ptr %raw.dbg.spill, !12394, !DIExpression(), !12395)
; call alloc::boxed::Box<T,A>::from_raw_in
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h99ba3a91edaf0da7E"(ptr %raw.0, i32 %raw.1) #17, !dbg !12396
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12396
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12396
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12397
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !12397
  ret { ptr, i32 } %3, !dbg !12397
}

; alloc::boxed::Box<T>::from_raw
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hfe770a3a0fb06ffdE"(ptr %raw.0, i32 %raw.1) unnamed_addr #2 !dbg !12398 {
start:
  %raw.dbg.spill = alloca [8 x i8], align 4
  store ptr %raw.0, ptr %raw.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4
  store i32 %raw.1, ptr %0, align 4
    #dbg_declare(ptr %raw.dbg.spill, !12402, !DIExpression(), !12403)
; call alloc::boxed::Box<T,A>::from_raw_in
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hb7770fb2438c598bE"(ptr %raw.0, i32 %raw.1) #17, !dbg !12404
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12404
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12404
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12405
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !12405
  ret { ptr, i32 } %3, !dbg !12405
}

; alloc::boxed::Box<T>::into_raw
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17ha41afd7940b056a7E"(ptr align 1 %b.0, i32 %b.1) unnamed_addr #2 !dbg !12406 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %b.dbg.spill = alloca [8 x i8], align 4
  %b = alloca [8 x i8], align 4
  store ptr %b.0, ptr %b.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i32 4
  store i32 %b.1, ptr %0, align 4
    #dbg_declare(ptr %b.dbg.spill, !12410, !DIExpression(), !12416)
    #dbg_declare(ptr %b, !12411, !DIExpression(), !12417)
  store ptr %b.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %b.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !12418, !DIExpression(), !12424)
  %2 = insertvalue { ptr, i32 } poison, ptr %b.0, 0, !dbg !12426
  %3 = insertvalue { ptr, i32 } %2, i32 %b.1, 1, !dbg !12426
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !12427
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !12427
  store ptr %4, ptr %b, align 4, !dbg !12427
  %6 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12427
  store i32 %5, ptr %6, align 4, !dbg !12427
  store ptr %b, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !12428, !DIExpression(), !12434)
  %_5.0 = load ptr, ptr %b, align 4, !dbg !12436
  %7 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12436
  %_5.1 = load i32, ptr %7, align 4, !dbg !12436
  %8 = insertvalue { ptr, i32 } poison, ptr %_5.0, 0, !dbg !12437
  %9 = insertvalue { ptr, i32 } %8, i32 %_5.1, 1, !dbg !12437
  ret { ptr, i32 } %9, !dbg !12437
}

; alloc::boxed::Box<T>::into_raw
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17hc64b9a9312214693E"(ptr align 1 %b.0, i32 %b.1) unnamed_addr #2 !dbg !12438 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %b.dbg.spill = alloca [8 x i8], align 4
  %b = alloca [8 x i8], align 4
  store ptr %b.0, ptr %b.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i32 4
  store i32 %b.1, ptr %0, align 4
    #dbg_declare(ptr %b.dbg.spill, !12442, !DIExpression(), !12450)
    #dbg_declare(ptr %b, !12443, !DIExpression(), !12451)
  store ptr %b.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %b.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !12452, !DIExpression(), !12458)
  %2 = insertvalue { ptr, i32 } poison, ptr %b.0, 0, !dbg !12460
  %3 = insertvalue { ptr, i32 } %2, i32 %b.1, 1, !dbg !12460
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !12461
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !12461
  store ptr %4, ptr %b, align 4, !dbg !12461
  %6 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12461
  store i32 %5, ptr %6, align 4, !dbg !12461
  store ptr %b, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !12462, !DIExpression(), !12469)
  %_5.0 = load ptr, ptr %b, align 4, !dbg !12471
  %7 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12471
  %_5.1 = load i32, ptr %7, align 4, !dbg !12471
  %8 = insertvalue { ptr, i32 } poison, ptr %_5.0, 0, !dbg !12472
  %9 = insertvalue { ptr, i32 } %8, i32 %_5.1, 1, !dbg !12472
  ret { ptr, i32 } %9, !dbg !12472
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h077cfab5109063c0E"(ptr %raw.0, i32 %raw.1) unnamed_addr #2 !dbg !12473 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [8 x i8], align 4
  store ptr %raw.0, ptr %raw.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4
  store i32 %raw.1, ptr %0, align 4
    #dbg_declare(ptr %raw.dbg.spill, !12482, !DIExpression(), !12485)
    #dbg_declare(ptr %alloc.dbg.spill, !12483, !DIExpression(), !12486)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h6c776c765d583c79E"(ptr %raw.0, i32 %raw.1) #17, !dbg !12487
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12487
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12487
  %2 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !12488
  %3 = insertvalue { ptr, i32 } %2, i32 %_3.1, 1, !dbg !12488
  ret { ptr, i32 } %3, !dbg !12488
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h99ba3a91edaf0da7E"(ptr %raw.0, i32 %raw.1) unnamed_addr #2 !dbg !12489 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [8 x i8], align 4
  store ptr %raw.0, ptr %raw.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4
  store i32 %raw.1, ptr %0, align 4
    #dbg_declare(ptr %raw.dbg.spill, !12493, !DIExpression(), !12495)
    #dbg_declare(ptr %alloc.dbg.spill, !12494, !DIExpression(), !12496)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5d95d39446f99948E"(ptr %raw.0, i32 %raw.1) #17, !dbg !12497
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12497
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12497
  %2 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !12498
  %3 = insertvalue { ptr, i32 } %2, i32 %_3.1, 1, !dbg !12498
  ret { ptr, i32 } %3, !dbg !12498
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hb7770fb2438c598bE"(ptr %raw.0, i32 %raw.1) unnamed_addr #2 !dbg !12499 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [8 x i8], align 4
  store ptr %raw.0, ptr %raw.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4
  store i32 %raw.1, ptr %0, align 4
    #dbg_declare(ptr %raw.dbg.spill, !12503, !DIExpression(), !12506)
    #dbg_declare(ptr %alloc.dbg.spill, !12504, !DIExpression(), !12507)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2637b50b1414bab6E"(ptr %raw.0, i32 %raw.1) #17, !dbg !12508
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12508
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12508
  %2 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !12509
  %3 = insertvalue { ptr, i32 } %2, i32 %_3.1, 1, !dbg !12509
  ret { ptr, i32 } %3, !dbg !12509
}

; alloc::boxed::Box<T,A>::from_raw_in
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17he7ab9b92841103baE"(ptr %raw.0, i32 %raw.1) unnamed_addr #2 !dbg !12510 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %raw.dbg.spill = alloca [8 x i8], align 4
  store ptr %raw.0, ptr %raw.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4
  store i32 %raw.1, ptr %0, align 4
    #dbg_declare(ptr %raw.dbg.spill, !12514, !DIExpression(), !12516)
    #dbg_declare(ptr %alloc.dbg.spill, !12515, !DIExpression(), !12517)
; call core::ptr::unique::Unique<T>::new_unchecked
  %1 = call { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc67d77b77d277900E"(ptr %raw.0, i32 %raw.1) #17, !dbg !12518
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12518
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12518
  %2 = insertvalue { ptr, i32 } poison, ptr %_3.0, 0, !dbg !12519
  %3 = insertvalue { ptr, i32 } %2, i32 %_3.1, 1, !dbg !12519
  ret { ptr, i32 } %3, !dbg !12519
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h23ea1f1b1169898dE"(ptr align 1 %b.0, i32 %b.1) unnamed_addr #2 !dbg !12520 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [8 x i8], align 4
  %b = alloca [8 x i8], align 4
  store ptr %b.0, ptr %b.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i32 4
  store i32 %b.1, ptr %0, align 4
    #dbg_declare(ptr %b.dbg.spill, !12528, !DIExpression(), !12540)
    #dbg_declare(ptr %b, !12529, !DIExpression(), !12541)
    #dbg_declare(ptr %alloc.dbg.spill, !12538, !DIExpression(), !12542)
  store ptr %b.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %b.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !12543, !DIExpression(), !12549)
  %2 = insertvalue { ptr, i32 } poison, ptr %b.0, 0, !dbg !12551
  %3 = insertvalue { ptr, i32 } %2, i32 %b.1, 1, !dbg !12551
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !12552
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !12552
  store ptr %4, ptr %b, align 4, !dbg !12552
  %6 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12552
  store i32 %5, ptr %6, align 4, !dbg !12552
  store ptr %b, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !12553, !DIExpression(), !12560)
  %_11.0 = load ptr, ptr %b, align 4, !dbg !12562
  %7 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12562
  %_11.1 = load i32, ptr %7, align 4, !dbg !12562
  store ptr %_11.0, ptr %ptr.dbg.spill, align 4, !dbg !12562
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !12562
  store i32 %_11.1, ptr %8, align 4, !dbg !12562
    #dbg_declare(ptr %ptr.dbg.spill, !12536, !DIExpression(), !12563)
  store ptr %b, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !12564, !DIExpression(), !12571)
  %_8 = getelementptr inbounds i8, ptr %b, i32 8, !dbg !12573
; call core::ptr::read
  call void @_ZN4core3ptr4read17ha6d8c5539f92df21E(ptr %_8, ptr align 4 @alloc_03f0a3bfed43164434711ad649aabe57) #17, !dbg !12574
  %9 = insertvalue { ptr, i32 } poison, ptr %_11.0, 0, !dbg !12575
  %10 = insertvalue { ptr, i32 } %9, i32 %_11.1, 1, !dbg !12575
  ret { ptr, i32 } %10, !dbg !12575
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c10f4d18f51a213E"(ptr align 1 %b.0, i32 %b.1) unnamed_addr #2 !dbg !12576 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [8 x i8], align 4
  %b = alloca [8 x i8], align 4
  store ptr %b.0, ptr %b.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i32 4
  store i32 %b.1, ptr %0, align 4
    #dbg_declare(ptr %b.dbg.spill, !12584, !DIExpression(), !12596)
    #dbg_declare(ptr %b, !12585, !DIExpression(), !12597)
    #dbg_declare(ptr %alloc.dbg.spill, !12594, !DIExpression(), !12598)
  store ptr %b.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %b.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !12599, !DIExpression(), !12605)
  %2 = insertvalue { ptr, i32 } poison, ptr %b.0, 0, !dbg !12607
  %3 = insertvalue { ptr, i32 } %2, i32 %b.1, 1, !dbg !12607
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !12608
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !12608
  store ptr %4, ptr %b, align 4, !dbg !12608
  %6 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12608
  store i32 %5, ptr %6, align 4, !dbg !12608
  store ptr %b, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !12609, !DIExpression(), !12616)
  %_11.0 = load ptr, ptr %b, align 4, !dbg !12618
  %7 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12618
  %_11.1 = load i32, ptr %7, align 4, !dbg !12618
  store ptr %_11.0, ptr %ptr.dbg.spill, align 4, !dbg !12618
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !12618
  store i32 %_11.1, ptr %8, align 4, !dbg !12618
    #dbg_declare(ptr %ptr.dbg.spill, !12592, !DIExpression(), !12619)
  store ptr %b, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !12620, !DIExpression(), !12627)
  %_8 = getelementptr inbounds i8, ptr %b, i32 8, !dbg !12629
; call core::ptr::read
  call void @_ZN4core3ptr4read17ha6d8c5539f92df21E(ptr %_8, ptr align 4 @alloc_03f0a3bfed43164434711ad649aabe57) #17, !dbg !12630
  %9 = insertvalue { ptr, i32 } poison, ptr %_11.0, 0, !dbg !12631
  %10 = insertvalue { ptr, i32 } %9, i32 %_11.1, 1, !dbg !12631
  ret { ptr, i32 } %10, !dbg !12631
}

; alloc::boxed::Box<T,A>::into_raw_with_allocator
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7fc5e096bbc1c6cbE"(ptr align 1 %b.0, i32 %b.1) unnamed_addr #2 !dbg !12632 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %b.dbg.spill = alloca [8 x i8], align 4
  %b = alloca [8 x i8], align 4
  store ptr %b.0, ptr %b.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %b.dbg.spill, i32 4
  store i32 %b.1, ptr %0, align 4
    #dbg_declare(ptr %b.dbg.spill, !12640, !DIExpression(), !12647)
    #dbg_declare(ptr %b, !12641, !DIExpression(), !12648)
    #dbg_declare(ptr %alloc.dbg.spill, !12645, !DIExpression(), !12649)
  store ptr %b.0, ptr %value.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store i32 %b.1, ptr %1, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !12418, !DIExpression(), !12650)
  %2 = insertvalue { ptr, i32 } poison, ptr %b.0, 0, !dbg !12652
  %3 = insertvalue { ptr, i32 } %2, i32 %b.1, 1, !dbg !12652
  %4 = extractvalue { ptr, i32 } %3, 0, !dbg !12653
  %5 = extractvalue { ptr, i32 } %3, 1, !dbg !12653
  store ptr %4, ptr %b, align 4, !dbg !12653
  %6 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12653
  store i32 %5, ptr %6, align 4, !dbg !12653
  store ptr %b, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !12428, !DIExpression(), !12654)
  %_11.0 = load ptr, ptr %b, align 4, !dbg !12656
  %7 = getelementptr inbounds i8, ptr %b, i32 4, !dbg !12656
  %_11.1 = load i32, ptr %7, align 4, !dbg !12656
  store ptr %_11.0, ptr %ptr.dbg.spill, align 4, !dbg !12656
  %8 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !12656
  store i32 %_11.1, ptr %8, align 4, !dbg !12656
    #dbg_declare(ptr %ptr.dbg.spill, !12643, !DIExpression(), !12657)
  store ptr %b, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !12658, !DIExpression(), !12665)
  %_8 = getelementptr inbounds i8, ptr %b, i32 8, !dbg !12667
; call core::ptr::read
  call void @_ZN4core3ptr4read17ha6d8c5539f92df21E(ptr %_8, ptr align 4 @alloc_03f0a3bfed43164434711ad649aabe57) #17, !dbg !12668
  %9 = insertvalue { ptr, i32 } poison, ptr %_11.0, 0, !dbg !12669
  %10 = insertvalue { ptr, i32 } %9, i32 %_11.1, 1, !dbg !12669
  ret { ptr, i32 } %10, !dbg !12669
}

; alloc::boxed::thin::WithHeader<H>::new_unsize_zst::max
; Function Attrs: nounwind
define dso_local i32 @"_ZN5alloc5boxed4thin19WithHeader$LT$H$GT$14new_unsize_zst3max17hb0c7cd31b4024adfE"(i32 %a, i32 %b) unnamed_addr #1 !dbg !12670 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %a.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %a, ptr %a.dbg.spill, align 4
    #dbg_declare(ptr %a.dbg.spill, !12676, !DIExpression(), !12678)
  store i32 %b, ptr %b.dbg.spill, align 4
    #dbg_declare(ptr %b.dbg.spill, !12677, !DIExpression(), !12679)
  %_3 = icmp ugt i32 %a, %b, !dbg !12680
  br i1 %_3, label %bb1, label %bb2, !dbg !12680

bb2:                                              ; preds = %start
  store i32 %b, ptr %_0, align 4, !dbg !12681
  br label %bb3, !dbg !12682

bb1:                                              ; preds = %start
  store i32 %a, ptr %_0, align 4, !dbg !12683
  br label %bb3, !dbg !12682

bb3:                                              ; preds = %bb1, %bb2
  %0 = load i32, ptr %_0, align 4, !dbg !12684
  ret i32 %0, !dbg !12684
}

; alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<T>],A>::assume_init
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h24e8cf368fce8da5E"(ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !12685 {
start:
  %raw.dbg.spill = alloca [8 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12690, !DIExpression(), !12694)
    #dbg_declare(ptr %alloc.dbg.spill, !12693, !DIExpression(), !12695)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c10f4d18f51a213E"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !12696
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12696
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12696
  store ptr %_4.0, ptr %raw.dbg.spill, align 4, !dbg !12697
  %2 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4, !dbg !12697
  store i32 %_4.1, ptr %2, align 4, !dbg !12697
    #dbg_declare(ptr %raw.dbg.spill, !12691, !DIExpression(), !12698)
; call alloc::boxed::Box<T,A>::from_raw_in
  %3 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17he7ab9b92841103baE"(ptr %_4.0, i32 %_4.1) #17, !dbg !12699
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !12699
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !12699
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12700
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !12700
  ret { ptr, i32 } %5, !dbg !12700
}

; alloc::boxed::convert::<impl core::convert::From<&[T]> for alloc::boxed::Box<[T]>>::from
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17h1a1cbdc56ea64e36E"(ptr align 1 %slice.0, i32 %slice.1) unnamed_addr #2 !dbg !12701 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  store ptr %slice.0, ptr %slice.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4
  store i32 %slice.1, ptr %0, align 4
    #dbg_declare(ptr %slice.dbg.spill, !12704, !DIExpression(), !12705)
; call <alloc::boxed::Box<[T]> as alloc::boxed::convert::BoxFromSlice<T>>::from_slice
  %1 = call { ptr, i32 } @"_ZN101_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..boxed..convert..BoxFromSlice$LT$T$GT$$GT$10from_slice17h9febee8fa02ab093E"(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !12706
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12706
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12706
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12707
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !12707
  ret { ptr, i32 } %3, !dbg !12707
}

; alloc::boxed::convert::<impl core::convert::From<&str> for alloc::boxed::Box<dyn core::error::Error>>::from
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert116_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h04b5050cfb035ec9E"(ptr align 1 %err.0, i32 %err.1) unnamed_addr #1 !dbg !12708 {
start:
  %err.dbg.spill = alloca [8 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %err.0, ptr %err.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4
  store i32 %err.1, ptr %0, align 4
    #dbg_declare(ptr %err.dbg.spill, !12717, !DIExpression(), !12718)
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hae2059870cb2adf7E"(ptr sret([12 x i8]) align 4 %_2, ptr align 1 %err.0, i32 %err.1) #17, !dbg !12719
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error>>::from
  %1 = call { ptr, ptr } @"_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h75a3876f3b78fba8E"(ptr align 4 %_2) #17, !dbg !12720
  %_0.0 = extractvalue { ptr, ptr } %1, 0, !dbg !12720
  %_0.1 = extractvalue { ptr, ptr } %1, 1, !dbg !12720
  %2 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !12721
  %3 = insertvalue { ptr, ptr } %2, ptr %_0.1, 1, !dbg !12721
  ret { ptr, ptr } %3, !dbg !12721
}

; alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error>>::from
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h75a3876f3b78fba8E"(ptr align 4 %str_err) unnamed_addr #1 !dbg !12722 {
start:
  %err2.dbg.spill = alloca [8 x i8], align 4, !dbg !12738
  %err1.dbg.spill = alloca [8 x i8], align 4, !dbg !12738
    #dbg_declare(ptr %str_err, !12727, !DIExpression(), !12739)
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
  %0 = call { ptr, ptr } @"_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h20b1cb757739a899E"(ptr align 4 %str_err) #17, !dbg !12738
  %err1.0 = extractvalue { ptr, ptr } %0, 0, !dbg !12738
  %err1.1 = extractvalue { ptr, ptr } %0, 1, !dbg !12738
  store ptr %err1.0, ptr %err1.dbg.spill, align 4, !dbg !12738
  %1 = getelementptr inbounds i8, ptr %err1.dbg.spill, i32 4, !dbg !12738
  store ptr %err1.1, ptr %1, align 4, !dbg !12738
    #dbg_declare(ptr %err1.dbg.spill, !12728, !DIExpression(), !12740)
  store ptr %err1.0, ptr %err2.dbg.spill, align 4, !dbg !12741
  %2 = getelementptr inbounds i8, ptr %err2.dbg.spill, i32 4, !dbg !12741
  store ptr %err1.1, ptr %2, align 4, !dbg !12741
    #dbg_declare(ptr %err2.dbg.spill, !12736, !DIExpression(), !12742)
  %3 = insertvalue { ptr, ptr } poison, ptr %err1.0, 0, !dbg !12743
  %4 = insertvalue { ptr, ptr } %3, ptr %err1.1, 1, !dbg !12743
  ret { ptr, ptr } %4, !dbg !12743
}

; alloc::boxed::convert::<impl core::convert::From<alloc::boxed::Box<str,A>> for alloc::boxed::Box<[u8],A>>::from
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN5alloc5boxed7convert131_$LT$impl$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$GT$4from17h0c8b806982e781b7E"(ptr align 1 %s.0, i32 %s.1) unnamed_addr #2 !dbg !12744 {
start:
  %raw.dbg.spill = alloca [8 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !12749, !DIExpression(), !12753)
    #dbg_declare(ptr %alloc.dbg.spill, !12752, !DIExpression(), !12754)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h23ea1f1b1169898dE"(ptr align 1 %s.0, i32 %s.1) #17, !dbg !12755
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12755
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12755
  store ptr %_4.0, ptr %raw.dbg.spill, align 4, !dbg !12756
  %2 = getelementptr inbounds i8, ptr %raw.dbg.spill, i32 4, !dbg !12756
  store i32 %_4.1, ptr %2, align 4, !dbg !12756
    #dbg_declare(ptr %raw.dbg.spill, !12750, !DIExpression(), !12757)
; call alloc::boxed::Box<T,A>::from_raw_in
  %3 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17he7ab9b92841103baE"(ptr %_4.0, i32 %_4.1) #17, !dbg !12758
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !12758
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !12758
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12759
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !12759
  ret { ptr, i32 } %5, !dbg !12759
}

; alloc::boxed::convert::<impl core::convert::From<alloc::borrow::Cow<str>> for alloc::boxed::Box<dyn core::error::Error>>::from
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert138_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h99c11f03f4d0f933E"(ptr align 4 %err) unnamed_addr #1 !dbg !12760 {
start:
  %_2 = alloca [12 x i8], align 4
    #dbg_declare(ptr %err, !12765, !DIExpression(), !12766)
; call <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
  call void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h81ac7640eae102aaE"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %err) #17, !dbg !12767
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error>>::from
  %0 = call { ptr, ptr } @"_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h75a3876f3b78fba8E"(ptr align 4 %_2) #17, !dbg !12768
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !12768
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !12768
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !12769
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !12769
  ret { ptr, ptr } %2, !dbg !12769
}

; alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
; Function Attrs: inlinehint nounwind
define internal { ptr, ptr } @"_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h20b1cb757739a899E"(ptr align 4 %err) unnamed_addr #2 !dbg !12770 {
start:
  %_3 = alloca [12 x i8], align 4
    #dbg_declare(ptr %err, !12774, !DIExpression(), !12775)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %err, i32 12, i1 false), !dbg !12776
    #dbg_declare(ptr %_3, !12777, !DIExpression(), !12784)
; call alloc::alloc::exchange_malloc
  %_4.i = call ptr @_ZN5alloc5alloc15exchange_malloc17h6d84c5d751dea1cdE(i32 12, i32 4) #17, !dbg !12786
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_4.i, ptr align 4 %_3, i32 12, i1 false), !dbg !12787
  %0 = insertvalue { ptr, ptr } poison, ptr %_4.i, 0, !dbg !12788
  %1 = insertvalue { ptr, ptr } %0, ptr @vtable.5, 1, !dbg !12788
  ret { ptr, ptr } %1, !dbg !12788
}

; alloc::boxed::convert::<impl core::convert::From<alloc::borrow::Cow<str>> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN5alloc5boxed7convert184_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17hde56fe332e1cd8caE"(ptr align 4 %err) unnamed_addr #1 !dbg !12789 {
start:
  %_2 = alloca [12 x i8], align 4
    #dbg_declare(ptr %err, !12794, !DIExpression(), !12795)
; call <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
  call void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h81ac7640eae102aaE"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %err) #17, !dbg !12796
; call alloc::boxed::convert::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<dyn core::error::Error+core::marker::Sync+core::marker::Send>>::from
  %0 = call { ptr, ptr } @"_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h20b1cb757739a899E"(ptr align 4 %_2) #17, !dbg !12797
  %_0.0 = extractvalue { ptr, ptr } %0, 0, !dbg !12797
  %_0.1 = extractvalue { ptr, ptr } %0, 1, !dbg !12797
  %1 = insertvalue { ptr, ptr } poison, ptr %_0.0, 0, !dbg !12798
  %2 = insertvalue { ptr, ptr } %1, ptr %_0.1, 1, !dbg !12798
  ret { ptr, ptr } %2, !dbg !12798
}

; alloc::slice::<impl [T]>::to_vec
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hb62a9abc9ced4c0cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !12799 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12806, !DIExpression(), !12807)
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h28c6456b20ddb617E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) #17, !dbg !12808
  ret void, !dbg !12809
}

; alloc::slice::<impl [T]>::into_vec
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h40445ef263cfe410E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !12810 {
start:
  %b.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12814, !DIExpression(), !12820)
    #dbg_declare(ptr %alloc.dbg.spill, !12819, !DIExpression(), !12821)
  store i32 %self.1, ptr %len.dbg.spill, align 4, !dbg !12822
    #dbg_declare(ptr %len.dbg.spill, !12815, !DIExpression(), !12823)
; call alloc::boxed::Box<T,A>::into_raw_with_allocator
  %1 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7fc5e096bbc1c6cbE"(ptr align 1 %self.0, i32 %self.1) #17, !dbg !12824
  %_6.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12824
  %_6.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12824
  store ptr %_6.0, ptr %b.dbg.spill, align 4, !dbg !12825
  %2 = getelementptr inbounds i8, ptr %b.dbg.spill, i32 4, !dbg !12825
  store i32 %_6.1, ptr %2, align 4, !dbg !12825
    #dbg_declare(ptr %b.dbg.spill, !12817, !DIExpression(), !12826)
; call alloc::vec::Vec<T,A>::from_raw_parts_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17h5c0a2620d4516e37E"(ptr sret([12 x i8]) align 4 %_0, ptr %_6.0, i32 %self.1, i32 %self.1) #17, !dbg !12827
  ret void, !dbg !12828
}

; alloc::slice::<impl [T]>::to_vec_in
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h28c6456b20ddb617E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #2 !dbg !12829 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12833, !DIExpression(), !12835)
    #dbg_declare(ptr %alloc.dbg.spill, !12834, !DIExpression(), !12836)
; call <T as alloc::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec
  call void @"_ZN87_$LT$T$u20$as$u20$alloc..slice..$LT$impl$u20$$u5b$T$u5d$$GT$..to_vec_in..ConvertVec$GT$6to_vec17h404e4d3e53fbdaa2E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) #17, !dbg !12837
  ret void, !dbg !12838
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::clone_into
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17h77f52a6af8cf214eE"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %target) unnamed_addr #1 !dbg !12839 {
start:
  %target.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12844, !DIExpression(), !12846)
  store ptr %target, ptr %target.dbg.spill, align 4
    #dbg_declare(ptr %target.dbg.spill, !12845, !DIExpression(), !12847)
; call <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
  call void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h0c90bb795dd72c5eE"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %target) #17, !dbg !12848
  ret void, !dbg !12849
}

; alloc::slice::<impl alloc::borrow::ToOwned for [T]>::to_owned
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17he3cbfef68a0c3d3cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !12850 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !12852, !DIExpression(), !12853)
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hb62a9abc9ced4c0cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) #17, !dbg !12854
  ret void, !dbg !12855
}

; alloc::borrow::Cow<B>::into_owned
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17h5ba4078f80625fc6E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !12856 {
start:
  %borrowed.dbg.spill = alloca [8 x i8], align 4
  %owned = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !12862, !DIExpression(), !12867)
    #dbg_declare(ptr %owned, !12865, !DIExpression(), !12868)
  %0 = load i32, ptr %self, align 4, !dbg !12869
  %1 = icmp eq i32 %0, -2147483648, !dbg !12869
  %_2 = select i1 %1, i32 0, i32 1, !dbg !12869
  %2 = trunc nuw i32 %_2 to i1, !dbg !12870
  br i1 %2, label %bb2, label %bb3, !dbg !12870

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %owned, ptr align 4 %self, i32 12, i1 false), !dbg !12871
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %owned, i32 12, i1 false), !dbg !12872
  br label %bb4, !dbg !12873

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12874
  %borrowed.0 = load ptr, ptr %3, align 4, !dbg !12874
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !12874
  %borrowed.1 = load i32, ptr %4, align 4, !dbg !12874
  store ptr %borrowed.0, ptr %borrowed.dbg.spill, align 4, !dbg !12874
  %5 = getelementptr inbounds i8, ptr %borrowed.dbg.spill, i32 4, !dbg !12874
  store i32 %borrowed.1, ptr %5, align 4, !dbg !12874
    #dbg_declare(ptr %borrowed.dbg.spill, !12863, !DIExpression(), !12875)
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hb794441537176e61E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %borrowed.0, i32 %borrowed.1) #17, !dbg !12876
  br label %bb4, !dbg !12876

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !12877

bb1:                                              ; No predecessors!
  unreachable, !dbg !12869
}

; alloc::borrow::Cow<B>::to_mut
; Function Attrs: nounwind
define dso_local align 4 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h9468a62c9c14f9d5E"(ptr align 4 %self) unnamed_addr #1 !dbg !12878 {
start:
  %owned.dbg.spill1 = alloca [4 x i8], align 4
  %owned.dbg.spill = alloca [4 x i8], align 4
  %borrowed.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %_2 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12884, !DIExpression(), !12891)
  %0 = load i32, ptr %self, align 4, !dbg !12892
  %1 = icmp eq i32 %0, -2147483648, !dbg !12892
  %_3 = select i1 %1, i32 0, i32 1, !dbg !12892
  %2 = trunc nuw i32 %_3 to i1, !dbg !12893
  br i1 %2, label %bb2, label %bb3, !dbg !12893

bb2:                                              ; preds = %start
  store ptr %self, ptr %owned.dbg.spill1, align 4, !dbg !12894
    #dbg_declare(ptr %owned.dbg.spill1, !12889, !DIExpression(), !12895)
  store ptr %self, ptr %_2, align 4, !dbg !12896
  br label %bb8, !dbg !12897

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !12898
  %borrowed.0 = load ptr, ptr %3, align 4, !dbg !12898
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !12898
  %borrowed.1 = load i32, ptr %4, align 4, !dbg !12898
  store ptr %borrowed.0, ptr %borrowed.dbg.spill, align 4, !dbg !12898
  %5 = getelementptr inbounds i8, ptr %borrowed.dbg.spill, i32 4, !dbg !12898
  store i32 %borrowed.1, ptr %5, align 4, !dbg !12898
    #dbg_declare(ptr %borrowed.dbg.spill, !12885, !DIExpression(), !12899)
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hb794441537176e61E"(ptr sret([12 x i8]) align 4 %_6, ptr align 1 %borrowed.0, i32 %borrowed.1) #17, !dbg !12900
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_5, ptr align 4 %_6, i32 12, i1 false), !dbg !12901
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E"(ptr align 4 %self) #17, !dbg !12902
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_5, i32 12, i1 false), !dbg !12902
  %6 = load i32, ptr %self, align 4, !dbg !12903
  %7 = icmp eq i32 %6, -2147483648, !dbg !12903
  %_7 = select i1 %7, i32 0, i32 1, !dbg !12903
  %8 = trunc nuw i32 %_7 to i1, !dbg !12904
  br i1 %8, label %bb6, label %bb7, !dbg !12904

bb6:                                              ; preds = %bb3
  store ptr %self, ptr %owned.dbg.spill, align 4, !dbg !12905
    #dbg_declare(ptr %owned.dbg.spill, !12887, !DIExpression(), !12906)
  store ptr %self, ptr %_2, align 4, !dbg !12904
  br label %bb8, !dbg !12907

bb7:                                              ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_a500d906b91607583596fa15e63c2ada, i32 40, ptr align 4 @alloc_dee026938b817d7ae01348a118bc631f) #18, !dbg !12908
  unreachable, !dbg !12908

bb8:                                              ; preds = %bb2, %bb6
  %_0 = load ptr, ptr %_2, align 4, !dbg !12893
  ret ptr %_0, !dbg !12909

bb1:                                              ; No predecessors!
  unreachable, !dbg !12910
}

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::vec::Vec<u8>>::from
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17hd506371fca7a71d3E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %string) unnamed_addr #1 !dbg !12912 {
start:
    #dbg_declare(ptr %string, !12917, !DIExpression(), !12918)
; call alloc::string::String::into_bytes
  call void @_ZN5alloc6string6String10into_bytes17h0f639dae8a5a39abE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %string) #17, !dbg !12919
  ret void, !dbg !12920
}

; alloc::string::<impl core::convert::From<alloc::string::String> for alloc::boxed::Box<str>>::from
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc6string107_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$str$GT$$GT$4from17ha1d33695b30d6bc1E"(ptr align 4 %s) unnamed_addr #1 !dbg !12921 {
start:
    #dbg_declare(ptr %s, !12926, !DIExpression(), !12927)
; call alloc::string::String::into_boxed_str
  %0 = call { ptr, i32 } @_ZN5alloc6string6String14into_boxed_str17h6e07c05869a521b2E(ptr align 4 %s) #17, !dbg !12928
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !12928
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !12928
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !12929
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !12929
  ret { ptr, i32 } %2, !dbg !12929
}

; alloc::string::FromUtf8Error::into_bytes
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string13FromUtf8Error10into_bytes17hda8fda9cd1c911e7E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !12930 {
start:
    #dbg_declare(ptr %self, !12935, !DIExpression(), !12936)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !12937
  ret void, !dbg !12938
}

; alloc::string::FromUtf8Error::utf8_error
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string13FromUtf8Error10utf8_error17h48509d57271b9f9aE(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !12939 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !12945, !DIExpression(), !12946)
  %0 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !12947
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %0, i32 8, i1 false), !dbg !12947
  ret void, !dbg !12948
}

; alloc::string::FromUtf8Error::into_utf8_lossy
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string13FromUtf8Error15into_utf8_lossy17h74c007d867a78b61E(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !12949 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  %chunk = alloca [16 x i8], align 4
  %_22 = alloca [16 x i8], align 4
  %iter = alloca [8 x i8], align 4
  %_13 = alloca [12 x i8], align 4
  %v = alloca [12 x i8], align 4
  %res = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !12954, !DIExpression(), !12973)
    #dbg_declare(ptr %res, !12955, !DIExpression(), !12974)
    #dbg_declare(ptr %v, !12957, !DIExpression(), !12975)
    #dbg_declare(ptr %iter, !12965, !DIExpression(), !12976)
    #dbg_declare(ptr %chunk, !12967, !DIExpression(), !12977)
; call alloc::vec::Vec<T,A>::len
  %_4 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %self) #17, !dbg !12978
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %v, i32 %_4) #17, !dbg !12979
  %_12 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !12980
; call core::str::error::Utf8Error::valid_up_to
  %_11 = call i32 @_ZN4core3str5error9Utf8Error11valid_up_to17h319ff214de48af79E(ptr align 4 %_12) #17, !dbg !12981
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i32 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h261936e3caf15c2cE"(ptr align 4 %self, i32 %_11, ptr align 4 @alloc_d7ae68d7cffc005973d10e2bcb8b6f8b) #17, !dbg !12982
  %_8.0 = extractvalue { ptr, i32 } %0, 0, !dbg !12982
  %_8.1 = extractvalue { ptr, i32 } %0, 1, !dbg !12982
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %v, ptr align 1 %_8.0, i32 %_8.1) #17, !dbg !12983
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_13, ptr align 4 %v, i32 12, i1 false), !dbg !12984
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %res, ptr align 4 %_13) #17, !dbg !12985
  %_19 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !12986
; call core::str::error::Utf8Error::valid_up_to
  %_18 = call i32 @_ZN4core3str5error9Utf8Error11valid_up_to17h319ff214de48af79E(ptr align 4 %_19) #17, !dbg !12987
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %1 = call { ptr, i32 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h50aa872ae619f839E"(ptr align 4 %self, i32 %_18, ptr align 4 @alloc_237ded3d6ab66689aff59f9a6d8b968e) #17, !dbg !12988
  %_15.0 = extractvalue { ptr, i32 } %1, 0, !dbg !12988
  %_15.1 = extractvalue { ptr, i32 } %1, 1, !dbg !12988
; call core::str::lossy::<impl [u8]>::utf8_chunks
  %2 = call { ptr, i32 } @"_ZN4core3str5lossy30_$LT$impl$u20$$u5b$u8$u5d$$GT$11utf8_chunks17h134c70f227283c36E"(ptr align 1 %_15.0, i32 %_15.1) #17, !dbg !12989
  %iter.0 = extractvalue { ptr, i32 } %2, 0, !dbg !12989
  %iter.1 = extractvalue { ptr, i32 } %2, 1, !dbg !12989
  store ptr %iter.0, ptr %iter.dbg.spill, align 4, !dbg !12989
  %3 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4, !dbg !12989
  store i32 %iter.1, ptr %3, align 4, !dbg !12989
    #dbg_declare(ptr %iter.dbg.spill, !12959, !DIExpression(), !12990)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %4 = call { ptr, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h73bdb64ae7130ef2E"(ptr align 1 %iter.0, i32 %iter.1) #17, !dbg !12991
  %_20.0 = extractvalue { ptr, i32 } %4, 0, !dbg !12991
  %_20.1 = extractvalue { ptr, i32 } %4, 1, !dbg !12991
  store ptr %_20.0, ptr %iter, align 4, !dbg !12991
  %5 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !12991
  store i32 %_20.1, ptr %5, align 4, !dbg !12991
  br label %bb11, !dbg !12992

bb11:                                             ; preds = %bb20, %bb14, %start
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h449d883e31926a09E"(ptr sret([16 x i8]) align 4 %_22, ptr align 4 %iter) #17, !dbg !12976
  %6 = load ptr, ptr %_22, align 4, !dbg !12976
  %7 = ptrtoint ptr %6 to i32, !dbg !12976
  %8 = icmp eq i32 %7, 0, !dbg !12976
  %_24 = select i1 %8, i32 0, i32 1, !dbg !12976
  %9 = trunc nuw i32 %_24 to i1, !dbg !12976
  br i1 %9, label %bb14, label %bb15, !dbg !12976

bb14:                                             ; preds = %bb11
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %chunk, ptr align 4 %_22, i32 16, i1 false), !dbg !12993
; call core::str::lossy::Utf8Chunk::valid
  %10 = call { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk5valid17ha1f3ac46c2163617E(ptr align 4 %chunk) #17, !dbg !12994
  %_28.0 = extractvalue { ptr, i32 } %10, 0, !dbg !12994
  %_28.1 = extractvalue { ptr, i32 } %10, 1, !dbg !12994
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %res, ptr align 1 %_28.0, i32 %_28.1) #17, !dbg !12995
; call core::str::lossy::Utf8Chunk::invalid
  %11 = call { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h0e8fc705bc557240E(ptr align 4 %chunk) #17, !dbg !12996
  %_31.0 = extractvalue { ptr, i32 } %11, 0, !dbg !12996
  %_31.1 = extractvalue { ptr, i32 } %11, 1, !dbg !12996
; call core::slice::<impl [T]>::is_empty
  %_30 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %_31.0, i32 %_31.1) #17, !dbg !12997
  br i1 %_30, label %bb11, label %bb20, !dbg !12998

bb15:                                             ; preds = %bb11
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %res, i32 12, i1 false), !dbg !12999
; call core::ptr::drop_in_place<alloc::string::FromUtf8Error>
  call void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h60f3530100380f94E"(ptr align 4 %self) #17, !dbg !13000
  ret void, !dbg !13001

bb20:                                             ; preds = %bb14
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %res, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3) #17, !dbg !13002
  br label %bb11, !dbg !13002

bb13:                                             ; No predecessors!
  unreachable, !dbg !12976
}

; alloc::string::FromUtf8Error::as_bytes
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc6string13FromUtf8Error8as_bytes17h937858138447444eE(ptr align 4 %self) unnamed_addr #1 !dbg !13003 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13008, !DIExpression(), !13009)
; call <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
  %0 = call { ptr, i32 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h21b98dc1e8dac725E"(ptr align 4 %self, ptr align 4 @alloc_d39863205a80b44e0d66b0e678ebc8ae) #17, !dbg !13010
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !13010
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !13010
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !13011
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !13011
  ret { ptr, i32 } %2, !dbg !13011
}

; alloc::string::Drain::as_str
; Function Attrs: nounwind
define dso_local { ptr, i32 } @_ZN5alloc6string5Drain6as_str17he2aaed28f3bd3c11E(ptr align 4 %self) unnamed_addr #1 !dbg !13012 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13017, !DIExpression(), !13018)
; call core::str::iter::Chars::as_str
  %0 = call { ptr, i32 } @_ZN4core3str4iter5Chars6as_str17h4fa41a383d1b5080E(ptr align 4 %self) #17, !dbg !13019
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !13019
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !13019
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !13020
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !13020
  ret { ptr, i32 } %2, !dbg !13020
}

; alloc::string::String::as_mut_vec
; Function Attrs: inlinehint nounwind
define internal align 4 ptr @_ZN5alloc6string6String10as_mut_vec17hf4a1d5b5c8f12214E(ptr align 4 %self) unnamed_addr #2 !dbg !13021 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13026, !DIExpression(), !13027)
  ret ptr %self, !dbg !13028
}

; alloc::string::String::from_utf16
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String10from_utf1617h7b854ec6ef45042bE(ptr sret([12 x i8]) align 4 %_0, ptr align 2 %v.0, i32 %v.1) unnamed_addr #1 !dbg !13029 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  %_17 = alloca [12 x i8], align 4
  %c = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %iter = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %ret = alloca [12 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !13034, !DIExpression(), !13043)
    #dbg_declare(ptr %ret, !13035, !DIExpression(), !13044)
    #dbg_declare(ptr %iter, !13037, !DIExpression(), !13045)
    #dbg_declare(ptr %c, !13039, !DIExpression(), !13046)
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE(ptr sret([12 x i8]) align 4 %ret, i32 %v.1) #17, !dbg !13047
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbadac3e2abbd3b18E"(ptr align 2 %v.0, i32 %v.1) #17, !dbg !13048
  %_7.0 = extractvalue { ptr, ptr } %1, 0, !dbg !13048
  %_7.1 = extractvalue { ptr, ptr } %1, 1, !dbg !13048
; call core::iter::traits::iterator::Iterator::cloned
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17hafc97ffc625f8677E(ptr %_7.0, ptr %_7.1) #17, !dbg !13049
  %_6.0 = extractvalue { ptr, ptr } %2, 0, !dbg !13049
  %_6.1 = extractvalue { ptr, ptr } %2, 1, !dbg !13049
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h5020acdbefe335aeE"(ptr sret([12 x i8]) align 4 %_5, ptr %_6.0, ptr %_6.1) #17, !dbg !13050
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h79a45a5431d99095E"(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %_5) #17, !dbg !13050
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %iter, ptr align 4 %_4, i32 12, i1 false), !dbg !13050
  br label %bb6, !dbg !13051

bb6:                                              ; preds = %bb11, %start
; call <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a098f8c0f59bfb3E"(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %iter) #17, !dbg !13045
  %3 = load i16, ptr %_9, align 4, !dbg !13045
  %4 = icmp eq i16 %3, 2, !dbg !13045
  %_11 = select i1 %4, i32 0, i32 1, !dbg !13045
  %5 = trunc nuw i32 %_11 to i1, !dbg !13045
  br i1 %5, label %bb9, label %bb10, !dbg !13045

bb9:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %c, ptr align 4 %_9, i32 8, i1 false), !dbg !13052
  %6 = load i16, ptr %c, align 4, !dbg !13053
  %_13 = zext i16 %6 to i32, !dbg !13053
  %7 = trunc nuw i32 %_13 to i1, !dbg !13054
  br i1 %7, label %bb12, label %bb11, !dbg !13054

bb10:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_17, ptr align 4 %ret, i32 12, i1 false), !dbg !13055
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_17, i32 12, i1 false), !dbg !13056
  br label %bb13, !dbg !13057

bb13:                                             ; preds = %bb12, %bb10
  ret void, !dbg !13057

bb12:                                             ; preds = %bb9
  store i32 -2147483648, ptr %_0, align 4, !dbg !13058
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE"(ptr align 4 %ret) #17, !dbg !13059
  br label %bb13, !dbg !13059

bb11:                                             ; preds = %bb9
  %8 = getelementptr inbounds i8, ptr %c, i32 4, !dbg !13060
  %c1 = load i32, ptr %8, align 4, !dbg !13060
  store i32 %c1, ptr %c.dbg.spill, align 4, !dbg !13060
    #dbg_declare(ptr %c.dbg.spill, !13041, !DIExpression(), !13060)
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %ret, i32 %c1) #17, !dbg !13061
  br label %bb6, !dbg !13061

bb8:                                              ; No predecessors!
  unreachable, !dbg !13045
}

; alloc::string::String::into_bytes
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String10into_bytes17h0f639dae8a5a39abE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !13062 {
start:
    #dbg_declare(ptr %self, !13065, !DIExpression(), !13066)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !13067
  ret void, !dbg !13068
}

; alloc::string::String::try_reserve
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN5alloc6string6String11try_reserve17hc3c9e18c6d21984eE(ptr align 4 %self, i32 %additional) unnamed_addr #1 !dbg !13069 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13074, !DIExpression(), !13076)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13075, !DIExpression(), !13077)
; call alloc::vec::Vec<T,A>::try_reserve
  %0 = call { i32, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h1eb4e013042aec4aE"(ptr align 4 %self, i32 %additional) #17, !dbg !13078
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !13078
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !13078
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !13079
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !13079
  ret { i32, i32 } %2, !dbg !13079
}

; alloc::string::String::from_utf16be
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String12from_utf16be17h10415554e5f0a8d0E(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %v.0, i32 %v.1) unnamed_addr #1 !dbg !13080 {
start:
  %v.dbg.spill3 = alloca [8 x i8], align 4
  %chunks.dbg.spill = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  %_14 = alloca [12 x i8], align 4
  %_13 = alloca [12 x i8], align 4
  %_7 = alloca [24 x i8], align 4
  %_6 = alloca [28 x i8], align 4
  %_3 = alloca [16 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !13085, !DIExpression(), !13090)
; call core::slice::<impl [T]>::as_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17hd0a4c83639f3e067E"(ptr sret([16 x i8]) align 4 %_3, ptr align 1 %v.0, i32 %v.1, ptr align 4 @alloc_54b619326b005b99896b638de9b98fb8) #17, !dbg !13091
  %1 = getelementptr inbounds i8, ptr %_3, i32 8, !dbg !13092
  %_18.0 = load ptr, ptr %1, align 4, !dbg !13092
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !13092
  %_18.1 = load i32, ptr %2, align 4, !dbg !13092
  %3 = icmp eq i32 %_18.1, 0, !dbg !13092
  br i1 %3, label %bb2, label %bb3, !dbg !13092

bb2:                                              ; preds = %start
  %chunks.0 = load ptr, ptr %_3, align 4, !dbg !13093
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13093
  %chunks.1 = load i32, ptr %4, align 4, !dbg !13093
  store ptr %chunks.0, ptr %chunks.dbg.spill, align 4, !dbg !13093
  %5 = getelementptr inbounds i8, ptr %chunks.dbg.spill, i32 4, !dbg !13093
  store i32 %chunks.1, ptr %5, align 4, !dbg !13093
    #dbg_declare(ptr %chunks.dbg.spill, !13086, !DIExpression(), !13094)
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17hebffc43b8ef6e788E"(ptr sret([24 x i8]) align 4 %_7, ptr align 1 %v.0, i32 %v.1) #17, !dbg !13095
  store i8 0, ptr %_6, align 4, !dbg !13096
  %6 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13096
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %6, ptr align 4 %_7, i32 24, i1 false), !dbg !13096
  %7 = load i8, ptr %_6, align 4, !dbg !13097
  %8 = trunc nuw i8 %7 to i1, !dbg !13097
  br i1 %8, label %bb6, label %bb5, !dbg !13097

bb3:                                              ; preds = %start
  store i32 -2147483648, ptr %_0, align 4, !dbg !13098
  br label %bb14, !dbg !13099

bb5:                                              ; preds = %bb7, %bb6, %bb2
; call core::slice::<impl [T]>::iter
  %9 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1d6c4e206d8f8bc2E"(ptr align 1 %chunks.0, i32 %chunks.1) #17, !dbg !13100
  %_17.0 = extractvalue { ptr, ptr } %9, 0, !dbg !13100
  %_17.1 = extractvalue { ptr, ptr } %9, 1, !dbg !13100
; call core::iter::traits::iterator::Iterator::copied
  %10 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6copied17h4c1953df581c139cE(ptr %_17.0, ptr %_17.1) #17, !dbg !13101
  %_16.0 = extractvalue { ptr, ptr } %10, 0, !dbg !13101
  %_16.1 = extractvalue { ptr, ptr } %10, 1, !dbg !13101
; call core::iter::traits::iterator::Iterator::map
  %11 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h1a3302aedb79ddd0E(ptr %_16.0, ptr %_16.1) #17, !dbg !13102
  %_15.0 = extractvalue { ptr, ptr } %11, 0, !dbg !13102
  %_15.1 = extractvalue { ptr, ptr } %11, 1, !dbg !13102
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617he542c089b93c4231E"(ptr sret([12 x i8]) align 4 %_14, ptr %_15.0, ptr %_15.1) #17, !dbg !13103
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h95e39428dc266a7cE(ptr sret([12 x i8]) align 4 %_13, ptr align 4 %_14) #17, !dbg !13104
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9dc848eac107c796E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_13) #17, !dbg !13105
  br label %bb14, !dbg !13105

bb6:                                              ; preds = %bb2
  %12 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13106
  %_19.0 = load ptr, ptr %12, align 4, !dbg !13106
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !13106
  %_19.1 = load i32, ptr %13, align 4, !dbg !13106
  %14 = icmp eq i32 %_19.1, 0, !dbg !13106
  br i1 %14, label %bb7, label %bb5, !dbg !13106

bb7:                                              ; preds = %bb6
  %15 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13107
  %16 = getelementptr inbounds i8, ptr %15, i32 16, !dbg !13107
  %_20.0 = load ptr, ptr %16, align 4, !dbg !13107
  %17 = getelementptr inbounds i8, ptr %16, i32 4, !dbg !13107
  %_20.1 = load i32, ptr %17, align 4, !dbg !13107
  %18 = icmp eq i32 %_20.1, 0, !dbg !13107
  br i1 %18, label %bb8, label %bb5, !dbg !13107

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13108
  %20 = getelementptr inbounds i8, ptr %19, i32 8, !dbg !13108
  %v.01 = load ptr, ptr %20, align 4, !dbg !13108
  %21 = getelementptr inbounds i8, ptr %20, i32 4, !dbg !13108
  %v.12 = load i32, ptr %21, align 4, !dbg !13108
  store ptr %v.01, ptr %v.dbg.spill3, align 4, !dbg !13108
  %22 = getelementptr inbounds i8, ptr %v.dbg.spill3, i32 4, !dbg !13108
  store i32 %v.12, ptr %22, align 4, !dbg !13108
    #dbg_declare(ptr %v.dbg.spill3, !13088, !DIExpression(), !13109)
; call alloc::string::String::from_utf16
  call void @_ZN5alloc6string6String10from_utf1617h7b854ec6ef45042bE(ptr sret([12 x i8]) align 4 %_0, ptr align 2 %v.01, i32 %v.12) #17, !dbg !13110
  br label %bb14, !dbg !13110

bb14:                                             ; preds = %bb3, %bb5, %bb8
  ret void, !dbg !13111
}

; alloc::string::String::from_utf16be::{{closure}}
; Function Attrs: inlinehint nounwind
define internal void @"_ZN5alloc6string6String12from_utf16be28_$u7b$$u7b$closure$u7d$$u7d$17hd716dae50148b655E"(i16 %_2) unnamed_addr #2 !dbg !13112 {
start:
  %_2.dbg.spill = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !13116, !DIExpression(), !13118)
  store i16 %_2, ptr %_2.dbg.spill, align 2
    #dbg_declare(ptr %_2.dbg.spill, !13117, !DIExpression(), !13119)
  ret void, !dbg !13120
}

; alloc::string::String::from_utf16le
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String12from_utf16le17h9f465092e351096cE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %v.0, i32 %v.1) unnamed_addr #1 !dbg !13121 {
start:
  %v.dbg.spill3 = alloca [8 x i8], align 4
  %chunks.dbg.spill = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  %_14 = alloca [12 x i8], align 4
  %_13 = alloca [12 x i8], align 4
  %_7 = alloca [24 x i8], align 4
  %_6 = alloca [28 x i8], align 4
  %_3 = alloca [16 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !13124, !DIExpression(), !13129)
; call core::slice::<impl [T]>::as_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17hd0a4c83639f3e067E"(ptr sret([16 x i8]) align 4 %_3, ptr align 1 %v.0, i32 %v.1, ptr align 4 @alloc_99e4c9794a17692c3237bd9c103840f4) #17, !dbg !13130
  %1 = getelementptr inbounds i8, ptr %_3, i32 8, !dbg !13131
  %_18.0 = load ptr, ptr %1, align 4, !dbg !13131
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !13131
  %_18.1 = load i32, ptr %2, align 4, !dbg !13131
  %3 = icmp eq i32 %_18.1, 0, !dbg !13131
  br i1 %3, label %bb2, label %bb3, !dbg !13131

bb2:                                              ; preds = %start
  %chunks.0 = load ptr, ptr %_3, align 4, !dbg !13132
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13132
  %chunks.1 = load i32, ptr %4, align 4, !dbg !13132
  store ptr %chunks.0, ptr %chunks.dbg.spill, align 4, !dbg !13132
  %5 = getelementptr inbounds i8, ptr %chunks.dbg.spill, i32 4, !dbg !13132
  store i32 %chunks.1, ptr %5, align 4, !dbg !13132
    #dbg_declare(ptr %chunks.dbg.spill, !13125, !DIExpression(), !13133)
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17hebffc43b8ef6e788E"(ptr sret([24 x i8]) align 4 %_7, ptr align 1 %v.0, i32 %v.1) #17, !dbg !13134
  store i8 1, ptr %_6, align 4, !dbg !13135
  %6 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13135
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %6, ptr align 4 %_7, i32 24, i1 false), !dbg !13135
  %7 = load i8, ptr %_6, align 4, !dbg !13136
  %8 = trunc nuw i8 %7 to i1, !dbg !13136
  br i1 %8, label %bb6, label %bb5, !dbg !13136

bb3:                                              ; preds = %start
  store i32 -2147483648, ptr %_0, align 4, !dbg !13137
  br label %bb14, !dbg !13138

bb5:                                              ; preds = %bb7, %bb6, %bb2
; call core::slice::<impl [T]>::iter
  %9 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1d6c4e206d8f8bc2E"(ptr align 1 %chunks.0, i32 %chunks.1) #17, !dbg !13139
  %_17.0 = extractvalue { ptr, ptr } %9, 0, !dbg !13139
  %_17.1 = extractvalue { ptr, ptr } %9, 1, !dbg !13139
; call core::iter::traits::iterator::Iterator::copied
  %10 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6copied17h4c1953df581c139cE(ptr %_17.0, ptr %_17.1) #17, !dbg !13140
  %_16.0 = extractvalue { ptr, ptr } %10, 0, !dbg !13140
  %_16.1 = extractvalue { ptr, ptr } %10, 1, !dbg !13140
; call core::iter::traits::iterator::Iterator::map
  %11 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h14e1dfbe78c75388E(ptr %_16.0, ptr %_16.1) #17, !dbg !13141
  %_15.0 = extractvalue { ptr, ptr } %11, 0, !dbg !13141
  %_15.1 = extractvalue { ptr, ptr } %11, 1, !dbg !13141
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617hf07191350f05d07bE"(ptr sret([12 x i8]) align 4 %_14, ptr %_15.0, ptr %_15.1) #17, !dbg !13142
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17hf987cbf227505394E(ptr sret([12 x i8]) align 4 %_13, ptr align 4 %_14) #17, !dbg !13143
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h90d6cec6483c057dE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_13) #17, !dbg !13144
  br label %bb14, !dbg !13144

bb6:                                              ; preds = %bb2
  %12 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13145
  %_19.0 = load ptr, ptr %12, align 4, !dbg !13145
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !13145
  %_19.1 = load i32, ptr %13, align 4, !dbg !13145
  %14 = icmp eq i32 %_19.1, 0, !dbg !13145
  br i1 %14, label %bb7, label %bb5, !dbg !13145

bb7:                                              ; preds = %bb6
  %15 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13146
  %16 = getelementptr inbounds i8, ptr %15, i32 16, !dbg !13146
  %_20.0 = load ptr, ptr %16, align 4, !dbg !13146
  %17 = getelementptr inbounds i8, ptr %16, i32 4, !dbg !13146
  %_20.1 = load i32, ptr %17, align 4, !dbg !13146
  %18 = icmp eq i32 %_20.1, 0, !dbg !13146
  br i1 %18, label %bb8, label %bb5, !dbg !13146

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !13147
  %20 = getelementptr inbounds i8, ptr %19, i32 8, !dbg !13147
  %v.01 = load ptr, ptr %20, align 4, !dbg !13147
  %21 = getelementptr inbounds i8, ptr %20, i32 4, !dbg !13147
  %v.12 = load i32, ptr %21, align 4, !dbg !13147
  store ptr %v.01, ptr %v.dbg.spill3, align 4, !dbg !13147
  %22 = getelementptr inbounds i8, ptr %v.dbg.spill3, i32 4, !dbg !13147
  store i32 %v.12, ptr %22, align 4, !dbg !13147
    #dbg_declare(ptr %v.dbg.spill3, !13127, !DIExpression(), !13148)
; call alloc::string::String::from_utf16
  call void @_ZN5alloc6string6String10from_utf1617h7b854ec6ef45042bE(ptr sret([12 x i8]) align 4 %_0, ptr align 2 %v.01, i32 %v.12) #17, !dbg !13149
  br label %bb14, !dbg !13149

bb14:                                             ; preds = %bb3, %bb5, %bb8
  ret void, !dbg !13150
}

; alloc::string::String::from_utf16le::{{closure}}
; Function Attrs: inlinehint nounwind
define internal void @"_ZN5alloc6string6String12from_utf16le28_$u7b$$u7b$closure$u7d$$u7d$17h220fc65bc53b3963E"(i16 %_2) unnamed_addr #2 !dbg !13151 {
start:
  %_2.dbg.spill = alloca [2 x i8], align 2
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !13155, !DIExpression(), !13157)
  store i16 %_2, ptr %_2.dbg.spill, align 2
    #dbg_declare(ptr %_2.dbg.spill, !13156, !DIExpression(), !13158)
  ret void, !dbg !13159
}

; alloc::string::String::with_capacity
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE(ptr sret([12 x i8]) align 4 %_0, i32 %capacity) unnamed_addr #2 !dbg !13160 {
start:
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !13165, !DIExpression(), !13166)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %_2, i32 %capacity) #17, !dbg !13167
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 12, i1 false), !dbg !13168
  ret void, !dbg !13169
}

; alloc::string::String::into_boxed_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc6string6String14into_boxed_str17h6e07c05869a521b2E(ptr align 4 %self) unnamed_addr #2 !dbg !13170 {
start:
  %slice.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !13173, !DIExpression(), !13176)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_3, ptr align 4 %self, i32 12, i1 false), !dbg !13177
; call alloc::vec::Vec<T,A>::into_boxed_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h9a45a2727095a7bbE"(ptr align 4 %_3) #17, !dbg !13178
  %slice.0 = extractvalue { ptr, i32 } %0, 0, !dbg !13178
  %slice.1 = extractvalue { ptr, i32 } %0, 1, !dbg !13178
  store ptr %slice.0, ptr %slice.dbg.spill, align 4, !dbg !13178
  %1 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4, !dbg !13178
  store i32 %slice.1, ptr %1, align 4, !dbg !13178
    #dbg_declare(ptr %slice.dbg.spill, !13174, !DIExpression(), !13179)
; call alloc::str::from_boxed_utf8_unchecked
  %2 = call { ptr, i32 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h4a17908cfa49f8e2E(ptr align 1 %slice.0, i32 %slice.1) #17, !dbg !13180
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !13180
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !13180
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !13181
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !13181
  ret { ptr, i32 } %4, !dbg !13181
}

; alloc::string::String::into_raw_parts
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String14into_raw_parts17hec216dfc7107a88fE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !13182 {
start:
  %_2 = alloca [12 x i8], align 4
    #dbg_declare(ptr %self, !13187, !DIExpression(), !13188)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_2, ptr align 4 %self, i32 12, i1 false), !dbg !13189
; call alloc::vec::Vec<T>::into_raw_parts
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$14into_raw_parts17h523d483769e29f83E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_2) #17, !dbg !13190
  ret void, !dbg !13191
}

; alloc::string::String::from_utf8_lossy
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String15from_utf8_lossy17h322252d81ba4304aE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %v.0, i32 %v.1) unnamed_addr #1 !dbg !13192 {
start:
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right_val.dbg.spill = alloca [4 x i8], align 4
  %left_val.dbg.spill = alloca [4 x i8], align 4
  %first_valid.dbg.spill = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  %_50 = alloca [12 x i8], align 4
  %chunk2 = alloca [16 x i8], align 4
  %_36 = alloca [16 x i8], align 4
  %iter1 = alloca [8 x i8], align 4
  %res = alloca [12 x i8], align 4
  %_24 = alloca [24 x i8], align 4
  %_16 = alloca [4 x i8], align 4
  %_14 = alloca [4 x i8], align 4
  %chunk = alloca [16 x i8], align 4
  %_3 = alloca [16 x i8], align 4
  %iter = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !13197, !DIExpression(), !13219)
    #dbg_declare(ptr %iter, !13198, !DIExpression(), !13220)
    #dbg_declare(ptr %chunk, !13202, !DIExpression(), !13221)
    #dbg_declare(ptr %res, !13213, !DIExpression(), !13222)
    #dbg_declare(ptr %iter1, !13215, !DIExpression(), !13223)
    #dbg_declare(ptr %chunk2, !13217, !DIExpression(), !13224)
; call core::str::lossy::<impl [u8]>::utf8_chunks
  %1 = call { ptr, i32 } @"_ZN4core3str5lossy30_$LT$impl$u20$$u5b$u8$u5d$$GT$11utf8_chunks17h134c70f227283c36E"(ptr align 1 %v.0, i32 %v.1) #17, !dbg !13225
  %2 = extractvalue { ptr, i32 } %1, 0, !dbg !13225
  %3 = extractvalue { ptr, i32 } %1, 1, !dbg !13225
  store ptr %2, ptr %iter, align 4, !dbg !13225
  %4 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !13225
  store i32 %3, ptr %4, align 4, !dbg !13225
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h449d883e31926a09E"(ptr sret([16 x i8]) align 4 %_3, ptr align 4 %iter) #17, !dbg !13226
  %5 = load ptr, ptr %_3, align 4, !dbg !13227
  %6 = ptrtoint ptr %5 to i32, !dbg !13227
  %7 = icmp eq i32 %6, 0, !dbg !13227
  %_5 = select i1 %7, i32 0, i32 1, !dbg !13227
  %8 = trunc nuw i32 %_5 to i1, !dbg !13228
  br i1 %8, label %bb3, label %bb12, !dbg !13228

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %chunk, ptr align 4 %_3, i32 16, i1 false), !dbg !13221
; call core::str::lossy::Utf8Chunk::valid
  %9 = call { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk5valid17ha1f3ac46c2163617E(ptr align 4 %chunk) #17, !dbg !13229
  %first_valid.0 = extractvalue { ptr, i32 } %9, 0, !dbg !13229
  %first_valid.1 = extractvalue { ptr, i32 } %9, 1, !dbg !13229
  store ptr %first_valid.0, ptr %first_valid.dbg.spill, align 4, !dbg !13229
  %10 = getelementptr inbounds i8, ptr %first_valid.dbg.spill, i32 4, !dbg !13229
  store i32 %first_valid.1, ptr %10, align 4, !dbg !13229
    #dbg_declare(ptr %first_valid.dbg.spill, !13200, !DIExpression(), !13230)
    #dbg_declare(ptr %first_valid.dbg.spill, !13204, !DIExpression(), !13231)
; call core::str::lossy::Utf8Chunk::invalid
  %11 = call { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h0e8fc705bc557240E(ptr align 4 %chunk) #17, !dbg !13232
  %_10.0 = extractvalue { ptr, i32 } %11, 0, !dbg !13232
  %_10.1 = extractvalue { ptr, i32 } %11, 1, !dbg !13232
; call core::slice::<impl [T]>::is_empty
  %_9 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %_10.0, i32 %_10.1) #17, !dbg !13233
  br i1 %_9, label %bb7, label %bb11, !dbg !13234

bb12:                                             ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13235
  store ptr inttoptr (i32 1 to ptr), ptr %12, align 4, !dbg !13235
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !13235
  store i32 0, ptr %13, align 4, !dbg !13235
  store i32 -2147483648, ptr %_0, align 4, !dbg !13235
  br label %bb27, !dbg !13236

bb11:                                             ; preds = %bb3
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE(ptr sret([12 x i8]) align 4 %res, i32 %v.1) #17, !dbg !13238
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %res, ptr align 1 %first_valid.0, i32 %first_valid.1) #17, !dbg !13239
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %res, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3) #17, !dbg !13240
  %_34.0 = load ptr, ptr %iter, align 4, !dbg !13241
  %14 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !13241
  %_34.1 = load i32, ptr %14, align 4, !dbg !13241
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %15 = call { ptr, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h73bdb64ae7130ef2E"(ptr align 1 %_34.0, i32 %_34.1) #17, !dbg !13241
  %_33.0 = extractvalue { ptr, i32 } %15, 0, !dbg !13241
  %_33.1 = extractvalue { ptr, i32 } %15, 1, !dbg !13241
  store ptr %_33.0, ptr %iter1, align 4, !dbg !13241
  %16 = getelementptr inbounds i8, ptr %iter1, i32 4, !dbg !13241
  store i32 %_33.1, ptr %16, align 4, !dbg !13241
  br label %bb17, !dbg !13242

bb7:                                              ; preds = %bb3
; call core::str::<impl str>::len
  %17 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %first_valid.0, i32 %first_valid.1) #17, !dbg !13243
  store i32 %17, ptr %_14, align 4, !dbg !13243
  store i32 %v.1, ptr %_16, align 4, !dbg !13244
  store ptr %_14, ptr %left_val.dbg.spill, align 4, !dbg !13245
    #dbg_declare(ptr %left_val.dbg.spill, !13206, !DIExpression(), !13246)
  store ptr %_16, ptr %right_val.dbg.spill, align 4, !dbg !13245
    #dbg_declare(ptr %right_val.dbg.spill, !13209, !DIExpression(), !13246)
  %_20 = load i32, ptr %_14, align 4, !dbg !13246
  %_21 = load i32, ptr %_16, align 4, !dbg !13246
  %_19 = icmp eq i32 %_20, %_21, !dbg !13246
  br i1 %_19, label %bb10, label %bb9, !dbg !13246

bb17:                                             ; preds = %bb26, %bb20, %bb11
; call <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h449d883e31926a09E"(ptr sret([16 x i8]) align 4 %_36, ptr align 4 %iter1) #17, !dbg !13223
  %18 = load ptr, ptr %_36, align 4, !dbg !13223
  %19 = ptrtoint ptr %18 to i32, !dbg !13223
  %20 = icmp eq i32 %19, 0, !dbg !13223
  %_38 = select i1 %20, i32 0, i32 1, !dbg !13223
  %21 = trunc nuw i32 %_38 to i1, !dbg !13223
  br i1 %21, label %bb20, label %bb21, !dbg !13223

bb20:                                             ; preds = %bb17
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %chunk2, ptr align 4 %_36, i32 16, i1 false), !dbg !13247
; call core::str::lossy::Utf8Chunk::valid
  %22 = call { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk5valid17ha1f3ac46c2163617E(ptr align 4 %chunk2) #17, !dbg !13248
  %_42.0 = extractvalue { ptr, i32 } %22, 0, !dbg !13248
  %_42.1 = extractvalue { ptr, i32 } %22, 1, !dbg !13248
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %res, ptr align 1 %_42.0, i32 %_42.1) #17, !dbg !13249
; call core::str::lossy::Utf8Chunk::invalid
  %23 = call { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h0e8fc705bc557240E(ptr align 4 %chunk2) #17, !dbg !13250
  %_45.0 = extractvalue { ptr, i32 } %23, 0, !dbg !13250
  %_45.1 = extractvalue { ptr, i32 } %23, 1, !dbg !13250
; call core::slice::<impl [T]>::is_empty
  %_44 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %_45.0, i32 %_45.1) #17, !dbg !13251
  br i1 %_44, label %bb17, label %bb26, !dbg !13252

bb21:                                             ; preds = %bb17
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_50, ptr align 4 %res, i32 12, i1 false), !dbg !13253
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_50, i32 12, i1 false), !dbg !13254
  br label %bb27, !dbg !13255

bb27:                                             ; preds = %bb12, %bb10, %bb21
  ret void, !dbg !13255

bb26:                                             ; preds = %bb20
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %res, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3) #17, !dbg !13256
  br label %bb17, !dbg !13256

bb9:                                              ; preds = %bb7
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !13246
    #dbg_declare(ptr %kind.dbg.spill, !13210, !DIExpression(), !13257)
  store ptr null, ptr %_24, align 4, !dbg !13257
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hfaf0730df126d6c2E(i8 0, ptr align 4 %_14, ptr align 4 %_16, ptr align 4 %_24, ptr align 4 @alloc_3d07516a9b38db202801fba47f335e20) #18, !dbg !13257
  unreachable, !dbg !13257

bb10:                                             ; preds = %bb7
  %24 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13258
  store ptr %first_valid.0, ptr %24, align 4, !dbg !13258
  %25 = getelementptr inbounds i8, ptr %24, i32 4, !dbg !13258
  store i32 %first_valid.1, ptr %25, align 4, !dbg !13258
  store i32 -2147483648, ptr %_0, align 4, !dbg !13258
  br label %bb27, !dbg !13236

bb19:                                             ; No predecessors!
  unreachable, !dbg !13223
}

; alloc::string::String::from_utf16_lossy
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String16from_utf16_lossy17hdd4d35d260a80e39E(ptr sret([12 x i8]) align 4 %_0, ptr align 2 %v.0, i32 %v.1) unnamed_addr #2 !dbg !13259 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !13264, !DIExpression(), !13265)
; call core::slice::<impl [T]>::iter
  %1 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbadac3e2abbd3b18E"(ptr align 2 %v.0, i32 %v.1) #17, !dbg !13266
  %_5.0 = extractvalue { ptr, ptr } %1, 0, !dbg !13266
  %_5.1 = extractvalue { ptr, ptr } %1, 1, !dbg !13266
; call core::iter::traits::iterator::Iterator::cloned
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6cloned17hafc97ffc625f8677E(ptr %_5.0, ptr %_5.1) #17, !dbg !13267
  %_4.0 = extractvalue { ptr, ptr } %2, 0, !dbg !13267
  %_4.1 = extractvalue { ptr, ptr } %2, 1, !dbg !13267
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h5020acdbefe335aeE"(ptr sret([12 x i8]) align 4 %_3, ptr %_4.0, ptr %_4.1) #17, !dbg !13268
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h415efc52b5b920f3E(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %_3) #17, !dbg !13269
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h9155694014f277cfE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_2) #17, !dbg !13270
  ret void, !dbg !13271
}

; alloc::string::String::from_utf16_lossy::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN5alloc6string6String16from_utf16_lossy28_$u7b$$u7b$closure$u7d$$u7d$17ha4b1862be1a2d797E"(ptr align 1 %_1, ptr align 4 %r) unnamed_addr #2 !dbg !13272 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !13278, !DIExpression(), !13279)
    #dbg_declare(ptr %r, !13277, !DIExpression(), !13280)
; call core::result::Result<T,E>::unwrap_or
  %_0 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17hf7981cfaf74295d8E"(ptr align 4 %r, i32 65533) #17, !dbg !13281
  ret i32 %_0, !dbg !13282
}

; alloc::string::String::try_reserve_exact
; Function Attrs: nounwind
define dso_local { i32, i32 } @_ZN5alloc6string6String17try_reserve_exact17hbe96913397eec3d7E(ptr align 4 %self, i32 %additional) unnamed_addr #1 !dbg !13283 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13286, !DIExpression(), !13288)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13287, !DIExpression(), !13289)
; call alloc::vec::Vec<T,A>::try_reserve_exact
  %0 = call { i32, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h542714a9ce1f26ddE"(ptr align 4 %self, i32 %additional) #17, !dbg !13290
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !13290
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !13290
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !13291
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !13291
  ret { i32, i32 } %2, !dbg !13291
}

; alloc::string::String::from_utf16be_lossy
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String18from_utf16be_lossy17had8f6065002b4c8cE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %v.0, i32 %v.1) unnamed_addr #1 !dbg !13292 {
start:
  %remainder.dbg.spill = alloca [8 x i8], align 4
  %chunks.dbg.spill = alloca [8 x i8], align 4
  %_remainder.dbg.spill = alloca [4 x i8], align 4
  %v.dbg.spill6 = alloca [8 x i8], align 4
  %v.dbg.spill3 = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  %_20 = alloca [12 x i8], align 4
  %_19 = alloca [12 x i8], align 4
  %string = alloca [12 x i8], align 4
  %_17 = alloca [16 x i8], align 4
  %_13 = alloca [12 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  %_2 = alloca [28 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !13297, !DIExpression(), !13308)
    #dbg_declare(ptr %string, !13306, !DIExpression(), !13309)
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17hebffc43b8ef6e788E"(ptr sret([24 x i8]) align 4 %_3, ptr align 1 %v.0, i32 %v.1) #17, !dbg !13310
  store i8 0, ptr %_2, align 4, !dbg !13311
  %1 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13311
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %1, ptr align 4 %_3, i32 24, i1 false), !dbg !13311
  %2 = load i8, ptr %_2, align 4, !dbg !13312
  %3 = trunc nuw i8 %2 to i1, !dbg !13312
  br i1 %3, label %bb3, label %bb2, !dbg !13312

bb2:                                              ; preds = %bb5, %bb3, %start
; call core::slice::<impl [T]>::as_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17hd0a4c83639f3e067E"(ptr sret([16 x i8]) align 4 %_17, ptr align 1 %v.0, i32 %v.1, ptr align 4 @alloc_f01e6bac29bc177dee02f7d7c05e3ddc) #17, !dbg !13313
  %chunks.0 = load ptr, ptr %_17, align 4, !dbg !13314
  %4 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !13314
  %chunks.1 = load i32, ptr %4, align 4, !dbg !13314
  store ptr %chunks.0, ptr %chunks.dbg.spill, align 4, !dbg !13314
  %5 = getelementptr inbounds i8, ptr %chunks.dbg.spill, i32 4, !dbg !13314
  store i32 %chunks.1, ptr %5, align 4, !dbg !13314
    #dbg_declare(ptr %chunks.dbg.spill, !13303, !DIExpression(), !13315)
  %6 = getelementptr inbounds i8, ptr %_17, i32 8, !dbg !13316
  %remainder.0 = load ptr, ptr %6, align 4, !dbg !13316
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !13316
  %remainder.1 = load i32, ptr %7, align 4, !dbg !13316
  store ptr %remainder.0, ptr %remainder.dbg.spill, align 4, !dbg !13316
  %8 = getelementptr inbounds i8, ptr %remainder.dbg.spill, i32 4, !dbg !13316
  store i32 %remainder.1, ptr %8, align 4, !dbg !13316
    #dbg_declare(ptr %remainder.dbg.spill, !13305, !DIExpression(), !13317)
; call core::slice::<impl [T]>::iter
  %9 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1d6c4e206d8f8bc2E"(ptr align 1 %chunks.0, i32 %chunks.1) #17, !dbg !13318
  %_23.0 = extractvalue { ptr, ptr } %9, 0, !dbg !13318
  %_23.1 = extractvalue { ptr, ptr } %9, 1, !dbg !13318
; call core::iter::traits::iterator::Iterator::copied
  %10 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6copied17h4c1953df581c139cE(ptr %_23.0, ptr %_23.1) #17, !dbg !13319
  %_22.0 = extractvalue { ptr, ptr } %10, 0, !dbg !13319
  %_22.1 = extractvalue { ptr, ptr } %10, 1, !dbg !13319
; call core::iter::traits::iterator::Iterator::map
  %11 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h1a3302aedb79ddd0E(ptr %_22.0, ptr %_22.1) #17, !dbg !13320
  %_21.0 = extractvalue { ptr, ptr } %11, 0, !dbg !13320
  %_21.1 = extractvalue { ptr, ptr } %11, 1, !dbg !13320
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617he542c089b93c4231E"(ptr sret([12 x i8]) align 4 %_20, ptr %_21.0, ptr %_21.1) #17, !dbg !13321
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h9527faa05991fa5aE(ptr sret([12 x i8]) align 4 %_19, ptr align 4 %_20) #17, !dbg !13322
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h00b6c60aaf12ce63E(ptr sret([12 x i8]) align 4 %string, ptr align 4 %_19) #17, !dbg !13323
; call core::slice::<impl [T]>::is_empty
  %_24 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %remainder.0, i32 %remainder.1) #17, !dbg !13324
  br i1 %_24, label %bb17, label %bb18, !dbg !13325

bb3:                                              ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13326
  %_26.0 = load ptr, ptr %12, align 4, !dbg !13326
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !13326
  %_26.1 = load i32, ptr %13, align 4, !dbg !13326
  %14 = icmp eq i32 %_26.1, 0, !dbg !13326
  br i1 %14, label %bb4, label %bb2, !dbg !13326

bb4:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13327
  %16 = getelementptr inbounds i8, ptr %15, i32 16, !dbg !13327
  %_27.0 = load ptr, ptr %16, align 4, !dbg !13327
  %17 = getelementptr inbounds i8, ptr %16, i32 4, !dbg !13327
  %_27.1 = load i32, ptr %17, align 4, !dbg !13327
  %18 = icmp eq i32 %_27.1, 0, !dbg !13327
  br i1 %18, label %bb7, label %bb5, !dbg !13327

bb7:                                              ; preds = %bb4
  %19 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13328
  %20 = getelementptr inbounds i8, ptr %19, i32 8, !dbg !13328
  %v.01 = load ptr, ptr %20, align 4, !dbg !13328
  %21 = getelementptr inbounds i8, ptr %20, i32 4, !dbg !13328
  %v.12 = load i32, ptr %21, align 4, !dbg !13328
  store ptr %v.01, ptr %v.dbg.spill3, align 4, !dbg !13328
  %22 = getelementptr inbounds i8, ptr %v.dbg.spill3, i32 4, !dbg !13328
  store i32 %v.12, ptr %22, align 4, !dbg !13328
    #dbg_declare(ptr %v.dbg.spill3, !13298, !DIExpression(), !13329)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17hdd4d35d260a80e39E(ptr sret([12 x i8]) align 4 %_0, ptr align 2 %v.01, i32 %v.12) #17, !dbg !13330
  br label %bb19, !dbg !13330

bb5:                                              ; preds = %bb4
  %23 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13331
  %24 = getelementptr inbounds i8, ptr %23, i32 16, !dbg !13331
  %_28.0 = load ptr, ptr %24, align 4, !dbg !13331
  %25 = getelementptr inbounds i8, ptr %24, i32 4, !dbg !13331
  %_28.1 = load i32, ptr %25, align 4, !dbg !13331
  %26 = icmp eq i32 %_28.1, 1, !dbg !13331
  br i1 %26, label %bb6, label %bb2, !dbg !13331

bb19:                                             ; preds = %bb17, %bb18, %bb6, %bb7
  ret void, !dbg !13332

bb6:                                              ; preds = %bb5
  %27 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13333
  %28 = getelementptr inbounds i8, ptr %27, i32 8, !dbg !13333
  %v.04 = load ptr, ptr %28, align 4, !dbg !13333
  %29 = getelementptr inbounds i8, ptr %28, i32 4, !dbg !13333
  %v.15 = load i32, ptr %29, align 4, !dbg !13333
  store ptr %v.04, ptr %v.dbg.spill6, align 4, !dbg !13333
  %30 = getelementptr inbounds i8, ptr %v.dbg.spill6, i32 4, !dbg !13333
  store i32 %v.15, ptr %30, align 4, !dbg !13333
    #dbg_declare(ptr %v.dbg.spill6, !13300, !DIExpression(), !13334)
  %31 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13335
  %32 = getelementptr inbounds i8, ptr %31, i32 16, !dbg !13335
  %_29.0 = load ptr, ptr %32, align 4, !dbg !13335
  %33 = getelementptr inbounds i8, ptr %32, i32 4, !dbg !13335
  %_29.1 = load i32, ptr %33, align 4, !dbg !13335
  %_remainder = getelementptr inbounds nuw i8, ptr %_29.0, i32 0, !dbg !13335
  store ptr %_remainder, ptr %_remainder.dbg.spill, align 4, !dbg !13335
    #dbg_declare(ptr %_remainder.dbg.spill, !13302, !DIExpression(), !13336)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17hdd4d35d260a80e39E(ptr sret([12 x i8]) align 4 %_13, ptr align 2 %v.04, i32 %v.15) #17, !dbg !13337
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17h5120f132aac7d8b4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_13, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3) #17, !dbg !13337
  br label %bb19, !dbg !13337

bb18:                                             ; preds = %bb2
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17h5120f132aac7d8b4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %string, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3) #17, !dbg !13338
  br label %bb19, !dbg !13338

bb17:                                             ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %string, i32 12, i1 false), !dbg !13339
  br label %bb19, !dbg !13340
}

; alloc::string::String::from_utf16be_lossy::{{closure}}
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN5alloc6string6String18from_utf16be_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h7c780542b90ad200E"(ptr align 1 %_1, ptr align 4 %r) unnamed_addr #2 !dbg !13341 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !13347, !DIExpression(), !13348)
    #dbg_declare(ptr %r, !13346, !DIExpression(), !13349)
; call core::result::Result<T,E>::unwrap_or
  %_0 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17hf7981cfaf74295d8E"(ptr align 4 %r, i32 65533) #17, !dbg !13350
  ret i32 %_0, !dbg !13351
}

; alloc::string::String::from_utf16le_lossy
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String18from_utf16le_lossy17h20cdf8f7caf297adE(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %v.0, i32 %v.1) unnamed_addr #1 !dbg !13352 {
start:
  %remainder.dbg.spill = alloca [8 x i8], align 4
  %chunks.dbg.spill = alloca [8 x i8], align 4
  %_remainder.dbg.spill = alloca [4 x i8], align 4
  %v.dbg.spill6 = alloca [8 x i8], align 4
  %v.dbg.spill3 = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [8 x i8], align 4
  %_20 = alloca [12 x i8], align 4
  %_19 = alloca [12 x i8], align 4
  %string = alloca [12 x i8], align 4
  %_17 = alloca [16 x i8], align 4
  %_13 = alloca [12 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  %_2 = alloca [28 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !13355, !DIExpression(), !13366)
    #dbg_declare(ptr %string, !13364, !DIExpression(), !13367)
; call core::slice::<impl [T]>::align_to
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17hebffc43b8ef6e788E"(ptr sret([24 x i8]) align 4 %_3, ptr align 1 %v.0, i32 %v.1) #17, !dbg !13368
  store i8 1, ptr %_2, align 4, !dbg !13369
  %1 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13369
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %1, ptr align 4 %_3, i32 24, i1 false), !dbg !13369
  %2 = load i8, ptr %_2, align 4, !dbg !13370
  %3 = trunc nuw i8 %2 to i1, !dbg !13370
  br i1 %3, label %bb3, label %bb2, !dbg !13370

bb2:                                              ; preds = %bb5, %bb3, %start
; call core::slice::<impl [T]>::as_chunks
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17hd0a4c83639f3e067E"(ptr sret([16 x i8]) align 4 %_17, ptr align 1 %v.0, i32 %v.1, ptr align 4 @alloc_f5a1d71c1d79290ce217adeb0d6d33e9) #17, !dbg !13371
  %chunks.0 = load ptr, ptr %_17, align 4, !dbg !13372
  %4 = getelementptr inbounds i8, ptr %_17, i32 4, !dbg !13372
  %chunks.1 = load i32, ptr %4, align 4, !dbg !13372
  store ptr %chunks.0, ptr %chunks.dbg.spill, align 4, !dbg !13372
  %5 = getelementptr inbounds i8, ptr %chunks.dbg.spill, i32 4, !dbg !13372
  store i32 %chunks.1, ptr %5, align 4, !dbg !13372
    #dbg_declare(ptr %chunks.dbg.spill, !13361, !DIExpression(), !13373)
  %6 = getelementptr inbounds i8, ptr %_17, i32 8, !dbg !13374
  %remainder.0 = load ptr, ptr %6, align 4, !dbg !13374
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !13374
  %remainder.1 = load i32, ptr %7, align 4, !dbg !13374
  store ptr %remainder.0, ptr %remainder.dbg.spill, align 4, !dbg !13374
  %8 = getelementptr inbounds i8, ptr %remainder.dbg.spill, i32 4, !dbg !13374
  store i32 %remainder.1, ptr %8, align 4, !dbg !13374
    #dbg_declare(ptr %remainder.dbg.spill, !13363, !DIExpression(), !13375)
; call core::slice::<impl [T]>::iter
  %9 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1d6c4e206d8f8bc2E"(ptr align 1 %chunks.0, i32 %chunks.1) #17, !dbg !13376
  %_23.0 = extractvalue { ptr, ptr } %9, 0, !dbg !13376
  %_23.1 = extractvalue { ptr, ptr } %9, 1, !dbg !13376
; call core::iter::traits::iterator::Iterator::copied
  %10 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6copied17h4c1953df581c139cE(ptr %_23.0, ptr %_23.1) #17, !dbg !13377
  %_22.0 = extractvalue { ptr, ptr } %10, 0, !dbg !13377
  %_22.1 = extractvalue { ptr, ptr } %10, 1, !dbg !13377
; call core::iter::traits::iterator::Iterator::map
  %11 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h14e1dfbe78c75388E(ptr %_22.0, ptr %_22.1) #17, !dbg !13378
  %_21.0 = extractvalue { ptr, ptr } %11, 0, !dbg !13378
  %_21.1 = extractvalue { ptr, ptr } %11, 1, !dbg !13378
; call core::char::methods::<impl char>::decode_utf16
  call void @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617hf07191350f05d07bE"(ptr sret([12 x i8]) align 4 %_20, ptr %_21.0, ptr %_21.1) #17, !dbg !13379
; call core::iter::traits::iterator::Iterator::map
  call void @_ZN4core4iter6traits8iterator8Iterator3map17h3ee1244166e89cfcE(ptr sret([12 x i8]) align 4 %_19, ptr align 4 %_20) #17, !dbg !13380
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h4baab2942ae0c3e1E(ptr sret([12 x i8]) align 4 %string, ptr align 4 %_19) #17, !dbg !13381
; call core::slice::<impl [T]>::is_empty
  %_24 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1 %remainder.0, i32 %remainder.1) #17, !dbg !13382
  br i1 %_24, label %bb17, label %bb18, !dbg !13383

bb3:                                              ; preds = %start
  %12 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13384
  %_26.0 = load ptr, ptr %12, align 4, !dbg !13384
  %13 = getelementptr inbounds i8, ptr %12, i32 4, !dbg !13384
  %_26.1 = load i32, ptr %13, align 4, !dbg !13384
  %14 = icmp eq i32 %_26.1, 0, !dbg !13384
  br i1 %14, label %bb4, label %bb2, !dbg !13384

bb4:                                              ; preds = %bb3
  %15 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13385
  %16 = getelementptr inbounds i8, ptr %15, i32 16, !dbg !13385
  %_27.0 = load ptr, ptr %16, align 4, !dbg !13385
  %17 = getelementptr inbounds i8, ptr %16, i32 4, !dbg !13385
  %_27.1 = load i32, ptr %17, align 4, !dbg !13385
  %18 = icmp eq i32 %_27.1, 0, !dbg !13385
  br i1 %18, label %bb7, label %bb5, !dbg !13385

bb7:                                              ; preds = %bb4
  %19 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13386
  %20 = getelementptr inbounds i8, ptr %19, i32 8, !dbg !13386
  %v.01 = load ptr, ptr %20, align 4, !dbg !13386
  %21 = getelementptr inbounds i8, ptr %20, i32 4, !dbg !13386
  %v.12 = load i32, ptr %21, align 4, !dbg !13386
  store ptr %v.01, ptr %v.dbg.spill3, align 4, !dbg !13386
  %22 = getelementptr inbounds i8, ptr %v.dbg.spill3, i32 4, !dbg !13386
  store i32 %v.12, ptr %22, align 4, !dbg !13386
    #dbg_declare(ptr %v.dbg.spill3, !13356, !DIExpression(), !13387)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17hdd4d35d260a80e39E(ptr sret([12 x i8]) align 4 %_0, ptr align 2 %v.01, i32 %v.12) #17, !dbg !13388
  br label %bb19, !dbg !13388

bb5:                                              ; preds = %bb4
  %23 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13389
  %24 = getelementptr inbounds i8, ptr %23, i32 16, !dbg !13389
  %_28.0 = load ptr, ptr %24, align 4, !dbg !13389
  %25 = getelementptr inbounds i8, ptr %24, i32 4, !dbg !13389
  %_28.1 = load i32, ptr %25, align 4, !dbg !13389
  %26 = icmp eq i32 %_28.1, 1, !dbg !13389
  br i1 %26, label %bb6, label %bb2, !dbg !13389

bb19:                                             ; preds = %bb17, %bb18, %bb6, %bb7
  ret void, !dbg !13390

bb6:                                              ; preds = %bb5
  %27 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13391
  %28 = getelementptr inbounds i8, ptr %27, i32 8, !dbg !13391
  %v.04 = load ptr, ptr %28, align 4, !dbg !13391
  %29 = getelementptr inbounds i8, ptr %28, i32 4, !dbg !13391
  %v.15 = load i32, ptr %29, align 4, !dbg !13391
  store ptr %v.04, ptr %v.dbg.spill6, align 4, !dbg !13391
  %30 = getelementptr inbounds i8, ptr %v.dbg.spill6, i32 4, !dbg !13391
  store i32 %v.15, ptr %30, align 4, !dbg !13391
    #dbg_declare(ptr %v.dbg.spill6, !13358, !DIExpression(), !13392)
  %31 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13393
  %32 = getelementptr inbounds i8, ptr %31, i32 16, !dbg !13393
  %_29.0 = load ptr, ptr %32, align 4, !dbg !13393
  %33 = getelementptr inbounds i8, ptr %32, i32 4, !dbg !13393
  %_29.1 = load i32, ptr %33, align 4, !dbg !13393
  %_remainder = getelementptr inbounds nuw i8, ptr %_29.0, i32 0, !dbg !13393
  store ptr %_remainder, ptr %_remainder.dbg.spill, align 4, !dbg !13393
    #dbg_declare(ptr %_remainder.dbg.spill, !13360, !DIExpression(), !13394)
; call alloc::string::String::from_utf16_lossy
  call void @_ZN5alloc6string6String16from_utf16_lossy17hdd4d35d260a80e39E(ptr sret([12 x i8]) align 4 %_13, ptr align 2 %v.04, i32 %v.15) #17, !dbg !13395
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17h5120f132aac7d8b4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_13, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3) #17, !dbg !13395
  br label %bb19, !dbg !13395

bb18:                                             ; preds = %bb2
; call <alloc::string::String as core::ops::arith::Add<&str>>::add
  call void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17h5120f132aac7d8b4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %string, ptr align 1 @alloc_55773bc7650d9b4ca2871ef04250ccf4, i32 3) #17, !dbg !13396
  br label %bb19, !dbg !13396

bb17:                                             ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %string, i32 12, i1 false), !dbg !13397
  br label %bb19, !dbg !13398
}

; alloc::string::String::from_utf16le_lossy::{{closure}}
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN5alloc6string6String18from_utf16le_lossy28_$u7b$$u7b$closure$u7d$$u7d$17hd433e831c02c510bE"(ptr align 1 %_1, ptr align 4 %r) unnamed_addr #2 !dbg !13399 {
start:
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !13405, !DIExpression(), !13406)
    #dbg_declare(ptr %r, !13404, !DIExpression(), !13407)
; call core::result::Result<T,E>::unwrap_or
  %_0 = call i32 @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17hf7981cfaf74295d8E"(ptr align 4 %r, i32 65533) #17, !dbg !13408
  ret i32 %_0, !dbg !13409
}

; alloc::string::String::from_utf8_unchecked
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %bytes) unnamed_addr #2 !dbg !13410 {
start:
    #dbg_declare(ptr %bytes, !13415, !DIExpression(), !13416)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %bytes, i32 12, i1 false), !dbg !13417
  ret void, !dbg !13418
}

; alloc::string::String::from_utf8_lossy_owned
; Function Attrs: nounwind
define dso_local void @_ZN5alloc6string6String21from_utf8_lossy_owned17ha5f0c4aa684a6a9eE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %v) unnamed_addr #1 !dbg !13419 {
start:
  %_8 = alloca [1 x i8], align 1
  %_7 = alloca [12 x i8], align 4
  %string = alloca [12 x i8], align 4
  %_2 = alloca [12 x i8], align 4
    #dbg_declare(ptr %v, !13422, !DIExpression(), !13425)
    #dbg_declare(ptr %string, !13423, !DIExpression(), !13426)
  store i8 0, ptr %_8, align 1, !dbg !13427
  store i8 1, ptr %_8, align 1, !dbg !13427
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %v) #17, !dbg !13428
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !13428
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !13428
; call alloc::string::String::from_utf8_lossy
  call void @_ZN5alloc6string6String15from_utf8_lossy17h322252d81ba4304aE(ptr sret([12 x i8]) align 4 %_2, ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !13427
  %1 = load i32, ptr %_2, align 4, !dbg !13427
  %2 = icmp eq i32 %1, -2147483648, !dbg !13427
  %_5 = select i1 %2, i32 0, i32 1, !dbg !13427
  %3 = trunc nuw i32 %_5 to i1, !dbg !13429
  br i1 %3, label %bb3, label %bb4, !dbg !13429

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %string, ptr align 4 %_2, i32 12, i1 false), !dbg !13426
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %string, i32 12, i1 false), !dbg !13430
  br label %bb7, !dbg !13431

bb4:                                              ; preds = %start
  store i8 0, ptr %_8, align 1, !dbg !13432
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_7, ptr align 4 %v, i32 12, i1 false), !dbg !13432
; call alloc::string::String::from_utf8_unchecked
  call void @_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %_7) #17, !dbg !13433
  br label %bb7, !dbg !13433

bb7:                                              ; preds = %bb4, %bb3
  %4 = load i8, ptr %_8, align 1, !dbg !13434
  %5 = trunc nuw i8 %4 to i1, !dbg !13434
  br i1 %5, label %bb6, label %bb5, !dbg !13434

bb5:                                              ; preds = %bb6, %bb7
  ret void, !dbg !13435

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h0b78a764740d5437E"(ptr align 4 %v) #17, !dbg !13434
  br label %bb5, !dbg !13434

bb8:                                              ; No predecessors!
  unreachable, !dbg !13436
}

; alloc::string::String::len
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN5alloc6string6String3len17h8f2b854020f019dbE(ptr align 4 %self) unnamed_addr #2 !dbg !13437 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13442, !DIExpression(), !13443)
; call alloc::vec::Vec<T,A>::len
  %_0 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %self) #17, !dbg !13444
  ret i32 %_0, !dbg !13445
}

; alloc::string::String::new
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String3new17hf6a28998eefb1a92E(ptr sret([12 x i8]) align 4 %_0) unnamed_addr #2 !dbg !13446 {
start:
  %_1 = alloca [12 x i8], align 4
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h8bc511fc2432249cE"(ptr sret([12 x i8]) align 4 %_1) #17, !dbg !13450
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_1, i32 12, i1 false), !dbg !13451
  ret void, !dbg !13452
}

; alloc::string::String::push
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %self, i32 %ch) unnamed_addr #2 !dbg !13453 {
start:
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ch_len.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %ch.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13458, !DIExpression(), !13464)
  store i32 %ch, ptr %ch.dbg.spill, align 4
    #dbg_declare(ptr %ch.dbg.spill, !13459, !DIExpression(), !13465)
; call alloc::string::String::len
  %len = call i32 @_ZN5alloc6string6String3len17h8f2b854020f019dbE(ptr align 4 %self) #17, !dbg !13466
  store i32 %len, ptr %len.dbg.spill, align 4, !dbg !13466
    #dbg_declare(ptr %len.dbg.spill, !13460, !DIExpression(), !13467)
; call core::char::methods::<impl char>::len_utf8
  %ch_len = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h43f83d25bab4344eE"(i32 %ch) #17, !dbg !13468
  store i32 %ch_len, ptr %ch_len.dbg.spill, align 4, !dbg !13468
    #dbg_declare(ptr %ch_len.dbg.spill, !13462, !DIExpression(), !13469)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h4fce6300662c2858E(ptr align 4 %self, i32 %ch_len) #17, !dbg !13470
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_10 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %self) #17, !dbg !13471
; call alloc::string::String::len
  %_12 = call i32 @_ZN5alloc6string6String3len17h8f2b854020f019dbE(ptr align 4 %self) #17, !dbg !13472
  store ptr %_10, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !1808, !DIExpression(), !13473)
  store i32 %_12, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1816, !DIExpression(), !13475)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !13476
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !13476

bb2.i:                                            ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %_10, i32 %_12, i32 1, ptr align 4 @alloc_b080e9cb062afaa89f8d96eeb5dabe3b) #17, !dbg !13477
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !13477

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %start, %bb2.i
  %_0.i = getelementptr inbounds nuw i8, ptr %_10, i32 %_12, !dbg !13478
; call core::char::methods::encode_utf8_raw_unchecked
  call void @_ZN4core4char7methods25encode_utf8_raw_unchecked17h85e7bbede87537d1E(i32 %ch, ptr %_0.i) #17, !dbg !13479
  %_17.0 = add i32 %len, %ch_len, !dbg !13480
  %_17.1 = icmp ult i32 %_17.0, %len, !dbg !13480
  br i1 %_17.1, label %panic, label %bb8, !dbg !13480

bb8:                                              ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E"(ptr align 4 %self, i32 %_17.0) #17, !dbg !13481
  ret void, !dbg !13482

panic:                                            ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit"
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_4bffea83c63c4e46b2757869b6649688) #18, !dbg !13480
  unreachable, !dbg !13480
}

; alloc::string::String::as_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc6string6String6as_str17ha63f9ab0907175deE(ptr align 4 %self) unnamed_addr #2 !dbg !13483 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13486, !DIExpression(), !13487)
; call alloc::vec::Vec<T,A>::as_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h9aca5a4efbfbef1bE"(ptr align 4 %self) #17, !dbg !13488
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !13488
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !13488
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E(ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !13489
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !13489
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !13489
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !13490
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !13490
  ret { ptr, i32 } %3, !dbg !13490
}

; alloc::string::String::reserve
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String7reserve17h4fce6300662c2858E(ptr align 4 %self, i32 %additional) unnamed_addr #2 !dbg !13491 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13496, !DIExpression(), !13498)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13497, !DIExpression(), !13499)
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1dfb094011f11624E"(ptr align 4 %self, i32 %additional) #17, !dbg !13500
  ret void, !dbg !13501
}

; alloc::string::String::push_str
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %self, ptr align 1 %string.0, i32 %string.1) unnamed_addr #2 !dbg !13502 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %string.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13507, !DIExpression(), !13509)
  store ptr %string.0, ptr %string.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %string.dbg.spill, i32 4
  store i32 %string.1, ptr %0, align 4
    #dbg_declare(ptr %string.dbg.spill, !13508, !DIExpression(), !13510)
  store ptr %string.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %string.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !13511)
  %2 = insertvalue { ptr, i32 } poison, ptr %string.0, 0, !dbg !13513
  %3 = insertvalue { ptr, i32 } %2, i32 %string.1, 1, !dbg !13513
  %_4.0 = extractvalue { ptr, i32 } %3, 0, !dbg !13514
  %_4.1 = extractvalue { ptr, i32 } %3, 1, !dbg !13514
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %self, ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !13515
  ret void, !dbg !13516
}

; alloc::string::String::from_utf8
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc6string6String9from_utf817hec1be3bb109edba9E(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %vec) unnamed_addr #2 !dbg !13517 {
start:
  %_8 = alloca [20 x i8], align 4
  %e = alloca [8 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  %_2 = alloca [12 x i8], align 4
    #dbg_declare(ptr %vec, !13522, !DIExpression(), !13525)
    #dbg_declare(ptr %e, !13523, !DIExpression(), !13526)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %vec) #17, !dbg !13527
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !13527
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !13527
; call core::str::converts::from_utf8
  call void @_ZN4core3str8converts9from_utf817hbba37fe7cad0f284E(ptr sret([12 x i8]) align 4 %_2, ptr align 1 %_3.0, i32 %_3.1) #17, !dbg !13528
  %_5 = load i32, ptr %_2, align 4, !dbg !13528
  %1 = trunc nuw i32 %_5 to i1, !dbg !13529
  br i1 %1, label %bb4, label %bb5, !dbg !13529

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13530
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %e, ptr align 4 %2, i32 8, i1 false), !dbg !13530
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_8, ptr align 4 %vec, i32 12, i1 false), !dbg !13531
  %3 = getelementptr inbounds i8, ptr %_8, i32 12, !dbg !13531
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %3, ptr align 4 %e, i32 8, i1 false), !dbg !13531
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_8, i32 20, i1 false), !dbg !13532
  br label %bb6, !dbg !13533

bb5:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_6, ptr align 4 %vec, i32 12, i1 false), !dbg !13534
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13535
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %4, ptr align 4 %_6, i32 12, i1 false), !dbg !13535
  store i32 -2147483648, ptr %_0, align 4, !dbg !13535
  br label %bb6, !dbg !13536

bb6:                                              ; preds = %bb4, %bb5
  ret void, !dbg !13537

bb3:                                              ; No predecessors!
  unreachable, !dbg !13528
}

; alloc::string::IntoChars::as_str
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @_ZN5alloc6string9IntoChars6as_str17h37b1358ae8af6d50E(ptr align 4 %self) unnamed_addr #2 !dbg !13538 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13547, !DIExpression(), !13548)
; call alloc::vec::into_iter::IntoIter<T,A>::as_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17h923844f361fd15ffE"(ptr align 4 %self) #17, !dbg !13549
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !13549
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !13549
; call core::str::converts::from_utf8_unchecked
  %1 = call { ptr, i32 } @_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E(ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !13550
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !13550
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !13550
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !13551
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !13551
  ret { ptr, i32 } %3, !dbg !13551
}

; alloc::raw_vec::RawVecInner::with_capacity
; Function Attrs: inlinehint nounwind
define internal { i32, ptr } @_ZN5alloc7raw_vec11RawVecInner13with_capacity17h339203e12fa24062E(i32 %capacity, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #2 !dbg !13552 {
start:
  %err.dbg.spill = alloca [8 x i8], align 4
  %res.dbg.spill = alloca [8 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !13558, !DIExpression(), !13564)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !13559, !DIExpression(), !13565)
; call alloc::raw_vec::RawVecInner<A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h2d94f36e833a0501E"(ptr sret([12 x i8]) align 4 %_3, i32 %capacity, i1 zeroext false, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !13566
  %_5 = load i32, ptr %_3, align 4, !dbg !13566
  %1 = trunc nuw i32 %_5 to i1, !dbg !13567
  br i1 %1, label %bb3, label %bb4, !dbg !13567

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13568
  %err.0 = load i32, ptr %2, align 4, !dbg !13568
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !13568
  %err.1 = load i32, ptr %3, align 4, !dbg !13568
  store i32 %err.0, ptr %err.dbg.spill, align 4, !dbg !13568
  %4 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4, !dbg !13568
  store i32 %err.1, ptr %4, align 4, !dbg !13568
    #dbg_declare(ptr %err.dbg.spill, !13562, !DIExpression(), !13569)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E(i32 %err.0, i32 %err.1) #18, !dbg !13570
  unreachable, !dbg !13570

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13571
  %res.0 = load i32, ptr %5, align 4, !dbg !13571
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !13571
  %res.1 = load ptr, ptr %6, align 4, !dbg !13571
  store i32 %res.0, ptr %res.dbg.spill, align 4, !dbg !13571
  %7 = getelementptr inbounds i8, ptr %res.dbg.spill, i32 4, !dbg !13571
  store ptr %res.1, ptr %7, align 4, !dbg !13571
    #dbg_declare(ptr %res.dbg.spill, !13560, !DIExpression(), !13572)
  %8 = insertvalue { i32, ptr } poison, i32 %res.0, 0, !dbg !13573
  %9 = insertvalue { i32, ptr } %8, ptr %res.1, 1, !dbg !13573
  ret { i32, ptr } %9, !dbg !13573

bb2:                                              ; No predecessors!
  unreachable, !dbg !13566
}

; alloc::raw_vec::handle_error
; Function Attrs: cold minsize noreturn nounwind optsize
define dso_local void @_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E(i32 %0, i32 %1) unnamed_addr #6 !dbg !13574 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  %e = alloca [8 x i8], align 4
  store i32 %0, ptr %e, align 4
  %2 = getelementptr inbounds i8, ptr %e, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %e, !13578, !DIExpression(), !13581)
; call alloc::collections::TryReserveError::kind
  %3 = call { i32, i32 } @_ZN5alloc11collections15TryReserveError4kind17h3365508834357dd0E(ptr align 4 %e) #17, !dbg !13582
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13582
  %5 = extractvalue { i32, i32 } %3, 1, !dbg !13582
  store i32 %4, ptr %_2, align 4, !dbg !13582
  %6 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13582
  store i32 %5, ptr %6, align 4, !dbg !13582
  %7 = load i32, ptr %_2, align 4, !dbg !13583
  %8 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13583
  %9 = load i32, ptr %8, align 4, !dbg !13583
  %10 = icmp eq i32 %7, 0, !dbg !13583
  %_4 = select i1 %10, i32 0, i32 1, !dbg !13583
  %11 = trunc nuw i32 %_4 to i1, !dbg !13584
  br i1 %11, label %bb3, label %bb4, !dbg !13584

bb3:                                              ; preds = %start
  %layout.0 = load i32, ptr %_2, align 4, !dbg !13585
  %12 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13585
  %layout.1 = load i32, ptr %12, align 4, !dbg !13585
  store i32 %layout.0, ptr %layout.dbg.spill, align 4, !dbg !13585
  %13 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4, !dbg !13585
  store i32 %layout.1, ptr %13, align 4, !dbg !13585
    #dbg_declare(ptr %layout.dbg.spill, !13579, !DIExpression(), !13586)
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h1e5cf49dcf30c6c7E(i32 %layout.0, i32 %layout.1) #18, !dbg !13587
  unreachable, !dbg !13587

bb4:                                              ; preds = %start
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17h2a3a211178f79675E() #18, !dbg !13588
  unreachable, !dbg !13588

bb2:                                              ; No predecessors!
  unreachable, !dbg !13583
}

; alloc::raw_vec::layout_array
; Function Attrs: inlinehint nounwind
define internal void @_ZN5alloc7raw_vec12layout_array17ha176127582342869E(ptr sret([12 x i8]) align 4 %_0, i32 %cap, i32 %0, i32 %1) unnamed_addr #2 !dbg !13589 {
start:
  %cap.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !13593, !DIExpression(), !13595)
    #dbg_declare(ptr %elem_layout, !13594, !DIExpression(), !13596)
; call core::alloc::layout::Layout::repeat
  call void @_ZN4core5alloc6layout6Layout6repeat17h3713722149b2470fE(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %elem_layout, i32 %cap) #17, !dbg !13597
; call core::result::Result<T,E>::map
  %3 = call { i32, i32 } @"_ZN4core6result19Result$LT$T$C$E$GT$3map17hdb328e8875e8f43dE"(ptr align 4 %_4) #17, !dbg !13598
  %_3.0 = extractvalue { i32, i32 } %3, 0, !dbg !13598
  %_3.1 = extractvalue { i32, i32 } %3, 1, !dbg !13598
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9191610bed43e73bE"(ptr sret([12 x i8]) align 4 %_0, i32 %_3.0, i32 %_3.1) #17, !dbg !13599
  ret void, !dbg !13600
}

; alloc::raw_vec::layout_array::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17h972d17445e96bc10E"(ptr align 4 %_2) unnamed_addr #2 !dbg !13601 {
start:
  %_pad.dbg.spill = alloca [4 x i8], align 4
  %layout.dbg.spill = alloca [8 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !13608, !DIExpression(), !13610)
    #dbg_declare(ptr %_2, !13609, !DIExpression(), !13611)
  %layout.0 = load i32, ptr %_2, align 4, !dbg !13612
  %0 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !13612
  %layout.1 = load i32, ptr %0, align 4, !dbg !13612
  store i32 %layout.0, ptr %layout.dbg.spill, align 4, !dbg !13612
  %1 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4, !dbg !13612
  store i32 %layout.1, ptr %1, align 4, !dbg !13612
    #dbg_declare(ptr %layout.dbg.spill, !13605, !DIExpression(), !13613)
  %2 = getelementptr inbounds i8, ptr %_2, i32 8, !dbg !13614
  %_pad = load i32, ptr %2, align 4, !dbg !13614
  store i32 %_pad, ptr %_pad.dbg.spill, align 4, !dbg !13614
    #dbg_declare(ptr %_pad.dbg.spill, !13607, !DIExpression(), !13615)
  %3 = insertvalue { i32, i32 } poison, i32 %layout.0, 0, !dbg !13616
  %4 = insertvalue { i32, i32 } %3, i32 %layout.1, 1, !dbg !13616
  ret { i32, i32 } %4, !dbg !13616
}

; alloc::raw_vec::layout_array::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17hf1e01f90190308e7E"() unnamed_addr #2 !dbg !13617 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !13621, !DIExpression(), !13623)
    #dbg_declare(ptr %_2.dbg.spill, !13622, !DIExpression(), !13624)
; call <T as core::convert::Into<U>>::into
  %0 = call { i32, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E"(i32 0, i32 undef, ptr align 4 @alloc_3e86fb6b2879f255ac8a424203070a4b) #17, !dbg !13625
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !13625
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !13625
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !13626
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !13626
  ret { i32, i32 } %2, !dbg !13626
}

; alloc::raw_vec::RawVec<T>::with_capacity
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17h4eb2f3b85fffd4ebE"(i32 %capacity) unnamed_addr #2 !dbg !13627 {
start:
  %capacity.dbg.spill = alloca [4 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !13632, !DIExpression(), !13633)
; call alloc::raw_vec::RawVecInner::with_capacity
  %0 = call { i32, ptr } @_ZN5alloc7raw_vec11RawVecInner13with_capacity17h339203e12fa24062E(i32 %capacity, i32 1, i32 1) #17, !dbg !13634
  %_2.0 = extractvalue { i32, ptr } %0, 0, !dbg !13634
  %_2.1 = extractvalue { i32, ptr } %0, 1, !dbg !13634
  %1 = insertvalue { i32, ptr } poison, i32 %_2.0, 0, !dbg !13635
  %2 = insertvalue { i32, ptr } %1, ptr %_2.1, 1, !dbg !13635
  ret { i32, ptr } %2, !dbg !13635
}

; alloc::raw_vec::RawVec<T>::new
; Function Attrs: nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h41a3a000cf7375baE"() unnamed_addr #1 !dbg !13636 {
start:
; call alloc::raw_vec::RawVec<T,A>::new_in
  %0 = call { i32, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h7566a186b4a5bb9aE"() #17, !dbg !13640
  %_0.0 = extractvalue { i32, ptr } %0, 0, !dbg !13640
  %_0.1 = extractvalue { i32, ptr } %0, 1, !dbg !13640
  %1 = insertvalue { i32, ptr } poison, i32 %_0.0, 0, !dbg !13641
  %2 = insertvalue { i32, ptr } %1, ptr %_0.1, 1, !dbg !13641
  ret { i32, ptr } %2, !dbg !13641
}

; alloc::raw_vec::min_non_zero_cap
; Function Attrs: nounwind
define dso_local i32 @_ZN5alloc7raw_vec16min_non_zero_cap17hcb8644302555691eE(i32 %size) unnamed_addr #1 !dbg !13642 {
start:
  %size.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %size, ptr %size.dbg.spill, align 4
    #dbg_declare(ptr %size.dbg.spill, !13644, !DIExpression(), !13645)
  %0 = icmp eq i32 %size, 1, !dbg !13646
  br i1 %0, label %bb1, label %bb2, !dbg !13646

bb1:                                              ; preds = %start
  store i32 8, ptr %_0, align 4, !dbg !13647
  br label %bb5, !dbg !13648

bb2:                                              ; preds = %start
  %_2 = icmp ule i32 %size, 1024, !dbg !13649
  br i1 %_2, label %bb3, label %bb4, !dbg !13649

bb5:                                              ; preds = %bb3, %bb4, %bb1
  %1 = load i32, ptr %_0, align 4, !dbg !13650
  ret i32 %1, !dbg !13650

bb4:                                              ; preds = %bb2
  store i32 1, ptr %_0, align 4, !dbg !13651
  br label %bb5, !dbg !13652

bb3:                                              ; preds = %bb2
  store i32 4, ptr %_0, align 4, !dbg !13653
  br label %bb5, !dbg !13652
}

; alloc::raw_vec::capacity_overflow
; Function Attrs: noreturn nounwind
define internal void @_ZN5alloc7raw_vec17capacity_overflow17h2a3a211178f79675E() unnamed_addr #0 !dbg !13654 {
start:
  %_2 = alloca [24 x i8], align 4
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_2, ptr align 4 @alloc_90c5bf921a991d4cef03168396cea03b) #17, !dbg !13655
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_2, ptr align 4 @alloc_f5afce90c7b6fd918c6363c3021ffe9f) #18, !dbg !13655
  unreachable, !dbg !13655
}

; alloc::raw_vec::RawVec<T,A>::try_reserve
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h56ca3271bda081a1E"(ptr align 4 %self, i32 %len, i32 %additional) unnamed_addr #1 !dbg !13656 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13662, !DIExpression(), !13665)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !13663, !DIExpression(), !13666)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13664, !DIExpression(), !13667)
; call alloc::raw_vec::RawVecInner<A>::try_reserve
  %0 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17h4bc472920c286ff0E"(ptr align 4 %self, i32 %len, i32 %additional, i32 1, i32 1) #17, !dbg !13668
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !13668
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !13668
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !13669
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !13669
  ret { i32, i32 } %2, !dbg !13669
}

; alloc::raw_vec::RawVec<T,A>::reserve_exact
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17hbd64d136cffbc680E"(ptr align 4 %self, i32 %len, i32 %additional) unnamed_addr #1 !dbg !13670 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13675, !DIExpression(), !13678)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !13676, !DIExpression(), !13679)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13677, !DIExpression(), !13680)
; call alloc::raw_vec::RawVecInner<A>::reserve_exact
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h26c2a716a323ec06E"(ptr align 4 %self, i32 %len, i32 %additional, i32 1, i32 1) #17, !dbg !13681
  ret void, !dbg !13682
}

; alloc::raw_vec::RawVec<T,A>::shrink_to_fit
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17h5ec911174bc48a2bE"(ptr align 4 %self, i32 %cap) unnamed_addr #2 !dbg !13683 {
start:
  %cap.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13688, !DIExpression(), !13690)
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !13689, !DIExpression(), !13691)
; call alloc::raw_vec::RawVecInner<A>::shrink_to_fit
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h7a10afca0f5a9322E"(ptr align 4 %self, i32 %cap, i32 1, i32 1) #17, !dbg !13692
  ret void, !dbg !13693
}

; alloc::raw_vec::RawVec<T,A>::with_capacity_in
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h1eb3d526f5c1625aE"(i32 %capacity) unnamed_addr #2 !dbg !13694 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [4 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !13699, !DIExpression(), !13701)
    #dbg_declare(ptr %alloc.dbg.spill, !13700, !DIExpression(), !13702)
; call alloc::raw_vec::RawVecInner<A>::with_capacity_in
  %0 = call { i32, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17hc583444d3801a3b5E"(i32 %capacity, i32 1, i32 1) #17, !dbg !13703
  %_3.0 = extractvalue { i32, ptr } %0, 0, !dbg !13703
  %_3.1 = extractvalue { i32, ptr } %0, 1, !dbg !13703
  %1 = insertvalue { i32, ptr } poison, i32 %_3.0, 0, !dbg !13704
  %2 = insertvalue { i32, ptr } %1, ptr %_3.1, 1, !dbg !13704
  ret { i32, ptr } %2, !dbg !13704
}

; alloc::raw_vec::RawVec<T,A>::from_raw_parts_in
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hf44c9700e0c4bc99E"(ptr %ptr, i32 %capacity) unnamed_addr #2 !dbg !13705 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %capacity.dbg.spill4 = alloca [4 x i8], align 4
  %ptr.dbg.spill2 = alloca [4 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !13710, !DIExpression(), !13717)
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !13711, !DIExpression(), !13718)
    #dbg_declare(ptr %alloc.dbg.spill, !13712, !DIExpression(), !13719)
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !9865, !DIExpression(), !13720)
  store ptr %ptr, ptr %ptr.dbg.spill2, align 4, !dbg !13722
    #dbg_declare(ptr %ptr.dbg.spill2, !13713, !DIExpression(), !13723)
; call alloc::raw_vec::new_cap
  %capacity3 = call i32 @_ZN5alloc7raw_vec7new_cap17hc3d2e3f9b4ae8d28E(i32 %capacity) #17, !dbg !13724
  store i32 %capacity3, ptr %capacity.dbg.spill4, align 4, !dbg !13724
    #dbg_declare(ptr %capacity.dbg.spill4, !13715, !DIExpression(), !13725)
; call alloc::raw_vec::RawVecInner<A>::from_raw_parts_in
  %0 = call { i32, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17ha6a9c50a7c497da4E"(ptr %ptr, i32 %capacity3) #17, !dbg !13726
  %_6.0 = extractvalue { i32, ptr } %0, 0, !dbg !13726
  %_6.1 = extractvalue { i32, ptr } %0, 1, !dbg !13726
  %1 = insertvalue { i32, ptr } poison, i32 %_6.0, 0, !dbg !13727
  %2 = insertvalue { i32, ptr } %1, ptr %_6.1, 1, !dbg !13727
  ret { i32, ptr } %2, !dbg !13727
}

; alloc::raw_vec::RawVec<T,A>::try_reserve_exact
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h7aba69813c9ad828E"(ptr align 4 %self, i32 %len, i32 %additional) unnamed_addr #1 !dbg !13728 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13731, !DIExpression(), !13734)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !13732, !DIExpression(), !13735)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13733, !DIExpression(), !13736)
; call alloc::raw_vec::RawVecInner<A>::try_reserve_exact
  %0 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17ha3936f53c8c0dd9aE"(ptr align 4 %self, i32 %len, i32 %additional, i32 1, i32 1) #17, !dbg !13737
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !13737
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !13737
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !13738
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !13738
  ret { i32, i32 } %2, !dbg !13738
}

; alloc::raw_vec::RawVec<T,A>::ptr
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h270e5ed45b1e0b2eE"(ptr align 4 %self) unnamed_addr #2 !dbg !13739 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13745, !DIExpression(), !13746)
; call alloc::raw_vec::RawVecInner<A>::ptr
  %_0 = call ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17h64753ddab8eed799E"(ptr align 4 %self) #17, !dbg !13747
  ret ptr %_0, !dbg !13748
}

; alloc::raw_vec::RawVec<T,A>::new_in
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h7566a186b4a5bb9aE"() unnamed_addr #2 !dbg !13749 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %alloc.dbg.spill, !13754, !DIExpression(), !13755)
; call core::ptr::alignment::Alignment::of
  %_3 = call i32 @_ZN4core3ptr9alignment9Alignment2of17ha22585e6cc44d869E() #17, !dbg !13756
; call alloc::raw_vec::RawVecInner<A>::new_in
  %0 = call { i32, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h838d10db299945d4E"(i32 %_3) #17, !dbg !13757
  %_2.0 = extractvalue { i32, ptr } %0, 0, !dbg !13757
  %_2.1 = extractvalue { i32, ptr } %0, 1, !dbg !13757
  %1 = insertvalue { i32, ptr } poison, i32 %_2.0, 0, !dbg !13758
  %2 = insertvalue { i32, ptr } %1, ptr %_2.1, 1, !dbg !13758
  ret { i32, ptr } %2, !dbg !13758
}

; alloc::raw_vec::RawVec<T,A>::reserve
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h95700aedeb7f36a4E"(ptr align 4 %self, i32 %len, i32 %additional) unnamed_addr #2 !dbg !13759 {
start:
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13762, !DIExpression(), !13765)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !13763, !DIExpression(), !13766)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13764, !DIExpression(), !13767)
; call alloc::raw_vec::RawVecInner<A>::reserve
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17h9d399b38c90da136E"(ptr align 4 %self, i32 %len, i32 %additional, i32 1, i32 1) #17, !dbg !13768
  ret void, !dbg !13769
}

; alloc::raw_vec::RawVec<T,A>::capacity
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h3b95e211ae59eadbE"(ptr align 4 %self) unnamed_addr #2 !dbg !13770 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13775, !DIExpression(), !13776)
; call alloc::raw_vec::RawVecInner<A>::capacity
  %_0 = call i32 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17h20c3ff9e35767918E"(ptr align 4 %self, i32 1) #17, !dbg !13777
  ret i32 %_0, !dbg !13778
}

; alloc::raw_vec::RawVec<T,A>::grow_one
; Function Attrs: noinline nounwind
define dso_local void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hff492d12cb2c26b4E"(ptr align 4 %self) unnamed_addr #7 !dbg !13779 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13784, !DIExpression(), !13785)
; call alloc::raw_vec::RawVecInner<A>::grow_one
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17h46f86bdad3c18f22E"(ptr align 4 %self, i32 1, i32 1) #17, !dbg !13786
  ret void, !dbg !13787
}

; alloc::raw_vec::RawVec<T,A>::into_box
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17he871bc64efd70c4fE"(i32 %0, ptr %1, i32 %len) unnamed_addr #1 !dbg !13788 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %value.dbg.spill.i = alloca [8 x i8], align 4
  %slice.dbg.spill = alloca [8 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %me = alloca [8 x i8], align 4
  %_7 = alloca [24 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store ptr %1, ptr %2, align 4
    #dbg_declare(ptr %self, !13793, !DIExpression(), !13802)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !13794, !DIExpression(), !13803)
    #dbg_declare(ptr %me, !13795, !DIExpression(), !13804)
; call alloc::raw_vec::RawVec<T,A>::capacity
  %_4 = call i32 @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h3b95e211ae59eadbE"(ptr align 4 %self) #17, !dbg !13805
  %_3 = icmp ule i32 %len, %_4, !dbg !13806
  br i1 %_3, label %bb4, label %bb2, !dbg !13806

bb2:                                              ; preds = %start
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_7, ptr align 4 @alloc_f4d57ac593112d44bb8938b45d223a4d) #17, !dbg !13807
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_7, ptr align 4 @alloc_83adb15aef8e53a27d05391adceeadfa) #18, !dbg !13807
  unreachable, !dbg !13807

bb4:                                              ; preds = %start
  %_10.0 = load i32, ptr %self, align 4, !dbg !13808
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !13808
  %_10.1 = load ptr, ptr %3, align 4, !dbg !13808
  store i32 %_10.0, ptr %value.dbg.spill.i, align 4
  %4 = getelementptr inbounds i8, ptr %value.dbg.spill.i, i32 4
  store ptr %_10.1, ptr %4, align 4
    #dbg_declare(ptr %value.dbg.spill.i, !13809, !DIExpression(), !13815)
  %5 = insertvalue { i32, ptr } poison, i32 %_10.0, 0, !dbg !13817
  %6 = insertvalue { i32, ptr } %5, ptr %_10.1, 1, !dbg !13817
  %7 = extractvalue { i32, ptr } %6, 0, !dbg !13818
  %8 = extractvalue { i32, ptr } %6, 1, !dbg !13818
  store i32 %7, ptr %me, align 4, !dbg !13818
  %9 = getelementptr inbounds i8, ptr %me, i32 4, !dbg !13818
  store ptr %8, ptr %9, align 4, !dbg !13818
  store ptr %me, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !13819, !DIExpression(), !13825)
; call alloc::raw_vec::RawVec<T,A>::ptr
  %_13 = call ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h270e5ed45b1e0b2eE"(ptr align 4 %me) #17, !dbg !13827
; call core::ptr::slice_from_raw_parts_mut
  %10 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17h63344d021f1bfdeaE(ptr %_13, i32 %len) #17, !dbg !13828
  %slice.0 = extractvalue { ptr, i32 } %10, 0, !dbg !13828
  %slice.1 = extractvalue { ptr, i32 } %10, 1, !dbg !13828
  store ptr %slice.0, ptr %slice.dbg.spill, align 4, !dbg !13828
  %11 = getelementptr inbounds i8, ptr %slice.dbg.spill, i32 4, !dbg !13828
  store i32 %slice.1, ptr %11, align 4, !dbg !13828
    #dbg_declare(ptr %slice.dbg.spill, !13800, !DIExpression(), !13829)
  store ptr %me, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !13819, !DIExpression(), !13830)
  %_18 = getelementptr inbounds i8, ptr %me, i32 8, !dbg !13832
; call core::ptr::read
  call void @_ZN4core3ptr4read17ha6d8c5539f92df21E(ptr %_18, ptr align 4 @alloc_f4728140a08c933db2d13937bb6def33) #17, !dbg !13833
; call alloc::boxed::Box<T,A>::from_raw_in
  %12 = call { ptr, i32 } @"_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h077cfab5109063c0E"(ptr %slice.0, i32 %slice.1) #17, !dbg !13834
  %_0.0 = extractvalue { ptr, i32 } %12, 0, !dbg !13834
  %_0.1 = extractvalue { ptr, i32 } %12, 1, !dbg !13834
  %13 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !13835
  %14 = insertvalue { ptr, i32 } %13, i32 %_0.1, 1, !dbg !13835
  ret { ptr, i32 } %14, !dbg !13835
}

; alloc::raw_vec::RawVec<T,A>::allocator
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h17b3fc1aaad8adddE"(ptr align 4 %self) unnamed_addr #2 !dbg !13836 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13841, !DIExpression(), !13842)
; call alloc::raw_vec::RawVecInner<A>::allocator
  %_0 = call align 1 ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17h72d43e87e84d887dE"(ptr align 4 %self) #17, !dbg !13843
  ret ptr %_0, !dbg !13844
}

; alloc::raw_vec::RawVecInner<A>::deallocate
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17hcb3bf6cb67a4aebeE"(ptr align 4 %self, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #1 !dbg !13845 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13851, !DIExpression(), !13856)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !13852, !DIExpression(), !13857)
; call alloc::raw_vec::RawVecInner<A>::current_memory
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h770c0f671b856ae0E"(ptr sret([12 x i8]) align 4 %_3, ptr align 4 %self, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !13858
  %1 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13859
  %2 = load i32, ptr %1, align 4, !dbg !13859
  %3 = icmp eq i32 %2, 0, !dbg !13859
  %_5 = select i1 %3, i32 0, i32 1, !dbg !13859
  %4 = trunc nuw i32 %_5 to i1, !dbg !13860
  br i1 %4, label %bb2, label %bb3, !dbg !13860

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_3, align 4, !dbg !13861
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !13861
    #dbg_declare(ptr %ptr.dbg.spill, !13853, !DIExpression(), !13861)
  %5 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !13862
  %layout.0 = load i32, ptr %5, align 4, !dbg !13862
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !13862
  %layout.1 = load i32, ptr %6, align 4, !dbg !13862
  store i32 %layout.0, ptr %layout.dbg.spill, align 4, !dbg !13862
  %7 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4, !dbg !13862
  store i32 %layout.1, ptr %7, align 4, !dbg !13862
    #dbg_declare(ptr %layout.dbg.spill, !13855, !DIExpression(), !13862)
  %_9 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13863
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E"(ptr align 1 %_9, ptr %ptr, i32 %layout.0, i32 %layout.1) #17, !dbg !13864
  br label %bb3, !dbg !13864

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !13865

bb4:                                              ; No predecessors!
  unreachable, !dbg !13866
}

; alloc::raw_vec::RawVecInner<A>::grow_exact
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hded2e673bfe1dec0E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %0, i32 %1) unnamed_addr #1 !dbg !13867 {
start:
  %residual.dbg.spill3 = alloca [8 x i8], align 4
  %residual.dbg.spill = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %cap.dbg.spill = alloca [4 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_17 = alloca [12 x i8], align 4
  %_16 = alloca [12 x i8], align 4
  %_10 = alloca [8 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13872, !DIExpression(), !13888)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !13873, !DIExpression(), !13889)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13874, !DIExpression(), !13890)
    #dbg_declare(ptr %elem_layout, !13875, !DIExpression(), !13891)
; call core::alloc::layout::Layout::size
  %_5 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !13892
  %3 = icmp eq i32 %_5, 0, !dbg !13893
  br i1 %3, label %bb2, label %bb4, !dbg !13893

bb2:                                              ; preds = %start
; call <T as core::convert::Into<U>>::into
  %4 = call { i32, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E"(i32 0, i32 undef, ptr align 4 @alloc_f57ac9f51f258b865afd7aca26461551) #17, !dbg !13894
  %_7.0 = extractvalue { i32, i32 } %4, 0, !dbg !13894
  %_7.1 = extractvalue { i32, i32 } %4, 1, !dbg !13894
  store i32 %_7.0, ptr %_0, align 4, !dbg !13895
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13895
  store i32 %_7.1, ptr %5, align 4, !dbg !13895
  br label %bb16, !dbg !13896

bb4:                                              ; preds = %start
; call core::num::<impl usize>::checked_add
  %6 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %len, i32 %additional) #17, !dbg !13898
  %_11.0 = extractvalue { i32, i32 } %6, 0, !dbg !13898
  %_11.1 = extractvalue { i32, i32 } %6, 1, !dbg !13898
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7f0a41a439ef3779E"(ptr sret([8 x i8]) align 4 %_10, i32 %_11.0, i32 %_11.1, i32 0, i32 undef) #17, !dbg !13899
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12b00088086aa52eE"(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %_10) #17, !dbg !13900
  %7 = load i32, ptr %_9, align 4, !dbg !13900
  %8 = icmp eq i32 %7, -2147483647, !dbg !13900
  %_13 = select i1 %8, i32 0, i32 1, !dbg !13900
  %9 = trunc nuw i32 %_13 to i1, !dbg !13900
  br i1 %9, label %bb10, label %bb9, !dbg !13900

bb16:                                             ; preds = %bb10, %bb14, %bb13, %bb2
  %10 = load i32, ptr %_0, align 4, !dbg !13901
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13901
  %12 = load i32, ptr %11, align 4, !dbg !13901
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !13901
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !13901
  ret { i32, i32 } %14, !dbg !13901

bb10:                                             ; preds = %bb4
  %residual.01 = load i32, ptr %_9, align 4, !dbg !13902
  %15 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !13902
  %residual.12 = load i32, ptr %15, align 4, !dbg !13902
  store i32 %residual.01, ptr %residual.dbg.spill3, align 4, !dbg !13902
  %16 = getelementptr inbounds i8, ptr %residual.dbg.spill3, i32 4, !dbg !13902
  store i32 %residual.12, ptr %16, align 4, !dbg !13902
    #dbg_declare(ptr %residual.dbg.spill3, !13878, !DIExpression(), !13903)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcec71ed72ec794a3E"(i32 %residual.01, i32 %residual.12, ptr align 4 @alloc_0e818199dc25e87116a4e906be835b5e) #17, !dbg !13904
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !13904
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !13904
  store i32 %18, ptr %_0, align 4, !dbg !13904
  %20 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13904
  store i32 %19, ptr %20, align 4, !dbg !13904
  br label %bb16, !dbg !13904

bb9:                                              ; preds = %bb4
  %21 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !13900
  %cap = load i32, ptr %21, align 4, !dbg !13900
  store i32 %cap, ptr %cap.dbg.spill, align 4, !dbg !13900
    #dbg_declare(ptr %cap.dbg.spill, !13876, !DIExpression(), !13905)
    #dbg_declare(ptr %cap.dbg.spill, !13880, !DIExpression(), !13906)
  %22 = load i32, ptr %elem_layout, align 4, !dbg !13907
  %23 = getelementptr inbounds i8, ptr %elem_layout, i32 4, !dbg !13907
  %24 = load i32, ptr %23, align 4, !dbg !13907
; call alloc::raw_vec::RawVecInner<A>::finish_grow
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow17h8ee2162642395984E"(ptr sret([12 x i8]) align 4 %_17, ptr align 4 %self, i32 %cap, i32 %22, i32 %24) #17, !dbg !13908
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h52fa1c8fc41c0dbcE"(ptr sret([12 x i8]) align 4 %_16, ptr align 4 %_17) #17, !dbg !13907
  %_19 = load i32, ptr %_16, align 4, !dbg !13907
  %25 = trunc nuw i32 %_19 to i1, !dbg !13907
  br i1 %25, label %bb14, label %bb13, !dbg !13907

bb14:                                             ; preds = %bb9
  %26 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !13909
  %residual.0 = load i32, ptr %26, align 4, !dbg !13909
  %27 = getelementptr inbounds i8, ptr %26, i32 4, !dbg !13909
  %residual.1 = load i32, ptr %27, align 4, !dbg !13909
  store i32 %residual.0, ptr %residual.dbg.spill, align 4, !dbg !13909
  %28 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4, !dbg !13909
  store i32 %residual.1, ptr %28, align 4, !dbg !13909
    #dbg_declare(ptr %residual.dbg.spill, !13884, !DIExpression(), !13910)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %29 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h168a58a0e7ce6f64E"(i32 %residual.0, i32 %residual.1, ptr align 4 @alloc_34dfeb1b5b141599ba6cdab34df31edb) #17, !dbg !13911
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !13911
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !13911
  store i32 %30, ptr %_0, align 4, !dbg !13911
  %32 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !13911
  store i32 %31, ptr %32, align 4, !dbg !13911
  br label %bb16, !dbg !13911

bb13:                                             ; preds = %bb9
  %33 = getelementptr inbounds i8, ptr %_16, i32 4, !dbg !13907
  %ptr.0 = load ptr, ptr %33, align 4, !dbg !13907
  %34 = getelementptr inbounds i8, ptr %33, i32 4, !dbg !13907
  %ptr.1 = load i32, ptr %34, align 4, !dbg !13907
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !13907
  %35 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !13907
  store i32 %ptr.1, ptr %35, align 4, !dbg !13907
    #dbg_declare(ptr %ptr.dbg.spill, !13882, !DIExpression(), !13912)
    #dbg_declare(ptr %ptr.dbg.spill, !13886, !DIExpression(), !13913)
; call alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h180ec53471d88e62E"(ptr align 4 %self, ptr %ptr.0, i32 %ptr.1, i32 %cap) #17, !dbg !13914
  store i32 -2147483647, ptr %_0, align 4, !dbg !13915
  br label %bb16, !dbg !13901

bb8:                                              ; No predecessors!
  unreachable, !dbg !13896
}

; alloc::raw_vec::RawVecInner<A>::finish_grow
; Function Attrs: cold nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow17h8ee2162642395984E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self, i32 %cap, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #3 !dbg !13916 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [8 x i8], align 4
  %kind.dbg.spill = alloca [1 x i8], align 1
  %right_val.dbg.spill = alloca [4 x i8], align 4
  %left_val.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %val.dbg.spill = alloca [8 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %cap.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_29 = alloca [24 x i8], align 4
  %_20 = alloca [4 x i8], align 4
  %_17 = alloca [4 x i8], align 4
  %old_layout = alloca [8 x i8], align 4
  %_11 = alloca [12 x i8], align 4
  %memory = alloca [8 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %new_layout = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13922, !DIExpression(), !13943)
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !13923, !DIExpression(), !13944)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !13924, !DIExpression(), !13945)
    #dbg_declare(ptr %new_layout, !13925, !DIExpression(), !13946)
    #dbg_declare(ptr %memory, !13931, !DIExpression(), !13947)
    #dbg_declare(ptr %old_layout, !13935, !DIExpression(), !13948)
; call alloc::raw_vec::layout_array
  call void @_ZN5alloc7raw_vec12layout_array17ha176127582342869E(ptr sret([12 x i8]) align 4 %_6, i32 %cap, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !13949
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9eacb122e555ba05E"(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %_6) #17, !dbg !13949
  %_7 = load i32, ptr %_5, align 4, !dbg !13949
  %1 = trunc nuw i32 %_7 to i1, !dbg !13949
  br i1 %1, label %bb5, label %bb4, !dbg !13949

bb5:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !13950
  %residual.0 = load i32, ptr %2, align 4, !dbg !13950
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !13950
  %residual.1 = load i32, ptr %3, align 4, !dbg !13950
  store i32 %residual.0, ptr %residual.dbg.spill, align 4, !dbg !13950
  %4 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4, !dbg !13950
  store i32 %residual.1, ptr %4, align 4, !dbg !13950
    #dbg_declare(ptr %residual.dbg.spill, !13927, !DIExpression(), !13951)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  call void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha6eac4d75f65c33cE"(ptr sret([12 x i8]) align 4 %_0, i32 %residual.0, i32 %residual.1, ptr align 4 @alloc_7b09a0d4333a812ca86473c4cf73540f) #17, !dbg !13952
  br label %bb17, !dbg !13952

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !13949
  %val.0 = load i32, ptr %5, align 4, !dbg !13949
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !13949
  %val.1 = load i32, ptr %6, align 4, !dbg !13949
  store i32 %val.0, ptr %val.dbg.spill, align 4, !dbg !13949
  %7 = getelementptr inbounds i8, ptr %val.dbg.spill, i32 4, !dbg !13949
  store i32 %val.1, ptr %7, align 4, !dbg !13949
    #dbg_declare(ptr %val.dbg.spill, !13929, !DIExpression(), !13953)
  store i32 %val.0, ptr %new_layout, align 4, !dbg !13953
  %8 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !13953
  store i32 %val.1, ptr %8, align 4, !dbg !13953
; call alloc::raw_vec::RawVecInner<A>::current_memory
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h770c0f671b856ae0E"(ptr sret([12 x i8]) align 4 %_11, ptr align 4 %self, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !13954
  %9 = getelementptr inbounds i8, ptr %_11, i32 4, !dbg !13955
  %10 = load i32, ptr %9, align 4, !dbg !13955
  %11 = icmp eq i32 %10, 0, !dbg !13955
  %_12 = select i1 %11, i32 0, i32 1, !dbg !13955
  %12 = trunc nuw i32 %_12 to i1, !dbg !13956
  br i1 %12, label %bb7, label %bb15, !dbg !13956

bb7:                                              ; preds = %bb4
  %ptr = load ptr, ptr %_11, align 4, !dbg !13957
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !13957
    #dbg_declare(ptr %ptr.dbg.spill, !13933, !DIExpression(), !13957)
  %13 = getelementptr inbounds i8, ptr %_11, i32 4, !dbg !13948
  %14 = load i32, ptr %13, align 4, !dbg !13948
  %15 = getelementptr inbounds i8, ptr %13, i32 4, !dbg !13948
  %16 = load i32, ptr %15, align 4, !dbg !13948
  store i32 %14, ptr %old_layout, align 4, !dbg !13948
  %17 = getelementptr inbounds i8, ptr %old_layout, i32 4, !dbg !13948
  store i32 %16, ptr %17, align 4, !dbg !13948
; call core::alloc::layout::Layout::align
  %18 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %old_layout) #17, !dbg !13958
  store i32 %18, ptr %_17, align 4, !dbg !13958
; call core::alloc::layout::Layout::align
  %19 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %new_layout) #17, !dbg !13959
  store i32 %19, ptr %_20, align 4, !dbg !13959
  store ptr %_17, ptr %left_val.dbg.spill, align 4, !dbg !13960
    #dbg_declare(ptr %left_val.dbg.spill, !13936, !DIExpression(), !13961)
  store ptr %_20, ptr %right_val.dbg.spill, align 4, !dbg !13960
    #dbg_declare(ptr %right_val.dbg.spill, !13939, !DIExpression(), !13961)
  %_25 = load i32, ptr %_17, align 4, !dbg !13961
  %_26 = load i32, ptr %_20, align 4, !dbg !13961
  %_24 = icmp eq i32 %_25, %_26, !dbg !13961
  br i1 %_24, label %bb11, label %bb10, !dbg !13961

bb15:                                             ; preds = %bb4
  %_37 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13962
  %20 = load i32, ptr %new_layout, align 4, !dbg !13962
  %21 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !13962
  %22 = load i32, ptr %21, align 4, !dbg !13962
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %23 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE"(ptr align 1 %_37, i32 %20, i32 %22) #17, !dbg !13963
  %24 = extractvalue { ptr, i32 } %23, 0, !dbg !13963
  %25 = extractvalue { ptr, i32 } %23, 1, !dbg !13963
  store ptr %24, ptr %memory, align 4, !dbg !13963
  %26 = getelementptr inbounds i8, ptr %memory, i32 4, !dbg !13963
  store i32 %25, ptr %26, align 4, !dbg !13963
  br label %bb16, !dbg !13963

bb10:                                             ; preds = %bb7
  store i8 0, ptr %kind.dbg.spill, align 1, !dbg !13961
    #dbg_declare(ptr %kind.dbg.spill, !13940, !DIExpression(), !13964)
  store ptr null, ptr %_29, align 4, !dbg !13964
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17hfaf0730df126d6c2E(i8 0, ptr align 4 %_17, ptr align 4 %_20, ptr align 4 %_29, ptr align 4 @alloc_4af2c0d1999e47fb2cd9879c545aa7d3) #18, !dbg !13964
  unreachable, !dbg !13964

bb11:                                             ; preds = %bb7
; call core::alloc::layout::Layout::align
  %_32 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %old_layout) #17, !dbg !13965
; call core::alloc::layout::Layout::align
  %_34 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %new_layout) #17, !dbg !13966
  %_31 = icmp eq i32 %_32, %_34, !dbg !13967
  %27 = zext i1 %_31 to i8
  store i8 %27, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !11081, !DIExpression(), !13968)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !13970
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !13970

bb2.i:                                            ; preds = %bb11
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %_31, ptr align 4 @alloc_bf2ef026d41630cf7d93a3a71de3cac9) #17, !dbg !13971
  br label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !13971

_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit: ; preds = %bb11, %bb2.i
  %_36 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !13972
  %28 = load i32, ptr %old_layout, align 4, !dbg !13972
  %29 = getelementptr inbounds i8, ptr %old_layout, i32 4, !dbg !13972
  %30 = load i32, ptr %29, align 4, !dbg !13972
  %31 = load i32, ptr %new_layout, align 4, !dbg !13972
  %32 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !13972
  %33 = load i32, ptr %32, align 4, !dbg !13972
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %34 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he09a334fed706b5cE"(ptr align 1 %_36, ptr %ptr, i32 %28, i32 %30, i32 %31, i32 %33) #17, !dbg !13973
  %35 = extractvalue { ptr, i32 } %34, 0, !dbg !13973
  %36 = extractvalue { ptr, i32 } %34, 1, !dbg !13973
  store ptr %35, ptr %memory, align 4, !dbg !13973
  %37 = getelementptr inbounds i8, ptr %memory, i32 4, !dbg !13973
  store i32 %36, ptr %37, align 4, !dbg !13973
  br label %bb16, !dbg !13973

bb16:                                             ; preds = %bb15, %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
  %_38.0 = load ptr, ptr %memory, align 4, !dbg !13974
  %38 = getelementptr inbounds i8, ptr %memory, i32 4, !dbg !13974
  %_38.1 = load i32, ptr %38, align 4, !dbg !13974
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h94788840a701f0cfE"(ptr sret([12 x i8]) align 4 %_0, ptr %_38.0, i32 %_38.1, ptr align 4 %new_layout) #17, !dbg !13975
  br label %bb17, !dbg !13975

bb17:                                             ; preds = %bb5, %bb16
  ret void, !dbg !13976

bb3:                                              ; No predecessors!
  unreachable, !dbg !13949
}

; alloc::raw_vec::RawVecInner<A>::finish_grow::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hc5279fb8e4bfc125E"(ptr align 4 %_1) unnamed_addr #2 !dbg !13977 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !13981, !DIExpression(DW_OP_deref), !13983)
    #dbg_declare(ptr %_2.dbg.spill, !13982, !DIExpression(), !13984)
  %_4.0 = load i32, ptr %_1, align 4, !dbg !13985
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !13985
  %_4.1 = load i32, ptr %0, align 4, !dbg !13985
; call <T as core::convert::Into<U>>::into
  %1 = call { i32, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E"(i32 %_4.0, i32 %_4.1, ptr align 4 @alloc_145bae300e82e49c276d88ab37b19a8d) #17, !dbg !13986
  %_0.0 = extractvalue { i32, i32 } %1, 0, !dbg !13986
  %_0.1 = extractvalue { i32, i32 } %1, 1, !dbg !13986
  %2 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !13987
  %3 = insertvalue { i32, i32 } %2, i32 %_0.1, 1, !dbg !13987
  ret { i32, i32 } %3, !dbg !13987
}

; alloc::raw_vec::RawVecInner<A>::try_reserve
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17h4bc472920c286ff0E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #1 !dbg !13988 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [8 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !13991, !DIExpression(), !13999)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !13992, !DIExpression(), !14000)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !13993, !DIExpression(), !14001)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !13994, !DIExpression(), !14002)
    #dbg_declare(ptr %val.dbg.spill, !13997, !DIExpression(), !14003)
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_5 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14004
  br i1 %_5, label %bb2, label %bb7, !dbg !14005

bb7:                                              ; preds = %bb2, %start
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_13 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14006
  %_12 = xor i1 %_13, true, !dbg !14007
  %1 = zext i1 %_12 to i8
  store i8 %1, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !11081, !DIExpression(), !14008)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !14010
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14010

bb2.i:                                            ; preds = %bb7
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %_12, ptr align 4 @alloc_5173d93f60e10ba7d9ba5912add1228f) #17, !dbg !14011
  br label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14011

_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit: ; preds = %bb7, %bb2.i
  store i32 -2147483647, ptr %_0, align 4, !dbg !14012
  br label %bb10, !dbg !14013

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVecInner<A>::grow_amortized
  %2 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17h07c1051aad931779E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14014
  %_8.0 = extractvalue { i32, i32 } %2, 0, !dbg !14014
  %_8.1 = extractvalue { i32, i32 } %2, 1, !dbg !14014
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6330f699d96fc25aE"(i32 %_8.0, i32 %_8.1) #17, !dbg !14015
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14015
  %5 = extractvalue { i32, i32 } %3, 1, !dbg !14015
  store i32 %4, ptr %_7, align 4, !dbg !14015
  %6 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !14015
  store i32 %5, ptr %6, align 4, !dbg !14015
  %7 = load i32, ptr %_7, align 4, !dbg !14015
  %8 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !14015
  %9 = load i32, ptr %8, align 4, !dbg !14015
  %10 = icmp eq i32 %7, -2147483647, !dbg !14015
  %_9 = select i1 %10, i32 0, i32 1, !dbg !14015
  %11 = trunc nuw i32 %_9 to i1, !dbg !14015
  br i1 %11, label %bb6, label %bb7, !dbg !14015

bb6:                                              ; preds = %bb2
  %residual.0 = load i32, ptr %_7, align 4, !dbg !14016
  %12 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !14016
  %residual.1 = load i32, ptr %12, align 4, !dbg !14016
  store i32 %residual.0, ptr %residual.dbg.spill, align 4, !dbg !14016
  %13 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4, !dbg !14016
  store i32 %residual.1, ptr %13, align 4, !dbg !14016
    #dbg_declare(ptr %residual.dbg.spill, !13995, !DIExpression(), !14017)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %14 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h168a58a0e7ce6f64E"(i32 %residual.0, i32 %residual.1, ptr align 4 @alloc_f6b56cad982303657f7be46d3e602ed4) #17, !dbg !14018
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !14018
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !14018
  store i32 %15, ptr %_0, align 4, !dbg !14018
  %17 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14018
  store i32 %16, ptr %17, align 4, !dbg !14018
  br label %bb10, !dbg !14018

bb10:                                             ; preds = %bb6, %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
  %18 = load i32, ptr %_0, align 4, !dbg !14013
  %19 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14013
  %20 = load i32, ptr %19, align 4, !dbg !14013
  %21 = insertvalue { i32, i32 } poison, i32 %18, 0, !dbg !14013
  %22 = insertvalue { i32, i32 } %21, i32 %20, 1, !dbg !14013
  ret { i32, i32 } %22, !dbg !14013

bb5:                                              ; No predecessors!
  unreachable, !dbg !14015
}

; alloc::raw_vec::RawVecInner<A>::needs_to_grow
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %0, i32 %1) unnamed_addr #2 !dbg !14019 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14024, !DIExpression(), !14028)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !14025, !DIExpression(), !14029)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !14026, !DIExpression(), !14030)
    #dbg_declare(ptr %elem_layout, !14027, !DIExpression(), !14031)
; call core::alloc::layout::Layout::size
  %_7 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !14032
; call alloc::raw_vec::RawVecInner<A>::capacity
  %_6 = call i32 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17h20c3ff9e35767918E"(ptr align 4 %self, i32 %_7) #17, !dbg !14033
  store i32 %_6, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !14034, !DIExpression(), !14038)
  store i32 %len, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !14037, !DIExpression(), !14040)
  %_0.i = sub i32 %_6, %len, !dbg !14041
  %_0 = icmp ugt i32 %additional, %_0.i, !dbg !14042
  ret i1 %_0, !dbg !14043
}

; alloc::raw_vec::RawVecInner<A>::reserve_exact
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h26c2a716a323ec06E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #1 !dbg !14044 {
start:
  %err.dbg.spill = alloca [8 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14049, !DIExpression(), !14055)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !14050, !DIExpression(), !14056)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !14051, !DIExpression(), !14057)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !14052, !DIExpression(), !14058)
; call alloc::raw_vec::RawVecInner<A>::try_reserve_exact
  %1 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17ha3936f53c8c0dd9aE"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14059
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14059
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !14059
  store i32 %2, ptr %_5, align 4, !dbg !14059
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14059
  store i32 %3, ptr %4, align 4, !dbg !14059
  %5 = load i32, ptr %_5, align 4, !dbg !14060
  %6 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14060
  %7 = load i32, ptr %6, align 4, !dbg !14060
  %8 = icmp eq i32 %5, -2147483647, !dbg !14060
  %_6 = select i1 %8, i32 0, i32 1, !dbg !14060
  %9 = trunc nuw i32 %_6 to i1, !dbg !14061
  br i1 %9, label %bb2, label %bb3, !dbg !14061

bb2:                                              ; preds = %start
  %err.0 = load i32, ptr %_5, align 4, !dbg !14062
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14062
  %err.1 = load i32, ptr %10, align 4, !dbg !14062
  store i32 %err.0, ptr %err.dbg.spill, align 4, !dbg !14062
  %11 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4, !dbg !14062
  store i32 %err.1, ptr %11, align 4, !dbg !14062
    #dbg_declare(ptr %err.dbg.spill, !14053, !DIExpression(), !14062)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E(i32 %err.0, i32 %err.1) #18, !dbg !14063
  unreachable, !dbg !14063

bb3:                                              ; preds = %start
  ret void, !dbg !14064

bb4:                                              ; No predecessors!
  unreachable, !dbg !14065
}

; alloc::raw_vec::RawVecInner<A>::shrink_to_fit
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h7a10afca0f5a9322E"(ptr align 4 %self, i32 %cap, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #2 !dbg !14066 {
start:
  %err.dbg.spill = alloca [8 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %cap.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14071, !DIExpression(), !14076)
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !14072, !DIExpression(), !14077)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !14073, !DIExpression(), !14078)
; call alloc::raw_vec::RawVecInner<A>::shrink
  %1 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h82e208a12709dad9E"(ptr align 4 %self, i32 %cap, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14079
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14079
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !14079
  store i32 %2, ptr %_4, align 4, !dbg !14079
  %4 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !14079
  store i32 %3, ptr %4, align 4, !dbg !14079
  %5 = load i32, ptr %_4, align 4, !dbg !14080
  %6 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !14080
  %7 = load i32, ptr %6, align 4, !dbg !14080
  %8 = icmp eq i32 %5, -2147483647, !dbg !14080
  %_5 = select i1 %8, i32 0, i32 1, !dbg !14080
  %9 = trunc nuw i32 %_5 to i1, !dbg !14081
  br i1 %9, label %bb2, label %bb3, !dbg !14081

bb2:                                              ; preds = %start
  %err.0 = load i32, ptr %_4, align 4, !dbg !14082
  %10 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !14082
  %err.1 = load i32, ptr %10, align 4, !dbg !14082
  store i32 %err.0, ptr %err.dbg.spill, align 4, !dbg !14082
  %11 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4, !dbg !14082
  store i32 %err.1, ptr %11, align 4, !dbg !14082
    #dbg_declare(ptr %err.dbg.spill, !14074, !DIExpression(), !14082)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E(i32 %err.0, i32 %err.1) #18, !dbg !14083
  unreachable, !dbg !14083

bb3:                                              ; preds = %start
  ret void, !dbg !14084

bb4:                                              ; No predecessors!
  unreachable, !dbg !14085
}

; alloc::raw_vec::RawVecInner<A>::current_memory
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h770c0f671b856ae0E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self, i32 %0, i32 %1) unnamed_addr #2 !dbg !14086 {
start:
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %layout.dbg.spill = alloca [8 x i8], align 4
  %alloc_size.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_15 = alloca [12 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14108, !DIExpression(), !14114)
    #dbg_declare(ptr %elem_layout, !14109, !DIExpression(), !14115)
; call core::alloc::layout::Layout::size
  %_3 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !14116
  %3 = icmp eq i32 %_3, 0, !dbg !14117
  br i1 %3, label %bb4, label %bb2, !dbg !14117

bb4:                                              ; preds = %bb2, %start
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14118
  store i32 0, ptr %4, align 4, !dbg !14118
  br label %bb12, !dbg !14119

bb2:                                              ; preds = %start
  %_6 = load i32, ptr %self, align 4, !dbg !14120
; call core::num::niche_types::UsizeNoHighBit::as_inner
  %_5 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E(i32 %_6) #17, !dbg !14121
  %5 = icmp eq i32 %_5, 0, !dbg !14120
  br i1 %5, label %bb4, label %bb5, !dbg !14120

bb5:                                              ; preds = %bb2
; call core::alloc::layout::Layout::size
  %_8 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !14122
  %_11 = load i32, ptr %self, align 4, !dbg !14123
; call core::num::niche_types::UsizeNoHighBit::as_inner
  %_10 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E(i32 %_11) #17, !dbg !14124
  store i32 %_8, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !14125, !DIExpression(), !14129)
  store i32 %_10, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !14128, !DIExpression(), !14131)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !14132
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit", !dbg !14132

bb2.i:                                            ; preds = %bb5
; call core::num::<impl usize>::unchecked_mul::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h04c96da029baf90aE"(i32 %_8, i32 %_10, ptr align 4 @alloc_eede47213dcfc076444425ccb247be2b) #17, !dbg !14134
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit", !dbg !14134

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit": ; preds = %bb5, %bb2.i
  %_0.i = mul nuw i32 %_8, %_10, !dbg !14135
  store i32 %_0.i, ptr %alloc_size.dbg.spill, align 4, !dbg !14136
    #dbg_declare(ptr %alloc_size.dbg.spill, !14110, !DIExpression(), !14137)
; call core::alloc::layout::Layout::align
  %_13 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %elem_layout) #17, !dbg !14138
; call core::alloc::layout::Layout::from_size_align_unchecked
  %6 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %_0.i, i32 %_13, ptr align 4 @alloc_72d2cf81f39de74134d33df47d4bb11b) #17, !dbg !14139
  %layout.0 = extractvalue { i32, i32 } %6, 0, !dbg !14139
  %layout.1 = extractvalue { i32, i32 } %6, 1, !dbg !14139
  store i32 %layout.0, ptr %layout.dbg.spill, align 4, !dbg !14139
  %7 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4, !dbg !14139
  store i32 %layout.1, ptr %7, align 4, !dbg !14139
    #dbg_declare(ptr %layout.dbg.spill, !14112, !DIExpression(), !14140)
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14141
  %_17 = load ptr, ptr %8, align 4, !dbg !14141
; call <T as core::convert::Into<U>>::into
  %_16 = call ptr @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb85bfb109eca2be5E"(ptr %_17, ptr align 4 @alloc_358e3dd9740b2bf5d917c2f9630410d0) #17, !dbg !14142
  store ptr %_16, ptr %_15, align 4, !dbg !14143
  %9 = getelementptr inbounds i8, ptr %_15, i32 4, !dbg !14143
  store i32 %layout.0, ptr %9, align 4, !dbg !14143
  %10 = getelementptr inbounds i8, ptr %9, i32 4, !dbg !14143
  store i32 %layout.1, ptr %10, align 4, !dbg !14143
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_15, i32 12, i1 false), !dbg !14144
  br label %bb12, !dbg !14119

bb12:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit", %bb4
  ret void, !dbg !14145
}

; alloc::raw_vec::RawVecInner<A>::grow_amortized
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17h07c1051aad931779E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %0, i32 %1) unnamed_addr #1 !dbg !14146 {
start:
  %residual.dbg.spill5 = alloca [8 x i8], align 4
  %residual.dbg.spill = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %cap.dbg.spill2 = alloca [4 x i8], align 4
  %cap.dbg.spill = alloca [4 x i8], align 4
  %required_cap.dbg.spill = alloca [4 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_28 = alloca [12 x i8], align 4
  %_27 = alloca [12 x i8], align 4
  %_12 = alloca [8 x i8], align 4
  %_11 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14149, !DIExpression(), !14169)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !14150, !DIExpression(), !14170)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !14151, !DIExpression(), !14171)
    #dbg_declare(ptr %elem_layout, !14152, !DIExpression(), !14172)
  %_5 = icmp ugt i32 %additional, 0, !dbg !14173
  br i1 %_5, label %bb2, label %bb1, !dbg !14173

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_f618e816ca814de4958218055ad99397, i32 32, ptr align 4 @alloc_48693a28641fc2536465c1b585bbf702) #18, !dbg !14174
  unreachable, !dbg !14174

bb2:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %_7 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !14175
  %3 = icmp eq i32 %_7, 0, !dbg !14176
  br i1 %3, label %bb4, label %bb6, !dbg !14176

bb4:                                              ; preds = %bb2
; call <T as core::convert::Into<U>>::into
  %4 = call { i32, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E"(i32 0, i32 undef, ptr align 4 @alloc_050b106f80d54564e963431e19691033) #17, !dbg !14177
  %_9.0 = extractvalue { i32, i32 } %4, 0, !dbg !14177
  %_9.1 = extractvalue { i32, i32 } %4, 1, !dbg !14177
  store i32 %_9.0, ptr %_0, align 4, !dbg !14178
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14178
  store i32 %_9.1, ptr %5, align 4, !dbg !14178
  br label %bb24, !dbg !14179

bb6:                                              ; preds = %bb2
; call core::num::<impl usize>::checked_add
  %6 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %len, i32 %additional) #17, !dbg !14181
  %_13.0 = extractvalue { i32, i32 } %6, 0, !dbg !14181
  %_13.1 = extractvalue { i32, i32 } %6, 1, !dbg !14181
; call core::option::Option<T>::ok_or
  call void @"_ZN4core6option15Option$LT$T$GT$5ok_or17h7f0a41a439ef3779E"(ptr sret([8 x i8]) align 4 %_12, i32 %_13.0, i32 %_13.1, i32 0, i32 undef) #17, !dbg !14182
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12b00088086aa52eE"(ptr sret([8 x i8]) align 4 %_11, ptr align 4 %_12) #17, !dbg !14183
  %7 = load i32, ptr %_11, align 4, !dbg !14183
  %8 = icmp eq i32 %7, -2147483647, !dbg !14183
  %_15 = select i1 %8, i32 0, i32 1, !dbg !14183
  %9 = trunc nuw i32 %_15 to i1, !dbg !14183
  br i1 %9, label %bb12, label %bb11, !dbg !14183

bb24:                                             ; preds = %bb12, %bb22, %bb21, %bb4
  %10 = load i32, ptr %_0, align 4, !dbg !14184
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14184
  %12 = load i32, ptr %11, align 4, !dbg !14184
  %13 = insertvalue { i32, i32 } poison, i32 %10, 0, !dbg !14184
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !14184
  ret { i32, i32 } %14, !dbg !14184

bb12:                                             ; preds = %bb6
  %residual.03 = load i32, ptr %_11, align 4, !dbg !14185
  %15 = getelementptr inbounds i8, ptr %_11, i32 4, !dbg !14185
  %residual.14 = load i32, ptr %15, align 4, !dbg !14185
  store i32 %residual.03, ptr %residual.dbg.spill5, align 4, !dbg !14185
  %16 = getelementptr inbounds i8, ptr %residual.dbg.spill5, i32 4, !dbg !14185
  store i32 %residual.14, ptr %16, align 4, !dbg !14185
    #dbg_declare(ptr %residual.dbg.spill5, !14155, !DIExpression(), !14186)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %17 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcec71ed72ec794a3E"(i32 %residual.03, i32 %residual.14, ptr align 4 @alloc_e700fbef5ef9119ca5f0c0d7bc21ca43) #17, !dbg !14187
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !14187
  %19 = extractvalue { i32, i32 } %17, 1, !dbg !14187
  store i32 %18, ptr %_0, align 4, !dbg !14187
  %20 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14187
  store i32 %19, ptr %20, align 4, !dbg !14187
  br label %bb24, !dbg !14187

bb11:                                             ; preds = %bb6
  %21 = getelementptr inbounds i8, ptr %_11, i32 4, !dbg !14183
  %required_cap = load i32, ptr %21, align 4, !dbg !14183
  store i32 %required_cap, ptr %required_cap.dbg.spill, align 4, !dbg !14183
    #dbg_declare(ptr %required_cap.dbg.spill, !14153, !DIExpression(), !14188)
    #dbg_declare(ptr %required_cap.dbg.spill, !14157, !DIExpression(), !14189)
  %_21 = load i32, ptr %self, align 4, !dbg !14190
; call core::num::niche_types::UsizeNoHighBit::as_inner
  %_20 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E(i32 %_21) #17, !dbg !14191
  %22 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %_20, i32 2), !dbg !14190
  %_22.0 = extractvalue { i32, i1 } %22, 0, !dbg !14190
  %_22.1 = extractvalue { i32, i1 } %22, 1, !dbg !14190
  br i1 %_22.1, label %panic, label %bb14, !dbg !14190

bb14:                                             ; preds = %bb11
; call core::cmp::max
  %cap = call i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32 %_22.0, i32 %required_cap) #17, !dbg !14192
  store i32 %cap, ptr %cap.dbg.spill, align 4, !dbg !14192
    #dbg_declare(ptr %cap.dbg.spill, !14159, !DIExpression(), !14193)
; call core::alloc::layout::Layout::size
  %_25 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !14194
; call alloc::raw_vec::min_non_zero_cap
  %_24 = call i32 @_ZN5alloc7raw_vec16min_non_zero_cap17hcb8644302555691eE(i32 %_25) #17, !dbg !14195
; call core::cmp::max
  %cap1 = call i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32 %_24, i32 %cap) #17, !dbg !14196
  store i32 %cap1, ptr %cap.dbg.spill2, align 4, !dbg !14196
    #dbg_declare(ptr %cap.dbg.spill2, !14161, !DIExpression(), !14197)
  %23 = load i32, ptr %elem_layout, align 4, !dbg !14198
  %24 = getelementptr inbounds i8, ptr %elem_layout, i32 4, !dbg !14198
  %25 = load i32, ptr %24, align 4, !dbg !14198
; call alloc::raw_vec::RawVecInner<A>::finish_grow
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow17h8ee2162642395984E"(ptr sret([12 x i8]) align 4 %_28, ptr align 4 %self, i32 %cap1, i32 %23, i32 %25) #17, !dbg !14199
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h52fa1c8fc41c0dbcE"(ptr sret([12 x i8]) align 4 %_27, ptr align 4 %_28) #17, !dbg !14198
  %_30 = load i32, ptr %_27, align 4, !dbg !14198
  %26 = trunc nuw i32 %_30 to i1, !dbg !14198
  br i1 %26, label %bb22, label %bb21, !dbg !14198

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_mul_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E(ptr align 4 @alloc_bb7bc646e9264e8572da0c478eee6ea1) #18, !dbg !14190
  unreachable, !dbg !14190

bb22:                                             ; preds = %bb14
  %27 = getelementptr inbounds i8, ptr %_27, i32 4, !dbg !14200
  %residual.0 = load i32, ptr %27, align 4, !dbg !14200
  %28 = getelementptr inbounds i8, ptr %27, i32 4, !dbg !14200
  %residual.1 = load i32, ptr %28, align 4, !dbg !14200
  store i32 %residual.0, ptr %residual.dbg.spill, align 4, !dbg !14200
  %29 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4, !dbg !14200
  store i32 %residual.1, ptr %29, align 4, !dbg !14200
    #dbg_declare(ptr %residual.dbg.spill, !14165, !DIExpression(), !14201)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %30 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h168a58a0e7ce6f64E"(i32 %residual.0, i32 %residual.1, ptr align 4 @alloc_4ff007110a35aef9c03c189f429bd2d2) #17, !dbg !14202
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !14202
  %32 = extractvalue { i32, i32 } %30, 1, !dbg !14202
  store i32 %31, ptr %_0, align 4, !dbg !14202
  %33 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14202
  store i32 %32, ptr %33, align 4, !dbg !14202
  br label %bb24, !dbg !14202

bb21:                                             ; preds = %bb14
  %34 = getelementptr inbounds i8, ptr %_27, i32 4, !dbg !14198
  %ptr.0 = load ptr, ptr %34, align 4, !dbg !14198
  %35 = getelementptr inbounds i8, ptr %34, i32 4, !dbg !14198
  %ptr.1 = load i32, ptr %35, align 4, !dbg !14198
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !14198
  %36 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !14198
  store i32 %ptr.1, ptr %36, align 4, !dbg !14198
    #dbg_declare(ptr %ptr.dbg.spill, !14163, !DIExpression(), !14203)
    #dbg_declare(ptr %ptr.dbg.spill, !14167, !DIExpression(), !14204)
; call alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h180ec53471d88e62E"(ptr align 4 %self, ptr %ptr.0, i32 %ptr.1, i32 %cap1) #17, !dbg !14205
  store i32 -2147483647, ptr %_0, align 4, !dbg !14206
  br label %bb24, !dbg !14184

bb10:                                             ; No predecessors!
  unreachable, !dbg !14179
}

; alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h180ec53471d88e62E"(ptr align 4 %self, ptr %ptr.0, i32 %ptr.1, i32 %cap) unnamed_addr #2 !dbg !14207 {
start:
  %cap.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14212, !DIExpression(), !14215)
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4
  store i32 %ptr.1, ptr %0, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !14213, !DIExpression(), !14216)
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !14214, !DIExpression(), !14217)
; call core::ptr::non_null::NonNull<T>::cast
  %_5 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1822c35f19006601E"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !14218
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %_4 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h1258623afb2279a9E"(ptr %_5) #17, !dbg !14219
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14220
  store ptr %_4, ptr %1, align 4, !dbg !14220
; call core::num::niche_types::UsizeNoHighBit::new_unchecked
  %_6 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit13new_unchecked17h4b8d12aa55393029E(i32 %cap) #17, !dbg !14221
  store i32 %_6, ptr %self, align 4, !dbg !14222
  ret void, !dbg !14223
}

; alloc::raw_vec::RawVecInner<A>::try_allocate_in
; Function Attrs: nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h2d94f36e833a0501E"(ptr sret([12 x i8]) align 4 %_0, i32 %capacity, i1 zeroext %init, i32 %0, i32 %1) unnamed_addr #1 !dbg !14224 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %layout.dbg.spill = alloca [8 x i8], align 4
  %init.dbg.spill = alloca [1 x i8], align 1
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %_30 = alloca [1 x i8], align 1
  %result = alloca [8 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  %layout = alloca [8 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  %alloc = alloca [0 x i8], align 1
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !14244, !DIExpression(), !14258)
  %3 = zext i1 %init to i8
  store i8 %3, ptr %init.dbg.spill, align 1
    #dbg_declare(ptr %init.dbg.spill, !14245, !DIExpression(), !14259)
    #dbg_declare(ptr %alloc, !14246, !DIExpression(), !14260)
    #dbg_declare(ptr %elem_layout, !14247, !DIExpression(), !14261)
    #dbg_declare(ptr %layout, !14248, !DIExpression(), !14262)
    #dbg_declare(ptr %result, !14252, !DIExpression(), !14263)
  store i8 0, ptr %_30, align 1, !dbg !14264
  store i8 1, ptr %_30, align 1, !dbg !14264
  %4 = load i32, ptr %elem_layout, align 4, !dbg !14265
  %5 = getelementptr inbounds i8, ptr %elem_layout, i32 4, !dbg !14265
  %6 = load i32, ptr %5, align 4, !dbg !14265
; call alloc::raw_vec::layout_array
  call void @_ZN5alloc7raw_vec12layout_array17ha176127582342869E(ptr sret([12 x i8]) align 4 %_6, i32 %capacity, i32 %4, i32 %6) #17, !dbg !14265
  %_7 = load i32, ptr %_6, align 4, !dbg !14265
  %7 = trunc nuw i32 %_7 to i1, !dbg !14266
  br i1 %7, label %bb3, label %bb4, !dbg !14266

bb3:                                              ; preds = %start
; call <T as core::convert::Into<U>>::into
  %8 = call { i32, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E"(i32 0, i32 undef, ptr align 4 @alloc_ea40466ae459082a17e41d9be6772ba3) #17, !dbg !14267
  %_9.0 = extractvalue { i32, i32 } %8, 0, !dbg !14267
  %_9.1 = extractvalue { i32, i32 } %8, 1, !dbg !14267
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14268
  store i32 %_9.0, ptr %9, align 4, !dbg !14268
  %10 = getelementptr inbounds i8, ptr %9, i32 4, !dbg !14268
  store i32 %_9.1, ptr %10, align 4, !dbg !14268
  store i32 1, ptr %_0, align 4, !dbg !14268
  br label %bb20, !dbg !14269

bb4:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !14271
  %layout.0 = load i32, ptr %11, align 4, !dbg !14271
  %12 = getelementptr inbounds i8, ptr %11, i32 4, !dbg !14271
  %layout.1 = load i32, ptr %12, align 4, !dbg !14271
  store i32 %layout.0, ptr %layout.dbg.spill, align 4, !dbg !14271
  %13 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4, !dbg !14271
  store i32 %layout.1, ptr %13, align 4, !dbg !14271
    #dbg_declare(ptr %layout.dbg.spill, !14250, !DIExpression(), !14272)
  store i32 %layout.0, ptr %layout, align 4, !dbg !14273
  %14 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14273
  store i32 %layout.1, ptr %14, align 4, !dbg !14273
; call core::alloc::layout::Layout::size
  %_11 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !14274
  %15 = icmp eq i32 %_11, 0, !dbg !14275
  br i1 %15, label %bb7, label %bb10, !dbg !14275

bb7:                                              ; preds = %bb4
  store i8 0, ptr %_30, align 1, !dbg !14276
; call core::alloc::layout::Layout::alignment
  %_15 = call i32 @_ZN4core5alloc6layout6Layout9alignment17hcd7615b9c84f4810E(ptr align 4 %elem_layout) #17, !dbg !14277
; call alloc::raw_vec::RawVecInner<A>::new_in
  %16 = call { i32, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h838d10db299945d4E"(i32 %_15) #17, !dbg !14278
  %_13.0 = extractvalue { i32, ptr } %16, 0, !dbg !14278
  %_13.1 = extractvalue { i32, ptr } %16, 1, !dbg !14278
  %17 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14279
  store i32 %_13.0, ptr %17, align 4, !dbg !14279
  %18 = getelementptr inbounds i8, ptr %17, i32 4, !dbg !14279
  store ptr %_13.1, ptr %18, align 4, !dbg !14279
  store i32 0, ptr %_0, align 4, !dbg !14279
  br label %bb20, !dbg !14280

bb10:                                             ; preds = %bb4
  %_18 = zext i1 %init to i32, !dbg !14282
  %19 = trunc nuw i32 %_18 to i1, !dbg !14283
  br i1 %19, label %bb11, label %bb12, !dbg !14283

bb20:                                             ; preds = %bb3, %bb14, %bb7
  %20 = load i8, ptr %_30, align 1, !dbg !14284
  %21 = trunc nuw i8 %20 to i1, !dbg !14284
  br i1 %21, label %bb22, label %bb21, !dbg !14284

bb11:                                             ; preds = %bb10
  %22 = load i32, ptr %layout, align 4, !dbg !14285
  %23 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14285
  %24 = load i32, ptr %23, align 4, !dbg !14285
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %25 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hfbea98bcfbcec44fE"(ptr align 1 %alloc, i32 %22, i32 %24) #17, !dbg !14286
  %26 = extractvalue { ptr, i32 } %25, 0, !dbg !14286
  %27 = extractvalue { ptr, i32 } %25, 1, !dbg !14286
  store ptr %26, ptr %result, align 4, !dbg !14286
  %28 = getelementptr inbounds i8, ptr %result, i32 4, !dbg !14286
  store i32 %27, ptr %28, align 4, !dbg !14286
  br label %bb13, !dbg !14286

bb12:                                             ; preds = %bb10
  %29 = load i32, ptr %layout, align 4, !dbg !14287
  %30 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14287
  %31 = load i32, ptr %30, align 4, !dbg !14287
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %32 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE"(ptr align 1 %alloc, i32 %29, i32 %31) #17, !dbg !14288
  %33 = extractvalue { ptr, i32 } %32, 0, !dbg !14288
  %34 = extractvalue { ptr, i32 } %32, 1, !dbg !14288
  store ptr %33, ptr %result, align 4, !dbg !14288
  %35 = getelementptr inbounds i8, ptr %result, i32 4, !dbg !14288
  store i32 %34, ptr %35, align 4, !dbg !14288
  br label %bb13, !dbg !14288

bb13:                                             ; preds = %bb11, %bb12
  %36 = load ptr, ptr %result, align 4, !dbg !14289
  %37 = getelementptr inbounds i8, ptr %result, i32 4, !dbg !14289
  %38 = load i32, ptr %37, align 4, !dbg !14289
  %39 = ptrtoint ptr %36 to i32, !dbg !14289
  %40 = icmp eq i32 %39, 0, !dbg !14289
  %_21 = select i1 %40, i32 1, i32 0, !dbg !14289
  %41 = trunc nuw i32 %_21 to i1, !dbg !14290
  br i1 %41, label %bb14, label %bb15, !dbg !14290

bb14:                                             ; preds = %bb13
  %_24.0 = load i32, ptr %layout, align 4, !dbg !14291
  %42 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14291
  %_24.1 = load i32, ptr %42, align 4, !dbg !14291
; call <T as core::convert::Into<U>>::into
  %43 = call { i32, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E"(i32 %_24.0, i32 %_24.1, ptr align 4 @alloc_d991fc29e626d8fdb18f49151c8d8c2e) #17, !dbg !14292
  %_23.0 = extractvalue { i32, i32 } %43, 0, !dbg !14292
  %_23.1 = extractvalue { i32, i32 } %43, 1, !dbg !14292
  %44 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14293
  store i32 %_23.0, ptr %44, align 4, !dbg !14293
  %45 = getelementptr inbounds i8, ptr %44, i32 4, !dbg !14293
  store i32 %_23.1, ptr %45, align 4, !dbg !14293
  store i32 1, ptr %_0, align 4, !dbg !14293
  br label %bb20, !dbg !14280

bb15:                                             ; preds = %bb13
  %ptr.0 = load ptr, ptr %result, align 4, !dbg !14294
  %46 = getelementptr inbounds i8, ptr %result, i32 4, !dbg !14294
  %ptr.1 = load i32, ptr %46, align 4, !dbg !14294
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !14294
  %47 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !14294
  store i32 %ptr.1, ptr %47, align 4, !dbg !14294
    #dbg_declare(ptr %ptr.dbg.spill, !14254, !DIExpression(), !14295)
    #dbg_declare(ptr %ptr.dbg.spill, !14256, !DIExpression(), !14296)
; call core::ptr::non_null::NonNull<T>::cast
  %_27 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1822c35f19006601E"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !14297
; call <core::ptr::unique::Unique<T> as core::convert::From<core::ptr::non_null::NonNull<T>>>::from
  %_26 = call ptr @"_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h1258623afb2279a9E"(ptr %_27) #17, !dbg !14298
; call core::num::niche_types::UsizeNoHighBit::new_unchecked
  %_28 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit13new_unchecked17h4b8d12aa55393029E(i32 %capacity) #17, !dbg !14299
  store i8 0, ptr %_30, align 1, !dbg !14300
  %48 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14301
  store i32 %_28, ptr %48, align 4, !dbg !14301
  %49 = getelementptr inbounds i8, ptr %48, i32 4, !dbg !14301
  store ptr %_26, ptr %49, align 4, !dbg !14301
  store i32 0, ptr %_0, align 4, !dbg !14301
  br label %bb21, !dbg !14284

bb21:                                             ; preds = %bb22, %bb20, %bb15
  ret void, !dbg !14302

bb22:                                             ; preds = %bb20
  br label %bb21, !dbg !14284

bb2:                                              ; No predecessors!
  unreachable, !dbg !14269
}

; alloc::raw_vec::RawVecInner<A>::shrink_unchecked
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17hbecc9e62544ed3edE"(ptr align 4 %self, i32 %cap, i32 %0, i32 %1) unnamed_addr #1 !dbg !14303 {
start:
  %addr.dbg.spill.i = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %residual.dbg.spill = alloca [8 x i8], align 4
  %ptr.dbg.spill1 = alloca [8 x i8], align 4
  %new_size.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %cap.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_23 = alloca [12 x i8], align 4
  %_22 = alloca [12 x i8], align 4
  %new_layout = alloca [8 x i8], align 4
  %mem = alloca [12 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  %layout = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14308, !DIExpression(), !14326)
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !14309, !DIExpression(), !14327)
    #dbg_declare(ptr %elem_layout, !14310, !DIExpression(), !14328)
    #dbg_declare(ptr %layout, !14313, !DIExpression(), !14329)
    #dbg_declare(ptr %mem, !14314, !DIExpression(), !14330)
    #dbg_declare(ptr %new_layout, !14320, !DIExpression(), !14331)
  %3 = load i32, ptr %elem_layout, align 4, !dbg !14332
  %4 = getelementptr inbounds i8, ptr %elem_layout, i32 4, !dbg !14332
  %5 = load i32, ptr %4, align 4, !dbg !14332
; call alloc::raw_vec::RawVecInner<A>::current_memory
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h770c0f671b856ae0E"(ptr sret([12 x i8]) align 4 %_6, ptr align 4 %self, i32 %3, i32 %5) #17, !dbg !14333
  %6 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !14334
  %7 = load i32, ptr %6, align 4, !dbg !14334
  %8 = icmp eq i32 %7, 0, !dbg !14334
  %_8 = select i1 %8, i32 0, i32 1, !dbg !14334
  %9 = trunc nuw i32 %_8 to i1, !dbg !14335
  br i1 %9, label %bb2, label %bb3, !dbg !14335

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %mem, ptr align 4 %_6, i32 12, i1 false), !dbg !14330
  %ptr = load ptr, ptr %mem, align 4, !dbg !14336
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !14336
    #dbg_declare(ptr %ptr.dbg.spill, !14311, !DIExpression(), !14337)
  %10 = getelementptr inbounds i8, ptr %mem, i32 4, !dbg !14338
  %11 = load i32, ptr %10, align 4, !dbg !14338
  %12 = getelementptr inbounds i8, ptr %10, i32 4, !dbg !14338
  %13 = load i32, ptr %12, align 4, !dbg !14338
  store i32 %11, ptr %layout, align 4, !dbg !14338
  %14 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14338
  store i32 %13, ptr %14, align 4, !dbg !14338
  %15 = icmp eq i32 %cap, 0, !dbg !14339
  br i1 %15, label %bb4, label %bb5, !dbg !14339

bb3:                                              ; preds = %start
  store i32 -2147483647, ptr %_0, align 4, !dbg !14340
  br label %bb21, !dbg !14341

bb4:                                              ; preds = %bb2
  %_11 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14343
  %16 = load i32, ptr %layout, align 4, !dbg !14343
  %17 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14343
  %18 = load i32, ptr %17, align 4, !dbg !14343
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E"(ptr align 1 %_11, ptr %ptr, i32 %16, i32 %18) #17, !dbg !14344
; call core::alloc::layout::Layout::align
  %_14 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %elem_layout) #17, !dbg !14345
  store i32 %_14, ptr %addr.dbg.spill.i, align 4
    #dbg_declare(ptr %addr.dbg.spill.i, !4111, !DIExpression(), !14346)
  %_0.i2 = inttoptr i32 %_14 to ptr, !dbg !14348
; call core::ptr::unique::Unique<T>::new_unchecked
  %_12 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1a2c11e95994a124E"(ptr %_0.i2) #17, !dbg !14349
  %19 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14350
  store ptr %_12, ptr %19, align 4, !dbg !14350
  store i32 0, ptr %self, align 4, !dbg !14351
  br label %bb20, !dbg !14352

bb5:                                              ; preds = %bb2
; call core::alloc::layout::Layout::size
  %_17 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !14353
  store i32 %_17, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !14125, !DIExpression(), !14354)
  store i32 %cap, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !14128, !DIExpression(), !14356)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !14357
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit", !dbg !14357

bb2.i:                                            ; preds = %bb5
; call core::num::<impl usize>::unchecked_mul::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h04c96da029baf90aE"(i32 %_17, i32 %cap, ptr align 4 @alloc_71a073a03be40d03de6e75359f746265) #17, !dbg !14358
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit", !dbg !14358

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit": ; preds = %bb5, %bb2.i
  %_0.i = mul nuw i32 %_17, %cap, !dbg !14359
  store i32 %_0.i, ptr %new_size.dbg.spill, align 4, !dbg !14360
    #dbg_declare(ptr %new_size.dbg.spill, !14318, !DIExpression(), !14361)
; call core::alloc::layout::Layout::align
  %_20 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %layout) #17, !dbg !14362
; call core::alloc::layout::Layout::from_size_align_unchecked
  %20 = call { i32, i32 } @_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E(i32 %_0.i, i32 %_20, ptr align 4 @alloc_7ba6974329164b8fe3be58084a551778) #17, !dbg !14363
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !14363
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !14363
  store i32 %21, ptr %new_layout, align 4, !dbg !14363
  %23 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !14363
  store i32 %22, ptr %23, align 4, !dbg !14363
  %_25 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14364
  %24 = load i32, ptr %layout, align 4, !dbg !14364
  %25 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14364
  %26 = load i32, ptr %25, align 4, !dbg !14364
  %27 = load i32, ptr %new_layout, align 4, !dbg !14364
  %28 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !14364
  %29 = load i32, ptr %28, align 4, !dbg !14364
; call <alloc::alloc::Global as core::alloc::Allocator>::shrink
  %30 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h05dfe32dcc24d201E"(ptr align 1 %_25, ptr %ptr, i32 %24, i32 %26, i32 %27, i32 %29) #17, !dbg !14365
  %_24.0 = extractvalue { ptr, i32 } %30, 0, !dbg !14365
  %_24.1 = extractvalue { ptr, i32 } %30, 1, !dbg !14365
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h38cc76addc955dbdE"(ptr sret([12 x i8]) align 4 %_23, ptr %_24.0, i32 %_24.1, ptr align 4 %new_layout) #17, !dbg !14366
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  call void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4f10bbc77f0ae91cE"(ptr sret([12 x i8]) align 4 %_22, ptr align 4 %_23) #17, !dbg !14364
  %_28 = load i32, ptr %_22, align 4, !dbg !14364
  %31 = trunc nuw i32 %_28 to i1, !dbg !14364
  br i1 %31, label %bb19, label %bb18, !dbg !14364

bb20:                                             ; preds = %bb18, %bb4
  store i32 -2147483647, ptr %_0, align 4, !dbg !14367
  br label %bb21, !dbg !14368

bb19:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit"
  %32 = getelementptr inbounds i8, ptr %_22, i32 4, !dbg !14369
  %residual.0 = load i32, ptr %32, align 4, !dbg !14369
  %33 = getelementptr inbounds i8, ptr %32, i32 4, !dbg !14369
  %residual.1 = load i32, ptr %33, align 4, !dbg !14369
  store i32 %residual.0, ptr %residual.dbg.spill, align 4, !dbg !14369
  %34 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4, !dbg !14369
  store i32 %residual.1, ptr %34, align 4, !dbg !14369
    #dbg_declare(ptr %residual.dbg.spill, !14322, !DIExpression(), !14370)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %35 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcec71ed72ec794a3E"(i32 %residual.0, i32 %residual.1, ptr align 4 @alloc_7102491c513040aabca9c3cbb862be5b) #17, !dbg !14371
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !14371
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !14371
  store i32 %36, ptr %_0, align 4, !dbg !14371
  %38 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14371
  store i32 %37, ptr %38, align 4, !dbg !14371
  br label %bb21, !dbg !14371

bb18:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE.exit"
  %39 = getelementptr inbounds i8, ptr %_22, i32 4, !dbg !14364
  %ptr.0 = load ptr, ptr %39, align 4, !dbg !14364
  %40 = getelementptr inbounds i8, ptr %39, i32 4, !dbg !14364
  %ptr.1 = load i32, ptr %40, align 4, !dbg !14364
  store ptr %ptr.0, ptr %ptr.dbg.spill1, align 4, !dbg !14364
  %41 = getelementptr inbounds i8, ptr %ptr.dbg.spill1, i32 4, !dbg !14364
  store i32 %ptr.1, ptr %41, align 4, !dbg !14364
    #dbg_declare(ptr %ptr.dbg.spill1, !14316, !DIExpression(), !14372)
    #dbg_declare(ptr %ptr.dbg.spill1, !14324, !DIExpression(), !14373)
; call alloc::raw_vec::RawVecInner<A>::set_ptr_and_cap
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h180ec53471d88e62E"(ptr align 4 %self, ptr %ptr.0, i32 %ptr.1, i32 %cap) #17, !dbg !14374
  br label %bb20, !dbg !14374

bb21:                                             ; preds = %bb3, %bb19, %bb20
  %42 = load i32, ptr %_0, align 4, !dbg !14368
  %43 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14368
  %44 = load i32, ptr %43, align 4, !dbg !14368
  %45 = insertvalue { i32, i32 } poison, i32 %42, 0, !dbg !14368
  %46 = insertvalue { i32, i32 } %45, i32 %44, 1, !dbg !14368
  ret { i32, i32 } %46, !dbg !14368

bb17:                                             ; No predecessors!
  unreachable, !dbg !14364
}

; alloc::raw_vec::RawVecInner<A>::shrink_unchecked::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hfb1d4dc77e5d9ed8E"(ptr align 4 %_1) unnamed_addr #2 !dbg !14375 {
start:
  %_2.dbg.spill = alloca [0 x i8], align 1
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !14379, !DIExpression(DW_OP_deref), !14381)
    #dbg_declare(ptr %_2.dbg.spill, !14380, !DIExpression(), !14382)
  %_3.0 = load i32, ptr %_1, align 4, !dbg !14383
  %0 = getelementptr inbounds i8, ptr %_1, i32 4, !dbg !14383
  %_3.1 = load i32, ptr %0, align 4, !dbg !14383
  %1 = insertvalue { i32, i32 } poison, i32 %_3.0, 0, !dbg !14384
  %2 = insertvalue { i32, i32 } %1, i32 %_3.1, 1, !dbg !14384
  ret { i32, i32 } %2, !dbg !14384
}

; alloc::raw_vec::RawVecInner<A>::with_capacity_in
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17hc583444d3801a3b5E"(i32 %capacity, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #2 !dbg !14385 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %err.dbg.spill = alloca [8 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %capacity.dbg.spill = alloca [4 x i8], align 4
  %this = alloca [8 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  store i32 %capacity, ptr %capacity.dbg.spill, align 4
    #dbg_declare(ptr %capacity.dbg.spill, !14390, !DIExpression(), !14397)
    #dbg_declare(ptr %alloc.dbg.spill, !14391, !DIExpression(), !14398)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !14392, !DIExpression(), !14399)
    #dbg_declare(ptr %this, !14393, !DIExpression(), !14400)
; call alloc::raw_vec::RawVecInner<A>::try_allocate_in
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h2d94f36e833a0501E"(ptr sret([12 x i8]) align 4 %_4, i32 %capacity, i1 zeroext false, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14401
  %_6 = load i32, ptr %_4, align 4, !dbg !14401
  %1 = trunc nuw i32 %_6 to i1, !dbg !14402
  br i1 %1, label %bb3, label %bb4, !dbg !14402

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !14403
  %err.0 = load i32, ptr %2, align 4, !dbg !14403
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !14403
  %err.1 = load i32, ptr %3, align 4, !dbg !14403
  store i32 %err.0, ptr %err.dbg.spill, align 4, !dbg !14403
  %4 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4, !dbg !14403
  store i32 %err.1, ptr %4, align 4, !dbg !14403
    #dbg_declare(ptr %err.dbg.spill, !14395, !DIExpression(), !14404)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E(i32 %err.0, i32 %err.1) #18, !dbg !14405
  unreachable, !dbg !14405

bb4:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !14406
  %6 = load i32, ptr %5, align 4, !dbg !14406
  %7 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !14406
  %8 = load ptr, ptr %7, align 4, !dbg !14406
  store i32 %6, ptr %this, align 4, !dbg !14406
  %9 = getelementptr inbounds i8, ptr %this, i32 4, !dbg !14406
  store ptr %8, ptr %9, align 4, !dbg !14406
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_10 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E"(ptr align 4 %this, i32 0, i32 %capacity, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14407
  %_9 = xor i1 %_10, true, !dbg !14408
  %10 = zext i1 %_9 to i8
  store i8 %10, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !11081, !DIExpression(), !14409)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !14411
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14411

bb2.i:                                            ; preds = %bb4
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %_9, ptr align 4 @alloc_d09fb3ffb1ef378f27a3331ad7aebb56) #17, !dbg !14412
  br label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14412

_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit: ; preds = %bb4, %bb2.i
  %_0.0 = load i32, ptr %this, align 4, !dbg !14413
  %11 = getelementptr inbounds i8, ptr %this, i32 4, !dbg !14413
  %_0.1 = load ptr, ptr %11, align 4, !dbg !14413
  %12 = insertvalue { i32, ptr } poison, i32 %_0.0, 0, !dbg !14414
  %13 = insertvalue { i32, ptr } %12, ptr %_0.1, 1, !dbg !14414
  ret { i32, ptr } %13, !dbg !14414

bb2:                                              ; No predecessors!
  unreachable, !dbg !14401
}

; alloc::raw_vec::RawVecInner<A>::from_raw_parts_in
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17ha6a9c50a7c497da4E"(ptr %ptr, i32 %cap) unnamed_addr #2 !dbg !14415 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %cap.dbg.spill = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !14420, !DIExpression(), !14423)
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !14421, !DIExpression(), !14424)
    #dbg_declare(ptr %alloc.dbg.spill, !14422, !DIExpression(), !14425)
; call core::ptr::unique::Unique<T>::new_unchecked
  %_4 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1a2c11e95994a124E"(ptr %ptr) #17, !dbg !14426
  %0 = insertvalue { i32, ptr } poison, i32 %cap, 0, !dbg !14427
  %1 = insertvalue { i32, ptr } %0, ptr %_4, 1, !dbg !14427
  ret { i32, ptr } %1, !dbg !14427
}

; alloc::raw_vec::RawVecInner<A>::try_reserve_exact
; Function Attrs: nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17ha3936f53c8c0dd9aE"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #1 !dbg !14428 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %residual.dbg.spill = alloca [8 x i8], align 4
  %val.dbg.spill = alloca [0 x i8], align 1
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14431, !DIExpression(), !14439)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !14432, !DIExpression(), !14440)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !14433, !DIExpression(), !14441)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !14434, !DIExpression(), !14442)
    #dbg_declare(ptr %val.dbg.spill, !14437, !DIExpression(), !14443)
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_5 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14444
  br i1 %_5, label %bb2, label %bb7, !dbg !14445

bb7:                                              ; preds = %bb2, %start
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_13 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14446
  %_12 = xor i1 %_13, true, !dbg !14447
  %1 = zext i1 %_12 to i8
  store i8 %1, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !11081, !DIExpression(), !14448)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !14450
  br i1 %_2.i, label %bb2.i, label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14450

bb2.i:                                            ; preds = %bb7
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %_12, ptr align 4 @alloc_062a3ac1849f81941fae91d29015b946) #17, !dbg !14451
  br label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14451

_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit: ; preds = %bb7, %bb2.i
  store i32 -2147483647, ptr %_0, align 4, !dbg !14452
  br label %bb10, !dbg !14453

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVecInner<A>::grow_exact
  %2 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hded2e673bfe1dec0E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14454
  %_8.0 = extractvalue { i32, i32 } %2, 0, !dbg !14454
  %_8.1 = extractvalue { i32, i32 } %2, 1, !dbg !14454
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %3 = call { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6330f699d96fc25aE"(i32 %_8.0, i32 %_8.1) #17, !dbg !14455
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14455
  %5 = extractvalue { i32, i32 } %3, 1, !dbg !14455
  store i32 %4, ptr %_7, align 4, !dbg !14455
  %6 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !14455
  store i32 %5, ptr %6, align 4, !dbg !14455
  %7 = load i32, ptr %_7, align 4, !dbg !14455
  %8 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !14455
  %9 = load i32, ptr %8, align 4, !dbg !14455
  %10 = icmp eq i32 %7, -2147483647, !dbg !14455
  %_9 = select i1 %10, i32 0, i32 1, !dbg !14455
  %11 = trunc nuw i32 %_9 to i1, !dbg !14455
  br i1 %11, label %bb6, label %bb7, !dbg !14455

bb6:                                              ; preds = %bb2
  %residual.0 = load i32, ptr %_7, align 4, !dbg !14456
  %12 = getelementptr inbounds i8, ptr %_7, i32 4, !dbg !14456
  %residual.1 = load i32, ptr %12, align 4, !dbg !14456
  store i32 %residual.0, ptr %residual.dbg.spill, align 4, !dbg !14456
  %13 = getelementptr inbounds i8, ptr %residual.dbg.spill, i32 4, !dbg !14456
  store i32 %residual.1, ptr %13, align 4, !dbg !14456
    #dbg_declare(ptr %residual.dbg.spill, !14435, !DIExpression(), !14457)
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %14 = call { i32, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h168a58a0e7ce6f64E"(i32 %residual.0, i32 %residual.1, ptr align 4 @alloc_8b4f1efc8d6bf5608d2860c2bca8b7ea) #17, !dbg !14458
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !14458
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !14458
  store i32 %15, ptr %_0, align 4, !dbg !14458
  %17 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14458
  store i32 %16, ptr %17, align 4, !dbg !14458
  br label %bb10, !dbg !14458

bb10:                                             ; preds = %bb6, %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
  %18 = load i32, ptr %_0, align 4, !dbg !14453
  %19 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14453
  %20 = load i32, ptr %19, align 4, !dbg !14453
  %21 = insertvalue { i32, i32 } poison, i32 %18, 0, !dbg !14453
  %22 = insertvalue { i32, i32 } %21, i32 %20, 1, !dbg !14453
  ret { i32, i32 } %22, !dbg !14453

bb5:                                              ; No predecessors!
  unreachable, !dbg !14455
}

; alloc::raw_vec::RawVecInner<A>::ptr
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17h64753ddab8eed799E"(ptr align 4 %self) unnamed_addr #2 !dbg !14459 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14465, !DIExpression(), !14466)
; call alloc::raw_vec::RawVecInner<A>::non_null
  %_2 = call ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17h22f7235feed1ba91E"(ptr align 4 %self) #17, !dbg !14467
  store ptr %_2, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4329, !DIExpression(), !14468)
  ret ptr %_2, !dbg !14470
}

; alloc::raw_vec::RawVecInner<A>::new_in
; Function Attrs: inlinehint nounwind
define dso_local { i32, ptr } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h838d10db299945d4E"(i32 %align) unnamed_addr #2 !dbg !14471 {
start:
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %align.dbg.spill = alloca [4 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %alloc.dbg.spill, !14476, !DIExpression(), !14480)
  store i32 %align, ptr %align.dbg.spill, align 4
    #dbg_declare(ptr %align.dbg.spill, !14477, !DIExpression(), !14481)
; call core::ptr::alignment::Alignment::as_nonzero
  %_5 = call i32 @_ZN4core3ptr9alignment9Alignment10as_nonzero17h91cf2c4e24e67346E(i32 %align) #17, !dbg !14482
; call core::ptr::non_null::NonNull<T>::without_provenance
  %_4 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hb3cf249ff93074e0E"(i32 %_5) #17, !dbg !14483
; call core::ptr::unique::Unique<T>::from_non_null
  %ptr = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$13from_non_null17h4d115aa3d57a36cbE"(ptr %_4) #17, !dbg !14484
  store ptr %ptr, ptr %ptr.dbg.spill, align 4, !dbg !14484
    #dbg_declare(ptr %ptr.dbg.spill, !14478, !DIExpression(), !14485)
  %0 = insertvalue { i32, ptr } { i32 0, ptr poison }, ptr %ptr, 1, !dbg !14486
  ret { i32, ptr } %0, !dbg !14486
}

; alloc::raw_vec::RawVecInner<A>::shrink
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h82e208a12709dad9E"(ptr align 4 %self, i32 %cap, i32 %0, i32 %1) unnamed_addr #2 !dbg !14487 {
start:
  %cap.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_10 = alloca [24 x i8], align 4
  %elem_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %elem_layout, align 4
  %2 = getelementptr inbounds i8, ptr %elem_layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14490, !DIExpression(), !14493)
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !14491, !DIExpression(), !14494)
    #dbg_declare(ptr %elem_layout, !14492, !DIExpression(), !14495)
; call core::alloc::layout::Layout::size
  %_7 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %elem_layout) #17, !dbg !14496
; call alloc::raw_vec::RawVecInner<A>::capacity
  %_5 = call i32 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17h20c3ff9e35767918E"(ptr align 4 %self, i32 %_7) #17, !dbg !14497
  %_4 = icmp ule i32 %cap, %_5, !dbg !14498
  br i1 %_4, label %bb3, label %bb4, !dbg !14498

bb4:                                              ; preds = %start
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_10, ptr align 4 @alloc_fd1140a0ff4854b4b7db0073be8fd266) #17, !dbg !14499
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_10, ptr align 4 @alloc_084934801ed7c09131a5d6f465cc3d8f) #18, !dbg !14499
  unreachable, !dbg !14499

bb3:                                              ; preds = %start
  %3 = load i32, ptr %elem_layout, align 4, !dbg !14500
  %4 = getelementptr inbounds i8, ptr %elem_layout, i32 4, !dbg !14500
  %5 = load i32, ptr %4, align 4, !dbg !14500
; call alloc::raw_vec::RawVecInner<A>::shrink_unchecked
  %6 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17hbecc9e62544ed3edE"(ptr align 4 %self, i32 %cap, i32 %3, i32 %5) #17, !dbg !14501
  %_0.0 = extractvalue { i32, i32 } %6, 0, !dbg !14501
  %_0.1 = extractvalue { i32, i32 } %6, 1, !dbg !14501
  %7 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !14502
  %8 = insertvalue { i32, i32 } %7, i32 %_0.1, 1, !dbg !14502
  ret { i32, i32 } %8, !dbg !14502
}

; alloc::raw_vec::RawVecInner<A>::reserve
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17h9d399b38c90da136E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #2 !dbg !14503 {
start:
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14506, !DIExpression(), !14510)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !14507, !DIExpression(), !14511)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !14508, !DIExpression(), !14512)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !14509, !DIExpression(), !14513)
; call alloc::raw_vec::RawVecInner<A>::needs_to_grow
  %_5 = call zeroext i1 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14514
  br i1 %_5, label %bb2, label %bb3, !dbg !14515

bb3:                                              ; preds = %bb2, %start
  ret void, !dbg !14516

bb2:                                              ; preds = %start
; call alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17h9c1f4b28d8fd7447E"(ptr align 4 %self, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14517
  br label %bb3, !dbg !14517
}

; alloc::raw_vec::RawVecInner<A>::reserve::do_reserve_and_handle
; Function Attrs: cold nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17h9c1f4b28d8fd7447E"(ptr align 4 %slf, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #3 !dbg !14518 {
start:
  %err.dbg.spill = alloca [8 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %additional.dbg.spill = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %slf.dbg.spill = alloca [4 x i8], align 4
  %_5 = alloca [8 x i8], align 4
  store ptr %slf, ptr %slf.dbg.spill, align 4
    #dbg_declare(ptr %slf.dbg.spill, !14521, !DIExpression(), !14527)
  store i32 %len, ptr %len.dbg.spill, align 4
    #dbg_declare(ptr %len.dbg.spill, !14522, !DIExpression(), !14528)
  store i32 %additional, ptr %additional.dbg.spill, align 4
    #dbg_declare(ptr %additional.dbg.spill, !14523, !DIExpression(), !14529)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !14524, !DIExpression(), !14530)
; call alloc::raw_vec::RawVecInner<A>::grow_amortized
  %1 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17h07c1051aad931779E"(ptr align 4 %slf, i32 %len, i32 %additional, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14531
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14531
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !14531
  store i32 %2, ptr %_5, align 4, !dbg !14531
  %4 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14531
  store i32 %3, ptr %4, align 4, !dbg !14531
  %5 = load i32, ptr %_5, align 4, !dbg !14532
  %6 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14532
  %7 = load i32, ptr %6, align 4, !dbg !14532
  %8 = icmp eq i32 %5, -2147483647, !dbg !14532
  %_6 = select i1 %8, i32 0, i32 1, !dbg !14532
  %9 = trunc nuw i32 %_6 to i1, !dbg !14533
  br i1 %9, label %bb2, label %bb3, !dbg !14533

bb2:                                              ; preds = %start
  %err.0 = load i32, ptr %_5, align 4, !dbg !14534
  %10 = getelementptr inbounds i8, ptr %_5, i32 4, !dbg !14534
  %err.1 = load i32, ptr %10, align 4, !dbg !14534
  store i32 %err.0, ptr %err.dbg.spill, align 4, !dbg !14534
  %11 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4, !dbg !14534
  store i32 %err.1, ptr %11, align 4, !dbg !14534
    #dbg_declare(ptr %err.dbg.spill, !14525, !DIExpression(), !14534)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E(i32 %err.0, i32 %err.1) #18, !dbg !14535
  unreachable, !dbg !14535

bb3:                                              ; preds = %start
  ret void, !dbg !14536

bb4:                                              ; No predecessors!
  unreachable, !dbg !14537
}

; alloc::raw_vec::RawVecInner<A>::capacity
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17h20c3ff9e35767918E"(ptr align 4 %self, i32 %elem_size) unnamed_addr #2 !dbg !14538 {
start:
  %elem_size.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14543, !DIExpression(), !14545)
  store i32 %elem_size, ptr %elem_size.dbg.spill, align 4
    #dbg_declare(ptr %elem_size.dbg.spill, !14544, !DIExpression(), !14546)
  %0 = icmp eq i32 %elem_size, 0, !dbg !14547
  br i1 %0, label %bb1, label %bb2, !dbg !14547

bb1:                                              ; preds = %start
  store i32 -1, ptr %_0, align 4, !dbg !14548
  br label %bb3, !dbg !14549

bb2:                                              ; preds = %start
  %_3 = load i32, ptr %self, align 4, !dbg !14550
; call core::num::niche_types::UsizeNoHighBit::as_inner
  %1 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E(i32 %_3) #17, !dbg !14551
  store i32 %1, ptr %_0, align 4, !dbg !14551
  br label %bb3, !dbg !14551

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i32, ptr %_0, align 4, !dbg !14552
  ret i32 %2, !dbg !14552
}

; alloc::raw_vec::RawVecInner<A>::grow_one
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17h46f86bdad3c18f22E"(ptr align 4 %self, i32 %elem_layout.0, i32 %elem_layout.1) unnamed_addr #2 !dbg !14553 {
start:
  %err.dbg.spill = alloca [8 x i8], align 4
  %elem_layout.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14556, !DIExpression(), !14560)
  store i32 %elem_layout.0, ptr %elem_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %elem_layout.dbg.spill, i32 4
  store i32 %elem_layout.1, ptr %0, align 4
    #dbg_declare(ptr %elem_layout.dbg.spill, !14557, !DIExpression(), !14561)
  %_5 = load i32, ptr %self, align 4, !dbg !14562
; call core::num::niche_types::UsizeNoHighBit::as_inner
  %_4 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E(i32 %_5) #17, !dbg !14563
; call alloc::raw_vec::RawVecInner<A>::grow_amortized
  %1 = call { i32, i32 } @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17h07c1051aad931779E"(ptr align 4 %self, i32 %_4, i32 1, i32 %elem_layout.0, i32 %elem_layout.1) #17, !dbg !14564
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14564
  %3 = extractvalue { i32, i32 } %1, 1, !dbg !14564
  store i32 %2, ptr %_3, align 4, !dbg !14564
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !14564
  store i32 %3, ptr %4, align 4, !dbg !14564
  %5 = load i32, ptr %_3, align 4, !dbg !14565
  %6 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !14565
  %7 = load i32, ptr %6, align 4, !dbg !14565
  %8 = icmp eq i32 %5, -2147483647, !dbg !14565
  %_6 = select i1 %8, i32 0, i32 1, !dbg !14565
  %9 = trunc nuw i32 %_6 to i1, !dbg !14566
  br i1 %9, label %bb3, label %bb4, !dbg !14566

bb3:                                              ; preds = %start
  %err.0 = load i32, ptr %_3, align 4, !dbg !14567
  %10 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !14567
  %err.1 = load i32, ptr %10, align 4, !dbg !14567
  store i32 %err.0, ptr %err.dbg.spill, align 4, !dbg !14567
  %11 = getelementptr inbounds i8, ptr %err.dbg.spill, i32 4, !dbg !14567
  store i32 %err.1, ptr %11, align 4, !dbg !14567
    #dbg_declare(ptr %err.dbg.spill, !14558, !DIExpression(), !14567)
; call alloc::raw_vec::handle_error
  call void @_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E(i32 %err.0, i32 %err.1) #18, !dbg !14568
  unreachable, !dbg !14568

bb4:                                              ; preds = %start
  ret void, !dbg !14569

bb5:                                              ; No predecessors!
  unreachable, !dbg !14570
}

; alloc::raw_vec::RawVecInner<A>::non_null
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17h22f7235feed1ba91E"(ptr align 4 %self) unnamed_addr #2 !dbg !14571 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14576, !DIExpression(), !14577)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14578
  %_3 = load ptr, ptr %0, align 4, !dbg !14578
; call core::ptr::unique::Unique<T>::cast
  %_2 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h51c98d4fd47d6bb9E"(ptr %_3) #17, !dbg !14579
; call core::ptr::unique::Unique<T>::as_non_null_ptr
  %_0 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h470acafb23eed9e7E"(ptr %_2) #17, !dbg !14580
  ret ptr %_0, !dbg !14581
}

; alloc::raw_vec::RawVecInner<A>::allocator
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17h72d43e87e84d887dE"(ptr align 4 %self) unnamed_addr #2 !dbg !14582 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14587, !DIExpression(), !14588)
  %_0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14589
  ret ptr %_0, !dbg !14590
}

; alloc::raw_vec::new_cap
; Function Attrs: nounwind
define dso_local i32 @_ZN5alloc7raw_vec7new_cap17hc3d2e3f9b4ae8d28E(i32 %cap) unnamed_addr #1 !dbg !14591 {
start:
  %cap.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store i32 %cap, ptr %cap.dbg.spill, align 4
    #dbg_declare(ptr %cap.dbg.spill, !14593, !DIExpression(), !14594)
  br label %bb2, !dbg !14595

bb2:                                              ; preds = %start
; call core::num::niche_types::UsizeNoHighBit::new_unchecked
  %0 = call i32 @_ZN4core3num11niche_types14UsizeNoHighBit13new_unchecked17h4b8d12aa55393029E(i32 %cap) #17, !dbg !14596
  store i32 %0, ptr %_0, align 4, !dbg !14596
  br label %bb3, !dbg !14596

bb3:                                              ; preds = %bb2
  %1 = load i32, ptr %_0, align 4, !dbg !14597
  ret i32 %1, !dbg !14597

bb1:                                              ; No predecessors!
  unreachable
}

; <alloc::string::String as core::clone::Clone>::clone_from
; Function Attrs: nounwind
define dso_local void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$10clone_from17h7bb1a6ed5ba0ecb4E"(ptr align 4 %self, ptr align 4 %source) unnamed_addr #1 !dbg !14598 {
start:
  %source.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14603, !DIExpression(), !14605)
  store ptr %source, ptr %source.dbg.spill, align 4
    #dbg_declare(ptr %source.dbg.spill, !14604, !DIExpression(), !14606)
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone_from
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17hada651d17ab8da4cE"(ptr align 4 %self, ptr align 4 %source) #17, !dbg !14607
  ret void, !dbg !14608
}

; <alloc::string::String as core::clone::Clone>::clone
; Function Attrs: nounwind
define dso_local void @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17ha48ed470ad5ce51dE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !14609 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14613, !DIExpression(), !14614)
; call <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
  call void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h8a7ffb87d4b33583E"(ptr sret([12 x i8]) align 4 %_2, ptr align 4 %self) #17, !dbg !14615
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_2, i32 12, i1 false), !dbg !14616
  ret void, !dbg !14617
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hfcd12e315e5af83bE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !14618 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14621, !DIExpression(), !14623)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !14622, !DIExpression(), !14624)
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h674e141af3001a2dE"(ptr align 4 %self) #17, !dbg !14625
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !14625
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !14625
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h7747b9db9493592eE"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 %f) #17, !dbg !14626
  ret i1 %_0, !dbg !14627
}

; <alloc::string::IntoChars as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN61_$LT$alloc..string..IntoChars$u20$as$u20$core..fmt..Debug$GT$3fmt17hc8f6da332c749a4bE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !14628 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14633, !DIExpression(), !14635)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !14634, !DIExpression(), !14636)
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h6b1332a2f9e3757dE(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %f, ptr align 1 @alloc_a6e0555c935bf2b0380fc9afe17904e4, i32 9) #17, !dbg !14637
; call alloc::string::IntoChars::as_str
  %0 = call { ptr, i32 } @_ZN5alloc6string9IntoChars6as_str17h37b1358ae8af6d50E(ptr align 4 %self) #17, !dbg !14638
  %1 = extractvalue { ptr, i32 } %0, 0, !dbg !14638
  %2 = extractvalue { ptr, i32 } %0, 1, !dbg !14638
  store ptr %1, ptr %_9, align 4, !dbg !14638
  %3 = getelementptr inbounds i8, ptr %_9, i32 4, !dbg !14638
  store i32 %2, ptr %3, align 4, !dbg !14638
; call core::fmt::builders::DebugTuple::field
  %_3 = call align 4 ptr @_ZN4core3fmt8builders10DebugTuple5field17h8986a07ca92d9240E(ptr align 4 %_5, ptr align 1 %_9, ptr align 4 @vtable.4) #17, !dbg !14639
; call core::fmt::builders::DebugTuple::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hc4ba190d2045a9c6E(ptr align 4 %_3) #17, !dbg !14640
  ret i1 %_0, !dbg !14641
}

; <alloc::string::Drain as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define dso_local void @"_ZN62_$LT$alloc..string..Drain$u20$as$u20$core..ops..drop..Drop$GT$4drop17hccfa9614dbc83b44E"(ptr align 4 %self) unnamed_addr #1 !dbg !14642 {
start:
  %self_vec.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_11 = alloca [20 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14648, !DIExpression(), !14651)
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !14652
  %_15 = load ptr, ptr %0, align 4, !dbg !14652
; call alloc::string::String::as_mut_vec
  %self_vec = call align 4 ptr @_ZN5alloc6string6String10as_mut_vec17hf4a1d5b5c8f12214E(ptr align 4 %_15) #17, !dbg !14653
  store ptr %self_vec, ptr %self_vec.dbg.spill, align 4, !dbg !14653
    #dbg_declare(ptr %self_vec.dbg.spill, !14649, !DIExpression(), !14654)
  %1 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14655
  %_5 = load i32, ptr %1, align 4, !dbg !14655
  %2 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !14656
  %_6 = load i32, ptr %2, align 4, !dbg !14656
  %_4 = icmp ule i32 %_5, %_6, !dbg !14655
  br i1 %_4, label %bb2, label %bb6, !dbg !14655

bb6:                                              ; preds = %bb4, %bb2, %start
  ret void, !dbg !14657

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !14658
  %_8 = load i32, ptr %3, align 4, !dbg !14658
; call alloc::vec::Vec<T,A>::len
  %_9 = call i32 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE"(ptr align 4 %self_vec) #17, !dbg !14659
  %_7 = icmp ule i32 %_8, %_9, !dbg !14658
  br i1 %_7, label %bb4, label %bb6, !dbg !14658

bb4:                                              ; preds = %bb2
  %4 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14660
  %_13 = load i32, ptr %4, align 4, !dbg !14660
  %5 = getelementptr inbounds i8, ptr %self, i32 16, !dbg !14661
  %_14 = load i32, ptr %5, align 4, !dbg !14661
; call alloc::vec::Vec<T,A>::drain
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17ha53cb2c886e1fc3fE"(ptr sret([20 x i8]) align 4 %_11, ptr align 4 %self_vec, i32 %_13, i32 %_14) #17, !dbg !14662
; call core::ptr::drop_in_place<alloc::vec::drain::Drain<u8>>
  call void @"_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17ha6b0991855101781E"(ptr align 4 %_11) #17, !dbg !14663
  br label %bb6, !dbg !14663
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2517162552d9c862E"(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !14664 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !14671, !DIExpression(), !14672)
  %1 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !14673
  %2 = insertvalue { ptr, ptr } %1, ptr %self.1, 1, !dbg !14673
  ret { ptr, ptr } %2, !dbg !14673
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h347b337d6ac2367bE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14674 {
start:
    #dbg_declare(ptr %self, !14678, !DIExpression(), !14681)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !14682
  ret void, !dbg !14683
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4967a440a24d431eE"(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !14684 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !14688, !DIExpression(), !14689)
  %1 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !14690
  %2 = insertvalue { ptr, ptr } %1, ptr %self.1, 1, !dbg !14690
  ret { ptr, ptr } %2, !dbg !14690
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h59edcacceef3f6b9E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14691 {
start:
    #dbg_declare(ptr %self, !14695, !DIExpression(), !14697)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !14698
  ret void, !dbg !14699
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h688644204d7d00a6E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14700 {
start:
    #dbg_declare(ptr %self, !14704, !DIExpression(), !14706)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !14707
  ret void, !dbg !14708
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h79a45a5431d99095E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14709 {
start:
    #dbg_declare(ptr %self, !14713, !DIExpression(), !14715)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !14716
  ret void, !dbg !14717
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb4cfc9f7bf489723E"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14718 {
start:
    #dbg_declare(ptr %self, !14722, !DIExpression(), !14725)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 16, i1 false), !dbg !14726
  ret void, !dbg !14727
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hca061dacdeddffc1E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14728 {
start:
    #dbg_declare(ptr %self, !14732, !DIExpression(), !14735)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !14736
  ret void, !dbg !14737
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he71e25bf9dbdc63bE"(ptr %self.0, ptr %self.1) unnamed_addr #2 !dbg !14738 {
start:
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store ptr %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !14742, !DIExpression(), !14743)
  %1 = insertvalue { ptr, ptr } poison, ptr %self.0, 0, !dbg !14744
  %2 = insertvalue { ptr, ptr } %1, ptr %self.1, 1, !dbg !14744
  ret { ptr, ptr } %2, !dbg !14744
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17heaa26c5f633d5f6fE"(ptr sret([16 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14745 {
start:
    #dbg_declare(ptr %self, !14749, !DIExpression(), !14752)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 16, i1 false), !dbg !14753
  ret void, !dbg !14754
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86ccca6e99e4416E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !14755 {
start:
    #dbg_declare(ptr %self, !14759, !DIExpression(), !14762)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !14763
  ret void, !dbg !14764
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nounwind
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E"(ptr align 1 %self, ptr %ptr, i32 %0, i32 %1) unnamed_addr #2 !dbg !14765 {
start:
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store i32 %0, ptr %layout, align 4
  %2 = getelementptr inbounds i8, ptr %layout, i32 4
  store i32 %1, ptr %2, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14770, !DIExpression(), !14773)
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !14771, !DIExpression(), !14774)
    #dbg_declare(ptr %layout, !14772, !DIExpression(), !14775)
; call core::alloc::layout::Layout::size
  %_4 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !14776
  %3 = icmp eq i32 %_4, 0, !dbg !14777
  br i1 %3, label %bb4, label %bb2, !dbg !14777

bb4:                                              ; preds = %bb2, %start
  ret void, !dbg !14778

bb2:                                              ; preds = %start
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4329, !DIExpression(), !14779)
  %4 = load i32, ptr %layout, align 4, !dbg !14781
  %5 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !14781
  %6 = load i32, ptr %5, align 4, !dbg !14781
; call alloc::alloc::dealloc
  call void @_ZN5alloc5alloc7dealloc17h0cb82864f8267aaaE(ptr %ptr, i32 %4, i32 %6) #17, !dbg !14781
  br label %bb4, !dbg !14781
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hfbea98bcfbcec44fE"(ptr align 1 %self, i32 %layout.0, i32 %layout.1) unnamed_addr #2 !dbg !14782 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14786, !DIExpression(), !14788)
  store i32 %layout.0, ptr %layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4
  store i32 %layout.1, ptr %0, align 4
    #dbg_declare(ptr %layout.dbg.spill, !14787, !DIExpression(), !14789)
; call alloc::alloc::Global::alloc_impl
  %1 = call { ptr, i32 } @_ZN5alloc5alloc6Global10alloc_impl17h1d93fc195818213bE(ptr align 1 %self, i32 %layout.0, i32 %layout.1, i1 zeroext true) #17, !dbg !14790
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !14790
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !14790
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !14791
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !14791
  ret { ptr, i32 } %3, !dbg !14791
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he09a334fed706b5cE"(ptr align 1 %self, ptr %ptr, i32 %old_layout.0, i32 %old_layout.1, i32 %new_layout.0, i32 %new_layout.1) unnamed_addr #2 !dbg !14792 {
start:
  %new_layout.dbg.spill = alloca [8 x i8], align 4
  %old_layout.dbg.spill = alloca [8 x i8], align 4
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14796, !DIExpression(), !14800)
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !14797, !DIExpression(), !14801)
  store i32 %old_layout.0, ptr %old_layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %old_layout.dbg.spill, i32 4
  store i32 %old_layout.1, ptr %0, align 4
    #dbg_declare(ptr %old_layout.dbg.spill, !14798, !DIExpression(), !14802)
  store i32 %new_layout.0, ptr %new_layout.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %new_layout.dbg.spill, i32 4
  store i32 %new_layout.1, ptr %1, align 4
    #dbg_declare(ptr %new_layout.dbg.spill, !14799, !DIExpression(), !14803)
; call alloc::alloc::Global::grow_impl
  %2 = call { ptr, i32 } @_ZN5alloc5alloc6Global9grow_impl17h16709bd49e1d55b1E(ptr align 1 %self, ptr %ptr, i32 %old_layout.0, i32 %old_layout.1, i32 %new_layout.0, i32 %new_layout.1, i1 zeroext false) #17, !dbg !14804
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !14804
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !14804
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !14805
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !14805
  ret { ptr, i32 } %4, !dbg !14805
}

; <alloc::alloc::Global as core::alloc::Allocator>::shrink
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h05dfe32dcc24d201E"(ptr align 1 %self, ptr %ptr, i32 %0, i32 %1, i32 %2, i32 %3) unnamed_addr #2 !dbg !14806 {
start:
  %cond.dbg.spill.i = alloca [1 x i8], align 1
  %self.dbg.spill.i4 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %dst.dbg.spill.i = alloca [4 x i8], align 4
  %src.dbg.spill.i = alloca [4 x i8], align 4
  %ptr.dbg.spill3 = alloca [4 x i8], align 4
  %raw_ptr.dbg.spill = alloca [4 x i8], align 4
  %new_ptr.dbg.spill = alloca [8 x i8], align 4
  %new_size.dbg.spill = alloca [4 x i8], align 4
  %residual.dbg.spill1 = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %ptr.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_37 = alloca [8 x i8], align 4
  %_31 = alloca [4 x i8], align 4
  %new_size = alloca [4 x i8], align 4
  %_11 = alloca [24 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  %new_layout = alloca [8 x i8], align 4
  %old_layout = alloca [8 x i8], align 4
  store i32 %0, ptr %old_layout, align 4
  %4 = getelementptr inbounds i8, ptr %old_layout, i32 4
  store i32 %1, ptr %4, align 4
  store i32 %2, ptr %new_layout, align 4
  %5 = getelementptr inbounds i8, ptr %new_layout, i32 4
  store i32 %3, ptr %5, align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14808, !DIExpression(), !14831)
  store ptr %ptr, ptr %ptr.dbg.spill, align 4
    #dbg_declare(ptr %ptr.dbg.spill, !14809, !DIExpression(), !14832)
    #dbg_declare(ptr %old_layout, !14810, !DIExpression(), !14833)
    #dbg_declare(ptr %new_layout, !14811, !DIExpression(), !14834)
    #dbg_declare(ptr %new_size, !14812, !DIExpression(), !14835)
    #dbg_declare(ptr %new_size, !14823, !DIExpression(), !14836)
    #dbg_declare(ptr %residual.dbg.spill, !14819, !DIExpression(), !14837)
    #dbg_declare(ptr %residual.dbg.spill1, !14827, !DIExpression(), !14838)
; call core::alloc::layout::Layout::size
  %_6 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %new_layout) #17, !dbg !14839
; call core::alloc::layout::Layout::size
  %_8 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %old_layout) #17, !dbg !14840
  %_5 = icmp ule i32 %_6, %_8, !dbg !14841
  br i1 %_5, label %bb5, label %bb3, !dbg !14841

bb3:                                              ; preds = %start
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_11, ptr align 4 @alloc_c560e1bb852dab2517fcdf1fade5448a) #17, !dbg !14842
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE(ptr align 4 %_11, ptr align 4 @alloc_9404ebcb85c554862fecb899dc88d94c) #18, !dbg !14842
  unreachable, !dbg !14842

bb5:                                              ; preds = %start
; call core::alloc::layout::Layout::size
  %6 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %new_layout) #17, !dbg !14843
  store i32 %6, ptr %new_size, align 4, !dbg !14843
  %7 = load i32, ptr %new_size, align 4, !dbg !14844
  %8 = icmp eq i32 %7, 0, !dbg !14844
  br i1 %8, label %bb8, label %bb7, !dbg !14844

bb8:                                              ; preds = %bb5
  %9 = load i32, ptr %old_layout, align 4, !dbg !14845
  %10 = getelementptr inbounds i8, ptr %old_layout, i32 4, !dbg !14845
  %11 = load i32, ptr %10, align 4, !dbg !14845
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E"(ptr align 1 %self, ptr %ptr, i32 %9, i32 %11) #17, !dbg !14846
; call core::alloc::layout::Layout::dangling
  %_17 = call ptr @_ZN4core5alloc6layout6Layout8dangling17h4aeee76b033d9204E(ptr align 4 %new_layout) #17, !dbg !14847
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %12 = call { ptr, i32 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE"(ptr %_17, i32 0) #17, !dbg !14848
  %_16.0 = extractvalue { ptr, i32 } %12, 0, !dbg !14848
  %_16.1 = extractvalue { ptr, i32 } %12, 1, !dbg !14848
  store ptr %_16.0, ptr %_0, align 4, !dbg !14849
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14849
  store i32 %_16.1, ptr %13, align 4, !dbg !14849
  br label %bb35, !dbg !14850

bb7:                                              ; preds = %bb5
  store ptr %new_size, ptr %new_size.dbg.spill, align 4, !dbg !14851
    #dbg_declare(ptr %new_size.dbg.spill, !14814, !DIExpression(), !14835)
; call core::alloc::layout::Layout::align
  %_21 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %old_layout) #17, !dbg !14852
; call core::alloc::layout::Layout::align
  %_23 = call i32 @_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE(ptr align 4 %new_layout) #17, !dbg !14853
  %_20 = icmp eq i32 %_21, %_23, !dbg !14854
  br i1 %_20, label %bb14, label %bb15, !dbg !14854

bb35:                                             ; preds = %bb25, %bb24, %bb30, %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, %bb8
  %14 = load ptr, ptr %_0, align 4, !dbg !14855
  %15 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14855
  %16 = load i32, ptr %15, align 4, !dbg !14855
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0, !dbg !14855
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1, !dbg !14855
  ret { ptr, i32 } %18, !dbg !14855

bb15:                                             ; preds = %bb7
  %19 = load i32, ptr %new_layout, align 4, !dbg !14856
  %20 = getelementptr inbounds i8, ptr %new_layout, i32 4, !dbg !14856
  %21 = load i32, ptr %20, align 4, !dbg !14856
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %22 = call { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE"(ptr align 1 %self, i32 %19, i32 %21) #17, !dbg !14857
  %_38.0 = extractvalue { ptr, i32 } %22, 0, !dbg !14857
  %_38.1 = extractvalue { ptr, i32 } %22, 1, !dbg !14857
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %23 = call { ptr, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h067890e4fde95786E"(ptr %_38.0, i32 %_38.1) #17, !dbg !14856
  %24 = extractvalue { ptr, i32 } %23, 0, !dbg !14856
  %25 = extractvalue { ptr, i32 } %23, 1, !dbg !14856
  store ptr %24, ptr %_37, align 4, !dbg !14856
  %26 = getelementptr inbounds i8, ptr %_37, i32 4, !dbg !14856
  store i32 %25, ptr %26, align 4, !dbg !14856
  %27 = load ptr, ptr %_37, align 4, !dbg !14856
  %28 = getelementptr inbounds i8, ptr %_37, i32 4, !dbg !14856
  %29 = load i32, ptr %28, align 4, !dbg !14856
  %30 = ptrtoint ptr %27 to i32, !dbg !14856
  %31 = icmp eq i32 %30, 0, !dbg !14856
  %_39 = select i1 %31, i32 1, i32 0, !dbg !14856
  %32 = trunc nuw i32 %_39 to i1, !dbg !14856
  br i1 %32, label %bb30, label %bb29, !dbg !14856

bb14:                                             ; preds = %bb7
; call core::alloc::layout::Layout::size
  %_27 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %old_layout) #17, !dbg !14858
  %33 = load i32, ptr %new_size, align 4, !dbg !14859
  %_26 = icmp ule i32 %33, %_27, !dbg !14859
  %34 = zext i1 %_26 to i8
  store i8 %34, ptr %cond.dbg.spill.i, align 1
    #dbg_declare(ptr %cond.dbg.spill.i, !11081, !DIExpression(), !14860)
; call core::ub_checks::check_language_ub
  %_2.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !14862
  br i1 %_2.i, label %bb2.i5, label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14862

bb2.i5:                                           ; preds = %bb14
; call core::hint::assert_unchecked::precondition_check
  call void @_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E(i1 zeroext %_26, ptr align 4 @alloc_067c008d0493b1c5de84262584db3bf7) #17, !dbg !14863
  br label %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit, !dbg !14863

_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit: ; preds = %bb14, %bb2.i5
  store ptr %ptr, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4329, !DIExpression(), !14864)
  %35 = load i32, ptr %old_layout, align 4, !dbg !14866
  %36 = getelementptr inbounds i8, ptr %old_layout, i32 4, !dbg !14866
  %37 = load i32, ptr %36, align 4, !dbg !14866
  %38 = load i32, ptr %new_size, align 4, !dbg !14866
; call alloc::alloc::realloc
  %raw_ptr = call ptr @_ZN5alloc5alloc7realloc17h57000c9ca6dea045E(ptr %ptr, i32 %35, i32 %37, i32 %38) #17, !dbg !14866
  store ptr %raw_ptr, ptr %raw_ptr.dbg.spill, align 4, !dbg !14866
    #dbg_declare(ptr %raw_ptr.dbg.spill, !14815, !DIExpression(), !14867)
; call core::ptr::non_null::NonNull<T>::new
  %_33 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5968324df1351dc8E"(ptr %raw_ptr) #17, !dbg !14868
; call core::option::Option<T>::ok_or
  %_32 = call ptr @"_ZN4core6option15Option$LT$T$GT$5ok_or17h9504f9ce93f07665E"(ptr %_33) #17, !dbg !14869
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %39 = call ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h661768b3f16f6fc8E"(ptr %_32) #17, !dbg !14868
  store ptr %39, ptr %_31, align 4, !dbg !14868
  %40 = load ptr, ptr %_31, align 4, !dbg !14868
  %41 = ptrtoint ptr %40 to i32, !dbg !14868
  %42 = icmp eq i32 %41, 0, !dbg !14868
  %_34 = select i1 %42, i32 1, i32 0, !dbg !14868
  %43 = trunc nuw i32 %_34 to i1, !dbg !14868
  br i1 %43, label %bb25, label %bb24, !dbg !14868

bb30:                                             ; preds = %bb15
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %44 = call { ptr, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbd212d42dd8e72f9E"(ptr align 4 @alloc_f2cfff27739bb78fbe121261109d7a9a) #17, !dbg !14870
  %45 = extractvalue { ptr, i32 } %44, 0, !dbg !14870
  %46 = extractvalue { ptr, i32 } %44, 1, !dbg !14870
  store ptr %45, ptr %_0, align 4, !dbg !14870
  %47 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14870
  store i32 %46, ptr %47, align 4, !dbg !14870
  br label %bb35, !dbg !14870

bb29:                                             ; preds = %bb15
  %new_ptr.0 = load ptr, ptr %_37, align 4, !dbg !14856
  %48 = getelementptr inbounds i8, ptr %_37, i32 4, !dbg !14856
  %new_ptr.1 = load i32, ptr %48, align 4, !dbg !14856
  store ptr %new_ptr.0, ptr %new_ptr.dbg.spill, align 4, !dbg !14856
  %49 = getelementptr inbounds i8, ptr %new_ptr.dbg.spill, i32 4, !dbg !14856
  store i32 %new_ptr.1, ptr %49, align 4, !dbg !14856
    #dbg_declare(ptr %new_ptr.dbg.spill, !14825, !DIExpression(), !14871)
    #dbg_declare(ptr %new_ptr.dbg.spill, !14829, !DIExpression(), !14872)
  store ptr %ptr, ptr %self.dbg.spill.i4, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !4329, !DIExpression(), !14873)
; call core::ptr::non_null::NonNull<[T]>::as_mut_ptr
  %_44 = call ptr @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb0f82c01d41aa59eE"(ptr %new_ptr.0, i32 %new_ptr.1) #17, !dbg !14875
  %50 = load i32, ptr %new_size, align 4, !dbg !14876
  store ptr %ptr, ptr %src.dbg.spill.i, align 4
    #dbg_declare(ptr %src.dbg.spill.i, !458, !DIExpression(), !14877)
  store ptr %_44, ptr %dst.dbg.spill.i, align 4
    #dbg_declare(ptr %dst.dbg.spill.i, !465, !DIExpression(), !14879)
  store i32 %50, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !466, !DIExpression(), !14880)
; call core::ub_checks::check_language_ub
  %_4.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !14881
  br i1 %_4.i, label %bb2.i, label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !14881

bb2.i:                                            ; preds = %bb29
; call core::ptr::copy_nonoverlapping::precondition_check
  call void @_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E(ptr %ptr, ptr %_44, i32 1, i32 1, i32 %50, ptr align 4 @alloc_15a52d1a884c78a5de92a2463d39823d) #17, !dbg !14882
  br label %_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit, !dbg !14882

_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E.exit: ; preds = %bb29, %bb2.i
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %_44, ptr align 1 %ptr, i32 %50, i1 false), !dbg !14883
  %51 = load i32, ptr %old_layout, align 4, !dbg !14884
  %52 = getelementptr inbounds i8, ptr %old_layout, i32 4, !dbg !14884
  %53 = load i32, ptr %52, align 4, !dbg !14884
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E"(ptr align 1 %self, ptr %ptr, i32 %51, i32 %53) #17, !dbg !14885
  store ptr %new_ptr.0, ptr %_0, align 4, !dbg !14886
  %54 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14886
  store i32 %new_ptr.1, ptr %54, align 4, !dbg !14886
  br label %bb35, !dbg !14887

bb25:                                             ; preds = %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %55 = call { ptr, i32 } @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbd212d42dd8e72f9E"(ptr align 4 @alloc_ba345db3e9bff38c2b9990d78e4f2350) #17, !dbg !14888
  %56 = extractvalue { ptr, i32 } %55, 0, !dbg !14888
  %57 = extractvalue { ptr, i32 } %55, 1, !dbg !14888
  store ptr %56, ptr %_0, align 4, !dbg !14888
  %58 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14888
  store i32 %57, ptr %58, align 4, !dbg !14888
  br label %bb35, !dbg !14888

bb24:                                             ; preds = %_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE.exit
  %ptr2 = load ptr, ptr %_31, align 4, !dbg !14868
  store ptr %ptr2, ptr %ptr.dbg.spill3, align 4, !dbg !14868
    #dbg_declare(ptr %ptr.dbg.spill3, !14817, !DIExpression(), !14889)
    #dbg_declare(ptr %ptr.dbg.spill3, !14821, !DIExpression(), !14890)
  %59 = load i32, ptr %new_size, align 4, !dbg !14891
; call core::ptr::non_null::NonNull<[T]>::slice_from_raw_parts
  %60 = call { ptr, i32 } @"_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE"(ptr %ptr2, i32 %59) #17, !dbg !14891
  %_36.0 = extractvalue { ptr, i32 } %60, 0, !dbg !14891
  %_36.1 = extractvalue { ptr, i32 } %60, 1, !dbg !14891
  store ptr %_36.0, ptr %_0, align 4, !dbg !14892
  %61 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !14892
  store i32 %_36.1, ptr %61, align 4, !dbg !14892
  br label %bb35, !dbg !14893

bb23:                                             ; No predecessors!
  unreachable, !dbg !14894
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE"(ptr align 1 %self, i32 %layout.0, i32 %layout.1) unnamed_addr #2 !dbg !14896 {
start:
  %layout.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14898, !DIExpression(), !14900)
  store i32 %layout.0, ptr %layout.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %layout.dbg.spill, i32 4
  store i32 %layout.1, ptr %0, align 4
    #dbg_declare(ptr %layout.dbg.spill, !14899, !DIExpression(), !14901)
; call alloc::alloc::Global::alloc_impl
  %1 = call { ptr, i32 } @_ZN5alloc5alloc6Global10alloc_impl17h1d93fc195818213bE(ptr align 1 %self, i32 %layout.0, i32 %layout.1, i1 zeroext false) #17, !dbg !14902
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !14902
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !14902
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !14903
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !14903
  ret { ptr, i32 } %3, !dbg !14903
}

; <alloc::ffi::c_str::CString as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN63_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..fmt..Debug$GT$3fmt17hf4abae919c751448E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !14904 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14909, !DIExpression(), !14911)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !14910, !DIExpression(), !14912)
; call alloc::ffi::c_str::CString::as_c_str
  %0 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString8as_c_str17hfb3641ecc152d7d9E(ptr align 4 %self) #17, !dbg !14913
  %_3.0 = extractvalue { ptr, i32 } %0, 0, !dbg !14913
  %_3.1 = extractvalue { ptr, i32 } %0, 1, !dbg !14913
; call <core::ffi::c_str::CStr as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN59_$LT$core..ffi..c_str..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h8da4db1244c222c1E"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 %f) #17, !dbg !14914
  ret i1 %_0, !dbg !14915
}

; <alloc::wtf8::Wtf8Buf as core::ops::deref::Deref>::deref
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN64_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6dbca4ec3c2cbfe5E"(ptr align 4 %self) unnamed_addr #1 !dbg !14916 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14919, !DIExpression(), !14920)
; call alloc::wtf8::Wtf8Buf::as_slice
  %0 = call { ptr, i32 } @_ZN5alloc4wtf87Wtf8Buf8as_slice17h1c24bb81eee39dafE(ptr align 4 %self) #17, !dbg !14921
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !14921
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !14921
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !14922
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !14922
  ret { ptr, i32 } %2, !dbg !14922
}

; <core::alloc::layout::Layout as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17hfd831f110b56f5e8E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !14923 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14928, !DIExpression(), !14930)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !14929, !DIExpression(), !14930)
  %_6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14931
  store ptr %self, ptr %_10, align 4, !dbg !14932
; call core::fmt::Formatter::debug_struct_field2_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h2a81523181af9ab2E(ptr align 4 %f, ptr align 1 @alloc_4d84e70691747edd15f53afa313934fc, i32 6, ptr align 1 @alloc_a2e5f6be2a03b9f5ed256baff3399a84, i32 4, ptr align 1 %_6, ptr align 4 @vtable.6, ptr align 1 @alloc_ca8235712f576b69a7b090258b88dda1, i32 5, ptr align 1 %_10, ptr align 4 @vtable.7) #17, !dbg !14930
  ret i1 %_0, !dbg !14933
}

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h496788f68c402926E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #2 !dbg !14934 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14939, !DIExpression(), !14941)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !14940, !DIExpression(), !14941)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14942
  store ptr %0, ptr %_10, align 4, !dbg !14942
; call core::fmt::Formatter::debug_struct_field2_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h2a81523181af9ab2E(ptr align 4 %f, ptr align 1 @alloc_8e685ef482aec04a2d7a8ed5ef1228a3, i32 9, ptr align 1 @alloc_f34017a1538f19bf68b6d6294eec0bb3, i32 11, ptr align 1 %self, ptr align 4 @vtable.6, ptr align 1 @alloc_91eca80c47235190e5fbed3d6d8be36c, i32 9, ptr align 1 %_10, ptr align 4 @vtable.0) #17, !dbg !14941
  ret i1 %_0, !dbg !14943
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h674e141af3001a2dE"(ptr align 4 %self) unnamed_addr #2 !dbg !14944 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14947, !DIExpression(), !14948)
; call alloc::string::String::as_str
  %0 = call { ptr, i32 } @_ZN5alloc6string6String6as_str17ha63f9ab0907175deE(ptr align 4 %self) #17, !dbg !14949
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !14949
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !14949
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !14950
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !14950
  ret { ptr, i32 } %2, !dbg !14950
}

; <alloc::bstr::ByteString as core::default::Default>::default
; Function Attrs: nounwind
define dso_local void @"_ZN66_$LT$alloc..bstr..ByteString$u20$as$u20$core..default..Default$GT$7default17hbe9cb889ada20672E"(ptr sret([12 x i8]) align 4 %_0) unnamed_addr #1 !dbg !14951 {
start:
  %_1 = alloca [12 x i8], align 4
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h8bc511fc2432249cE"(ptr sret([12 x i8]) align 4 %_1) #17, !dbg !14960
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_1, i32 12, i1 false), !dbg !14961
  ret void, !dbg !14962
}

; <alloc::ffi::c_str::NulError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Display$GT$3fmt17h2219c55b69a2b5fbE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !14963 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_7 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14968, !DIExpression(), !14976)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !14969, !DIExpression(), !14977)
    #dbg_declare(ptr %args, !14973, !DIExpression(), !14978)
  %_5 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !14979
  store ptr %_5, ptr %args.dbg.spill, align 4, !dbg !14979
    #dbg_declare(ptr %args.dbg.spill, !14970, !DIExpression(), !14980)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_7, ptr align 4 %_5) #17, !dbg !14980
  %0 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !14980
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 4 %_7, i32 8, i1 false), !dbg !14980
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 @alloc_71b62d86af2348664211bfbf21e35431, ptr align 4 %args) #17, !dbg !14978
; call core::fmt::Formatter::write_fmt
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd79f790f9e7cd2edE(ptr align 4 %f, ptr align 4 %_3) #17, !dbg !14979
  ret i1 %_0, !dbg !14981
}

; <core::alloc::layout::Layout as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h2387eee35ea3b63eE"(ptr align 4 %self) unnamed_addr #2 !dbg !14982 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14985, !DIExpression(), !14986)
  %_0.0 = load i32, ptr %self, align 4, !dbg !14986
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !14986
  %_0.1 = load i32, ptr %0, align 4, !dbg !14986
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !14987
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !14987
  ret { i32, i32 } %2, !dbg !14987
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd488c21ea98dead3E"(ptr align 1 %self, ptr align 4 %f) unnamed_addr #2 !dbg !14988 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %__self_0 = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !14993, !DIExpression(), !14997)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !14994, !DIExpression(), !14997)
    #dbg_declare(ptr %__self_0, !14995, !DIExpression(), !14998)
  %0 = load i8, ptr %self, align 1, !dbg !14997
  %1 = trunc nuw i8 %0 to i1, !dbg !14997
  %2 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !14997
  %3 = load i8, ptr %2, align 1, !dbg !14997
  %_3 = zext i1 %1 to i32, !dbg !14997
  %4 = trunc nuw i32 %_3 to i1, !dbg !14997
  br i1 %4, label %bb2, label %bb3, !dbg !14997

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !14999
  store ptr %5, ptr %__self_0, align 4, !dbg !14999
; call core::fmt::Formatter::debug_tuple_field1_finish
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17h3d1be23d989179bfE(ptr align 4 %f, ptr align 1 @alloc_9535bf4c204f3eb9b19ec2c83e446e52, i32 4, ptr align 1 %__self_0, ptr align 4 @vtable.8) #17, !dbg !15000
  %7 = zext i1 %6 to i8, !dbg !15000
  store i8 %7, ptr %_0, align 1, !dbg !15000
  br label %bb4, !dbg !15000

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %f, ptr align 1 @alloc_37d2e53432a03a1f90b3e7253015eaf9, i32 4) #17, !dbg !14997
  %9 = zext i1 %8 to i8, !dbg !14997
  store i8 %9, ptr %_0, align 1, !dbg !14997
  br label %bb4, !dbg !14997

bb4:                                              ; preds = %bb2, %bb3
  %10 = load i8, ptr %_0, align 1, !dbg !15001
  %11 = trunc nuw i8 %10 to i1, !dbg !15001
  ret i1 %11, !dbg !15001

bb1:                                              ; No predecessors!
  unreachable, !dbg !14997
}

; <alloc::boxed::Box<str> as core::clone::Clone>::clone
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN67_$LT$alloc..boxed..Box$LT$str$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha0604368d13917fcE"(ptr align 4 %self) unnamed_addr #1 !dbg !15002 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %buf.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15007, !DIExpression(), !15010)
  %_5.0 = load ptr, ptr %self, align 4, !dbg !15011
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15011
  %_5.1 = load i32, ptr %0, align 4, !dbg !15011
  store ptr %_5.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_5.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !15012)
  %2 = insertvalue { ptr, i32 } poison, ptr %_5.0, 0, !dbg !15014
  %3 = insertvalue { ptr, i32 } %2, i32 %_5.1, 1, !dbg !15014
  %_3.0 = extractvalue { ptr, i32 } %3, 0, !dbg !15015
  %_3.1 = extractvalue { ptr, i32 } %3, 1, !dbg !15015
; call <T as core::convert::Into<U>>::into
  %4 = call { ptr, i32 } @"_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha9f6daaa8dcf4fd2E"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 @alloc_30d03708f005887e7da76c32d50be5ad) #17, !dbg !15016
  %buf.0 = extractvalue { ptr, i32 } %4, 0, !dbg !15016
  %buf.1 = extractvalue { ptr, i32 } %4, 1, !dbg !15016
  store ptr %buf.0, ptr %buf.dbg.spill, align 4, !dbg !15016
  %5 = getelementptr inbounds i8, ptr %buf.dbg.spill, i32 4, !dbg !15016
  store i32 %buf.1, ptr %5, align 4, !dbg !15016
    #dbg_declare(ptr %buf.dbg.spill, !15008, !DIExpression(), !15017)
; call alloc::str::from_boxed_utf8_unchecked
  %6 = call { ptr, i32 } @_ZN5alloc3str25from_boxed_utf8_unchecked17h4a17908cfa49f8e2E(ptr align 1 %buf.0, i32 %buf.1) #17, !dbg !15018
  %_0.0 = extractvalue { ptr, i32 } %6, 0, !dbg !15018
  %_0.1 = extractvalue { ptr, i32 } %6, 1, !dbg !15018
  %7 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15019
  %8 = insertvalue { ptr, i32 } %7, i32 %_0.1, 1, !dbg !15019
  ret { ptr, i32 } %8, !dbg !15019
}

; <alloc::string::FromUtf8Error as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17hac30316efab6fd72E"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !15020 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15025, !DIExpression(), !15027)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !15026, !DIExpression(), !15028)
  %_3 = getelementptr inbounds i8, ptr %self, i32 12, !dbg !15029
; call <core::str::error::Utf8Error as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h38f8897d8415721cE"(ptr align 4 %_3, ptr align 4 %f) #17, !dbg !15030
  ret i1 %_0, !dbg !15031
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone_from
; Function Attrs: nounwind
define dso_local void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17hada651d17ab8da4cE"(ptr align 4 %self, ptr align 4 %source) unnamed_addr #1 !dbg !15032 {
start:
  %source.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15037, !DIExpression(), !15039)
  store ptr %source, ptr %source.dbg.spill, align 4
    #dbg_declare(ptr %source.dbg.spill, !15038, !DIExpression(), !15040)
; call alloc::vec::Vec<T,A>::as_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h9aca5a4efbfbef1bE"(ptr align 4 %source) #17, !dbg !15041
  %_4.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15041
  %_4.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15041
; call <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
  call void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h0c90bb795dd72c5eE"(ptr align 1 %_4.0, i32 %_4.1, ptr align 4 %self) #17, !dbg !15042
  ret void, !dbg !15043
}

; <alloc::vec::Vec<T,A> as core::clone::Clone>::clone
; Function Attrs: nounwind
define dso_local void @"_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h8a7ffb87d4b33583E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !15044 {
start:
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15048, !DIExpression(), !15051)
    #dbg_declare(ptr %alloc.dbg.spill, !15049, !DIExpression(), !15052)
; call alloc::vec::Vec<T,A>::allocator
  %_3 = call align 1 ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hcc761d55e3a5cf15E"(ptr align 4 %self) #17, !dbg !15053
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17hd00f5b8f953c5378E"(ptr align 1 %_3) #17, !dbg !15054
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %self) #17, !dbg !15055
  %_4.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15055
  %_4.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15055
; call alloc::slice::<impl [T]>::to_vec_in
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h28c6456b20ddb617E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !15056
  ret void, !dbg !15057
}

; <alloc::wtf8::Wtf8Buf as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN67_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17he36b4d95503fd57aE"(ptr align 4 %self) unnamed_addr #1 !dbg !15058 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15061, !DIExpression(), !15062)
; call alloc::wtf8::Wtf8Buf::as_mut_slice
  %0 = call { ptr, i32 } @_ZN5alloc4wtf87Wtf8Buf12as_mut_slice17h070ab0b5060d4428E(ptr align 4 %self) #17, !dbg !15063
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15063
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15063
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15064
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !15064
  ret { ptr, i32 } %2, !dbg !15064
}

; <alloc::string::FromUtf16Error as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Display$GT$3fmt17h5ca86bbfd8a8be61E"(ptr align 1 %self, ptr align 4 %f) unnamed_addr #1 !dbg !15065 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15071, !DIExpression(), !15073)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !15072, !DIExpression(), !15074)
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h7747b9db9493592eE"(ptr align 1 @alloc_6fbea5e9c73aa07232d8e93629f5148f, i32 36, ptr align 4 %f) #17, !dbg !15075
  ret i1 %_0, !dbg !15076
}

; <core::alloc::layout::Layout as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN68_$LT$core..alloc..layout..Layout$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0e3def2e6f7d49aE"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #2 !dbg !15077 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15082, !DIExpression(), !15084)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !15083, !DIExpression(), !15084)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15085
  %_4 = load i32, ptr %0, align 4, !dbg !15085
  %1 = getelementptr inbounds i8, ptr %other, i32 4, !dbg !15085
  %_5 = load i32, ptr %1, align 4, !dbg !15085
  %_3 = icmp eq i32 %_4, %_5, !dbg !15085
  br i1 %_3, label %bb1, label %bb2, !dbg !15085

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !15086
  br label %bb3, !dbg !15086

bb1:                                              ; preds = %start
; call <core::ptr::alignment::Alignment as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN72_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb62fda63794d933cE"(ptr align 4 %self, ptr align 4 %other) #17, !dbg !15086
  %3 = zext i1 %2 to i8, !dbg !15086
  store i8 %3, ptr %_0, align 1, !dbg !15086
  br label %bb3, !dbg !15086

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i8, ptr %_0, align 1, !dbg !15087
  %5 = trunc nuw i8 %4 to i1, !dbg !15087
  ret i1 %5, !dbg !15087
}

; <&core::ffi::c_str::CStr as core::default::Default>::default
; Function Attrs: inlinehint nounwind
define internal { ptr, i32 } @"_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h1828ea215b778f2bE"() unnamed_addr #2 !dbg !15088 {
start:
  ret { ptr, i32 } { ptr @alloc_914b2c69d7eca30497b9feaf15ac92f1, i32 1 }, !dbg !15092
}

; <alloc::ffi::c_str::CString as core::default::Default>::default
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN69_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..default..Default$GT$7default17h8d5d960cd7398d69E"() unnamed_addr #1 !dbg !15093 {
start:
  %a.dbg.spill = alloca [8 x i8], align 4, !dbg !15100
; call <&core::ffi::c_str::CStr as core::default::Default>::default
  %0 = call { ptr, i32 } @"_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h1828ea215b778f2bE"() #17, !dbg !15100
  %a.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15100
  %a.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15100
  store ptr %a.0, ptr %a.dbg.spill, align 4, !dbg !15100
  %1 = getelementptr inbounds i8, ptr %a.dbg.spill, i32 4, !dbg !15100
  store i32 %a.1, ptr %1, align 4, !dbg !15100
    #dbg_declare(ptr %a.dbg.spill, !15098, !DIExpression(), !15101)
; call alloc::ffi::c_str::<impl alloc::borrow::ToOwned for core::ffi::c_str::CStr>::to_owned
  %2 = call { ptr, i32 } @"_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17haacd9a91ba7d82a0E"(ptr align 1 %a.0, i32 %a.1) #17, !dbg !15102
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !15102
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !15102
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15103
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !15103
  ret { ptr, i32 } %4, !dbg !15103
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define dso_local void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c3b9e5e8807b552E"(ptr align 4 %self) unnamed_addr #1 !dbg !15104 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15107, !DIExpression(), !15108)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_3 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %self) #17, !dbg !15109
  %0 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !15110
  %_4 = load i32, ptr %0, align 4, !dbg !15110
; call core::ptr::slice_from_raw_parts_mut
  %1 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha3a5beed25bc1c5cE(ptr %_3, i32 %_4) #17, !dbg !15111
  %_2.0 = extractvalue { ptr, i32 } %1, 0, !dbg !15111
  %_2.1 = extractvalue { ptr, i32 } %1, 1, !dbg !15111
  ret void, !dbg !15112
}

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h93b587d97881e664E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #2 !dbg !15113 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  %l.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15118, !DIExpression(), !15123)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !15119, !DIExpression(), !15124)
  %0 = load i8, ptr %self, align 1, !dbg !15125
  %1 = trunc nuw i8 %0 to i1, !dbg !15125
  %2 = getelementptr inbounds i8, ptr %self, i32 1, !dbg !15125
  %3 = load i8, ptr %2, align 1, !dbg !15125
  %_6 = zext i1 %1 to i32, !dbg !15125
  %4 = trunc nuw i32 %_6 to i1, !dbg !15126
  br i1 %4, label %bb2, label %bb3, !dbg !15126

bb2:                                              ; preds = %start
  %5 = load i8, ptr %other, align 1, !dbg !15125
  %6 = trunc nuw i8 %5 to i1, !dbg !15125
  %7 = getelementptr inbounds i8, ptr %other, i32 1, !dbg !15125
  %8 = load i8, ptr %7, align 1, !dbg !15125
  %_4 = zext i1 %6 to i32, !dbg !15125
  %9 = trunc nuw i32 %_4 to i1, !dbg !15126
  br i1 %9, label %bb5, label %bb4, !dbg !15126

bb3:                                              ; preds = %start
  %10 = load i8, ptr %other, align 1, !dbg !15125
  %11 = trunc nuw i8 %10 to i1, !dbg !15125
  %12 = getelementptr inbounds i8, ptr %other, i32 1, !dbg !15125
  %13 = load i8, ptr %12, align 1, !dbg !15125
  %_5 = zext i1 %11 to i32, !dbg !15125
  %14 = icmp eq i32 %_5, 0, !dbg !15126
  %15 = zext i1 %14 to i8, !dbg !15126
  store i8 %15, ptr %_0, align 1, !dbg !15126
  br label %bb6, !dbg !15126

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %16 = load i8, ptr %_0, align 1, !dbg !15127
  %17 = trunc nuw i8 %16 to i1, !dbg !15127
  ret i1 %17, !dbg !15127

bb5:                                              ; preds = %bb2
  %l = getelementptr inbounds i8, ptr %self, i32 1, !dbg !15128
  store ptr %l, ptr %l.dbg.spill, align 4, !dbg !15128
    #dbg_declare(ptr %l.dbg.spill, !15120, !DIExpression(), !15129)
  %r = getelementptr inbounds i8, ptr %other, i32 1, !dbg !15130
  store ptr %r, ptr %r.dbg.spill, align 4, !dbg !15130
    #dbg_declare(ptr %r.dbg.spill, !15122, !DIExpression(), !15131)
; call core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq
  %18 = call zeroext i1 @"_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h51a721e978f495dcE"(ptr align 1 %l, ptr align 1 %r) #17, !dbg !15132
  %19 = zext i1 %18 to i8, !dbg !15132
  store i8 %19, ptr %_0, align 1, !dbg !15132
  br label %bb6, !dbg !15132

bb4:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1, !dbg !15133
  br label %bb6, !dbg !15133

bb1:                                              ; No predecessors!
  unreachable, !dbg !15125
}

; <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha57eaecb76d8c235E"(ptr align 4 %self) unnamed_addr #1 !dbg !15134 {
start:
  %owned.dbg.spill = alloca [4 x i8], align 4
  %borrowed.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_2 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15140, !DIExpression(), !15145)
  %0 = load i32, ptr %self, align 4, !dbg !15146
  %1 = icmp eq i32 %0, -2147483648, !dbg !15146
  %_3 = select i1 %1, i32 0, i32 1, !dbg !15146
  %2 = trunc nuw i32 %_3 to i1, !dbg !15147
  br i1 %2, label %bb2, label %bb3, !dbg !15147

bb2:                                              ; preds = %start
  store ptr %self, ptr %owned.dbg.spill, align 4, !dbg !15148
    #dbg_declare(ptr %owned.dbg.spill, !15143, !DIExpression(), !15149)
; call alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
  %3 = call { ptr, i32 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h5c7ca20179da90ceE"(ptr align 4 %self) #17, !dbg !15150
  %_6.0 = extractvalue { ptr, i32 } %3, 0, !dbg !15150
  %_6.1 = extractvalue { ptr, i32 } %3, 1, !dbg !15150
  store ptr %_6.0, ptr %_2, align 4, !dbg !15151
  %4 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !15151
  store i32 %_6.1, ptr %4, align 4, !dbg !15151
  br label %bb5, !dbg !15152

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15153
  %borrowed.0 = load ptr, ptr %5, align 4, !dbg !15153
  %6 = getelementptr inbounds i8, ptr %5, i32 4, !dbg !15153
  %borrowed.1 = load i32, ptr %6, align 4, !dbg !15153
  store ptr %borrowed.0, ptr %borrowed.dbg.spill, align 4, !dbg !15153
  %7 = getelementptr inbounds i8, ptr %borrowed.dbg.spill, i32 4, !dbg !15153
  store i32 %borrowed.1, ptr %7, align 4, !dbg !15153
    #dbg_declare(ptr %borrowed.dbg.spill, !15141, !DIExpression(), !15154)
  store ptr %borrowed.0, ptr %_2, align 4, !dbg !15155
  %8 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !15155
  store i32 %borrowed.1, ptr %8, align 4, !dbg !15155
  br label %bb5, !dbg !15156

bb5:                                              ; preds = %bb2, %bb3
  %_0.0 = load ptr, ptr %_2, align 4, !dbg !15147
  %9 = getelementptr inbounds i8, ptr %_2, i32 4, !dbg !15147
  %_0.1 = load i32, ptr %9, align 4, !dbg !15147
  %10 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15157
  %11 = insertvalue { ptr, i32 } %10, i32 %_0.1, 1, !dbg !15157
  ret { ptr, i32 } %11, !dbg !15157

bb1:                                              ; No predecessors!
  unreachable, !dbg !15146
}

; <&str as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: nounwind
define dso_local void @"_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hb794895461dcdcc5E"(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !15158 {
start:
  %val.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.i.i = alloca [8 x i8], align 4
  %i.dbg.spill.i = alloca [4 x i8], align 4
  %capacity.dbg.spill.i = alloca [4 x i8], align 4
  %bytes.dbg.spill.i = alloca [8 x i8], align 4
  %_14.i = alloca [12 x i8], align 4
  %_12.i = alloca [12 x i8], align 4
  %_11.i = alloca [16 x i8], align 4
  %_8.i = alloca [8 x i8], align 4
  %buffer.i = alloca [12 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !15179, !DIExpression(), !15180)
  store ptr %self.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !15181)
  %2 = insertvalue { ptr, i32 } poison, ptr %self.0, 0, !dbg !15183
  %3 = insertvalue { ptr, i32 } %2, i32 %self.1, 1, !dbg !15183
  %_2.0 = extractvalue { ptr, i32 } %3, 0, !dbg !15184
  %_2.1 = extractvalue { ptr, i32 } %3, 1, !dbg !15184
  store ptr %_2.0, ptr %bytes.dbg.spill.i, align 4
  %4 = getelementptr inbounds i8, ptr %bytes.dbg.spill.i, i32 4
  store i32 %_2.1, ptr %4, align 4
    #dbg_declare(ptr %bytes.dbg.spill.i, !15185, !DIExpression(), !15196)
    #dbg_declare(ptr %buffer.i, !15192, !DIExpression(), !15198)
; call core::num::<impl usize>::checked_add
  %5 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %_2.1, i32 1) #17, !dbg !15199
  %_3.0.i = extractvalue { i32, i32 } %5, 0, !dbg !15199
  %_3.1.i = extractvalue { i32, i32 } %5, 1, !dbg !15199
  store i32 %_3.0.i, ptr %self.i.i, align 4
  %6 = getelementptr inbounds i8, ptr %self.i.i, i32 4
  store i32 %_3.1.i, ptr %6, align 4
    #dbg_declare(ptr %self.i.i, !10232, !DIExpression(), !15200)
  %_2.i.i = load i32, ptr %self.i.i, align 4, !dbg !15202
  %7 = getelementptr inbounds i8, ptr %self.i.i, i32 4, !dbg !15202
  %8 = load i32, ptr %7, align 4, !dbg !15202
  %9 = trunc nuw i32 %_2.i.i to i1, !dbg !15203
  br i1 %9, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i", label %bb2.i.i, !dbg !15203

bb2.i.i:                                          ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17hb44eba05d48b3214E(ptr align 4 @alloc_001c7be2c8484fbfab2e821c040f7415) #18, !dbg !15204
  unreachable, !dbg !15204

"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i": ; preds = %start
  %10 = getelementptr inbounds i8, ptr %self.i.i, i32 4, !dbg !15205
  %val.i.i = load i32, ptr %10, align 4, !dbg !15205
  store i32 %val.i.i, ptr %val.dbg.spill.i.i, align 4, !dbg !15205
    #dbg_declare(ptr %val.dbg.spill.i.i, !10238, !DIExpression(), !15206)
  store i32 %val.i.i, ptr %capacity.dbg.spill.i, align 4, !dbg !15207
    #dbg_declare(ptr %capacity.dbg.spill.i, !15190, !DIExpression(), !15208)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %buffer.i, i32 %val.i.i) #17, !dbg !15209
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17hc90c6dbd8aa43470E"(ptr align 4 %buffer.i, ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !15210
; call core::slice::memchr::memchr
  %11 = call { i32, i32 } @_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E(i8 0, ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !15211
  %12 = extractvalue { i32, i32 } %11, 0, !dbg !15211
  %13 = extractvalue { i32, i32 } %11, 1, !dbg !15211
  store i32 %12, ptr %_8.i, align 4, !dbg !15211
  %14 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !15211
  store i32 %13, ptr %14, align 4, !dbg !15211
  %_9.i = load i32, ptr %_8.i, align 4, !dbg !15211
  %15 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !15211
  %16 = load i32, ptr %15, align 4, !dbg !15211
  %17 = trunc nuw i32 %_9.i to i1, !dbg !15212
  br i1 %17, label %bb8.i, label %bb7.i, !dbg !15212

bb8.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i"
  %18 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !15213
  %i.i = load i32, ptr %18, align 4, !dbg !15213
  store i32 %i.i, ptr %i.dbg.spill.i, align 4, !dbg !15213
    #dbg_declare(ptr %i.dbg.spill.i, !15194, !DIExpression(), !15214)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_12.i, ptr align 4 %buffer.i, i32 12, i1 false), !dbg !15215
  %19 = getelementptr inbounds i8, ptr %_11.i, i32 12, !dbg !15216
  store i32 %i.i, ptr %19, align 4, !dbg !15216
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11.i, ptr align 4 %_12.i, i32 12, i1 false), !dbg !15216
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_11.i, i32 16, i1 false), !dbg !15217
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit, !dbg !15218

bb7.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i"
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_14.i, ptr align 4 %buffer.i, i32 12, i1 false), !dbg !15219
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %20 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E(ptr align 4 %_14.i) #17, !dbg !15220
  %_13.0.i = extractvalue { ptr, i32 } %20, 0, !dbg !15220
  %_13.1.i = extractvalue { ptr, i32 } %20, 1, !dbg !15220
  %21 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15221
  store ptr %_13.0.i, ptr %21, align 4, !dbg !15221
  %22 = getelementptr inbounds i8, ptr %21, i32 4, !dbg !15221
  store i32 %_13.1.i, ptr %22, align 4, !dbg !15221
  store i32 -2147483648, ptr %_0, align 4, !dbg !15221
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit, !dbg !15222

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit: ; preds = %bb8.i, %bb7.i
  ret void, !dbg !15223
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3a138a3c13a5f3d4E"(ptr align 4 %self) unnamed_addr #2 !dbg !15224 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %layout = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15229, !DIExpression(), !15234)
    #dbg_declare(ptr %layout, !15232, !DIExpression(), !15235)
  %ptr.0 = load ptr, ptr %self, align 4, !dbg !15236
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15236
  %ptr.1 = load i32, ptr %0, align 4, !dbg !15236
  store ptr %ptr.0, ptr %ptr.dbg.spill, align 4, !dbg !15236
  %1 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !15236
  store i32 %ptr.1, ptr %1, align 4, !dbg !15236
    #dbg_declare(ptr %ptr.dbg.spill, !15230, !DIExpression(), !15237)
; call core::ptr::unique::Unique<T>::as_ptr
  %2 = call { ptr, i32 } @"_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6e25ee3522f66bf8E"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !15238
  %_5.0 = extractvalue { ptr, i32 } %2, 0, !dbg !15238
  %_5.1 = extractvalue { ptr, i32 } %2, 1, !dbg !15238
; call core::alloc::layout::Layout::for_value_raw
  %3 = call { i32, i32 } @_ZN4core5alloc6layout6Layout13for_value_raw17h769be55b98bbc847E(ptr %_5.0, i32 %_5.1) #17, !dbg !15239
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15239
  %5 = extractvalue { i32, i32 } %3, 1, !dbg !15239
  store i32 %4, ptr %layout, align 4, !dbg !15239
  %6 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !15239
  store i32 %5, ptr %6, align 4, !dbg !15239
; call core::alloc::layout::Layout::size
  %_6 = call i32 @_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE(ptr align 4 %layout) #17, !dbg !15240
  %7 = icmp eq i32 %_6, 0, !dbg !15241
  br i1 %7, label %bb7, label %bb4, !dbg !15241

bb7:                                              ; preds = %bb4, %start
  ret void, !dbg !15242

bb4:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !15243
; call core::ptr::unique::Unique<T>::cast
  %_11 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h87c533f9223a898dE"(ptr %ptr.0, i32 %ptr.1) #17, !dbg !15244
; call <core::ptr::non_null::NonNull<T> as core::convert::From<core::ptr::unique::Unique<T>>>::from
  %_10 = call ptr @"_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9667c3a18e98260fE"(ptr %_11) #17, !dbg !15245
  %8 = load i32, ptr %layout, align 4, !dbg !15243
  %9 = getelementptr inbounds i8, ptr %layout, i32 4, !dbg !15243
  %10 = load i32, ptr %9, align 4, !dbg !15243
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E"(ptr align 1 %_9, ptr %_10, i32 %8, i32 %10) #17, !dbg !15246
  br label %bb7, !dbg !15246
}

; <alloc::string::Drain as core::convert::AsRef<str>>::as_ref
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN72_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h6f54678d7244f71aE"(ptr align 4 %self) unnamed_addr #1 !dbg !15247 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15250, !DIExpression(), !15251)
; call alloc::string::Drain::as_str
  %0 = call { ptr, i32 } @_ZN5alloc6string5Drain6as_str17he2aaed28f3bd3c11E(ptr align 4 %self) #17, !dbg !15252
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15252
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15252
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15253
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !15253
  ret { ptr, i32 } %2, !dbg !15253
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %self) unnamed_addr #2 !dbg !15254 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15257, !DIExpression(), !15258)
; call alloc::vec::Vec<T,A>::as_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h9aca5a4efbfbef1bE"(ptr align 4 %self) #17, !dbg !15259
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15259
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15259
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15260
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !15260
  ret { ptr, i32 } %2, !dbg !15260
}

; <core::ptr::alignment::Alignment as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN72_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb62fda63794d933cE"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #2 !dbg !15261 {
start:
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15266, !DIExpression(), !15268)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !15267, !DIExpression(), !15268)
; call <core::ptr::alignment::AlignmentEnum as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN76_$LT$core..ptr..alignment..AlignmentEnum$u20$as$u20$core..cmp..PartialEq$GT$2eq17h63514dc09bafced2E"(ptr align 4 %self, ptr align 4 %other) #17, !dbg !15269
  ret i1 %_0, !dbg !15270
}

; <&alloc::string::String as core::str::pattern::Pattern>::into_searcher
; Function Attrs: nounwind
define dso_local void @"_ZN73_$LT$$RF$alloc..string..String$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hbae47ef2e9cd09ceE"(ptr sret([64 x i8]) align 8 %_0, ptr align 4 %self, ptr align 1 %haystack.0, i32 %haystack.1) unnamed_addr #1 !dbg !15271 {
start:
  %haystack.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15276, !DIExpression(), !15278)
  store ptr %haystack.0, ptr %haystack.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %haystack.dbg.spill, i32 4
  store i32 %haystack.1, ptr %0, align 4
    #dbg_declare(ptr %haystack.dbg.spill, !15277, !DIExpression(), !15279)
; call <alloc::string::String as core::ops::index::Index<I>>::index
  %1 = call { ptr, i32 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h37c79d989a4cc233E"(ptr align 4 %self, ptr align 4 @alloc_f7ed970f44ca051468d9d716585e73ae) #17, !dbg !15280
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !15280
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !15280
; call <&str as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd4160544094e76aeE"(ptr sret([64 x i8]) align 8 %_0, ptr align 1 %_3.0, i32 %_3.1, ptr align 1 %haystack.0, i32 %haystack.1) #17, !dbg !15281
  ret void, !dbg !15282
}

; <alloc::ffi::c_str::IntoStringError as core::error::Error>::source
; Function Attrs: nounwind
define dso_local { ptr, ptr } @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$6source17hb4e9baf2af8e7869E"(ptr align 4 %self) unnamed_addr #1 !dbg !15283 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15288, !DIExpression(), !15289)
  %_3 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !15290
  %0 = insertvalue { ptr, ptr } poison, ptr %_3, 0, !dbg !15291
  %1 = insertvalue { ptr, ptr } %0, ptr @vtable.9, 1, !dbg !15291
  ret { ptr, ptr } %1, !dbg !15291
}

; <alloc::ffi::c_str::IntoStringError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Display$GT$3fmt17h1515f6af58074e3bE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !15292 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15297, !DIExpression(), !15299)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !15298, !DIExpression(), !15300)
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h7747b9db9493592eE"(ptr align 1 @alloc_2be04d996cb96ea7cf76b18f168cc936, i32 33, ptr align 4 %f) #17, !dbg !15301
  ret i1 %_0, !dbg !15302
}

; <alloc::collections::TryReserveError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN74_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Display$GT$3fmt17hdcfc576ce9026c7bE"(ptr align 4 %self, ptr align 4 %fmt) unnamed_addr #1 !dbg !15303 {
start:
  %val.dbg.spill = alloca [0 x i8], align 1
  %residual.dbg.spill = alloca [0 x i8], align 1
  %fmt.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %reason = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15308, !DIExpression(), !15329)
  store ptr %fmt, ptr %fmt.dbg.spill, align 4
    #dbg_declare(ptr %fmt.dbg.spill, !15309, !DIExpression(), !15330)
    #dbg_declare(ptr %reason, !15327, !DIExpression(), !15331)
    #dbg_declare(ptr %residual.dbg.spill, !15310, !DIExpression(), !15332)
    #dbg_declare(ptr %val.dbg.spill, !15325, !DIExpression(), !15333)
; call core::fmt::Formatter::write_str
  %_4 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %fmt, ptr align 1 @alloc_1c48aaa25881cebb537398237e87da2c, i32 24) #17, !dbg !15334
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %_3 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext %_4) #17, !dbg !15335
  %_6 = zext i1 %_3 to i32, !dbg !15335
  %0 = trunc nuw i32 %_6 to i1, !dbg !15335
  br i1 %0, label %bb5, label %bb4, !dbg !15335

bb5:                                              ; preds = %start
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %1 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4 @alloc_f14b0c9588509605c48bb4f12c8d5464) #17, !dbg !15336
  %2 = zext i1 %1 to i8, !dbg !15336
  store i8 %2, ptr %_0, align 1, !dbg !15336
  br label %bb9, !dbg !15336

bb4:                                              ; preds = %start
  %3 = load i32, ptr %self, align 4, !dbg !15337
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15337
  %5 = load i32, ptr %4, align 4, !dbg !15337
  %6 = icmp eq i32 %3, 0, !dbg !15337
  %_8 = select i1 %6, i32 0, i32 1, !dbg !15337
  %7 = trunc nuw i32 %_8 to i1, !dbg !15338
  br i1 %7, label %bb6, label %bb7, !dbg !15338

bb6:                                              ; preds = %bb4
  store ptr @alloc_8743fc3ff085a87cd6d6fd0bc23a3ce4, ptr %reason, align 4, !dbg !15339
  %8 = getelementptr inbounds i8, ptr %reason, i32 4, !dbg !15339
  store i32 47, ptr %8, align 4, !dbg !15339
  br label %bb8, !dbg !15340

bb7:                                              ; preds = %bb4
  store ptr @alloc_236b52f5c81143245b05b9fdb0db30b7, ptr %reason, align 4, !dbg !15341
  %9 = getelementptr inbounds i8, ptr %reason, i32 4, !dbg !15341
  store i32 64, ptr %9, align 4, !dbg !15341
  br label %bb8, !dbg !15341

bb8:                                              ; preds = %bb6, %bb7
  %_9.0 = load ptr, ptr %reason, align 4, !dbg !15342
  %10 = getelementptr inbounds i8, ptr %reason, i32 4, !dbg !15342
  %_9.1 = load i32, ptr %10, align 4, !dbg !15342
; call core::fmt::Formatter::write_str
  %11 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4 %fmt, ptr align 1 %_9.0, i32 %_9.1) #17, !dbg !15343
  %12 = zext i1 %11 to i8, !dbg !15343
  store i8 %12, ptr %_0, align 1, !dbg !15343
  br label %bb9, !dbg !15343

bb9:                                              ; preds = %bb5, %bb8
  %13 = load i8, ptr %_0, align 1, !dbg !15344
  %14 = trunc nuw i8 %13 to i1, !dbg !15344
  ret i1 %14, !dbg !15344

bb3:                                              ; No predecessors!
  unreachable, !dbg !15345
}

; <alloc::string::String as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h37c79d989a4cc233E"(ptr align 4 %self, ptr align 4 %0) unnamed_addr #2 !dbg !15347 {
start:
  %index.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15352, !DIExpression(), !15356)
    #dbg_declare(ptr %index.dbg.spill, !15353, !DIExpression(), !15357)
; call alloc::string::String::as_str
  %1 = call { ptr, i32 } @_ZN5alloc6string6String6as_str17ha63f9ab0907175deE(ptr align 4 %self) #17, !dbg !15358
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !15358
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !15358
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFull>::index
  %2 = call { ptr, i32 } @"_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h0e80e9d18d837736E"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 %0) #17, !dbg !15359
  %_0.0 = extractvalue { ptr, i32 } %2, 0, !dbg !15359
  %_0.1 = extractvalue { ptr, i32 } %2, 1, !dbg !15359
  %3 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15360
  %4 = insertvalue { ptr, i32 } %3, i32 %_0.1, 1, !dbg !15360
  ret { ptr, i32 } %4, !dbg !15360
}

; <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h9a8986ae569912f1E"(ptr align 4 %self, ptr align 4 %args) unnamed_addr #2 !dbg !15361 {
start:
  %0 = alloca [24 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [8 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15365, !DIExpression(), !15371)
    #dbg_declare(ptr %args, !15366, !DIExpression(), !15372)
; call core::fmt::Arguments::as_statically_known_str
  %1 = call { ptr, i32 } @_ZN4core3fmt9Arguments23as_statically_known_str17h237d54dac2fc53a3E(ptr align 4 %args) #17, !dbg !15373
  %2 = extractvalue { ptr, i32 } %1, 0, !dbg !15373
  %3 = extractvalue { ptr, i32 } %1, 1, !dbg !15373
  store ptr %2, ptr %_3, align 4, !dbg !15373
  %4 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !15373
  store i32 %3, ptr %4, align 4, !dbg !15373
  %5 = load ptr, ptr %_3, align 4, !dbg !15374
  %6 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !15374
  %7 = load i32, ptr %6, align 4, !dbg !15374
  %8 = ptrtoint ptr %5 to i32, !dbg !15374
  %9 = icmp eq i32 %8, 0, !dbg !15374
  %_5 = select i1 %9, i32 0, i32 1, !dbg !15374
  %10 = trunc nuw i32 %_5 to i1, !dbg !15375
  br i1 %10, label %bb2, label %bb3, !dbg !15375

bb2:                                              ; preds = %start
  %s.0 = load ptr, ptr %_3, align 4, !dbg !15376
  %11 = getelementptr inbounds i8, ptr %_3, i32 4, !dbg !15376
  %s.1 = load i32, ptr %11, align 4, !dbg !15376
  store ptr %s.0, ptr %s.dbg.spill, align 4, !dbg !15376
  %12 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4, !dbg !15376
  store i32 %s.1, ptr %12, align 4, !dbg !15376
    #dbg_declare(ptr %s.dbg.spill, !15367, !DIExpression(), !15376)
; call <alloc::string::String as core::fmt::Write>::write_str
  %13 = call zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17he33dda6c037d345bE"(ptr align 4 %self, ptr align 1 %s.0, i32 %s.1) #17, !dbg !15377
  %14 = zext i1 %13 to i8, !dbg !15377
  store i8 %14, ptr %_0, align 1, !dbg !15377
  br label %bb4, !dbg !15377

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %0, ptr align 4 %args, i32 24, i1 false), !dbg !15378
; call core::fmt::write
  %15 = call zeroext i1 @_ZN4core3fmt5write17hc2899684fc6bf93bE(ptr align 1 %self, ptr align 4 @vtable.a, ptr align 4 %0) #17, !dbg !15378
  %16 = zext i1 %15 to i8, !dbg !15378
  store i8 %16, ptr %_0, align 1, !dbg !15378
  br label %bb4, !dbg !15378

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8, ptr %_0, align 1, !dbg !15379
  %18 = trunc nuw i8 %17 to i1, !dbg !15379
  ret i1 %18, !dbg !15379

bb5:                                              ; No predecessors!
  unreachable, !dbg !15380
}

; <[T] as alloc::slice::SpecCloneIntoVec<T,A>>::clone_into
; Function Attrs: nounwind
define dso_local void @"_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h0c90bb795dd72c5eE"(ptr align 1 %self.0, i32 %self.1, ptr align 4 %target) unnamed_addr #1 !dbg !15381 {
start:
  %target.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !15384, !DIExpression(), !15386)
  store ptr %target, ptr %target.dbg.spill, align 4
    #dbg_declare(ptr %target.dbg.spill, !15385, !DIExpression(), !15387)
; call alloc::vec::Vec<T,A>::clear
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h48061e4466c7faf2E"(ptr align 4 %target) #17, !dbg !15388
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE"(ptr align 4 %target, ptr align 1 %self.0, i32 %self.1) #17, !dbg !15389
  ret void, !dbg !15390
}

; <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5816c49960636028E"(ptr align 4 %self) unnamed_addr #2 !dbg !15391 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15394, !DIExpression(), !15395)
; call alloc::vec::Vec<T,A>::as_mut_slice
  %0 = call { ptr, i32 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h72bca9be0aef2792E"(ptr align 4 %self) #17, !dbg !15396
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15396
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15396
  %1 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !15397
  %2 = insertvalue { ptr, i32 } %1, i32 %_0.1, 1, !dbg !15397
  ret { ptr, i32 } %2, !dbg !15397
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint nounwind
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hae2059870cb2adf7E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #2 !dbg !15398 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !15401, !DIExpression(), !15402)
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hb794441537176e61E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) #17, !dbg !15403
  ret void, !dbg !15404
}

; <core::ptr::alignment::AlignmentEnum as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN76_$LT$core..ptr..alignment..AlignmentEnum$u20$as$u20$core..cmp..PartialEq$GT$2eq17h63514dc09bafced2E"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #2 !dbg !15405 {
start:
  %__arg1_discr.dbg.spill = alloca [4 x i8], align 4
  %__self_discr.dbg.spill = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15411, !DIExpression(), !15417)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !15412, !DIExpression(), !15417)
  %__self_discr = load i32, ptr %self, align 4, !dbg !15417
  store i32 %__self_discr, ptr %__self_discr.dbg.spill, align 4, !dbg !15417
    #dbg_declare(ptr %__self_discr.dbg.spill, !15413, !DIExpression(), !15418)
  %__arg1_discr = load i32, ptr %other, align 4, !dbg !15418
  store i32 %__arg1_discr, ptr %__arg1_discr.dbg.spill, align 4, !dbg !15418
    #dbg_declare(ptr %__arg1_discr.dbg.spill, !15415, !DIExpression(), !15419)
  %_0 = icmp eq i32 %__self_discr, %__arg1_discr, !dbg !15419
  ret i1 %_0, !dbg !15420
}

; <alloc::borrow::Cow<str> as core::ops::arith::AddAssign>::add_assign
; Function Attrs: nounwind
define dso_local void @"_ZN77_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h3381c531bf60d46bE"(ptr align 4 %self, ptr align 4 %rhs) unnamed_addr #1 !dbg !15421 {
start:
  %lhs.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_27 = alloca [1 x i8], align 1
  %_22 = alloca [12 x i8], align 4
  %_21 = alloca [12 x i8], align 4
  %s = alloca [12 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15426, !DIExpression(), !15432)
    #dbg_declare(ptr %rhs, !15427, !DIExpression(), !15433)
    #dbg_declare(ptr %s, !15430, !DIExpression(), !15434)
  store i8 0, ptr %_27, align 1, !dbg !15435
  store i8 1, ptr %_27, align 1, !dbg !15435
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i32 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha57eaecb76d8c235E"(ptr align 4 %self) #17, !dbg !15435
  %_4.0 = extractvalue { ptr, i32 } %0, 0, !dbg !15435
  %_4.1 = extractvalue { ptr, i32 } %0, 1, !dbg !15435
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1a6184bdcfacbb3aE"(ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !15436
  br i1 %_3, label %bb3, label %bb5, !dbg !15435

bb5:                                              ; preds = %start
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i32 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha57eaecb76d8c235E"(ptr align 4 %rhs) #17, !dbg !15437
  %_8.0 = extractvalue { ptr, i32 } %1, 0, !dbg !15437
  %_8.1 = extractvalue { ptr, i32 } %1, 1, !dbg !15437
; call core::str::<impl str>::is_empty
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1a6184bdcfacbb3aE"(ptr align 1 %_8.0, i32 %_8.1) #17, !dbg !15438
  br i1 %_7, label %bb20, label %bb8, !dbg !15437

bb3:                                              ; preds = %start
  store i8 0, ptr %_27, align 1, !dbg !15439
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_6, ptr align 4 %rhs, i32 12, i1 false), !dbg !15439
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E"(ptr align 4 %self) #17, !dbg !15440
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_6, i32 12, i1 false), !dbg !15440
  br label %bb20, !dbg !15441

bb8:                                              ; preds = %bb5
  %2 = load i32, ptr %self, align 4, !dbg !15442
  %3 = icmp eq i32 %2, -2147483648, !dbg !15442
  %_10 = select i1 %3, i32 0, i32 1, !dbg !15442
  %4 = trunc nuw i32 %_10 to i1, !dbg !15443
  br i1 %4, label %bb17, label %bb9, !dbg !15443

bb20:                                             ; preds = %bb3, %bb17, %bb5
  %5 = load i8, ptr %_27, align 1, !dbg !15444
  %6 = trunc nuw i8 %5 to i1, !dbg !15444
  br i1 %6, label %bb22, label %bb21, !dbg !15444

bb17:                                             ; preds = %bb13, %bb8
; call alloc::borrow::Cow<B>::to_mut
  %_24 = call align 4 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h9468a62c9c14f9d5E"(ptr align 4 %self) #17, !dbg !15445
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %7 = call { ptr, i32 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha57eaecb76d8c235E"(ptr align 4 %rhs) #17, !dbg !15446
  %_25.0 = extractvalue { ptr, i32 } %7, 0, !dbg !15446
  %_25.1 = extractvalue { ptr, i32 } %7, 1, !dbg !15446
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %_24, ptr align 1 %_25.0, i32 %_25.1) #17, !dbg !15447
  br label %bb20, !dbg !15447

bb9:                                              ; preds = %bb8
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15448
  %lhs.0 = load ptr, ptr %8, align 4, !dbg !15448
  %9 = getelementptr inbounds i8, ptr %8, i32 4, !dbg !15448
  %lhs.1 = load i32, ptr %9, align 4, !dbg !15448
  store ptr %lhs.0, ptr %lhs.dbg.spill, align 4, !dbg !15448
  %10 = getelementptr inbounds i8, ptr %lhs.dbg.spill, i32 4, !dbg !15448
  store i32 %lhs.1, ptr %10, align 4, !dbg !15448
    #dbg_declare(ptr %lhs.dbg.spill, !15428, !DIExpression(), !15448)
; call core::str::<impl str>::len
  %_14 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %lhs.0, i32 %lhs.1) #17, !dbg !15449
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %11 = call { ptr, i32 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha57eaecb76d8c235E"(ptr align 4 %rhs) #17, !dbg !15450
  %_16.0 = extractvalue { ptr, i32 } %11, 0, !dbg !15450
  %_16.1 = extractvalue { ptr, i32 } %11, 1, !dbg !15450
; call core::str::<impl str>::len
  %_15 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %_16.0, i32 %_16.1) #17, !dbg !15451
  %_18.0 = add i32 %_14, %_15, !dbg !15452
  %_18.1 = icmp ult i32 %_18.0, %_14, !dbg !15452
  br i1 %_18.1, label %panic, label %bb13, !dbg !15452

bb13:                                             ; preds = %bb9
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE(ptr sret([12 x i8]) align 4 %s, i32 %_18.0) #17, !dbg !15453
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %s, ptr align 1 %lhs.0, i32 %lhs.1) #17, !dbg !15454
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_22, ptr align 4 %s, i32 12, i1 false), !dbg !15455
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_21, ptr align 4 %_22, i32 12, i1 false), !dbg !15456
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E"(ptr align 4 %self) #17, !dbg !15457
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_21, i32 12, i1 false), !dbg !15457
  br label %bb17, !dbg !15458

panic:                                            ; preds = %bb9
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_368b96ba8943e1bc0a289121b00da954) #18, !dbg !15452
  unreachable, !dbg !15452

bb23:                                             ; No predecessors!
  unreachable, !dbg !15459

bb21:                                             ; preds = %bb22, %bb20
  ret void, !dbg !15460

bb22:                                             ; preds = %bb20
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E"(ptr align 4 %rhs) #17, !dbg !15444
  br label %bb21, !dbg !15444
}

; <alloc::ffi::c_str::FromVecWithNulError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN77_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h6f0d4511115bec6cE"(ptr align 4 %self, ptr align 4 %f) unnamed_addr #1 !dbg !15461 {
start:
  %args.dbg.spill = alloca [4 x i8], align 4
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_12 = alloca [24 x i8], align 4
  %_9 = alloca [8 x i8], align 4
  %args = alloca [8 x i8], align 4
  %_5 = alloca [24 x i8], align 4
  %pos = alloca [4 x i8], align 4
  %_0 = alloca [1 x i8], align 1
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15466, !DIExpression(), !15476)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !15467, !DIExpression(), !15477)
    #dbg_declare(ptr %pos, !15468, !DIExpression(), !15478)
    #dbg_declare(ptr %args, !15473, !DIExpression(), !15479)
  %_3 = load i32, ptr %self, align 4, !dbg !15480
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15480
  %1 = load i32, ptr %0, align 4, !dbg !15480
  %2 = trunc nuw i32 %_3 to i1, !dbg !15481
  br i1 %2, label %bb2, label %bb3, !dbg !15481

bb2:                                              ; preds = %start
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_12, ptr align 4 @alloc_428480d24192b9201b05b20cc9f63500) #17, !dbg !15482
; call core::fmt::Formatter::write_fmt
  %3 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd79f790f9e7cd2edE(ptr align 4 %f, ptr align 4 %_12) #17, !dbg !15482
  %4 = zext i1 %3 to i8, !dbg !15482
  store i8 %4, ptr %_0, align 1, !dbg !15482
  br label %bb7, !dbg !15482

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15483
  %6 = load i32, ptr %5, align 4, !dbg !15483
  store i32 %6, ptr %pos, align 4, !dbg !15483
  store ptr %pos, ptr %args.dbg.spill, align 4, !dbg !15484
    #dbg_declare(ptr %args.dbg.spill, !15470, !DIExpression(), !15485)
; call core::fmt::rt::Argument::new_display
  call void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4 %_9, ptr align 4 %pos) #17, !dbg !15485
  %7 = getelementptr inbounds nuw %"core::fmt::rt::Argument<'_>", ptr %args, i32 0, !dbg !15485
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %7, ptr align 4 %_9, i32 8, i1 false), !dbg !15485
; call core::fmt::rt::<impl core::fmt::Arguments>::new_v1
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4 %_5, ptr align 4 @alloc_895fca6e85fc004dedf49d6d2442fc20, ptr align 4 %args) #17, !dbg !15479
; call core::fmt::Formatter::write_fmt
  %8 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd79f790f9e7cd2edE(ptr align 4 %f, ptr align 4 %_5) #17, !dbg !15484
  %9 = zext i1 %8 to i8, !dbg !15484
  store i8 %9, ptr %_0, align 1, !dbg !15484
  br label %bb7, !dbg !15484

bb7:                                              ; preds = %bb2, %bb3
  %10 = load i8, ptr %_0, align 1, !dbg !15486
  %11 = trunc nuw i8 %10 to i1, !dbg !15486
  ret i1 %11, !dbg !15486

bb1:                                              ; No predecessors!
  unreachable, !dbg !15480
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define dso_local void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b274ca7b30f6b82E"(ptr align 4 %self) unnamed_addr #1 !dbg !15487 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15490, !DIExpression(), !15491)
; call alloc::raw_vec::RawVecInner<A>::deallocate
  call void @"_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17hcb3bf6cb67a4aebeE"(ptr align 4 %self, i32 1, i32 1) #17, !dbg !15492
  ret void, !dbg !15493
}

; <alloc::collections::TryReserveErrorKind as core::clone::Clone>::clone
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17ha86a7b1c990e0e9fE"(ptr align 4 %self) unnamed_addr #2 !dbg !15494 {
start:
  %__self_1.dbg.spill = alloca [4 x i8], align 4
  %__self_0.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15500, !DIExpression(), !15504)
  %0 = load i32, ptr %self, align 4, !dbg !15504
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15504
  %2 = load i32, ptr %1, align 4, !dbg !15504
  %3 = icmp eq i32 %0, 0, !dbg !15504
  %_2 = select i1 %3, i32 0, i32 1, !dbg !15504
  %4 = trunc nuw i32 %_2 to i1, !dbg !15504
  br i1 %4, label %bb2, label %bb3, !dbg !15504

bb2:                                              ; preds = %start
  store ptr %self, ptr %__self_0.dbg.spill, align 4, !dbg !15505
    #dbg_declare(ptr %__self_0.dbg.spill, !15501, !DIExpression(), !15506)
  %__self_1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !15507
  store ptr %__self_1, ptr %__self_1.dbg.spill, align 4, !dbg !15507
    #dbg_declare(ptr %__self_1.dbg.spill, !15503, !DIExpression(), !15508)
; call <core::alloc::layout::Layout as core::clone::Clone>::clone
  %5 = call { i32, i32 } @"_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h2387eee35ea3b63eE"(ptr align 4 %self) #17, !dbg !15506
  %_5.0 = extractvalue { i32, i32 } %5, 0, !dbg !15506
  %_5.1 = extractvalue { i32, i32 } %5, 1, !dbg !15506
  store i32 %_5.0, ptr %_0, align 4, !dbg !15509
  %6 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15509
  store i32 %_5.1, ptr %6, align 4, !dbg !15509
  br label %bb5, !dbg !15510

bb3:                                              ; preds = %start
  store i32 0, ptr %_0, align 4, !dbg !15504
  br label %bb5, !dbg !15504

bb5:                                              ; preds = %bb2, %bb3
  %7 = load i32, ptr %_0, align 4, !dbg !15511
  %8 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15511
  %9 = load i32, ptr %8, align 4, !dbg !15511
  %10 = insertvalue { i32, i32 } poison, i32 %7, 0, !dbg !15511
  %11 = insertvalue { i32, i32 } %10, i32 %9, 1, !dbg !15511
  ret { i32, i32 } %11, !dbg !15511

bb1:                                              ; No predecessors!
  unreachable, !dbg !15504
}

; <alloc::string::String as core::ops::arith::Add<&str>>::add
; Function Attrs: inlinehint nounwind
define internal void @"_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17h5120f132aac7d8b4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self, ptr align 1 %other.0, i32 %other.1) unnamed_addr #2 !dbg !15512 {
start:
    #dbg_declare(ptr %self, !15517, !DIExpression(), !15519)
  %other.dbg.spill = alloca [8 x i8], align 4
  store ptr %other.0, ptr %other.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %other.dbg.spill, i32 4
  store i32 %other.1, ptr %0, align 4
    #dbg_declare(ptr %other.dbg.spill, !15518, !DIExpression(), !15520)
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %self, ptr align 1 %other.0, i32 %other.1) #17, !dbg !15521
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %self, i32 12, i1 false), !dbg !15522
  ret void, !dbg !15523
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h46581e06d27f1d91E"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #2 !dbg !15524 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15530, !DIExpression(), !15532)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !15531, !DIExpression(), !15533)
  %_4 = load ptr, ptr %self, align 4, !dbg !15534
  store ptr %_4, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4160, !DIExpression(), !15535)
  %_6 = load ptr, ptr %other, align 4, !dbg !15537
  store ptr %_6, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4160, !DIExpression(), !15538)
  %_0 = icmp eq ptr %_4, %_6, !dbg !15534
  ret i1 %_0, !dbg !15540
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8bdd06735b30d90bE"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #2 !dbg !15541 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15546, !DIExpression(), !15548)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !15547, !DIExpression(), !15549)
  %_4 = load ptr, ptr %self, align 4, !dbg !15550
  store ptr %_4, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !15551, !DIExpression(), !15558)
  %_6 = load ptr, ptr %other, align 4, !dbg !15560
  store ptr %_6, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !15551, !DIExpression(), !15561)
  %_0 = icmp eq ptr %_4, %_6, !dbg !15550
  ret i1 %_0, !dbg !15563
}

; <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hbe83ab615ad97cb4E"(ptr align 4 %self, ptr align 4 %other) unnamed_addr #2 !dbg !15564 {
start:
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %other.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15569, !DIExpression(), !15571)
  store ptr %other, ptr %other.dbg.spill, align 4
    #dbg_declare(ptr %other.dbg.spill, !15570, !DIExpression(), !15572)
  %_4 = load ptr, ptr %self, align 4, !dbg !15573
  store ptr %_4, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4181, !DIExpression(), !15574)
  %_6 = load ptr, ptr %other, align 4, !dbg !15576
  store ptr %_6, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4181, !DIExpression(), !15577)
  %_0 = icmp eq ptr %_4, %_6, !dbg !15573
  ret i1 %_0, !dbg !15579
}

; <alloc::boxed::Box<[T]> as core::default::Default>::default
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17h2b5961ec46a53765E"() unnamed_addr #2 !dbg !15580 {
start:
  %ptr.dbg.spill = alloca [8 x i8], align 4, !dbg !15587
; call core::ptr::unique::Unique<T>::dangling
  %_2 = call ptr @"_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h2669c55e60a761bdE"() #17, !dbg !15587
  store ptr %_2, ptr %ptr.dbg.spill, align 4, !dbg !15587
  %0 = getelementptr inbounds i8, ptr %ptr.dbg.spill, i32 4, !dbg !15587
  store i32 0, ptr %0, align 4, !dbg !15587
    #dbg_declare(ptr %ptr.dbg.spill, !15585, !DIExpression(), !15588)
  %1 = insertvalue { ptr, i32 } poison, ptr %_2, 0, !dbg !15589
  %2 = insertvalue { ptr, i32 } %1, i32 0, 1, !dbg !15589
  ret { ptr, i32 } %2, !dbg !15589
}

; <alloc::string::Drain as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nounwind
define dso_local void @"_ZN79_$LT$alloc..string..Drain$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hc913d4c16eb05ddfE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !15590 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15595, !DIExpression(), !15596)
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h2113bc94025b18faE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) #17, !dbg !15597
  ret void, !dbg !15598
}

; <alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define dso_local void @"_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h680bf3e4dadaec29E"(ptr align 4 %self) unnamed_addr #1 !dbg !15599 {
start:
  %self.dbg.spill.i6 = alloca [8 x i8], align 4
  %self.dbg.spill.i5 = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [4 x i8], align 4
  %to_drop.dbg.spill = alloca [8 x i8], align 4
  %drop_offset.dbg.spill = alloca [4 x i8], align 4
  %vec_ptr.dbg.spill = alloca [4 x i8], align 4
  %drop_ptr.dbg.spill = alloca [4 x i8], align 4
  %drop_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_guard = alloca [4 x i8], align 4
  %vec = alloca [4 x i8], align 4
  %iter = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !15603, !DIExpression(), !15624)
    #dbg_declare(ptr %iter, !15604, !DIExpression(), !15625)
    #dbg_declare(ptr %vec, !15608, !DIExpression(), !15626)
    #dbg_declare(ptr %_guard, !15614, !DIExpression(), !15627)
; call core::mem::take
  %0 = call { ptr, ptr } @_ZN4core3mem4take17hd018c29f487d7d3bE(ptr align 4 %self) #17, !dbg !15628
  %1 = extractvalue { ptr, ptr } %0, 0, !dbg !15628
  %2 = extractvalue { ptr, ptr } %0, 1, !dbg !15628
  store ptr %1, ptr %iter, align 4, !dbg !15628
  %3 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !15628
  store ptr %2, ptr %3, align 4, !dbg !15628
  store ptr %iter, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !15629, !DIExpression(), !15641)
  %4 = getelementptr inbounds i8, ptr %iter, i32 4, !dbg !15643
  %_5.i = load ptr, ptr %4, align 4, !dbg !15643
  store ptr %_5.i, ptr %end.dbg.spill.i, align 4, !dbg !15644
    #dbg_declare(ptr %end.dbg.spill.i, !15639, !DIExpression(), !15645)
  %_6.i = load ptr, ptr %iter, align 4, !dbg !15646
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %5 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i, ptr %_6.i) #17, !dbg !15647
  store i32 %5, ptr %_0.i, align 4, !dbg !15647
  %6 = load i32, ptr %_0.i, align 4, !dbg !15648
  store i32 %6, ptr %drop_len.dbg.spill, align 4, !dbg !15649
    #dbg_declare(ptr %drop_len.dbg.spill, !15606, !DIExpression(), !15650)
  %7 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !15651
  %8 = load ptr, ptr %7, align 4, !dbg !15651
  store ptr %8, ptr %vec, align 4, !dbg !15651
  br label %bb10, !dbg !15652

bb10:                                             ; preds = %start
  store ptr %self, ptr %_guard, align 4, !dbg !15653
  %9 = icmp eq i32 %6, 0, !dbg !15654
  br i1 %9, label %bb11, label %bb12, !dbg !15654

bb11:                                             ; preds = %bb10
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
  call void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h28f3501fb6b9b61aE"(ptr align 4 %_guard) #17, !dbg !15655
  br label %bb21, !dbg !15655

bb12:                                             ; preds = %bb10
; call core::slice::iter::Iter<T>::as_slice
  %10 = call { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4 %iter) #17, !dbg !15656
  %_23.0 = extractvalue { ptr, i32 } %10, 0, !dbg !15656
  %_23.1 = extractvalue { ptr, i32 } %10, 1, !dbg !15656
  store ptr %_23.0, ptr %self.dbg.spill.i6, align 4
  %11 = getelementptr inbounds i8, ptr %self.dbg.spill.i6, i32 4
  store i32 %_23.1, ptr %11, align 4
    #dbg_declare(ptr %self.dbg.spill.i6, !447, !DIExpression(), !15657)
  store ptr %_23.0, ptr %drop_ptr.dbg.spill, align 4, !dbg !15659
    #dbg_declare(ptr %drop_ptr.dbg.spill, !15616, !DIExpression(), !15660)
  store ptr %vec, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !1760, !DIExpression(), !15661)
  %_3.i4 = load ptr, ptr %vec, align 4, !dbg !15663
  store ptr %_3.i4, ptr %self.dbg.spill.i5, align 4
    #dbg_declare(ptr %self.dbg.spill.i5, !1770, !DIExpression(), !15664)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %vec_ptr = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %_3.i4) #17, !dbg !15666
  store ptr %vec_ptr, ptr %vec_ptr.dbg.spill, align 4, !dbg !15666
    #dbg_declare(ptr %vec_ptr.dbg.spill, !15618, !DIExpression(), !15667)
; call core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
  %drop_offset = call i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hc1d178877ba95afeE"(ptr %_23.0, ptr %vec_ptr, ptr align 4 @alloc_9f798d799ba2eb8dc69261563d94be55) #17, !dbg !15668
  store i32 %drop_offset, ptr %drop_offset.dbg.spill, align 4, !dbg !15668
    #dbg_declare(ptr %drop_offset.dbg.spill, !15620, !DIExpression(), !15669)
  store ptr %vec_ptr, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !1808, !DIExpression(), !15670)
  store i32 %drop_offset, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !1816, !DIExpression(), !15672)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !15673
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !15673

bb2.i:                                            ; preds = %bb12
; call core::ptr::mut_ptr::<impl *mut T>::add::precondition_check
  call void @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E"(ptr %vec_ptr, i32 %drop_offset, i32 1, ptr align 4 @alloc_f7926c9d6ff0a891e629d43941eac3bb) #17, !dbg !15674
  br label %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", !dbg !15674

"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit": ; preds = %bb12, %bb2.i
  %_0.i2 = getelementptr inbounds nuw i8, ptr %vec_ptr, i32 %drop_offset, !dbg !15675
; call core::ptr::slice_from_raw_parts_mut
  %12 = call { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha3a5beed25bc1c5cE(ptr %_0.i2, i32 %6) #17, !dbg !15676
  %to_drop.0 = extractvalue { ptr, i32 } %12, 0, !dbg !15676
  %to_drop.1 = extractvalue { ptr, i32 } %12, 1, !dbg !15676
  store ptr %to_drop.0, ptr %to_drop.dbg.spill, align 4, !dbg !15676
  %13 = getelementptr inbounds i8, ptr %to_drop.dbg.spill, i32 4, !dbg !15676
  store i32 %to_drop.1, ptr %13, align 4, !dbg !15676
    #dbg_declare(ptr %to_drop.dbg.spill, !15622, !DIExpression(), !15677)
; call core::ptr::drop_in_place<<alloc::vec::drain::Drain<T,A> as core::ops::drop::Drop>::drop::DropGuard<u8,alloc::alloc::Global>>
  call void @"_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h28f3501fb6b9b61aE"(ptr align 4 %_guard) #17, !dbg !15655
  br label %bb21, !dbg !15655

bb21:                                             ; preds = %"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E.exit", %bb11
  ret void, !dbg !15678

bb3:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable

bb7:                                              ; No predecessors!
  unreachable

bb8:                                              ; No predecessors!
  unreachable

bb9:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h5d08afea4e007749E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %output) unnamed_addr #2 !dbg !15679 {
start:
    #dbg_declare(ptr %output, !15684, !DIExpression(), !15685)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %output, i32 12, i1 false), !dbg !15686
  ret void, !dbg !15687
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h067890e4fde95786E"(ptr %0, i32 %1) unnamed_addr #2 !dbg !15688 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !15708, !DIExpression(), !15713)
    #dbg_declare(ptr %e.dbg.spill, !15711, !DIExpression(), !15714)
  %3 = load ptr, ptr %self, align 4, !dbg !15715
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15715
  %5 = load i32, ptr %4, align 4, !dbg !15715
  %6 = ptrtoint ptr %3 to i32, !dbg !15715
  %7 = icmp eq i32 %6, 0, !dbg !15715
  %_2 = select i1 %7, i32 1, i32 0, !dbg !15715
  %8 = trunc nuw i32 %_2 to i1, !dbg !15716
  br i1 %8, label %bb2, label %bb3, !dbg !15716

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !15717
  br label %bb4, !dbg !15718

bb3:                                              ; preds = %start
  %v.0 = load ptr, ptr %self, align 4, !dbg !15719
  %9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15719
  %v.1 = load i32, ptr %9, align 4, !dbg !15719
  store ptr %v.0, ptr %v.dbg.spill, align 4, !dbg !15719
  %10 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4, !dbg !15719
  store i32 %v.1, ptr %10, align 4, !dbg !15719
    #dbg_declare(ptr %v.dbg.spill, !15709, !DIExpression(), !15720)
  store ptr %v.0, ptr %_0, align 4, !dbg !15721
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15721
  store i32 %v.1, ptr %11, align 4, !dbg !15721
  br label %bb4, !dbg !15722

bb4:                                              ; preds = %bb2, %bb3
  %12 = load ptr, ptr %_0, align 4, !dbg !15723
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15723
  %14 = load i32, ptr %13, align 4, !dbg !15723
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0, !dbg !15723
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1, !dbg !15723
  ret { ptr, i32 } %16, !dbg !15723

bb1:                                              ; No predecessors!
  unreachable, !dbg !15715
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12b00088086aa52eE"(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !15724 {
start:
  %e.dbg.spill = alloca [8 x i8], align 4, !dbg !15749
  %v.dbg.spill = alloca [4 x i8], align 4, !dbg !15749
    #dbg_declare(ptr %self, !15744, !DIExpression(), !15750)
  %0 = load i32, ptr %self, align 4, !dbg !15749
  %1 = icmp eq i32 %0, -2147483647, !dbg !15749
  %_2 = select i1 %1, i32 0, i32 1, !dbg !15749
  %2 = trunc nuw i32 %_2 to i1, !dbg !15751
  br i1 %2, label %bb2, label %bb3, !dbg !15751

bb2:                                              ; preds = %start
  %e.0 = load i32, ptr %self, align 4, !dbg !15752
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15752
  %e.1 = load i32, ptr %3, align 4, !dbg !15752
  store i32 %e.0, ptr %e.dbg.spill, align 4, !dbg !15752
  %4 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !15752
  store i32 %e.1, ptr %4, align 4, !dbg !15752
    #dbg_declare(ptr %e.dbg.spill, !15747, !DIExpression(), !15753)
  store i32 %e.0, ptr %_0, align 4, !dbg !15754
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15754
  store i32 %e.1, ptr %5, align 4, !dbg !15754
  br label %bb4, !dbg !15755

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15756
  %v = load i32, ptr %6, align 4, !dbg !15756
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !15756
    #dbg_declare(ptr %v.dbg.spill, !15745, !DIExpression(), !15757)
  %7 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15758
  store i32 %v, ptr %7, align 4, !dbg !15758
  store i32 -2147483647, ptr %_0, align 4, !dbg !15758
  br label %bb4, !dbg !15759

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !15760

bb1:                                              ; No predecessors!
  unreachable, !dbg !15749
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4f10bbc77f0ae91cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !15761 {
start:
  %e.dbg.spill = alloca [8 x i8], align 4, !dbg !15784
  %v.dbg.spill = alloca [8 x i8], align 4, !dbg !15784
    #dbg_declare(ptr %self, !15779, !DIExpression(), !15785)
  %_2 = load i32, ptr %self, align 4, !dbg !15784
  %0 = trunc nuw i32 %_2 to i1, !dbg !15786
  br i1 %0, label %bb2, label %bb3, !dbg !15786

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15787
  %e.0 = load i32, ptr %1, align 4, !dbg !15787
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !15787
  %e.1 = load i32, ptr %2, align 4, !dbg !15787
  store i32 %e.0, ptr %e.dbg.spill, align 4, !dbg !15787
  %3 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !15787
  store i32 %e.1, ptr %3, align 4, !dbg !15787
    #dbg_declare(ptr %e.dbg.spill, !15782, !DIExpression(), !15788)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15789
  store i32 %e.0, ptr %4, align 4, !dbg !15789
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !15789
  store i32 %e.1, ptr %5, align 4, !dbg !15789
  store i32 1, ptr %_0, align 4, !dbg !15789
  br label %bb4, !dbg !15790

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15791
  %v.0 = load ptr, ptr %6, align 4, !dbg !15791
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !15791
  %v.1 = load i32, ptr %7, align 4, !dbg !15791
  store ptr %v.0, ptr %v.dbg.spill, align 4, !dbg !15791
  %8 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4, !dbg !15791
  store i32 %v.1, ptr %8, align 4, !dbg !15791
    #dbg_declare(ptr %v.dbg.spill, !15780, !DIExpression(), !15792)
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15793
  store ptr %v.0, ptr %9, align 4, !dbg !15793
  %10 = getelementptr inbounds i8, ptr %9, i32 4, !dbg !15793
  store i32 %v.1, ptr %10, align 4, !dbg !15793
  store i32 0, ptr %_0, align 4, !dbg !15793
  br label %bb4, !dbg !15794

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !15795

bb1:                                              ; No predecessors!
  unreachable, !dbg !15784
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h52fa1c8fc41c0dbcE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !15796 {
start:
  %e.dbg.spill = alloca [8 x i8], align 4, !dbg !15820
  %v.dbg.spill = alloca [8 x i8], align 4, !dbg !15820
    #dbg_declare(ptr %self, !15815, !DIExpression(), !15821)
  %_2 = load i32, ptr %self, align 4, !dbg !15820
  %0 = trunc nuw i32 %_2 to i1, !dbg !15822
  br i1 %0, label %bb2, label %bb3, !dbg !15822

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15823
  %e.0 = load i32, ptr %1, align 4, !dbg !15823
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !15823
  %e.1 = load i32, ptr %2, align 4, !dbg !15823
  store i32 %e.0, ptr %e.dbg.spill, align 4, !dbg !15823
  %3 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !15823
  store i32 %e.1, ptr %3, align 4, !dbg !15823
    #dbg_declare(ptr %e.dbg.spill, !15818, !DIExpression(), !15824)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15825
  store i32 %e.0, ptr %4, align 4, !dbg !15825
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !15825
  store i32 %e.1, ptr %5, align 4, !dbg !15825
  store i32 1, ptr %_0, align 4, !dbg !15825
  br label %bb4, !dbg !15826

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15827
  %v.0 = load ptr, ptr %6, align 4, !dbg !15827
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !15827
  %v.1 = load i32, ptr %7, align 4, !dbg !15827
  store ptr %v.0, ptr %v.dbg.spill, align 4, !dbg !15827
  %8 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4, !dbg !15827
  store i32 %v.1, ptr %8, align 4, !dbg !15827
    #dbg_declare(ptr %v.dbg.spill, !15816, !DIExpression(), !15828)
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15829
  store ptr %v.0, ptr %9, align 4, !dbg !15829
  %10 = getelementptr inbounds i8, ptr %9, i32 4, !dbg !15829
  store i32 %v.1, ptr %10, align 4, !dbg !15829
  store i32 0, ptr %_0, align 4, !dbg !15829
  br label %bb4, !dbg !15830

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !15831

bb1:                                              ; No predecessors!
  unreachable, !dbg !15820
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6330f699d96fc25aE"(i32 %0, i32 %1) unnamed_addr #2 !dbg !15832 {
start:
  %e.dbg.spill = alloca [8 x i8], align 4
  %v.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [8 x i8], align 4
  %self = alloca [8 x i8], align 4
  store i32 %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store i32 %1, ptr %2, align 4
    #dbg_declare(ptr %self, !15850, !DIExpression(), !15855)
    #dbg_declare(ptr %v.dbg.spill, !15851, !DIExpression(), !15856)
  %3 = load i32, ptr %self, align 4, !dbg !15857
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15857
  %5 = load i32, ptr %4, align 4, !dbg !15857
  %6 = icmp eq i32 %3, -2147483647, !dbg !15857
  %_2 = select i1 %6, i32 0, i32 1, !dbg !15857
  %7 = trunc nuw i32 %_2 to i1, !dbg !15858
  br i1 %7, label %bb2, label %bb3, !dbg !15858

bb2:                                              ; preds = %start
  %e.0 = load i32, ptr %self, align 4, !dbg !15859
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15859
  %e.1 = load i32, ptr %8, align 4, !dbg !15859
  store i32 %e.0, ptr %e.dbg.spill, align 4, !dbg !15859
  %9 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !15859
  store i32 %e.1, ptr %9, align 4, !dbg !15859
    #dbg_declare(ptr %e.dbg.spill, !15853, !DIExpression(), !15860)
  store i32 %e.0, ptr %_0, align 4, !dbg !15861
  %10 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15861
  store i32 %e.1, ptr %10, align 4, !dbg !15861
  br label %bb4, !dbg !15862

bb3:                                              ; preds = %start
  store i32 -2147483647, ptr %_0, align 4, !dbg !15863
  br label %bb4, !dbg !15864

bb4:                                              ; preds = %bb2, %bb3
  %11 = load i32, ptr %_0, align 4, !dbg !15865
  %12 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15865
  %13 = load i32, ptr %12, align 4, !dbg !15865
  %14 = insertvalue { i32, i32 } poison, i32 %11, 0, !dbg !15865
  %15 = insertvalue { i32, i32 } %14, i32 %13, 1, !dbg !15865
  ret { i32, i32 } %15, !dbg !15865

bb1:                                              ; No predecessors!
  unreachable, !dbg !15857
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h661768b3f16f6fc8E"(ptr %0) unnamed_addr #2 !dbg !15866 {
start:
  %v.dbg.spill = alloca [4 x i8], align 4
  %e.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store ptr %0, ptr %self, align 4
    #dbg_declare(ptr %self, !15885, !DIExpression(), !15890)
    #dbg_declare(ptr %e.dbg.spill, !15888, !DIExpression(), !15891)
  %1 = load ptr, ptr %self, align 4, !dbg !15892
  %2 = ptrtoint ptr %1 to i32, !dbg !15892
  %3 = icmp eq i32 %2, 0, !dbg !15892
  %_2 = select i1 %3, i32 1, i32 0, !dbg !15892
  %4 = trunc nuw i32 %_2 to i1, !dbg !15893
  br i1 %4, label %bb2, label %bb3, !dbg !15893

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 4, !dbg !15894
  br label %bb4, !dbg !15895

bb3:                                              ; preds = %start
  %v = load ptr, ptr %self, align 4, !dbg !15896
  store ptr %v, ptr %v.dbg.spill, align 4, !dbg !15896
    #dbg_declare(ptr %v.dbg.spill, !15886, !DIExpression(), !15897)
  store ptr %v, ptr %_0, align 4, !dbg !15898
  br label %bb4, !dbg !15899

bb4:                                              ; preds = %bb2, %bb3
  %5 = load ptr, ptr %_0, align 4, !dbg !15900
  ret ptr %5, !dbg !15900

bb1:                                              ; No predecessors!
  unreachable, !dbg !15892
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9eacb122e555ba05E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !15901 {
start:
  %e.dbg.spill = alloca [8 x i8], align 4, !dbg !15925
  %v.dbg.spill = alloca [8 x i8], align 4, !dbg !15925
    #dbg_declare(ptr %self, !15920, !DIExpression(), !15926)
  %_2 = load i32, ptr %self, align 4, !dbg !15925
  %0 = trunc nuw i32 %_2 to i1, !dbg !15927
  br i1 %0, label %bb2, label %bb3, !dbg !15927

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15928
  %e.0 = load i32, ptr %1, align 4, !dbg !15928
  %2 = getelementptr inbounds i8, ptr %1, i32 4, !dbg !15928
  %e.1 = load i32, ptr %2, align 4, !dbg !15928
  store i32 %e.0, ptr %e.dbg.spill, align 4, !dbg !15928
  %3 = getelementptr inbounds i8, ptr %e.dbg.spill, i32 4, !dbg !15928
  store i32 %e.1, ptr %3, align 4, !dbg !15928
    #dbg_declare(ptr %e.dbg.spill, !15923, !DIExpression(), !15929)
  %4 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15930
  store i32 %e.0, ptr %4, align 4, !dbg !15930
  %5 = getelementptr inbounds i8, ptr %4, i32 4, !dbg !15930
  store i32 %e.1, ptr %5, align 4, !dbg !15930
  store i32 1, ptr %_0, align 4, !dbg !15930
  br label %bb4, !dbg !15931

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15932
  %v.0 = load i32, ptr %6, align 4, !dbg !15932
  %7 = getelementptr inbounds i8, ptr %6, i32 4, !dbg !15932
  %v.1 = load i32, ptr %7, align 4, !dbg !15932
  store i32 %v.0, ptr %v.dbg.spill, align 4, !dbg !15932
  %8 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4, !dbg !15932
  store i32 %v.1, ptr %8, align 4, !dbg !15932
    #dbg_declare(ptr %v.dbg.spill, !15921, !DIExpression(), !15933)
  %9 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15934
  store i32 %v.0, ptr %9, align 4, !dbg !15934
  %10 = getelementptr inbounds i8, ptr %9, i32 4, !dbg !15934
  store i32 %v.1, ptr %10, align 4, !dbg !15934
  store i32 0, ptr %_0, align 4, !dbg !15934
  br label %bb4, !dbg !15935

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !15936

bb1:                                              ; No predecessors!
  unreachable, !dbg !15925
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1271de477c4c8d0E"(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !15937 {
start:
  %e.dbg.spill = alloca [2 x i8], align 2, !dbg !15962
  %v.dbg.spill = alloca [4 x i8], align 4, !dbg !15962
    #dbg_declare(ptr %self, !15957, !DIExpression(), !15963)
  %0 = load i16, ptr %self, align 4, !dbg !15962
  %_2 = zext i16 %0 to i32, !dbg !15962
  %1 = trunc nuw i32 %_2 to i1, !dbg !15964
  br i1 %1, label %bb2, label %bb3, !dbg !15964

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !15965
  %e = load i16, ptr %2, align 2, !dbg !15965
  store i16 %e, ptr %e.dbg.spill, align 2, !dbg !15965
    #dbg_declare(ptr %e.dbg.spill, !15960, !DIExpression(), !15966)
  %3 = getelementptr inbounds i8, ptr %_0, i32 2, !dbg !15967
  store i16 %e, ptr %3, align 2, !dbg !15967
  store i16 1, ptr %_0, align 4, !dbg !15967
  br label %bb4, !dbg !15968

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !15969
  %v = load i32, ptr %4, align 4, !dbg !15969
  store i32 %v, ptr %v.dbg.spill, align 4, !dbg !15969
    #dbg_declare(ptr %v.dbg.spill, !15958, !DIExpression(), !15970)
  %5 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !15971
  store i32 %v, ptr %5, align 4, !dbg !15971
  store i16 0, ptr %_0, align 4, !dbg !15971
  br label %bb4, !dbg !15972

bb4:                                              ; preds = %bb2, %bb3
  ret void, !dbg !15973

bb1:                                              ; No predecessors!
  unreachable, !dbg !15962
}

; <alloc::vec::Vec<u8> as core::convert::From<&str>>::from
; Function Attrs: nounwind
define dso_local void @"_ZN80_$LT$alloc..vec..Vec$LT$u8$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hcd9838d458752594E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !15974 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !15979, !DIExpression(), !15980)
  store ptr %s.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %s.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !15981)
  %2 = insertvalue { ptr, i32 } poison, ptr %s.0, 0, !dbg !15983
  %3 = insertvalue { ptr, i32 } %2, i32 %s.1, 1, !dbg !15983
  %_2.0 = extractvalue { ptr, i32 } %3, 0, !dbg !15984
  %_2.1 = extractvalue { ptr, i32 } %3, 1, !dbg !15984
; call <alloc::vec::Vec<T> as core::convert::From<&[T]>>::from
  call void @"_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h808cf26663ea8475E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %_2.0, i32 %_2.1) #17, !dbg !15985
  ret void, !dbg !15986
}

; <&[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: nounwind
define dso_local void @"_ZN81_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hcc5f8a57276528c6E"(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !15987 {
start:
  %val.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.i.i = alloca [8 x i8], align 4
  %i.dbg.spill.i = alloca [4 x i8], align 4
  %capacity.dbg.spill.i = alloca [4 x i8], align 4
  %bytes.dbg.spill.i = alloca [8 x i8], align 4
  %_14.i = alloca [12 x i8], align 4
  %_12.i = alloca [12 x i8], align 4
  %_11.i = alloca [16 x i8], align 4
  %_8.i = alloca [8 x i8], align 4
  %buffer.i = alloca [12 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !15990, !DIExpression(), !15991)
  store ptr %self.0, ptr %bytes.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %bytes.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %bytes.dbg.spill.i, !15185, !DIExpression(), !15992)
    #dbg_declare(ptr %buffer.i, !15192, !DIExpression(), !15994)
; call core::num::<impl usize>::checked_add
  %2 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %self.1, i32 1) #17, !dbg !15995
  %_3.0.i = extractvalue { i32, i32 } %2, 0, !dbg !15995
  %_3.1.i = extractvalue { i32, i32 } %2, 1, !dbg !15995
  store i32 %_3.0.i, ptr %self.i.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.i.i, i32 4
  store i32 %_3.1.i, ptr %3, align 4
    #dbg_declare(ptr %self.i.i, !10232, !DIExpression(), !15996)
  %_2.i.i = load i32, ptr %self.i.i, align 4, !dbg !15998
  %4 = getelementptr inbounds i8, ptr %self.i.i, i32 4, !dbg !15998
  %5 = load i32, ptr %4, align 4, !dbg !15998
  %6 = trunc nuw i32 %_2.i.i to i1, !dbg !15999
  br i1 %6, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i", label %bb2.i.i, !dbg !15999

bb2.i.i:                                          ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17hb44eba05d48b3214E(ptr align 4 @alloc_001c7be2c8484fbfab2e821c040f7415) #18, !dbg !16000
  unreachable, !dbg !16000

"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i": ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self.i.i, i32 4, !dbg !16001
  %val.i.i = load i32, ptr %7, align 4, !dbg !16001
  store i32 %val.i.i, ptr %val.dbg.spill.i.i, align 4, !dbg !16001
    #dbg_declare(ptr %val.dbg.spill.i.i, !10238, !DIExpression(), !16002)
  store i32 %val.i.i, ptr %capacity.dbg.spill.i, align 4, !dbg !16003
    #dbg_declare(ptr %capacity.dbg.spill.i, !15190, !DIExpression(), !16004)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %buffer.i, i32 %val.i.i) #17, !dbg !16005
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17hc90c6dbd8aa43470E"(ptr align 4 %buffer.i, ptr align 1 %self.0, i32 %self.1) #17, !dbg !16006
; call core::slice::memchr::memchr
  %8 = call { i32, i32 } @_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E(i8 0, ptr align 1 %self.0, i32 %self.1) #17, !dbg !16007
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16007
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !16007
  store i32 %9, ptr %_8.i, align 4, !dbg !16007
  %11 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !16007
  store i32 %10, ptr %11, align 4, !dbg !16007
  %_9.i = load i32, ptr %_8.i, align 4, !dbg !16007
  %12 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !16007
  %13 = load i32, ptr %12, align 4, !dbg !16007
  %14 = trunc nuw i32 %_9.i to i1, !dbg !16008
  br i1 %14, label %bb8.i, label %bb7.i, !dbg !16008

bb8.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i"
  %15 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !16009
  %i.i = load i32, ptr %15, align 4, !dbg !16009
  store i32 %i.i, ptr %i.dbg.spill.i, align 4, !dbg !16009
    #dbg_declare(ptr %i.dbg.spill.i, !15194, !DIExpression(), !16010)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_12.i, ptr align 4 %buffer.i, i32 12, i1 false), !dbg !16011
  %16 = getelementptr inbounds i8, ptr %_11.i, i32 12, !dbg !16012
  store i32 %i.i, ptr %16, align 4, !dbg !16012
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11.i, ptr align 4 %_12.i, i32 12, i1 false), !dbg !16012
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_11.i, i32 16, i1 false), !dbg !16013
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit, !dbg !16014

bb7.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i"
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_14.i, ptr align 4 %buffer.i, i32 12, i1 false), !dbg !16015
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %17 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E(ptr align 4 %_14.i) #17, !dbg !16016
  %_13.0.i = extractvalue { ptr, i32 } %17, 0, !dbg !16016
  %_13.1.i = extractvalue { ptr, i32 } %17, 1, !dbg !16016
  %18 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16017
  store ptr %_13.0.i, ptr %18, align 4, !dbg !16017
  %19 = getelementptr inbounds i8, ptr %18, i32 4, !dbg !16017
  store i32 %_13.1.i, ptr %19, align 4, !dbg !16017
  store i32 -2147483648, ptr %_0, align 4, !dbg !16017
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit, !dbg !16018

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit: ; preds = %bb8.i, %bb7.i
  ret void, !dbg !16019
}

; <alloc::string::Drain as core::convert::AsRef<[u8]>>::as_ref
; Function Attrs: nounwind
define dso_local { ptr, i32 } @"_ZN81_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$GT$6as_ref17h2425205b53f70ab2E"(ptr align 4 %self) unnamed_addr #1 !dbg !16020 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16025, !DIExpression(), !16026)
; call alloc::string::Drain::as_str
  %0 = call { ptr, i32 } @_ZN5alloc6string5Drain6as_str17he2aaed28f3bd3c11E(ptr align 4 %self) #17, !dbg !16027
  %_2.0 = extractvalue { ptr, i32 } %0, 0, !dbg !16027
  %_2.1 = extractvalue { ptr, i32 } %0, 1, !dbg !16027
  store ptr %_2.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_2.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !4934, !DIExpression(), !16028)
  %_0.0 = extractvalue { ptr, i32 } %0, 0, !dbg !16030
  %_0.1 = extractvalue { ptr, i32 } %0, 1, !dbg !16030
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16031
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !16031
  ret { ptr, i32 } %3, !dbg !16031
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h21b98dc1e8dac725E"(ptr align 4 %self, ptr align 4 %0) unnamed_addr #2 !dbg !16032 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16037, !DIExpression(), !16040)
    #dbg_declare(ptr %index.dbg.spill, !16038, !DIExpression(), !16041)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %self) #17, !dbg !16042
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !16042
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !16042
  store ptr %_3.0, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_3.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !16043, !DIExpression(), !16050)
    #dbg_declare(ptr poison, !16048, !DIExpression(), !16052)
; call <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { ptr, i32 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb10121e524b390f3E"(ptr align 1 %_3.0, i32 %_3.1, ptr align 4 %0) #17, !dbg !16053
  %_0.0.i = extractvalue { ptr, i32 } %3, 0, !dbg !16053
  %_0.1.i = extractvalue { ptr, i32 } %3, 1, !dbg !16053
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !16054
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !16054
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16055
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !16055
  ret { ptr, i32 } %5, !dbg !16055
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h261936e3caf15c2cE"(ptr align 4 %self, i32 %index, ptr align 4 %0) unnamed_addr #2 !dbg !16056 {
start:
  %ptr.dbg.spill2.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill1.i.i = alloca [4 x i8], align 4
  %len.dbg.spill.i.i = alloca [4 x i8], align 4
  %offset.dbg.spill.i.i = alloca [4 x i8], align 4
  %ptr.dbg.spill.i.i = alloca [8 x i8], align 4
  %new_len.dbg.spill.i.i.i = alloca [4 x i8], align 4
  %slice.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i.i = alloca [8 x i8], align 4
  %_3.i.i.i = alloca [8 x i8], align 4
  %slice.dbg.spill.i.i = alloca [8 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16060, !DIExpression(), !16063)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !16061, !DIExpression(), !16064)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %self) #17, !dbg !16065
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !16065
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !16065
  store ptr %_3.0, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_3.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !11707, !DIExpression(), !16066)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !11710, !DIExpression(), !16068)
  store i32 %index, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !11714, !DIExpression(), !16069)
  store ptr %_3.0, ptr %slice.dbg.spill.i.i, align 4
  %3 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i, i32 4
  store i32 %_3.1, ptr %3, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i, !11719, !DIExpression(), !16071)
  store i32 0, ptr %self.dbg.spill.i.i.i, align 4
  %4 = getelementptr inbounds i8, ptr %self.dbg.spill.i.i.i, i32 4
  store i32 %index, ptr %4, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i.i, !11723, !DIExpression(), !16072)
  store ptr %_3.0, ptr %slice.dbg.spill.i.i.i, align 4
  %5 = getelementptr inbounds i8, ptr %slice.dbg.spill.i.i.i, i32 4
  store i32 %_3.1, ptr %5, align 4
    #dbg_declare(ptr %slice.dbg.spill.i.i.i, !11728, !DIExpression(), !16074)
; call core::num::<impl usize>::checked_sub
  %6 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h0a5e6ce25b7151bdE"(i32 %index, i32 0) #17, !dbg !16075
  %7 = extractvalue { i32, i32 } %6, 0, !dbg !16075
  %8 = extractvalue { i32, i32 } %6, 1, !dbg !16075
  store i32 %7, ptr %_3.i.i.i, align 4, !dbg !16075
  %9 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !16075
  store i32 %8, ptr %9, align 4, !dbg !16075
  %_6.i.i.i = load i32, ptr %_3.i.i.i, align 4, !dbg !16075
  %10 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !16075
  %11 = load i32, ptr %10, align 4, !dbg !16075
  %12 = trunc nuw i32 %_6.i.i.i to i1, !dbg !16076
  br i1 %12, label %bb2.i.i.i, label %bb5.i.i.i, !dbg !16076

bb2.i.i.i:                                        ; preds = %start
  %13 = getelementptr inbounds i8, ptr %_3.i.i.i, i32 4, !dbg !16077
  %new_len.i.i.i = load i32, ptr %13, align 4, !dbg !16077
  store i32 %new_len.i.i.i, ptr %new_len.dbg.spill.i.i.i, align 4, !dbg !16077
    #dbg_declare(ptr %new_len.dbg.spill.i.i.i, !11729, !DIExpression(), !16077)
  %_8.i.i.i = icmp ule i32 %index, %_3.1, !dbg !16078
  br i1 %_8.i.i.i, label %"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3f2fb1ea6dffffe7E.exit", label %bb5.i.i.i, !dbg !16078

bb5.i.i.i:                                        ; preds = %bb2.i.i.i, %start
; call core::slice::index::slice_index_fail
  call void @_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E(i32 0, i32 %index, i32 %_3.1, ptr align 4 %0) #18, !dbg !16079
  unreachable, !dbg !16079

"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3f2fb1ea6dffffe7E.exit": ; preds = %bb2.i.i.i
  store ptr %_3.0, ptr %ptr.dbg.spill.i.i, align 4
  %14 = getelementptr inbounds i8, ptr %ptr.dbg.spill.i.i, i32 4
  store i32 %_3.1, ptr %14, align 4
    #dbg_declare(ptr %ptr.dbg.spill.i.i, !1271, !DIExpression(), !16080)
  store i32 0, ptr %offset.dbg.spill.i.i, align 4
    #dbg_declare(ptr %offset.dbg.spill.i.i, !1276, !DIExpression(), !16082)
  store i32 %new_len.i.i.i, ptr %len.dbg.spill.i.i, align 4
    #dbg_declare(ptr %len.dbg.spill.i.i, !1277, !DIExpression(), !16083)
  store ptr %_3.0, ptr %ptr.dbg.spill1.i.i, align 4, !dbg !16084
    #dbg_declare(ptr %ptr.dbg.spill1.i.i, !1278, !DIExpression(), !16085)
  store ptr %_3.0, ptr %ptr.dbg.spill2.i.i, align 4, !dbg !16086
    #dbg_declare(ptr %ptr.dbg.spill2.i.i, !1280, !DIExpression(), !16087)
  %15 = insertvalue { ptr, i32 } %1, i32 %new_len.i.i.i, 1, !dbg !16088
  %_11.0.i.i.i = extractvalue { ptr, i32 } %15, 0, !dbg !16089
  %_0.0.i.i = extractvalue { ptr, i32 } %15, 0, !dbg !16090
  %_0.0.i = extractvalue { ptr, i32 } %15, 0, !dbg !16091
  %16 = insertvalue { ptr, i32 } %15, i32 %new_len.i.i.i, 1, !dbg !16092
  %_0.0 = extractvalue { ptr, i32 } %16, 0, !dbg !16093
  %_0.1 = extractvalue { ptr, i32 } %16, 1, !dbg !16093
  %17 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16094
  %18 = insertvalue { ptr, i32 } %17, i32 %_0.1, 1, !dbg !16094
  ret { ptr, i32 } %18, !dbg !16094
}

; <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h50aa872ae619f839E"(ptr align 4 %self, i32 %index, ptr align 4 %0) unnamed_addr #2 !dbg !16095 {
start:
  %index.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16099, !DIExpression(), !16102)
  store i32 %index, ptr %index.dbg.spill, align 4
    #dbg_declare(ptr %index.dbg.spill, !16100, !DIExpression(), !16103)
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i32 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E"(ptr align 4 %self) #17, !dbg !16104
  %_3.0 = extractvalue { ptr, i32 } %1, 0, !dbg !16104
  %_3.1 = extractvalue { ptr, i32 } %1, 1, !dbg !16104
  store ptr %_3.0, ptr %self.dbg.spill.i, align 4
  %2 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_3.1, ptr %2, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !6723, !DIExpression(), !16105)
  store i32 %index, ptr %index.dbg.spill.i, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !6729, !DIExpression(), !16107)
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32 %index, ptr align 1 %_3.0, i32 %_3.1, ptr align 4 %0) #17, !dbg !16108
  %_0.0.i = extractvalue { ptr, i32 } %3, 0, !dbg !16108
  %_0.1.i = extractvalue { ptr, i32 } %3, 1, !dbg !16108
  %_0.0 = extractvalue { ptr, i32 } %3, 0, !dbg !16109
  %_0.1 = extractvalue { ptr, i32 } %3, 1, !dbg !16109
  %4 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16110
  %5 = insertvalue { ptr, i32 } %4, i32 %_0.1, 1, !dbg !16110
  ret { ptr, i32 } %5, !dbg !16110
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20cd7376025b9888E"(ptr align 4 %self) unnamed_addr #2 !dbg !16111 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16116, !DIExpression(), !16117)
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17h8b0e6294ab36d6b3E(ptr align 4 %self) #17, !dbg !16118
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !16118
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !16118
; call core::option::Option<T>::map
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hef2f88899c9c3935E"(i32 %_2.0, i32 %_2.1) #17, !dbg !16119
  ret i32 %_0, !dbg !16120
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define internal void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h2113bc94025b18faE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !16121 {
start:
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16125, !DIExpression(), !16128)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !15629, !DIExpression(), !16129)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16131
  %_5.i = load ptr, ptr %0, align 4, !dbg !16131
  store ptr %_5.i, ptr %end.dbg.spill.i, align 4, !dbg !16132
    #dbg_declare(ptr %end.dbg.spill.i, !15639, !DIExpression(), !16133)
  %_6.i = load ptr, ptr %self, align 4, !dbg !16134
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i, ptr %_6.i) #17, !dbg !16135
  store i32 %1, ptr %_0.i, align 4, !dbg !16135
  %2 = load i32, ptr %_0.i, align 4, !dbg !16136
  store i32 %2, ptr %len.dbg.spill, align 4, !dbg !16137
    #dbg_declare(ptr %len.dbg.spill, !16126, !DIExpression(), !16138)
; call core::num::<impl usize>::div_ceil
  %_4 = call i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h11bff4b73d459aa3E"(i32 %2, i32 4, ptr align 4 @alloc_0db4ed03cfba60b1956623ef21578b4d) #17, !dbg !16139
  store i32 %_4, ptr %_0, align 4, !dbg !16140
  %3 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16140
  store i32 1, ptr %3, align 4, !dbg !16140
  %4 = getelementptr inbounds i8, ptr %3, i32 4, !dbg !16140
  store i32 %2, ptr %4, align 4, !dbg !16140
  ret void, !dbg !16141
}

; <alloc::rc::Rc<[T]> as alloc::rc::RcFromSlice<T>>::from_slice
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN84_$LT$alloc..rc..Rc$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..rc..RcFromSlice$LT$T$GT$$GT$10from_slice17ha68fec0b87d8f077E"(ptr align 1 %v.0, i32 %v.1) unnamed_addr #2 !dbg !16142 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !16145, !DIExpression(), !16146)
; call alloc::rc::Rc<[T]>::copy_from_slice
  %1 = call { ptr, i32 } @"_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$15copy_from_slice17hc1e1af185925dfd7E"(ptr align 1 %v.0, i32 %v.1) #17, !dbg !16147
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !16147
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !16147
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16148
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !16148
  ret { ptr, i32 } %3, !dbg !16148
}

; <alloc::vec::Vec<T,A> as core::ops::index::IndexMut<I>>::index_mut
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17he933b014ebbd65c1E"(ptr align 4 %self, i32 %index.0, i32 %index.1, ptr align 4 %0) unnamed_addr #2 !dbg !16149 {
start:
  %index.dbg.spill.i = alloca [8 x i8], align 4
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %index.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16154, !DIExpression(), !16157)
  store i32 %index.0, ptr %index.dbg.spill, align 4
  %1 = getelementptr inbounds i8, ptr %index.dbg.spill, i32 4
  store i32 %index.1, ptr %1, align 4
    #dbg_declare(ptr %index.dbg.spill, !16155, !DIExpression(), !16158)
; call <alloc::vec::Vec<T,A> as core::ops::deref::DerefMut>::deref_mut
  %2 = call { ptr, i32 } @"_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5816c49960636028E"(ptr align 4 %self) #17, !dbg !16159
  %_3.0 = extractvalue { ptr, i32 } %2, 0, !dbg !16159
  %_3.1 = extractvalue { ptr, i32 } %2, 1, !dbg !16159
  store ptr %_3.0, ptr %self.dbg.spill.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %_3.1, ptr %3, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !16160, !DIExpression(), !16167)
  store i32 %index.0, ptr %index.dbg.spill.i, align 4
  %4 = getelementptr inbounds i8, ptr %index.dbg.spill.i, i32 4
  store i32 %index.1, ptr %4, align 4
    #dbg_declare(ptr %index.dbg.spill.i, !16166, !DIExpression(), !16169)
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %5 = call { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32 %index.0, i32 %index.1, ptr align 1 %_3.0, i32 %_3.1, ptr align 4 %0) #17, !dbg !16170
  %_0.0.i = extractvalue { ptr, i32 } %5, 0, !dbg !16170
  %_0.1.i = extractvalue { ptr, i32 } %5, 1, !dbg !16170
  %_0.0 = extractvalue { ptr, i32 } %5, 0, !dbg !16171
  %_0.1 = extractvalue { ptr, i32 } %5, 1, !dbg !16171
  %6 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16172
  %7 = insertvalue { ptr, i32 } %6, i32 %_0.1, 1, !dbg !16172
  ret { ptr, i32 } %7, !dbg !16172
}

; <alloc::string::String::retain::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define dso_local void @"_ZN85_$LT$alloc..string..String..retain..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2cd1c2945fd15d0cE"(ptr align 4 %self) unnamed_addr #1 !dbg !16173 {
start:
  %new_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16185, !DIExpression(), !16188)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16189
  %_3 = load i32, ptr %0, align 4, !dbg !16189
  %1 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !16190
  %_4 = load i32, ptr %1, align 4, !dbg !16190
  %_5.0 = sub i32 %_3, %_4, !dbg !16189
  %_5.1 = icmp ult i32 %_3, %_4, !dbg !16189
  br i1 %_5.1, label %panic, label %bb1, !dbg !16189

bb1:                                              ; preds = %start
  store i32 %_5.0, ptr %new_len.dbg.spill, align 4, !dbg !16189
    #dbg_declare(ptr %new_len.dbg.spill, !16186, !DIExpression(), !16191)
  %_12 = load ptr, ptr %self, align 4, !dbg !16192
; call alloc::string::String::len
  %_7 = call i32 @_ZN5alloc6string6String3len17h8f2b854020f019dbE(ptr align 4 %_12) #17, !dbg !16193
  %_6 = icmp ule i32 %_5.0, %_7, !dbg !16194
  br i1 %_6, label %bb4, label %bb3, !dbg !16194

panic:                                            ; preds = %start
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_3076ca8b1f91ce6b129a8bc312f75342) #18, !dbg !16189
  unreachable, !dbg !16189

bb3:                                              ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17hd506548a43a79924E(ptr align 1 @alloc_f75f43df8b3ea1b7e01ee0bd50b84955, i32 41, ptr align 4 @alloc_210d19cee645d1bce9bd03356f47254c) #18, !dbg !16195
  unreachable, !dbg !16195

bb4:                                              ; preds = %bb1
  %_13 = load ptr, ptr %self, align 4, !dbg !16196
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E"(ptr align 4 %_13, i32 %_5.0) #17, !dbg !16197
  ret void, !dbg !16198
}

; <T as alloc::slice::<impl [T]>::to_vec_in::ConvertVec>::to_vec
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN87_$LT$T$u20$as$u20$alloc..slice..$LT$impl$u20$$u5b$T$u5d$$GT$..to_vec_in..ConvertVec$GT$6to_vec17h404e4d3e53fbdaa2E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #2 !dbg !16199 {
start:
  %self.dbg.spill.i = alloca [8 x i8], align 4
  %alloc.dbg.spill = alloca [0 x i8], align 1
  %s.dbg.spill = alloca [8 x i8], align 4
  %v = alloca [12 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !16203, !DIExpression(), !16207)
    #dbg_declare(ptr %alloc.dbg.spill, !16204, !DIExpression(), !16208)
    #dbg_declare(ptr %v, !16205, !DIExpression(), !16209)
; call alloc::vec::Vec<T,A>::with_capacity_in
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h29df3afc943f947fE"(ptr sret([12 x i8]) align 4 %v, i32 %s.1) #17, !dbg !16210
  store ptr %s.0, ptr %self.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %self.dbg.spill.i, i32 4
  store i32 %s.1, ptr %1, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !447, !DIExpression(), !16211)
; call alloc::vec::Vec<T,A>::as_mut_ptr
  %_7 = call ptr @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE"(ptr align 4 %v) #17, !dbg !16213
; call core::ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping
  call void @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hf5c34a4f3a3f1b2aE"(ptr %s.0, ptr %_7, i32 %s.1, ptr align 4 @alloc_d4032619af3a2a23016c7a7ef027e7c2) #17, !dbg !16214
; call alloc::vec::Vec<T,A>::set_len
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E"(ptr align 4 %v, i32 %s.1) #17, !dbg !16215
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %v, i32 12, i1 false), !dbg !16216
  ret void, !dbg !16217
}

; <alloc::vec::Vec<T> as core::convert::From<&[T]>>::from
; Function Attrs: nounwind
define dso_local void @"_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h808cf26663ea8475E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !16218 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !16221, !DIExpression(), !16222)
; call alloc::slice::<impl [T]>::to_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hb62a9abc9ced4c0cE"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) #17, !dbg !16223
  ret void, !dbg !16224
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc01ba1f3a9afe6bbE"(ptr align 4 %self) unnamed_addr #2 !dbg !16225 {
start:
  %end.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %_0.i4 = alloca [4 x i8], align 4
  %end.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %_0.i = alloca [4 x i8], align 4
  %len.dbg.spill = alloca [4 x i8], align 4
  %index.dbg.spill = alloca [4 x i8], align 4
  %ch.dbg.spill = alloca [4 x i8], align 4
  %pre_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_4 = alloca [4 x i8], align 4
  %_0 = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16248, !DIExpression(), !16257)
  store ptr %self, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !15629, !DIExpression(), !16258)
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16260
  %_5.i5 = load ptr, ptr %0, align 4, !dbg !16260
  store ptr %_5.i5, ptr %end.dbg.spill.i2, align 4, !dbg !16261
    #dbg_declare(ptr %end.dbg.spill.i2, !15639, !DIExpression(), !16262)
  %_6.i6 = load ptr, ptr %self, align 4, !dbg !16263
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i5, ptr %_6.i6) #17, !dbg !16264
  store i32 %1, ptr %_0.i4, align 4, !dbg !16264
  %2 = load i32, ptr %_0.i4, align 4, !dbg !16265
  store i32 %2, ptr %pre_len.dbg.spill, align 4, !dbg !16266
    #dbg_declare(ptr %pre_len.dbg.spill, !16249, !DIExpression(), !16267)
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %3 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20cd7376025b9888E"(ptr align 4 %self) #17, !dbg !16268
  store i32 %3, ptr %_4, align 4, !dbg !16268
  %4 = load i32, ptr %_4, align 4, !dbg !16269
  %5 = icmp eq i32 %4, 1114112, !dbg !16269
  %_6 = select i1 %5, i32 0, i32 1, !dbg !16269
  %6 = trunc nuw i32 %_6 to i1, !dbg !16270
  br i1 %6, label %bb4, label %bb5, !dbg !16270

bb4:                                              ; preds = %start
  %ch = load i32, ptr %_4, align 4, !dbg !16271
  store i32 %ch, ptr %ch.dbg.spill, align 4, !dbg !16271
    #dbg_declare(ptr %ch.dbg.spill, !16251, !DIExpression(), !16272)
  %7 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !16273
  %index = load i32, ptr %7, align 4, !dbg !16273
  store i32 %index, ptr %index.dbg.spill, align 4, !dbg !16273
    #dbg_declare(ptr %index.dbg.spill, !16253, !DIExpression(), !16274)
  store ptr %self, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !15629, !DIExpression(), !16275)
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16277
  %_5.i = load ptr, ptr %8, align 4, !dbg !16277
  store ptr %_5.i, ptr %end.dbg.spill.i, align 4, !dbg !16278
    #dbg_declare(ptr %end.dbg.spill.i, !15639, !DIExpression(), !16279)
  %_6.i = load ptr, ptr %self, align 4, !dbg !16280
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %9 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr %_5.i, ptr %_6.i) #17, !dbg !16281
  store i32 %9, ptr %_0.i, align 4, !dbg !16281
  %10 = load i32, ptr %_0.i, align 4, !dbg !16282
  store i32 %10, ptr %len.dbg.spill, align 4, !dbg !16283
    #dbg_declare(ptr %len.dbg.spill, !16255, !DIExpression(), !16284)
  %_12.0 = sub i32 %2, %10, !dbg !16285
  %_12.1 = icmp ult i32 %2, %10, !dbg !16285
  br i1 %_12.1, label %panic, label %bb7, !dbg !16285

bb5:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16286
  store i32 1114112, ptr %11, align 4, !dbg !16286
  br label %bb9, !dbg !16286

bb9:                                              ; preds = %bb8, %bb5
  %12 = load i32, ptr %_0, align 4, !dbg !16287
  %13 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16287
  %14 = load i32, ptr %13, align 4, !dbg !16287
  %15 = insertvalue { i32, i32 } poison, i32 %12, 0, !dbg !16287
  %16 = insertvalue { i32, i32 } %15, i32 %14, 1, !dbg !16287
  ret { i32, i32 } %16, !dbg !16287

bb7:                                              ; preds = %bb4
  %17 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !16288
  %18 = load i32, ptr %17, align 4, !dbg !16288
  %_13.0 = add i32 %18, %_12.0, !dbg !16288
  %_13.1 = icmp ult i32 %_13.0, %18, !dbg !16288
  br i1 %_13.1, label %panic1, label %bb8, !dbg !16288

panic:                                            ; preds = %bb4
; call core::panicking::panic_const::panic_const_sub_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE(ptr align 4 @alloc_134ead117cdd9054461fa95e16eba5da) #18, !dbg !16285
  unreachable, !dbg !16285

bb8:                                              ; preds = %bb7
  %19 = getelementptr inbounds i8, ptr %self, i32 8, !dbg !16288
  store i32 %_13.0, ptr %19, align 4, !dbg !16288
  store i32 %index, ptr %_0, align 4, !dbg !16289
  %20 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16289
  store i32 %ch, ptr %20, align 4, !dbg !16289
  br label %bb9, !dbg !16290

panic1:                                           ; preds = %bb7
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_383483fe6d8fc70f0bd38bbd0780906e) #18, !dbg !16288
  unreachable, !dbg !16288

bb3:                                              ; No predecessors!
  unreachable, !dbg !16269
}

; <alloc::collections::btree::map::UnorderedKeyError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define dso_local zeroext i1 @"_ZN88_$LT$alloc..collections..btree..map..UnorderedKeyError$u20$as$u20$core..fmt..Display$GT$3fmt17ha6b7e305872fbefcE"(ptr align 1 %self, ptr align 4 %f) unnamed_addr #1 !dbg !16291 {
start:
  %f.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_3 = alloca [24 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16300, !DIExpression(), !16302)
  store ptr %f, ptr %f.dbg.spill, align 4
    #dbg_declare(ptr %f.dbg.spill, !16301, !DIExpression(), !16303)
; call core::fmt::rt::<impl core::fmt::Arguments>::new_const
  call void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4 %_3, ptr align 4 @alloc_7e300f0237de82efc24d058d41767854) #17, !dbg !16304
; call core::fmt::Formatter::write_fmt
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hd79f790f9e7cd2edE(ptr align 4 %f, ptr align 4 %_3) #17, !dbg !16304
  ret i1 %_0, !dbg !16305
}

; <&mut [u8] as alloc::ffi::c_str::CString::new::SpecNewImpl>::spec_new_impl
; Function Attrs: nounwind
define dso_local void @"_ZN89_$LT$$RF$mut$u20$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h508c5a947dabec6fE"(ptr sret([16 x i8]) align 4 %_0, ptr align 1 %self.0, i32 %self.1) unnamed_addr #1 !dbg !16306 {
start:
  %val.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.i.i = alloca [8 x i8], align 4
  %i.dbg.spill.i = alloca [4 x i8], align 4
  %capacity.dbg.spill.i = alloca [4 x i8], align 4
  %bytes.dbg.spill.i = alloca [8 x i8], align 4
  %_14.i = alloca [12 x i8], align 4
  %_12.i = alloca [12 x i8], align 4
  %_11.i = alloca [16 x i8], align 4
  %_8.i = alloca [8 x i8], align 4
  %buffer.i = alloca [12 x i8], align 4
  %self.dbg.spill = alloca [8 x i8], align 4
  store ptr %self.0, ptr %self.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %self.dbg.spill, i32 4
  store i32 %self.1, ptr %0, align 4
    #dbg_declare(ptr %self.dbg.spill, !16311, !DIExpression(), !16312)
  store ptr %self.0, ptr %bytes.dbg.spill.i, align 4
  %1 = getelementptr inbounds i8, ptr %bytes.dbg.spill.i, i32 4
  store i32 %self.1, ptr %1, align 4
    #dbg_declare(ptr %bytes.dbg.spill.i, !15185, !DIExpression(), !16313)
    #dbg_declare(ptr %buffer.i, !15192, !DIExpression(), !16315)
; call core::num::<impl usize>::checked_add
  %2 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %self.1, i32 1) #17, !dbg !16316
  %_3.0.i = extractvalue { i32, i32 } %2, 0, !dbg !16316
  %_3.1.i = extractvalue { i32, i32 } %2, 1, !dbg !16316
  store i32 %_3.0.i, ptr %self.i.i, align 4
  %3 = getelementptr inbounds i8, ptr %self.i.i, i32 4
  store i32 %_3.1.i, ptr %3, align 4
    #dbg_declare(ptr %self.i.i, !10232, !DIExpression(), !16317)
  %_2.i.i = load i32, ptr %self.i.i, align 4, !dbg !16319
  %4 = getelementptr inbounds i8, ptr %self.i.i, i32 4, !dbg !16319
  %5 = load i32, ptr %4, align 4, !dbg !16319
  %6 = trunc nuw i32 %_2.i.i to i1, !dbg !16320
  br i1 %6, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i", label %bb2.i.i, !dbg !16320

bb2.i.i:                                          ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17hb44eba05d48b3214E(ptr align 4 @alloc_001c7be2c8484fbfab2e821c040f7415) #18, !dbg !16321
  unreachable, !dbg !16321

"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i": ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self.i.i, i32 4, !dbg !16322
  %val.i.i = load i32, ptr %7, align 4, !dbg !16322
  store i32 %val.i.i, ptr %val.dbg.spill.i.i, align 4, !dbg !16322
    #dbg_declare(ptr %val.dbg.spill.i.i, !10238, !DIExpression(), !16323)
  store i32 %val.i.i, ptr %capacity.dbg.spill.i, align 4, !dbg !16324
    #dbg_declare(ptr %capacity.dbg.spill.i, !15190, !DIExpression(), !16325)
; call alloc::vec::Vec<T>::with_capacity
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E"(ptr sret([12 x i8]) align 4 %buffer.i, i32 %val.i.i) #17, !dbg !16326
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17hc90c6dbd8aa43470E"(ptr align 4 %buffer.i, ptr align 1 %self.0, i32 %self.1) #17, !dbg !16327
; call core::slice::memchr::memchr
  %8 = call { i32, i32 } @_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E(i8 0, ptr align 1 %self.0, i32 %self.1) #17, !dbg !16328
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16328
  %10 = extractvalue { i32, i32 } %8, 1, !dbg !16328
  store i32 %9, ptr %_8.i, align 4, !dbg !16328
  %11 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !16328
  store i32 %10, ptr %11, align 4, !dbg !16328
  %_9.i = load i32, ptr %_8.i, align 4, !dbg !16328
  %12 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !16328
  %13 = load i32, ptr %12, align 4, !dbg !16328
  %14 = trunc nuw i32 %_9.i to i1, !dbg !16329
  br i1 %14, label %bb8.i, label %bb7.i, !dbg !16329

bb8.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i"
  %15 = getelementptr inbounds i8, ptr %_8.i, i32 4, !dbg !16330
  %i.i = load i32, ptr %15, align 4, !dbg !16330
  store i32 %i.i, ptr %i.dbg.spill.i, align 4, !dbg !16330
    #dbg_declare(ptr %i.dbg.spill.i, !15194, !DIExpression(), !16331)
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_12.i, ptr align 4 %buffer.i, i32 12, i1 false), !dbg !16332
  %16 = getelementptr inbounds i8, ptr %_11.i, i32 12, !dbg !16333
  store i32 %i.i, ptr %16, align 4, !dbg !16333
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_11.i, ptr align 4 %_12.i, i32 12, i1 false), !dbg !16333
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_11.i, i32 16, i1 false), !dbg !16334
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit, !dbg !16335

bb7.i:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E.exit.i"
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_14.i, ptr align 4 %buffer.i, i32 12, i1 false), !dbg !16336
; call alloc::ffi::c_str::CString::_from_vec_unchecked
  %17 = call { ptr, i32 } @_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E(ptr align 4 %_14.i) #17, !dbg !16337
  %_13.0.i = extractvalue { ptr, i32 } %17, 0, !dbg !16337
  %_13.1.i = extractvalue { ptr, i32 } %17, 1, !dbg !16337
  %18 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16338
  store ptr %_13.0.i, ptr %18, align 4, !dbg !16338
  %19 = getelementptr inbounds i8, ptr %18, i32 4, !dbg !16338
  store i32 %_13.1.i, ptr %19, align 4, !dbg !16338
  store i32 -2147483648, ptr %_0, align 4, !dbg !16338
  br label %_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit, !dbg !16339

_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E.exit: ; preds = %bb8.i, %bb7.i
  ret void, !dbg !16340
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h6102ddacc7505c93E"(ptr align 4 %self, ptr align 4 %iter) unnamed_addr #1 !dbg !16341 {
start:
  %lower_bound.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %iterator = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16345, !DIExpression(), !16351)
    #dbg_declare(ptr %iter, !16346, !DIExpression(), !16352)
    #dbg_declare(ptr %iterator, !16347, !DIExpression(), !16353)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86ccca6e99e4416E"(ptr sret([12 x i8]) align 4 %iterator, ptr align 4 %iter) #17, !dbg !16354
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53a6dc5bd5e417f1E"(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %iterator) #17, !dbg !16355
  %lower_bound = load i32, ptr %_5, align 4, !dbg !16356
  store i32 %lower_bound, ptr %lower_bound.dbg.spill, align 4, !dbg !16356
    #dbg_declare(ptr %lower_bound.dbg.spill, !16349, !DIExpression(), !16357)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h4fce6300662c2858E(ptr align 4 %self, i32 %lower_bound) #17, !dbg !16358
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_9, ptr align 4 %iterator, i32 12, i1 false), !dbg !16359
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17ha321f594e12e6296E(ptr align 4 %_9, ptr align 4 %self) #17, !dbg !16360
  ret void, !dbg !16361
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h6e7360d2b05f9b23E"(ptr align 4 %self, ptr align 4 %iter) unnamed_addr #1 !dbg !16362 {
start:
  %lower_bound.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %iterator = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16366, !DIExpression(), !16372)
    #dbg_declare(ptr %iter, !16367, !DIExpression(), !16373)
    #dbg_declare(ptr %iterator, !16368, !DIExpression(), !16374)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hca061dacdeddffc1E"(ptr sret([12 x i8]) align 4 %iterator, ptr align 4 %iter) #17, !dbg !16375
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49cdf9f6e3eb2dc6E"(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %iterator) #17, !dbg !16376
  %lower_bound = load i32, ptr %_5, align 4, !dbg !16377
  store i32 %lower_bound, ptr %lower_bound.dbg.spill, align 4, !dbg !16377
    #dbg_declare(ptr %lower_bound.dbg.spill, !16370, !DIExpression(), !16378)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h4fce6300662c2858E(ptr align 4 %self, i32 %lower_bound) #17, !dbg !16379
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_9, ptr align 4 %iterator, i32 12, i1 false), !dbg !16380
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17hb73fe35e04a8db1eE(ptr align 4 %_9, ptr align 4 %self) #17, !dbg !16381
  ret void, !dbg !16382
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h7d1fa55798036710E"(ptr align 4 %self, ptr align 4 %iter) unnamed_addr #1 !dbg !16383 {
start:
  %lower_bound.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [12 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %iterator = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16387, !DIExpression(), !16393)
    #dbg_declare(ptr %iter, !16388, !DIExpression(), !16394)
    #dbg_declare(ptr %iterator, !16389, !DIExpression(), !16395)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h347b337d6ac2367bE"(ptr sret([12 x i8]) align 4 %iterator, ptr align 4 %iter) #17, !dbg !16396
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h89b22289d0fc54dcE"(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %iterator) #17, !dbg !16397
  %lower_bound = load i32, ptr %_5, align 4, !dbg !16398
  store i32 %lower_bound, ptr %lower_bound.dbg.spill, align 4, !dbg !16398
    #dbg_declare(ptr %lower_bound.dbg.spill, !16391, !DIExpression(), !16399)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h4fce6300662c2858E(ptr align 4 %self, i32 %lower_bound) #17, !dbg !16400
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_9, ptr align 4 %iterator, i32 12, i1 false), !dbg !16401
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h0645607ed23fde21E(ptr align 4 %_9, ptr align 4 %self) #17, !dbg !16402
  ret void, !dbg !16403
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17ha44a538310b364d1E"(ptr align 4 %self, ptr align 4 %iter) unnamed_addr #1 !dbg !16404 {
start:
  %lower_bound.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [16 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %iterator = alloca [16 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16408, !DIExpression(), !16414)
    #dbg_declare(ptr %iter, !16409, !DIExpression(), !16415)
    #dbg_declare(ptr %iterator, !16410, !DIExpression(), !16416)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb4cfc9f7bf489723E"(ptr sret([16 x i8]) align 4 %iterator, ptr align 4 %iter) #17, !dbg !16417
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h0171ada23766b7f2E"(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %iterator) #17, !dbg !16418
  %lower_bound = load i32, ptr %_5, align 4, !dbg !16419
  store i32 %lower_bound, ptr %lower_bound.dbg.spill, align 4, !dbg !16419
    #dbg_declare(ptr %lower_bound.dbg.spill, !16412, !DIExpression(), !16420)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h4fce6300662c2858E(ptr align 4 %self, i32 %lower_bound) #17, !dbg !16421
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_9, ptr align 4 %iterator, i32 16, i1 false), !dbg !16422
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h859a065e4dff12edE(ptr align 4 %_9, ptr align 4 %self) #17, !dbg !16423
  ret void, !dbg !16424
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hf15d89b4ce4d10d4E"(ptr align 4 %self, ptr align 4 %iter) unnamed_addr #1 !dbg !16425 {
start:
  %lower_bound.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_9 = alloca [16 x i8], align 4
  %_5 = alloca [12 x i8], align 4
  %iterator = alloca [16 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16429, !DIExpression(), !16435)
    #dbg_declare(ptr %iter, !16430, !DIExpression(), !16436)
    #dbg_declare(ptr %iterator, !16431, !DIExpression(), !16437)
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17heaa26c5f633d5f6fE"(ptr sret([16 x i8]) align 4 %iterator, ptr align 4 %iter) #17, !dbg !16438
; call <core::iter::adapters::GenericShunt<I,R> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbdc558b76c528839E"(ptr sret([12 x i8]) align 4 %_5, ptr align 4 %iterator) #17, !dbg !16439
  %lower_bound = load i32, ptr %_5, align 4, !dbg !16440
  store i32 %lower_bound, ptr %lower_bound.dbg.spill, align 4, !dbg !16440
    #dbg_declare(ptr %lower_bound.dbg.spill, !16433, !DIExpression(), !16441)
; call alloc::string::String::reserve
  call void @_ZN5alloc6string6String7reserve17h4fce6300662c2858E(ptr align 4 %self, i32 %lower_bound) #17, !dbg !16442
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_9, ptr align 4 %iterator, i32 16, i1 false), !dbg !16443
; call core::iter::traits::iterator::Iterator::for_each
  call void @_ZN4core4iter6traits8iterator8Iterator8for_each17h8e14239f11058b32E(ptr align 4 %_9, ptr align 4 %self) #17, !dbg !16444
  ret void, !dbg !16445
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h001e8a55092d7a17E"(ptr align 4 %_1, i32 %c) unnamed_addr #2 !dbg !16446 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !16452, !DIExpression(DW_OP_deref), !16453)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !16451, !DIExpression(), !16454)
  %_3 = load ptr, ptr %_1, align 4, !dbg !16455
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %_3, i32 %c) #17, !dbg !16456
  ret void, !dbg !16457
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h096d257cee374fd4E"(ptr align 4 %_1, i32 %c) unnamed_addr #2 !dbg !16458 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !16464, !DIExpression(DW_OP_deref), !16465)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !16463, !DIExpression(), !16466)
  %_3 = load ptr, ptr %_1, align 4, !dbg !16467
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %_3, i32 %c) #17, !dbg !16468
  ret void, !dbg !16469
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h9cb8e9ebfb0dc258E"(ptr align 4 %_1, i32 %c) unnamed_addr #2 !dbg !16470 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !16476, !DIExpression(DW_OP_deref), !16477)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !16475, !DIExpression(), !16478)
  %_3 = load ptr, ptr %_1, align 4, !dbg !16479
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %_3, i32 %c) #17, !dbg !16480
  ret void, !dbg !16481
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hd440c1bffe5902e0E"(ptr align 4 %_1, i32 %c) unnamed_addr #2 !dbg !16482 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !16488, !DIExpression(DW_OP_deref), !16489)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !16487, !DIExpression(), !16490)
  %_3 = load ptr, ptr %_1, align 4, !dbg !16491
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %_3, i32 %c) #17, !dbg !16492
  ret void, !dbg !16493
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hf1595fb0301c1399E"(ptr align 4 %_1, i32 %c) unnamed_addr #2 !dbg !16494 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !16500, !DIExpression(DW_OP_deref), !16501)
  store i32 %c, ptr %c.dbg.spill, align 4
    #dbg_declare(ptr %c.dbg.spill, !16499, !DIExpression(), !16502)
  %_3 = load ptr, ptr %_1, align 4, !dbg !16503
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h13549bafb64c32beE(ptr align 4 %_3, i32 %c) #17, !dbg !16504
  ret void, !dbg !16505
}

; <alloc::sync::Arc<[T]> as alloc::sync::ArcFromSlice<T>>::from_slice
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN90_$LT$alloc..sync..Arc$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..sync..ArcFromSlice$LT$T$GT$$GT$10from_slice17h70f66378970928ffE"(ptr align 1 %v.0, i32 %v.1) unnamed_addr #2 !dbg !16506 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !16509, !DIExpression(), !16510)
; call alloc::sync::Arc<[T]>::copy_from_slice
  %1 = call { ptr, i32 } @"_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$15copy_from_slice17h693720af8eb58578E"(ptr align 1 %v.0, i32 %v.1) #17, !dbg !16511
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !16511
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !16511
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16512
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !16512
  ret { ptr, i32 } %3, !dbg !16512
}

; <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound
; Function Attrs: nounwind
define dso_local { i32, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h98a94e3505a05bb9E"(ptr align 4 %self) unnamed_addr #1 !dbg !16513 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16537, !DIExpression(), !16538)
  %0 = insertvalue { i32, ptr } { i32 0, ptr poison }, ptr %self, 1, !dbg !16539
  ret { i32, ptr } %0, !dbg !16539
}

; <core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound
; Function Attrs: nounwind
define dso_local { i32, ptr } @"_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17hdfe857fdf916721cE"(ptr align 4 %self) unnamed_addr #1 !dbg !16540 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16542, !DIExpression(), !16543)
  %_2 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16544
  %0 = insertvalue { i32, ptr } { i32 1, ptr poison }, ptr %_2, 1, !dbg !16545
  ret { i32, ptr } %0, !dbg !16545
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nounwind
define dso_local i8 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hc20c44969b923b81E"(ptr %0, ptr %1, i8 %init) unnamed_addr #2 !dbg !16546 {
start:
  %self.dbg.spill.i4 = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %init.dbg.spill = alloca [1 x i8], align 1
  %len = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %acc = alloca [1 x i8], align 1
  %end = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %f = alloca [0 x i8], align 1
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store ptr %1, ptr %2, align 4
    #dbg_declare(ptr %self, !16551, !DIExpression(), !16570)
  store i8 %init, ptr %init.dbg.spill, align 1
    #dbg_declare(ptr %init.dbg.spill, !16552, !DIExpression(), !16571)
    #dbg_declare(ptr %f, !16553, !DIExpression(), !16572)
    #dbg_declare(ptr %end, !16556, !DIExpression(), !16573)
    #dbg_declare(ptr %acc, !16558, !DIExpression(), !16574)
    #dbg_declare(ptr %i, !16560, !DIExpression(), !16575)
    #dbg_declare(ptr %len, !16562, !DIExpression(), !16576)
  br label %bb3, !dbg !16577

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16578
  %_8 = load ptr, ptr %3, align 4, !dbg !16578
  store ptr %_8, ptr %end, align 4, !dbg !16579
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %4 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hbe83ab615ad97cb4E"(ptr align 4 %self, ptr align 4 %end) #17, !dbg !16580
  %5 = zext i1 %4 to i8, !dbg !16580
  store i8 %5, ptr %_4, align 1, !dbg !16580
  br label %bb4, !dbg !16580

bb4:                                              ; preds = %bb3
  %6 = load i8, ptr %_4, align 1, !dbg !16581
  %7 = trunc nuw i8 %6 to i1, !dbg !16581
  br i1 %7, label %bb5, label %bb6, !dbg !16581

bb6:                                              ; preds = %bb4
  store i8 %init, ptr %acc, align 1, !dbg !16582
  store i32 0, ptr %i, align 4, !dbg !16583
  br label %bb8, !dbg !16584

bb5:                                              ; preds = %bb4
  store i8 %init, ptr %_0, align 1, !dbg !16585
  br label %bb16, !dbg !16586

bb8:                                              ; preds = %bb6
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16587
  %_17 = load ptr, ptr %8, align 4, !dbg !16587
  store ptr %_17, ptr %end.dbg.spill, align 4, !dbg !16588
    #dbg_declare(ptr %end.dbg.spill, !16566, !DIExpression(), !16589)
  %_18 = load ptr, ptr %self, align 4, !dbg !16590
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %9 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hb8f9ff13572ac731E"(ptr %_17, ptr %_18) #17, !dbg !16591
  store i32 %9, ptr %len, align 4, !dbg !16591
  br label %bb10, !dbg !16591

bb10:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit", %bb8
  %_22 = load i8, ptr %acc, align 1, !dbg !16592
  %_26 = load ptr, ptr %self, align 4, !dbg !16593
  %_27 = load i32, ptr %i, align 4, !dbg !16594
  store ptr %_26, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !16595, !DIExpression(), !16602)
  store i32 %_27, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !16601, !DIExpression(), !16604)
  store ptr %_26, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !4181, !DIExpression(), !16605)
  %_3.i2 = getelementptr inbounds nuw i8, ptr %_26, i32 %_27, !dbg !16607
  store ptr %_3.i2, ptr %self.dbg.spill.i4, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !4181, !DIExpression(), !16608)
; call core::iter::adapters::map::map_fold::{{closure}}
  %_19 = call i8 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he747967c238de89dE"(ptr align 1 %f, i8 %_22, ptr align 1 %_3.i2) #17, !dbg !16610
  store i8 %_19, ptr %acc, align 1, !dbg !16611
  %_29 = load i32, ptr %i, align 4, !dbg !16612
  store i32 %_29, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !16613, !DIExpression(), !16617)
  store i32 1, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !16616, !DIExpression(), !16619)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !16620
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit", !dbg !16620

bb2.i:                                            ; preds = %bb10
; call core::num::<impl usize>::unchecked_add::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h12c128c37266108cE"(i32 %_29, i32 1, ptr align 4 @alloc_8407de24b9e131517d3488beb23d4c7f) #17, !dbg !16622
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit", !dbg !16622

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit": ; preds = %bb10, %bb2.i
  %_0.i = add nuw i32 %_29, 1, !dbg !16623
  store i32 %_0.i, ptr %i, align 4, !dbg !16624
  %_31 = load i32, ptr %i, align 4, !dbg !16625
  %_32 = load i32, ptr %len, align 4, !dbg !16626
  %_30 = icmp eq i32 %_31, %_32, !dbg !16625
  br i1 %_30, label %bb15, label %bb10, !dbg !16625

bb15:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit"
  %10 = load i8, ptr %acc, align 1, !dbg !16627
  store i8 %10, ptr %_0, align 1, !dbg !16627
  br label %bb16, !dbg !16586

bb16:                                             ; preds = %bb5, %bb15
  %11 = load i8, ptr %_0, align 1, !dbg !16628
  ret i8 %11, !dbg !16628

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb7:                                              ; No predecessors!
  unreachable

bb9:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hdf3ba228be50706cE"(ptr %0, ptr %1, i32 %init) unnamed_addr #2 !dbg !16629 {
start:
  %self.dbg.spill.i4 = alloca [4 x i8], align 4
  %self.dbg.spill.i3 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %rhs.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %end.dbg.spill = alloca [4 x i8], align 4
  %init.dbg.spill = alloca [4 x i8], align 4
  %len = alloca [4 x i8], align 4
  %i = alloca [4 x i8], align 4
  %acc = alloca [4 x i8], align 4
  %end = alloca [4 x i8], align 4
  %_4 = alloca [1 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %f = alloca [0 x i8], align 1
  %self = alloca [8 x i8], align 4
  store ptr %0, ptr %self, align 4
  %2 = getelementptr inbounds i8, ptr %self, i32 4
  store ptr %1, ptr %2, align 4
    #dbg_declare(ptr %self, !16633, !DIExpression(), !16652)
  store i32 %init, ptr %init.dbg.spill, align 4
    #dbg_declare(ptr %init.dbg.spill, !16634, !DIExpression(), !16653)
    #dbg_declare(ptr %f, !16635, !DIExpression(), !16654)
    #dbg_declare(ptr %end, !16638, !DIExpression(), !16655)
    #dbg_declare(ptr %acc, !16640, !DIExpression(), !16656)
    #dbg_declare(ptr %i, !16642, !DIExpression(), !16657)
    #dbg_declare(ptr %len, !16644, !DIExpression(), !16658)
  br label %bb3, !dbg !16659

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16660
  %_8 = load ptr, ptr %3, align 4, !dbg !16660
  store ptr %_8, ptr %end, align 4, !dbg !16661
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %4 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8bdd06735b30d90bE"(ptr align 4 %self, ptr align 4 %end) #17, !dbg !16662
  %5 = zext i1 %4 to i8, !dbg !16662
  store i8 %5, ptr %_4, align 1, !dbg !16662
  br label %bb4, !dbg !16662

bb4:                                              ; preds = %bb3
  %6 = load i8, ptr %_4, align 1, !dbg !16663
  %7 = trunc nuw i8 %6 to i1, !dbg !16663
  br i1 %7, label %bb5, label %bb6, !dbg !16663

bb6:                                              ; preds = %bb4
  store i32 %init, ptr %acc, align 4, !dbg !16664
  store i32 0, ptr %i, align 4, !dbg !16665
  br label %bb8, !dbg !16666

bb5:                                              ; preds = %bb4
  store i32 %init, ptr %_0, align 4, !dbg !16667
  br label %bb16, !dbg !16668

bb8:                                              ; preds = %bb6
  %8 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16669
  %_17 = load ptr, ptr %8, align 4, !dbg !16669
  store ptr %_17, ptr %end.dbg.spill, align 4, !dbg !16670
    #dbg_declare(ptr %end.dbg.spill, !16648, !DIExpression(), !16671)
  %_18 = load ptr, ptr %self, align 4, !dbg !16672
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %9 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hce16eb652c945d01E"(ptr %_17, ptr %_18) #17, !dbg !16673
  store i32 %9, ptr %len, align 4, !dbg !16673
  br label %bb10, !dbg !16673

bb10:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit", %bb8
  %_22 = load i32, ptr %acc, align 4, !dbg !16674
  %_26 = load ptr, ptr %self, align 4, !dbg !16675
  %_27 = load i32, ptr %i, align 4, !dbg !16676
  store ptr %_26, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !16677, !DIExpression(), !16684)
  store i32 %_27, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !16683, !DIExpression(), !16686)
  store ptr %_26, ptr %self.dbg.spill.i3, align 4
    #dbg_declare(ptr %self.dbg.spill.i3, !15551, !DIExpression(), !16687)
  %_3.i2 = getelementptr inbounds nuw { ptr, i32 }, ptr %_26, i32 %_27, !dbg !16689
  store ptr %_3.i2, ptr %self.dbg.spill.i4, align 4
    #dbg_declare(ptr %self.dbg.spill.i4, !15551, !DIExpression(), !16690)
; call core::iter::adapters::map::map_fold::{{closure}}
  %_19 = call i32 @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he28f978449630af4E"(ptr align 1 %f, i32 %_22, ptr align 4 %_3.i2) #17, !dbg !16692
  store i32 %_19, ptr %acc, align 4, !dbg !16693
  %_29 = load i32, ptr %i, align 4, !dbg !16694
  store i32 %_29, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !16613, !DIExpression(), !16695)
  store i32 1, ptr %rhs.dbg.spill.i, align 4
    #dbg_declare(ptr %rhs.dbg.spill.i, !16616, !DIExpression(), !16697)
; call core::ub_checks::check_language_ub
  %_3.i = call zeroext i1 @_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E() #17, !dbg !16698
  br i1 %_3.i, label %bb2.i, label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit", !dbg !16698

bb2.i:                                            ; preds = %bb10
; call core::num::<impl usize>::unchecked_add::precondition_check
  call void @"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h12c128c37266108cE"(i32 %_29, i32 1, ptr align 4 @alloc_8407de24b9e131517d3488beb23d4c7f) #17, !dbg !16699
  br label %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit", !dbg !16699

"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit": ; preds = %bb10, %bb2.i
  %_0.i = add nuw i32 %_29, 1, !dbg !16700
  store i32 %_0.i, ptr %i, align 4, !dbg !16701
  %_31 = load i32, ptr %i, align 4, !dbg !16702
  %_32 = load i32, ptr %len, align 4, !dbg !16703
  %_30 = icmp eq i32 %_31, %_32, !dbg !16702
  br i1 %_30, label %bb15, label %bb10, !dbg !16702

bb15:                                             ; preds = %"_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE.exit"
  %10 = load i32, ptr %acc, align 4, !dbg !16704
  store i32 %10, ptr %_0, align 4, !dbg !16704
  br label %bb16, !dbg !16668

bb16:                                             ; preds = %bb5, %bb15
  %11 = load i32, ptr %_0, align 4, !dbg !16705
  ret i32 %11, !dbg !16705

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb7:                                              ; No predecessors!
  unreachable

bb9:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define dso_local align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa92a93c49917941E"(ptr align 4 %self) unnamed_addr #2 !dbg !16706 {
start:
  %self.dbg.spill.i1.i = alloca [4 x i8], align 4
  %self.dbg.spill.i.i = alloca [4 x i8], align 4
  %self.dbg.spill.i2 = alloca [4 x i8], align 4
  %self.dbg.spill.i1 = alloca [4 x i8], align 4
  %count.dbg.spill.i = alloca [4 x i8], align 4
  %self.dbg.spill.i = alloca [4 x i8], align 4
  %end_or_len.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_14 = alloca [4 x i8], align 4
  %_10 = alloca [4 x i8], align 4
  %ptr = alloca [4 x i8], align 4
  %_0 = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16711, !DIExpression(), !16718)
    #dbg_declare(ptr %ptr, !16712, !DIExpression(), !16719)
  %0 = load ptr, ptr %self, align 4, !dbg !16720
  store ptr %0, ptr %ptr, align 4, !dbg !16720
  %1 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16721
  %end_or_len = load ptr, ptr %1, align 4, !dbg !16721
  store ptr %end_or_len, ptr %end_or_len.dbg.spill, align 4, !dbg !16721
    #dbg_declare(ptr %end_or_len.dbg.spill, !16714, !DIExpression(), !16722)
  br label %bb7, !dbg !16723

bb7:                                              ; preds = %start
  store ptr %end_or_len, ptr %_10, align 4, !dbg !16724
; call <core::ptr::non_null::NonNull<T> as core::cmp::PartialEq>::eq
  %_7 = call zeroext i1 @"_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h46581e06d27f1d91E"(ptr align 4 %ptr, ptr align 4 %_10) #17, !dbg !16725
  br i1 %_7, label %bb9, label %bb10, !dbg !16725

bb10:                                             ; preds = %bb7
  %2 = load ptr, ptr %ptr, align 4, !dbg !16726
  store ptr %2, ptr %self.dbg.spill.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i, !16727, !DIExpression(), !16734)
  store i32 1, ptr %count.dbg.spill.i, align 4
    #dbg_declare(ptr %count.dbg.spill.i, !16733, !DIExpression(), !16736)
  store ptr %2, ptr %self.dbg.spill.i1, align 4
    #dbg_declare(ptr %self.dbg.spill.i1, !4160, !DIExpression(), !16737)
  %_3.i = getelementptr inbounds nuw [2 x i8], ptr %2, i32 1, !dbg !16739
  store ptr %_3.i, ptr %self, align 4, !dbg !16740
  br label %bb12, !dbg !16741

bb9:                                              ; preds = %bb7
  store ptr null, ptr %_0, align 4, !dbg !16742
  br label %bb14, !dbg !16743

bb12:                                             ; preds = %bb10
  %3 = load ptr, ptr %ptr, align 4, !dbg !16745
  store ptr %3, ptr %_14, align 4, !dbg !16745
  store ptr %_14, ptr %self.dbg.spill.i2, align 4
    #dbg_declare(ptr %self.dbg.spill.i2, !16746, !DIExpression(), !16752)
  %_4.i = load ptr, ptr %_14, align 4, !dbg !16754
  store ptr %_4.i, ptr %self.dbg.spill.i1.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i1.i, !4160, !DIExpression(), !16755)
  store ptr %_4.i, ptr %self.dbg.spill.i.i, align 4
    #dbg_declare(ptr %self.dbg.spill.i.i, !16757, !DIExpression(), !16762)
  store ptr %_4.i, ptr %_0, align 4, !dbg !16764
  br label %bb14, !dbg !16765

bb14:                                             ; preds = %bb9, %bb12
  %4 = load ptr, ptr %_0, align 4, !dbg !16765
  ret ptr %4, !dbg !16765

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb4:                                              ; No predecessors!
  unreachable

bb5:                                              ; No predecessors!
  unreachable

bb6:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h962f2a63bd9e5a1dE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !16766 {
start:
  %end.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %exact = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16771, !DIExpression(), !16778)
    #dbg_declare(ptr %exact, !16772, !DIExpression(), !16779)
  br label %bb3, !dbg !16780

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16781
  %_6 = load ptr, ptr %0, align 4, !dbg !16781
  store ptr %_6, ptr %end.dbg.spill, align 4, !dbg !16782
    #dbg_declare(ptr %end.dbg.spill, !16776, !DIExpression(), !16783)
  %_7 = load ptr, ptr %self, align 4, !dbg !16784
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h879d8474d78b6cd8E"(ptr %_6, ptr %_7) #17, !dbg !16785
  store i32 %1, ptr %exact, align 4, !dbg !16785
  br label %bb4, !dbg !16785

bb4:                                              ; preds = %bb3
  %_8 = load i32, ptr %exact, align 4, !dbg !16786
  %_10 = load i32, ptr %exact, align 4, !dbg !16787
  store i32 %_8, ptr %_0, align 4, !dbg !16788
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16788
  store i32 1, ptr %2, align 4, !dbg !16788
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !16788
  store i32 %_10, ptr %3, align 4, !dbg !16788
  ret void, !dbg !16789

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfffe6b3678ea3e33E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !16790 {
start:
  %end.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %exact = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16795, !DIExpression(), !16802)
    #dbg_declare(ptr %exact, !16796, !DIExpression(), !16803)
  br label %bb3, !dbg !16804

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16805
  %_6 = load ptr, ptr %0, align 4, !dbg !16805
  store ptr %_6, ptr %end.dbg.spill, align 4, !dbg !16806
    #dbg_declare(ptr %end.dbg.spill, !16800, !DIExpression(), !16807)
  %_7 = load ptr, ptr %self, align 4, !dbg !16808
; call core::ptr::non_null::NonNull<T>::offset_from_unsigned
  %1 = call i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hfd39b030f221307bE"(ptr %_6, ptr %_7) #17, !dbg !16809
  store i32 %1, ptr %exact, align 4, !dbg !16809
  br label %bb4, !dbg !16809

bb4:                                              ; preds = %bb3
  %_8 = load i32, ptr %exact, align 4, !dbg !16810
  %_10 = load i32, ptr %exact, align 4, !dbg !16811
  store i32 %_8, ptr %_0, align 4, !dbg !16812
  %2 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !16812
  store i32 1, ptr %2, align 4, !dbg !16812
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !16812
  store i32 %_10, ptr %3, align 4, !dbg !16812
  ret void, !dbg !16813

bb1:                                              ; No predecessors!
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; <alloc::borrow::Cow<str> as core::ops::arith::AddAssign<&str>>::add_assign
; Function Attrs: nounwind
define dso_local void @"_ZN92_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$LT$$RF$str$GT$$GT$10add_assign17he42c86d256aa516bE"(ptr align 4 %self, ptr align 1 %rhs.0, i32 %rhs.1) unnamed_addr #1 !dbg !16814 {
start:
  %lhs.dbg.spill = alloca [8 x i8], align 4
  %rhs.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_18 = alloca [12 x i8], align 4
  %_17 = alloca [12 x i8], align 4
  %s = alloca [12 x i8], align 4
  %_6 = alloca [12 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16819, !DIExpression(), !16825)
  store ptr %rhs.0, ptr %rhs.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %rhs.dbg.spill, i32 4
  store i32 %rhs.1, ptr %0, align 4
    #dbg_declare(ptr %rhs.dbg.spill, !16820, !DIExpression(), !16826)
    #dbg_declare(ptr %s, !16823, !DIExpression(), !16827)
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i32 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha57eaecb76d8c235E"(ptr align 4 %self) #17, !dbg !16828
  %_4.0 = extractvalue { ptr, i32 } %1, 0, !dbg !16828
  %_4.1 = extractvalue { ptr, i32 } %1, 1, !dbg !16828
; call core::str::<impl str>::is_empty
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1a6184bdcfacbb3aE"(ptr align 1 %_4.0, i32 %_4.1) #17, !dbg !16829
  br i1 %_3, label %bb3, label %bb5, !dbg !16828

bb5:                                              ; preds = %start
; call core::str::<impl str>::is_empty
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1a6184bdcfacbb3aE"(ptr align 1 %rhs.0, i32 %rhs.1) #17, !dbg !16830
  br i1 %_7, label %bb17, label %bb7, !dbg !16831

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_6, i32 4, !dbg !16832
  store ptr %rhs.0, ptr %2, align 4, !dbg !16832
  %3 = getelementptr inbounds i8, ptr %2, i32 4, !dbg !16832
  store i32 %rhs.1, ptr %3, align 4, !dbg !16832
  store i32 -2147483648, ptr %_6, align 4, !dbg !16832
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E"(ptr align 4 %self) #17, !dbg !16833
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_6, i32 12, i1 false), !dbg !16833
  br label %bb17, !dbg !16834

bb7:                                              ; preds = %bb5
  %4 = load i32, ptr %self, align 4, !dbg !16835
  %5 = icmp eq i32 %4, -2147483648, !dbg !16835
  %_8 = select i1 %5, i32 0, i32 1, !dbg !16835
  %6 = trunc nuw i32 %_8 to i1, !dbg !16836
  br i1 %6, label %bb15, label %bb8, !dbg !16836

bb17:                                             ; preds = %bb3, %bb15, %bb5
  ret void, !dbg !16837

bb15:                                             ; preds = %bb11, %bb7
; call alloc::borrow::Cow<B>::to_mut
  %_20 = call align 4 ptr @"_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h9468a62c9c14f9d5E"(ptr align 4 %self) #17, !dbg !16838
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %_20, ptr align 1 %rhs.0, i32 %rhs.1) #17, !dbg !16839
  br label %bb17, !dbg !16839

bb8:                                              ; preds = %bb7
  %7 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !16840
  %lhs.0 = load ptr, ptr %7, align 4, !dbg !16840
  %8 = getelementptr inbounds i8, ptr %7, i32 4, !dbg !16840
  %lhs.1 = load i32, ptr %8, align 4, !dbg !16840
  store ptr %lhs.0, ptr %lhs.dbg.spill, align 4, !dbg !16840
  %9 = getelementptr inbounds i8, ptr %lhs.dbg.spill, i32 4, !dbg !16840
  store i32 %lhs.1, ptr %9, align 4, !dbg !16840
    #dbg_declare(ptr %lhs.dbg.spill, !16821, !DIExpression(), !16840)
; call core::str::<impl str>::len
  %_12 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %lhs.0, i32 %lhs.1) #17, !dbg !16841
; call core::str::<impl str>::len
  %_13 = call i32 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E"(ptr align 1 %rhs.0, i32 %rhs.1) #17, !dbg !16842
  %_14.0 = add i32 %_12, %_13, !dbg !16843
  %_14.1 = icmp ult i32 %_14.0, %_12, !dbg !16843
  br i1 %_14.1, label %panic, label %bb11, !dbg !16843

bb11:                                             ; preds = %bb8
; call alloc::string::String::with_capacity
  call void @_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE(ptr sret([12 x i8]) align 4 %s, i32 %_14.0) #17, !dbg !16844
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hec64159959b61263E(ptr align 4 %s, ptr align 1 %lhs.0, i32 %lhs.1) #17, !dbg !16845
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_18, ptr align 4 %s, i32 12, i1 false), !dbg !16846
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_17, ptr align 4 %_18, i32 12, i1 false), !dbg !16847
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E"(ptr align 4 %self) #17, !dbg !16848
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %self, ptr align 4 %_17, i32 12, i1 false), !dbg !16848
  br label %bb15, !dbg !16849

panic:                                            ; preds = %bb8
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_aeb2eedab926fd08481d065c7ab4286b) #18, !dbg !16843
  unreachable, !dbg !16843

bb18:                                             ; No predecessors!
  unreachable, !dbg !16850
}

; <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
; Function Attrs: nounwind
define dso_local void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h12162e260678d207E"(ptr align 1 %self) unnamed_addr #1 !dbg !16851 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !16861, !DIExpression(), !16862)
  call void @llvm.trap(), !dbg !16863
  unreachable, !dbg !16863
}

; <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h275adc288524ea21E"() unnamed_addr #2 !dbg !16864 {
start:
  %x.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %x.dbg.spill, !16869, !DIExpression(), !16870)
  ret void, !dbg !16871
}

; <core::ops::try_trait::NeverShortCircuit<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8695537a035660e5E"() unnamed_addr #2 !dbg !16872 {
start:
  %self.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %self.dbg.spill, !16876, !DIExpression(), !16877)
  ret void, !dbg !16878
}

; <alloc::rc::Rc<[T]> as core::convert::From<&[T]>>::from
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN95_$LT$alloc..rc..Rc$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h29358df697d12a9dE"(ptr align 1 %v.0, i32 %v.1) unnamed_addr #2 !dbg !16879 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !16882, !DIExpression(), !16883)
; call <alloc::rc::Rc<[T]> as alloc::rc::RcFromSlice<T>>::from_slice
  %1 = call { ptr, i32 } @"_ZN84_$LT$alloc..rc..Rc$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..rc..RcFromSlice$LT$T$GT$$GT$10from_slice17ha68fec0b87d8f077E"(ptr align 1 %v.0, i32 %v.1) #17, !dbg !16884
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !16884
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !16884
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !16885
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !16885
  ret { ptr, i32 } %3, !dbg !16885
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h2e98aaf956810971E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !16886 {
start:
  %buf = alloca [12 x i8], align 4
    #dbg_declare(ptr %iter, !16889, !DIExpression(), !16892)
    #dbg_declare(ptr %buf, !16890, !DIExpression(), !16893)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf6a28998eefb1a92E(ptr sret([12 x i8]) align 4 %buf) #17, !dbg !16894
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h6102ddacc7505c93E"(ptr align 4 %buf, ptr align 4 %iter) #17, !dbg !16895
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %buf, i32 12, i1 false), !dbg !16896
  ret void, !dbg !16897
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h352c46a264a5aa0eE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !16898 {
start:
  %buf = alloca [12 x i8], align 4
    #dbg_declare(ptr %iter, !16900, !DIExpression(), !16903)
    #dbg_declare(ptr %buf, !16901, !DIExpression(), !16904)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf6a28998eefb1a92E(ptr sret([12 x i8]) align 4 %buf) #17, !dbg !16905
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17ha44a538310b364d1E"(ptr align 4 %buf, ptr align 4 %iter) #17, !dbg !16906
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %buf, i32 12, i1 false), !dbg !16907
  ret void, !dbg !16908
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h88e8826910049821E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !16909 {
start:
  %buf = alloca [12 x i8], align 4
    #dbg_declare(ptr %iter, !16911, !DIExpression(), !16914)
    #dbg_declare(ptr %buf, !16912, !DIExpression(), !16915)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf6a28998eefb1a92E(ptr sret([12 x i8]) align 4 %buf) #17, !dbg !16916
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h6e7360d2b05f9b23E"(ptr align 4 %buf, ptr align 4 %iter) #17, !dbg !16917
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %buf, i32 12, i1 false), !dbg !16918
  ret void, !dbg !16919
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hfc63545a9e21dd59E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !16920 {
start:
  %buf = alloca [12 x i8], align 4
    #dbg_declare(ptr %iter, !16922, !DIExpression(), !16925)
    #dbg_declare(ptr %buf, !16923, !DIExpression(), !16926)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf6a28998eefb1a92E(ptr sret([12 x i8]) align 4 %buf) #17, !dbg !16927
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h7d1fa55798036710E"(ptr align 4 %buf, ptr align 4 %iter) #17, !dbg !16928
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %buf, i32 12, i1 false), !dbg !16929
  ret void, !dbg !16930
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: nounwind
define dso_local void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hfdeb9e7846f4cf91E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %iter) unnamed_addr #1 !dbg !16931 {
start:
  %buf = alloca [12 x i8], align 4
    #dbg_declare(ptr %iter, !16933, !DIExpression(), !16936)
    #dbg_declare(ptr %buf, !16934, !DIExpression(), !16937)
; call alloc::string::String::new
  call void @_ZN5alloc6string6String3new17hf6a28998eefb1a92E(ptr sret([12 x i8]) align 4 %buf) #17, !dbg !16938
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hf15d89b4ce4d10d4E"(ptr align 4 %buf, ptr align 4 %iter) #17, !dbg !16939
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %buf, i32 12, i1 false), !dbg !16940
  ret void, !dbg !16941
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1a7b489c338cc154E"() unnamed_addr #2 !dbg !16942 {
start:
  %output.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %output.dbg.spill, !16947, !DIExpression(), !16948)
  ret i32 1114112, !dbg !16949
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h6cc3c0a370de7acfE"() unnamed_addr #2 !dbg !16950 {
start:
  %output.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %output.dbg.spill, !16954, !DIExpression(), !16955)
  ret i1 false, !dbg !16956
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12ce1bf600ceac79E"(i32 %0) unnamed_addr #2 !dbg !16957 {
start:
  %b.dbg.spill = alloca [4 x i8], align 4
  %c.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [4 x i8], align 4
  %self = alloca [4 x i8], align 4
  store i32 %0, ptr %self, align 4
    #dbg_declare(ptr %self, !16976, !DIExpression(), !16981)
    #dbg_declare(ptr %c.dbg.spill, !16977, !DIExpression(), !16982)
  %1 = load i32, ptr %self, align 4, !dbg !16983
  %2 = icmp eq i32 %1, 1114112, !dbg !16983
  %_2 = select i1 %2, i32 0, i32 1, !dbg !16983
  %3 = trunc nuw i32 %_2 to i1, !dbg !16984
  br i1 %3, label %bb2, label %bb3, !dbg !16984

bb2:                                              ; preds = %start
  %b = load i32, ptr %self, align 4, !dbg !16985
  store i32 %b, ptr %b.dbg.spill, align 4, !dbg !16985
    #dbg_declare(ptr %b.dbg.spill, !16979, !DIExpression(), !16986)
  store i32 %b, ptr %_0, align 4, !dbg !16987
  br label %bb4, !dbg !16988

bb3:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4, !dbg !16989
  br label %bb4, !dbg !16990

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i32, ptr %_0, align 4, !dbg !16991
  ret i32 %4, !dbg !16991

bb1:                                              ; No predecessors!
  unreachable, !dbg !16983
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define dso_local zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc728983dae19b88dE"(i1 zeroext %0) unnamed_addr #2 !dbg !16992 {
start:
  %b.dbg.spill = alloca [0 x i8], align 1
  %c.dbg.spill = alloca [0 x i8], align 1
  %_0 = alloca [1 x i8], align 1
  %self = alloca [1 x i8], align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
    #dbg_declare(ptr %self, !17011, !DIExpression(), !17016)
    #dbg_declare(ptr %c.dbg.spill, !17012, !DIExpression(), !17017)
    #dbg_declare(ptr %b.dbg.spill, !17014, !DIExpression(), !17018)
  %2 = load i8, ptr %self, align 1, !dbg !17019
  %3 = trunc nuw i8 %2 to i1, !dbg !17019
  %_2 = zext i1 %3 to i32, !dbg !17019
  %4 = trunc nuw i32 %_2 to i1, !dbg !17020
  br i1 %4, label %bb2, label %bb3, !dbg !17020

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1, !dbg !17021
  br label %bb4, !dbg !17022

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1, !dbg !17023
  br label %bb4, !dbg !17024

bb4:                                              ; preds = %bb2, %bb3
  %5 = load i8, ptr %_0, align 1, !dbg !17025
  %6 = trunc nuw i8 %5 to i1, !dbg !17025
  ret i1 %6, !dbg !17025

bb1:                                              ; No predecessors!
  unreachable, !dbg !17019
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8a4af8a65e0bc216E"(ptr align 4 %self) unnamed_addr #2 !dbg !17026 {
start:
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17028, !DIExpression(), !17029)
; call core::str::validations::next_code_point_reverse
  %0 = call { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17h72ee05c2af757cf7E(ptr align 4 %self) #17, !dbg !17030
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !17030
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !17030
; call core::option::Option<T>::map
  %_0 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17h94312db253717797E"(i32 %_2.0, i32 %_2.1) #17, !dbg !17031
  ret i32 %_0, !dbg !17032
}

; <core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17hffcce9777e67d4f7E"(i32 %ch) unnamed_addr #2 !dbg !17033 {
start:
  %ch.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [0 x i8], align 1
    #dbg_declare(ptr %_1.dbg.spill, !17038, !DIExpression(), !17039)
  store i32 %ch, ptr %ch.dbg.spill, align 4
    #dbg_declare(ptr %ch.dbg.spill, !17037, !DIExpression(), !17040)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_0 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %ch) #17, !dbg !17041
  ret i32 %_0, !dbg !17042
}

; <alloc::string::String as core::convert::From<alloc::boxed::Box<str>>>::from
; Function Attrs: nounwind
define dso_local void @"_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$GT$$GT$$GT$4from17hb79050dc234ba1f0E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) unnamed_addr #1 !dbg !17043 {
start:
  %s.dbg.spill = alloca [8 x i8], align 4
  store ptr %s.0, ptr %s.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %s.dbg.spill, i32 4
  store i32 %s.1, ptr %0, align 4
    #dbg_declare(ptr %s.dbg.spill, !17046, !DIExpression(), !17047)
; call alloc::str::<impl str>::into_string
  call void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17hbdbf9a1951d573f4E"(ptr sret([12 x i8]) align 4 %_0, ptr align 1 %s.0, i32 %s.1) #17, !dbg !17048
  ret void, !dbg !17049
}

; <alloc::string::String as core::convert::TryFrom<alloc::vec::Vec<u8>>>::try_from
; Function Attrs: nounwind
define dso_local void @"_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..TryFrom$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$8try_from17h6e81cd67d4f97c63E"(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %bytes) unnamed_addr #1 !dbg !17050 {
start:
    #dbg_declare(ptr %bytes, !17053, !DIExpression(), !17054)
; call alloc::string::String::from_utf8
  call void @_ZN5alloc6string6String9from_utf817hec1be3bb109edba9E(ptr sret([20 x i8]) align 4 %_0, ptr align 4 %bytes) #17, !dbg !17055
  ret void, !dbg !17056
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<&T>>::extend
; Function Attrs: nounwind
define dso_local void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17hc90c6dbd8aa43470E"(ptr align 4 %self, ptr align 1 %iter.0, i32 %iter.1) unnamed_addr #1 !dbg !17057 {
start:
  %iter.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17060, !DIExpression(), !17064)
  store ptr %iter.0, ptr %iter.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %iter.dbg.spill, i32 4
  store i32 %iter.1, ptr %0, align 4
    #dbg_declare(ptr %iter.dbg.spill, !17061, !DIExpression(), !17065)
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h0dc5fdff266f268dE"(ptr align 1 %iter.0, i32 %iter.1) #17, !dbg !17066
  %_3.0 = extractvalue { ptr, ptr } %1, 0, !dbg !17066
  %_3.1 = extractvalue { ptr, ptr } %1, 1, !dbg !17066
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hb418f7fbabe4ee11E"(ptr align 4 %self, ptr %_3.0, ptr %_3.1) #17, !dbg !17067
  ret void, !dbg !17068
}

; <alloc::string::String as core::convert::From<alloc::borrow::Cow<str>>>::from
; Function Attrs: nounwind
define dso_local void @"_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h81ac7640eae102aaE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %s) unnamed_addr #1 !dbg !17069 {
start:
    #dbg_declare(ptr %s, !17072, !DIExpression(), !17073)
; call alloc::borrow::Cow<B>::into_owned
  call void @"_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17h5ba4078f80625fc6E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %s) #17, !dbg !17074
  ret void, !dbg !17075
}

; <alloc::sync::Arc<[T]> as core::convert::From<&[T]>>::from
; Function Attrs: inlinehint nounwind
define dso_local { ptr, i32 } @"_ZN98_$LT$alloc..sync..Arc$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h9a4bdf719c65c157E"(ptr align 1 %v.0, i32 %v.1) unnamed_addr #2 !dbg !17076 {
start:
  %v.dbg.spill = alloca [8 x i8], align 4
  store ptr %v.0, ptr %v.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %v.dbg.spill, i32 4
  store i32 %v.1, ptr %0, align 4
    #dbg_declare(ptr %v.dbg.spill, !17079, !DIExpression(), !17080)
; call <alloc::sync::Arc<[T]> as alloc::sync::ArcFromSlice<T>>::from_slice
  %1 = call { ptr, i32 } @"_ZN90_$LT$alloc..sync..Arc$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..sync..ArcFromSlice$LT$T$GT$$GT$10from_slice17h70f66378970928ffE"(ptr align 1 %v.0, i32 %v.1) #17, !dbg !17081
  %_0.0 = extractvalue { ptr, i32 } %1, 0, !dbg !17081
  %_0.1 = extractvalue { ptr, i32 } %1, 1, !dbg !17081
  %2 = insertvalue { ptr, i32 } poison, ptr %_0.0, 0, !dbg !17082
  %3 = insertvalue { ptr, i32 } %2, i32 %_0.1, 1, !dbg !17082
  ret { ptr, i32 } %3, !dbg !17082
}

; <core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::find
; Function Attrs: inlinehint nounwind
define dso_local i32 @"_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17h3346057b77c2c2f8E"(ptr align 4 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) unnamed_addr #2 !dbg !17083 {
start:
  %predicate.dbg.spill = alloca [8 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17089, !DIExpression(), !17092)
  store ptr %predicate.0, ptr %predicate.dbg.spill, align 4
  %0 = getelementptr inbounds i8, ptr %predicate.dbg.spill, i32 4
  store ptr %predicate.1, ptr %0, align 4
    #dbg_declare(ptr %predicate.dbg.spill, !17090, !DIExpression(), !17093)
; call core::iter::traits::double_ended::DoubleEndedIterator::rfind
  %_0 = call i32 @_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17h07ea06c9ea1f0e72E(ptr align 4 %self, ptr align 1 %predicate.0, ptr align 1 %predicate.1) #17, !dbg !17094
  ret i32 %_0, !dbg !17095
}

; <core::ptr::non_null::NonNull<T> as core::convert::From<&mut T>>::from
; Function Attrs: inlinehint nounwind
define dso_local ptr @"_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h7acb551dcbbe105aE"(ptr align 4 %r) unnamed_addr #2 !dbg !17096 {
start:
  %r.dbg.spill = alloca [4 x i8], align 4
  store ptr %r, ptr %r.dbg.spill, align 4
    #dbg_declare(ptr %r.dbg.spill, !17099, !DIExpression(), !17100)
; call core::ptr::non_null::NonNull<T>::from_mut
  %_0 = call ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h1aac49e2a23c865eE"(ptr align 4 %r) #17, !dbg !17101
  ret ptr %_0, !dbg !17102
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a098f8c0f59bfb3E"(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !17103 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17108, !DIExpression(), !17123)
    #dbg_declare(ptr %u, !17109, !DIExpression(), !17124)
    #dbg_declare(ptr %residual.dbg.spill, !17113, !DIExpression(), !17125)
; call core::option::Option<T>::take
  %0 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17h4524744efa872fecE"(ptr align 2 %self) #17, !dbg !17126
  %1 = extractvalue { i16, i16 } %0, 0, !dbg !17126
  %2 = extractvalue { i16, i16 } %0, 1, !dbg !17126
  store i16 %1, ptr %_3, align 2, !dbg !17126
  %3 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17126
  store i16 %2, ptr %3, align 2, !dbg !17126
  %4 = load i16, ptr %_3, align 2, !dbg !17127
  %5 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17127
  %6 = load i16, ptr %5, align 2, !dbg !17127
  %_5 = zext i16 %4 to i32, !dbg !17127
  %7 = trunc nuw i32 %_5 to i1, !dbg !17128
  br i1 %7, label %bb4, label %bb3, !dbg !17128

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17129
  %buf = load i16, ptr %8, align 2, !dbg !17129
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !17129
    #dbg_declare(ptr %buf.dbg.spill, !17111, !DIExpression(), !17130)
  store i16 %buf, ptr %u, align 2, !dbg !17131
  br label %bb9, !dbg !17132

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17133
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
  %9 = call { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48e6eee6f1ad3442E"(ptr align 4 %_9) #17, !dbg !17134
  %_8.0 = extractvalue { i16, i16 } %9, 0, !dbg !17134
  %_8.1 = extractvalue { i16, i16 } %9, 1, !dbg !17134
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %10 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h54ba06c386f62714E"(i16 %_8.0, i16 %_8.1) #17, !dbg !17133
  %11 = extractvalue { i16, i16 } %10, 0, !dbg !17133
  %12 = extractvalue { i16, i16 } %10, 1, !dbg !17133
  store i16 %11, ptr %_7, align 2, !dbg !17133
  %13 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17133
  store i16 %12, ptr %13, align 2, !dbg !17133
  %14 = load i16, ptr %_7, align 2, !dbg !17133
  %15 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17133
  %16 = load i16, ptr %15, align 2, !dbg !17133
  %_10 = zext i16 %14 to i32, !dbg !17133
  %17 = trunc nuw i32 %_10 to i1, !dbg !17133
  br i1 %17, label %bb8, label %bb7, !dbg !17133

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  call void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7f917dc30691e145E"(ptr sret([8 x i8]) align 4 %_0) #17, !dbg !17135
  br label %bb25, !dbg !17135

bb7:                                              ; preds = %bb3
  %18 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17133
  %val = load i16, ptr %18, align 2, !dbg !17133
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !17133
    #dbg_declare(ptr %val.dbg.spill, !17115, !DIExpression(), !17136)
  store i16 %val, ptr %u, align 2, !dbg !17136
  br label %bb9, !dbg !17137

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !17138
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E"(i16 %_13) #17, !dbg !17139
  br i1 %_12, label %bb11, label %bb12, !dbg !17138

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  ret void, !dbg !17140

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !17141
  %_16 = zext i16 %_17 to i32, !dbg !17141
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %_16) #17, !dbg !17142
  %19 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !17143
  store i32 %_15, ptr %19, align 4, !dbg !17143
  store i16 0, ptr %_14, align 4, !dbg !17143
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_14, i32 8, i1 false), !dbg !17144
  br label %bb25, !dbg !17145

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !17146
  %_18 = icmp uge i16 %_19, -9216, !dbg !17146
  br i1 %_18, label %bb14, label %bb15, !dbg !17146

bb15:                                             ; preds = %bb11
  %_24 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17147
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next
  %20 = call { i16, i16 } @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48e6eee6f1ad3442E"(ptr align 4 %_24) #17, !dbg !17148
  %21 = extractvalue { i16, i16 } %20, 0, !dbg !17148
  %22 = extractvalue { i16, i16 } %20, 1, !dbg !17148
  store i16 %21, ptr %_23, align 2, !dbg !17148
  %23 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17148
  store i16 %22, ptr %23, align 2, !dbg !17148
  %24 = load i16, ptr %_23, align 2, !dbg !17147
  %25 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17147
  %26 = load i16, ptr %25, align 2, !dbg !17147
  %_25 = zext i16 %24 to i32, !dbg !17147
  %27 = trunc nuw i32 %_25 to i1, !dbg !17149
  br i1 %27, label %bb18, label %bb17, !dbg !17149

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !17150
  %28 = getelementptr inbounds i8, ptr %_20, i32 2, !dbg !17151
  store i16 %_22, ptr %28, align 2, !dbg !17151
  store i16 1, ptr %_20, align 4, !dbg !17151
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_20, i32 8, i1 false), !dbg !17152
  br label %bb25, !dbg !17153

bb18:                                             ; preds = %bb15
  %29 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17154
  %u2 = load i16, ptr %29, align 2, !dbg !17154
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !17154
    #dbg_declare(ptr %u2.dbg.spill, !17117, !DIExpression(), !17155)
    #dbg_declare(ptr %u2.dbg.spill, !17119, !DIExpression(), !17156)
  %_30 = icmp ult i16 %u2, -9216, !dbg !17157
  br i1 %_30, label %bb21, label %bb19, !dbg !17157

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !17158
  %30 = getelementptr inbounds i8, ptr %_27, i32 2, !dbg !17159
  store i16 %_29, ptr %30, align 2, !dbg !17159
  store i16 1, ptr %_27, align 4, !dbg !17159
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_27, i32 8, i1 false), !dbg !17160
  br label %bb25, !dbg !17161

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !17163
  br i1 %_31, label %bb21, label %bb20, !dbg !17163

bb21:                                             ; preds = %bb19, %bb18
  store i16 1, ptr %self, align 4, !dbg !17164
  %31 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17164
  store i16 %u2, ptr %31, align 2, !dbg !17164
  %_35 = load i16, ptr %u, align 2, !dbg !17165
  %32 = getelementptr inbounds i8, ptr %_33, i32 2, !dbg !17166
  store i16 %_35, ptr %32, align 2, !dbg !17166
  store i16 1, ptr %_33, align 4, !dbg !17166
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_33, i32 8, i1 false), !dbg !17167
  br label %bb25, !dbg !17168

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !17170
  %_40 = and i16 %_41, 1023, !dbg !17171
  %_39 = zext i16 %_40 to i32, !dbg !17172
  %_38 = shl i32 %_39, 10, !dbg !17172
  %_45 = and i16 %u2, 1023, !dbg !17173
  %_44 = zext i16 %_45 to i32, !dbg !17173
  %_37 = or i32 %_38, %_44, !dbg !17174
  %_46.0 = add i32 %_37, 65536, !dbg !17174
  %_46.1 = icmp ult i32 %_46.0, %_37, !dbg !17174
  br i1 %_46.1, label %panic, label %bb23, !dbg !17174

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !17174
    #dbg_declare(ptr %c.dbg.spill, !17121, !DIExpression(), !17175)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %_46.0) #17, !dbg !17176
  %33 = getelementptr inbounds i8, ptr %_47, i32 4, !dbg !17177
  store i32 %_48, ptr %33, align 4, !dbg !17177
  store i16 0, ptr %_47, align 4, !dbg !17177
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_47, i32 8, i1 false), !dbg !17178
  br label %bb25, !dbg !17153

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_2fd3a6e7a81e88b0c6f1b828f341a353) #18, !dbg !17174
  unreachable, !dbg !17174

bb2:                                              ; No predecessors!
  unreachable, !dbg !17179
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc74a8ff9f3d47627E"(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !17181 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17185, !DIExpression(), !17200)
    #dbg_declare(ptr %u, !17186, !DIExpression(), !17201)
    #dbg_declare(ptr %residual.dbg.spill, !17190, !DIExpression(), !17202)
; call core::option::Option<T>::take
  %0 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17h4524744efa872fecE"(ptr align 2 %self) #17, !dbg !17203
  %1 = extractvalue { i16, i16 } %0, 0, !dbg !17203
  %2 = extractvalue { i16, i16 } %0, 1, !dbg !17203
  store i16 %1, ptr %_3, align 2, !dbg !17203
  %3 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17203
  store i16 %2, ptr %3, align 2, !dbg !17203
  %4 = load i16, ptr %_3, align 2, !dbg !17204
  %5 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17204
  %6 = load i16, ptr %5, align 2, !dbg !17204
  %_5 = zext i16 %4 to i32, !dbg !17204
  %7 = trunc nuw i32 %_5 to i1, !dbg !17205
  br i1 %7, label %bb4, label %bb3, !dbg !17205

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17206
  %buf = load i16, ptr %8, align 2, !dbg !17206
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !17206
    #dbg_declare(ptr %buf.dbg.spill, !17188, !DIExpression(), !17207)
  store i16 %buf, ptr %u, align 2, !dbg !17208
  br label %bb9, !dbg !17209

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17210
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %9 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4efad3714318d8aeE"(ptr align 4 %_9) #17, !dbg !17211
  %_8.0 = extractvalue { i16, i16 } %9, 0, !dbg !17211
  %_8.1 = extractvalue { i16, i16 } %9, 1, !dbg !17211
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %10 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h54ba06c386f62714E"(i16 %_8.0, i16 %_8.1) #17, !dbg !17210
  %11 = extractvalue { i16, i16 } %10, 0, !dbg !17210
  %12 = extractvalue { i16, i16 } %10, 1, !dbg !17210
  store i16 %11, ptr %_7, align 2, !dbg !17210
  %13 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17210
  store i16 %12, ptr %13, align 2, !dbg !17210
  %14 = load i16, ptr %_7, align 2, !dbg !17210
  %15 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17210
  %16 = load i16, ptr %15, align 2, !dbg !17210
  %_10 = zext i16 %14 to i32, !dbg !17210
  %17 = trunc nuw i32 %_10 to i1, !dbg !17210
  br i1 %17, label %bb8, label %bb7, !dbg !17210

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  call void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7f917dc30691e145E"(ptr sret([8 x i8]) align 4 %_0) #17, !dbg !17212
  br label %bb25, !dbg !17212

bb7:                                              ; preds = %bb3
  %18 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17210
  %val = load i16, ptr %18, align 2, !dbg !17210
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !17210
    #dbg_declare(ptr %val.dbg.spill, !17192, !DIExpression(), !17213)
  store i16 %val, ptr %u, align 2, !dbg !17213
  br label %bb9, !dbg !17214

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !17215
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E"(i16 %_13) #17, !dbg !17216
  br i1 %_12, label %bb11, label %bb12, !dbg !17215

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  ret void, !dbg !17217

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !17218
  %_16 = zext i16 %_17 to i32, !dbg !17218
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %_16) #17, !dbg !17219
  %19 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !17220
  store i32 %_15, ptr %19, align 4, !dbg !17220
  store i16 0, ptr %_14, align 4, !dbg !17220
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_14, i32 8, i1 false), !dbg !17221
  br label %bb25, !dbg !17222

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !17223
  %_18 = icmp uge i16 %_19, -9216, !dbg !17223
  br i1 %_18, label %bb14, label %bb15, !dbg !17223

bb15:                                             ; preds = %bb11
  %_24 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17224
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %20 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4efad3714318d8aeE"(ptr align 4 %_24) #17, !dbg !17225
  %21 = extractvalue { i16, i16 } %20, 0, !dbg !17225
  %22 = extractvalue { i16, i16 } %20, 1, !dbg !17225
  store i16 %21, ptr %_23, align 2, !dbg !17225
  %23 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17225
  store i16 %22, ptr %23, align 2, !dbg !17225
  %24 = load i16, ptr %_23, align 2, !dbg !17224
  %25 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17224
  %26 = load i16, ptr %25, align 2, !dbg !17224
  %_25 = zext i16 %24 to i32, !dbg !17224
  %27 = trunc nuw i32 %_25 to i1, !dbg !17226
  br i1 %27, label %bb18, label %bb17, !dbg !17226

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !17227
  %28 = getelementptr inbounds i8, ptr %_20, i32 2, !dbg !17228
  store i16 %_22, ptr %28, align 2, !dbg !17228
  store i16 1, ptr %_20, align 4, !dbg !17228
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_20, i32 8, i1 false), !dbg !17229
  br label %bb25, !dbg !17230

bb18:                                             ; preds = %bb15
  %29 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17231
  %u2 = load i16, ptr %29, align 2, !dbg !17231
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !17231
    #dbg_declare(ptr %u2.dbg.spill, !17194, !DIExpression(), !17232)
    #dbg_declare(ptr %u2.dbg.spill, !17196, !DIExpression(), !17233)
  %_30 = icmp ult i16 %u2, -9216, !dbg !17234
  br i1 %_30, label %bb21, label %bb19, !dbg !17234

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !17235
  %30 = getelementptr inbounds i8, ptr %_27, i32 2, !dbg !17236
  store i16 %_29, ptr %30, align 2, !dbg !17236
  store i16 1, ptr %_27, align 4, !dbg !17236
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_27, i32 8, i1 false), !dbg !17237
  br label %bb25, !dbg !17238

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !17240
  br i1 %_31, label %bb21, label %bb20, !dbg !17240

bb21:                                             ; preds = %bb19, %bb18
  store i16 1, ptr %self, align 4, !dbg !17241
  %31 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17241
  store i16 %u2, ptr %31, align 2, !dbg !17241
  %_35 = load i16, ptr %u, align 2, !dbg !17242
  %32 = getelementptr inbounds i8, ptr %_33, i32 2, !dbg !17243
  store i16 %_35, ptr %32, align 2, !dbg !17243
  store i16 1, ptr %_33, align 4, !dbg !17243
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_33, i32 8, i1 false), !dbg !17244
  br label %bb25, !dbg !17245

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !17247
  %_40 = and i16 %_41, 1023, !dbg !17248
  %_39 = zext i16 %_40 to i32, !dbg !17249
  %_38 = shl i32 %_39, 10, !dbg !17249
  %_45 = and i16 %u2, 1023, !dbg !17250
  %_44 = zext i16 %_45 to i32, !dbg !17250
  %_37 = or i32 %_38, %_44, !dbg !17251
  %_46.0 = add i32 %_37, 65536, !dbg !17251
  %_46.1 = icmp ult i32 %_46.0, %_37, !dbg !17251
  br i1 %_46.1, label %panic, label %bb23, !dbg !17251

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !17251
    #dbg_declare(ptr %c.dbg.spill, !17198, !DIExpression(), !17252)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %_46.0) #17, !dbg !17253
  %33 = getelementptr inbounds i8, ptr %_47, i32 4, !dbg !17254
  store i32 %_48, ptr %33, align 4, !dbg !17254
  store i16 0, ptr %_47, align 4, !dbg !17254
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_47, i32 8, i1 false), !dbg !17255
  br label %bb25, !dbg !17230

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_2fd3a6e7a81e88b0c6f1b828f341a353) #18, !dbg !17251
  unreachable, !dbg !17251

bb2:                                              ; No predecessors!
  unreachable, !dbg !17256
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee4e173d22a50904E"(ptr sret([8 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #1 !dbg !17258 {
start:
  %c.dbg.spill = alloca [4 x i8], align 4
  %u2.dbg.spill = alloca [2 x i8], align 2
  %buf.dbg.spill = alloca [2 x i8], align 2
  %val.dbg.spill = alloca [2 x i8], align 2
  %residual.dbg.spill = alloca [0 x i8], align 1
  %self.dbg.spill = alloca [4 x i8], align 4
  %_47 = alloca [8 x i8], align 4
  %_33 = alloca [8 x i8], align 4
  %_27 = alloca [8 x i8], align 4
  %_23 = alloca [4 x i8], align 2
  %_20 = alloca [8 x i8], align 4
  %_14 = alloca [8 x i8], align 4
  %_7 = alloca [4 x i8], align 2
  %_3 = alloca [4 x i8], align 2
  %u = alloca [2 x i8], align 2
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17262, !DIExpression(), !17277)
    #dbg_declare(ptr %u, !17263, !DIExpression(), !17278)
    #dbg_declare(ptr %residual.dbg.spill, !17267, !DIExpression(), !17279)
; call core::option::Option<T>::take
  %0 = call { i16, i16 } @"_ZN4core6option15Option$LT$T$GT$4take17h4524744efa872fecE"(ptr align 2 %self) #17, !dbg !17280
  %1 = extractvalue { i16, i16 } %0, 0, !dbg !17280
  %2 = extractvalue { i16, i16 } %0, 1, !dbg !17280
  store i16 %1, ptr %_3, align 2, !dbg !17280
  %3 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17280
  store i16 %2, ptr %3, align 2, !dbg !17280
  %4 = load i16, ptr %_3, align 2, !dbg !17281
  %5 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17281
  %6 = load i16, ptr %5, align 2, !dbg !17281
  %_5 = zext i16 %4 to i32, !dbg !17281
  %7 = trunc nuw i32 %_5 to i1, !dbg !17282
  br i1 %7, label %bb4, label %bb3, !dbg !17282

bb4:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_3, i32 2, !dbg !17283
  %buf = load i16, ptr %8, align 2, !dbg !17283
  store i16 %buf, ptr %buf.dbg.spill, align 2, !dbg !17283
    #dbg_declare(ptr %buf.dbg.spill, !17265, !DIExpression(), !17284)
  store i16 %buf, ptr %u, align 2, !dbg !17285
  br label %bb9, !dbg !17286

bb3:                                              ; preds = %start
  %_9 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17287
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %9 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2081ae1bb7222a7E"(ptr align 4 %_9) #17, !dbg !17288
  %_8.0 = extractvalue { i16, i16 } %9, 0, !dbg !17288
  %_8.1 = extractvalue { i16, i16 } %9, 1, !dbg !17288
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %10 = call { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h54ba06c386f62714E"(i16 %_8.0, i16 %_8.1) #17, !dbg !17287
  %11 = extractvalue { i16, i16 } %10, 0, !dbg !17287
  %12 = extractvalue { i16, i16 } %10, 1, !dbg !17287
  store i16 %11, ptr %_7, align 2, !dbg !17287
  %13 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17287
  store i16 %12, ptr %13, align 2, !dbg !17287
  %14 = load i16, ptr %_7, align 2, !dbg !17287
  %15 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17287
  %16 = load i16, ptr %15, align 2, !dbg !17287
  %_10 = zext i16 %14 to i32, !dbg !17287
  %17 = trunc nuw i32 %_10 to i1, !dbg !17287
  br i1 %17, label %bb8, label %bb7, !dbg !17287

bb8:                                              ; preds = %bb3
; call <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
  call void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7f917dc30691e145E"(ptr sret([8 x i8]) align 4 %_0) #17, !dbg !17289
  br label %bb25, !dbg !17289

bb7:                                              ; preds = %bb3
  %18 = getelementptr inbounds i8, ptr %_7, i32 2, !dbg !17287
  %val = load i16, ptr %18, align 2, !dbg !17287
  store i16 %val, ptr %val.dbg.spill, align 2, !dbg !17287
    #dbg_declare(ptr %val.dbg.spill, !17269, !DIExpression(), !17290)
  store i16 %val, ptr %u, align 2, !dbg !17290
  br label %bb9, !dbg !17291

bb9:                                              ; preds = %bb4, %bb7
  %_13 = load i16, ptr %u, align 2, !dbg !17292
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E"(i16 %_13) #17, !dbg !17293
  br i1 %_12, label %bb11, label %bb12, !dbg !17292

bb25:                                             ; preds = %bb14, %bb21, %bb23, %bb17, %bb12, %bb8
  ret void, !dbg !17294

bb12:                                             ; preds = %bb9
  %_17 = load i16, ptr %u, align 2, !dbg !17295
  %_16 = zext i16 %_17 to i32, !dbg !17295
; call core::char::methods::<impl char>::from_u32_unchecked
  %_15 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %_16) #17, !dbg !17296
  %19 = getelementptr inbounds i8, ptr %_14, i32 4, !dbg !17297
  store i32 %_15, ptr %19, align 4, !dbg !17297
  store i16 0, ptr %_14, align 4, !dbg !17297
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_14, i32 8, i1 false), !dbg !17298
  br label %bb25, !dbg !17299

bb11:                                             ; preds = %bb9
  %_19 = load i16, ptr %u, align 2, !dbg !17300
  %_18 = icmp uge i16 %_19, -9216, !dbg !17300
  br i1 %_18, label %bb14, label %bb15, !dbg !17300

bb15:                                             ; preds = %bb11
  %_24 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17301
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %20 = call { i16, i16 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2081ae1bb7222a7E"(ptr align 4 %_24) #17, !dbg !17302
  %21 = extractvalue { i16, i16 } %20, 0, !dbg !17302
  %22 = extractvalue { i16, i16 } %20, 1, !dbg !17302
  store i16 %21, ptr %_23, align 2, !dbg !17302
  %23 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17302
  store i16 %22, ptr %23, align 2, !dbg !17302
  %24 = load i16, ptr %_23, align 2, !dbg !17301
  %25 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17301
  %26 = load i16, ptr %25, align 2, !dbg !17301
  %_25 = zext i16 %24 to i32, !dbg !17301
  %27 = trunc nuw i32 %_25 to i1, !dbg !17303
  br i1 %27, label %bb18, label %bb17, !dbg !17303

bb14:                                             ; preds = %bb11
  %_22 = load i16, ptr %u, align 2, !dbg !17304
  %28 = getelementptr inbounds i8, ptr %_20, i32 2, !dbg !17305
  store i16 %_22, ptr %28, align 2, !dbg !17305
  store i16 1, ptr %_20, align 4, !dbg !17305
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_20, i32 8, i1 false), !dbg !17306
  br label %bb25, !dbg !17307

bb18:                                             ; preds = %bb15
  %29 = getelementptr inbounds i8, ptr %_23, i32 2, !dbg !17308
  %u2 = load i16, ptr %29, align 2, !dbg !17308
  store i16 %u2, ptr %u2.dbg.spill, align 2, !dbg !17308
    #dbg_declare(ptr %u2.dbg.spill, !17271, !DIExpression(), !17309)
    #dbg_declare(ptr %u2.dbg.spill, !17273, !DIExpression(), !17310)
  %_30 = icmp ult i16 %u2, -9216, !dbg !17311
  br i1 %_30, label %bb21, label %bb19, !dbg !17311

bb17:                                             ; preds = %bb15
  %_29 = load i16, ptr %u, align 2, !dbg !17312
  %30 = getelementptr inbounds i8, ptr %_27, i32 2, !dbg !17313
  store i16 %_29, ptr %30, align 2, !dbg !17313
  store i16 1, ptr %_27, align 4, !dbg !17313
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_27, i32 8, i1 false), !dbg !17314
  br label %bb25, !dbg !17315

bb19:                                             ; preds = %bb18
  %_31 = icmp ugt i16 %u2, -8193, !dbg !17317
  br i1 %_31, label %bb21, label %bb20, !dbg !17317

bb21:                                             ; preds = %bb19, %bb18
  store i16 1, ptr %self, align 4, !dbg !17318
  %31 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17318
  store i16 %u2, ptr %31, align 2, !dbg !17318
  %_35 = load i16, ptr %u, align 2, !dbg !17319
  %32 = getelementptr inbounds i8, ptr %_33, i32 2, !dbg !17320
  store i16 %_35, ptr %32, align 2, !dbg !17320
  store i16 1, ptr %_33, align 4, !dbg !17320
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_33, i32 8, i1 false), !dbg !17321
  br label %bb25, !dbg !17322

bb20:                                             ; preds = %bb19
  %_41 = load i16, ptr %u, align 2, !dbg !17324
  %_40 = and i16 %_41, 1023, !dbg !17325
  %_39 = zext i16 %_40 to i32, !dbg !17326
  %_38 = shl i32 %_39, 10, !dbg !17326
  %_45 = and i16 %u2, 1023, !dbg !17327
  %_44 = zext i16 %_45 to i32, !dbg !17327
  %_37 = or i32 %_38, %_44, !dbg !17328
  %_46.0 = add i32 %_37, 65536, !dbg !17328
  %_46.1 = icmp ult i32 %_46.0, %_37, !dbg !17328
  br i1 %_46.1, label %panic, label %bb23, !dbg !17328

bb23:                                             ; preds = %bb20
  store i32 %_46.0, ptr %c.dbg.spill, align 4, !dbg !17328
    #dbg_declare(ptr %c.dbg.spill, !17275, !DIExpression(), !17329)
; call core::char::methods::<impl char>::from_u32_unchecked
  %_48 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E"(i32 %_46.0) #17, !dbg !17330
  %33 = getelementptr inbounds i8, ptr %_47, i32 4, !dbg !17331
  store i32 %_48, ptr %33, align 4, !dbg !17331
  store i16 0, ptr %_47, align 4, !dbg !17331
  call void @llvm.memcpy.p0.p0.i32(ptr align 4 %_0, ptr align 4 %_47, i32 8, i1 false), !dbg !17332
  br label %bb25, !dbg !17307

panic:                                            ; preds = %bb20
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_2fd3a6e7a81e88b0c6f1b828f341a353) #18, !dbg !17328
  unreachable, !dbg !17328

bb2:                                              ; No predecessors!
  unreachable, !dbg !17333
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha770b931b3c13a9dE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !17335 {
start:
  %high.dbg.spill = alloca [8 x i8], align 4
  %low.dbg.spill7 = alloca [4 x i8], align 4
  %low_buf.dbg.spill = alloca [4 x i8], align 4
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [4 x i8], align 4
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [4 x i8], align 4
  %low.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %high_buf = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %high = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17340, !DIExpression(), !17359)
    #dbg_declare(ptr %high, !17343, !DIExpression(), !17360)
    #dbg_declare(ptr %high_buf, !17346, !DIExpression(), !17361)
  %_5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17362
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h74c964c242110fdaE"(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %_5) #17, !dbg !17363
  %low = load i32, ptr %_4, align 4, !dbg !17364
  store i32 %low, ptr %low.dbg.spill, align 4, !dbg !17364
    #dbg_declare(ptr %low.dbg.spill, !17341, !DIExpression(), !17365)
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !17366
  %1 = load i32, ptr %0, align 4, !dbg !17366
  %2 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !17366
  %3 = load i32, ptr %2, align 4, !dbg !17366
  store i32 %1, ptr %high, align 4, !dbg !17366
  %4 = getelementptr inbounds i8, ptr %high, i32 4, !dbg !17366
  store i32 %3, ptr %4, align 4, !dbg !17366
  %5 = load i16, ptr %self, align 4, !dbg !17367
  %6 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17367
  %7 = load i16, ptr %6, align 2, !dbg !17367
  %_9 = zext i16 %5 to i32, !dbg !17367
  %8 = trunc nuw i32 %_9 to i1, !dbg !17368
  br i1 %8, label %bb3, label %bb4, !dbg !17368

bb3:                                              ; preds = %start
  %u = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17369
  store ptr %u, ptr %u.dbg.spill, align 4, !dbg !17369
    #dbg_declare(ptr %u.dbg.spill, !17349, !DIExpression(), !17370)
  %_13 = load i16, ptr %u, align 2, !dbg !17371
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E"(i16 %_13) #17, !dbg !17372
  br i1 %_12, label %bb6, label %bb7, !dbg !17371

bb4:                                              ; preds = %start
  store i32 0, ptr %_8, align 4, !dbg !17373
  %9 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17373
  store i32 0, ptr %9, align 4, !dbg !17373
  br label %bb11, !dbg !17373

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i32, ptr %_8, align 4, !dbg !17374
  store i32 %low_buf, ptr %low_buf.dbg.spill, align 4, !dbg !17374
    #dbg_declare(ptr %low_buf.dbg.spill, !17344, !DIExpression(), !17375)
  %10 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17376
  %11 = load i32, ptr %10, align 4, !dbg !17376
  store i32 %11, ptr %high_buf, align 4, !dbg !17376
; call core::num::<impl usize>::div_ceil
  %_21 = call i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h11bff4b73d459aa3E"(i32 %low, i32 2, ptr align 4 @alloc_2a9b26b5005d87297d57eebf70d4ca63) #17, !dbg !17377
  %_22.0 = add i32 %_21, %low_buf, !dbg !17378
  %_22.1 = icmp ult i32 %_22.0, %_21, !dbg !17378
  br i1 %_22.1, label %panic, label %bb13, !dbg !17378

bb7:                                              ; preds = %bb3
  %12 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17369
  %u1 = load i16, ptr %12, align 2, !dbg !17369
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !17369
    #dbg_declare(ptr %u.dbg.spill2, !17347, !DIExpression(), !17370)
  store i32 1, ptr %_8, align 4, !dbg !17379
  %13 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17379
  store i32 1, ptr %13, align 4, !dbg !17379
  br label %bb11, !dbg !17380

bb6:                                              ; preds = %bb3
  %_u = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17381
  store ptr %_u, ptr %_u.dbg.spill, align 4, !dbg !17381
    #dbg_declare(ptr %_u.dbg.spill, !17352, !DIExpression(), !17382)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h03d764e556e41ebcE"(ptr align 4 %high, ptr align 4 @alloc_3eca034e7c95719d4df067fb5b8d9fe6) #17, !dbg !17383
  br i1 %_16, label %bb9, label %bb10, !dbg !17383

bb10:                                             ; preds = %bb6
  %14 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17384
  %_u3 = load i16, ptr %14, align 2, !dbg !17384
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !17384
    #dbg_declare(ptr %_u.dbg.spill4, !17353, !DIExpression(), !17385)
  store i32 0, ptr %_8, align 4, !dbg !17386
  %15 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17386
  store i32 1, ptr %15, align 4, !dbg !17386
  br label %bb11, !dbg !17387

bb9:                                              ; preds = %bb6
  %16 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17381
  %_u5 = load i16, ptr %16, align 2, !dbg !17381
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !17381
    #dbg_declare(ptr %_u.dbg.spill6, !17350, !DIExpression(), !17382)
  store i32 1, ptr %_8, align 4, !dbg !17388
  %17 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17388
  store i32 1, ptr %17, align 4, !dbg !17388
  br label %bb11, !dbg !17389

bb13:                                             ; preds = %bb11
  store i32 %_22.0, ptr %low.dbg.spill7, align 4, !dbg !17378
    #dbg_declare(ptr %low.dbg.spill7, !17355, !DIExpression(), !17390)
  %18 = load i32, ptr %high, align 4, !dbg !17391
  %19 = getelementptr inbounds i8, ptr %high, i32 4, !dbg !17391
  %20 = load i32, ptr %19, align 4, !dbg !17391
; call core::option::Option<T>::and_then
  %21 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h15a9c95e93f58520E"(i32 %18, i32 %20, ptr align 4 %high_buf) #17, !dbg !17392
  %high.0 = extractvalue { i32, i32 } %21, 0, !dbg !17392
  %high.1 = extractvalue { i32, i32 } %21, 1, !dbg !17392
  store i32 %high.0, ptr %high.dbg.spill, align 4, !dbg !17392
  %22 = getelementptr inbounds i8, ptr %high.dbg.spill, i32 4, !dbg !17392
  store i32 %high.1, ptr %22, align 4, !dbg !17392
    #dbg_declare(ptr %high.dbg.spill, !17357, !DIExpression(), !17393)
  store i32 %_22.0, ptr %_0, align 4, !dbg !17394
  %23 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !17394
  store i32 %high.0, ptr %23, align 4, !dbg !17394
  %24 = getelementptr inbounds i8, ptr %23, i32 4, !dbg !17394
  store i32 %high.1, ptr %24, align 4, !dbg !17394
  ret void, !dbg !17395

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_2c64555d466b4d408bbb4fb778bdbb48) #18, !dbg !17378
  unreachable, !dbg !17378

bb2:                                              ; No predecessors!
  unreachable, !dbg !17367
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he0c58d9d11f37d70E"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !17396 {
start:
  %high.dbg.spill = alloca [8 x i8], align 4
  %low.dbg.spill7 = alloca [4 x i8], align 4
  %low_buf.dbg.spill = alloca [4 x i8], align 4
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [4 x i8], align 4
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [4 x i8], align 4
  %low.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %high_buf = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %high = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17401, !DIExpression(), !17420)
    #dbg_declare(ptr %high, !17404, !DIExpression(), !17421)
    #dbg_declare(ptr %high_buf, !17407, !DIExpression(), !17422)
  %_5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17423
; call <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h8184a2c9dc96cb9eE"(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %_5) #17, !dbg !17424
  %low = load i32, ptr %_4, align 4, !dbg !17425
  store i32 %low, ptr %low.dbg.spill, align 4, !dbg !17425
    #dbg_declare(ptr %low.dbg.spill, !17402, !DIExpression(), !17426)
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !17427
  %1 = load i32, ptr %0, align 4, !dbg !17427
  %2 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !17427
  %3 = load i32, ptr %2, align 4, !dbg !17427
  store i32 %1, ptr %high, align 4, !dbg !17427
  %4 = getelementptr inbounds i8, ptr %high, i32 4, !dbg !17427
  store i32 %3, ptr %4, align 4, !dbg !17427
  %5 = load i16, ptr %self, align 4, !dbg !17428
  %6 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17428
  %7 = load i16, ptr %6, align 2, !dbg !17428
  %_9 = zext i16 %5 to i32, !dbg !17428
  %8 = trunc nuw i32 %_9 to i1, !dbg !17429
  br i1 %8, label %bb3, label %bb4, !dbg !17429

bb3:                                              ; preds = %start
  %u = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17430
  store ptr %u, ptr %u.dbg.spill, align 4, !dbg !17430
    #dbg_declare(ptr %u.dbg.spill, !17410, !DIExpression(), !17431)
  %_13 = load i16, ptr %u, align 2, !dbg !17432
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E"(i16 %_13) #17, !dbg !17433
  br i1 %_12, label %bb6, label %bb7, !dbg !17432

bb4:                                              ; preds = %start
  store i32 0, ptr %_8, align 4, !dbg !17434
  %9 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17434
  store i32 0, ptr %9, align 4, !dbg !17434
  br label %bb11, !dbg !17434

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i32, ptr %_8, align 4, !dbg !17435
  store i32 %low_buf, ptr %low_buf.dbg.spill, align 4, !dbg !17435
    #dbg_declare(ptr %low_buf.dbg.spill, !17405, !DIExpression(), !17436)
  %10 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17437
  %11 = load i32, ptr %10, align 4, !dbg !17437
  store i32 %11, ptr %high_buf, align 4, !dbg !17437
; call core::num::<impl usize>::div_ceil
  %_21 = call i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h11bff4b73d459aa3E"(i32 %low, i32 2, ptr align 4 @alloc_2a9b26b5005d87297d57eebf70d4ca63) #17, !dbg !17438
  %_22.0 = add i32 %_21, %low_buf, !dbg !17439
  %_22.1 = icmp ult i32 %_22.0, %_21, !dbg !17439
  br i1 %_22.1, label %panic, label %bb13, !dbg !17439

bb7:                                              ; preds = %bb3
  %12 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17430
  %u1 = load i16, ptr %12, align 2, !dbg !17430
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !17430
    #dbg_declare(ptr %u.dbg.spill2, !17408, !DIExpression(), !17431)
  store i32 1, ptr %_8, align 4, !dbg !17440
  %13 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17440
  store i32 1, ptr %13, align 4, !dbg !17440
  br label %bb11, !dbg !17441

bb6:                                              ; preds = %bb3
  %_u = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17442
  store ptr %_u, ptr %_u.dbg.spill, align 4, !dbg !17442
    #dbg_declare(ptr %_u.dbg.spill, !17413, !DIExpression(), !17443)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h03d764e556e41ebcE"(ptr align 4 %high, ptr align 4 @alloc_3eca034e7c95719d4df067fb5b8d9fe6) #17, !dbg !17444
  br i1 %_16, label %bb9, label %bb10, !dbg !17444

bb10:                                             ; preds = %bb6
  %14 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17445
  %_u3 = load i16, ptr %14, align 2, !dbg !17445
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !17445
    #dbg_declare(ptr %_u.dbg.spill4, !17414, !DIExpression(), !17446)
  store i32 0, ptr %_8, align 4, !dbg !17447
  %15 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17447
  store i32 1, ptr %15, align 4, !dbg !17447
  br label %bb11, !dbg !17448

bb9:                                              ; preds = %bb6
  %16 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17442
  %_u5 = load i16, ptr %16, align 2, !dbg !17442
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !17442
    #dbg_declare(ptr %_u.dbg.spill6, !17411, !DIExpression(), !17443)
  store i32 1, ptr %_8, align 4, !dbg !17449
  %17 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17449
  store i32 1, ptr %17, align 4, !dbg !17449
  br label %bb11, !dbg !17450

bb13:                                             ; preds = %bb11
  store i32 %_22.0, ptr %low.dbg.spill7, align 4, !dbg !17439
    #dbg_declare(ptr %low.dbg.spill7, !17416, !DIExpression(), !17451)
  %18 = load i32, ptr %high, align 4, !dbg !17452
  %19 = getelementptr inbounds i8, ptr %high, i32 4, !dbg !17452
  %20 = load i32, ptr %19, align 4, !dbg !17452
; call core::option::Option<T>::and_then
  %21 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h387791a40a65eb08E"(i32 %18, i32 %20, ptr align 4 %high_buf) #17, !dbg !17453
  %high.0 = extractvalue { i32, i32 } %21, 0, !dbg !17453
  %high.1 = extractvalue { i32, i32 } %21, 1, !dbg !17453
  store i32 %high.0, ptr %high.dbg.spill, align 4, !dbg !17453
  %22 = getelementptr inbounds i8, ptr %high.dbg.spill, i32 4, !dbg !17453
  store i32 %high.1, ptr %22, align 4, !dbg !17453
    #dbg_declare(ptr %high.dbg.spill, !17418, !DIExpression(), !17454)
  store i32 %_22.0, ptr %_0, align 4, !dbg !17455
  %23 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !17455
  store i32 %high.0, ptr %23, align 4, !dbg !17455
  %24 = getelementptr inbounds i8, ptr %23, i32 4, !dbg !17455
  store i32 %high.1, ptr %24, align 4, !dbg !17455
  ret void, !dbg !17456

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_2c64555d466b4d408bbb4fb778bdbb48) #18, !dbg !17439
  unreachable, !dbg !17439

bb2:                                              ; No predecessors!
  unreachable, !dbg !17428
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define dso_local void @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfc3844d32c81b82fE"(ptr sret([12 x i8]) align 4 %_0, ptr align 4 %self) unnamed_addr #2 !dbg !17457 {
start:
  %high.dbg.spill = alloca [8 x i8], align 4
  %low.dbg.spill7 = alloca [4 x i8], align 4
  %low_buf.dbg.spill = alloca [4 x i8], align 4
  %_u.dbg.spill6 = alloca [2 x i8], align 2
  %_u.dbg.spill4 = alloca [2 x i8], align 2
  %_u.dbg.spill = alloca [4 x i8], align 4
  %u.dbg.spill2 = alloca [2 x i8], align 2
  %u.dbg.spill = alloca [4 x i8], align 4
  %low.dbg.spill = alloca [4 x i8], align 4
  %self.dbg.spill = alloca [4 x i8], align 4
  %_8 = alloca [8 x i8], align 4
  %high_buf = alloca [4 x i8], align 4
  %_4 = alloca [12 x i8], align 4
  %high = alloca [8 x i8], align 4
  store ptr %self, ptr %self.dbg.spill, align 4
    #dbg_declare(ptr %self.dbg.spill, !17462, !DIExpression(), !17481)
    #dbg_declare(ptr %high, !17465, !DIExpression(), !17482)
    #dbg_declare(ptr %high_buf, !17468, !DIExpression(), !17483)
  %_5 = getelementptr inbounds i8, ptr %self, i32 4, !dbg !17484
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h382fcde1af476226E"(ptr sret([12 x i8]) align 4 %_4, ptr align 4 %_5) #17, !dbg !17485
  %low = load i32, ptr %_4, align 4, !dbg !17486
  store i32 %low, ptr %low.dbg.spill, align 4, !dbg !17486
    #dbg_declare(ptr %low.dbg.spill, !17463, !DIExpression(), !17487)
  %0 = getelementptr inbounds i8, ptr %_4, i32 4, !dbg !17488
  %1 = load i32, ptr %0, align 4, !dbg !17488
  %2 = getelementptr inbounds i8, ptr %0, i32 4, !dbg !17488
  %3 = load i32, ptr %2, align 4, !dbg !17488
  store i32 %1, ptr %high, align 4, !dbg !17488
  %4 = getelementptr inbounds i8, ptr %high, i32 4, !dbg !17488
  store i32 %3, ptr %4, align 4, !dbg !17488
  %5 = load i16, ptr %self, align 4, !dbg !17489
  %6 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17489
  %7 = load i16, ptr %6, align 2, !dbg !17489
  %_9 = zext i16 %5 to i32, !dbg !17489
  %8 = trunc nuw i32 %_9 to i1, !dbg !17490
  br i1 %8, label %bb3, label %bb4, !dbg !17490

bb3:                                              ; preds = %start
  %u = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17491
  store ptr %u, ptr %u.dbg.spill, align 4, !dbg !17491
    #dbg_declare(ptr %u.dbg.spill, !17471, !DIExpression(), !17492)
  %_13 = load i16, ptr %u, align 2, !dbg !17493
; call core::num::<impl u16>::is_utf16_surrogate
  %_12 = call zeroext i1 @"_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E"(i16 %_13) #17, !dbg !17494
  br i1 %_12, label %bb6, label %bb7, !dbg !17493

bb4:                                              ; preds = %start
  store i32 0, ptr %_8, align 4, !dbg !17495
  %9 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17495
  store i32 0, ptr %9, align 4, !dbg !17495
  br label %bb11, !dbg !17495

bb11:                                             ; preds = %bb9, %bb10, %bb7, %bb4
  %low_buf = load i32, ptr %_8, align 4, !dbg !17496
  store i32 %low_buf, ptr %low_buf.dbg.spill, align 4, !dbg !17496
    #dbg_declare(ptr %low_buf.dbg.spill, !17466, !DIExpression(), !17497)
  %10 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17498
  %11 = load i32, ptr %10, align 4, !dbg !17498
  store i32 %11, ptr %high_buf, align 4, !dbg !17498
; call core::num::<impl usize>::div_ceil
  %_21 = call i32 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h11bff4b73d459aa3E"(i32 %low, i32 2, ptr align 4 @alloc_2a9b26b5005d87297d57eebf70d4ca63) #17, !dbg !17499
  %_22.0 = add i32 %_21, %low_buf, !dbg !17500
  %_22.1 = icmp ult i32 %_22.0, %_21, !dbg !17500
  br i1 %_22.1, label %panic, label %bb13, !dbg !17500

bb7:                                              ; preds = %bb3
  %12 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17491
  %u1 = load i16, ptr %12, align 2, !dbg !17491
  store i16 %u1, ptr %u.dbg.spill2, align 2, !dbg !17491
    #dbg_declare(ptr %u.dbg.spill2, !17469, !DIExpression(), !17492)
  store i32 1, ptr %_8, align 4, !dbg !17501
  %13 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17501
  store i32 1, ptr %13, align 4, !dbg !17501
  br label %bb11, !dbg !17502

bb6:                                              ; preds = %bb3
  %_u = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17503
  store ptr %_u, ptr %_u.dbg.spill, align 4, !dbg !17503
    #dbg_declare(ptr %_u.dbg.spill, !17474, !DIExpression(), !17504)
; call <core::option::Option<T> as core::cmp::PartialEq>::eq
  %_16 = call zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h03d764e556e41ebcE"(ptr align 4 %high, ptr align 4 @alloc_3eca034e7c95719d4df067fb5b8d9fe6) #17, !dbg !17505
  br i1 %_16, label %bb9, label %bb10, !dbg !17505

bb10:                                             ; preds = %bb6
  %14 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17506
  %_u3 = load i16, ptr %14, align 2, !dbg !17506
  store i16 %_u3, ptr %_u.dbg.spill4, align 2, !dbg !17506
    #dbg_declare(ptr %_u.dbg.spill4, !17475, !DIExpression(), !17507)
  store i32 0, ptr %_8, align 4, !dbg !17508
  %15 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17508
  store i32 1, ptr %15, align 4, !dbg !17508
  br label %bb11, !dbg !17509

bb9:                                              ; preds = %bb6
  %16 = getelementptr inbounds i8, ptr %self, i32 2, !dbg !17503
  %_u5 = load i16, ptr %16, align 2, !dbg !17503
  store i16 %_u5, ptr %_u.dbg.spill6, align 2, !dbg !17503
    #dbg_declare(ptr %_u.dbg.spill6, !17472, !DIExpression(), !17504)
  store i32 1, ptr %_8, align 4, !dbg !17510
  %17 = getelementptr inbounds i8, ptr %_8, i32 4, !dbg !17510
  store i32 1, ptr %17, align 4, !dbg !17510
  br label %bb11, !dbg !17511

bb13:                                             ; preds = %bb11
  store i32 %_22.0, ptr %low.dbg.spill7, align 4, !dbg !17500
    #dbg_declare(ptr %low.dbg.spill7, !17477, !DIExpression(), !17512)
  %18 = load i32, ptr %high, align 4, !dbg !17513
  %19 = getelementptr inbounds i8, ptr %high, i32 4, !dbg !17513
  %20 = load i32, ptr %19, align 4, !dbg !17513
; call core::option::Option<T>::and_then
  %21 = call { i32, i32 } @"_ZN4core6option15Option$LT$T$GT$8and_then17h30ba2367727980b4E"(i32 %18, i32 %20, ptr align 4 %high_buf) #17, !dbg !17514
  %high.0 = extractvalue { i32, i32 } %21, 0, !dbg !17514
  %high.1 = extractvalue { i32, i32 } %21, 1, !dbg !17514
  store i32 %high.0, ptr %high.dbg.spill, align 4, !dbg !17514
  %22 = getelementptr inbounds i8, ptr %high.dbg.spill, i32 4, !dbg !17514
  store i32 %high.1, ptr %22, align 4, !dbg !17514
    #dbg_declare(ptr %high.dbg.spill, !17479, !DIExpression(), !17515)
  store i32 %_22.0, ptr %_0, align 4, !dbg !17516
  %23 = getelementptr inbounds i8, ptr %_0, i32 4, !dbg !17516
  store i32 %high.0, ptr %23, align 4, !dbg !17516
  %24 = getelementptr inbounds i8, ptr %23, i32 4, !dbg !17516
  store i32 %high.1, ptr %24, align 4, !dbg !17516
  ret void, !dbg !17517

panic:                                            ; preds = %bb11
; call core::panicking::panic_const::panic_const_add_overflow
  call void @_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E(ptr align 4 @alloc_2c64555d466b4d408bbb4fb778bdbb48) #18, !dbg !17500
  unreachable, !dbg !17500

bb2:                                              ; No predecessors!
  unreachable, !dbg !17489
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h0245b0971940b5c2E"(ptr align 4 %_1, i32 %h) unnamed_addr #2 !dbg !17518 {
start:
  %h.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !17523, !DIExpression(DW_OP_deref), !17524)
  store i32 %h, ptr %h.dbg.spill, align 4
    #dbg_declare(ptr %h.dbg.spill, !17522, !DIExpression(), !17525)
  %_3 = load i32, ptr %_1, align 4, !dbg !17526
; call core::num::<impl usize>::checked_add
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %h, i32 %_3) #17, !dbg !17527
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !17527
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !17527
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !17528
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !17528
  ret { i32, i32 } %2, !dbg !17528
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h05bb2c1aa7da1326E"(ptr align 4 %_1, i32 %h) unnamed_addr #2 !dbg !17529 {
start:
  %h.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !17534, !DIExpression(DW_OP_deref), !17535)
  store i32 %h, ptr %h.dbg.spill, align 4
    #dbg_declare(ptr %h.dbg.spill, !17533, !DIExpression(), !17536)
  %_3 = load i32, ptr %_1, align 4, !dbg !17537
; call core::num::<impl usize>::checked_add
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %h, i32 %_3) #17, !dbg !17538
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !17538
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !17538
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !17539
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !17539
  ret { i32, i32 } %2, !dbg !17539
}

; <core::char::decode::DecodeUtf16<I> as core::iter::traits::iterator::Iterator>::size_hint::{{closure}}
; Function Attrs: inlinehint nounwind
define dso_local { i32, i32 } @"_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h5feeae50c5f1488fE"(ptr align 4 %_1, i32 %h) unnamed_addr #2 !dbg !17540 {
start:
  %h.dbg.spill = alloca [4 x i8], align 4
  %_1.dbg.spill = alloca [4 x i8], align 4
  store ptr %_1, ptr %_1.dbg.spill, align 4
    #dbg_declare(ptr %_1.dbg.spill, !17545, !DIExpression(DW_OP_deref), !17546)
  store i32 %h, ptr %h.dbg.spill, align 4
    #dbg_declare(ptr %h.dbg.spill, !17544, !DIExpression(), !17547)
  %_3 = load i32, ptr %_1, align 4, !dbg !17548
; call core::num::<impl usize>::checked_add
  %0 = call { i32, i32 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE"(i32 %h, i32 %_3) #17, !dbg !17549
  %_0.0 = extractvalue { i32, i32 } %0, 0, !dbg !17549
  %_0.1 = extractvalue { i32, i32 } %0, 1, !dbg !17549
  %1 = insertvalue { i32, i32 } poison, i32 %_0.0, 0, !dbg !17550
  %2 = insertvalue { i32, i32 } %1, i32 %_0.1, 1, !dbg !17550
  ret { i32, i32 } %2, !dbg !17550
}

; __rustc::__rust_alloc_error_handler_should_panic_v2
; Function Attrs: nounwind
declare dso_local i8 @_RNvCsaKOfhLrNfTz_7___rustc42___rust_alloc_error_handler_should_panic_v2() unnamed_addr #1

; core::fmt::rt::Argument::new_display
; Function Attrs: inlinehint nounwind
declare dso_local void @_ZN4core3fmt2rt8Argument11new_display17h2541e7ca7cfee931E(ptr sret([8 x i8]) align 4, ptr align 4) unnamed_addr #2

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i32(ptr noalias writeonly captures(none), ptr noalias readonly captures(none), i32, i1 immarg) #8

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hac7f2f720c9cd823E"(ptr sret([24 x i8]) align 4, ptr align 4, ptr align 4) unnamed_addr #2

; core::ptr::non_null::NonNull<T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h7ea0dfbf69ca09dcE"(ptr, ptr) unnamed_addr #2

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
declare dso_local align 2 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb7cd0206a5834b2eE"(ptr align 4) unnamed_addr #2

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17h5431d645439ae544E"(ptr, i32) unnamed_addr #2

; core::fmt::rt::<impl core::fmt::Arguments>::new_const
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$9new_const17hcd893c7b336178b4E"(ptr sret([24 x i8]) align 4, ptr align 4) unnamed_addr #2

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17he7d5077b6132e329E"(i32, i32, ptr, i32, ptr align 4) unnamed_addr #2

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17hff68d533498c6befE"(ptr align 4) unnamed_addr #2

; <core::ptr::alignment::Alignment as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN68_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..fmt..Debug$GT$3fmt17hbb30f35f3ef64fa8E"(ptr align 4, ptr align 4) unnamed_addr #1

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17ha176ff3ad81aeac4E"(ptr align 1, i32) unnamed_addr #2

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @_ZN4core5slice3raw14from_raw_parts17h8506f20c0934200fE(ptr, i32, ptr align 4) unnamed_addr #2

; core::fmt::Formatter::debug_lower_hex
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter15debug_lower_hex17h72b54bf2b5971ea0E(ptr align 4) unnamed_addr #1

; core::fmt::Formatter::debug_upper_hex
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter15debug_upper_hex17hda8089ad17629515E(ptr align 4) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17hf2721191f040b59aE"(ptr align 1, ptr align 4) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17h3a28df7a448ec4e8E"(ptr align 1, ptr align 4) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17hf19d67508dd58d4aE"(ptr align 1, ptr align 4) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17hcfc244072f79d997E"(ptr align 4, ptr align 4) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hcb782d3a6cd9db4aE"(ptr align 4, ptr align 4) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17h50261c4f5d2f5115E"(ptr align 4, ptr align 4) unnamed_addr #1

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h61b462ed25bc8a6bE"(ptr align 4, i32) unnamed_addr #2

; core::option::Option<T>::unwrap_or
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core6option15Option$LT$T$GT$9unwrap_or17hb5cdb4f217bc202aE"(i32, i32, i32) unnamed_addr #2

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h59be6c2f34b18cc5E"(ptr align 4) unnamed_addr #2

; Function Attrs: convergent nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.is.constant.i1(i1) #9

; core::fmt::write
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt5write17hc2899684fc6bf93bE(ptr align 1, ptr align 4, ptr align 4) unnamed_addr #1

; <core::slice::iter::Iter<T> as core::default::Default>::default
; Function Attrs: nounwind
declare dso_local { ptr, ptr } @"_ZN75_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..default..Default$GT$7default17h38e03984e1dfce33E"() unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i8, i1 } @llvm.umul.with.overflow.i8(i8, i8) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.bswap.i16(i16) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.ctpop.i32(i32) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #10

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr writeonly captures(none), i8, i32, i1 immarg) #11

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i32(ptr writeonly captures(none), ptr readonly captures(none), i32, i1 immarg) #8

; core::ptr::non_null::NonNull<T>::cast
; Function Attrs: inlinehint nounwind
declare dso_local ptr @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h1822c35f19006601E"(ptr, i32) unnamed_addr #2

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17hf56eacc16313c5f5E"(ptr) unnamed_addr #2

; core::num::nonzero::NonZero<T>::get
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core3num7nonzero16NonZero$LT$T$GT$3get17hd42055a3ed6a2172E"(i32) unnamed_addr #2

; core::ptr::slice_from_raw_parts_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @_ZN4core3ptr24slice_from_raw_parts_mut17ha3a5beed25bc1c5cE(ptr, i32) unnamed_addr #2

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned14runtime_ptr_ge17hc98e65b971afd35aE"(ptr, ptr) unnamed_addr #1

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hffa724c77accbe4dE"(ptr align 4) unnamed_addr #2

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8da1c729ae03b550E"(ptr align 1) unnamed_addr #2

; core::option::Option<T>::unwrap_unchecked
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN4core6option15Option$LT$T$GT$16unwrap_unchecked17h4724f2f4d0bfd6b0E"(ptr align 1, ptr align 4) unnamed_addr #2

; <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h9e252ff832a4f32dE"() unnamed_addr #2

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h86748cbe1d9207dbE"(ptr align 1, i32) unnamed_addr #2

; core::result::Result<T,E>::is_ok
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core6result19Result$LT$T$C$E$GT$5is_ok17h1a55f48f0417a295E"(ptr align 4) unnamed_addr #2

; core::slice::raw::from_raw_parts_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @_ZN4core5slice3raw18from_raw_parts_mut17heacb9b45dad9f98eE(ptr, i32, ptr align 4) unnamed_addr #2

; core::char::methods::encode_utf8_raw::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core4char7methods15encode_utf8_raw8do_panic7runtime17hf43c78897e0ac433E(i32, i32, i32, ptr align 4) unnamed_addr #0

; <core::option::Option<T> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h03d764e556e41ebcE"(ptr align 4, ptr align 4) unnamed_addr #2

; core::panicking::assert_failed
; Function Attrs: inlinehint noreturn nounwind
declare dso_local void @_ZN4core9panicking13assert_failed17h2ffd30dd3e2c377bE(i8, ptr align 4, ptr align 4, ptr align 4, ptr align 4) unnamed_addr #4

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h95de183a44b392dfE"(ptr sret([24 x i8]) align 4, ptr align 4, ptr align 4) unnamed_addr #2

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h15b04d42bfa4d7efE"(ptr align 4) unnamed_addr #2

; <core::option::Option<T> as core::ops::try_trait::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17hcab65765ef4b2869E"(ptr sret([12 x i8]) align 4) unnamed_addr #2

; core::alloc::layout::Layout::is_size_align_valid
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core5alloc6layout6Layout19is_size_align_valid17h77ec66f10f926786E(i32, i32) unnamed_addr #1

; core::ptr::alignment::Alignment::max
; Function Attrs: nounwind
declare dso_local i32 @_ZN4core3ptr9alignment9Alignment3max17he5095f248a36770fE(i32, i32) unnamed_addr #1

; core::ptr::align_offset
; Function Attrs: nounwind
declare dso_local i32 @_ZN4core3ptr12align_offset17h16ec7fcc959379a0E(ptr, i32) unnamed_addr #1

; core::slice::<impl [T]>::split_at
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8split_at17h15cdf9799531bd5dE"(ptr sret([16 x i8]) align 4, ptr align 1, i32, i32, ptr align 4) unnamed_addr #2

; core::slice::<impl [T]>::split_at_unchecked
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$18split_at_unchecked17h2dab4c08f64d725cE"(ptr sret([16 x i8]) align 4, ptr align 1, i32, i32, ptr align 4) unnamed_addr #2

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17hc2ae076305a9deb2E(i32, i32, ptr align 4) unnamed_addr #0

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h6c3d7c12f3ee175fE(i32, i32, ptr align 4) unnamed_addr #0

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h26c13eef9ac779e8E(i32, i32, ptr align 4) unnamed_addr #0

; core::slice::index::slice_index_fail::do_panic::runtime
; Function Attrs: noreturn nounwind
declare dso_local void @_ZN4core5slice5index16slice_index_fail8do_panic7runtime17h13d72b053e4c8ae7E(i32, i32, ptr align 4) unnamed_addr #0

; <core::ops::range::RangeFull as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN97_$LT$core..ops..range..RangeFull$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hb10121e524b390f3E"(ptr align 1, i32, ptr align 4) unnamed_addr #2

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h20d0388dbfaa3663E"(i32, ptr align 1, i32, ptr align 4) unnamed_addr #2

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17hffed45ec41c8f4e6E"(i32, i32, ptr align 1, i32, ptr align 4) unnamed_addr #2

; core::slice::memchr::memchr_aligned
; Function Attrs: nounwind
declare dso_local { i32, i32 } @_ZN4core5slice6memchr14memchr_aligned17hbe785d517767e361E(i8, ptr align 1, i32) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold inlinehint noreturn nounwind
declare dso_local void @_ZN4core6result13unwrap_failed17hbb00ed45a9f740bcE(ptr align 1, i32, ptr align 1, ptr align 4) unnamed_addr #5

; core::unicode::unicode_data::case_ignorable::lookup_slow
; Function Attrs: noinline nounwind
declare dso_local zeroext i1 @_ZN4core7unicode12unicode_data14case_ignorable11lookup_slow17h2dcf7200dc067d64E(i32) unnamed_addr #7

; core::unicode::unicode_data::cased::lookup_slow
; Function Attrs: noinline nounwind
declare dso_local zeroext i1 @_ZN4core7unicode12unicode_data5cased11lookup_slow17h74ffb592b97fb8e0E(i32) unnamed_addr #7

; Function Attrs: cold noreturn nounwind memory(inaccessiblemem: write)
declare void @llvm.trap() #12

; core::fmt::rt::Argument::new_display
; Function Attrs: inlinehint nounwind
declare dso_local void @_ZN4core3fmt2rt8Argument11new_display17h50897f56d49ff652E(ptr sret([8 x i8]) align 4, ptr align 4) unnamed_addr #2

; core::fmt::rt::Argument::new_debug
; Function Attrs: inlinehint nounwind
declare dso_local void @_ZN4core3fmt2rt8Argument9new_debug17hfd367f54582a32f4E(ptr sret([8 x i8]) align 4, ptr align 4) unnamed_addr #2

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h6d1b11f6189ac0beE"(ptr sret([24 x i8]) align 4, ptr align 4, ptr align 4) unnamed_addr #2

; core::fmt::rt::Argument::new_display
; Function Attrs: inlinehint nounwind
declare dso_local void @_ZN4core3fmt2rt8Argument11new_display17hbc2a7c81607dc7f5E(ptr sret([8 x i8]) align 4, ptr align 4) unnamed_addr #2

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117h65b816c58701147fE"(ptr sret([24 x i8]) align 4, ptr align 4, ptr align 4) unnamed_addr #2

; core::ptr::const_ptr::<impl *const T>::is_aligned_to
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13is_aligned_to17h9d68787d1567a990E"(ptr, i32) unnamed_addr #2

; core::fmt::Formatter::debug_tuple
; Function Attrs: nounwind
declare dso_local void @_ZN4core3fmt9Formatter11debug_tuple17h6b1332a2f9e3757dE(ptr sret([12 x i8]) align 4, ptr align 4, ptr align 1, i32) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h1f527f8b4b48fc14E"(ptr align 4, ptr align 4) unnamed_addr #1

; core::fmt::builders::DebugTuple::field
; Function Attrs: nounwind
declare dso_local align 4 ptr @_ZN4core3fmt8builders10DebugTuple5field17h8986a07ca92d9240E(ptr align 4, ptr align 1, ptr align 4) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbc99a1a13df606c7E"(ptr align 4, ptr align 4) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17hc4ba190d2045a9c6E(ptr align 4) unnamed_addr #1

; core::str::pattern::StrSearcher::new
; Function Attrs: nounwind
declare dso_local void @_ZN4core3str7pattern11StrSearcher3new17hd72aa41e5ff4ca63E(ptr sret([64 x i8]) align 8, ptr align 1, i32, ptr align 1, i32) unnamed_addr #1

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbffdc5d01bf5408bE"(ptr align 4, ptr align 4) unnamed_addr #1

; <str as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN40_$LT$str$u20$as$u20$core..fmt..Debug$GT$3fmt17h260472e2af1bf49dE"(ptr align 1, i32, ptr align 4) unnamed_addr #1

; <str as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h7747b9db9493592eE"(ptr align 1, i32, ptr align 4) unnamed_addr #1

; <core::wtf8::Wtf8 as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN55_$LT$core..wtf8..Wtf8$u20$as$u20$core..fmt..Display$GT$3fmt17haf7a1fa3a11b0887E"(ptr align 1, i32, ptr align 4) unnamed_addr #1

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h16c8da6f96ce2b21E"(ptr align 4) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @strlen(ptr) unnamed_addr #1

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hac1c7fb5886a8d26E"(i32, i32) unnamed_addr #2

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$4next17hc72f7a7c318e2fbdE"(ptr align 4) unnamed_addr #2

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h812f1e61fa4cca46E"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #2

; core::slice::<impl [T]>::get_unchecked_mut
; Function Attrs: inlinehint nounwind
declare dso_local align 1 ptr @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17hf54e9fae4fa3f120E"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #2

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4d12ca2a640fa948E"(ptr sret([12 x i8]) align 4, ptr align 4) unnamed_addr #2

; core::unicode::unicode_data::conversions::to_lower
; Function Attrs: nounwind
declare dso_local void @_ZN4core7unicode12unicode_data11conversions8to_lower17h3d1efec1c789f8c8E(ptr sret([12 x i8]) align 4, i32) unnamed_addr #1

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hc8edd41fdbd72794E"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #2

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17h13abacc0e8fb722dE"(ptr align 1, i32, i32, ptr align 4) unnamed_addr #2

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf08d3cb0f782247dE"(ptr, ptr) unnamed_addr #2

; core::unicode::unicode_data::conversions::to_upper
; Function Attrs: nounwind
declare dso_local void @_ZN4core7unicode12unicode_data11conversions8to_upper17h87ea07d945ccc06aE(ptr sret([12 x i8]) align 4, i32) unnamed_addr #1

; core::fmt::rt::<impl core::fmt::Arguments>::new_v1
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core3fmt2rt38_$LT$impl$u20$core..fmt..Arguments$GT$6new_v117hc865914cb945b354E"(ptr sret([24 x i8]) align 4, ptr align 4, ptr align 4) unnamed_addr #2

; core::ptr::read
; Function Attrs: inlinehint nounwind
declare dso_local i8 @_ZN4core3ptr4read17h55792a7124c9f053E(ptr, ptr align 4) unnamed_addr #2

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: inlinehint nounwind
declare dso_local void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17h10a9bbe4ea233c0cE"(ptr align 1, i32, ptr align 1, i32, ptr align 4) unnamed_addr #2

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hbadac3e2abbd3b18E"(ptr align 2, i32) unnamed_addr #2

; core::char::decode::DecodeUtf16Error::unpaired_surrogate
; Function Attrs: nounwind
declare dso_local i16 @_ZN4core4char6decode16DecodeUtf16Error18unpaired_surrogate17h0ddf666293e1966cE(ptr align 2) unnamed_addr #1

; __rustc::__rust_no_alloc_shim_is_unstable_v2
; Function Attrs: nounwind
declare dso_local void @_RNvCsaKOfhLrNfTz_7___rustc35___rust_no_alloc_shim_is_unstable_v2() unnamed_addr #1

; __rustc::__rust_alloc_zeroed
; Function Attrs: nounwind allockind("alloc,zeroed,aligned") allocsize(0)
declare dso_local noalias ptr @_RNvCsaKOfhLrNfTz_7___rustc19___rust_alloc_zeroed(i32, i32 allocalign) unnamed_addr #13

; __rustc::__rust_alloc
; Function Attrs: nounwind allockind("alloc,uninitialized,aligned") allocsize(0)
declare dso_local noalias ptr @_RNvCsaKOfhLrNfTz_7___rustc12___rust_alloc(i32, i32 allocalign) unnamed_addr #14

; __rustc::__rust_dealloc
; Function Attrs: nounwind allockind("free")
declare dso_local void @_RNvCsaKOfhLrNfTz_7___rustc14___rust_dealloc(ptr allocptr, i32, i32) unnamed_addr #15

; __rustc::__rust_realloc
; Function Attrs: nounwind allockind("realloc,aligned") allocsize(3)
declare dso_local noalias ptr @_RNvCsaKOfhLrNfTz_7___rustc14___rust_realloc(ptr allocptr, i32, i32 allocalign, i32) unnamed_addr #16

; core::str::lossy::<impl [u8]>::utf8_chunks
; Function Attrs: nounwind
declare dso_local { ptr, i32 } @"_ZN4core3str5lossy30_$LT$impl$u20$$u5b$u8$u5d$$GT$11utf8_chunks17h134c70f227283c36E"(ptr align 1, i32) unnamed_addr #1

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
declare dso_local { ptr, i32 } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h73bdb64ae7130ef2E"(ptr align 1, i32) unnamed_addr #2

; <core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
declare dso_local void @"_ZN87_$LT$core..str..lossy..Utf8Chunks$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h449d883e31926a09E"(ptr sret([16 x i8]) align 4, ptr align 4) unnamed_addr #1

; core::str::lossy::Utf8Chunk::valid
; Function Attrs: nounwind
declare dso_local { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk5valid17ha1f3ac46c2163617E(ptr align 4) unnamed_addr #1

; core::str::lossy::Utf8Chunk::invalid
; Function Attrs: nounwind
declare dso_local { ptr, i32 } @_ZN4core3str5lossy9Utf8Chunk7invalid17h0e8fc705bc557240E(ptr align 4) unnamed_addr #1

; core::panicking::assert_failed
; Function Attrs: inlinehint noreturn nounwind
declare dso_local void @_ZN4core9panicking13assert_failed17hfaf0730df126d6c2E(i8, ptr align 4, ptr align 4, ptr align 4, ptr align 4) unnamed_addr #4

; core::str::converts::from_utf8
; Function Attrs: nounwind
declare dso_local void @_ZN4core3str8converts9from_utf817hbba37fe7cad0f284E(ptr sret([12 x i8]) align 4, ptr align 1, i32) unnamed_addr #1

; core::cmp::max
; Function Attrs: inlinehint nounwind
declare dso_local i32 @_ZN4core3cmp3max17hea2d796e3d2918ddE(i32, i32) unnamed_addr #2

; <core::ffi::c_str::CStr as core::fmt::Debug>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN59_$LT$core..ffi..c_str..CStr$u20$as$u20$core..fmt..Debug$GT$3fmt17h8da4db1244c222c1E"(ptr align 1, i32, ptr align 4) unnamed_addr #1

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h2a81523181af9ab2E(ptr align 4, ptr align 1, i32, ptr align 1, i32, ptr align 1, ptr align 4, ptr align 1, i32, ptr align 1, ptr align 4) unnamed_addr #1

; core::fmt::Formatter::write_str
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter9write_str17h51ef23c4fa11435eE(ptr align 4, ptr align 1, i32) unnamed_addr #1

; core::fmt::Formatter::debug_tuple_field1_finish
; Function Attrs: nounwind
declare dso_local zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17h3d1be23d989179bfE(ptr align 4, ptr align 1, i32, ptr align 1, ptr align 4) unnamed_addr #1

; <core::str::error::Utf8Error as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare dso_local zeroext i1 @"_ZN66_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17h38f8897d8415721cE"(ptr align 4, ptr align 4) unnamed_addr #1

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2b3e960e9b32fb5bE"(i1 zeroext) unnamed_addr #2

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nounwind
declare dso_local zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hb4c14bfb815675a1E"(ptr align 4) unnamed_addr #2

; core::ptr::const_ptr::<impl *const T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hc1d178877ba95afeE"(ptr, ptr, ptr align 4) unnamed_addr #2

; core::str::validations::next_code_point
; Function Attrs: inlinehint nounwind
declare dso_local { i32, i32 } @_ZN4core3str11validations15next_code_point17h8b0e6294ab36d6b3E(ptr align 4) unnamed_addr #2

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core6option15Option$LT$T$GT$3map17hef2f88899c9c3935E"(i32, i32) unnamed_addr #2

; core::ptr::non_null::NonNull<T>::offset_from_unsigned
; Function Attrs: inlinehint nounwind
declare dso_local i32 @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hce16eb652c945d01E"(ptr, ptr) unnamed_addr #2

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nounwind
declare dso_local { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h0dc5fdff266f268dE"(ptr align 1, i32) unnamed_addr #1

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
declare dso_local { i16, i16 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h54ba06c386f62714E"(i16, i16) unnamed_addr #2

attributes #0 = { noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #1 = { nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #2 = { inlinehint nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #3 = { cold nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #4 = { inlinehint noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #5 = { cold inlinehint noreturn nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #6 = { cold minsize noreturn nounwind optsize "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #7 = { noinline nounwind "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #9 = { convergent nocallback nofree nosync nounwind willreturn memory(none) }
attributes #10 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #12 = { cold noreturn nounwind memory(inaccessiblemem: write) }
attributes #13 = { nounwind allockind("alloc,zeroed,aligned") allocsize(0) "alloc-family"="__rust_alloc" "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #14 = { nounwind allockind("alloc,uninitialized,aligned") allocsize(0) "alloc-family"="__rust_alloc" "alloc-variant-zeroed"="_RNvCsaKOfhLrNfTz_7___rustc19___rust_alloc_zeroed" "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #15 = { nounwind allockind("free") "alloc-family"="__rust_alloc" "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #16 = { nounwind allockind("realloc,aligned") allocsize(3) "alloc-family"="__rust_alloc" "target-cpu"="generic" "target-features"="+atomics,+bulk-memory,+mutable-globals" }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }

!llvm.ident = !{!276}
!llvm.dbg.cu = !{!277}
!llvm.module.flags = !{!291, !292}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "<&core::option::Option<u8> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::option::Option<u8> as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !4, vtableHolder: !12, templateParams: !21, identifier: "9f0df09829d729154b3434e1eeabff66")
!4 = !{!5, !8, !10, !11}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !3, file: !2, baseType: !6, size: 32, align: 32)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !7, size: 32, align: 32, dwarfAddressSpace: 0)
!7 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!9 = !DIBasicType(name: "usize", size: 32, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !3, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<u8>", baseType: !13, size: 32, align: 32, dwarfAddressSpace: 0)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u8>", scope: !14, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !16, templateParams: !21, identifier: "774a7bc235a763e0d0602fde53630227")
!14 = !DINamespace(name: "option", scope: !15)
!15 = !DINamespace(name: "core", scope: null)
!16 = !{!17}
!17 = !DICompositeType(tag: DW_TAG_variant_part, scope: !13, file: !2, size: 16, align: 8, elements: !18, templateParams: !21, identifier: "d47ebcdec53ff1e1fc7d394cf5e1672d", discriminator: !29)
!18 = !{!19, !25}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !17, file: !2, baseType: !20, size: 16, align: 8, extraData: i8 0)
!20 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !13, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !22, identifier: "84a45d26f79ed4caa31bc5af2c53fbf4")
!21 = !{}
!22 = !{!23}
!23 = !DITemplateTypeParameter(name: "T", type: !24)
!24 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !17, file: !2, baseType: !26, size: 16, align: 8, extraData: i8 1)
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !13, file: !2, size: 16, align: 8, flags: DIFlagPublic, elements: !27, templateParams: !22, identifier: "9d7bb1b003ae84b64da48c86aa454b4")
!27 = !{!28}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !26, file: !2, baseType: !24, size: 8, align: 8, offset: 8, flags: DIFlagPublic)
!29 = !DIDerivedType(tag: DW_TAG_member, scope: !13, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagArtificial)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "<&core::alloc::layout::Layout as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !32, isLocal: true, isDefinition: true)
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::alloc::layout::Layout as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !33, vtableHolder: !38, templateParams: !21, identifier: "c9d5aa850a0849e1f28871f15dc8d2f0")
!33 = !{!34, !35, !36, !37}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !32, file: !2, baseType: !6, size: 32, align: 32)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !32, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !32, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !32, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::Layout", baseType: !39, size: 32, align: 32, dwarfAddressSpace: 0)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "Layout", scope: !40, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !42, templateParams: !21, identifier: "f923cc1896f078e51d4a893c36e2e533")
!40 = !DINamespace(name: "layout", scope: !41)
!41 = !DINamespace(name: "alloc", scope: !15)
!42 = !{!43, !44}
!43 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !39, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !39, file: !2, baseType: !45, size: 32, align: 32, flags: DIFlagPrivate)
!45 = !DICompositeType(tag: DW_TAG_structure_type, name: "Alignment", scope: !46, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !48, templateParams: !21, identifier: "b8055a5301a867de82116acd8d685318")
!46 = !DINamespace(name: "alignment", scope: !47)
!47 = !DINamespace(name: "ptr", scope: !15)
!48 = !{!49}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !45, file: !2, baseType: !50, size: 32, align: 32, flags: DIFlagPrivate)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AlignmentEnum", scope: !46, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagEnumClass, elements: !52)
!51 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84}
!53 = !DIEnumerator(name: "_Align1Shl0", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "_Align1Shl1", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "_Align1Shl2", value: 4, isUnsigned: true)
!56 = !DIEnumerator(name: "_Align1Shl3", value: 8, isUnsigned: true)
!57 = !DIEnumerator(name: "_Align1Shl4", value: 16, isUnsigned: true)
!58 = !DIEnumerator(name: "_Align1Shl5", value: 32, isUnsigned: true)
!59 = !DIEnumerator(name: "_Align1Shl6", value: 64, isUnsigned: true)
!60 = !DIEnumerator(name: "_Align1Shl7", value: 128, isUnsigned: true)
!61 = !DIEnumerator(name: "_Align1Shl8", value: 256, isUnsigned: true)
!62 = !DIEnumerator(name: "_Align1Shl9", value: 512, isUnsigned: true)
!63 = !DIEnumerator(name: "_Align1Shl10", value: 1024, isUnsigned: true)
!64 = !DIEnumerator(name: "_Align1Shl11", value: 2048, isUnsigned: true)
!65 = !DIEnumerator(name: "_Align1Shl12", value: 4096, isUnsigned: true)
!66 = !DIEnumerator(name: "_Align1Shl13", value: 8192, isUnsigned: true)
!67 = !DIEnumerator(name: "_Align1Shl14", value: 16384, isUnsigned: true)
!68 = !DIEnumerator(name: "_Align1Shl15", value: 32768, isUnsigned: true)
!69 = !DIEnumerator(name: "_Align1Shl16", value: 65536, isUnsigned: true)
!70 = !DIEnumerator(name: "_Align1Shl17", value: 131072, isUnsigned: true)
!71 = !DIEnumerator(name: "_Align1Shl18", value: 262144, isUnsigned: true)
!72 = !DIEnumerator(name: "_Align1Shl19", value: 524288, isUnsigned: true)
!73 = !DIEnumerator(name: "_Align1Shl20", value: 1048576, isUnsigned: true)
!74 = !DIEnumerator(name: "_Align1Shl21", value: 2097152, isUnsigned: true)
!75 = !DIEnumerator(name: "_Align1Shl22", value: 4194304, isUnsigned: true)
!76 = !DIEnumerator(name: "_Align1Shl23", value: 8388608, isUnsigned: true)
!77 = !DIEnumerator(name: "_Align1Shl24", value: 16777216, isUnsigned: true)
!78 = !DIEnumerator(name: "_Align1Shl25", value: 33554432, isUnsigned: true)
!79 = !DIEnumerator(name: "_Align1Shl26", value: 67108864, isUnsigned: true)
!80 = !DIEnumerator(name: "_Align1Shl27", value: 134217728, isUnsigned: true)
!81 = !DIEnumerator(name: "_Align1Shl28", value: 268435456, isUnsigned: true)
!82 = !DIEnumerator(name: "_Align1Shl29", value: 536870912, isUnsigned: true)
!83 = !DIEnumerator(name: "_Align1Shl30", value: 1073741824, isUnsigned: true)
!84 = !DIEnumerator(name: "_Align1Shl31", value: 2147483648, isUnsigned: true)
!85 = !DIGlobalVariableExpression(var: !86, expr: !DIExpression())
!86 = distinct !DIGlobalVariable(name: "<&usize as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !87, isLocal: true, isDefinition: true)
!87 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&usize as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !88, vtableHolder: !93, templateParams: !21, identifier: "780b51af4c263e5a25cc8e22f3f934fe")
!88 = !{!89, !90, !91, !92}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !87, file: !2, baseType: !6, size: 32, align: 32)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !87, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !87, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !87, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !9, size: 32, align: 32, dwarfAddressSpace: 0)
!94 = !DIGlobalVariableExpression(var: !95, expr: !DIExpression())
!95 = distinct !DIGlobalVariable(name: "<&core::option::Option<usize> as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !96, isLocal: true, isDefinition: true)
!96 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::option::Option<usize> as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !97, vtableHolder: !102, templateParams: !21, identifier: "ee2f5a55dac8625b18fb01ac4e683133")
!97 = !{!98, !99, !100, !101}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !96, file: !2, baseType: !6, size: 32, align: 32)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !96, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !96, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !96, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<usize>", baseType: !103, size: 32, align: 32, dwarfAddressSpace: 0)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !14, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !104, templateParams: !21, identifier: "23b42ad4918f48bbb0d7df30a3e65f21")
!104 = !{!105}
!105 = !DICompositeType(tag: DW_TAG_variant_part, scope: !103, file: !2, size: 64, align: 32, elements: !106, templateParams: !21, identifier: "fff0cc91bd07d4e2a6f41aa96659bb8", discriminator: !115)
!106 = !{!107, !111}
!107 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !105, file: !2, baseType: !108, size: 64, align: 32, extraData: i32 0)
!108 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !103, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !109, identifier: "16f3611ef7370fd7f09fc668dc1c16f8")
!109 = !{!110}
!110 = !DITemplateTypeParameter(name: "T", type: !9)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !105, file: !2, baseType: !112, size: 64, align: 32, extraData: i32 1)
!112 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !103, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !113, templateParams: !109, identifier: "9bb7e929a7e81f45f834925bbfee816")
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !112, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!115 = !DIDerivedType(tag: DW_TAG_member, scope: !103, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(name: "<&str as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !118, isLocal: true, isDefinition: true)
!118 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&str as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !119, vtableHolder: !124, templateParams: !21, identifier: "4c72bea2c43ff6a7f7303943d2ccbafe")
!119 = !{!120, !121, !122, !123}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !118, file: !2, baseType: !6, size: 32, align: 32)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !118, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !118, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !118, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!124 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 64, align: 32, elements: !125, templateParams: !21, identifier: "9277eecd40495f85161460476aacc992")
!125 = !{!126, !128}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !124, file: !2, baseType: !127, size: 32, align: 32)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 32, align: 32, dwarfAddressSpace: 0)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !124, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!129 = !DIGlobalVariableExpression(var: !130, expr: !DIExpression())
!130 = distinct !DIGlobalVariable(name: "STATIC_INNER_SLICE", linkageName: "_ZN5alloc4sync18STATIC_INNER_SLICE17h1413d7a909030fefE", scope: !131, file: !133, line: 3579, type: !134, isLocal: false, isDefinition: true, align: 128)
!131 = !DINamespace(name: "sync", scope: !132)
!132 = !DINamespace(name: "alloc", scope: null)
!133 = !DIFile(filename: "src/sync.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "754ebdb7cfcdf26f53f7fd06952f3c03")
!134 = !DICompositeType(tag: DW_TAG_structure_type, name: "SliceArcInnerForStatic", scope: !131, file: !2, size: 128, align: 128, flags: DIFlagPrivate, elements: !135, templateParams: !21, identifier: "5a6e992f2e833e8ac7169ce8b008c0e2")
!135 = !{!136}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !134, file: !2, baseType: !137, size: 96, align: 32, flags: DIFlagPrivate)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<[u8; 1]>", scope: !131, file: !2, size: 96, align: 32, flags: DIFlagPrivate, elements: !138, templateParams: !154, identifier: "981fa6caff1f80ef4f069993b5157a4b")
!138 = !{!139, !149, !150}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !137, file: !2, baseType: !140, size: 32, align: 32, flags: DIFlagPrivate)
!140 = !DICompositeType(tag: DW_TAG_structure_type, name: "AtomicUsize", scope: !141, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !143, templateParams: !21, identifier: "210fde280431e7a7a2ebb6338b4a928")
!141 = !DINamespace(name: "atomic", scope: !142)
!142 = !DINamespace(name: "sync", scope: !15)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !140, file: !2, baseType: !145, size: 32, align: 32, flags: DIFlagPrivate)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnsafeCell<usize>", scope: !146, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !147, templateParams: !109, identifier: "a03bd62ffdb893cb75c512d3055b1e6a")
!146 = !DINamespace(name: "cell", scope: !15)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !145, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPrivate)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !137, file: !2, baseType: !140, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !137, file: !2, baseType: !151, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 8, align: 8, elements: !152)
!152 = !{!153}
!153 = !DISubrange(count: 1, lowerBound: 0)
!154 = !{!155}
!155 = !DITemplateTypeParameter(name: "T", type: !151)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "<alloc::boxed::convert::{impl#19}::from::StringError as core::error::Error>::{vtable}", scope: null, file: !2, type: !158, isLocal: true, isDefinition: true)
!158 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::boxed::convert::{impl#19}::from::StringError as core::error::Error>::{vtable_type}", file: !2, size: 352, align: 32, flags: DIFlagArtificial, elements: !159, vtableHolder: !171, templateParams: !21, identifier: "e82fc57872fb252f86caf66774e9ef75")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !158, file: !2, baseType: !6, size: 32, align: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !158, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !158, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 128)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "__super_trait_ptr5", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 160)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "__method6", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 192)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "__method7", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 224)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "__method8", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 256)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "__method9", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 288)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "__method10", scope: !158, file: !2, baseType: !6, size: 32, align: 32, offset: 320)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "StringError", scope: !172, file: !2, size: 96, align: 32, flags: DIFlagProtected, elements: !176, templateParams: !21, identifier: "81e34cbfdf76d4004a86fdb96e59dd73")
!172 = !DINamespace(name: "from", scope: !173)
!173 = !DINamespace(name: "{impl#19}", scope: !174)
!174 = !DINamespace(name: "convert", scope: !175)
!175 = !DINamespace(name: "boxed", scope: !132)
!176 = !{!177}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !171, file: !2, baseType: !178, size: 96, align: 32, flags: DIFlagProtected)
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "String", scope: !179, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !180, templateParams: !21, identifier: "d25855d4e39c2f43d5832c8c00c297b8")
!179 = !DINamespace(name: "string", scope: !132)
!180 = !{!181}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !178, file: !2, baseType: !182, size: 96, align: 32, flags: DIFlagPrivate)
!182 = !DICompositeType(tag: DW_TAG_structure_type, name: "Vec<u8, alloc::alloc::Global>", scope: !183, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !184, templateParams: !217, identifier: "690acf9b7a33488c5bae8462c5730502")
!183 = !DINamespace(name: "vec", scope: !132)
!184 = !{!185, !218}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !182, file: !2, baseType: !186, size: 64, align: 32, flags: DIFlagPrivate)
!186 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVec<u8, alloc::alloc::Global>", scope: !187, file: !2, size: 64, align: 32, flags: DIFlagProtected, elements: !188, templateParams: !217, identifier: "5236adca4c8bab765515aeb39bd1ce36")
!187 = !DINamespace(name: "raw_vec", scope: !132)
!188 = !{!189, !216}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !186, file: !2, baseType: !190, size: 64, align: 32, flags: DIFlagPrivate)
!190 = !DICompositeType(tag: DW_TAG_structure_type, name: "RawVecInner<alloc::alloc::Global>", scope: !187, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !191, templateParams: !214, identifier: "3c40c2e41e15f04db5cfeefb4800bcc4")
!191 = !{!192, !205, !211}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !190, file: !2, baseType: !193, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!193 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<u8>", scope: !194, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !195, templateParams: !22, identifier: "15d8b1b660840b97c8698c417bf66080")
!194 = !DINamespace(name: "unique", scope: !47)
!195 = !{!196, !202}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !193, file: !2, baseType: !197, size: 32, align: 32, flags: DIFlagPrivate)
!197 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !199, templateParams: !22, identifier: "bfbed5a29c49721772982c8bebfc3819")
!198 = !DINamespace(name: "non_null", scope: !47)
!199 = !{!200}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !197, file: !2, baseType: !201, size: 32, align: 32, flags: DIFlagPrivate)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !24, size: 32, align: 32, dwarfAddressSpace: 0)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !193, file: !2, baseType: !203, align: 8, offset: 32, flags: DIFlagPrivate)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<u8>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !22, identifier: "86f180f8272fce39fed40a1ecf2dfbe2")
!204 = !DINamespace(name: "marker", scope: !15)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !190, file: !2, baseType: !206, size: 32, align: 32, flags: DIFlagPrivate)
!206 = !DICompositeType(tag: DW_TAG_structure_type, name: "UsizeNoHighBit", scope: !207, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !209, templateParams: !21, identifier: "f66b9037a7c573de372fce98f436079c")
!207 = !DINamespace(name: "niche_types", scope: !208)
!208 = !DINamespace(name: "num", scope: !15)
!209 = !{!210}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !206, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPrivate)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !190, file: !2, baseType: !212, align: 8, offset: 64, flags: DIFlagPrivate)
!212 = !DICompositeType(tag: DW_TAG_structure_type, name: "Global", scope: !213, file: !2, align: 8, flags: DIFlagPublic, elements: !21, identifier: "8d3dc7eb6b91fe30566bfc073f6fd293")
!213 = !DINamespace(name: "alloc", scope: !132)
!214 = !{!215}
!215 = !DITemplateTypeParameter(name: "A", type: !212)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !186, file: !2, baseType: !203, align: 8, offset: 64, flags: DIFlagPrivate)
!217 = !{!23, !215}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !182, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!219 = !DIGlobalVariableExpression(var: !220, expr: !DIExpression())
!220 = distinct !DIGlobalVariable(name: "<usize as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !221, isLocal: true, isDefinition: true)
!221 = !DICompositeType(tag: DW_TAG_structure_type, name: "<usize as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !222, vtableHolder: !9, templateParams: !21, identifier: "d039273444f7fc995c377e8d4c029a3")
!222 = !{!223, !224, !225, !226}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !221, file: !2, baseType: !6, size: 32, align: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !221, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !221, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !221, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "<&core::ptr::alignment::Alignment as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !229, isLocal: true, isDefinition: true)
!229 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&core::ptr::alignment::Alignment as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !230, vtableHolder: !235, templateParams: !21, identifier: "6b1d62126d18356bb460fcdcc638a95e")
!230 = !{!231, !232, !233, !234}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !229, file: !2, baseType: !6, size: 32, align: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !229, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !229, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !229, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::alignment::Alignment", baseType: !45, size: 32, align: 32, dwarfAddressSpace: 0)
!236 = !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!237 = distinct !DIGlobalVariable(name: "<&u8 as core::fmt::Debug>::{vtable}", scope: null, file: !2, type: !238, isLocal: true, isDefinition: true)
!238 = !DICompositeType(tag: DW_TAG_structure_type, name: "<&u8 as core::fmt::Debug>::{vtable_type}", file: !2, size: 128, align: 32, flags: DIFlagArtificial, elements: !239, vtableHolder: !244, templateParams: !21, identifier: "8ebe3e780ae6181d77c3deff7c4cc1e2")
!239 = !{!240, !241, !242, !243}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !238, file: !2, baseType: !6, size: 32, align: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !238, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !238, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !238, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !24, size: 32, align: 32, dwarfAddressSpace: 0)
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "<core::str::error::Utf8Error as core::error::Error>::{vtable}", scope: null, file: !2, type: !247, isLocal: true, isDefinition: true)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "<core::str::error::Utf8Error as core::error::Error>::{vtable_type}", file: !2, size: 352, align: 32, flags: DIFlagArtificial, elements: !248, vtableHolder: !260, templateParams: !21, identifier: "487e6a02c2a3ba68d07c46318debb3b6")
!248 = !{!249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !247, file: !2, baseType: !6, size: 32, align: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !247, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !247, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "__super_trait_ptr5", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 160)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "__method6", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "__method7", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 224)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "__method8", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 256)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "__method9", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 288)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "__method10", scope: !247, file: !2, baseType: !6, size: 32, align: 32, offset: 320)
!260 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Error", scope: !261, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !263, templateParams: !21, identifier: "4b4a5f597602ec9f4778ad8670e72da9")
!261 = !DINamespace(name: "error", scope: !262)
!262 = !DINamespace(name: "str", scope: !15)
!263 = !{!264, !265}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "valid_up_to", scope: !260, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagProtected)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "error_len", scope: !260, file: !2, baseType: !13, size: 16, align: 8, offset: 32, flags: DIFlagProtected)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "<alloc::string::String as core::fmt::Write>::{vtable}", scope: null, file: !2, type: !268, isLocal: true, isDefinition: true)
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "<alloc::string::String as core::fmt::Write>::{vtable_type}", file: !2, size: 192, align: 32, flags: DIFlagArtificial, elements: !269, vtableHolder: !178, templateParams: !21, identifier: "84bfa180edf17aad9748f510d90e2149")
!269 = !{!270, !271, !272, !273, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "drop_in_place", scope: !268, file: !2, baseType: !6, size: 32, align: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !268, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !268, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "__method3", scope: !268, file: !2, baseType: !6, size: 32, align: 32, offset: 96)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "__method4", scope: !268, file: !2, baseType: !6, size: 32, align: 32, offset: 128)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "__method5", scope: !268, file: !2, baseType: !6, size: 32, align: 32, offset: 160)
!276 = !{!"rustc version 1.92.0-nightly (6380899f3 2025-10-18)"}
!277 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !278, producer: "clang LLVM (rustc version 1.92.0-nightly (6380899f3 2025-10-18))", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !279, globals: !290, splitDebugInlining: false, nameTableKind: None)
!278 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/lib.rs/@/alloc.ffb8e4d6f182d685-cgu.0", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc")
!279 = !{!50, !280, !286}
!280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AssertKind", scope: !281, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagEnumClass, elements: !282)
!281 = !DINamespace(name: "panicking", scope: !15)
!282 = !{!283, !284, !285}
!283 = !DIEnumerator(name: "Eq", value: 0, isUnsigned: true)
!284 = !DIEnumerator(name: "Ne", value: 1, isUnsigned: true)
!285 = !DIEnumerator(name: "Match", value: 2, isUnsigned: true)
!286 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AllocInit", scope: !187, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagEnumClass, elements: !287)
!287 = !{!288, !289}
!288 = !DIEnumerator(name: "Uninitialized", value: 0, isUnsigned: true)
!289 = !DIEnumerator(name: "Zeroed", value: 1, isUnsigned: true)
!290 = !{!0, !30, !85, !94, !116, !129, !156, !219, !227, !236, !245, !266}
!291 = !{i32 7, !"Dwarf Version", i32 4}
!292 = !{i32 2, !"Debug Info Version", i32 3}
!293 = distinct !DISubprogram(name: "__rdl_alloc_error_handler", linkageName: "_RNvCsaKOfhLrNfTz_7___rustc25___rdl_alloc_error_handler", scope: !295, file: !294, line: 428, type: !296, scopeLine: 428, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !298)
!294 = !DIFile(filename: "src/alloc.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "be3434980e1d4fd44eed88225c1bb8c1")
!295 = !DINamespace(name: "__alloc_error_handler", scope: !213)
!296 = !DISubroutineType(types: !297)
!297 = !{null, !9, !9}
!298 = !{!299, !300, !301, !308, !382, !384}
!299 = !DILocalVariable(name: "size", arg: 1, scope: !293, file: !294, line: 428, type: !9)
!300 = !DILocalVariable(name: "_align", arg: 2, scope: !293, file: !294, line: 428, type: !9)
!301 = !DILocalVariable(name: "args", scope: !302, file: !294, line: 437, type: !305, align: 32)
!302 = !DILexicalBlockFile(scope: !303, file: !294, discriminator: 0)
!303 = distinct !DILexicalBlock(scope: !293, file: !304, line: 62, column: 38)
!304 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs", directory: "", checksumkind: CSK_MD5, checksum: "af6d9dd47250bbbd0daf63956ba674ac")
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize)", file: !2, size: 32, align: 32, elements: !306, templateParams: !21, identifier: "7e0e9b9ca28e88103fb99d7cecf418bb")
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !305, file: !2, baseType: !93, size: 32, align: 32)
!308 = !DILocalVariable(name: "args", scope: !309, file: !294, line: 437, type: !311, align: 32)
!309 = !DILexicalBlockFile(scope: !310, file: !294, discriminator: 0)
!310 = distinct !DILexicalBlock(scope: !303, file: !304, line: 62, column: 38)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, align: 32, elements: !152)
!312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Argument", scope: !313, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !315, templateParams: !21, identifier: "14dca3c1b1040cd8e8db0eaa112c8216")
!313 = !DINamespace(name: "rt", scope: !314)
!314 = !DINamespace(name: "fmt", scope: !15)
!315 = !{!316}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !312, file: !2, baseType: !317, size: 64, align: 32, flags: DIFlagPrivate)
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArgumentType", scope: !313, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !318, templateParams: !21, identifier: "fb1492950c21086074bab206592842dc")
!318 = !{!319}
!319 = !DICompositeType(tag: DW_TAG_variant_part, scope: !317, file: !2, size: 64, align: 32, elements: !320, templateParams: !21, identifier: "478e018ae6e38e2110d0d424641ab18", discriminator: !381)
!320 = !{!321, !377}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "Placeholder", scope: !319, file: !2, baseType: !322, size: 64, align: 32)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !317, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !323, templateParams: !21, identifier: "59bc7f5c5a99ab4be3c3f06b9190c327")
!323 = !{!324, !330, !372}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !322, file: !2, baseType: !325, size: 32, align: 32, flags: DIFlagPrivate)
!325 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<()>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !326, templateParams: !328, identifier: "d9f2bcb64deb934daba9b509aea4a83e")
!326 = !{!327}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !325, file: !2, baseType: !6, size: 32, align: 32, flags: DIFlagPrivate)
!328 = !{!329}
!329 = !DITemplateTypeParameter(name: "T", type: !7)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "formatter", scope: !322, file: !2, baseType: !331, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "unsafe fn(core::ptr::non_null::NonNull<()>, &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !332, size: 32, align: 32, dwarfAddressSpace: 0)
!332 = !DISubroutineType(types: !333)
!333 = !{!334, !325, !351}
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), core::fmt::Error>", scope: !335, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !336, templateParams: !21, identifier: "613ace46ae0c395d39c31f05d3934750")
!335 = !DINamespace(name: "result", scope: !15)
!336 = !{!337}
!337 = !DICompositeType(tag: DW_TAG_variant_part, scope: !334, file: !2, size: 8, align: 8, elements: !338, templateParams: !21, identifier: "2bd67c77928327a5a86e1d970227dbc3", discriminator: !350)
!338 = !{!339, !346}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !337, file: !2, baseType: !340, size: 8, align: 8, extraData: i8 0)
!340 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !334, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !341, templateParams: !343, identifier: "8e1fa5ea2cd8f77479a16f216aa53a42")
!341 = !{!342}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !340, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!343 = !{!329, !344}
!344 = !DITemplateTypeParameter(name: "E", type: !345)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", scope: !314, file: !2, align: 8, flags: DIFlagPublic, elements: !21, identifier: "cac4d2a6635a122844ffbe3b52a15933")
!346 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !337, file: !2, baseType: !347, size: 8, align: 8, extraData: i8 1)
!347 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !334, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !348, templateParams: !343, identifier: "bd8eb8fbb58ca24e2467a7f35c864471")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !347, file: !2, baseType: !345, align: 8, offset: 8, flags: DIFlagPublic)
!350 = !DIDerivedType(tag: DW_TAG_member, scope: !334, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagArtificial)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::Formatter", baseType: !352, size: 32, align: 32, dwarfAddressSpace: 0)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !314, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !353, templateParams: !21, identifier: "9c19c8ef0b5ae3cad350e741e841742c")
!353 = !{!354, !361}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !352, file: !2, baseType: !355, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!355 = !DICompositeType(tag: DW_TAG_structure_type, name: "FormattingOptions", scope: !314, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !356, templateParams: !21, identifier: "8e7d20540a73fe2190308d0618721e3e")
!356 = !{!357, !358, !360}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !355, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagPrivate)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !355, file: !2, baseType: !359, size: 16, align: 16, offset: 32, flags: DIFlagPrivate)
!359 = !DIBasicType(name: "u16", size: 16, encoding: DW_ATE_unsigned)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !355, file: !2, baseType: !359, size: 16, align: 16, offset: 48, flags: DIFlagPrivate)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !352, file: !2, baseType: !362, size: 64, align: 32, flags: DIFlagPrivate)
!362 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 64, align: 32, elements: !363, templateParams: !21, identifier: "ed1fc41b72305de4afb5dbb44887680d")
!363 = !{!364, !367}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !362, file: !2, baseType: !365, size: 32, align: 32)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32, align: 32, dwarfAddressSpace: 0)
!366 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Write", file: !2, align: 8, elements: !21, identifier: "3bd7022d6bc7a1bba9386a42dfa7db9d")
!367 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !362, file: !2, baseType: !368, size: 32, align: 32, offset: 32)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 6]", baseType: !369, size: 32, align: 32, dwarfAddressSpace: 0)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 192, align: 32, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 6, lowerBound: 0)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "_lifetime", scope: !322, file: !2, baseType: !373, align: 8, offset: 64, flags: DIFlagPrivate)
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&()>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !374, identifier: "e71ee38df7dbfccdae82d3411c10d5bc")
!374 = !{!375}
!375 = !DITemplateTypeParameter(name: "T", type: !376)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !7, size: 32, align: 32, dwarfAddressSpace: 0)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !319, file: !2, baseType: !378, size: 64, align: 32, extraData: i32 0)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !317, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !379, templateParams: !21, identifier: "bcc61db69ea5777ac138ac099ea396b2")
!379 = !{!380}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !378, file: !2, baseType: !359, size: 16, align: 16, offset: 32, flags: DIFlagPrivate)
!381 = !DIDerivedType(tag: DW_TAG_member, scope: !317, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!382 = !DILocalVariable(name: "args", scope: !383, file: !294, line: 440, type: !305, align: 32)
!383 = distinct !DILexicalBlock(scope: !293, file: !294, line: 440, column: 17)
!384 = !DILocalVariable(name: "args", scope: !385, file: !294, line: 440, type: !311, align: 32)
!385 = distinct !DILexicalBlock(scope: !383, file: !294, line: 440, column: 17)
!386 = !DILocation(line: 428, column: 45, scope: !293)
!387 = !DILocation(line: 428, column: 58, scope: !293)
!388 = !DILocation(line: 437, column: 13, scope: !309)
!389 = !DILocation(line: 440, column: 17, scope: !385)
!390 = !DILocation(line: 436, column: 21, scope: !293)
!391 = !DILocation(line: 436, column: 12, scope: !293)
!392 = !DILocation(line: 440, column: 17, scope: !293)
!393 = !DILocation(line: 440, column: 17, scope: !383)
!394 = !DILocation(line: 439, column: 13, scope: !293)
!395 = !DILocation(line: 437, column: 13, scope: !293)
!396 = !DILocation(line: 437, column: 13, scope: !302)
!397 = distinct !DISubprogram(name: "from", linkageName: "_ZN100_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$GT$4from17h4f0160485ae35353E", scope: !399, file: !398, line: 1087, type: !402, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !422)
!398 = !DIFile(filename: "src/ffi/c_str.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "a17ec52eeeed3b3092b7006f08d3decc")
!399 = !DINamespace(name: "{impl#35}", scope: !400)
!400 = !DINamespace(name: "c_str", scope: !401)
!401 = !DINamespace(name: "ffi", scope: !132)
!402 = !DISubroutineType(types: !403)
!403 = !{!404, !411}
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "CString", scope: !400, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !405, templateParams: !21, identifier: "9b7450f8744affb31c228f474471e82b")
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !404, file: !2, baseType: !407, size: 64, align: 32, flags: DIFlagPrivate)
!407 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[u8], alloc::alloc::Global>", file: !2, size: 64, align: 32, elements: !408, templateParams: !21, identifier: "d9d0e853f42d86aa8110bb5e43b30a7c")
!408 = !{!409, !410}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !407, file: !2, baseType: !127, size: 32, align: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !407, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!411 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::ffi::c_str::CStr", file: !2, size: 64, align: 32, elements: !412, templateParams: !21, identifier: "c03be6a46633f31421c60ac3a4bc5fd9")
!412 = !{!413, !421}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !411, file: !2, baseType: !414, size: 32, align: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 32, align: 32, dwarfAddressSpace: 0)
!415 = !DICompositeType(tag: DW_TAG_structure_type, name: "CStr", scope: !416, file: !2, align: 8, flags: DIFlagPublic, elements: !418, templateParams: !21, identifier: "c9957a8b471e83df39cbd61c617294c1")
!416 = !DINamespace(name: "c_str", scope: !417)
!417 = !DINamespace(name: "ffi", scope: !15)
!418 = !{!419}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !415, file: !2, baseType: !420, align: 8, flags: DIFlagPrivate)
!420 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !411, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!422 = !{!423}
!423 = !DILocalVariable(name: "s", arg: 1, scope: !397, file: !398, line: 1087, type: !411)
!424 = !DILocation(line: 1087, column: 13, scope: !397)
!425 = !DILocation(line: 1088, column: 11, scope: !397)
!426 = !DILocation(line: 1089, column: 6, scope: !397)
!427 = distinct !DISubprogram(name: "from_slice<u8>", linkageName: "_ZN101_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..boxed..convert..BoxFromSlice$LT$T$GT$$GT$10from_slice17h9febee8fa02ab093E", scope: !429, file: !428, line: 80, type: !430, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !436)
!428 = !DIFile(filename: "src/boxed/convert.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "2d92e67bacce44677a11ed76ea675a76")
!429 = !DINamespace(name: "{impl#3}", scope: !174)
!430 = !DISubroutineType(types: !431)
!431 = !{!407, !432}
!432 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 64, align: 32, elements: !433, templateParams: !21, identifier: "31681e0c10b314f1f33e38b2779acbb4")
!433 = !{!434, !435}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !432, file: !2, baseType: !127, size: 32, align: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !432, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!436 = !{!437, !438, !440}
!437 = !DILocalVariable(name: "slice", arg: 1, scope: !427, file: !428, line: 80, type: !432)
!438 = !DILocalVariable(name: "len", scope: !439, file: !428, line: 81, type: !9, align: 32)
!439 = distinct !DILexicalBlock(scope: !427, file: !428, line: 81, column: 9)
!440 = !DILocalVariable(name: "buf", scope: !441, file: !428, line: 82, type: !186, align: 32)
!441 = distinct !DILexicalBlock(scope: !439, file: !428, line: 82, column: 9)
!442 = !DILocation(line: 80, column: 19, scope: !427)
!443 = !DILocation(line: 82, column: 13, scope: !441)
!444 = !DILocation(line: 81, column: 19, scope: !427)
!445 = !DILocation(line: 81, column: 13, scope: !439)
!446 = !DILocation(line: 82, column: 19, scope: !439)
!447 = !DILocalVariable(name: "self", arg: 1, scope: !448, file: !449, line: 724, type: !432)
!448 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17he0c6527477e2ea09E", scope: !450, file: !449, line: 724, type: !452, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !454)
!449 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "63aedd801a9e6eae1eca1edc5c2217aa")
!450 = !DINamespace(name: "{impl#0}", scope: !451)
!451 = !DINamespace(name: "slice", scope: !15)
!452 = !DISubroutineType(types: !453)
!453 = !{!201, !432}
!454 = !{!447}
!455 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !456)
!456 = distinct !DILocation(line: 84, column: 44, scope: !441)
!457 = !DILocation(line: 84, column: 58, scope: !441)
!458 = !DILocalVariable(name: "src", arg: 1, scope: !459, file: !460, line: 526, type: !201)
!459 = distinct !DISubprogram(name: "copy_nonoverlapping<u8>", linkageName: "_ZN4core3ptr19copy_nonoverlapping17hb7a890eb633e1d85E", scope: !47, file: !460, line: 526, type: !461, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !464)
!460 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "8857c34524728cc5887872677b8e1917")
!461 = !DISubroutineType(types: !462)
!462 = !{null, !201, !463, !9}
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !24, size: 32, align: 32, dwarfAddressSpace: 0)
!464 = !{!458, !465, !466}
!465 = !DILocalVariable(name: "dst", arg: 2, scope: !459, file: !460, line: 526, type: !463)
!466 = !DILocalVariable(name: "count", arg: 3, scope: !459, file: !460, line: 526, type: !9)
!467 = !DILocation(line: 526, column: 44, scope: !459, inlinedAt: !468)
!468 = distinct !DILocation(line: 84, column: 13, scope: !441)
!469 = !DILocation(line: 526, column: 59, scope: !459, inlinedAt: !468)
!470 = !DILocation(line: 526, column: 72, scope: !459, inlinedAt: !468)
!471 = !DILocation(line: 77, column: 35, scope: !472, inlinedAt: !468)
!472 = !DILexicalBlockFile(scope: !459, file: !473, discriminator: 0)
!473 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ub_checks.rs", directory: "", checksumkind: CSK_MD5, checksum: "41b3943b2b7dc8c218ee37ead81b317d")
!474 = !DILocation(line: 78, column: 17, scope: !472, inlinedAt: !468)
!475 = !DILocation(line: 547, column: 14, scope: !459, inlinedAt: !468)
!476 = !DILocation(line: 85, column: 13, scope: !441)
!477 = !DILocation(line: 85, column: 17, scope: !441)
!478 = !DILocation(line: 85, column: 39, scope: !441)
!479 = !DILocation(line: 87, column: 6, scope: !427)
!480 = distinct !DISubprogram(name: "fold<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h4241de272d72337eE", scope: !482, file: !481, line: 124, type: !486, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !572, retainedNodes: !568)
!481 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/map.rs", directory: "", checksumkind: CSK_MD5, checksum: "47fd4c3c8424e034238ec6bb5a169812")
!482 = !DINamespace(name: "{impl#2}", scope: !483)
!483 = !DINamespace(name: "map", scope: !484)
!484 = !DINamespace(name: "adapters", scope: !485)
!485 = !DINamespace(name: "iter", scope: !15)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !488, !7, !554}
!488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", scope: !483, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !489, templateParams: !551, identifier: "4c78bf6fc8f32f20ce250eed9b8673b5")
!489 = !{!490, !547}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !488, file: !2, baseType: !491, size: 96, align: 32, flags: DIFlagProtected)
!491 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", scope: !492, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !494, templateParams: !545, identifier: "7a05912347d35df6c4c61fe85787afe8")
!492 = !DINamespace(name: "decode", scope: !493)
!493 = !DINamespace(name: "char", scope: !15)
!494 = !{!495, !531}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !491, file: !2, baseType: !496, size: 64, align: 32, offset: 32, flags: DIFlagPrivate)
!496 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", scope: !483, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !497, templateParams: !528, identifier: "6f274c949efeb3b14a6b6a0a723d15d9")
!497 = !{!498, !524}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !496, file: !2, baseType: !499, size: 64, align: 32, flags: DIFlagProtected)
!499 = !DICompositeType(tag: DW_TAG_structure_type, name: "Copied<core::slice::iter::Iter<[u8; 2]>>", scope: !500, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !501, templateParams: !522, identifier: "d6381a0b815cf19f262f9a3559e28b6d")
!500 = !DINamespace(name: "copied", scope: !484)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !499, file: !2, baseType: !503, size: 64, align: 32, flags: DIFlagPrivate)
!503 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<[u8; 2]>", scope: !504, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !505, templateParams: !514, identifier: "b84ebd21ad2ae4b7c5c1503f1c180788")
!504 = !DINamespace(name: "iter", scope: !451)
!505 = !{!506, !516, !517}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !503, file: !2, baseType: !507, size: 32, align: 32, flags: DIFlagPrivate)
!507 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8; 2]>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !508, templateParams: !514, identifier: "58bff39aa01b89b1523857f77942a32c")
!508 = !{!509}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !507, file: !2, baseType: !510, size: 32, align: 32, flags: DIFlagPrivate)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 2]", baseType: !511, size: 32, align: 32, dwarfAddressSpace: 0)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 16, align: 8, elements: !512)
!512 = !{!513}
!513 = !DISubrange(count: 2, lowerBound: 0)
!514 = !{!515}
!515 = !DITemplateTypeParameter(name: "T", type: !511)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !503, file: !2, baseType: !510, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !503, file: !2, baseType: !518, align: 8, offset: 64, flags: DIFlagPrivate)
!518 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&[u8; 2]>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !519, identifier: "20f35517008df7529bdacb4feedce94c")
!519 = !{!520}
!520 = !DITemplateTypeParameter(name: "T", type: !521)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[u8; 2]", baseType: !511, size: 32, align: 32, dwarfAddressSpace: 0)
!522 = !{!523}
!523 = !DITemplateTypeParameter(name: "I", type: !503)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !496, file: !2, baseType: !525, align: 8, offset: 64, flags: DIFlagPrivate)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn([u8; 2]) -> u16", baseType: !526, align: 8, dwarfAddressSpace: 0)
!526 = !DISubroutineType(types: !527)
!527 = !{!359, !511}
!528 = !{!529, !530}
!529 = !DITemplateTypeParameter(name: "I", type: !499)
!530 = !DITemplateTypeParameter(name: "F", type: !525)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !491, file: !2, baseType: !532, size: 32, align: 16, flags: DIFlagPrivate)
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u16>", scope: !14, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !533, templateParams: !21, identifier: "788ac321be6b41eb164b1c33155d479d")
!533 = !{!534}
!534 = !DICompositeType(tag: DW_TAG_variant_part, scope: !532, file: !2, size: 32, align: 16, elements: !535, templateParams: !21, identifier: "c650dee40607e51a88eacd75507e7f25", discriminator: !544)
!535 = !{!536, !540}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !534, file: !2, baseType: !537, size: 32, align: 16, extraData: i16 0)
!537 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !532, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !21, templateParams: !538, identifier: "f6e93980d093edf2aa141e5fb86db594")
!538 = !{!539}
!539 = !DITemplateTypeParameter(name: "T", type: !359)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !534, file: !2, baseType: !541, size: 32, align: 16, extraData: i16 1)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !532, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !542, templateParams: !538, identifier: "f4b1ea597c301b34cb7b9e00a4bf776")
!542 = !{!543}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !541, file: !2, baseType: !359, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !532, file: !2, baseType: !359, size: 16, align: 16, flags: DIFlagArtificial)
!545 = !{!546}
!546 = !DITemplateTypeParameter(name: "I", type: !496)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !488, file: !2, baseType: !548, align: 8, offset: 96, flags: DIFlagPrivate)
!548 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !549, file: !2, align: 8, elements: !21, identifier: "139bb1d0c8924dbd456c240187148337")
!549 = !DINamespace(name: "from_utf16be_lossy", scope: !550)
!550 = !DINamespace(name: "{impl#0}", scope: !179)
!551 = !{!552, !553}
!552 = !DITemplateTypeParameter(name: "I", type: !491)
!553 = !DITemplateTypeParameter(name: "F", type: !548)
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", scope: !555, file: !2, size: 32, align: 32, elements: !560, templateParams: !21, identifier: "32474b69b09444ada841c3c92cca0174")
!555 = !DINamespace(name: "call", scope: !556)
!556 = !DINamespace(name: "for_each", scope: !557)
!557 = !DINamespace(name: "Iterator", scope: !558)
!558 = !DINamespace(name: "iterator", scope: !559)
!559 = !DINamespace(name: "traits", scope: !485)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !554, file: !2, baseType: !562, size: 32, align: 32)
!562 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", scope: !563, file: !2, size: 32, align: 32, elements: !565, templateParams: !21, identifier: "82364d90b9a84a6fc26f1c402a5b9f1d")
!563 = !DINamespace(name: "extend", scope: !564)
!564 = !DINamespace(name: "{impl#13}", scope: !179)
!565 = !{!566}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !562, file: !2, baseType: !567, size: 32, align: 32)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::String", baseType: !178, size: 32, align: 32, dwarfAddressSpace: 0)
!568 = !{!569, !570, !571}
!569 = !DILocalVariable(name: "self", arg: 1, scope: !480, file: !481, line: 124, type: !488)
!570 = !DILocalVariable(name: "init", arg: 2, scope: !480, file: !481, line: 124, type: !7)
!571 = !DILocalVariable(name: "g", arg: 3, scope: !480, file: !481, line: 124, type: !554)
!572 = !{!573, !552, !553, !575, !576}
!573 = !DITemplateTypeParameter(name: "B", type: !574)
!574 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_UTF)
!575 = !DITemplateTypeParameter(name: "Acc", type: !7)
!576 = !DITemplateTypeParameter(name: "G", type: !554)
!577 = !DILocation(line: 124, column: 21, scope: !480)
!578 = !DILocation(line: 124, column: 27, scope: !480)
!579 = !DILocation(line: 124, column: 38, scope: !480)
!580 = !DILocation(line: 128, column: 9, scope: !480)
!581 = !DILocation(line: 128, column: 30, scope: !480)
!582 = !DILocation(line: 128, column: 19, scope: !480)
!583 = !DILocation(line: 129, column: 6, scope: !480)
!584 = distinct !DISubprogram(name: "fold<usize, core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, usize, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h45d345b8de3281a9E", scope: !482, file: !481, line: 124, type: !585, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !620, retainedNodes: !616)
!585 = !DISubroutineType(types: !586)
!586 = !{!9, !587, !9, !612}
!587 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", scope: !483, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !588, templateParams: !609, identifier: "18d06d169b8baef048303647f1cd855c")
!588 = !{!589, !605}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !587, file: !2, baseType: !590, size: 64, align: 32, flags: DIFlagProtected)
!590 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<&str>", scope: !504, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !591, templateParams: !597, identifier: "5968ceac63dffa00195164e3d06dd4ca")
!591 = !{!592, !599, !600}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !590, file: !2, baseType: !593, size: 32, align: 32, flags: DIFlagPrivate)
!593 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<&str>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !594, templateParams: !597, identifier: "6967004d016cd3f2103a65d4acc4cc28")
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !593, file: !2, baseType: !596, size: 32, align: 32, flags: DIFlagPrivate)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const &str", baseType: !124, size: 32, align: 32, dwarfAddressSpace: 0)
!597 = !{!598}
!598 = !DITemplateTypeParameter(name: "T", type: !124)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !590, file: !2, baseType: !596, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !590, file: !2, baseType: !601, align: 8, offset: 64, flags: DIFlagPrivate)
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&&str>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !602, identifier: "c30ab11e4de521a5b950ec3d9d9216ed")
!602 = !{!603}
!603 = !DITemplateTypeParameter(name: "T", type: !604)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !124, size: 32, align: 32, dwarfAddressSpace: 0)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !587, file: !2, baseType: !606, align: 8, offset: 64, flags: DIFlagPrivate)
!606 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !607, file: !2, align: 8, elements: !21, identifier: "8be5c7d5f52339ca9565b2b80002ae45")
!607 = !DINamespace(name: "estimated_capacity", scope: !608)
!608 = !DINamespace(name: "{impl#4}", scope: !314)
!609 = !{!610, !611}
!610 = !DITemplateTypeParameter(name: "I", type: !590)
!611 = !DITemplateTypeParameter(name: "F", type: !606)
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", scope: !613, file: !2, align: 8, elements: !21, identifier: "c802dc16cadbcb1bde577b07c8ac913")
!613 = !DINamespace(name: "sum", scope: !614)
!614 = !DINamespace(name: "{impl#48}", scope: !615)
!615 = !DINamespace(name: "accum", scope: !559)
!616 = !{!617, !618, !619}
!617 = !DILocalVariable(name: "self", arg: 1, scope: !584, file: !481, line: 124, type: !587)
!618 = !DILocalVariable(name: "init", arg: 2, scope: !584, file: !481, line: 124, type: !9)
!619 = !DILocalVariable(name: "g", arg: 3, scope: !584, file: !481, line: 124, type: !612)
!620 = !{!621, !610, !611, !622, !623}
!621 = !DITemplateTypeParameter(name: "B", type: !9)
!622 = !DITemplateTypeParameter(name: "Acc", type: !9)
!623 = !DITemplateTypeParameter(name: "G", type: !612)
!624 = !DILocation(line: 124, column: 21, scope: !584)
!625 = !DILocation(line: 124, column: 27, scope: !584)
!626 = !DILocation(line: 124, column: 38, scope: !584)
!627 = !DILocation(line: 128, column: 30, scope: !584)
!628 = !DILocation(line: 128, column: 19, scope: !584)
!629 = !DILocation(line: 129, column: 6, scope: !584)
!630 = distinct !DISubprogram(name: "fold<u8, core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}, u8, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h7f4571960d69e0faE", scope: !482, file: !481, line: 124, type: !631, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !666, retainedNodes: !662)
!631 = !DISubroutineType(types: !632)
!632 = !{!24, !633, !24, !659}
!633 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>", scope: !483, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !634, templateParams: !656, identifier: "581650ec2a9efbf71a33bdad4fe63815")
!634 = !{!635, !652}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !633, file: !2, baseType: !636, size: 64, align: 32, flags: DIFlagProtected)
!636 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<bool>", scope: !504, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !637, templateParams: !644, identifier: "67f2556cddc427b4bb9357a668bf19b")
!637 = !{!638, !646, !647}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !636, file: !2, baseType: !639, size: 32, align: 32, flags: DIFlagPrivate)
!639 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<bool>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !640, templateParams: !644, identifier: "1bab9aba231e27c281c57f6f4dbfb4a9")
!640 = !{!641}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !639, file: !2, baseType: !642, size: 32, align: 32, flags: DIFlagPrivate)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const bool", baseType: !643, size: 32, align: 32, dwarfAddressSpace: 0)
!643 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!644 = !{!645}
!645 = !DITemplateTypeParameter(name: "T", type: !643)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !636, file: !2, baseType: !642, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !636, file: !2, baseType: !648, align: 8, offset: 64, flags: DIFlagPrivate)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&bool>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !649, identifier: "1a1a3e844cfaf1bdf5b3b4947dc8f1e6")
!649 = !{!650}
!650 = !DITemplateTypeParameter(name: "T", type: !651)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&bool", baseType: !643, size: 32, align: 32, dwarfAddressSpace: 0)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !633, file: !2, baseType: !653, align: 8, offset: 64, flags: DIFlagPrivate)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !654, file: !2, align: 8, elements: !21, identifier: "70ff25bbdb0e60ccef51ce99143352e4")
!654 = !DINamespace(name: "convert_while_ascii", scope: !655)
!655 = !DINamespace(name: "str", scope: !132)
!656 = !{!657, !658}
!657 = !DITemplateTypeParameter(name: "I", type: !636)
!658 = !DITemplateTypeParameter(name: "F", type: !653)
!659 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", scope: !660, file: !2, align: 8, elements: !21, identifier: "a283d546dea1db07bc032eae2e960508")
!660 = !DINamespace(name: "sum", scope: !661)
!661 = !DINamespace(name: "{impl#28}", scope: !615)
!662 = !{!663, !664, !665}
!663 = !DILocalVariable(name: "self", arg: 1, scope: !630, file: !481, line: 124, type: !633)
!664 = !DILocalVariable(name: "init", arg: 2, scope: !630, file: !481, line: 124, type: !24)
!665 = !DILocalVariable(name: "g", arg: 3, scope: !630, file: !481, line: 124, type: !659)
!666 = !{!667, !657, !658, !668, !669}
!667 = !DITemplateTypeParameter(name: "B", type: !24)
!668 = !DITemplateTypeParameter(name: "Acc", type: !24)
!669 = !DITemplateTypeParameter(name: "G", type: !659)
!670 = !DILocation(line: 124, column: 21, scope: !630)
!671 = !DILocation(line: 124, column: 27, scope: !630)
!672 = !DILocation(line: 124, column: 38, scope: !630)
!673 = !DILocation(line: 128, column: 30, scope: !630)
!674 = !DILocation(line: 128, column: 19, scope: !630)
!675 = !DILocation(line: 129, column: 6, scope: !630)
!676 = distinct !DISubprogram(name: "fold<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9b95bb9acbc2b2d8E", scope: !482, file: !481, line: 124, type: !677, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !708, retainedNodes: !704)
!677 = !DISubroutineType(types: !678)
!678 = !{null, !679, !7, !698}
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", scope: !483, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !680, templateParams: !695, identifier: "d34388f742a2e2c5395dd0eb1b75f5a8")
!680 = !{!681, !692}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !679, file: !2, baseType: !682, size: 96, align: 32, flags: DIFlagProtected)
!682 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", scope: !492, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !683, templateParams: !690, identifier: "33f8b74ee8e1845c49dea92279aad228")
!683 = !{!684, !689}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !682, file: !2, baseType: !685, size: 64, align: 32, offset: 32, flags: DIFlagPrivate)
!685 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", scope: !483, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !686, templateParams: !528, identifier: "e45b04c798a8e1e854e6218f0ef6f5af")
!686 = !{!687, !688}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !685, file: !2, baseType: !499, size: 64, align: 32, flags: DIFlagProtected)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !685, file: !2, baseType: !525, align: 8, offset: 64, flags: DIFlagPrivate)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !682, file: !2, baseType: !532, size: 32, align: 16, flags: DIFlagPrivate)
!690 = !{!691}
!691 = !DITemplateTypeParameter(name: "I", type: !685)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !679, file: !2, baseType: !693, align: 8, offset: 96, flags: DIFlagPrivate)
!693 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !694, file: !2, align: 8, elements: !21, identifier: "d9a377dfc477106fd00c1a8d959806d3")
!694 = !DINamespace(name: "from_utf16le_lossy", scope: !550)
!695 = !{!696, !697}
!696 = !DITemplateTypeParameter(name: "I", type: !682)
!697 = !DITemplateTypeParameter(name: "F", type: !693)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", scope: !555, file: !2, size: 32, align: 32, elements: !699, templateParams: !21, identifier: "2f469ae18836041d6661f74d1a6ee063")
!699 = !{!700}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !698, file: !2, baseType: !701, size: 32, align: 32)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", scope: !563, file: !2, size: 32, align: 32, elements: !702, templateParams: !21, identifier: "ed50481129f3100ebca0ff30b4833b36")
!702 = !{!703}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !701, file: !2, baseType: !567, size: 32, align: 32)
!704 = !{!705, !706, !707}
!705 = !DILocalVariable(name: "self", arg: 1, scope: !676, file: !481, line: 124, type: !679)
!706 = !DILocalVariable(name: "init", arg: 2, scope: !676, file: !481, line: 124, type: !7)
!707 = !DILocalVariable(name: "g", arg: 3, scope: !676, file: !481, line: 124, type: !698)
!708 = !{!573, !696, !697, !575, !709}
!709 = !DITemplateTypeParameter(name: "G", type: !698)
!710 = !DILocation(line: 124, column: 21, scope: !676)
!711 = !DILocation(line: 124, column: 27, scope: !676)
!712 = !DILocation(line: 124, column: 38, scope: !676)
!713 = !DILocation(line: 128, column: 9, scope: !676)
!714 = !DILocation(line: 128, column: 30, scope: !676)
!715 = !DILocation(line: 128, column: 19, scope: !676)
!716 = !DILocation(line: 129, column: 6, scope: !676)
!717 = distinct !DISubprogram(name: "fold<char, core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9cd58454b5701ea2E", scope: !482, file: !481, line: 124, type: !718, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !764, retainedNodes: !760)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !720, !7, !754}
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", scope: !483, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !721, templateParams: !751, identifier: "d6d97b0bed94a69b881d96f16352ea05")
!721 = !{!722, !748}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !720, file: !2, baseType: !723, size: 96, align: 32, flags: DIFlagProtected)
!723 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", scope: !492, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !724, templateParams: !746, identifier: "9ae4124a39f2598ec6c59118e91934c8")
!724 = !{!725, !745}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !723, file: !2, baseType: !726, size: 64, align: 32, offset: 32, flags: DIFlagPrivate)
!726 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloned<core::slice::iter::Iter<u16>>", scope: !727, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !728, templateParams: !743, identifier: "82132c9987f36f336b3e264b7e4812d0")
!727 = !DINamespace(name: "cloned", scope: !484)
!728 = !{!729}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !726, file: !2, baseType: !730, size: 64, align: 32, flags: DIFlagPrivate)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u16>", scope: !504, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !731, templateParams: !538, identifier: "2a3d3c946425c23b918e712ef529b62d")
!731 = !{!732, !737, !738}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !730, file: !2, baseType: !733, size: 32, align: 32, flags: DIFlagPrivate)
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u16>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !734, templateParams: !538, identifier: "74706ff21a163d5b1876036a150af747")
!734 = !{!735}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !733, file: !2, baseType: !736, size: 32, align: 32, flags: DIFlagPrivate)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u16", baseType: !359, size: 32, align: 32, dwarfAddressSpace: 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !730, file: !2, baseType: !736, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !730, file: !2, baseType: !739, align: 8, offset: 64, flags: DIFlagPrivate)
!739 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u16>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !740, identifier: "b9cff2cfc2d8a22e1813a29b8ae29804")
!740 = !{!741}
!741 = !DITemplateTypeParameter(name: "T", type: !742)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u16", baseType: !359, size: 32, align: 32, dwarfAddressSpace: 0)
!743 = !{!744}
!744 = !DITemplateTypeParameter(name: "I", type: !730)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !723, file: !2, baseType: !532, size: 32, align: 16, flags: DIFlagPrivate)
!746 = !{!747}
!747 = !DITemplateTypeParameter(name: "I", type: !726)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !720, file: !2, baseType: !749, align: 8, offset: 96, flags: DIFlagPrivate)
!749 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !750, file: !2, align: 8, elements: !21, identifier: "13670d7db0ebe6c75dd5a1aa65919403")
!750 = !DINamespace(name: "from_utf16_lossy", scope: !550)
!751 = !{!752, !753}
!752 = !DITemplateTypeParameter(name: "I", type: !723)
!753 = !DITemplateTypeParameter(name: "F", type: !749)
!754 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", scope: !555, file: !2, size: 32, align: 32, elements: !755, templateParams: !21, identifier: "463a3df32ffd5154de1cc8d916f37231")
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !754, file: !2, baseType: !757, size: 32, align: 32)
!757 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", scope: !563, file: !2, size: 32, align: 32, elements: !758, templateParams: !21, identifier: "dbad5dcb44e040349cd497dd08e48b0a")
!758 = !{!759}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !757, file: !2, baseType: !567, size: 32, align: 32)
!760 = !{!761, !762, !763}
!761 = !DILocalVariable(name: "self", arg: 1, scope: !717, file: !481, line: 124, type: !720)
!762 = !DILocalVariable(name: "init", arg: 2, scope: !717, file: !481, line: 124, type: !7)
!763 = !DILocalVariable(name: "g", arg: 3, scope: !717, file: !481, line: 124, type: !754)
!764 = !{!573, !752, !753, !575, !765}
!765 = !DITemplateTypeParameter(name: "G", type: !754)
!766 = !DILocation(line: 124, column: 21, scope: !717)
!767 = !DILocation(line: 124, column: 27, scope: !717)
!768 = !DILocation(line: 124, column: 38, scope: !717)
!769 = !DILocation(line: 128, column: 9, scope: !717)
!770 = !DILocation(line: 128, column: 30, scope: !717)
!771 = !DILocation(line: 128, column: 19, scope: !717)
!772 = !DILocation(line: 129, column: 6, scope: !717)
!773 = distinct !DISubprogram(name: "next<u16, core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4efad3714318d8aeE", scope: !482, file: !481, line: 106, type: !774, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !779, retainedNodes: !777)
!774 = !DISubroutineType(types: !775)
!775 = !{!532, !776}
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", baseType: !496, size: 32, align: 32, dwarfAddressSpace: 0)
!777 = !{!778}
!778 = !DILocalVariable(name: "self", arg: 1, scope: !773, file: !481, line: 106, type: !776)
!779 = !{!780, !529, !530}
!780 = !DITemplateTypeParameter(name: "B", type: !359)
!781 = !DILocation(line: 106, column: 13, scope: !773)
!782 = !DILocation(line: 107, column: 19, scope: !773)
!783 = !DILocation(line: 107, column: 30, scope: !773)
!784 = !DILocation(line: 107, column: 9, scope: !773)
!785 = !DILocation(line: 107, column: 26, scope: !773)
!786 = !DILocation(line: 108, column: 6, scope: !773)
!787 = distinct !DISubprogram(name: "next<u16, core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf2081ae1bb7222a7E", scope: !482, file: !481, line: 106, type: !788, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !779, retainedNodes: !791)
!788 = !DISubroutineType(types: !789)
!789 = !{!532, !790}
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", baseType: !685, size: 32, align: 32, dwarfAddressSpace: 0)
!791 = !{!792}
!792 = !DILocalVariable(name: "self", arg: 1, scope: !787, file: !481, line: 106, type: !790)
!793 = !DILocation(line: 106, column: 13, scope: !787)
!794 = !DILocation(line: 107, column: 19, scope: !787)
!795 = !DILocation(line: 107, column: 30, scope: !787)
!796 = !DILocation(line: 107, column: 9, scope: !787)
!797 = !DILocation(line: 107, column: 26, scope: !787)
!798 = !DILocation(line: 108, column: 6, scope: !787)
!799 = distinct !DISubprogram(name: "size_hint<u16, core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h382fcde1af476226E", scope: !482, file: !481, line: 111, type: !800, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !779, retainedNodes: !807)
!800 = !DISubroutineType(types: !801)
!801 = !{!802, !806}
!802 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 96, align: 32, elements: !803, templateParams: !21, identifier: "7ece7fed19dbe5ef878c4a231d971688")
!803 = !{!804, !805}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !802, file: !2, baseType: !9, size: 32, align: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !802, file: !2, baseType: !103, size: 64, align: 32, offset: 32)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", baseType: !685, size: 32, align: 32, dwarfAddressSpace: 0)
!807 = !{!808}
!808 = !DILocalVariable(name: "self", arg: 1, scope: !799, file: !481, line: 111, type: !806)
!809 = !DILocation(line: 111, column: 18, scope: !799)
!810 = !DILocation(line: 112, column: 19, scope: !799)
!811 = !DILocation(line: 113, column: 6, scope: !799)
!812 = distinct !DISubprogram(name: "size_hint<char, core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49cdf9f6e3eb2dc6E", scope: !482, file: !481, line: 111, type: !813, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !818, retainedNodes: !816)
!813 = !DISubroutineType(types: !814)
!814 = !{!802, !815}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", baseType: !720, size: 32, align: 32, dwarfAddressSpace: 0)
!816 = !{!817}
!817 = !DILocalVariable(name: "self", arg: 1, scope: !812, file: !481, line: 111, type: !815)
!818 = !{!573, !752, !753}
!819 = !DILocation(line: 111, column: 18, scope: !812)
!820 = !DILocation(line: 112, column: 19, scope: !812)
!821 = !DILocation(line: 113, column: 6, scope: !812)
!822 = distinct !DISubprogram(name: "size_hint<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h53a6dc5bd5e417f1E", scope: !482, file: !481, line: 111, type: !823, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !828, retainedNodes: !826)
!823 = !DISubroutineType(types: !824)
!824 = !{!802, !825}
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", baseType: !488, size: 32, align: 32, dwarfAddressSpace: 0)
!826 = !{!827}
!827 = !DILocalVariable(name: "self", arg: 1, scope: !822, file: !481, line: 111, type: !825)
!828 = !{!573, !552, !553}
!829 = !DILocation(line: 111, column: 18, scope: !822)
!830 = !DILocation(line: 112, column: 19, scope: !822)
!831 = !DILocation(line: 113, column: 6, scope: !822)
!832 = distinct !DISubprogram(name: "size_hint<u16, core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h74c964c242110fdaE", scope: !482, file: !481, line: 111, type: !833, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !779, retainedNodes: !836)
!833 = !DISubroutineType(types: !834)
!834 = !{!802, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", baseType: !496, size: 32, align: 32, dwarfAddressSpace: 0)
!836 = !{!837}
!837 = !DILocalVariable(name: "self", arg: 1, scope: !832, file: !481, line: 111, type: !835)
!838 = !DILocation(line: 111, column: 18, scope: !832)
!839 = !DILocation(line: 112, column: 19, scope: !832)
!840 = !DILocation(line: 113, column: 6, scope: !832)
!841 = distinct !DISubprogram(name: "size_hint<char, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h89b22289d0fc54dcE", scope: !482, file: !481, line: 111, type: !842, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !847, retainedNodes: !845)
!842 = !DISubroutineType(types: !843)
!843 = !{!802, !844}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", baseType: !679, size: 32, align: 32, dwarfAddressSpace: 0)
!845 = !{!846}
!846 = !DILocalVariable(name: "self", arg: 1, scope: !841, file: !481, line: 111, type: !844)
!847 = !{!573, !696, !697}
!848 = !DILocation(line: 111, column: 18, scope: !841)
!849 = !DILocation(line: 112, column: 19, scope: !841)
!850 = !DILocation(line: 113, column: 6, scope: !841)
!851 = distinct !DISubprogram(name: "size_hint<u8, alloc::alloc::Global>", linkageName: "_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hcbf8eb201d7f87d2E", scope: !853, file: !852, line: 229, type: !855, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !873)
!852 = !DIFile(filename: "src/vec/into_iter.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "a62aa168faaad8031032ab1ad0222556")
!853 = !DINamespace(name: "{impl#5}", scope: !854)
!854 = !DINamespace(name: "into_iter", scope: !183)
!855 = !DISubroutineType(types: !856)
!856 = !{!802, !857}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::into_iter::IntoIter<u8, alloc::alloc::Global>", baseType: !858, size: 32, align: 32, dwarfAddressSpace: 0)
!858 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoIter<u8, alloc::alloc::Global>", scope: !854, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !859, templateParams: !217, identifier: "bac115eda391f5807576a87922e4b211")
!859 = !{!860, !861, !862, !863, !871, !872}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !858, file: !2, baseType: !197, size: 32, align: 32, flags: DIFlagProtected)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !858, file: !2, baseType: !203, align: 8, offset: 128, flags: DIFlagProtected)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !858, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagProtected)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !858, file: !2, baseType: !864, align: 8, offset: 128, flags: DIFlagProtected)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::alloc::Global>", scope: !865, file: !2, align: 8, flags: DIFlagPublic, elements: !867, templateParams: !869, identifier: "3dc66121399937a8871e9766485561d8")
!865 = !DINamespace(name: "manually_drop", scope: !866)
!866 = !DINamespace(name: "mem", scope: !15)
!867 = !{!868}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !864, file: !2, baseType: !212, align: 8, flags: DIFlagPrivate)
!869 = !{!870}
!870 = !DITemplateTypeParameter(name: "T", type: !212)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !858, file: !2, baseType: !197, size: 32, align: 32, offset: 32, flags: DIFlagProtected)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !858, file: !2, baseType: !201, size: 32, align: 32, offset: 96, flags: DIFlagProtected)
!873 = !{!874, !875}
!874 = !DILocalVariable(name: "self", arg: 1, scope: !851, file: !852, line: 229, type: !857)
!875 = !DILocalVariable(name: "exact", scope: !876, file: !852, line: 230, type: !9, align: 32)
!876 = distinct !DILexicalBlock(scope: !851, file: !852, line: 230, column: 9)
!877 = !DILocation(line: 229, column: 18, scope: !851)
!878 = !DILocation(line: 230, column: 13, scope: !876)
!879 = !DILocation(line: 230, column: 24, scope: !851)
!880 = !DILocation(line: 28, column: 20, scope: !851)
!881 = !DILocation(line: 28, column: 18, scope: !851)
!882 = !DILocation(line: 233, column: 66, scope: !851)
!883 = !DILocation(line: 233, column: 45, scope: !851)
!884 = !DILocation(line: 235, column: 10, scope: !876)
!885 = !DILocation(line: 235, column: 22, scope: !876)
!886 = !DILocation(line: 235, column: 9, scope: !876)
!887 = !DILocation(line: 236, column: 6, scope: !851)
!888 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48e6eee6f1ad3442E", scope: !890, file: !889, line: 40, type: !891, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !896, retainedNodes: !894)
!889 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/cloned.rs", directory: "", checksumkind: CSK_MD5, checksum: "bfed33096282515437a01f48265c2199")
!890 = !DINamespace(name: "{impl#1}", scope: !727)
!891 = !DISubroutineType(types: !892)
!892 = !{!532, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>", baseType: !726, size: 32, align: 32, dwarfAddressSpace: 0)
!894 = !{!895}
!895 = !DILocalVariable(name: "self", arg: 1, scope: !888, file: !889, line: 40, type: !893)
!896 = !{!744, !539}
!897 = !DILocation(line: 40, column: 13, scope: !888)
!898 = !DILocation(line: 41, column: 17, scope: !888)
!899 = !DILocation(line: 41, column: 24, scope: !888)
!900 = !DILocation(line: 42, column: 6, scope: !888)
!901 = distinct !DISubprogram(name: "size_hint<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN104_$LT$core..iter..adapters..cloned..Cloned$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h8184a2c9dc96cb9eE", scope: !890, file: !889, line: 44, type: !902, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !896, retainedNodes: !905)
!902 = !DISubroutineType(types: !903)
!903 = !{!802, !904}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>", baseType: !726, size: 32, align: 32, dwarfAddressSpace: 0)
!905 = !{!906}
!906 = !DILocalVariable(name: "self", arg: 1, scope: !901, file: !889, line: 44, type: !904)
!907 = !DILocation(line: 44, column: 18, scope: !901)
!908 = !DILocation(line: 45, column: 17, scope: !901)
!909 = !DILocation(line: 46, column: 6, scope: !901)
!910 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<[u8; 2]>, [u8; 2]>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h80c70d7ff5437ee7E", scope: !912, file: !911, line: 45, type: !913, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !929, retainedNodes: !927)
!911 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/copied.rs", directory: "", checksumkind: CSK_MD5, checksum: "8a783814f88d0c75358355976aa6c8a1")
!912 = !DINamespace(name: "{impl#1}", scope: !500)
!913 = !DISubroutineType(types: !914)
!914 = !{!915, !926}
!915 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<[u8; 2]>", scope: !14, file: !2, size: 24, align: 8, flags: DIFlagPublic, elements: !916, templateParams: !21, identifier: "2405ddadb4a481ca1955fc6cfb6379f9")
!916 = !{!917}
!917 = !DICompositeType(tag: DW_TAG_variant_part, scope: !915, file: !2, size: 24, align: 8, elements: !918, templateParams: !21, identifier: "4569bbc6e72be739d73c7cb3e97741f9", discriminator: !925)
!918 = !{!919, !921}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !917, file: !2, baseType: !920, size: 24, align: 8, extraData: i8 0)
!920 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !915, file: !2, size: 24, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !514, identifier: "32bcb85544b451be406d4d18fa0a075b")
!921 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !917, file: !2, baseType: !922, size: 24, align: 8, extraData: i8 1)
!922 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !915, file: !2, size: 24, align: 8, flags: DIFlagPublic, elements: !923, templateParams: !514, identifier: "70fc36c140dd1a02d150464cc475ee49")
!923 = !{!924}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !922, file: !2, baseType: !511, size: 16, align: 8, offset: 8, flags: DIFlagPublic)
!925 = !DIDerivedType(tag: DW_TAG_member, scope: !915, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagArtificial)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>", baseType: !499, size: 32, align: 32, dwarfAddressSpace: 0)
!927 = !{!928}
!928 = !DILocalVariable(name: "self", arg: 1, scope: !910, file: !911, line: 45, type: !926)
!929 = !{!523, !515}
!930 = !DILocation(line: 45, column: 13, scope: !910)
!931 = !DILocation(line: 46, column: 17, scope: !910)
!932 = !DILocation(line: 46, column: 24, scope: !910)
!933 = !DILocation(line: 47, column: 6, scope: !910)
!934 = distinct !DISubprogram(name: "size_hint<core::slice::iter::Iter<[u8; 2]>, [u8; 2]>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbf0d1329d7c63d92E", scope: !912, file: !911, line: 58, type: !935, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !929, retainedNodes: !938)
!935 = !DISubroutineType(types: !936)
!936 = !{!802, !937}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>", baseType: !499, size: 32, align: 32, dwarfAddressSpace: 0)
!938 = !{!939}
!939 = !DILocalVariable(name: "self", arg: 1, scope: !934, file: !911, line: 58, type: !937)
!940 = !DILocation(line: 58, column: 18, scope: !934)
!941 = !DILocation(line: 59, column: 17, scope: !934)
!942 = !DILocation(line: 60, column: 6, scope: !934)
!943 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h10c5a030ee96fe6fE", scope: !945, file: !944, line: 374, type: !946, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1000, retainedNodes: !996)
!944 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "a5a0a5df7f0a569eec6fce9b111deec2")
!945 = !DINamespace(name: "{impl#0}", scope: !484)
!946 = !DISubroutineType(types: !947)
!947 = !{null, !948, !7, !990}
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", scope: !484, file: !2, size: 128, align: 32, flags: DIFlagProtected, elements: !949, templateParams: !988, identifier: "624b63a693694a83bfb3a53fff258099")
!949 = !{!950, !951}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !948, file: !2, baseType: !682, size: 96, align: 32, flags: DIFlagPrivate)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "residual", scope: !948, file: !2, baseType: !952, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !953, size: 32, align: 32, dwarfAddressSpace: 0)
!953 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", scope: !14, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !954, templateParams: !21, identifier: "dcce4752d384b3baa13a13199292f1b7")
!954 = !{!955}
!955 = !DICompositeType(tag: DW_TAG_variant_part, scope: !953, file: !2, size: 32, align: 16, elements: !956, templateParams: !21, identifier: "15dff6718812bf98edca2c478a22cd", discriminator: !987)
!956 = !{!957, !983}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !955, file: !2, baseType: !958, size: 32, align: 16, extraData: i16 0)
!958 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !953, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !21, templateParams: !959, identifier: "cab6ff1ea3e983a1e32a2041257f74d6")
!959 = !{!960}
!960 = !DITemplateTypeParameter(name: "T", type: !961)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>", scope: !335, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !962, templateParams: !21, identifier: "4c625e2808af9c59c0684194f9283a9d")
!962 = !{!963}
!963 = !DICompositeType(tag: DW_TAG_variant_part, scope: !961, file: !2, size: 16, align: 16, elements: !964, templateParams: !21, identifier: "59ab21b746fb3df4b1ee55cd802b14f0")
!964 = !{!965, !979}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !963, file: !2, baseType: !966, size: 16, align: 16)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !961, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !967, templateParams: !973, identifier: "7b14ead722d92052df08c2022ba4c9a1")
!967 = !{!968}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !966, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !970, file: !2, align: 8, flags: DIFlagPublic, elements: !971, templateParams: !21, identifier: "bbec56e295cb17a3c6590c058bc34564")
!970 = !DINamespace(name: "convert", scope: !15)
!971 = !{!972}
!972 = !DICompositeType(tag: DW_TAG_variant_part, scope: !969, file: !2, align: 8, elements: !21, identifier: "54bd9ba32f82ed48b888ad889b266af3")
!973 = !{!974, !975}
!974 = !DITemplateTypeParameter(name: "T", type: !969)
!975 = !DITemplateTypeParameter(name: "E", type: !976)
!976 = !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeUtf16Error", scope: !492, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !977, templateParams: !21, identifier: "64a7cd9f152540481e5ab74ed6fc9820")
!977 = !{!978}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !976, file: !2, baseType: !359, size: 16, align: 16, flags: DIFlagPrivate)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !963, file: !2, baseType: !980, size: 16, align: 16)
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !961, file: !2, size: 16, align: 16, flags: DIFlagPublic, elements: !981, templateParams: !973, identifier: "22ac8629b5eb9a9aa51cb618384edb06")
!981 = !{!982}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !980, file: !2, baseType: !976, size: 16, align: 16, flags: DIFlagPublic)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !955, file: !2, baseType: !984, size: 32, align: 16, extraData: i16 1)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !953, file: !2, size: 32, align: 16, flags: DIFlagPublic, elements: !985, templateParams: !959, identifier: "77e38846a0935523c652e25007600812")
!985 = !{!986}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !984, file: !2, baseType: !961, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!987 = !DIDerivedType(tag: DW_TAG_member, scope: !953, file: !2, baseType: !359, size: 16, align: 16, flags: DIFlagArtificial)
!988 = !{!696, !989}
!989 = !DITemplateTypeParameter(name: "R", type: !961)
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", scope: !555, file: !2, size: 32, align: 32, elements: !991, templateParams: !21, identifier: "777801740431c4aba7476440bc94c72")
!991 = !{!992}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !990, file: !2, baseType: !993, size: 32, align: 32)
!993 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", scope: !563, file: !2, size: 32, align: 32, elements: !994, templateParams: !21, identifier: "73185ac8e4a735cab4f99188ae8b4855")
!994 = !{!995}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !993, file: !2, baseType: !567, size: 32, align: 32)
!996 = !{!997, !998, !999}
!997 = !DILocalVariable(name: "self", arg: 1, scope: !943, file: !944, line: 374, type: !948)
!998 = !DILocalVariable(name: "init", arg: 2, scope: !943, file: !944, line: 374, type: !7)
!999 = !DILocalVariable(name: "fold", arg: 3, scope: !943, file: !944, line: 374, type: !990)
!1000 = !{!696, !989, !1001, !1002}
!1001 = !DITemplateTypeParameter(name: "AAA", type: !7)
!1002 = !DITemplateTypeParameter(name: "FFF", type: !990)
!1003 = !DILocation(line: 374, column: 28, scope: !943)
!1004 = !DILocation(line: 374, column: 38, scope: !943)
!1005 = !DILocation(line: 374, column: 49, scope: !943)
!1006 = !DILocation(line: 380, column: 34, scope: !943)
!1007 = !DILocation(line: 380, column: 18, scope: !943)
!1008 = !DILocation(line: 381, column: 10, scope: !943)
!1009 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9ffbd105e53ef9a2E", scope: !945, file: !944, line: 374, type: !1010, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1027, retainedNodes: !1023)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !1012, !7, !1017}
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", scope: !484, file: !2, size: 128, align: 32, flags: DIFlagProtected, elements: !1013, templateParams: !1016, identifier: "5a48b40704e015bc4be5f4ac6c860f0")
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1012, file: !2, baseType: !491, size: 96, align: 32, flags: DIFlagPrivate)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "residual", scope: !1012, file: !2, baseType: !952, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!1016 = !{!552, !989}
!1017 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", scope: !555, file: !2, size: 32, align: 32, elements: !1018, templateParams: !21, identifier: "df9af5dc38a693a2e919d5d7f43d5d1")
!1018 = !{!1019}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1017, file: !2, baseType: !1020, size: 32, align: 32)
!1020 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", scope: !563, file: !2, size: 32, align: 32, elements: !1021, templateParams: !21, identifier: "1bd16d7d90d4043bc942bdd81ba3b2c")
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !1020, file: !2, baseType: !567, size: 32, align: 32)
!1023 = !{!1024, !1025, !1026}
!1024 = !DILocalVariable(name: "self", arg: 1, scope: !1009, file: !944, line: 374, type: !1012)
!1025 = !DILocalVariable(name: "init", arg: 2, scope: !1009, file: !944, line: 374, type: !7)
!1026 = !DILocalVariable(name: "fold", arg: 3, scope: !1009, file: !944, line: 374, type: !1017)
!1027 = !{!552, !989, !1001, !1028}
!1028 = !DITemplateTypeParameter(name: "FFF", type: !1017)
!1029 = !DILocation(line: 374, column: 28, scope: !1009)
!1030 = !DILocation(line: 374, column: 38, scope: !1009)
!1031 = !DILocation(line: 374, column: 49, scope: !1009)
!1032 = !DILocation(line: 380, column: 34, scope: !1009)
!1033 = !DILocation(line: 380, column: 18, scope: !1009)
!1034 = !DILocation(line: 381, column: 10, scope: !1009)
!1035 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h04bb63a6624f986bE", scope: !945, file: !1036, line: 186, type: !1037, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1051, retainedNodes: !1047)
!1036 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "81d5679e250ca219bdaa756fde8a4413")
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !1039, !7, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !948, size: 32, align: 32, dwarfAddressSpace: 0)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", scope: !1041, file: !2, size: 32, align: 32, elements: !1045, templateParams: !21, identifier: "4a048a878c4293d901e6bc50133c75d")
!1041 = !DINamespace(name: "wrap_mut_2", scope: !1042)
!1042 = !DINamespace(name: "{impl#0}", scope: !1043)
!1043 = !DINamespace(name: "try_trait", scope: !1044)
!1044 = !DINamespace(name: "ops", scope: !15)
!1045 = !{!1046}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1040, file: !2, baseType: !990, size: 32, align: 32)
!1047 = !{!1048, !1049, !1050}
!1048 = !DILocalVariable(name: "self", arg: 1, scope: !1035, file: !1036, line: 186, type: !1039)
!1049 = !DILocalVariable(name: "init", arg: 2, scope: !1035, file: !1036, line: 186, type: !7)
!1050 = !DILocalVariable(name: "f", arg: 3, scope: !1035, file: !1036, line: 186, type: !1040)
!1051 = !{!696, !989, !1052, !1053, !1054}
!1052 = !DITemplateTypeParameter(name: "B", type: !7)
!1053 = !DITemplateTypeParameter(name: "F", type: !1040)
!1054 = !DITemplateTypeParameter(name: "T", type: !1055)
!1055 = !DICompositeType(tag: DW_TAG_structure_type, name: "NeverShortCircuit<()>", scope: !1043, file: !2, align: 8, flags: DIFlagProtected, elements: !1056, templateParams: !328, identifier: "aac48578a6300b8a48005d7c659134a7")
!1056 = !{!1057}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1055, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!1058 = !DILocation(line: 186, column: 26, scope: !1035)
!1059 = !DILocation(line: 186, column: 37, scope: !1035)
!1060 = !DILocation(line: 186, column: 46, scope: !1035)
!1061 = !DILocation(line: 192, column: 29, scope: !1035)
!1062 = !DILocation(line: 192, column: 14, scope: !1035)
!1063 = !DILocation(line: 199, column: 14, scope: !1035)
!1064 = !DILocation(line: 200, column: 6, scope: !1035)
!1065 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold17h4cb90075644b2540E", scope: !945, file: !1036, line: 186, type: !1066, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1076, retainedNodes: !1072)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !1068, !7, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !1012, size: 32, align: 32, dwarfAddressSpace: 0)
!1069 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", scope: !1041, file: !2, size: 32, align: 32, elements: !1070, templateParams: !21, identifier: "dee174826582fd198e70274008863b5")
!1070 = !{!1071}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1069, file: !2, baseType: !1017, size: 32, align: 32)
!1072 = !{!1073, !1074, !1075}
!1073 = !DILocalVariable(name: "self", arg: 1, scope: !1065, file: !1036, line: 186, type: !1068)
!1074 = !DILocalVariable(name: "init", arg: 2, scope: !1065, file: !1036, line: 186, type: !7)
!1075 = !DILocalVariable(name: "f", arg: 3, scope: !1065, file: !1036, line: 186, type: !1069)
!1076 = !{!552, !989, !1052, !1077, !1054}
!1077 = !DITemplateTypeParameter(name: "F", type: !1069)
!1078 = !DILocation(line: 186, column: 26, scope: !1065)
!1079 = !DILocation(line: 186, column: 37, scope: !1065)
!1080 = !DILocation(line: 186, column: 46, scope: !1065)
!1081 = !DILocation(line: 192, column: 29, scope: !1065)
!1082 = !DILocation(line: 192, column: 14, scope: !1065)
!1083 = !DILocation(line: 199, column: 14, scope: !1065)
!1084 = !DILocation(line: 200, column: 6, scope: !1065)
!1085 = distinct !DISubprogram(name: "{closure#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h111e07f5607473d9E", scope: !1086, file: !1036, line: 192, type: !1087, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1076, retainedNodes: !1127)
!1086 = !DINamespace(name: "try_fold", scope: !945)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089, !1106, !7, !1112}
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, ()>", scope: !1090, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1091, templateParams: !21, identifier: "c8ccad13c33ec44467b6f51ac3aa28f3")
!1090 = !DINamespace(name: "control_flow", scope: !1044)
!1091 = !{!1092}
!1092 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1089, file: !2, size: 8, align: 8, elements: !1093, templateParams: !21, identifier: "f633da16a83f57d4436e99ecdeb7b0bf", discriminator: !1105)
!1093 = !{!1094, !1101}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !1092, file: !2, baseType: !1095, size: 8, align: 8, extraData: i8 0)
!1095 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !1089, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1096, templateParams: !1098, identifier: "e02339a2d99cbd461341ecdef866e305")
!1096 = !{!1097}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1095, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!1098 = !{!1099, !1100}
!1099 = !DITemplateTypeParameter(name: "B", type: !1055)
!1100 = !DITemplateTypeParameter(name: "C", type: !7)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !1092, file: !2, baseType: !1102, size: 8, align: 8, extraData: i8 1)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !1089, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1103, templateParams: !1098, identifier: "58c7a2d50784232ad24b55b6ee5d383e")
!1103 = !{!1104}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1102, file: !2, baseType: !1055, align: 8, offset: 8, flags: DIFlagPublic)
!1105 = !DIDerivedType(tag: DW_TAG_member, scope: !1089, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagArtificial)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", baseType: !1107, size: 32, align: 32, dwarfAddressSpace: 0)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", scope: !1086, file: !2, size: 64, align: 32, elements: !1108, templateParams: !21, identifier: "77d695f386b5f4699b0d850ab50d71ad")
!1108 = !{!1109, !1111}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__f", scope: !1107, file: !2, baseType: !1110, size: 32, align: 32)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", baseType: !1069, size: 32, align: 32, dwarfAddressSpace: 0)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__residual", scope: !1107, file: !2, baseType: !952, size: 32, align: 32, offset: 32)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, core::char::decode::DecodeUtf16Error>", scope: !335, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1113, templateParams: !21, identifier: "f1072db199d948215dd30c75d7c59823")
!1113 = !{!1114}
!1114 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1112, file: !2, size: 64, align: 32, elements: !1115, templateParams: !21, identifier: "1fae8de59615c408846df142707cc45", discriminator: !1126)
!1115 = !{!1116, !1122}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1114, file: !2, baseType: !1117, size: 64, align: 32, extraData: i16 0)
!1117 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1112, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1118, templateParams: !1120, identifier: "9cfa7aa39e8585e567f1ce3c0494d4a3")
!1118 = !{!1119}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1117, file: !2, baseType: !574, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!1120 = !{!1121, !975}
!1121 = !DITemplateTypeParameter(name: "T", type: !574)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1114, file: !2, baseType: !1123, size: 64, align: 32, extraData: i16 1)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1112, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1124, templateParams: !1120, identifier: "c0a32e929cd70e6fc1211ca902de33f3")
!1124 = !{!1125}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1123, file: !2, baseType: !976, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!1126 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !2, baseType: !359, size: 16, align: 16, flags: DIFlagArtificial)
!1127 = !{!1128, !1129, !1130, !1131, !1132, !1134}
!1128 = !DILocalVariable(name: "acc", arg: 2, scope: !1085, file: !1036, line: 192, type: !7)
!1129 = !DILocalVariable(name: "x", arg: 3, scope: !1085, file: !1036, line: 192, type: !1112)
!1130 = !DILocalVariable(name: "f", scope: !1085, file: !1036, line: 186, type: !1069, align: 32)
!1131 = !DILocalVariable(name: "self__residual", scope: !1085, file: !1036, line: 186, type: !953, align: 16)
!1132 = !DILocalVariable(name: "x", scope: !1133, file: !1036, line: 193, type: !574, align: 32)
!1133 = distinct !DILexicalBlock(scope: !1085, file: !1036, line: 193, column: 17)
!1134 = !DILocalVariable(name: "r", scope: !1135, file: !1036, line: 194, type: !961, align: 16)
!1135 = distinct !DILexicalBlock(scope: !1085, file: !1036, line: 194, column: 17)
!1136 = !DILocation(line: 186, column: 50, scope: !1085)
!1137 = !DILocation(line: 186, column: 31, scope: !1085)
!1138 = !DILocation(line: 192, column: 30, scope: !1085)
!1139 = !DILocation(line: 192, column: 35, scope: !1085)
!1140 = !DILocation(line: 192, column: 44, scope: !1085)
!1141 = !DILocation(line: 192, column: 38, scope: !1085)
!1142 = !DILocation(line: 194, column: 36, scope: !1085)
!1143 = !DILocation(line: 194, column: 36, scope: !1135)
!1144 = !DILocation(line: 195, column: 21, scope: !1135)
!1145 = !DILocation(line: 196, column: 46, scope: !1135)
!1146 = !DILocation(line: 196, column: 21, scope: !1135)
!1147 = !DILocation(line: 197, column: 17, scope: !1085)
!1148 = !DILocation(line: 193, column: 39, scope: !1085)
!1149 = !DILocation(line: 193, column: 39, scope: !1133)
!1150 = !DILocation(line: 193, column: 67, scope: !1133)
!1151 = !DILocation(line: 193, column: 45, scope: !1133)
!1152 = !DILocation(line: 198, column: 14, scope: !1085)
!1153 = distinct !DISubprogram(name: "{closure#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$8try_fold28_$u7b$$u7b$closure$u7d$$u7d$17hf933ace932e6e75eE", scope: !1086, file: !1036, line: 192, type: !1154, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1051, retainedNodes: !1162)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!1089, !1156, !7, !1112}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", baseType: !1157, size: 32, align: 32, dwarfAddressSpace: 0)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>", scope: !1086, file: !2, size: 64, align: 32, elements: !1158, templateParams: !21, identifier: "1db2b26940a7aa59bc7d4ec043268ddf")
!1158 = !{!1159, !1161}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__f", scope: !1157, file: !2, baseType: !1160, size: 32, align: 32)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", baseType: !1040, size: 32, align: 32, dwarfAddressSpace: 0)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__self__residual", scope: !1157, file: !2, baseType: !952, size: 32, align: 32, offset: 32)
!1162 = !{!1163, !1164, !1165, !1166, !1167, !1169}
!1163 = !DILocalVariable(name: "acc", arg: 2, scope: !1153, file: !1036, line: 192, type: !7)
!1164 = !DILocalVariable(name: "x", arg: 3, scope: !1153, file: !1036, line: 192, type: !1112)
!1165 = !DILocalVariable(name: "f", scope: !1153, file: !1036, line: 186, type: !1040, align: 32)
!1166 = !DILocalVariable(name: "self__residual", scope: !1153, file: !1036, line: 186, type: !953, align: 16)
!1167 = !DILocalVariable(name: "x", scope: !1168, file: !1036, line: 193, type: !574, align: 32)
!1168 = distinct !DILexicalBlock(scope: !1153, file: !1036, line: 193, column: 17)
!1169 = !DILocalVariable(name: "r", scope: !1170, file: !1036, line: 194, type: !961, align: 16)
!1170 = distinct !DILexicalBlock(scope: !1153, file: !1036, line: 194, column: 17)
!1171 = !DILocation(line: 186, column: 50, scope: !1153)
!1172 = !DILocation(line: 186, column: 31, scope: !1153)
!1173 = !DILocation(line: 192, column: 30, scope: !1153)
!1174 = !DILocation(line: 192, column: 35, scope: !1153)
!1175 = !DILocation(line: 192, column: 44, scope: !1153)
!1176 = !DILocation(line: 192, column: 38, scope: !1153)
!1177 = !DILocation(line: 194, column: 36, scope: !1153)
!1178 = !DILocation(line: 194, column: 36, scope: !1170)
!1179 = !DILocation(line: 195, column: 21, scope: !1170)
!1180 = !DILocation(line: 196, column: 46, scope: !1170)
!1181 = !DILocation(line: 196, column: 21, scope: !1170)
!1182 = !DILocation(line: 197, column: 17, scope: !1153)
!1183 = !DILocation(line: 193, column: 39, scope: !1153)
!1184 = !DILocation(line: 193, column: 39, scope: !1168)
!1185 = !DILocation(line: 193, column: 67, scope: !1168)
!1186 = !DILocation(line: 193, column: 45, scope: !1168)
!1187 = !DILocation(line: 198, column: 14, scope: !1153)
!1188 = distinct !DISubprogram(name: "size_hint<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h0171ada23766b7f2E", scope: !945, file: !1036, line: 177, type: !1189, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1016, retainedNodes: !1192)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!802, !1191}
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !1012, size: 32, align: 32, dwarfAddressSpace: 0)
!1192 = !{!1193, !1194}
!1193 = !DILocalVariable(name: "self", arg: 1, scope: !1188, file: !1036, line: 177, type: !1191)
!1194 = !DILocalVariable(name: "upper", scope: !1195, file: !1036, line: 181, type: !103, align: 32)
!1195 = distinct !DILexicalBlock(scope: !1188, file: !1036, line: 181, column: 13)
!1196 = !DILocation(line: 177, column: 18, scope: !1188)
!1197 = !DILocation(line: 178, column: 12, scope: !1188)
!1198 = !DILocation(line: 178, column: 26, scope: !1188)
!1199 = !DILocation(line: 181, column: 40, scope: !1188)
!1200 = !DILocation(line: 181, column: 21, scope: !1188)
!1201 = !DILocation(line: 181, column: 21, scope: !1195)
!1202 = !DILocation(line: 182, column: 13, scope: !1195)
!1203 = !DILocation(line: 178, column: 9, scope: !1188)
!1204 = !DILocation(line: 179, column: 13, scope: !1188)
!1205 = !DILocation(line: 184, column: 6, scope: !1188)
!1206 = distinct !DISubprogram(name: "size_hint<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN106_$LT$core..iter..adapters..GenericShunt$LT$I$C$R$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hbdc558b76c528839E", scope: !945, file: !1036, line: 177, type: !1207, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !988, retainedNodes: !1210)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!802, !1209}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !948, size: 32, align: 32, dwarfAddressSpace: 0)
!1210 = !{!1211, !1212}
!1211 = !DILocalVariable(name: "self", arg: 1, scope: !1206, file: !1036, line: 177, type: !1209)
!1212 = !DILocalVariable(name: "upper", scope: !1213, file: !1036, line: 181, type: !103, align: 32)
!1213 = distinct !DILexicalBlock(scope: !1206, file: !1036, line: 181, column: 13)
!1214 = !DILocation(line: 177, column: 18, scope: !1206)
!1215 = !DILocation(line: 178, column: 12, scope: !1206)
!1216 = !DILocation(line: 178, column: 26, scope: !1206)
!1217 = !DILocation(line: 181, column: 40, scope: !1206)
!1218 = !DILocation(line: 181, column: 21, scope: !1206)
!1219 = !DILocation(line: 181, column: 21, scope: !1213)
!1220 = !DILocation(line: 182, column: 13, scope: !1213)
!1221 = !DILocation(line: 178, column: 9, scope: !1206)
!1222 = !DILocation(line: 179, column: 13, scope: !1206)
!1223 = !DILocation(line: 184, column: 6, scope: !1206)
!1224 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h3bd435398dffdb81E", scope: !1226, file: !1225, line: 387, type: !1228, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1258)
!1225 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "af6ecb4d2663035e0aa38579163ee106")
!1226 = !DINamespace(name: "{impl#4}", scope: !1227)
!1227 = !DINamespace(name: "index", scope: !451)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1230, !1234, !1230, !1241}
!1230 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 64, align: 32, elements: !1231, templateParams: !21, identifier: "a10360edaf335c418dbc95bccd0cb05d")
!1231 = !{!1232, !1233}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1230, file: !2, baseType: !127, size: 32, align: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1230, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!1234 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !1235, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1236, templateParams: !1239, identifier: "163ec5cb5e1648a8f47c0fd85be167c6")
!1235 = !DINamespace(name: "range", scope: !1044)
!1236 = !{!1237, !1238}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1234, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPublic)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1234, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!1239 = !{!1240}
!1240 = !DITemplateTypeParameter(name: "Idx", type: !9)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::panic::location::Location", baseType: !1242, size: 32, align: 32, dwarfAddressSpace: 0)
!1242 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !1243, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !1245, templateParams: !21, identifier: "7c34cafe8ea1dcad4032b9360816105f")
!1243 = !DINamespace(name: "location", scope: !1244)
!1244 = !DINamespace(name: "panic", scope: !15)
!1245 = !{!1246, !1254, !1255, !1256}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1242, file: !2, baseType: !1247, size: 64, align: 32, flags: DIFlagPrivate)
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<str>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1248, templateParams: !22, identifier: "88212fc410c4399fd5095990cc8304ca")
!1248 = !{!1249}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1247, file: !2, baseType: !1250, size: 64, align: 32, flags: DIFlagPrivate)
!1250 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 64, align: 32, elements: !1251, templateParams: !21, identifier: "238a44609877474087c05adf26cd41fa")
!1251 = !{!1252, !1253}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1250, file: !2, baseType: !127, size: 32, align: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1250, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1242, file: !2, baseType: !51, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1242, file: !2, baseType: !51, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "_filename", scope: !1242, file: !2, baseType: !1257, align: 8, offset: 128, flags: DIFlagPrivate)
!1257 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&str>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !597, identifier: "4cfc3eea77dd95eabd59051b67bd7e66")
!1258 = !{!1259, !1260, !1261}
!1259 = !DILocalVariable(name: "self", arg: 1, scope: !1224, file: !1225, line: 387, type: !1234)
!1260 = !DILocalVariable(name: "slice", arg: 2, scope: !1224, file: !1225, line: 387, type: !1230)
!1261 = !DILocalVariable(name: "new_len", scope: !1262, file: !1225, line: 405, type: !9, align: 32)
!1262 = distinct !DILexicalBlock(scope: !1224, file: !1225, line: 405, column: 13)
!1263 = !DILocation(line: 387, column: 29, scope: !1224)
!1264 = !DILocation(line: 387, column: 35, scope: !1224)
!1265 = !DILocation(line: 77, column: 35, scope: !1266)
!1266 = !DILexicalBlockFile(scope: !1224, file: !473, discriminator: 0)
!1267 = !DILocation(line: 394, column: 36, scope: !1224)
!1268 = !DILocation(line: 78, column: 17, scope: !1266)
!1269 = !DILocation(line: 405, column: 27, scope: !1224)
!1270 = !DILocation(line: 405, column: 17, scope: !1262)
!1271 = !DILocalVariable(name: "ptr", arg: 1, scope: !1272, file: !1225, line: 82, type: !1230)
!1272 = distinct !DISubprogram(name: "get_offset_len_noubcheck<u8>", linkageName: "_ZN4core5slice5index24get_offset_len_noubcheck17hcd93ce2eed3d7946E", scope: !1227, file: !1225, line: 81, type: !1273, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1275)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!1230, !1230, !9, !9}
!1275 = !{!1271, !1276, !1277, !1278, !1280}
!1276 = !DILocalVariable(name: "offset", arg: 2, scope: !1272, file: !1225, line: 83, type: !9)
!1277 = !DILocalVariable(name: "len", arg: 3, scope: !1272, file: !1225, line: 84, type: !9)
!1278 = !DILocalVariable(name: "ptr", scope: !1279, file: !1225, line: 86, type: !201, align: 32)
!1279 = distinct !DILexicalBlock(scope: !1272, file: !1225, line: 86, column: 5)
!1280 = !DILocalVariable(name: "ptr", scope: !1281, file: !1225, line: 88, type: !201, align: 32)
!1281 = distinct !DILexicalBlock(scope: !1279, file: !1225, line: 88, column: 5)
!1282 = !DILocation(line: 82, column: 5, scope: !1272, inlinedAt: !1283)
!1283 = distinct !DILocation(line: 406, column: 13, scope: !1262)
!1284 = !DILocation(line: 83, column: 5, scope: !1272, inlinedAt: !1283)
!1285 = !DILocation(line: 84, column: 5, scope: !1272, inlinedAt: !1283)
!1286 = !DILocation(line: 86, column: 15, scope: !1272, inlinedAt: !1283)
!1287 = !DILocation(line: 86, column: 9, scope: !1279, inlinedAt: !1283)
!1288 = !DILocation(line: 88, column: 24, scope: !1279, inlinedAt: !1283)
!1289 = !DILocation(line: 88, column: 9, scope: !1281, inlinedAt: !1283)
!1290 = !DILocation(line: 90, column: 2, scope: !1272, inlinedAt: !1283)
!1291 = !DILocation(line: 406, column: 13, scope: !1262)
!1292 = !DILocation(line: 408, column: 6, scope: !1224)
!1293 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked18precondition_check17hc18e0e4383b38411E", scope: !1294, file: !473, line: 68, type: !1295, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !1297)
!1294 = !DINamespace(name: "get_unchecked", scope: !1226)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{null, !9, !9, !9, !1241}
!1297 = !{!1298, !1299, !1300, !1301}
!1298 = !DILocalVariable(name: "start", arg: 1, scope: !1293, file: !473, line: 68, type: !9)
!1299 = !DILocalVariable(name: "end", arg: 2, scope: !1293, file: !473, line: 68, type: !9)
!1300 = !DILocalVariable(name: "len", arg: 3, scope: !1293, file: !473, line: 68, type: !9)
!1301 = !DILocalVariable(name: "msg", scope: !1302, file: !473, line: 70, type: !124, align: 32)
!1302 = distinct !DILexicalBlock(scope: !1293, file: !473, line: 70, column: 21)
!1303 = !DILocation(line: 68, column: 43, scope: !1293)
!1304 = !DILocation(line: 70, column: 25, scope: !1302)
!1305 = !DILocation(line: 395, column: 18, scope: !1306)
!1306 = !DILexicalBlockFile(scope: !1293, file: !1225, discriminator: 0)
!1307 = !DILocation(line: 73, column: 94, scope: !1302)
!1308 = !DILocation(line: 73, column: 59, scope: !1302)
!1309 = !DILocation(line: 73, column: 21, scope: !1302)
!1310 = !DILocation(line: 395, column: 34, scope: !1306)
!1311 = !DILocation(line: 75, column: 14, scope: !1293)
!1312 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h421f68b7de29a1d7E", scope: !1313, file: !1225, line: 511, type: !1314, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1319)
!1313 = !DINamespace(name: "{impl#6}", scope: !1227)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!1230, !1316, !1230}
!1316 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeTo<usize>", scope: !1235, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1317, templateParams: !1239, identifier: "58c7fa8154f17906cbde6cfda7cbb520")
!1317 = !{!1318}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1316, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPublic)
!1319 = !{!1320, !1321}
!1320 = !DILocalVariable(name: "self", arg: 1, scope: !1312, file: !1225, line: 511, type: !1316)
!1321 = !DILocalVariable(name: "slice", arg: 2, scope: !1312, file: !1225, line: 511, type: !1230)
!1322 = !DILocation(line: 511, column: 29, scope: !1312)
!1323 = !DILocation(line: 511, column: 35, scope: !1312)
!1324 = !DILocation(line: 513, column: 32, scope: !1312)
!1325 = !DILocation(line: 514, column: 6, scope: !1312)
!1326 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$17get_unchecked_mut17h5685335e62eb6191E", scope: !1313, file: !1225, line: 517, type: !1327, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1345, retainedNodes: !1342)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!1329, !1316, !1329}
!1329 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 64, align: 32, elements: !1330, templateParams: !21, identifier: "85423a2c13f16569981e6150d224eee8")
!1330 = !{!1331, !1341}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1329, file: !2, baseType: !1332, size: 32, align: 32)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32, align: 32, dwarfAddressSpace: 0)
!1333 = !DICompositeType(tag: DW_TAG_union_type, name: "MaybeUninit<u8>", scope: !1334, file: !2, size: 8, align: 8, elements: !1335, templateParams: !22, identifier: "7d24a94aeda39710f5d9092b1ac29ead")
!1334 = !DINamespace(name: "maybe_uninit", scope: !866)
!1335 = !{!1336, !1337}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1333, file: !2, baseType: !7, align: 8)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1333, file: !2, baseType: !1338, size: 8, align: 8)
!1338 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<u8>", scope: !865, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !1339, templateParams: !22, identifier: "c7ee82b98471aa48aad23747636570b2")
!1339 = !{!1340}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1338, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagPrivate)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1329, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!1342 = !{!1343, !1344}
!1343 = !DILocalVariable(name: "self", arg: 1, scope: !1326, file: !1225, line: 517, type: !1316)
!1344 = !DILocalVariable(name: "slice", arg: 2, scope: !1326, file: !1225, line: 517, type: !1329)
!1345 = !{!1346}
!1346 = !DITemplateTypeParameter(name: "T", type: !1333)
!1347 = !DILocation(line: 517, column: 33, scope: !1326)
!1348 = !DILocation(line: 517, column: 39, scope: !1326)
!1349 = !DILocation(line: 519, column: 32, scope: !1326)
!1350 = !DILocation(line: 520, column: 6, scope: !1326)
!1351 = distinct !DISubprogram(name: "is_set_val", linkageName: "_ZN110_$LT$alloc..collections..btree..set_val..SetValZST$u20$as$u20$alloc..collections..btree..set_val..IsSetVal$GT$10is_set_val17h5b524777aacd9904E", scope: !1353, file: !1352, line: 26, type: !1357, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21)
!1352 = !DIFile(filename: "src/collections/btree/set_val.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "58b5bca18a146b1d58139f971e0fe66d")
!1353 = !DINamespace(name: "{impl#1}", scope: !1354)
!1354 = !DINamespace(name: "set_val", scope: !1355)
!1355 = !DINamespace(name: "btree", scope: !1356)
!1356 = !DINamespace(name: "collections", scope: !132)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!643}
!1359 = !DILocation(line: 28, column: 6, scope: !1351)
!1360 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h447b40add29d5986E", scope: !1361, file: !1225, line: 550, type: !1362, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1367)
!1361 = !DINamespace(name: "{impl#7}", scope: !1227)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!1230, !1364, !1230}
!1364 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !1235, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1365, templateParams: !1239, identifier: "61d74a89174d867df24adeb3c19e1a5e")
!1365 = !{!1366}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1364, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPublic)
!1367 = !{!1368, !1369}
!1368 = !DILocalVariable(name: "self", arg: 1, scope: !1360, file: !1225, line: 550, type: !1364)
!1369 = !DILocalVariable(name: "slice", arg: 2, scope: !1360, file: !1225, line: 550, type: !1230)
!1370 = !DILocation(line: 550, column: 29, scope: !1360)
!1371 = !DILocation(line: 550, column: 35, scope: !1360)
!1372 = !DILocation(line: 552, column: 37, scope: !1360)
!1373 = !DILocation(line: 552, column: 44, scope: !1360)
!1374 = !DILocation(line: 553, column: 6, scope: !1360)
!1375 = distinct !DISubprogram(name: "next<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2f382edd73bf86e2E", scope: !1377, file: !1376, line: 44, type: !1379, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1421, retainedNodes: !1424)
!1376 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/skip_while.rs", directory: "", checksumkind: CSK_MD5, checksum: "1d9a0ed5fe0b43f4cb0dfebfdd127e60")
!1377 = !DINamespace(name: "{impl#2}", scope: !1378)
!1378 = !DINamespace(name: "skip_while", scope: !484)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!1381, !1393}
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !14, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1382, templateParams: !21, identifier: "56e9035a859870076aa6ae6c34e3b130")
!1382 = !{!1383}
!1383 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1381, file: !2, size: 32, align: 32, elements: !1384, templateParams: !21, identifier: "53095437fa9ceb8478a77bca669c0a48", discriminator: !1392)
!1384 = !{!1385, !1388}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1383, file: !2, baseType: !1386, size: 32, align: 32, extraData: i32 1114112)
!1386 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1381, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !1387, identifier: "b8a2cec9e3df8432b4514f7a7ab20f3")
!1387 = !{!1121}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1383, file: !2, baseType: !1389, size: 32, align: 32)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1381, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1390, templateParams: !1387, identifier: "ef438d4768aff7fd9f59923c07e2428e")
!1390 = !{!1391}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1389, file: !2, baseType: !574, size: 32, align: 32, flags: DIFlagPublic)
!1392 = !DIDerivedType(tag: DW_TAG_member, scope: !1381, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", baseType: !1394, size: 32, align: 32, dwarfAddressSpace: 0)
!1394 = !DICompositeType(tag: DW_TAG_structure_type, name: "SkipWhile<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", scope: !1378, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1395, templateParams: !1421, identifier: "f860a106de4d23932944ef1a12be5af5")
!1395 = !{!1396, !1415, !1416}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1394, file: !2, baseType: !1397, size: 64, align: 32, flags: DIFlagPrivate)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rev<core::str::iter::Chars>", scope: !1398, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1399, templateParams: !1413, identifier: "8eb55f40996875c37a7c05ad8204a27e")
!1398 = !DINamespace(name: "rev", scope: !484)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1397, file: !2, baseType: !1401, size: 64, align: 32, flags: DIFlagPrivate)
!1401 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !1402, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1403, templateParams: !21, identifier: "79ab7ee412abf907891c807fe4b41821")
!1402 = !DINamespace(name: "iter", scope: !262)
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1401, file: !2, baseType: !1405, size: 64, align: 32, flags: DIFlagProtected)
!1405 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !504, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1406, templateParams: !22, identifier: "fddf2df4e8c08ec9e4dd47bfe6f746c6")
!1406 = !{!1407, !1408, !1409}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1405, file: !2, baseType: !197, size: 32, align: 32, flags: DIFlagPrivate)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "end_or_len", scope: !1405, file: !2, baseType: !201, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !1405, file: !2, baseType: !1410, align: 8, offset: 64, flags: DIFlagPrivate)
!1410 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !1411, identifier: "bfaa7d2d884b3deea70e5af93aa50e2b")
!1411 = !{!1412}
!1412 = !DITemplateTypeParameter(name: "T", type: !244)
!1413 = !{!1414}
!1414 = !DITemplateTypeParameter(name: "T", type: !1401)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1394, file: !2, baseType: !643, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !1394, file: !2, baseType: !1417, align: 8, offset: 72, flags: DIFlagPrivate)
!1417 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", scope: !1418, file: !2, align: 8, elements: !21, identifier: "4bc39982ec6038b72bfd9fc8e48d37d")
!1418 = !DINamespace(name: "case_ignorable_then_cased", scope: !1419)
!1419 = !DINamespace(name: "to_lowercase", scope: !1420)
!1420 = !DINamespace(name: "{impl#5}", scope: !655)
!1421 = !{!1422, !1423}
!1422 = !DITemplateTypeParameter(name: "I", type: !1397)
!1423 = !DITemplateTypeParameter(name: "P", type: !1417)
!1424 = !{!1425, !1426, !1429}
!1425 = !DILocalVariable(name: "self", arg: 1, scope: !1375, file: !1376, line: 44, type: !1393)
!1426 = !DILocalVariable(name: "flag", scope: !1427, file: !1376, line: 59, type: !1428, align: 32)
!1427 = distinct !DILexicalBlock(scope: !1375, file: !1376, line: 59, column: 9)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut bool", baseType: !643, size: 32, align: 32, dwarfAddressSpace: 0)
!1429 = !DILocalVariable(name: "pred", scope: !1430, file: !1376, line: 60, type: !1431, align: 32)
!1430 = distinct !DILexicalBlock(scope: !1427, file: !1376, line: 60, column: 9)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", baseType: !1417, size: 32, align: 32, dwarfAddressSpace: 0)
!1432 = !DILocation(line: 44, column: 13, scope: !1375)
!1433 = !DILocation(line: 59, column: 20, scope: !1375)
!1434 = !DILocation(line: 59, column: 13, scope: !1427)
!1435 = !DILocation(line: 60, column: 20, scope: !1427)
!1436 = !DILocation(line: 60, column: 13, scope: !1430)
!1437 = !DILocation(line: 61, column: 24, scope: !1430)
!1438 = !DILocation(line: 61, column: 19, scope: !1430)
!1439 = !DILocation(line: 62, column: 6, scope: !1375)
!1440 = distinct !DISubprogram(name: "next<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf1d20452622fd094E", scope: !1377, file: !1376, line: 44, type: !1441, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1450, retainedNodes: !1453)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{!1381, !1443}
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::SkipWhile<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", baseType: !1444, size: 32, align: 32, dwarfAddressSpace: 0)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "SkipWhile<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", scope: !1378, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1445, templateParams: !1450, identifier: "6ce1854fb715bad061623f9f52ee0f0e")
!1445 = !{!1446, !1447, !1448}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1444, file: !2, baseType: !1401, size: 64, align: 32, flags: DIFlagPrivate)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1444, file: !2, baseType: !643, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !1444, file: !2, baseType: !1449, align: 8, offset: 72, flags: DIFlagPrivate)
!1449 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::str::iter::Chars>", scope: !1418, file: !2, align: 8, elements: !21, identifier: "90e4fca3871129d23f27d6ce49cd4ee2")
!1450 = !{!1451, !1452}
!1451 = !DITemplateTypeParameter(name: "I", type: !1401)
!1452 = !DITemplateTypeParameter(name: "P", type: !1449)
!1453 = !{!1454, !1455, !1457}
!1454 = !DILocalVariable(name: "self", arg: 1, scope: !1440, file: !1376, line: 44, type: !1443)
!1455 = !DILocalVariable(name: "flag", scope: !1456, file: !1376, line: 59, type: !1428, align: 32)
!1456 = distinct !DILexicalBlock(scope: !1440, file: !1376, line: 59, column: 9)
!1457 = !DILocalVariable(name: "pred", scope: !1458, file: !1376, line: 60, type: !1459, align: 32)
!1458 = distinct !DILexicalBlock(scope: !1456, file: !1376, line: 60, column: 9)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>", baseType: !1449, size: 32, align: 32, dwarfAddressSpace: 0)
!1460 = !DILocation(line: 44, column: 13, scope: !1440)
!1461 = !DILocation(line: 59, column: 20, scope: !1440)
!1462 = !DILocation(line: 59, column: 13, scope: !1456)
!1463 = !DILocation(line: 60, column: 20, scope: !1456)
!1464 = !DILocation(line: 60, column: 13, scope: !1458)
!1465 = !DILocation(line: 61, column: 24, scope: !1458)
!1466 = !DILocation(line: 61, column: 19, scope: !1458)
!1467 = !DILocation(line: 62, column: 6, scope: !1440)
!1468 = distinct !DISubprogram(name: "check<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h1e5edd8250081d7eE", scope: !1469, file: !1376, line: 45, type: !1470, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1480, retainedNodes: !1477)
!1469 = !DINamespace(name: "next", scope: !1377)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!1472, !1428, !1459}
!1472 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", scope: !1473, file: !2, size: 64, align: 32, elements: !1474, templateParams: !21, identifier: "e60ed19bbbaa09c642fe642f10c34d17")
!1473 = !DINamespace(name: "check", scope: !1469)
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1472, file: !2, baseType: !1428, size: 32, align: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1472, file: !2, baseType: !1459, size: 32, align: 32, offset: 32)
!1477 = !{!1478, !1479}
!1478 = !DILocalVariable(name: "flag", arg: 1, scope: !1468, file: !1376, line: 46, type: !1428)
!1479 = !DILocalVariable(name: "pred", arg: 2, scope: !1468, file: !1376, line: 47, type: !1459)
!1480 = !{!1121, !1481}
!1481 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1449)
!1482 = !DILocation(line: 46, column: 13, scope: !1468)
!1483 = !DILocation(line: 47, column: 13, scope: !1468)
!1484 = !DILocation(line: 57, column: 10, scope: !1468)
!1485 = distinct !DISubprogram(name: "check<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check17h22ac175efb6f0d71E", scope: !1469, file: !1376, line: 45, type: !1486, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1495, retainedNodes: !1492)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!1488, !1428, !1431}
!1488 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", scope: !1473, file: !2, size: 64, align: 32, elements: !1489, templateParams: !21, identifier: "17f013de4e3689695b46ea68b3c36834")
!1489 = !{!1490, !1491}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1488, file: !2, baseType: !1428, size: 32, align: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1488, file: !2, baseType: !1431, size: 32, align: 32, offset: 32)
!1492 = !{!1493, !1494}
!1493 = !DILocalVariable(name: "flag", arg: 1, scope: !1485, file: !1376, line: 46, type: !1428)
!1494 = !DILocalVariable(name: "pred", arg: 2, scope: !1485, file: !1376, line: 47, type: !1431)
!1495 = !{!1121, !1496}
!1496 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1417)
!1497 = !DILocation(line: 46, column: 13, scope: !1485)
!1498 = !DILocation(line: 47, column: 13, scope: !1485)
!1499 = !DILocation(line: 57, column: 10, scope: !1485)
!1500 = distinct !DISubprogram(name: "{closure#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17h38748408e8ecae87E", scope: !1473, file: !1376, line: 49, type: !1501, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1495, retainedNodes: !1505)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!643, !1503, !1504}
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", baseType: !1488, size: 32, align: 32, dwarfAddressSpace: 0)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&char", baseType: !574, size: 32, align: 32, dwarfAddressSpace: 0)
!1505 = !{!1506, !1507, !1508}
!1506 = !DILocalVariable(name: "x", arg: 2, scope: !1500, file: !1376, line: 49, type: !1504)
!1507 = !DILocalVariable(name: "flag", scope: !1500, file: !1376, line: 46, type: !1428, align: 32)
!1508 = !DILocalVariable(name: "pred", scope: !1500, file: !1376, line: 47, type: !1431, align: 32)
!1509 = !DILocation(line: 46, column: 13, scope: !1500)
!1510 = !DILocation(line: 47, column: 13, scope: !1500)
!1511 = !DILocation(line: 49, column: 19, scope: !1500)
!1512 = !DILocation(line: 50, column: 20, scope: !1500)
!1513 = !DILocation(line: 50, column: 30, scope: !1500)
!1514 = !DILocation(line: 51, column: 21, scope: !1500)
!1515 = !DILocation(line: 52, column: 21, scope: !1500)
!1516 = !DILocation(line: 50, column: 17, scope: !1500)
!1517 = !DILocation(line: 54, column: 21, scope: !1500)
!1518 = !DILocation(line: 56, column: 14, scope: !1500)
!1519 = distinct !DISubprogram(name: "{closure#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN115_$LT$core..iter..adapters..skip_while..SkipWhile$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next5check28_$u7b$$u7b$closure$u7d$$u7d$17hea1036ca996dd1cbE", scope: !1473, file: !1376, line: 49, type: !1520, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1480, retainedNodes: !1523)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!643, !1522, !1504}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", baseType: !1472, size: 32, align: 32, dwarfAddressSpace: 0)
!1523 = !{!1524, !1525, !1526}
!1524 = !DILocalVariable(name: "x", arg: 2, scope: !1519, file: !1376, line: 49, type: !1504)
!1525 = !DILocalVariable(name: "flag", scope: !1519, file: !1376, line: 46, type: !1428, align: 32)
!1526 = !DILocalVariable(name: "pred", scope: !1519, file: !1376, line: 47, type: !1459, align: 32)
!1527 = !DILocation(line: 46, column: 13, scope: !1519)
!1528 = !DILocation(line: 47, column: 13, scope: !1519)
!1529 = !DILocation(line: 49, column: 19, scope: !1519)
!1530 = !DILocation(line: 50, column: 20, scope: !1519)
!1531 = !DILocation(line: 50, column: 30, scope: !1519)
!1532 = !DILocation(line: 51, column: 21, scope: !1519)
!1533 = !DILocation(line: 52, column: 21, scope: !1519)
!1534 = !DILocation(line: 50, column: 17, scope: !1519)
!1535 = !DILocation(line: 54, column: 21, scope: !1519)
!1536 = !DILocation(line: 56, column: 14, scope: !1519)
!1537 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..unique..Unique$LT$T$GT$$GT$$GT$4from17h9667c3a18e98260fE", scope: !1539, file: !1538, line: 1721, type: !1540, scopeLine: 1721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1542)
!1538 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "6726e73c6c894eba30d90288586d0f43")
!1539 = !DINamespace(name: "{impl#19}", scope: !198)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!197, !193}
!1542 = !{!1543}
!1543 = !DILocalVariable(name: "unique", arg: 1, scope: !1537, file: !1538, line: 1721, type: !193)
!1544 = !DILocation(line: 1721, column: 13, scope: !1537)
!1545 = !DILocation(line: 1722, column: 16, scope: !1537)
!1546 = !DILocation(line: 1723, column: 6, scope: !1537)
!1547 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN119_$LT$core..ptr..unique..Unique$LT$T$GT$$u20$as$u20$core..convert..From$LT$core..ptr..non_null..NonNull$LT$T$GT$$GT$$GT$4from17h1258623afb2279a9E", scope: !1549, file: !1548, line: 210, type: !1550, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1552)
!1548 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/unique.rs", directory: "", checksumkind: CSK_MD5, checksum: "d80c6c81e1bee63c1039a27a0b137ec1")
!1549 = !DINamespace(name: "{impl#12}", scope: !194)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!193, !197}
!1552 = !{!1553}
!1553 = !DILocalVariable(name: "pointer", arg: 1, scope: !1547, file: !1548, line: 210, type: !197)
!1554 = !DILocation(line: 210, column: 13, scope: !1547)
!1555 = !DILocation(line: 211, column: 9, scope: !1547)
!1556 = !DILocation(line: 212, column: 6, scope: !1547)
!1557 = distinct !DISubprogram(name: "from", linkageName: "_ZN121_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$$GT$4from17h064dad4af83ee6c3E", scope: !1558, file: !398, line: 800, type: !1559, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !1565)
!1558 = !DINamespace(name: "{impl#12}", scope: !400)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!404, !1561}
!1561 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>", file: !2, size: 64, align: 32, elements: !1562, templateParams: !21, identifier: "12d7c76947ae3265e3e327e8a690364a")
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1561, file: !2, baseType: !414, size: 32, align: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1561, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!1565 = !{!1566, !1567}
!1566 = !DILocalVariable(name: "s", arg: 1, scope: !1557, file: !398, line: 800, type: !1561)
!1567 = !DILocalVariable(name: "raw", scope: !1568, file: !398, line: 801, type: !1569, align: 32)
!1568 = distinct !DILexicalBlock(scope: !1557, file: !398, line: 801, column: 9)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [u8]", file: !2, size: 64, align: 32, elements: !1570, templateParams: !21, identifier: "eb80752d8dc9079cf56e9f0de61d8d5f")
!1570 = !{!1571, !1572}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !1569, file: !2, baseType: !127, size: 32, align: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1569, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!1573 = !DILocation(line: 800, column: 13, scope: !1557)
!1574 = !DILocation(line: 801, column: 19, scope: !1557)
!1575 = !DILocation(line: 801, column: 13, scope: !1568)
!1576 = !DILocation(line: 802, column: 35, scope: !1568)
!1577 = !DILocation(line: 803, column: 6, scope: !1557)
!1578 = distinct !DISubprogram(name: "from", linkageName: "_ZN122_$LT$alloc..collections..TryReserveError$u20$as$u20$core..convert..From$LT$alloc..collections..TryReserveErrorKind$GT$$GT$4from17had8cb7e0f7597304E", scope: !1580, file: !1579, line: 135, type: !1581, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !1598)
!1579 = !DIFile(filename: "src/collections/mod.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "d19126c84ad91addef6d7b51309f944b")
!1580 = !DINamespace(name: "{impl#1}", scope: !1356)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!1583, !1586}
!1583 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveError", scope: !1356, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1584, templateParams: !21, identifier: "29c1d4c055cb0595431ad54fb1333d75")
!1584 = !{!1585}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1583, file: !2, baseType: !1586, size: 64, align: 32, flags: DIFlagPrivate)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "TryReserveErrorKind", scope: !1356, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1587, templateParams: !21, identifier: "9253ef6e2ac0af73d2eb9e29b91e311c")
!1587 = !{!1588}
!1588 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1586, file: !2, size: 64, align: 32, elements: !1589, templateParams: !21, identifier: "7a4e7327d5edb9319a8b7da442e0bcdb", discriminator: !1597)
!1589 = !{!1590, !1592}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CapacityOverflow", scope: !1588, file: !2, baseType: !1591, size: 64, align: 32, extraData: i32 0)
!1591 = !DICompositeType(tag: DW_TAG_structure_type, name: "CapacityOverflow", scope: !1586, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, identifier: "2d3439b46a072156c22a7f96b391b090")
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "AllocError", scope: !1588, file: !2, baseType: !1593, size: 64, align: 32)
!1593 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !1586, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1594, templateParams: !21, identifier: "d1a57c22edce0078e0aa418dde9989e7")
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1593, file: !2, baseType: !39, size: 64, align: 32, flags: DIFlagPublic)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "non_exhaustive", scope: !1593, file: !2, baseType: !7, align: 8, offset: 64, flags: DIFlagPublic)
!1597 = !DIDerivedType(tag: DW_TAG_member, scope: !1586, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!1598 = !{!1599}
!1599 = !DILocalVariable(name: "kind", arg: 1, scope: !1578, file: !1579, line: 135, type: !1586)
!1600 = !DILocation(line: 135, column: 13, scope: !1578)
!1601 = !DILocation(line: 137, column: 6, scope: !1578)
!1602 = distinct !DISubprogram(name: "spec_extend<u8, alloc::alloc::Global>", linkageName: "_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17hb418f7fbabe4ee11E", scope: !1604, file: !1603, line: 53, type: !1606, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !1609)
!1603 = !DIFile(filename: "src/vec/spec_extend.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "0f12b53306a3a954b4b3286ee3754629")
!1604 = !DINamespace(name: "{impl#4}", scope: !1605)
!1605 = !DINamespace(name: "spec_extend", scope: !183)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{null, !1608, !1405}
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !182, size: 32, align: 32, dwarfAddressSpace: 0)
!1609 = !{!1610, !1611, !1612}
!1610 = !DILocalVariable(name: "self", arg: 1, scope: !1602, file: !1603, line: 53, type: !1608)
!1611 = !DILocalVariable(name: "iterator", arg: 2, scope: !1602, file: !1603, line: 53, type: !1405)
!1612 = !DILocalVariable(name: "slice", scope: !1613, file: !1603, line: 54, type: !432, align: 32)
!1613 = distinct !DILexicalBlock(scope: !1602, file: !1603, line: 54, column: 9)
!1614 = !DILocation(line: 53, column: 20, scope: !1602)
!1615 = !DILocation(line: 53, column: 31, scope: !1602)
!1616 = !DILocation(line: 54, column: 30, scope: !1602)
!1617 = !DILocation(line: 54, column: 13, scope: !1613)
!1618 = !DILocation(line: 55, column: 23, scope: !1613)
!1619 = !DILocation(line: 56, column: 6, scope: !1602)
!1620 = distinct !DISubprogram(name: "from_iter<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17h343fe317fc38becfE", scope: !1622, file: !1621, line: 2150, type: !1623, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1642, retainedNodes: !1640)
!1621 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "b6b58edaf4cfc5d1595488e3ef89d31a")
!1622 = !DINamespace(name: "{impl#26}", scope: !335)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!1625, !682}
!1625 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, core::char::decode::DecodeUtf16Error>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1626, templateParams: !21, identifier: "cfafbf549da3bd4ef781175b749ae9d0")
!1626 = !{!1627}
!1627 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1625, file: !2, size: 96, align: 32, elements: !1628, templateParams: !21, identifier: "68a3d3fa95af5af1d4d37f938f527d12", discriminator: !1639)
!1628 = !{!1629, !1635}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1627, file: !2, baseType: !1630, size: 96, align: 32)
!1630 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1625, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1631, templateParams: !1633, identifier: "863d9d663ef4579a8b79870551fb08d6")
!1631 = !{!1632}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1630, file: !2, baseType: !178, size: 96, align: 32, flags: DIFlagPublic)
!1633 = !{!1634, !975}
!1634 = !DITemplateTypeParameter(name: "T", type: !178)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1627, file: !2, baseType: !1636, size: 96, align: 32, extraData: i32 -2147483648)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1625, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1637, templateParams: !1633, identifier: "cf4c08995d820993a1a91a1a45c25ff2")
!1637 = !{!1638}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1636, file: !2, baseType: !976, size: 16, align: 16, offset: 32, flags: DIFlagPublic)
!1639 = !DIDerivedType(tag: DW_TAG_member, scope: !1625, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!1640 = !{!1641}
!1641 = !DILocalVariable(name: "iter", arg: 1, scope: !1620, file: !1621, line: 2150, type: !682)
!1642 = !{!1643, !975, !1644, !696}
!1643 = !DITemplateTypeParameter(name: "A", type: !574)
!1644 = !DITemplateTypeParameter(name: "V", type: !178)
!1645 = !DILocation(line: 2150, column: 56, scope: !1620)
!1646 = !DILocation(line: 2151, column: 32, scope: !1620)
!1647 = !DILocation(line: 2151, column: 9, scope: !1620)
!1648 = !DILocation(line: 2152, column: 6, scope: !1620)
!1649 = distinct !DISubprogram(name: "from_iter<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter17hac685922e551d632E", scope: !1622, file: !1621, line: 2150, type: !1650, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1654, retainedNodes: !1652)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!1625, !491}
!1652 = !{!1653}
!1653 = !DILocalVariable(name: "iter", arg: 1, scope: !1649, file: !1621, line: 2150, type: !491)
!1654 = !{!1643, !975, !1644, !552}
!1655 = !DILocation(line: 2150, column: 56, scope: !1649)
!1656 = !DILocation(line: 2151, column: 32, scope: !1649)
!1657 = !DILocation(line: 2151, column: 9, scope: !1649)
!1658 = !DILocation(line: 2152, column: 6, scope: !1649)
!1659 = distinct !DISubprogram(name: "{closure#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17h81a312cb4a3be80eE", scope: !1660, file: !1621, line: 2151, type: !1661, scopeLine: 2151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1654, retainedNodes: !1665)
!1660 = !DINamespace(name: "from_iter", scope: !1622)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!178, !1663, !1012}
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::result::{impl#26}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", baseType: !1664, size: 32, align: 32, dwarfAddressSpace: 0)
!1664 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", scope: !1660, file: !2, align: 8, elements: !21, identifier: "9275776fd7007944eedddeaf006c26b")
!1665 = !{!1666, !1667}
!1666 = !DILocalVariable(name: "i", arg: 2, scope: !1659, file: !1621, line: 2151, type: !1012)
!1667 = !DILocalVariable(arg: 1, scope: !1659, file: !1621, line: 2151, type: !1663)
!1668 = !DILocation(line: 2151, column: 45, scope: !1659)
!1669 = !DILocation(line: 2151, column: 46, scope: !1659)
!1670 = !DILocation(line: 2151, column: 51, scope: !1659)
!1671 = !DILocation(line: 2151, column: 60, scope: !1659)
!1672 = distinct !DISubprogram(name: "{closure#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN136_$LT$core..result..Result$LT$V$C$E$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$core..result..Result$LT$A$C$E$GT$$GT$$GT$9from_iter28_$u7b$$u7b$closure$u7d$$u7d$17he44d5f1c2393ed42E", scope: !1660, file: !1621, line: 2151, type: !1673, scopeLine: 2151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1642, retainedNodes: !1677)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!178, !1675, !948}
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::result::{impl#26}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", baseType: !1676, size: 32, align: 32, dwarfAddressSpace: 0)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", scope: !1660, file: !2, align: 8, elements: !21, identifier: "3f099a96931c8489794882c324c52a31")
!1677 = !{!1678, !1679}
!1678 = !DILocalVariable(name: "i", arg: 2, scope: !1672, file: !1621, line: 2151, type: !948)
!1679 = !DILocalVariable(arg: 1, scope: !1672, file: !1621, line: 2151, type: !1675)
!1680 = !DILocation(line: 2151, column: 45, scope: !1672)
!1681 = !DILocation(line: 2151, column: 46, scope: !1672)
!1682 = !DILocation(line: 2151, column: 51, scope: !1672)
!1683 = !DILocation(line: 2151, column: 60, scope: !1672)
!1684 = distinct !DISubprogram(name: "from_residual<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN145_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..option..Option$LT$core..convert..Infallible$GT$$GT$$GT$13from_residual17h7f917dc30691e145E", scope: !1686, file: !1685, line: 2673, type: !1687, scopeLine: 2673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1695, retainedNodes: !1713)
!1685 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "8e84075e2ccbbe34be511c8d1355506d")
!1686 = !DINamespace(name: "{impl#41}", scope: !14)
!1687 = !DISubroutineType(types: !1688)
!1688 = !{!1689, !1702}
!1689 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::result::Result<char, core::char::decode::DecodeUtf16Error>>", scope: !14, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1690, templateParams: !21, identifier: "42acdddb6c91526f6add5b27528f6b62")
!1690 = !{!1691}
!1691 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1689, file: !2, size: 64, align: 32, elements: !1692, templateParams: !21, identifier: "feed2b47f0f4ad376670acb11c94499f", discriminator: !1701)
!1692 = !{!1693, !1697}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1691, file: !2, baseType: !1694, size: 64, align: 32, extraData: i16 2)
!1694 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1689, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !1695, identifier: "a9a78e0aae411f0e32de49162002726d")
!1695 = !{!1696}
!1696 = !DITemplateTypeParameter(name: "T", type: !1112)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1691, file: !2, baseType: !1698, size: 64, align: 32)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1689, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1699, templateParams: !1695, identifier: "f06f727fea73c0819945880ae705bb64")
!1699 = !{!1700}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1698, file: !2, baseType: !1112, size: 64, align: 32, flags: DIFlagPublic)
!1701 = !DIDerivedType(tag: DW_TAG_member, scope: !1689, file: !2, baseType: !359, size: 16, align: 16, flags: DIFlagArtificial)
!1702 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !14, file: !2, align: 8, flags: DIFlagPublic, elements: !1703, templateParams: !21, identifier: "9b6c9073db236d9ff1d56f0661f0ec14")
!1703 = !{!1704}
!1704 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1702, file: !2, align: 8, elements: !1705, templateParams: !21, identifier: "a233f30efe3bb8b1e75bd84589e6176e")
!1705 = !{!1706, !1709}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1704, file: !2, baseType: !1707, align: 8)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1702, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !1708, identifier: "6cefa6fa2abaa24ef975313467073b05")
!1708 = !{!974}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1704, file: !2, baseType: !1710, align: 8)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1702, file: !2, align: 8, flags: DIFlagPublic, elements: !1711, templateParams: !1708, identifier: "7799c6cbd728f2f9bec7debffe6d8503")
!1711 = !{!1712}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1710, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!1713 = !{!1714, !1715}
!1714 = !DILocalVariable(name: "residual", scope: !1684, file: !1685, line: 2673, type: !1702, align: 8)
!1715 = !DILocalVariable(arg: 1, scope: !1684, file: !1685, line: 2673, type: !1702)
!1716 = !DILocation(line: 2673, column: 22, scope: !1684)
!1717 = !DILocation(line: 2675, column: 21, scope: !1684)
!1718 = !DILocation(line: 2677, column: 6, scope: !1684)
!1719 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN150_$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h465bfa70caa3a397E", scope: !1721, file: !1720, line: 180, type: !1725, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !1744)
!1720 = !DIFile(filename: "src/vec/drain.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "4d9cce2cbfc5a8bc78139144876ed634")
!1721 = !DINamespace(name: "{impl#0}", scope: !1722)
!1722 = !DINamespace(name: "drop", scope: !1723)
!1723 = !DINamespace(name: "{impl#7}", scope: !1724)
!1724 = !DINamespace(name: "drain", scope: !183)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{null, !1727}
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>", baseType: !1728, size: 32, align: 32, dwarfAddressSpace: 0)
!1728 = !DICompositeType(tag: DW_TAG_structure_type, name: "DropGuard<u8, alloc::alloc::Global>", scope: !1722, file: !2, size: 32, align: 32, flags: DIFlagProtected, elements: !1729, templateParams: !217, identifier: "2ce0ce102e14b14df5b26155979a1e4c")
!1729 = !{!1730}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1728, file: !2, baseType: !1731, size: 32, align: 32, flags: DIFlagProtected)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::vec::drain::Drain<u8, alloc::alloc::Global>", baseType: !1732, size: 32, align: 32, dwarfAddressSpace: 0)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "Drain<u8, alloc::alloc::Global>", scope: !1724, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !1733, templateParams: !217, identifier: "f4eed9148105931238e15ef77b009b38")
!1733 = !{!1734, !1735, !1736, !1737}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "tail_start", scope: !1732, file: !2, baseType: !9, size: 32, align: 32, offset: 96, flags: DIFlagProtected)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tail_len", scope: !1732, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagProtected)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1732, file: !2, baseType: !1405, size: 64, align: 32, flags: DIFlagProtected)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1732, file: !2, baseType: !1738, size: 32, align: 32, offset: 64, flags: DIFlagProtected)
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !1739, templateParams: !1742, identifier: "706d723b3bbc9f528dbe14a9801c1faa")
!1739 = !{!1740}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1738, file: !2, baseType: !1741, size: 32, align: 32, flags: DIFlagPrivate)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !182, size: 32, align: 32, dwarfAddressSpace: 0)
!1742 = !{!1743}
!1743 = !DITemplateTypeParameter(name: "T", type: !182)
!1744 = !{!1745, !1746, !1748, !1750, !1752, !1754}
!1745 = !DILocalVariable(name: "self", arg: 1, scope: !1719, file: !1720, line: 180, type: !1727)
!1746 = !DILocalVariable(name: "source_vec", scope: !1747, file: !1720, line: 183, type: !1608, align: 32)
!1747 = distinct !DILexicalBlock(scope: !1719, file: !1720, line: 183, column: 25)
!1748 = !DILocalVariable(name: "start", scope: !1749, file: !1720, line: 185, type: !9, align: 32)
!1749 = distinct !DILexicalBlock(scope: !1747, file: !1720, line: 185, column: 25)
!1750 = !DILocalVariable(name: "tail", scope: !1751, file: !1720, line: 186, type: !9, align: 32)
!1751 = distinct !DILexicalBlock(scope: !1749, file: !1720, line: 186, column: 25)
!1752 = !DILocalVariable(name: "src", scope: !1753, file: !1720, line: 188, type: !201, align: 32)
!1753 = distinct !DILexicalBlock(scope: !1751, file: !1720, line: 188, column: 29)
!1754 = !DILocalVariable(name: "dst", scope: !1755, file: !1720, line: 189, type: !463, align: 32)
!1755 = distinct !DILexicalBlock(scope: !1753, file: !1720, line: 189, column: 29)
!1756 = !DILocation(line: 180, column: 21, scope: !1719)
!1757 = !DILocation(line: 181, column: 20, scope: !1719)
!1758 = !DILocation(line: 195, column: 14, scope: !1719)
!1759 = !DILocation(line: 183, column: 42, scope: !1719)
!1760 = !DILocalVariable(name: "self", arg: 1, scope: !1761, file: !1538, line: 478, type: !1764)
!1761 = distinct !DISubprogram(name: "as_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h360868c87dd7a537E", scope: !1738, file: !1538, line: 478, type: !1762, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, declaration: !1765, retainedNodes: !1766)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{!1608, !1764}
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::ptr::non_null::NonNull<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !1738, size: 32, align: 32, dwarfAddressSpace: 0)
!1765 = !DISubprogram(name: "as_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_mut17h360868c87dd7a537E", scope: !1738, file: !1538, line: 478, type: !1762, scopeLine: 478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1742)
!1766 = !{!1760}
!1767 = !DILocation(line: 478, column: 36, scope: !1761, inlinedAt: !1768)
!1768 = distinct !DILocation(line: 183, column: 53, scope: !1719)
!1769 = !DILocation(line: 481, column: 24, scope: !1761, inlinedAt: !1768)
!1770 = !DILocalVariable(name: "self", arg: 1, scope: !1771, file: !1538, line: 401, type: !1738)
!1771 = distinct !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h574acacd63b62f5fE", scope: !1738, file: !1538, line: 401, type: !1772, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, declaration: !1775, retainedNodes: !1776)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!1774, !1738}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !182, size: 32, align: 32, dwarfAddressSpace: 0)
!1775 = !DISubprogram(name: "as_ptr<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h574acacd63b62f5fE", scope: !1738, file: !1538, line: 401, type: !1772, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1742)
!1776 = !{!1770}
!1777 = !DILocation(line: 401, column: 25, scope: !1771, inlinedAt: !1778)
!1778 = distinct !DILocation(line: 481, column: 29, scope: !1761, inlinedAt: !1768)
!1779 = !DILocation(line: 183, column: 53, scope: !1719)
!1780 = !DILocation(line: 183, column: 29, scope: !1747)
!1781 = !DILocation(line: 185, column: 48, scope: !1747)
!1782 = !DILocation(line: 185, column: 29, scope: !1749)
!1783 = !DILocation(line: 186, column: 36, scope: !1749)
!1784 = !DILocation(line: 186, column: 29, scope: !1751)
!1785 = !DILocation(line: 187, column: 28, scope: !1751)
!1786 = !DILocation(line: 192, column: 52, scope: !1751)
!1787 = !DILocation(line: 192, column: 44, scope: !1751)
!1788 = !DILocation(line: 188, column: 50, scope: !1751)
!1789 = !DILocalVariable(name: "self", arg: 1, scope: !1790, file: !1791, line: 829, type: !201)
!1790 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h68b5e57700fc1345E", scope: !1792, file: !1791, line: 829, type: !1794, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1796)
!1791 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "473e695c4e056b47688e2be1785e83b5")
!1792 = !DINamespace(name: "{impl#0}", scope: !1793)
!1793 = !DINamespace(name: "const_ptr", scope: !47)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!201, !201, !9, !1241}
!1796 = !{!1789, !1797}
!1797 = !DILocalVariable(name: "count", arg: 2, scope: !1790, file: !1791, line: 829, type: !9)
!1798 = !DILocation(line: 829, column: 29, scope: !1790, inlinedAt: !1799)
!1799 = distinct !DILocation(line: 188, column: 59, scope: !1751)
!1800 = !DILocation(line: 829, column: 35, scope: !1790, inlinedAt: !1799)
!1801 = !DILocation(line: 77, column: 35, scope: !1802, inlinedAt: !1799)
!1802 = !DILexicalBlockFile(scope: !1790, file: !473, discriminator: 0)
!1803 = !DILocation(line: 78, column: 17, scope: !1802, inlinedAt: !1799)
!1804 = !DILocation(line: 863, column: 18, scope: !1790, inlinedAt: !1799)
!1805 = !DILocation(line: 188, column: 59, scope: !1751)
!1806 = !DILocation(line: 188, column: 33, scope: !1753)
!1807 = !DILocation(line: 189, column: 50, scope: !1753)
!1808 = !DILocalVariable(name: "self", arg: 1, scope: !1809, file: !1810, line: 927, type: !463)
!1809 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h1d4f89e397b60a74E", scope: !1811, file: !1810, line: 927, type: !1813, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1815)
!1810 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "b0bbe11126e084b85a45fba4c5663912")
!1811 = !DINamespace(name: "{impl#0}", scope: !1812)
!1812 = !DINamespace(name: "mut_ptr", scope: !47)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!463, !463, !9, !1241}
!1815 = !{!1808, !1816}
!1816 = !DILocalVariable(name: "count", arg: 2, scope: !1809, file: !1810, line: 927, type: !9)
!1817 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !1818)
!1818 = distinct !DILocation(line: 189, column: 63, scope: !1753)
!1819 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !1818)
!1820 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !1818)
!1821 = !DILexicalBlockFile(scope: !1809, file: !473, discriminator: 0)
!1822 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !1818)
!1823 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !1818)
!1824 = !DILocation(line: 189, column: 63, scope: !1753)
!1825 = !DILocation(line: 189, column: 33, scope: !1755)
!1826 = !DILocation(line: 190, column: 49, scope: !1755)
!1827 = !DILocalVariable(name: "src", arg: 1, scope: !1828, file: !460, line: 623, type: !201)
!1828 = distinct !DISubprogram(name: "copy<u8>", linkageName: "_ZN4core3ptr4copy17hd17edac4d372e62bE", scope: !47, file: !460, line: 623, type: !461, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !1829)
!1829 = !{!1827, !1830, !1831}
!1830 = !DILocalVariable(name: "dst", arg: 2, scope: !1828, file: !460, line: 623, type: !463)
!1831 = !DILocalVariable(name: "count", arg: 3, scope: !1828, file: !460, line: 623, type: !9)
!1832 = !DILocation(line: 623, column: 29, scope: !1828, inlinedAt: !1833)
!1833 = distinct !DILocation(line: 190, column: 29, scope: !1755)
!1834 = !DILocation(line: 623, column: 44, scope: !1828, inlinedAt: !1833)
!1835 = !DILocation(line: 623, column: 57, scope: !1828, inlinedAt: !1833)
!1836 = !DILocation(line: 77, column: 35, scope: !1837, inlinedAt: !1833)
!1837 = !DILexicalBlockFile(scope: !1828, file: !473, discriminator: 0)
!1838 = !DILocation(line: 633, column: 48, scope: !1828, inlinedAt: !1833)
!1839 = !DILocation(line: 78, column: 17, scope: !1837, inlinedAt: !1833)
!1840 = !DILocation(line: 638, column: 9, scope: !1828, inlinedAt: !1833)
!1841 = !DILocation(line: 190, column: 29, scope: !1755)
!1842 = !DILocation(line: 192, column: 36, scope: !1751)
!1843 = distinct !DISubprogram(name: "from_residual<alloc::string::String, core::char::decode::DecodeUtf16Error, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h0156064f922d25f6E", scope: !1844, file: !1621, line: 2182, type: !1845, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1851, retainedNodes: !1847)
!1844 = !DINamespace(name: "{impl#28}", scope: !335)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!1625, !961, !1241}
!1847 = !{!1848, !1849}
!1848 = !DILocalVariable(name: "residual", arg: 1, scope: !1843, file: !1621, line: 2182, type: !961)
!1849 = !DILocalVariable(name: "e", scope: !1850, file: !1621, line: 2184, type: !976, align: 16)
!1850 = distinct !DILexicalBlock(scope: !1843, file: !1621, line: 2184, column: 13)
!1851 = !{!1634, !975, !1852}
!1852 = !DITemplateTypeParameter(name: "F", type: !976)
!1853 = !DILocation(line: 2182, column: 22, scope: !1843)
!1854 = !DILocation(line: 2184, column: 17, scope: !1843)
!1855 = !DILocation(line: 2184, column: 17, scope: !1850)
!1856 = !DILocalVariable(name: "t", arg: 1, scope: !1857, file: !1858, line: 788, type: !976)
!1857 = distinct !DISubprogram(name: "from<core::char::decode::DecodeUtf16Error>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h271c9ded79646ff3E", scope: !1859, file: !1858, line: 788, type: !1860, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1863, retainedNodes: !1862)
!1858 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "731b373eab15d9a7565b3b74914b48da")
!1859 = !DINamespace(name: "{impl#4}", scope: !970)
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!976, !976}
!1862 = !{!1856}
!1863 = !{!1864}
!1864 = !DITemplateTypeParameter(name: "T", type: !976)
!1865 = !DILocation(line: 788, column: 13, scope: !1857, inlinedAt: !1866)
!1866 = distinct !DILocation(line: 2184, column: 27, scope: !1850)
!1867 = !DILocation(line: 2184, column: 23, scope: !1850)
!1868 = !DILocation(line: 2186, column: 6, scope: !1843)
!1869 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h168a58a0e7ce6f64E", scope: !1844, file: !1621, line: 2182, type: !1870, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1904, retainedNodes: !1900)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!1872, !1887, !1241}
!1872 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(), alloc::collections::TryReserveError>", scope: !335, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1873, templateParams: !21, identifier: "5b888b16997e2ba57ab4cef30841cc8a")
!1873 = !{!1874}
!1874 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1872, file: !2, size: 64, align: 32, elements: !1875, templateParams: !21, identifier: "e00ef7e54538fa5ebafe6f5acb727061", discriminator: !1886)
!1875 = !{!1876, !1882}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1874, file: !2, baseType: !1877, size: 64, align: 32, extraData: i32 -2147483647)
!1877 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1872, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1878, templateParams: !1880, identifier: "edb8d4c00a209ba58076199030c0aea")
!1878 = !{!1879}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1877, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!1880 = !{!329, !1881}
!1881 = !DITemplateTypeParameter(name: "E", type: !1583)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1874, file: !2, baseType: !1883, size: 64, align: 32)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1872, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1884, templateParams: !1880, identifier: "bd07e7280b40c4e62f0d1a191c1858c")
!1884 = !{!1885}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1883, file: !2, baseType: !1583, size: 64, align: 32, flags: DIFlagPublic)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1872, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!1887 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveError>", scope: !335, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1888, templateParams: !21, identifier: "19a453febab871b38f5f594cabd06999")
!1888 = !{!1889}
!1889 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1887, file: !2, size: 64, align: 32, elements: !1890, templateParams: !21, identifier: "724eca5cc24eeaefeb98e9e9bb713233")
!1890 = !{!1891, !1896}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1889, file: !2, baseType: !1892, size: 64, align: 32)
!1892 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1887, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1893, templateParams: !1895, identifier: "af1a6e8ef201d3c641a22c474b02fe1b")
!1893 = !{!1894}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1892, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!1895 = !{!974, !1881}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1889, file: !2, baseType: !1897, size: 64, align: 32)
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1887, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1898, templateParams: !1895, identifier: "fcd788f2b5b93a29eea3ea563f1b06a2")
!1898 = !{!1899}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1897, file: !2, baseType: !1583, size: 64, align: 32, flags: DIFlagPublic)
!1900 = !{!1901, !1902}
!1901 = !DILocalVariable(name: "residual", arg: 1, scope: !1869, file: !1621, line: 2182, type: !1887)
!1902 = !DILocalVariable(name: "e", scope: !1903, file: !1621, line: 2184, type: !1583, align: 32)
!1903 = distinct !DILexicalBlock(scope: !1869, file: !1621, line: 2184, column: 13)
!1904 = !{!329, !1881, !1905}
!1905 = !DITemplateTypeParameter(name: "F", type: !1583)
!1906 = !DILocation(line: 2182, column: 22, scope: !1869)
!1907 = !DILocation(line: 2184, column: 17, scope: !1869)
!1908 = !DILocation(line: 2184, column: 17, scope: !1903)
!1909 = !DILocalVariable(name: "t", arg: 1, scope: !1910, file: !1858, line: 788, type: !1583)
!1910 = distinct !DISubprogram(name: "from<alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h8fe3b242c5de75f6E", scope: !1859, file: !1858, line: 788, type: !1911, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1914, retainedNodes: !1913)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!1583, !1583}
!1913 = !{!1909}
!1914 = !{!1915}
!1915 = !DITemplateTypeParameter(name: "T", type: !1583)
!1916 = !DILocation(line: 788, column: 13, scope: !1910, inlinedAt: !1917)
!1917 = distinct !DILocation(line: 2184, column: 27, scope: !1903)
!1918 = !DILocation(line: 790, column: 6, scope: !1910, inlinedAt: !1917)
!1919 = !DILocation(line: 2184, column: 27, scope: !1903)
!1920 = !DILocation(line: 2186, column: 6, scope: !1869)
!1921 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17ha6eac4d75f65c33cE", scope: !1844, file: !1621, line: 2182, type: !1922, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1946, retainedNodes: !1942)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!1924, !1887, !1241}
!1924 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1925, templateParams: !21, identifier: "38184fba605d481364730fce890b3d6f")
!1925 = !{!1926}
!1926 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1924, file: !2, size: 96, align: 32, elements: !1927, templateParams: !21, identifier: "3b44b338f4c7cf13a2afebbf74b3ed2", discriminator: !1941)
!1927 = !{!1928, !1937}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1926, file: !2, baseType: !1929, size: 96, align: 32, extraData: i32 0)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1924, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1930, templateParams: !1935, identifier: "c598b0ea09b63120ad172cc1fd5a07f9")
!1930 = !{!1931}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1929, file: !2, baseType: !1932, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!1932 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8]>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1933, templateParams: !22, identifier: "63afe4dc267db9c7c31bcf5dce3dc5fa")
!1933 = !{!1934}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1932, file: !2, baseType: !1230, size: 64, align: 32, flags: DIFlagPrivate)
!1935 = !{!1936, !1881}
!1936 = !DITemplateTypeParameter(name: "T", type: !1932)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1926, file: !2, baseType: !1938, size: 96, align: 32, extraData: i32 1)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1924, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !1939, templateParams: !1935, identifier: "738c8fa141155001a43089367593b7e7")
!1939 = !{!1940}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1938, file: !2, baseType: !1583, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!1941 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!1942 = !{!1943, !1944}
!1943 = !DILocalVariable(name: "residual", arg: 1, scope: !1921, file: !1621, line: 2182, type: !1887)
!1944 = !DILocalVariable(name: "e", scope: !1945, file: !1621, line: 2184, type: !1583, align: 32)
!1945 = distinct !DILexicalBlock(scope: !1921, file: !1621, line: 2184, column: 13)
!1946 = !{!1936, !1881, !1905}
!1947 = !DILocation(line: 2182, column: 22, scope: !1921)
!1948 = !DILocation(line: 2184, column: 17, scope: !1921)
!1949 = !DILocation(line: 2184, column: 17, scope: !1945)
!1950 = !DILocation(line: 788, column: 13, scope: !1910, inlinedAt: !1951)
!1951 = distinct !DILocation(line: 2184, column: 27, scope: !1945)
!1952 = !DILocation(line: 790, column: 6, scope: !1910, inlinedAt: !1951)
!1953 = !DILocation(line: 2184, column: 27, scope: !1945)
!1954 = !DILocation(line: 2184, column: 23, scope: !1945)
!1955 = !DILocation(line: 2186, column: 6, scope: !1921)
!1956 = distinct !DISubprogram(name: "from_residual<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hbd212d42dd8e72f9E", scope: !1844, file: !1621, line: 2182, type: !1957, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1992, retainedNodes: !1988)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!1959, !1975, !1241}
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", scope: !335, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1960, templateParams: !21, identifier: "621f4c248d48cb85b1bb5a959d70dd40")
!1960 = !{!1961}
!1961 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1959, file: !2, size: 64, align: 32, elements: !1962, templateParams: !21, identifier: "ab7319af1bd471edff13bdf368ae1b34", discriminator: !1974)
!1962 = !{!1963, !1970}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1961, file: !2, baseType: !1964, size: 64, align: 32)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1959, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1965, templateParams: !1967, identifier: "bdd19ecc44e3eba4b2d06a28df1b5e8f")
!1965 = !{!1966}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1964, file: !2, baseType: !1932, size: 64, align: 32, flags: DIFlagPublic)
!1967 = !{!1936, !1968}
!1968 = !DITemplateTypeParameter(name: "E", type: !1969)
!1969 = !DICompositeType(tag: DW_TAG_structure_type, name: "AllocError", scope: !41, file: !2, align: 8, flags: DIFlagPublic, elements: !21, identifier: "aa948b6092f32f441a138171efeb38d8")
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1961, file: !2, baseType: !1971, size: 64, align: 32, extraData: i32 0)
!1971 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1959, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !1972, templateParams: !1967, identifier: "5fac8b00a5770b0ad82a49c2a1d697c9")
!1972 = !{!1973}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1971, file: !2, baseType: !1969, align: 8, flags: DIFlagPublic)
!1974 = !DIDerivedType(tag: DW_TAG_member, scope: !1959, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!1975 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::alloc::AllocError>", scope: !335, file: !2, align: 8, flags: DIFlagPublic, elements: !1976, templateParams: !21, identifier: "f2b62bba2cc68ba85f1737fc67e67")
!1976 = !{!1977}
!1977 = !DICompositeType(tag: DW_TAG_variant_part, scope: !1975, file: !2, align: 8, elements: !1978, templateParams: !21, identifier: "7099e72a404ce2923d6aef035e9b730d")
!1978 = !{!1979, !1984}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1977, file: !2, baseType: !1980, align: 8)
!1980 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1975, file: !2, align: 8, flags: DIFlagPublic, elements: !1981, templateParams: !1983, identifier: "85c8127fba82f59227ddd5a6dfce6ad6")
!1981 = !{!1982}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1980, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!1983 = !{!974, !1968}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1977, file: !2, baseType: !1985, align: 8)
!1985 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1975, file: !2, align: 8, flags: DIFlagPublic, elements: !1986, templateParams: !1983, identifier: "94f2a836cc75269a6e57ee3b2319be7e")
!1986 = !{!1987}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1985, file: !2, baseType: !1969, align: 8, flags: DIFlagPublic)
!1988 = !{!1989, !1990}
!1989 = !DILocalVariable(name: "residual", arg: 1, scope: !1956, file: !1621, line: 2182, type: !1975)
!1990 = !DILocalVariable(name: "e", scope: !1991, file: !1621, line: 2184, type: !1969, align: 8)
!1991 = distinct !DILexicalBlock(scope: !1956, file: !1621, line: 2184, column: 13)
!1992 = !{!1936, !1968, !1993}
!1993 = !DITemplateTypeParameter(name: "F", type: !1969)
!1994 = !DILocation(line: 2182, column: 22, scope: !1956)
!1995 = !DILocation(line: 2184, column: 17, scope: !1991)
!1996 = !DILocalVariable(name: "t", arg: 1, scope: !1997, file: !1858, line: 788, type: !1969)
!1997 = distinct !DISubprogram(name: "from<core::alloc::AllocError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..From$LT$T$GT$$GT$4from17h9826bffb4e07fdb4E", scope: !1859, file: !1858, line: 788, type: !1998, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2001, retainedNodes: !2000)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !1969}
!2000 = !{!1996}
!2001 = !{!2002}
!2002 = !DITemplateTypeParameter(name: "T", type: !1969)
!2003 = !DILocation(line: 788, column: 13, scope: !1997, inlinedAt: !2004)
!2004 = distinct !DILocation(line: 2184, column: 27, scope: !1991)
!2005 = !DILocation(line: 2186, column: 6, scope: !1956)
!2006 = distinct !DISubprogram(name: "from_residual<(), alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hcec71ed72ec794a3E", scope: !1844, file: !1621, line: 2182, type: !2007, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2027, retainedNodes: !2023)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!1872, !2009, !1241}
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>", scope: !335, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2010, templateParams: !21, identifier: "1481556532547b4c83b4e590913539c")
!2010 = !{!2011}
!2011 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2009, file: !2, size: 64, align: 32, elements: !2012, templateParams: !21, identifier: "5af85f1bfe926415cf09fb5f37b6ff15")
!2012 = !{!2013, !2019}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2011, file: !2, baseType: !2014, size: 64, align: 32)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2009, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2015, templateParams: !2017, identifier: "27d79c56622dac579b44679b2b18f55b")
!2015 = !{!2016}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2014, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!2017 = !{!974, !2018}
!2018 = !DITemplateTypeParameter(name: "E", type: !1586)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2011, file: !2, baseType: !2020, size: 64, align: 32)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2009, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2021, templateParams: !2017, identifier: "c049ee365ae03859798ef0f6742dbf31")
!2021 = !{!2022}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2020, file: !2, baseType: !1586, size: 64, align: 32, flags: DIFlagPublic)
!2023 = !{!2024, !2025}
!2024 = !DILocalVariable(name: "residual", arg: 1, scope: !2006, file: !1621, line: 2182, type: !2009)
!2025 = !DILocalVariable(name: "e", scope: !2026, file: !1621, line: 2184, type: !1586, align: 32)
!2026 = distinct !DILexicalBlock(scope: !2006, file: !1621, line: 2184, column: 13)
!2027 = !{!329, !2018, !1905}
!2028 = !DILocation(line: 2182, column: 22, scope: !2006)
!2029 = !DILocation(line: 2184, column: 17, scope: !2006)
!2030 = !DILocation(line: 2184, column: 17, scope: !2026)
!2031 = !DILocation(line: 2184, column: 27, scope: !2026)
!2032 = !DILocation(line: 2186, column: 6, scope: !2006)
!2033 = distinct !DISubprogram(name: "from_residual<*mut alloc::rc::RcInner<[u8]>, core::alloc::AllocError, core::alloc::AllocError>", linkageName: "_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hdcf57f4260b9a90fE", scope: !1844, file: !1621, line: 2182, type: !2034, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2069, retainedNodes: !2065)
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!2036, !1975, !1241}
!2036 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<*mut alloc::rc::RcInner<[u8]>, core::alloc::AllocError>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !2037, templateParams: !21, identifier: "3f4ecf54ff3e809c29e75a592d4cfbc9")
!2037 = !{!2038}
!2038 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2036, file: !2, size: 96, align: 32, elements: !2039, templateParams: !21, identifier: "acced6a816574321cdc59700a37d79a", discriminator: !2064)
!2039 = !{!2040, !2060}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2038, file: !2, baseType: !2041, size: 96, align: 32, extraData: i32 0)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2036, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !2042, templateParams: !2058, identifier: "699803007c180cf2d139dcfe0bed257b")
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2041, file: !2, baseType: !2044, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!2044 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut alloc::rc::RcInner<[u8]>", file: !2, size: 64, align: 32, elements: !2045, templateParams: !21, identifier: "7d6aa415e92dcfc4178eb59c217028e3")
!2045 = !{!2046, !2057}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2044, file: !2, baseType: !2047, size: 32, align: 32)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32, align: 32, dwarfAddressSpace: 0)
!2048 = !DICompositeType(tag: DW_TAG_structure_type, name: "RcInner<[u8]>", scope: !2049, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !2050, templateParams: !22, identifier: "d4ffcce5391140b7eeea3265a7ff7c64")
!2049 = !DINamespace(name: "rc", scope: !132)
!2050 = !{!2051, !2055, !2056}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !2048, file: !2, baseType: !2052, size: 32, align: 32, flags: DIFlagPrivate)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cell<usize>", scope: !146, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2053, templateParams: !109, identifier: "5dadc741b226d78199372970fc4ec71a")
!2053 = !{!2054}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2052, file: !2, baseType: !145, size: 32, align: 32, flags: DIFlagPrivate)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !2048, file: !2, baseType: !2052, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2048, file: !2, baseType: !24, align: 8, offset: 64, flags: DIFlagPrivate)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2044, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!2058 = !{!2059, !1968}
!2059 = !DITemplateTypeParameter(name: "T", type: !2044)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2038, file: !2, baseType: !2061, size: 96, align: 32, extraData: i32 1)
!2061 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2036, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !2062, templateParams: !2058, identifier: "8af515f52b1e39f372647049e4d54688")
!2062 = !{!2063}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2061, file: !2, baseType: !1969, align: 8, offset: 32, flags: DIFlagPublic)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!2065 = !{!2066, !2067}
!2066 = !DILocalVariable(name: "residual", arg: 1, scope: !2033, file: !1621, line: 2182, type: !1975)
!2067 = !DILocalVariable(name: "e", scope: !2068, file: !1621, line: 2184, type: !1969, align: 8)
!2068 = distinct !DILexicalBlock(scope: !2033, file: !1621, line: 2184, column: 13)
!2069 = !{!2059, !1968, !1993}
!2070 = !DILocation(line: 2182, column: 22, scope: !2033)
!2071 = !DILocation(line: 2184, column: 17, scope: !2068)
!2072 = !DILocation(line: 788, column: 13, scope: !1997, inlinedAt: !2073)
!2073 = distinct !DILocation(line: 2184, column: 27, scope: !2068)
!2074 = !DILocation(line: 2184, column: 23, scope: !2068)
!2075 = !DILocation(line: 2186, column: 6, scope: !2033)
!2076 = distinct !DISubprogram(name: "from_residual<()>", linkageName: "_ZN158_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..try_trait..NeverShortCircuitResidual$GT$$GT$13from_residual17hcf0748bb94e2ae25E", scope: !2078, file: !2077, line: 421, type: !2079, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !328, retainedNodes: !2084)
!2077 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/try_trait.rs", directory: "", checksumkind: CSK_MD5, checksum: "718b89ba5f1928aa7730fb5f5cac1a83")
!2078 = !DINamespace(name: "{impl#2}", scope: !1043)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{null, !2081}
!2081 = !DICompositeType(tag: DW_TAG_structure_type, name: "NeverShortCircuitResidual", scope: !1043, file: !2, align: 8, flags: DIFlagProtected, elements: !2082, templateParams: !21, identifier: "873ac4c014a176527089ed4d13f3f031")
!2082 = !{!2083}
!2083 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2081, file: !2, align: 8, elements: !21, identifier: "9929060222e6f82e3134b06f1eea6605")
!2084 = !{!2085, !2086}
!2085 = !DILocalVariable(name: "never", scope: !2076, file: !2077, line: 421, type: !2081, align: 8)
!2086 = !DILocalVariable(arg: 1, scope: !2076, file: !2077, line: 421, type: !2081)
!2087 = !DILocation(line: 421, column: 22, scope: !2076)
!2088 = !DILocation(line: 422, column: 15, scope: !2076)
!2089 = distinct !DISubprogram(name: "from_residual<core::ops::try_trait::NeverShortCircuit<()>, ()>", linkageName: "_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h11ad804e7e25f717E", scope: !2091, file: !2090, line: 128, type: !2092, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1098, retainedNodes: !2108)
!2090 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/control_flow.rs", directory: "", checksumkind: CSK_MD5, checksum: "44d462a380a0d8aa930c564c84285317")
!2091 = !DINamespace(name: "{impl#1}", scope: !1090)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!1089, !2094}
!2094 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, core::convert::Infallible>", scope: !1090, file: !2, align: 8, flags: DIFlagPublic, elements: !2095, templateParams: !21, identifier: "732e3cf862b3b8221f5d4d337ea57f9e")
!2095 = !{!2096}
!2096 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2094, file: !2, align: 8, elements: !2097, templateParams: !21, identifier: "efce016f3384c7c264f66c4a04b85368")
!2097 = !{!2098, !2104}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2096, file: !2, baseType: !2099, align: 8)
!2099 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2094, file: !2, align: 8, flags: DIFlagPublic, elements: !2100, templateParams: !2102, identifier: "7ffcd51937ed5f52f95783f2e3d8210")
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2099, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!2102 = !{!1099, !2103}
!2103 = !DITemplateTypeParameter(name: "C", type: !969)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2096, file: !2, baseType: !2105, align: 8)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2094, file: !2, align: 8, flags: DIFlagPublic, elements: !2106, templateParams: !2102, identifier: "eeb0cae406f2be60f788dad1b80cfb27")
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2105, file: !2, baseType: !1055, align: 8, flags: DIFlagPublic)
!2108 = !{!2109, !2110}
!2109 = !DILocalVariable(name: "residual", arg: 1, scope: !2089, file: !2090, line: 128, type: !2094)
!2110 = !DILocalVariable(name: "b", scope: !2111, file: !2090, line: 130, type: !1055, align: 8)
!2111 = distinct !DILexicalBlock(scope: !2089, file: !2090, line: 130, column: 13)
!2112 = !DILocation(line: 128, column: 22, scope: !2089)
!2113 = !DILocation(line: 130, column: 32, scope: !2111)
!2114 = !DILocation(line: 132, column: 6, scope: !2089)
!2115 = distinct !DISubprogram(name: "from_residual<char, ()>", linkageName: "_ZN185_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..ops..control_flow..ControlFlow$LT$B$C$core..convert..Infallible$GT$$GT$$GT$13from_residual17h1c1608b22587779cE", scope: !2091, file: !2090, line: 128, type: !2116, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2126, retainedNodes: !2145)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!2118, !2132}
!2118 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<char, ()>", scope: !1090, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2119, templateParams: !21, identifier: "2af15b0459a85700505ec6111b85ee04")
!2119 = !{!2120}
!2120 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2118, file: !2, size: 32, align: 32, elements: !2121, templateParams: !21, identifier: "c22a4303c1a2f407c4818fcd8b1e8cb1", discriminator: !2131)
!2121 = !{!2122, !2127}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2120, file: !2, baseType: !2123, size: 32, align: 32, extraData: i32 1114112)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2118, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2124, templateParams: !2126, identifier: "5a4c6fa371ad89375f304ae06ab4df7f")
!2124 = !{!2125}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2123, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!2126 = !{!573, !1100}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2120, file: !2, baseType: !2128, size: 32, align: 32)
!2128 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2118, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2129, templateParams: !2126, identifier: "852ad5fe8c19dbe258ff811dd09879d5")
!2129 = !{!2130}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2128, file: !2, baseType: !574, size: 32, align: 32, flags: DIFlagPublic)
!2131 = !DIDerivedType(tag: DW_TAG_member, scope: !2118, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!2132 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<char, core::convert::Infallible>", scope: !1090, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2133, templateParams: !21, identifier: "c3673f729e75c46bf9a951b8aceafd66")
!2133 = !{!2134}
!2134 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2132, file: !2, size: 32, align: 32, elements: !2135, templateParams: !21, identifier: "f3c974a68276eb7f696446a7315661c3")
!2135 = !{!2136, !2141}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !2134, file: !2, baseType: !2137, size: 32, align: 32)
!2137 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !2132, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2138, templateParams: !2140, identifier: "8dd9d3c2876753ff47c1b2c3b65a3edc")
!2138 = !{!2139}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2137, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!2140 = !{!573, !2103}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !2134, file: !2, baseType: !2142, size: 32, align: 32)
!2142 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !2132, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2143, templateParams: !2140, identifier: "21943ae5dc46fca39eace5251afcf605")
!2143 = !{!2144}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2142, file: !2, baseType: !574, size: 32, align: 32, flags: DIFlagPublic)
!2145 = !{!2146, !2147}
!2146 = !DILocalVariable(name: "residual", arg: 1, scope: !2115, file: !2090, line: 128, type: !2132)
!2147 = !DILocalVariable(name: "b", scope: !2148, file: !2090, line: 130, type: !574, align: 32)
!2148 = distinct !DILexicalBlock(scope: !2115, file: !2090, line: 130, column: 13)
!2149 = !DILocation(line: 128, column: 22, scope: !2115)
!2150 = !DILocation(line: 130, column: 32, scope: !2115)
!2151 = !DILocation(line: 130, column: 32, scope: !2148)
!2152 = !DILocation(line: 132, column: 6, scope: !2115)
!2153 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN254_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Debug$GT$3fmt17h45e5b0a36e6a4abdE", scope: !2154, file: !428, line: 621, type: !2155, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2158)
!2154 = !DINamespace(name: "{impl#2}", scope: !172)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{!334, !2157, !351}
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::convert::{impl#19}::from::StringError", baseType: !171, size: 32, align: 32, dwarfAddressSpace: 0)
!2158 = !{!2159, !2160}
!2159 = !DILocalVariable(name: "self", arg: 1, scope: !2153, file: !428, line: 621, type: !2157)
!2160 = !DILocalVariable(name: "f", arg: 2, scope: !2153, file: !428, line: 621, type: !351)
!2161 = !DILocation(line: 621, column: 20, scope: !2153)
!2162 = !DILocation(line: 621, column: 27, scope: !2153)
!2163 = !DILocation(line: 622, column: 17, scope: !2153)
!2164 = !DILocation(line: 623, column: 14, scope: !2153)
!2165 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN256_$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$u20$as$u20$core..fmt..Display$GT$3fmt17h6a47e6818fd9978fE", scope: !2166, file: !428, line: 614, type: !2155, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2167)
!2166 = !DINamespace(name: "{impl#1}", scope: !172)
!2167 = !{!2168, !2169}
!2168 = !DILocalVariable(name: "self", arg: 1, scope: !2165, file: !428, line: 614, type: !2157)
!2169 = !DILocalVariable(name: "f", arg: 2, scope: !2165, file: !428, line: 614, type: !351)
!2170 = !DILocation(line: 614, column: 20, scope: !2165)
!2171 = !DILocation(line: 614, column: 27, scope: !2165)
!2172 = !DILocation(line: 615, column: 17, scope: !2165)
!2173 = !DILocation(line: 616, column: 14, scope: !2165)
!2174 = distinct !DISubprogram(name: "fmt<core::alloc::layout::Layout>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h0916ce255cb76c5dE", scope: !2176, file: !2175, line: 2659, type: !2177, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2183, retainedNodes: !2180)
!2175 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "953353698add15f5879168b0ac566843")
!2176 = !DINamespace(name: "{impl#73}", scope: !314)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!334, !2179, !351}
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&core::alloc::layout::Layout", baseType: !38, size: 32, align: 32, dwarfAddressSpace: 0)
!2180 = !{!2181, !2182}
!2181 = !DILocalVariable(name: "self", arg: 1, scope: !2174, file: !2175, line: 2659, type: !2179)
!2182 = !DILocalVariable(name: "f", arg: 2, scope: !2174, file: !2175, line: 2659, type: !351)
!2183 = !{!2184}
!2184 = !DITemplateTypeParameter(name: "T", type: !39)
!2185 = !DILocation(line: 2659, column: 20, scope: !2174)
!2186 = !DILocation(line: 2659, column: 27, scope: !2174)
!2187 = !DILocation(line: 2659, column: 71, scope: !2174)
!2188 = !DILocation(line: 2659, column: 62, scope: !2174)
!2189 = !DILocation(line: 2659, column: 84, scope: !2174)
!2190 = distinct !DISubprogram(name: "fmt<core::option::Option<u8>>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h09b445505687c2edE", scope: !2176, file: !2175, line: 2659, type: !2191, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2197, retainedNodes: !2194)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!334, !2193, !351}
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&core::option::Option<u8>", baseType: !12, size: 32, align: 32, dwarfAddressSpace: 0)
!2194 = !{!2195, !2196}
!2195 = !DILocalVariable(name: "self", arg: 1, scope: !2190, file: !2175, line: 2659, type: !2193)
!2196 = !DILocalVariable(name: "f", arg: 2, scope: !2190, file: !2175, line: 2659, type: !351)
!2197 = !{!2198}
!2198 = !DITemplateTypeParameter(name: "T", type: !13)
!2199 = !DILocation(line: 2659, column: 20, scope: !2190)
!2200 = !DILocation(line: 2659, column: 27, scope: !2190)
!2201 = !DILocation(line: 2659, column: 71, scope: !2190)
!2202 = !DILocation(line: 2659, column: 62, scope: !2190)
!2203 = !DILocation(line: 2659, column: 84, scope: !2190)
!2204 = distinct !DISubprogram(name: "fmt<core::ptr::alignment::Alignment>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h416ebf28a9f7421fE", scope: !2176, file: !2175, line: 2659, type: !2205, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2211, retainedNodes: !2208)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!334, !2207, !351}
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&core::ptr::alignment::Alignment", baseType: !235, size: 32, align: 32, dwarfAddressSpace: 0)
!2208 = !{!2209, !2210}
!2209 = !DILocalVariable(name: "self", arg: 1, scope: !2204, file: !2175, line: 2659, type: !2207)
!2210 = !DILocalVariable(name: "f", arg: 2, scope: !2204, file: !2175, line: 2659, type: !351)
!2211 = !{!2212}
!2212 = !DITemplateTypeParameter(name: "T", type: !45)
!2213 = !DILocation(line: 2659, column: 20, scope: !2204)
!2214 = !DILocation(line: 2659, column: 27, scope: !2204)
!2215 = !DILocation(line: 2659, column: 71, scope: !2204)
!2216 = !DILocation(line: 2659, column: 62, scope: !2204)
!2217 = !DILocation(line: 2659, column: 84, scope: !2204)
!2218 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h624a3f117251aebaE", scope: !2176, file: !2175, line: 2659, type: !2219, scopeLine: 2659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !2222)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!334, !2221, !351}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&u8", baseType: !244, size: 32, align: 32, dwarfAddressSpace: 0)
!2222 = !{!2223, !2224}
!2223 = !DILocalVariable(name: "self", arg: 1, scope: !2218, file: !2175, line: 2659, type: !2221)
!2224 = !DILocalVariable(name: "f", arg: 2, scope: !2218, file: !2175, line: 2659, type: !351)
!2225 = !DILocation(line: 2659, column: 20, scope: !2218)
!2226 = !DILocation(line: 2659, column: 27, scope: !2218)
!2227 = !DILocation(line: 2659, column: 71, scope: !2218)
!2228 = !DILocation(line: 2659, column: 62, scope: !2218)
!2229 = !DILocation(line: 2659, column: 84, scope: !2218)
!2230 = distinct !DISubprogram(name: "cold_path", linkageName: "_ZN4core10intrinsics9cold_path17h9a7d752e09dde473E", scope: !2232, file: !2231, line: 417, type: !2233, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!2231 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/intrinsics/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "5088527a679dbab229c7a43df7f388f7")
!2232 = !DINamespace(name: "intrinsics", scope: !15)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{null}
!2235 = !DILocation(line: 417, column: 28, scope: !2230)
!2236 = distinct !DISubprogram(name: "of<core::str::error::Utf8Error>", linkageName: "_ZN4core3any6TypeId2of17h2f39189d873d9981E", scope: !2238, file: !2237, line: 778, type: !2245, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2248, declaration: !2247)
!2237 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/any.rs", directory: "", checksumkind: CSK_MD5, checksum: "8b0df3cdb21edc4d1a6936e2543d45c7")
!2238 = !DICompositeType(tag: DW_TAG_structure_type, name: "TypeId", scope: !2239, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !2240, templateParams: !21, identifier: "b34c2954738bc0507983a3d0ae8524d1")
!2239 = !DINamespace(name: "any", scope: !15)
!2240 = !{!2241}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2238, file: !2, baseType: !2242, size: 128, align: 32, flags: DIFlagProtected)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, align: 32, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 4, lowerBound: 0)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!2238}
!2247 = !DISubprogram(name: "of<core::str::error::Utf8Error>", linkageName: "_ZN4core3any6TypeId2of17h2f39189d873d9981E", scope: !2238, file: !2237, line: 778, type: !2245, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2248)
!2248 = !{!2249}
!2249 = !DITemplateTypeParameter(name: "T", type: !260)
!2250 = !DILocation(line: 779, column: 9, scope: !2236)
!2251 = !DILocation(line: 780, column: 6, scope: !2236)
!2252 = distinct !DISubprogram(name: "of<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core3any6TypeId2of17h80ececb577e45a52E", scope: !2238, file: !2237, line: 778, type: !2245, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2254, declaration: !2253)
!2253 = !DISubprogram(name: "of<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core3any6TypeId2of17h80ececb577e45a52E", scope: !2238, file: !2237, line: 778, type: !2245, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2254)
!2254 = !{!2255}
!2255 = !DITemplateTypeParameter(name: "T", type: !171)
!2256 = !DILocation(line: 779, column: 9, scope: !2252)
!2257 = !DILocation(line: 780, column: 6, scope: !2252)
!2258 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls53_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$u8$GT$2eq17h51a721e978f495dcE", scope: !2260, file: !2259, line: 1865, type: !2263, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2265)
!2259 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "2ebed4d982e1934df4c432f70a016f34")
!2260 = !DINamespace(name: "{impl#22}", scope: !2261)
!2261 = !DINamespace(name: "impls", scope: !2262)
!2262 = !DINamespace(name: "cmp", scope: !15)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!643, !244, !244}
!2265 = !{!2266, !2267}
!2266 = !DILocalVariable(name: "self", arg: 1, scope: !2258, file: !2259, line: 1865, type: !244)
!2267 = !DILocalVariable(name: "other", arg: 2, scope: !2258, file: !2259, line: 1865, type: !244)
!2268 = !DILocation(line: 1865, column: 23, scope: !2258)
!2269 = !DILocation(line: 1865, column: 30, scope: !2258)
!2270 = !DILocation(line: 1865, column: 54, scope: !2258)
!2271 = !DILocation(line: 1865, column: 63, scope: !2258)
!2272 = !DILocation(line: 1865, column: 71, scope: !2258)
!2273 = distinct !DISubprogram(name: "to_bytes_with_nul", linkageName: "_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17hd036897479adf9ebE", scope: !415, file: !2274, line: 581, type: !2275, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2277, retainedNodes: !2278)
!2274 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ffi/c_str.rs", directory: "", checksumkind: CSK_MD5, checksum: "27d6f52a2470d3c44636b6ca7e2814fa")
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!432, !411}
!2277 = !DISubprogram(name: "to_bytes_with_nul", linkageName: "_ZN4core3ffi5c_str4CStr17to_bytes_with_nul17hd036897479adf9ebE", scope: !415, file: !2274, line: 581, type: !2275, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2278 = !{!2279}
!2279 = !DILocalVariable(name: "self", arg: 1, scope: !2273, file: !2274, line: 581, type: !411)
!2280 = !DILocation(line: 581, column: 36, scope: !2273)
!2281 = !DILocation(line: 585, column: 6, scope: !2273)
!2282 = distinct !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha653fea02727b72eE", scope: !415, file: !2274, line: 388, type: !2283, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2285, retainedNodes: !2286)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!411, !432}
!2285 = !DISubprogram(name: "from_bytes_with_nul_unchecked", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked17ha653fea02727b72eE", scope: !415, file: !2274, line: 388, type: !2283, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2286 = !{!2287}
!2287 = !DILocalVariable(name: "bytes", arg: 1, scope: !2282, file: !2274, line: 388, type: !432)
!2288 = !DILocation(line: 388, column: 55, scope: !2282)
!2289 = !DILocation(line: 2435, column: 9, scope: !2290)
!2290 = !DILexicalBlockFile(scope: !2282, file: !2231, discriminator: 0)
!2291 = !DILocation(line: 418, column: 6, scope: !2282)
!2292 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ffi5c_str4CStr29from_bytes_with_nul_unchecked7runtime17h97fbaf7f04d93a75E", scope: !2293, file: !2231, line: 2423, type: !2283, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2295)
!2293 = !DINamespace(name: "from_bytes_with_nul_unchecked", scope: !2294)
!2294 = !DINamespace(name: "{impl#5}", scope: !416)
!2295 = !{!2296}
!2296 = !DILocalVariable(name: "bytes", arg: 1, scope: !2292, file: !2231, line: 2423, type: !432)
!2297 = !DILocation(line: 2423, column: 40, scope: !2292)
!2298 = !DILocation(line: 408, column: 38, scope: !2299)
!2299 = !DILexicalBlockFile(scope: !2292, file: !2274, discriminator: 0)
!2300 = !DILocation(line: 408, column: 32, scope: !2299)
!2301 = !DILocation(line: 408, column: 58, scope: !2299)
!2302 = !DILocation(line: 295, column: 13, scope: !2303)
!2303 = !DILexicalBlockFile(scope: !2292, file: !2304, discriminator: 0)
!2304 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "ec901dc314d42500d18c9938d02d4ad0")
!2305 = !DILocation(line: 408, column: 52, scope: !2299)
!2306 = !DILocation(line: 2425, column: 10, scope: !2292)
!2307 = distinct !DISubprogram(name: "to_bytes", linkageName: "_ZN4core3ffi5c_str4CStr8to_bytes17hf4da749a303a719fE", scope: !415, file: !2274, line: 555, type: !2275, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2308, retainedNodes: !2309)
!2308 = !DISubprogram(name: "to_bytes", linkageName: "_ZN4core3ffi5c_str4CStr8to_bytes17hf4da749a303a719fE", scope: !415, file: !2274, line: 555, type: !2275, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2309 = !{!2310, !2311}
!2310 = !DILocalVariable(name: "self", arg: 1, scope: !2307, file: !2274, line: 555, type: !411)
!2311 = !DILocalVariable(name: "bytes", scope: !2312, file: !2274, line: 556, type: !432, align: 32)
!2312 = distinct !DILexicalBlock(scope: !2307, file: !2274, line: 556, column: 9)
!2313 = !DILocation(line: 555, column: 27, scope: !2307)
!2314 = !DILocation(line: 556, column: 26, scope: !2307)
!2315 = !DILocation(line: 556, column: 13, scope: !2312)
!2316 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !2317)
!2317 = distinct !DILocation(line: 559, column: 46, scope: !2312)
!2318 = !DILocation(line: 559, column: 56, scope: !2312)
!2319 = !DILocation(line: 559, column: 18, scope: !2312)
!2320 = !DILocation(line: 560, column: 6, scope: !2307)
!2321 = distinct !DISubprogram(name: "new_debug<(usize, core::option::Option<usize>)>", linkageName: "_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E", scope: !312, file: !2322, line: 114, type: !2323, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2327, declaration: !2326, retainedNodes: !2329)
!2322 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/rt.rs", directory: "", checksumkind: CSK_MD5, checksum: "03cba3c9b7eca44212bc16adf1d5b1bc")
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!312, !2325}
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&(usize, core::option::Option<usize>)", baseType: !802, size: 32, align: 32, dwarfAddressSpace: 0)
!2326 = !DISubprogram(name: "new_debug<(usize, core::option::Option<usize>)>", linkageName: "_ZN4core3fmt2rt8Argument9new_debug17ha2768f80a3e29d36E", scope: !312, file: !2322, line: 114, type: !2323, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2327)
!2327 = !{!2328}
!2328 = !DITemplateTypeParameter(name: "T", type: !802)
!2329 = !{!2330, !2331}
!2330 = !DILocalVariable(name: "x", arg: 1, scope: !2321, file: !2322, line: 114, type: !2325)
!2331 = !DILocalVariable(name: "f", scope: !2332, file: !2322, line: 91, type: !2333, align: 32)
!2332 = distinct !DILexicalBlock(scope: !2321, file: !2322, line: 91, column: 21)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&(usize, core::option::Option<usize>), &mut core::fmt::Formatter) -> core::result::Result<(), core::fmt::Error>", baseType: !2334, size: 32, align: 32, dwarfAddressSpace: 0)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{!334, !2325, !351}
!2336 = !DILocation(line: 114, column: 38, scope: !2321)
!2337 = !DILocation(line: 69, column: 24, scope: !2321)
!2338 = !DILocation(line: 69, column: 52, scope: !2321)
!2339 = !DILocation(line: 115, column: 29, scope: !2321)
!2340 = !DILocation(line: 91, column: 25, scope: !2332)
!2341 = !DILocation(line: 68, column: 17, scope: !2321)
!2342 = !DILocation(line: 65, column: 9, scope: !2321)
!2343 = !DILocation(line: 116, column: 6, scope: !2321)
!2344 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17hce95413df8f05b15E", scope: !2346, file: !2345, line: 85, type: !2348, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2350)
!2345 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/fmt/num.rs", directory: "", checksumkind: CSK_MD5, checksum: "14f1acdd980d957a36bf4243cc704071")
!2346 = !DINamespace(name: "{impl#58}", scope: !2347)
!2347 = !DINamespace(name: "num", scope: !314)
!2348 = !DISubroutineType(types: !2349)
!2349 = !{!334, !244, !351}
!2350 = !{!2351, !2352}
!2351 = !DILocalVariable(name: "self", arg: 1, scope: !2344, file: !2345, line: 85, type: !244)
!2352 = !DILocalVariable(name: "f", arg: 2, scope: !2344, file: !2345, line: 85, type: !351)
!2353 = !DILocation(line: 85, column: 24, scope: !2344)
!2354 = !DILocation(line: 85, column: 31, scope: !2344)
!2355 = !DILocation(line: 86, column: 26, scope: !2344)
!2356 = !DILocation(line: 86, column: 24, scope: !2344)
!2357 = !DILocation(line: 88, column: 33, scope: !2344)
!2358 = !DILocation(line: 88, column: 31, scope: !2344)
!2359 = !DILocation(line: 87, column: 25, scope: !2344)
!2360 = !DILocation(line: 91, column: 25, scope: !2344)
!2361 = !DILocation(line: 89, column: 25, scope: !2344)
!2362 = !DILocation(line: 93, column: 18, scope: !2344)
!2363 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h7429cd3c1f263cabE", scope: !2364, file: !2345, line: 85, type: !2365, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2367)
!2364 = !DINamespace(name: "{impl#63}", scope: !2347)
!2365 = !DISubroutineType(types: !2366)
!2366 = !{!334, !93, !351}
!2367 = !{!2368, !2369}
!2368 = !DILocalVariable(name: "self", arg: 1, scope: !2363, file: !2345, line: 85, type: !93)
!2369 = !DILocalVariable(name: "f", arg: 2, scope: !2363, file: !2345, line: 85, type: !351)
!2370 = !DILocation(line: 85, column: 24, scope: !2363)
!2371 = !DILocation(line: 85, column: 31, scope: !2363)
!2372 = !DILocation(line: 86, column: 26, scope: !2363)
!2373 = !DILocation(line: 86, column: 24, scope: !2363)
!2374 = !DILocation(line: 88, column: 33, scope: !2363)
!2375 = !DILocation(line: 88, column: 31, scope: !2363)
!2376 = !DILocation(line: 87, column: 25, scope: !2363)
!2377 = !DILocation(line: 91, column: 25, scope: !2363)
!2378 = !DILocation(line: 89, column: 25, scope: !2363)
!2379 = !DILocation(line: 93, column: 18, scope: !2363)
!2380 = distinct !DISubprogram(name: "write_fmt<alloc::string::String>", linkageName: "_ZN4core3fmt5Write9write_fmt17hdad00fb98f69e3d1E", scope: !2381, file: !2175, line: 210, type: !2382, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2441, retainedNodes: !2438)
!2381 = !DINamespace(name: "Write", scope: !314)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!334, !567, !2384}
!2384 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arguments", scope: !314, file: !2, size: 192, align: 32, flags: DIFlagPublic, elements: !2385, templateParams: !21, identifier: "d691e62b2ee4847c2af32873f04bd10")
!2385 = !{!2386, !2392, !2432}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pieces", scope: !2384, file: !2, baseType: !2387, size: 64, align: 32, flags: DIFlagPrivate)
!2387 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[&str]", file: !2, size: 64, align: 32, elements: !2388, templateParams: !21, identifier: "4e66b00a376d6af5b8765440fb2839f")
!2388 = !{!2389, !2391}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2387, file: !2, baseType: !2390, size: 32, align: 32)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32, align: 32, dwarfAddressSpace: 0)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2387, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !2384, file: !2, baseType: !2393, size: 64, align: 32, offset: 128, flags: DIFlagPrivate)
!2393 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[core::fmt::rt::Placeholder]>", scope: !14, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2394, templateParams: !21, identifier: "a638667a460b22fe10961f9a2f3202aa")
!2394 = !{!2395}
!2395 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2393, file: !2, size: 64, align: 32, elements: !2396, templateParams: !21, identifier: "29af53ccc7f21f4d5671e352d673889a", discriminator: !2431)
!2396 = !{!2397, !2427}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2395, file: !2, baseType: !2398, size: 64, align: 32, extraData: i32 0)
!2398 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2393, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !2399, identifier: "11ce4f4d10f67887bbe6bf59a521c479")
!2399 = !{!2400}
!2400 = !DITemplateTypeParameter(name: "T", type: !2401)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Placeholder]", file: !2, size: 64, align: 32, elements: !2402, templateParams: !21, identifier: "b0485535d7020130e949c24f3fc2aa00")
!2402 = !{!2403, !2426}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2401, file: !2, baseType: !2404, size: 32, align: 32)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32, align: 32, dwarfAddressSpace: 0)
!2405 = !DICompositeType(tag: DW_TAG_structure_type, name: "Placeholder", scope: !313, file: !2, size: 192, align: 32, flags: DIFlagPublic, elements: !2406, templateParams: !21, identifier: "8cb06f9d78dc629c8f52fc3b5544996c")
!2406 = !{!2407, !2408, !2409, !2425}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !2405, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagPublic)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2405, file: !2, baseType: !51, size: 32, align: 32, offset: 160, flags: DIFlagPublic)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2405, file: !2, baseType: !2410, size: 64, align: 32, flags: DIFlagPublic)
!2410 = !DICompositeType(tag: DW_TAG_structure_type, name: "Count", scope: !313, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2411, templateParams: !21, identifier: "2d7772037f5c744e87d41105441784d5")
!2411 = !{!2412}
!2412 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2410, file: !2, size: 64, align: 32, elements: !2413, templateParams: !21, identifier: "af14687975a61e1ae6bbcdaeb79a8a2", discriminator: !2424)
!2413 = !{!2414, !2418, !2422}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "Is", scope: !2412, file: !2, baseType: !2415, size: 64, align: 32, extraData: i16 0)
!2415 = !DICompositeType(tag: DW_TAG_structure_type, name: "Is", scope: !2410, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2416, templateParams: !21, identifier: "da16c9b5356522ffb015c0e99237342e")
!2416 = !{!2417}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2415, file: !2, baseType: !359, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "Param", scope: !2412, file: !2, baseType: !2419, size: 64, align: 32, extraData: i16 1)
!2419 = !DICompositeType(tag: DW_TAG_structure_type, name: "Param", scope: !2410, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2420, templateParams: !21, identifier: "8d84b26eccf0f48fe70ea50c79b83fc9")
!2420 = !{!2421}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2419, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "Implied", scope: !2412, file: !2, baseType: !2423, size: 64, align: 32, extraData: i16 2)
!2423 = !DICompositeType(tag: DW_TAG_structure_type, name: "Implied", scope: !2410, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, identifier: "e4d910bcc0c2da0048af65cce9b02bdf")
!2424 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !2, baseType: !359, size: 16, align: 16, flags: DIFlagArtificial)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2405, file: !2, baseType: !2410, size: 64, align: 32, offset: 64, flags: DIFlagPublic)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2401, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2395, file: !2, baseType: !2428, size: 64, align: 32)
!2428 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2393, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2429, templateParams: !2399, identifier: "b6f59188292a44db7736125146b92cb0")
!2429 = !{!2430}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2428, file: !2, baseType: !2401, size: 64, align: 32, flags: DIFlagPublic)
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2393, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2384, file: !2, baseType: !2433, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!2433 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[core::fmt::rt::Argument]", file: !2, size: 64, align: 32, elements: !2434, templateParams: !21, identifier: "14634098cacc86d372c43019bc81f26f")
!2434 = !{!2435, !2437}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2433, file: !2, baseType: !2436, size: 32, align: 32)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32, align: 32, dwarfAddressSpace: 0)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2433, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!2438 = !{!2439, !2440}
!2439 = !DILocalVariable(name: "self", arg: 1, scope: !2380, file: !2175, line: 210, type: !567)
!2440 = !DILocalVariable(name: "args", arg: 2, scope: !2380, file: !2175, line: 210, type: !2384)
!2441 = !{!2442}
!2442 = !DITemplateTypeParameter(name: "Self", type: !178)
!2443 = !DILocation(line: 210, column: 18, scope: !2380)
!2444 = !DILocation(line: 210, column: 29, scope: !2380)
!2445 = !DILocation(line: 239, column: 9, scope: !2380)
!2446 = !DILocation(line: 239, column: 14, scope: !2380)
!2447 = !DILocation(line: 240, column: 6, scope: !2380)
!2448 = distinct !DISubprogram(name: "estimated_capacity", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity17hd10c770fa84e30ffE", scope: !2384, file: !2175, line: 638, type: !2449, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2452, retainedNodes: !2453)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{!9, !2451}
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::fmt::Arguments", baseType: !2384, size: 32, align: 32, dwarfAddressSpace: 0)
!2452 = !DISubprogram(name: "estimated_capacity", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity17hd10c770fa84e30ffE", scope: !2384, file: !2175, line: 638, type: !2449, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2453 = !{!2454, !2455}
!2454 = !DILocalVariable(name: "self", arg: 1, scope: !2448, file: !2175, line: 638, type: !2451)
!2455 = !DILocalVariable(name: "pieces_length", scope: !2456, file: !2175, line: 639, type: !9, align: 32)
!2456 = distinct !DILexicalBlock(scope: !2448, file: !2175, line: 639, column: 9)
!2457 = !DILocation(line: 638, column: 31, scope: !2448)
!2458 = !DILocation(line: 639, column: 36, scope: !2448)
!2459 = !DILocation(line: 639, column: 48, scope: !2448)
!2460 = !DILocation(line: 639, column: 55, scope: !2448)
!2461 = !DILocation(line: 639, column: 72, scope: !2448)
!2462 = !DILocation(line: 639, column: 13, scope: !2456)
!2463 = !DILocation(line: 641, column: 12, scope: !2456)
!2464 = !DILocation(line: 641, column: 22, scope: !2456)
!2465 = !DILocation(line: 643, column: 20, scope: !2456)
!2466 = !DILocation(line: 643, column: 32, scope: !2456)
!2467 = !DILocation(line: 642, column: 13, scope: !2456)
!2468 = !DILocation(line: 641, column: 9, scope: !2456)
!2469 = !DILocation(line: 643, column: 46, scope: !2456)
!2470 = !DILocation(line: 652, column: 27, scope: !2456)
!2471 = !DILocation(line: 652, column: 42, scope: !2456)
!2472 = !DILocation(line: 643, column: 61, scope: !2456)
!2473 = !DILocation(line: 643, column: 75, scope: !2456)
!2474 = !DILocation(line: 647, column: 13, scope: !2456)
!2475 = !DILocation(line: 643, column: 16, scope: !2456)
!2476 = !DILocation(line: 654, column: 6, scope: !2448)
!2477 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN4core3fmt9Arguments18estimated_capacity28_$u7b$$u7b$closure$u7d$$u7d$17hb5bc4f021df36a38E", scope: !607, file: !2175, line: 639, type: !2478, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2481)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!9, !2480, !604}
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::fmt::{impl#4}::estimated_capacity::{closure_env#0}", baseType: !606, size: 32, align: 32, dwarfAddressSpace: 0)
!2481 = !{!2482, !2483}
!2482 = !DILocalVariable(name: "x", arg: 2, scope: !2477, file: !2175, line: 639, type: !604)
!2483 = !DILocalVariable(arg: 1, scope: !2477, file: !2175, line: 639, type: !2480)
!2484 = !DILocation(line: 639, column: 59, scope: !2477)
!2485 = !DILocation(line: 639, column: 60, scope: !2477)
!2486 = !DILocation(line: 639, column: 63, scope: !2477)
!2487 = !DILocation(line: 639, column: 65, scope: !2477)
!2488 = !DILocation(line: 639, column: 70, scope: !2477)
!2489 = distinct !DISubprogram(name: "as_statically_known_str", linkageName: "_ZN4core3fmt9Arguments23as_statically_known_str17h237d54dac2fc53a3E", scope: !2384, file: !2175, line: 717, type: !2490, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2503, retainedNodes: !2504)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!2492, !2451}
!2492 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !14, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2493, templateParams: !21, identifier: "70526b74386e3ab1af24a4552995aad0")
!2493 = !{!2494}
!2494 = !DICompositeType(tag: DW_TAG_variant_part, scope: !2492, file: !2, size: 64, align: 32, elements: !2495, templateParams: !21, identifier: "8075e3d3cbf81a82fddc7ee972736375", discriminator: !2502)
!2495 = !{!2496, !2498}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2494, file: !2, baseType: !2497, size: 64, align: 32, extraData: i32 0)
!2497 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2492, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !597, identifier: "a2c8c52cbf664b15e04ba33a9d1fb455")
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2494, file: !2, baseType: !2499, size: 64, align: 32)
!2499 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2492, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !2500, templateParams: !597, identifier: "b664394454dbb74539919442d1cb2e90")
!2500 = !{!2501}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2499, file: !2, baseType: !124, size: 64, align: 32, flags: DIFlagPublic)
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!2503 = !DISubprogram(name: "as_statically_known_str", linkageName: "_ZN4core3fmt9Arguments23as_statically_known_str17h237d54dac2fc53a3E", scope: !2384, file: !2175, line: 717, type: !2490, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2504 = !{!2505, !2506}
!2505 = !DILocalVariable(name: "self", arg: 1, scope: !2489, file: !2175, line: 717, type: !2451)
!2506 = !DILocalVariable(name: "s", scope: !2507, file: !2175, line: 718, type: !2492, align: 32)
!2507 = distinct !DILexicalBlock(scope: !2489, file: !2175, line: 718, column: 9)
!2508 = !DILocation(line: 717, column: 36, scope: !2489)
!2509 = !DILocation(line: 718, column: 13, scope: !2507)
!2510 = !DILocation(line: 718, column: 22, scope: !2489)
!2511 = !DILocation(line: 719, column: 56, scope: !2507)
!2512 = !DILocation(line: 719, column: 12, scope: !2507)
!2513 = !DILocation(line: 719, column: 80, scope: !2507)
!2514 = !DILocation(line: 719, column: 9, scope: !2507)
!2515 = !DILocation(line: 719, column: 69, scope: !2507)
!2516 = !DILocation(line: 720, column: 6, scope: !2489)
!2517 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17h3d5c6286cb726aa2E", scope: !2384, file: !2175, line: 704, type: !2490, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2518, retainedNodes: !2519)
!2518 = !DISubprogram(name: "as_str", linkageName: "_ZN4core3fmt9Arguments6as_str17h3d5c6286cb726aa2E", scope: !2384, file: !2175, line: 704, type: !2490, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2519 = !{!2520, !2521}
!2520 = !DILocalVariable(name: "self", arg: 1, scope: !2517, file: !2175, line: 704, type: !2451)
!2521 = !DILocalVariable(name: "s", scope: !2522, file: !2175, line: 707, type: !604, align: 32)
!2522 = distinct !DILexicalBlock(scope: !2517, file: !2175, line: 707, column: 13)
!2523 = !DILocation(line: 704, column: 25, scope: !2517)
!2524 = !DILocation(line: 705, column: 16, scope: !2517)
!2525 = !DILocation(line: 705, column: 29, scope: !2517)
!2526 = !DILocation(line: 705, column: 15, scope: !2517)
!2527 = !DILocation(line: 706, column: 14, scope: !2517)
!2528 = !DILocation(line: 706, column: 18, scope: !2517)
!2529 = !DILocation(line: 707, column: 14, scope: !2517)
!2530 = !DILocation(line: 706, column: 25, scope: !2517)
!2531 = !DILocation(line: 706, column: 32, scope: !2517)
!2532 = !DILocation(line: 708, column: 18, scope: !2517)
!2533 = !DILocation(line: 710, column: 6, scope: !2517)
!2534 = !DILocation(line: 707, column: 19, scope: !2517)
!2535 = !DILocation(line: 707, column: 15, scope: !2517)
!2536 = !DILocation(line: 707, column: 15, scope: !2522)
!2537 = !DILocation(line: 707, column: 31, scope: !2522)
!2538 = !DILocation(line: 707, column: 26, scope: !2522)
!2539 = !DILocation(line: 707, column: 32, scope: !2517)
!2540 = distinct !DISubprogram(name: "write_fmt", linkageName: "_ZN4core3fmt9Formatter9write_fmt17hd79f790f9e7cd2edE", scope: !352, file: !2175, line: 1915, type: !2541, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2543, retainedNodes: !2544)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!334, !351, !2384}
!2543 = !DISubprogram(name: "write_fmt", linkageName: "_ZN4core3fmt9Formatter9write_fmt17hd79f790f9e7cd2edE", scope: !352, file: !2175, line: 1915, type: !2541, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2544 = !{!2545, !2546, !2547}
!2545 = !DILocalVariable(name: "self", arg: 1, scope: !2540, file: !2175, line: 1915, type: !351)
!2546 = !DILocalVariable(name: "fmt", arg: 2, scope: !2540, file: !2175, line: 1915, type: !2384)
!2547 = !DILocalVariable(name: "s", scope: !2548, file: !2175, line: 1916, type: !124, align: 32)
!2548 = distinct !DILexicalBlock(scope: !2540, file: !2175, line: 1916, column: 56)
!2549 = !DILocation(line: 1915, column: 22, scope: !2540)
!2550 = !DILocation(line: 1915, column: 33, scope: !2540)
!2551 = !DILocation(line: 1916, column: 30, scope: !2548)
!2552 = !DILocation(line: 1916, column: 26, scope: !2548)
!2553 = !DILocation(line: 1916, column: 16, scope: !2548)
!2554 = !DILocation(line: 1916, column: 21, scope: !2548)
!2555 = !DILocation(line: 1917, column: 13, scope: !2548)
!2556 = !DILocation(line: 1917, column: 22, scope: !2548)
!2557 = !DILocation(line: 1919, column: 19, scope: !2540)
!2558 = !DILocation(line: 1919, column: 13, scope: !2540)
!2559 = !DILocation(line: 1921, column: 6, scope: !2540)
!2560 = !DILocation(line: 1915, column: 5, scope: !2540)
!2561 = distinct !DISubprogram(name: "size_of_val_raw<[u8]>", linkageName: "_ZN4core3mem15size_of_val_raw17h79109169d713363cE", scope: !866, file: !2562, line: 418, type: !2563, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !2565)
!2562 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "335eb38d3ee0638ae9d68820d69094ad")
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!9, !1230}
!2565 = !{!2566}
!2566 = !DILocalVariable(name: "val", arg: 1, scope: !2561, file: !2562, line: 418, type: !1230)
!2567 = !DILocation(line: 418, column: 48, scope: !2561)
!2568 = !DILocation(line: 420, column: 14, scope: !2561)
!2569 = !DILocation(line: 421, column: 2, scope: !2561)
!2570 = distinct !DISubprogram(name: "size_of_val_raw<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core3mem15size_of_val_raw17h7b5f9bff9272d22dE", scope: !866, file: !2562, line: 418, type: !2571, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2585, retainedNodes: !2583)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!9, !2573}
!2573 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const alloc::sync::ArcInner<[u8]>", file: !2, size: 64, align: 32, elements: !2574, templateParams: !21, identifier: "c8159d8098a091bb7dddf8f20cd3f8c2")
!2574 = !{!2575, !2582}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2573, file: !2, baseType: !2576, size: 32, align: 32)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32, align: 32, dwarfAddressSpace: 0)
!2577 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<[u8]>", scope: !131, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !2578, templateParams: !22, identifier: "33dcac36ca450bf29e72542c340c916e")
!2578 = !{!2579, !2580, !2581}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !2577, file: !2, baseType: !140, size: 32, align: 32, flags: DIFlagPrivate)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !2577, file: !2, baseType: !140, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2577, file: !2, baseType: !24, align: 8, offset: 64, flags: DIFlagPrivate)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2573, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!2583 = !{!2584}
!2584 = !DILocalVariable(name: "val", arg: 1, scope: !2570, file: !2562, line: 418, type: !2573)
!2585 = !{!2586}
!2586 = !DITemplateTypeParameter(name: "T", type: !2577)
!2587 = !DILocation(line: 418, column: 48, scope: !2570)
!2588 = !DILocation(line: 420, column: 14, scope: !2570)
!2589 = !DILocation(line: 421, column: 2, scope: !2570)
!2590 = distinct !DISubprogram(name: "size_of_val_raw<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core3mem15size_of_val_raw17h8c1d2cf78d5527b3E", scope: !866, file: !2562, line: 418, type: !2591, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2599, retainedNodes: !2597)
!2591 = !DISubroutineType(types: !2592)
!2592 = !{!9, !2593}
!2593 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const alloc::rc::RcInner<[u8]>", file: !2, size: 64, align: 32, elements: !2594, templateParams: !21, identifier: "27cffb10211d8ebdc04111e1124d96b0")
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2593, file: !2, baseType: !2047, size: 32, align: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2593, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!2597 = !{!2598}
!2598 = !DILocalVariable(name: "val", arg: 1, scope: !2590, file: !2562, line: 418, type: !2593)
!2599 = !{!2600}
!2600 = !DITemplateTypeParameter(name: "T", type: !2048)
!2601 = !DILocation(line: 418, column: 48, scope: !2590)
!2602 = !DILocation(line: 420, column: 14, scope: !2590)
!2603 = !DILocation(line: 421, column: 2, scope: !2590)
!2604 = distinct !DISubprogram(name: "align_of_val_raw<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core3mem16align_of_val_raw17h0728738b66176619E", scope: !866, file: !2562, line: 557, type: !2571, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2585, retainedNodes: !2605)
!2605 = !{!2606}
!2606 = !DILocalVariable(name: "val", arg: 1, scope: !2604, file: !2562, line: 557, type: !2573)
!2607 = !DILocation(line: 557, column: 49, scope: !2604)
!2608 = !DILocation(line: 559, column: 14, scope: !2604)
!2609 = !DILocation(line: 560, column: 2, scope: !2604)
!2610 = distinct !DISubprogram(name: "align_of_val_raw<core::wtf8::Wtf8>", linkageName: "_ZN4core3mem16align_of_val_raw17h2a204d6bcc5fa0a3E", scope: !866, file: !2562, line: 557, type: !2611, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2624, retainedNodes: !2622)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!9, !2613}
!2613 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const core::wtf8::Wtf8", file: !2, size: 64, align: 32, elements: !2614, templateParams: !21, identifier: "1324a5396dda619476a40edc41bffa8d")
!2614 = !{!2615, !2621}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2613, file: !2, baseType: !2616, size: 32, align: 32)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32, align: 32, dwarfAddressSpace: 0)
!2617 = !DICompositeType(tag: DW_TAG_structure_type, name: "Wtf8", scope: !2618, file: !2, align: 8, flags: DIFlagPublic, elements: !2619, templateParams: !21, identifier: "bef7a4a67b24445ef6ef5d8910725c3")
!2618 = !DINamespace(name: "wtf8", scope: !15)
!2619 = !{!2620}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2617, file: !2, baseType: !24, align: 8, flags: DIFlagPrivate)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2613, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!2622 = !{!2623}
!2623 = !DILocalVariable(name: "val", arg: 1, scope: !2610, file: !2562, line: 557, type: !2613)
!2624 = !{!2625}
!2625 = !DITemplateTypeParameter(name: "T", type: !2617)
!2626 = !DILocation(line: 557, column: 49, scope: !2610)
!2627 = !DILocation(line: 559, column: 14, scope: !2610)
!2628 = !DILocation(line: 560, column: 2, scope: !2610)
!2629 = distinct !DISubprogram(name: "align_of_val_raw<[u8]>", linkageName: "_ZN4core3mem16align_of_val_raw17h807b65e5d7397ac7E", scope: !866, file: !2562, line: 557, type: !2563, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !2630)
!2630 = !{!2631}
!2631 = !DILocalVariable(name: "val", arg: 1, scope: !2629, file: !2562, line: 557, type: !1230)
!2632 = !DILocation(line: 557, column: 49, scope: !2629)
!2633 = !DILocation(line: 559, column: 14, scope: !2629)
!2634 = !DILocation(line: 560, column: 2, scope: !2629)
!2635 = distinct !DISubprogram(name: "align_of_val_raw<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core3mem16align_of_val_raw17h8401cc9a1dbaf96cE", scope: !866, file: !2562, line: 557, type: !2591, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2599, retainedNodes: !2636)
!2636 = !{!2637}
!2637 = !DILocalVariable(name: "val", arg: 1, scope: !2635, file: !2562, line: 557, type: !2593)
!2638 = !DILocation(line: 557, column: 49, scope: !2635)
!2639 = !DILocation(line: 559, column: 14, scope: !2635)
!2640 = !DILocation(line: 560, column: 2, scope: !2635)
!2641 = distinct !DISubprogram(name: "take<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem4take17h141cde2045e6ee7bE", scope: !866, file: !2562, line: 810, type: !2642, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2647, retainedNodes: !2645)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!407, !2644}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !407, size: 32, align: 32, dwarfAddressSpace: 0)
!2645 = !{!2646}
!2646 = !DILocalVariable(name: "dest", arg: 1, scope: !2641, file: !2562, line: 810, type: !2644)
!2647 = !{!2648}
!2648 = !DITemplateTypeParameter(name: "T", type: !407)
!2649 = !DILocation(line: 810, column: 25, scope: !2641)
!2650 = !DILocation(line: 811, column: 19, scope: !2641)
!2651 = !DILocation(line: 811, column: 5, scope: !2641)
!2652 = !DILocation(line: 812, column: 2, scope: !2641)
!2653 = distinct !DISubprogram(name: "take<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem4take17hd018c29f487d7d3bE", scope: !866, file: !2562, line: 810, type: !2654, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2659, retainedNodes: !2657)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!1405, !2656}
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<u8>", baseType: !1405, size: 32, align: 32, dwarfAddressSpace: 0)
!2657 = !{!2658}
!2658 = !DILocalVariable(name: "dest", arg: 1, scope: !2653, file: !2562, line: 810, type: !2656)
!2659 = !{!2660}
!2660 = !DITemplateTypeParameter(name: "T", type: !1405)
!2661 = !DILocation(line: 810, column: 25, scope: !2653)
!2662 = !DILocation(line: 811, column: 19, scope: !2653)
!2663 = !DILocation(line: 811, column: 5, scope: !2653)
!2664 = !DILocation(line: 812, column: 2, scope: !2653)
!2665 = distinct !DISubprogram(name: "replace<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3mem7replace17h09547d6588142868E", scope: !866, file: !2562, line: 877, type: !2666, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2659, retainedNodes: !2668)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!1405, !2656, !1405}
!2668 = !{!2669, !2670, !2671}
!2669 = !DILocalVariable(name: "dest", arg: 1, scope: !2665, file: !2562, line: 877, type: !2656)
!2670 = !DILocalVariable(name: "src", arg: 2, scope: !2665, file: !2562, line: 877, type: !1405)
!2671 = !DILocalVariable(name: "result", scope: !2672, file: !2562, line: 891, type: !1405, align: 32)
!2672 = distinct !DILexicalBlock(scope: !2665, file: !2562, line: 891, column: 9)
!2673 = !DILocation(line: 877, column: 25, scope: !2665)
!2674 = !DILocation(line: 877, column: 39, scope: !2665)
!2675 = !DILocation(line: 891, column: 22, scope: !2665)
!2676 = !DILocation(line: 891, column: 13, scope: !2672)
!2677 = !DILocation(line: 892, column: 9, scope: !2672)
!2678 = !DILocation(line: 895, column: 2, scope: !2665)
!2679 = distinct !DISubprogram(name: "replace<core::option::Option<u16>>", linkageName: "_ZN4core3mem7replace17h14cb4ef1ee48e710E", scope: !866, file: !2562, line: 877, type: !2680, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2688, retainedNodes: !2683)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!532, !2682, !532}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::option::Option<u16>", baseType: !532, size: 32, align: 32, dwarfAddressSpace: 0)
!2683 = !{!2684, !2685, !2686}
!2684 = !DILocalVariable(name: "dest", arg: 1, scope: !2679, file: !2562, line: 877, type: !2682)
!2685 = !DILocalVariable(name: "src", arg: 2, scope: !2679, file: !2562, line: 877, type: !532)
!2686 = !DILocalVariable(name: "result", scope: !2687, file: !2562, line: 891, type: !532, align: 16)
!2687 = distinct !DILexicalBlock(scope: !2679, file: !2562, line: 891, column: 9)
!2688 = !{!2689}
!2689 = !DITemplateTypeParameter(name: "T", type: !532)
!2690 = !DILocation(line: 877, column: 25, scope: !2679)
!2691 = !DILocation(line: 877, column: 39, scope: !2679)
!2692 = !DILocation(line: 891, column: 22, scope: !2679)
!2693 = !DILocation(line: 891, column: 13, scope: !2687)
!2694 = !DILocation(line: 892, column: 9, scope: !2687)
!2695 = !DILocation(line: 895, column: 2, scope: !2679)
!2696 = distinct !DISubprogram(name: "replace<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem7replace17h28a3c6463160f06fE", scope: !866, file: !2562, line: 877, type: !2697, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2647, retainedNodes: !2699)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{!407, !2644, !407}
!2699 = !{!2700, !2701, !2702}
!2700 = !DILocalVariable(name: "dest", arg: 1, scope: !2696, file: !2562, line: 877, type: !2644)
!2701 = !DILocalVariable(name: "src", arg: 2, scope: !2696, file: !2562, line: 877, type: !407)
!2702 = !DILocalVariable(name: "result", scope: !2703, file: !2562, line: 891, type: !407, align: 32)
!2703 = distinct !DILexicalBlock(scope: !2696, file: !2562, line: 891, column: 9)
!2704 = !DILocation(line: 877, column: 25, scope: !2696)
!2705 = !DILocation(line: 877, column: 39, scope: !2696)
!2706 = !DILocation(line: 891, column: 22, scope: !2696)
!2707 = !DILocation(line: 891, column: 13, scope: !2703)
!2708 = !DILocation(line: 892, column: 9, scope: !2703)
!2709 = !DILocation(line: 895, column: 2, scope: !2696)
!2710 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num11niche_types14CodePointInner13new_unchecked17h8a3fdb38740dbe76E", scope: !2712, file: !2711, line: 52, type: !2715, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2717, retainedNodes: !2718)
!2711 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/niche_types.rs", directory: "", checksumkind: CSK_MD5, checksum: "fd1253fe508ffb0865f56a9cd81bbb11")
!2712 = !DICompositeType(tag: DW_TAG_structure_type, name: "CodePointInner", scope: !207, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !2713, templateParams: !21, identifier: "e831154a72d65dc1813036fece6d40b")
!2713 = !{!2714}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2712, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagPrivate)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!2712, !51}
!2717 = !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num11niche_types14CodePointInner13new_unchecked17h8a3fdb38740dbe76E", scope: !2712, file: !2711, line: 52, type: !2715, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2718 = !{!2719}
!2719 = !DILocalVariable(name: "val", arg: 1, scope: !2710, file: !2711, line: 52, type: !51)
!2720 = !DILocation(line: 52, column: 47, scope: !2710)
!2721 = !DILocation(line: 55, column: 14, scope: !2710)
!2722 = distinct !DISubprogram(name: "as_inner", linkageName: "_ZN4core3num11niche_types14CodePointInner8as_inner17h532c15cb190b5a36E", scope: !2712, file: !2711, line: 58, type: !2723, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2725, retainedNodes: !2726)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!51, !2712}
!2725 = !DISubprogram(name: "as_inner", linkageName: "_ZN4core3num11niche_types14CodePointInner8as_inner17h532c15cb190b5a36E", scope: !2712, file: !2711, line: 58, type: !2723, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2726 = !{!2727}
!2727 = !DILocalVariable(name: "self", arg: 1, scope: !2722, file: !2711, line: 58, type: !2712)
!2728 = !DILocation(line: 58, column: 35, scope: !2722)
!2729 = !DILocation(line: 62, column: 14, scope: !2722)
!2730 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num11niche_types14UsizeNoHighBit13new_unchecked17h4b8d12aa55393029E", scope: !206, file: !2711, line: 52, type: !2731, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2733, retainedNodes: !2734)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!206, !9}
!2733 = !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3num11niche_types14UsizeNoHighBit13new_unchecked17h4b8d12aa55393029E", scope: !206, file: !2711, line: 52, type: !2731, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2734 = !{!2735}
!2735 = !DILocalVariable(name: "val", arg: 1, scope: !2730, file: !2711, line: 52, type: !9)
!2736 = !DILocation(line: 52, column: 47, scope: !2730)
!2737 = !DILocation(line: 55, column: 14, scope: !2730)
!2738 = distinct !DISubprogram(name: "as_inner", linkageName: "_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E", scope: !206, file: !2711, line: 58, type: !2739, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !2741, retainedNodes: !2742)
!2739 = !DISubroutineType(types: !2740)
!2740 = !{!9, !206}
!2741 = !DISubprogram(name: "as_inner", linkageName: "_ZN4core3num11niche_types14UsizeNoHighBit8as_inner17h84acc484c7afd535E", scope: !206, file: !2711, line: 58, type: !2739, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!2742 = !{!2743}
!2743 = !DILocalVariable(name: "self", arg: 1, scope: !2738, file: !2711, line: 58, type: !206)
!2744 = !DILocation(line: 58, column: 35, scope: !2738)
!2745 = !DILocation(line: 62, column: 14, scope: !2738)
!2746 = distinct !DISubprogram(name: "is_ascii_lowercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_lowercase17h33e3e8f227d8bf79E", scope: !2748, file: !2747, line: 746, type: !2749, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2751)
!2747 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "95e997e21466c8c46503919807d48d3e")
!2748 = !DINamespace(name: "{impl#6}", scope: !208)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!643, !244}
!2751 = !{!2752}
!2752 = !DILocalVariable(name: "self", arg: 1, scope: !2746, file: !2747, line: 746, type: !244)
!2753 = !DILocation(line: 746, column: 37, scope: !2746)
!2754 = !DILocation(line: 747, column: 25, scope: !2746)
!2755 = !DILocation(line: 439, column: 18, scope: !2756)
!2756 = !DILexicalBlockFile(scope: !2746, file: !2304, discriminator: 0)
!2757 = !DILocation(line: 748, column: 6, scope: !2746)
!2758 = distinct !DISubprogram(name: "is_ascii_uppercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18is_ascii_uppercase17h8254e4d469dcb93aE", scope: !2748, file: !2747, line: 712, type: !2749, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2759)
!2759 = !{!2760}
!2760 = !DILocalVariable(name: "self", arg: 1, scope: !2758, file: !2747, line: 712, type: !244)
!2761 = !DILocation(line: 712, column: 37, scope: !2758)
!2762 = !DILocation(line: 713, column: 25, scope: !2758)
!2763 = !DILocation(line: 439, column: 18, scope: !2764)
!2764 = !DILexicalBlockFile(scope: !2758, file: !2304, discriminator: 0)
!2765 = !DILocation(line: 714, column: 6, scope: !2758)
!2766 = distinct !DISubprogram(name: "to_ascii_lowercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_lowercase17h2600f862fc937d7dE", scope: !2748, file: !2747, line: 564, type: !2767, scopeLine: 564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2769)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!24, !244}
!2769 = !{!2770}
!2770 = !DILocalVariable(name: "self", arg: 1, scope: !2766, file: !2747, line: 564, type: !244)
!2771 = !DILocation(line: 564, column: 37, scope: !2766)
!2772 = !DILocation(line: 566, column: 9, scope: !2766)
!2773 = !DILocation(line: 566, column: 23, scope: !2766)
!2774 = !DILocation(line: 566, column: 18, scope: !2766)
!2775 = !DILocation(line: 566, column: 17, scope: !2766)
!2776 = !DILocation(line: 567, column: 6, scope: !2766)
!2777 = distinct !DISubprogram(name: "to_ascii_uppercase", linkageName: "_ZN4core3num20_$LT$impl$u20$u8$GT$18to_ascii_uppercase17h32abef44752c4a63E", scope: !2748, file: !2747, line: 539, type: !2767, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2778)
!2778 = !{!2779}
!2779 = !DILocalVariable(name: "self", arg: 1, scope: !2777, file: !2747, line: 539, type: !244)
!2780 = !DILocation(line: 539, column: 37, scope: !2777)
!2781 = !DILocation(line: 541, column: 9, scope: !2777)
!2782 = !DILocation(line: 541, column: 24, scope: !2777)
!2783 = !DILocation(line: 541, column: 18, scope: !2777)
!2784 = !DILocation(line: 541, column: 17, scope: !2777)
!2785 = !DILocation(line: 542, column: 6, scope: !2777)
!2786 = distinct !DISubprogram(name: "unsigned_abs", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$12unsigned_abs17hbd215522fd2374ffE", scope: !2788, file: !2787, line: 2361, type: !2789, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2792)
!2787 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/int_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "f16ddcffff2d6d304c4da6339aadad04")
!2788 = !DINamespace(name: "{impl#2}", scope: !208)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!51, !2791}
!2791 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!2792 = !{!2793}
!2793 = !DILocalVariable(name: "self", arg: 1, scope: !2786, file: !2787, line: 2361, type: !2791)
!2794 = !DILocation(line: 2361, column: 35, scope: !2786)
!2795 = !DILocation(line: 2362, column: 19, scope: !2786)
!2796 = !DILocation(line: 2363, column: 10, scope: !2786)
!2797 = distinct !DISubprogram(name: "wrapping_abs", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_abs17h493ad40fb6ad4707E", scope: !2788, file: !2787, line: 2337, type: !2798, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2800)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!2791, !2791}
!2800 = !{!2801}
!2801 = !DILocalVariable(name: "self", arg: 1, scope: !2797, file: !2787, line: 2337, type: !2791)
!2802 = !DILocation(line: 2337, column: 35, scope: !2797)
!2803 = !DILocalVariable(name: "self", arg: 1, scope: !2804, file: !2787, line: 3642, type: !2791)
!2804 = distinct !DISubprogram(name: "is_negative", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$11is_negative17hab4ae24186e8eaccE", scope: !2788, file: !2787, line: 3642, type: !2805, scopeLine: 3642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2807)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!643, !2791}
!2807 = !{!2803}
!2808 = !DILocation(line: 3642, column: 34, scope: !2804, inlinedAt: !2809)
!2809 = distinct !DILocation(line: 2338, column: 22, scope: !2797)
!2810 = !DILocation(line: 3642, column: 50, scope: !2804, inlinedAt: !2809)
!2811 = !DILocation(line: 2338, column: 17, scope: !2797)
!2812 = !DILocation(line: 2341, column: 18, scope: !2797)
!2813 = !DILocation(line: 2338, column: 14, scope: !2797)
!2814 = !DILocalVariable(name: "self", arg: 1, scope: !2815, file: !2787, line: 2258, type: !2791)
!2815 = distinct !DISubprogram(name: "wrapping_neg", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_neg17hb2cfd450b6a85de1E", scope: !2788, file: !2787, line: 2258, type: !2798, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2816)
!2816 = !{!2814}
!2817 = !DILocation(line: 2258, column: 35, scope: !2815, inlinedAt: !2818)
!2818 = distinct !DILocation(line: 2339, column: 23, scope: !2797)
!2819 = !DILocalVariable(name: "self", arg: 1, scope: !2820, file: !2787, line: 2096, type: !2791)
!2820 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$i32$GT$12wrapping_sub17he6f7bb4d748de2e9E", scope: !2788, file: !2787, line: 2096, type: !2821, scopeLine: 2096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2823)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!2791, !2791, !2791}
!2823 = !{!2819, !2824}
!2824 = !DILocalVariable(name: "rhs", arg: 2, scope: !2820, file: !2787, line: 2096, type: !2791)
!2825 = !DILocation(line: 2096, column: 35, scope: !2820, inlinedAt: !2826)
!2826 = distinct !DILocation(line: 2259, column: 27, scope: !2815, inlinedAt: !2818)
!2827 = !DILocation(line: 2096, column: 41, scope: !2820, inlinedAt: !2826)
!2828 = !DILocation(line: 2097, column: 13, scope: !2820, inlinedAt: !2826)
!2829 = !DILocation(line: 2339, column: 23, scope: !2797)
!2830 = !DILocation(line: 2343, column: 10, scope: !2797)
!2831 = distinct !DISubprogram(name: "from_be_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_be_bytes17he821cdf62b31ccf7E", scope: !2833, file: !2832, line: 3769, type: !526, scopeLine: 3769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2834)
!2832 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "5be88be11ad076a5d1229d10f045d3e0")
!2833 = !DINamespace(name: "{impl#7}", scope: !208)
!2834 = !{!2835}
!2835 = !DILocalVariable(name: "bytes", arg: 1, scope: !2831, file: !2832, line: 3769, type: !511)
!2836 = !DILocation(line: 3769, column: 36, scope: !2831)
!2837 = !DILocation(line: 3770, column: 27, scope: !2831)
!2838 = !DILocalVariable(name: "x", arg: 1, scope: !2839, file: !2832, line: 511, type: !359)
!2839 = distinct !DISubprogram(name: "from_be", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$7from_be17hedcfcf96f0c44244E", scope: !2833, file: !2832, line: 511, type: !2840, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2842)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!359, !359}
!2842 = !{!2838}
!2843 = !DILocation(line: 511, column: 30, scope: !2839, inlinedAt: !2844)
!2844 = distinct !DILocation(line: 3770, column: 13, scope: !2831)
!2845 = !DILocalVariable(name: "self", arg: 1, scope: !2846, file: !2832, line: 466, type: !359)
!2846 = distinct !DISubprogram(name: "swap_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$10swap_bytes17hb245d34fa6cd587cE", scope: !2833, file: !2832, line: 466, type: !2840, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2847)
!2847 = !{!2845}
!2848 = !DILocation(line: 466, column: 33, scope: !2846, inlinedAt: !2849)
!2849 = distinct !DILocation(line: 518, column: 19, scope: !2839, inlinedAt: !2844)
!2850 = !DILocation(line: 467, column: 13, scope: !2846, inlinedAt: !2849)
!2851 = !DILocation(line: 3771, column: 10, scope: !2831)
!2852 = distinct !DISubprogram(name: "from_le_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_le_bytes17h858c20ba26fb2425E", scope: !2833, file: !2832, line: 3798, type: !526, scopeLine: 3798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2853)
!2853 = !{!2854}
!2854 = !DILocalVariable(name: "bytes", arg: 1, scope: !2852, file: !2832, line: 3798, type: !511)
!2855 = !DILocation(line: 3798, column: 36, scope: !2852)
!2856 = !DILocation(line: 3799, column: 27, scope: !2852)
!2857 = !DILocalVariable(name: "x", arg: 1, scope: !2858, file: !2832, line: 542, type: !359)
!2858 = distinct !DISubprogram(name: "from_le", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$7from_le17h8470338dd0ad2e81E", scope: !2833, file: !2832, line: 542, type: !2840, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2859)
!2859 = !{!2857}
!2860 = !DILocation(line: 542, column: 30, scope: !2858, inlinedAt: !2861)
!2861 = distinct !DILocation(line: 3799, column: 13, scope: !2852)
!2862 = !DILocation(line: 3800, column: 10, scope: !2852)
!2863 = distinct !DISubprogram(name: "from_ne_bytes", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$13from_ne_bytes17h1a68a017394d2e8dE", scope: !2833, file: !2832, line: 3841, type: !526, scopeLine: 3841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2864)
!2864 = !{!2865}
!2865 = !DILocalVariable(name: "bytes", arg: 1, scope: !2863, file: !2832, line: 3841, type: !511)
!2866 = !DILocation(line: 3841, column: 36, scope: !2863)
!2867 = !DILocation(line: 3843, column: 22, scope: !2863)
!2868 = !DILocation(line: 3844, column: 10, scope: !2863)
!2869 = distinct !DISubprogram(name: "is_utf16_surrogate", linkageName: "_ZN4core3num21_$LT$impl$u20$u16$GT$18is_utf16_surrogate17hc61ce6e9df67ec82E", scope: !2833, file: !2747, line: 1128, type: !2870, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2872)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!643, !359}
!2872 = !{!2873}
!2873 = !DILocalVariable(name: "self", arg: 1, scope: !2869, file: !2747, line: 1128, type: !359)
!2874 = !DILocation(line: 1128, column: 37, scope: !2869)
!2875 = !DILocation(line: 1129, column: 24, scope: !2869)
!2876 = !DILocation(line: 439, column: 18, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !2869, file: !2304, discriminator: 0)
!2878 = !DILocation(line: 1130, column: 6, scope: !2869)
!2879 = distinct !DISubprogram(name: "checked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h622365fd18f6d15fE", scope: !2880, file: !2832, line: 634, type: !2881, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2883)
!2880 = !DINamespace(name: "{impl#11}", scope: !208)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!103, !9, !9}
!2883 = !{!2884, !2885}
!2884 = !DILocalVariable(name: "self", arg: 1, scope: !2879, file: !2832, line: 634, type: !9)
!2885 = !DILocalVariable(name: "rhs", arg: 2, scope: !2879, file: !2832, line: 634, type: !9)
!2886 = !DILocation(line: 634, column: 34, scope: !2879)
!2887 = !DILocation(line: 634, column: 40, scope: !2879)
!2888 = !DILocation(line: 642, column: 37, scope: !2879)
!2889 = !DILocalVariable(name: "b", arg: 1, scope: !2890, file: !2231, line: 456, type: !643)
!2890 = distinct !DISubprogram(name: "unlikely", linkageName: "_ZN4core10intrinsics8unlikely17hbdaab305ce3910c8E", scope: !2232, file: !2231, line: 456, type: !2891, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2893)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!643, !643}
!2893 = !{!2889}
!2894 = !DILocation(line: 456, column: 23, scope: !2890, inlinedAt: !2895)
!2895 = distinct !DILocation(line: 642, column: 16, scope: !2879)
!2896 = !DILocation(line: 457, column: 8, scope: !2890, inlinedAt: !2895)
!2897 = !DILocation(line: 461, column: 9, scope: !2890, inlinedAt: !2895)
!2898 = !DILocation(line: 457, column: 5, scope: !2890, inlinedAt: !2895)
!2899 = !DILocation(line: 459, column: 9, scope: !2890, inlinedAt: !2895)
!2900 = !DILocation(line: 463, column: 2, scope: !2890, inlinedAt: !2895)
!2901 = !DILocation(line: 642, column: 16, scope: !2879)
!2902 = !DILocation(line: 646, column: 31, scope: !2879)
!2903 = !DILocation(line: 646, column: 17, scope: !2879)
!2904 = !DILocation(line: 642, column: 13, scope: !2879)
!2905 = !DILocation(line: 643, column: 17, scope: !2879)
!2906 = !DILocation(line: 648, column: 10, scope: !2879)
!2907 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_mul17h7a266aabfeecb2d1E", scope: !2880, file: !2832, line: 1033, type: !2881, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2908)
!2908 = !{!2909, !2910, !2911, !2913}
!2909 = !DILocalVariable(name: "self", arg: 1, scope: !2907, file: !2832, line: 1033, type: !9)
!2910 = !DILocalVariable(name: "rhs", arg: 2, scope: !2907, file: !2832, line: 1033, type: !9)
!2911 = !DILocalVariable(name: "a", scope: !2912, file: !2832, line: 1034, type: !9, align: 32)
!2912 = distinct !DILexicalBlock(scope: !2907, file: !2832, line: 1034, column: 13)
!2913 = !DILocalVariable(name: "b", scope: !2912, file: !2832, line: 1034, type: !643, align: 8)
!2914 = !DILocation(line: 1033, column: 34, scope: !2907)
!2915 = !DILocation(line: 1033, column: 40, scope: !2907)
!2916 = !DILocalVariable(name: "self", arg: 1, scope: !2917, file: !2832, line: 2867, type: !9)
!2917 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_mul17hb3e76adbffddd04cE", scope: !2880, file: !2832, line: 2867, type: !2918, scopeLine: 2867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2924)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!2920, !9, !9}
!2920 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, bool)", file: !2, size: 64, align: 32, elements: !2921, templateParams: !21, identifier: "d571287e27d8be874e95a2f698798cc6")
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2920, file: !2, baseType: !9, size: 32, align: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2920, file: !2, baseType: !643, size: 8, align: 8, offset: 32)
!2924 = !{!2916, !2925, !2926, !2928}
!2925 = !DILocalVariable(name: "rhs", arg: 2, scope: !2917, file: !2832, line: 2867, type: !9)
!2926 = !DILocalVariable(name: "a", scope: !2927, file: !2832, line: 2868, type: !51, align: 32)
!2927 = distinct !DILexicalBlock(scope: !2917, file: !2832, line: 2868, column: 13)
!2928 = !DILocalVariable(name: "b", scope: !2927, file: !2832, line: 2868, type: !643, align: 8)
!2929 = !DILocation(line: 2867, column: 38, scope: !2917, inlinedAt: !2930)
!2930 = distinct !DILocation(line: 1034, column: 31, scope: !2907)
!2931 = !DILocation(line: 2867, column: 44, scope: !2917, inlinedAt: !2930)
!2932 = !DILocation(line: 2868, column: 26, scope: !2917, inlinedAt: !2930)
!2933 = !DILocation(line: 2868, column: 18, scope: !2917, inlinedAt: !2930)
!2934 = !DILocation(line: 2868, column: 18, scope: !2927, inlinedAt: !2930)
!2935 = !DILocation(line: 2868, column: 21, scope: !2917, inlinedAt: !2930)
!2936 = !DILocation(line: 2868, column: 21, scope: !2927, inlinedAt: !2930)
!2937 = !DILocation(line: 1034, column: 31, scope: !2907)
!2938 = !DILocation(line: 1034, column: 18, scope: !2907)
!2939 = !DILocation(line: 1034, column: 18, scope: !2912)
!2940 = !DILocation(line: 1034, column: 21, scope: !2907)
!2941 = !DILocation(line: 1034, column: 21, scope: !2912)
!2942 = !DILocation(line: 456, column: 23, scope: !2890, inlinedAt: !2943)
!2943 = distinct !DILocation(line: 1035, column: 16, scope: !2912)
!2944 = !DILocation(line: 457, column: 8, scope: !2890, inlinedAt: !2943)
!2945 = !DILocation(line: 461, column: 9, scope: !2890, inlinedAt: !2943)
!2946 = !DILocation(line: 457, column: 5, scope: !2890, inlinedAt: !2943)
!2947 = !DILocation(line: 459, column: 9, scope: !2890, inlinedAt: !2943)
!2948 = !DILocation(line: 463, column: 2, scope: !2890, inlinedAt: !2943)
!2949 = !DILocation(line: 1035, column: 16, scope: !2912)
!2950 = !DILocation(line: 1035, column: 56, scope: !2912)
!2951 = !DILocation(line: 1035, column: 13, scope: !2912)
!2952 = !DILocation(line: 1035, column: 42, scope: !2912)
!2953 = !DILocation(line: 1036, column: 10, scope: !2907)
!2954 = distinct !DISubprogram(name: "checked_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_sub17h0a5e6ce25b7151bdE", scope: !2880, file: !2832, line: 790, type: !2881, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2955)
!2955 = !{!2956, !2957}
!2956 = !DILocalVariable(name: "self", arg: 1, scope: !2954, file: !2832, line: 790, type: !9)
!2957 = !DILocalVariable(name: "rhs", arg: 2, scope: !2954, file: !2832, line: 790, type: !9)
!2958 = !DILocation(line: 790, column: 34, scope: !2954)
!2959 = !DILocation(line: 790, column: 40, scope: !2954)
!2960 = !DILocation(line: 796, column: 16, scope: !2954)
!2961 = !DILocation(line: 800, column: 31, scope: !2954)
!2962 = !DILocation(line: 800, column: 17, scope: !2954)
!2963 = !DILocation(line: 796, column: 13, scope: !2954)
!2964 = !DILocation(line: 797, column: 17, scope: !2954)
!2965 = !DILocation(line: 802, column: 10, scope: !2954)
!2966 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add18precondition_check17h12c128c37266108cE", scope: !2967, file: !473, line: 68, type: !2968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2970)
!2967 = !DINamespace(name: "unchecked_add", scope: !2880)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{null, !9, !9, !1241}
!2970 = !{!2971, !2972, !2973}
!2971 = !DILocalVariable(name: "lhs", arg: 1, scope: !2966, file: !473, line: 68, type: !9)
!2972 = !DILocalVariable(name: "rhs", arg: 2, scope: !2966, file: !473, line: 68, type: !9)
!2973 = !DILocalVariable(name: "msg", scope: !2974, file: !473, line: 70, type: !124, align: 32)
!2974 = distinct !DILexicalBlock(scope: !2966, file: !473, line: 70, column: 21)
!2975 = !DILocation(line: 68, column: 43, scope: !2966)
!2976 = !DILocation(line: 70, column: 25, scope: !2974)
!2977 = !DILocalVariable(name: "self", arg: 1, scope: !2978, file: !2832, line: 2645, type: !9)
!2978 = distinct !DISubprogram(name: "overflowing_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15overflowing_add17h5ed3665df2a5b632E", scope: !2880, file: !2832, line: 2645, type: !2918, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !2979)
!2979 = !{!2977, !2980, !2981, !2983}
!2980 = !DILocalVariable(name: "rhs", arg: 2, scope: !2978, file: !2832, line: 2645, type: !9)
!2981 = !DILocalVariable(name: "a", scope: !2982, file: !2832, line: 2646, type: !51, align: 32)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !2832, line: 2646, column: 13)
!2983 = !DILocalVariable(name: "b", scope: !2982, file: !2832, line: 2646, type: !643, align: 8)
!2984 = !DILocation(line: 2645, column: 38, scope: !2978, inlinedAt: !2985)
!2985 = distinct !DILocation(line: 712, column: 27, scope: !2986)
!2986 = !DILexicalBlockFile(scope: !2966, file: !2832, discriminator: 0)
!2987 = !DILocation(line: 2645, column: 44, scope: !2978, inlinedAt: !2985)
!2988 = !DILocation(line: 2646, column: 26, scope: !2978, inlinedAt: !2985)
!2989 = !DILocation(line: 2646, column: 18, scope: !2978, inlinedAt: !2985)
!2990 = !DILocation(line: 2646, column: 18, scope: !2982, inlinedAt: !2985)
!2991 = !DILocation(line: 2646, column: 21, scope: !2978, inlinedAt: !2985)
!2992 = !DILocation(line: 2646, column: 21, scope: !2982, inlinedAt: !2985)
!2993 = !DILocation(line: 2648, column: 10, scope: !2978, inlinedAt: !2985)
!2994 = !DILocation(line: 712, column: 27, scope: !2986)
!2995 = !DILocation(line: 712, column: 23, scope: !2986)
!2996 = !DILocation(line: 75, column: 14, scope: !2966)
!2997 = !DILocation(line: 73, column: 94, scope: !2974)
!2998 = !DILocation(line: 73, column: 59, scope: !2974)
!2999 = !DILocation(line: 73, column: 21, scope: !2974)
!3000 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul18precondition_check17h04c96da029baf90aE", scope: !3001, file: !473, line: 68, type: !2968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3002)
!3001 = !DINamespace(name: "unchecked_mul", scope: !2880)
!3002 = !{!3003, !3004, !3005}
!3003 = !DILocalVariable(name: "lhs", arg: 1, scope: !3000, file: !473, line: 68, type: !9)
!3004 = !DILocalVariable(name: "rhs", arg: 2, scope: !3000, file: !473, line: 68, type: !9)
!3005 = !DILocalVariable(name: "msg", scope: !3006, file: !473, line: 70, type: !124, align: 32)
!3006 = distinct !DILexicalBlock(scope: !3000, file: !473, line: 70, column: 21)
!3007 = !DILocation(line: 68, column: 43, scope: !3000)
!3008 = !DILocation(line: 70, column: 25, scope: !3006)
!3009 = !DILocation(line: 2867, column: 38, scope: !2917, inlinedAt: !3010)
!3010 = distinct !DILocation(line: 1100, column: 27, scope: !3011)
!3011 = !DILexicalBlockFile(scope: !3000, file: !2832, discriminator: 0)
!3012 = !DILocation(line: 2867, column: 44, scope: !2917, inlinedAt: !3010)
!3013 = !DILocation(line: 2868, column: 26, scope: !2917, inlinedAt: !3010)
!3014 = !DILocation(line: 2868, column: 18, scope: !2917, inlinedAt: !3010)
!3015 = !DILocation(line: 2868, column: 18, scope: !2927, inlinedAt: !3010)
!3016 = !DILocation(line: 2868, column: 21, scope: !2917, inlinedAt: !3010)
!3017 = !DILocation(line: 2868, column: 21, scope: !2927, inlinedAt: !3010)
!3018 = !DILocation(line: 1100, column: 27, scope: !3011)
!3019 = !DILocation(line: 1100, column: 23, scope: !3011)
!3020 = !DILocation(line: 75, column: 14, scope: !3000)
!3021 = !DILocation(line: 73, column: 94, scope: !3006)
!3022 = !DILocation(line: 73, column: 59, scope: !3006)
!3023 = !DILocation(line: 73, column: 21, scope: !3006)
!3024 = distinct !DISubprogram(name: "is_multiple_of", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$14is_multiple_of17h666402c515b77d3dE", scope: !2880, file: !2832, line: 3555, type: !3025, scopeLine: 3555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3027)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!643, !9, !9}
!3027 = !{!3028, !3029}
!3028 = !DILocalVariable(name: "self", arg: 1, scope: !3024, file: !2832, line: 3555, type: !9)
!3029 = !DILocalVariable(name: "rhs", arg: 2, scope: !3024, file: !2832, line: 3555, type: !9)
!3030 = !DILocation(line: 3555, column: 37, scope: !3024)
!3031 = !DILocation(line: 3555, column: 43, scope: !3024)
!3032 = !DILocation(line: 3556, column: 13, scope: !3024)
!3033 = !DILocation(line: 3557, column: 22, scope: !3024)
!3034 = !DILocation(line: 3557, column: 30, scope: !3024)
!3035 = !DILocation(line: 3558, column: 22, scope: !3024)
!3036 = !DILocation(line: 3560, column: 10, scope: !3024)
!3037 = !DILocation(line: 3558, column: 36, scope: !3024)
!3038 = distinct !DISubprogram(name: "abs_diff", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$8abs_diff17h44069b1809cd594fE", scope: !2880, file: !2832, line: 2831, type: !3039, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3041)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!9, !9, !9}
!3041 = !{!3042, !3043}
!3042 = !DILocalVariable(name: "self", arg: 1, scope: !3038, file: !2832, line: 2831, type: !9)
!3043 = !DILocalVariable(name: "other", arg: 2, scope: !3038, file: !2832, line: 2831, type: !9)
!3044 = !DILocation(line: 2831, column: 31, scope: !3038)
!3045 = !DILocation(line: 2831, column: 37, scope: !3038)
!3046 = !DILocation(line: 2832, column: 16, scope: !3038)
!3047 = !DILocation(line: 2096, column: 35, scope: !2820, inlinedAt: !3048)
!3048 = distinct !DILocation(line: 2835, column: 31, scope: !3038)
!3049 = !DILocation(line: 2096, column: 41, scope: !2820, inlinedAt: !3048)
!3050 = !DILocation(line: 2097, column: 13, scope: !2820, inlinedAt: !3048)
!3051 = !DILocation(line: 2835, column: 58, scope: !3038)
!3052 = !DILocation(line: 2835, column: 17, scope: !3038)
!3053 = !DILocation(line: 2832, column: 13, scope: !3038)
!3054 = !DILocation(line: 2837, column: 20, scope: !3038)
!3055 = !DILocation(line: 2843, column: 10, scope: !3038)
!3056 = !DILocation(line: 2840, column: 21, scope: !3038)
!3057 = !DILocation(line: 2838, column: 21, scope: !3038)
!3058 = !DILocation(line: 2837, column: 17, scope: !3038)
!3059 = distinct !DISubprogram(name: "div_ceil", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h11bff4b73d459aa3E", scope: !2880, file: !2832, line: 3470, type: !3060, scopeLine: 3470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3062)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!9, !9, !9, !1241}
!3062 = !{!3063, !3064, !3065, !3067}
!3063 = !DILocalVariable(name: "self", arg: 1, scope: !3059, file: !2832, line: 3470, type: !9)
!3064 = !DILocalVariable(name: "rhs", arg: 2, scope: !3059, file: !2832, line: 3470, type: !9)
!3065 = !DILocalVariable(name: "d", scope: !3066, file: !2832, line: 3471, type: !9, align: 32)
!3066 = distinct !DILexicalBlock(scope: !3059, file: !2832, line: 3471, column: 13)
!3067 = !DILocalVariable(name: "r", scope: !3068, file: !2832, line: 3472, type: !9, align: 32)
!3068 = distinct !DILexicalBlock(scope: !3066, file: !2832, line: 3472, column: 13)
!3069 = !DILocation(line: 3470, column: 31, scope: !3059)
!3070 = !DILocation(line: 3470, column: 37, scope: !3059)
!3071 = !DILocation(line: 3471, column: 21, scope: !3059)
!3072 = !DILocation(line: 3471, column: 17, scope: !3066)
!3073 = !DILocation(line: 3472, column: 21, scope: !3066)
!3074 = !DILocation(line: 3472, column: 17, scope: !3068)
!3075 = !DILocation(line: 3473, column: 16, scope: !3068)
!3076 = !DILocation(line: 3476, column: 17, scope: !3068)
!3077 = !DILocation(line: 3473, column: 13, scope: !3068)
!3078 = !DILocation(line: 3474, column: 17, scope: !3068)
!3079 = !DILocation(line: 3478, column: 10, scope: !3059)
!3080 = distinct !DISubprogram(name: "break_value<char, ()>", linkageName: "_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h3786488487c19b0cE", scope: !2118, file: !2090, line: 186, type: !3081, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2126, declaration: !3083, retainedNodes: !3084)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!1381, !2118}
!3083 = !DISubprogram(name: "break_value<char, ()>", linkageName: "_ZN4core3ops12control_flow24ControlFlow$LT$B$C$C$GT$11break_value17h3786488487c19b0cE", scope: !2118, file: !2090, line: 186, type: !3081, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2126)
!3084 = !{!3085, !3086}
!3085 = !DILocalVariable(name: "self", arg: 1, scope: !3080, file: !2090, line: 186, type: !2118)
!3086 = !DILocalVariable(name: "x", scope: !3087, file: !2090, line: 189, type: !574, align: 32)
!3087 = distinct !DILexicalBlock(scope: !3080, file: !2090, line: 189, column: 13)
!3088 = !DILocation(line: 186, column: 24, scope: !3080)
!3089 = !DILocation(line: 187, column: 15, scope: !3080)
!3090 = !DILocation(line: 187, column: 9, scope: !3080)
!3091 = !DILocation(line: 189, column: 32, scope: !3080)
!3092 = !DILocation(line: 189, column: 32, scope: !3087)
!3093 = !DILocation(line: 189, column: 38, scope: !3087)
!3094 = !DILocation(line: 189, column: 44, scope: !3080)
!3095 = !DILocation(line: 188, column: 42, scope: !3080)
!3096 = !DILocation(line: 191, column: 5, scope: !3080)
!3097 = !DILocation(line: 191, column: 6, scope: !3080)
!3098 = distinct !DISubprogram(name: "from_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h9bd09ff904c18546E", scope: !1089, file: !2090, line: 410, type: !3099, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3102, declaration: !3101, retainedNodes: !3104)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!1089, !1055}
!3101 = !DISubprogram(name: "from_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8from_try17h9bd09ff904c18546E", scope: !1089, file: !2090, line: 410, type: !3099, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3102)
!3102 = !{!3103}
!3103 = !DITemplateTypeParameter(name: "R", type: !1055)
!3104 = !{!3105, !3106, !3108}
!3105 = !DILocalVariable(name: "r", arg: 1, scope: !3098, file: !2090, line: 410, type: !1055)
!3106 = !DILocalVariable(name: "v", scope: !3107, file: !2090, line: 412, type: !7, align: 8)
!3107 = distinct !DILexicalBlock(scope: !3098, file: !2090, line: 412, column: 13)
!3108 = !DILocalVariable(name: "v", scope: !3109, file: !2090, line: 413, type: !2081, align: 8)
!3109 = distinct !DILexicalBlock(scope: !3098, file: !2090, line: 413, column: 13)
!3110 = !DILocation(line: 410, column: 28, scope: !3098)
!3111 = !DILocation(line: 412, column: 35, scope: !3107)
!3112 = !DILocation(line: 413, column: 32, scope: !3109)
!3113 = !DILocation(line: 411, column: 15, scope: !3098)
!3114 = !DILocation(line: 411, column: 9, scope: !3098)
!3115 = !DILocation(line: 412, column: 41, scope: !3107)
!3116 = !DILocation(line: 412, column: 64, scope: !3098)
!3117 = !DILocation(line: 415, column: 6, scope: !3098)
!3118 = !DILocation(line: 413, column: 57, scope: !3109)
!3119 = !DILocation(line: 413, column: 38, scope: !3109)
!3120 = !DILocation(line: 413, column: 76, scope: !3098)
!3121 = distinct !DISubprogram(name: "into_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17ha45297853c740410E", scope: !1089, file: !2090, line: 419, type: !3122, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3102, declaration: !3124, retainedNodes: !3125)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{null, !1089}
!3124 = !DISubprogram(name: "into_try<core::ops::try_trait::NeverShortCircuit<()>>", linkageName: "_ZN4core3ops12control_flow77ControlFlow$LT$R$C$$LT$R$u20$as$u20$core..ops..try_trait..Try$GT$..Output$GT$8into_try17ha45297853c740410E", scope: !1089, file: !2090, line: 419, type: !3122, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3102)
!3125 = !{!3126, !3127, !3129}
!3126 = !DILocalVariable(name: "self", arg: 1, scope: !3121, file: !2090, line: 419, type: !1089)
!3127 = !DILocalVariable(name: "v", scope: !3128, file: !2090, line: 421, type: !7, align: 8)
!3128 = distinct !DILexicalBlock(scope: !3121, file: !2090, line: 421, column: 13)
!3129 = !DILocalVariable(name: "v", scope: !3130, file: !2090, line: 422, type: !1055, align: 8)
!3130 = distinct !DILexicalBlock(scope: !3121, file: !2090, line: 422, column: 13)
!3131 = !DILocation(line: 419, column: 28, scope: !3121)
!3132 = !DILocation(line: 421, column: 35, scope: !3128)
!3133 = !DILocation(line: 422, column: 32, scope: !3130)
!3134 = !DILocation(line: 420, column: 15, scope: !3121)
!3135 = !DILocation(line: 420, column: 9, scope: !3121)
!3136 = !DILocation(line: 422, column: 38, scope: !3121)
!3137 = !DILocation(line: 421, column: 41, scope: !3128)
!3138 = !DILocation(line: 424, column: 6, scope: !3121)
!3139 = distinct !DISubprogram(name: "call_mut<fn([u8; 2]) -> u16, ([u8; 2])>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17h2f05ead342bdf086E", scope: !3141, file: !3140, line: 166, type: !3143, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3152, retainedNodes: !3146)
!3140 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "f10f7c44ec86506ef01d8c34efe59fc0")
!3141 = !DINamespace(name: "FnMut", scope: !3142)
!3142 = !DINamespace(name: "function", scope: !1044)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{!359, !3145, !511}
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut fn([u8; 2]) -> u16", baseType: !525, size: 32, align: 32, dwarfAddressSpace: 0)
!3146 = !{!3147, !3148}
!3147 = !DILocalVariable(arg: 1, scope: !3139, file: !3140, line: 166, type: !3145)
!3148 = !DILocalVariable(arg: 2, scope: !3139, file: !3140, line: 166, type: !3149)
!3149 = !DICompositeType(tag: DW_TAG_structure_type, name: "([u8; 2])", file: !2, size: 16, align: 8, elements: !3150, templateParams: !21, identifier: "670d0ae9d4ee2f29a7a5db93d501db05")
!3150 = !{!3151}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3149, file: !2, baseType: !511, size: 16, align: 8)
!3152 = !{!3153, !3154}
!3153 = !DITemplateTypeParameter(name: "Self", type: !525)
!3154 = !DITemplateTypeParameter(name: "Args", type: !3149)
!3155 = !DILocation(line: 166, column: 5, scope: !3139)
!3156 = distinct !DISubprogram(name: "call_mut<fn([u8; 2]) -> u16, ([u8; 2])>", linkageName: "_ZN4core3ops8function5FnMut8call_mut17h49be5b38701696c0E", scope: !3141, file: !3140, line: 166, type: !3143, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3152, retainedNodes: !3157)
!3157 = !{!3158, !3159}
!3158 = !DILocalVariable(arg: 1, scope: !3156, file: !3140, line: 166, type: !3145)
!3159 = !DILocalVariable(arg: 2, scope: !3156, file: !3140, line: 166, type: !3149)
!3160 = !DILocation(line: 166, column: 5, scope: !3156)
!3161 = distinct !DISubprogram(name: "call_once<([u8; 2]), fn([u8; 2]) -> u16>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h0646a66fbdde460aE", scope: !3162, file: !3140, line: 309, type: !3143, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3167, retainedNodes: !3164)
!3162 = !DINamespace(name: "{impl#4}", scope: !3163)
!3163 = !DINamespace(name: "impls", scope: !3142)
!3164 = !{!3165, !3166}
!3165 = !DILocalVariable(name: "self", arg: 1, scope: !3161, file: !3140, line: 309, type: !3145)
!3166 = !DILocalVariable(name: "args", arg: 2, scope: !3161, file: !3140, line: 309, type: !3149)
!3167 = !{!3168, !530}
!3168 = !DITemplateTypeParameter(name: "A", type: !3149)
!3169 = !DILocation(line: 309, column: 41, scope: !3161)
!3170 = !DILocation(line: 309, column: 47, scope: !3161)
!3171 = !DILocation(line: 310, column: 13, scope: !3161)
!3172 = !DILocation(line: 310, column: 21, scope: !3161)
!3173 = !DILocation(line: 311, column: 10, scope: !3161)
!3174 = distinct !DISubprogram(name: "call_once<([u8; 2]), fn([u8; 2]) -> u16>", linkageName: "_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h0e2c7e697a27e2b0E", scope: !3162, file: !3140, line: 309, type: !3143, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3167, retainedNodes: !3175)
!3175 = !{!3176, !3177}
!3176 = !DILocalVariable(name: "self", arg: 1, scope: !3174, file: !3140, line: 309, type: !3145)
!3177 = !DILocalVariable(name: "args", arg: 2, scope: !3174, file: !3140, line: 309, type: !3149)
!3178 = !DILocation(line: 309, column: 41, scope: !3174)
!3179 = !DILocation(line: 309, column: 47, scope: !3174)
!3180 = !DILocation(line: 310, column: 13, scope: !3174)
!3181 = !DILocation(line: 310, column: 21, scope: !3174)
!3182 = !DILocation(line: 311, column: 10, scope: !3174)
!3183 = distinct !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h878c7de198198c8aE", scope: !1055, file: !2077, line: 397, type: !3184, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3187, declaration: !3186, retainedNodes: !3190)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!1040, !990}
!3186 = !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h878c7de198198c8aE", scope: !1055, file: !2077, line: 397, type: !3184, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3187)
!3187 = !{!329, !3188, !573, !3189}
!3188 = !DITemplateTypeParameter(name: "A", type: !7)
!3189 = !DITemplateTypeParameter(name: "impl FnMut(A, B) -> T", type: !990)
!3190 = !{!3191}
!3191 = !DILocalVariable(name: "f", arg: 1, scope: !3183, file: !2077, line: 397, type: !990)
!3192 = !DILocation(line: 397, column: 36, scope: !3183)
!3193 = !DILocation(line: 399, column: 6, scope: !3183)
!3194 = distinct !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h8e5a227b68c3356dE", scope: !1055, file: !2077, line: 397, type: !3195, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3198, declaration: !3197, retainedNodes: !3200)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!1069, !1017}
!3197 = !DISubprogram(name: "wrap_mut_2<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_217h8e5a227b68c3356dE", scope: !1055, file: !2077, line: 397, type: !3195, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3198)
!3198 = !{!329, !3188, !573, !3199}
!3199 = !DITemplateTypeParameter(name: "impl FnMut(A, B) -> T", type: !1017)
!3200 = !{!3201}
!3201 = !DILocalVariable(name: "f", arg: 1, scope: !3194, file: !2077, line: 397, type: !1017)
!3202 = !DILocation(line: 397, column: 36, scope: !3194)
!3203 = !DILocation(line: 399, column: 6, scope: !3194)
!3204 = distinct !DISubprogram(name: "{closure#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h00ae34164ac98efbE", scope: !1041, file: !2077, line: 398, type: !3205, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3187, retainedNodes: !3207)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{null, !1160, !7, !574}
!3207 = !{!3208, !3209, !3210}
!3208 = !DILocalVariable(name: "a", arg: 2, scope: !3204, file: !2077, line: 398, type: !7)
!3209 = !DILocalVariable(name: "b", arg: 3, scope: !3204, file: !2077, line: 398, type: !574)
!3210 = !DILocalVariable(name: "f", scope: !3204, file: !2077, line: 397, type: !990, align: 32)
!3211 = !DILocation(line: 397, column: 40, scope: !3204)
!3212 = !DILocation(line: 398, column: 15, scope: !3204)
!3213 = !DILocation(line: 398, column: 18, scope: !3204)
!3214 = !DILocation(line: 398, column: 39, scope: !3204)
!3215 = !DILocation(line: 398, column: 47, scope: !3204)
!3216 = distinct !DISubprogram(name: "{closure#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>", linkageName: "_ZN4core3ops9try_trait26NeverShortCircuit$LT$T$GT$10wrap_mut_228_$u7b$$u7b$closure$u7d$$u7d$17h39ad0741d0772856E", scope: !1041, file: !2077, line: 398, type: !3217, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3198, retainedNodes: !3219)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{null, !1110, !7, !574}
!3219 = !{!3220, !3221, !3222}
!3220 = !DILocalVariable(name: "a", arg: 2, scope: !3216, file: !2077, line: 398, type: !7)
!3221 = !DILocalVariable(name: "b", arg: 3, scope: !3216, file: !2077, line: 398, type: !574)
!3222 = !DILocalVariable(name: "f", scope: !3216, file: !2077, line: 397, type: !1017, align: 32)
!3223 = !DILocation(line: 397, column: 40, scope: !3216)
!3224 = !DILocation(line: 398, column: 15, scope: !3216)
!3225 = !DILocation(line: 398, column: 18, scope: !3216)
!3226 = !DILocation(line: 398, column: 39, scope: !3216)
!3227 = !DILocation(line: 398, column: 47, scope: !3216)
!3228 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr11write_bytes18precondition_check17hcc5ff36fde79da6cE", scope: !3229, file: !473, line: 68, type: !3230, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3232)
!3229 = !DINamespace(name: "write_bytes", scope: !47)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{null, !6, !9, !643, !1241}
!3232 = !{!3233, !3234, !3235, !3236}
!3233 = !DILocalVariable(name: "addr", arg: 1, scope: !3228, file: !473, line: 68, type: !6)
!3234 = !DILocalVariable(name: "align", arg: 2, scope: !3228, file: !473, line: 68, type: !9)
!3235 = !DILocalVariable(name: "zero_size", arg: 3, scope: !3228, file: !473, line: 68, type: !643)
!3236 = !DILocalVariable(name: "msg", scope: !3237, file: !473, line: 70, type: !124, align: 32)
!3237 = distinct !DILexicalBlock(scope: !3228, file: !473, line: 70, column: 21)
!3238 = !DILocation(line: 68, column: 43, scope: !3228)
!3239 = !DILocation(line: 70, column: 25, scope: !3237)
!3240 = !DILocation(line: 707, column: 18, scope: !3241)
!3241 = !DILexicalBlockFile(scope: !3228, file: !460, discriminator: 0)
!3242 = !DILocation(line: 73, column: 94, scope: !3237)
!3243 = !DILocation(line: 73, column: 59, scope: !3237)
!3244 = !DILocation(line: 73, column: 21, scope: !3237)
!3245 = !DILocation(line: 75, column: 14, scope: !3228)
!3246 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr149drop_in_place$LT$$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$u8$C$alloc..alloc..Global$GT$$GT$17h28f3501fb6b9b61aE", scope: !47, file: !460, line: 805, type: !3247, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3252, retainedNodes: !3250)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{null, !3249}
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::drain::{impl#7}::drop::DropGuard<u8, alloc::alloc::Global>", baseType: !1728, size: 32, align: 32, dwarfAddressSpace: 0)
!3250 = !{!3251}
!3251 = !DILocalVariable(arg: 1, scope: !3246, file: !460, line: 805, type: !3249)
!3252 = !{!3253}
!3253 = !DITemplateTypeParameter(name: "T", type: !1728)
!3254 = !DILocation(line: 805, column: 1, scope: !3246)
!3255 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr19copy_nonoverlapping18precondition_check17hceeeb3fd9f956ed3E", scope: !3256, file: !473, line: 68, type: !3257, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3260)
!3256 = !DINamespace(name: "copy_nonoverlapping", scope: !47)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{null, !6, !3259, !9, !9, !9, !1241}
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut ()", baseType: !7, size: 32, align: 32, dwarfAddressSpace: 0)
!3260 = !{!3261, !3262, !3263, !3264, !3265, !3266, !3268}
!3261 = !DILocalVariable(name: "src", arg: 1, scope: !3255, file: !473, line: 68, type: !6)
!3262 = !DILocalVariable(name: "dst", arg: 2, scope: !3255, file: !473, line: 68, type: !3259)
!3263 = !DILocalVariable(name: "size", arg: 3, scope: !3255, file: !473, line: 68, type: !9)
!3264 = !DILocalVariable(name: "align", arg: 4, scope: !3255, file: !473, line: 68, type: !9)
!3265 = !DILocalVariable(name: "count", arg: 5, scope: !3255, file: !473, line: 68, type: !9)
!3266 = !DILocalVariable(name: "zero_size", scope: !3267, file: !460, line: 538, type: !643, align: 8)
!3267 = distinct !DILexicalBlock(scope: !3255, file: !460, line: 538, column: 13)
!3268 = !DILocalVariable(name: "msg", scope: !3269, file: !473, line: 70, type: !124, align: 32)
!3269 = distinct !DILexicalBlock(scope: !3255, file: !473, line: 70, column: 21)
!3270 = !DILocation(line: 68, column: 43, scope: !3255)
!3271 = !DILocation(line: 538, column: 17, scope: !3267)
!3272 = !DILocation(line: 70, column: 25, scope: !3269)
!3273 = !DILocation(line: 538, column: 29, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3255, file: !460, discriminator: 0)
!3275 = !DILocation(line: 538, column: 43, scope: !3274)
!3276 = !DILocation(line: 539, column: 66, scope: !3267)
!3277 = !DILocation(line: 539, column: 13, scope: !3267)
!3278 = !DILocation(line: 540, column: 73, scope: !3267)
!3279 = !DILocation(line: 540, column: 20, scope: !3267)
!3280 = !DILocation(line: 541, column: 20, scope: !3267)
!3281 = !DILocation(line: 537, column: 14, scope: !3274)
!3282 = !DILocation(line: 73, column: 94, scope: !3269)
!3283 = !DILocation(line: 73, column: 59, scope: !3269)
!3284 = !DILocation(line: 73, column: 21, scope: !3269)
!3285 = !DILocation(line: 75, column: 14, scope: !3255)
!3286 = distinct !DISubprogram(name: "slice_from_raw_parts<u16>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17h08385c11687dd27cE", scope: !47, file: !460, line: 1172, type: !3287, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, retainedNodes: !3294)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!3289, !736, !9}
!3289 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u16]", file: !2, size: 64, align: 32, elements: !3290, templateParams: !21, identifier: "de993e7563790f266b94c839cccaa312")
!3290 = !{!3291, !3293}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3289, file: !2, baseType: !3292, size: 32, align: 32)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 32, align: 32, dwarfAddressSpace: 0)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3289, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3294 = !{!3295, !3296}
!3295 = !DILocalVariable(name: "data", arg: 1, scope: !3286, file: !460, line: 1172, type: !736)
!3296 = !DILocalVariable(name: "len", arg: 2, scope: !3286, file: !460, line: 1172, type: !9)
!3297 = !DILocation(line: 1172, column: 38, scope: !3286)
!3298 = !DILocation(line: 1172, column: 54, scope: !3286)
!3299 = !DILocation(line: 1173, column: 5, scope: !3286)
!3300 = !DILocation(line: 1174, column: 2, scope: !3286)
!3301 = distinct !DISubprogram(name: "slice_from_raw_parts<[u8; 2]>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hd361afd14c0d3bc0E", scope: !47, file: !460, line: 1172, type: !3302, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !3309)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!3304, !510, !9}
!3304 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [[u8; 2]]", file: !2, size: 64, align: 32, elements: !3305, templateParams: !21, identifier: "b200d3d7ab676d64aaff1a106f300d95")
!3305 = !{!3306, !3308}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3304, file: !2, baseType: !3307, size: 32, align: 32)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32, align: 32, dwarfAddressSpace: 0)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3304, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3309 = !{!3310, !3311}
!3310 = !DILocalVariable(name: "data", arg: 1, scope: !3301, file: !460, line: 1172, type: !510)
!3311 = !DILocalVariable(name: "len", arg: 2, scope: !3301, file: !460, line: 1172, type: !9)
!3312 = !DILocation(line: 1172, column: 38, scope: !3301)
!3313 = !DILocation(line: 1172, column: 54, scope: !3301)
!3314 = !DILocation(line: 1173, column: 5, scope: !3301)
!3315 = !DILocation(line: 1174, column: 2, scope: !3301)
!3316 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core3ptr238drop_in_place$LT$alloc..boxed..convert..$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$..from..StringError$GT$17h0871071e578a1949E", scope: !47, file: !460, line: 805, type: !3317, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2254, retainedNodes: !3320)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{null, !3319}
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::convert::{impl#19}::from::StringError", baseType: !171, size: 32, align: 32, dwarfAddressSpace: 0)
!3320 = !{!3321}
!3321 = !DILocalVariable(arg: 1, scope: !3316, file: !460, line: 805, type: !3319)
!3322 = !DILocation(line: 805, column: 1, scope: !3316)
!3323 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h63344d021f1bfdeaE", scope: !47, file: !460, line: 1218, type: !3324, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1345, retainedNodes: !3327)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!1329, !3326, !9}
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::mem::maybe_uninit::MaybeUninit<u8>", baseType: !1333, size: 32, align: 32, dwarfAddressSpace: 0)
!3327 = !{!3328, !3329}
!3328 = !DILocalVariable(name: "data", arg: 1, scope: !3323, file: !460, line: 1218, type: !3326)
!3329 = !DILocalVariable(name: "len", arg: 2, scope: !3323, file: !460, line: 1218, type: !9)
!3330 = !DILocation(line: 1218, column: 42, scope: !3323)
!3331 = !DILocation(line: 1218, column: 56, scope: !3323)
!3332 = !DILocation(line: 1219, column: 5, scope: !3323)
!3333 = !DILocation(line: 1220, column: 2, scope: !3323)
!3334 = distinct !DISubprogram(name: "slice_from_raw_parts_mut<i8>", linkageName: "_ZN4core3ptr24slice_from_raw_parts_mut17h92a5c4824fa45176E", scope: !47, file: !460, line: 1218, type: !3335, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3346, retainedNodes: !3343)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{!3337, !3342, !9}
!3337 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [i8]", file: !2, size: 64, align: 32, elements: !3338, templateParams: !21, identifier: "8765094cbca83adceff7d19f7e339034")
!3338 = !{!3339, !3341}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3337, file: !2, baseType: !3340, size: 32, align: 32)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32, align: 32, dwarfAddressSpace: 0)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3337, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut i8", baseType: !420, size: 32, align: 32, dwarfAddressSpace: 0)
!3343 = !{!3344, !3345}
!3344 = !DILocalVariable(name: "data", arg: 1, scope: !3334, file: !460, line: 1218, type: !3342)
!3345 = !DILocalVariable(name: "len", arg: 2, scope: !3334, file: !460, line: 1218, type: !9)
!3346 = !{!3347}
!3347 = !DITemplateTypeParameter(name: "T", type: !420)
!3348 = !DILocation(line: 1218, column: 42, scope: !3334)
!3349 = !DILocation(line: 1218, column: 56, scope: !3334)
!3350 = !DILocation(line: 1219, column: 5, scope: !3334)
!3351 = !DILocation(line: 1220, column: 2, scope: !3334)
!3352 = distinct !DISubprogram(name: "drop_in_place<alloc::string::String>", linkageName: "_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17h46bf3a143cf55f4bE", scope: !47, file: !460, line: 805, type: !3353, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3358, retainedNodes: !3356)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{null, !3355}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::String", baseType: !178, size: 32, align: 32, dwarfAddressSpace: 0)
!3356 = !{!3357}
!3357 = !DILocalVariable(arg: 1, scope: !3352, file: !460, line: 805, type: !3355)
!3358 = !{!1634}
!3359 = !DILocation(line: 805, column: 1, scope: !3352)
!3360 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h0b78a764740d5437E", scope: !47, file: !460, line: 805, type: !3361, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, retainedNodes: !3363)
!3361 = !DISubroutineType(types: !3362)
!3362 = !{null, !1774}
!3363 = !{!3364}
!3364 = !DILocalVariable(arg: 1, scope: !3360, file: !460, line: 805, type: !1774)
!3365 = !DILocation(line: 805, column: 1, scope: !3360)
!3366 = distinct !DISubprogram(name: "drop_in_place<alloc::string::FromUtf8Error>", linkageName: "_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h60f3530100380f94E", scope: !47, file: !460, line: 805, type: !3367, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3376, retainedNodes: !3374)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{null, !3369}
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::string::FromUtf8Error", baseType: !3370, size: 32, align: 32, dwarfAddressSpace: 0)
!3370 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf8Error", scope: !179, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !3371, templateParams: !21, identifier: "79429336f597e128e20cdd549de6b135")
!3371 = !{!3372, !3373}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3370, file: !2, baseType: !182, size: 96, align: 32, flags: DIFlagPrivate)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3370, file: !2, baseType: !260, size: 64, align: 32, offset: 96, flags: DIFlagPrivate)
!3374 = !{!3375}
!3375 = !DILocalVariable(arg: 1, scope: !3366, file: !460, line: 805, type: !3369)
!3376 = !{!3377}
!3377 = !DITemplateTypeParameter(name: "T", type: !3370)
!3378 = !DILocation(line: 805, column: 1, scope: !3366)
!3379 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr4copy18precondition_check17he956a62a93a1dfd5E", scope: !3380, file: !473, line: 68, type: !3381, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3383)
!3380 = !DINamespace(name: "copy", scope: !47)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null, !6, !3259, !9, !643, !1241}
!3383 = !{!3384, !3385, !3386, !3387, !3388}
!3384 = !DILocalVariable(name: "src", arg: 1, scope: !3379, file: !473, line: 68, type: !6)
!3385 = !DILocalVariable(name: "dst", arg: 2, scope: !3379, file: !473, line: 68, type: !3259)
!3386 = !DILocalVariable(name: "align", arg: 3, scope: !3379, file: !473, line: 68, type: !9)
!3387 = !DILocalVariable(name: "zero_size", arg: 4, scope: !3379, file: !473, line: 68, type: !643)
!3388 = !DILocalVariable(name: "msg", scope: !3389, file: !473, line: 70, type: !124, align: 32)
!3389 = distinct !DILexicalBlock(scope: !3379, file: !473, line: 70, column: 21)
!3390 = !DILocation(line: 68, column: 43, scope: !3379)
!3391 = !DILocation(line: 70, column: 25, scope: !3389)
!3392 = !DILocation(line: 635, column: 13, scope: !3393)
!3393 = !DILexicalBlockFile(scope: !3379, file: !460, discriminator: 0)
!3394 = !DILocation(line: 73, column: 94, scope: !3389)
!3395 = !DILocation(line: 73, column: 59, scope: !3389)
!3396 = !DILocation(line: 73, column: 21, scope: !3389)
!3397 = !DILocation(line: 636, column: 20, scope: !3393)
!3398 = !DILocation(line: 75, column: 14, scope: !3379)
!3399 = distinct !DISubprogram(name: "read<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17h63c7c9db3384bf20E", scope: !47, file: !460, line: 1705, type: !3400, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2647, retainedNodes: !3403)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!407, !3402, !1241}
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !407, size: 32, align: 32, dwarfAddressSpace: 0)
!3403 = !{!3404}
!3404 = !DILocalVariable(name: "src", arg: 1, scope: !3399, file: !460, line: 1705, type: !3402)
!3405 = !DILocation(line: 1705, column: 29, scope: !3399)
!3406 = !DILocation(line: 77, column: 35, scope: !3407)
!3407 = !DILexicalBlockFile(scope: !3399, file: !473, discriminator: 0)
!3408 = !DILocation(line: 1744, column: 9, scope: !3399)
!3409 = !DILocation(line: 1746, column: 2, scope: !3399)
!3410 = !DILocation(line: 78, column: 17, scope: !3407)
!3411 = distinct !DISubprogram(name: "read<alloc::alloc::Global>", linkageName: "_ZN4core3ptr4read17ha6d8c5539f92df21E", scope: !47, file: !460, line: 1705, type: !3412, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !869, retainedNodes: !3415)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{null, !3414, !1241}
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::alloc::Global", baseType: !212, size: 32, align: 32, dwarfAddressSpace: 0)
!3415 = !{!3416}
!3416 = !DILocalVariable(name: "src", arg: 1, scope: !3411, file: !460, line: 1705, type: !3414)
!3417 = !DILocation(line: 1705, column: 29, scope: !3411)
!3418 = !DILocation(line: 77, column: 35, scope: !3419)
!3419 = !DILexicalBlockFile(scope: !3411, file: !473, discriminator: 0)
!3420 = !DILocation(line: 1746, column: 2, scope: !3411)
!3421 = !DILocation(line: 78, column: 17, scope: !3419)
!3422 = distinct !DISubprogram(name: "read<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr4read17hbd9e7fdba50a345aE", scope: !47, file: !460, line: 1705, type: !3423, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3428, retainedNodes: !3426)
!3423 = !DISubroutineType(types: !3424)
!3424 = !{!186, !3425, !1241}
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !186, size: 32, align: 32, dwarfAddressSpace: 0)
!3426 = !{!3427}
!3427 = !DILocalVariable(name: "src", arg: 1, scope: !3422, file: !460, line: 1705, type: !3425)
!3428 = !{!3429}
!3429 = !DITemplateTypeParameter(name: "T", type: !186)
!3430 = !DILocation(line: 1705, column: 29, scope: !3422)
!3431 = !DILocation(line: 77, column: 35, scope: !3432)
!3432 = !DILexicalBlockFile(scope: !3422, file: !473, discriminator: 0)
!3433 = !DILocation(line: 1744, column: 9, scope: !3422)
!3434 = !DILocation(line: 1746, column: 2, scope: !3422)
!3435 = !DILocation(line: 78, column: 17, scope: !3432)
!3436 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr4read18precondition_check17he51eee4fa7e018bbE", scope: !3437, file: !473, line: 68, type: !3230, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3438)
!3437 = !DINamespace(name: "read", scope: !47)
!3438 = !{!3439, !3440, !3441, !3442}
!3439 = !DILocalVariable(name: "addr", arg: 1, scope: !3436, file: !473, line: 68, type: !6)
!3440 = !DILocalVariable(name: "align", arg: 2, scope: !3436, file: !473, line: 68, type: !9)
!3441 = !DILocalVariable(name: "is_zst", arg: 3, scope: !3436, file: !473, line: 68, type: !643)
!3442 = !DILocalVariable(name: "msg", scope: !3443, file: !473, line: 70, type: !124, align: 32)
!3443 = distinct !DILexicalBlock(scope: !3436, file: !473, line: 70, column: 21)
!3444 = !DILocation(line: 68, column: 43, scope: !3436)
!3445 = !DILocation(line: 70, column: 25, scope: !3443)
!3446 = !DILocation(line: 1742, column: 18, scope: !3447)
!3447 = !DILexicalBlockFile(scope: !3436, file: !460, discriminator: 0)
!3448 = !DILocation(line: 73, column: 94, scope: !3443)
!3449 = !DILocation(line: 73, column: 59, scope: !3443)
!3450 = !DILocation(line: 73, column: 21, scope: !3443)
!3451 = !DILocation(line: 75, column: 14, scope: !3436)
!3452 = distinct !DISubprogram(name: "drop_in_place<alloc::borrow::Cow<str>>", linkageName: "_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h70d047add837d3f6E", scope: !47, file: !460, line: 805, type: !3453, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3473, retainedNodes: !3471)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{null, !3455}
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::borrow::Cow<str>", baseType: !3456, size: 32, align: 32, dwarfAddressSpace: 0)
!3456 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cow<str>", scope: !3457, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !3458, templateParams: !21, identifier: "48d7c23c35123bff128ede18de052b2d")
!3457 = !DINamespace(name: "borrow", scope: !132)
!3458 = !{!3459}
!3459 = !DICompositeType(tag: DW_TAG_variant_part, scope: !3456, file: !2, size: 96, align: 32, elements: !3460, templateParams: !21, identifier: "9adb07524d67f733bee9cbf53cb56054", discriminator: !3470)
!3460 = !{!3461, !3466}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "Borrowed", scope: !3459, file: !2, baseType: !3462, size: 96, align: 32, extraData: i32 -2147483648)
!3462 = !DICompositeType(tag: DW_TAG_structure_type, name: "Borrowed", scope: !3456, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !3463, templateParams: !3465, identifier: "a6764c5566cd249bbfed95a97a1324f7")
!3463 = !{!3464}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3462, file: !2, baseType: !124, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!3465 = !{!667}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "Owned", scope: !3459, file: !2, baseType: !3467, size: 96, align: 32)
!3467 = !DICompositeType(tag: DW_TAG_structure_type, name: "Owned", scope: !3456, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !3468, templateParams: !3465, identifier: "e882c6a5dc2cb8f894887df1bc14682e")
!3468 = !{!3469}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3467, file: !2, baseType: !178, size: 96, align: 32, flags: DIFlagPublic)
!3470 = !DIDerivedType(tag: DW_TAG_member, scope: !3456, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!3471 = !{!3472}
!3472 = !DILocalVariable(arg: 1, scope: !3452, file: !460, line: 805, type: !3455)
!3473 = !{!3474}
!3474 = !DITemplateTypeParameter(name: "T", type: !3456)
!3475 = !DILocation(line: 805, column: 1, scope: !3452)
!3476 = distinct !DISubprogram(name: "drop_in_place<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h87633ae3f28b3841E", scope: !47, file: !460, line: 805, type: !3477, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3428, retainedNodes: !3480)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{null, !3479}
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !186, size: 32, align: 32, dwarfAddressSpace: 0)
!3480 = !{!3481}
!3481 = !DILocalVariable(arg: 1, scope: !3476, file: !460, line: 805, type: !3479)
!3482 = !DILocation(line: 805, column: 1, scope: !3476)
!3483 = distinct !DISubprogram(name: "drop_in_place<alloc::vec::drain::Drain<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr55drop_in_place$LT$alloc..vec..drain..Drain$LT$u8$GT$$GT$17ha6b0991855101781E", scope: !47, file: !460, line: 805, type: !3484, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3489, retainedNodes: !3487)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{null, !3486}
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::vec::drain::Drain<u8, alloc::alloc::Global>", baseType: !1732, size: 32, align: 32, dwarfAddressSpace: 0)
!3487 = !{!3488}
!3488 = !DILocalVariable(arg: 1, scope: !3483, file: !460, line: 805, type: !3486)
!3489 = !{!3490}
!3490 = !DITemplateTypeParameter(name: "T", type: !1732)
!3491 = !DILocation(line: 805, column: 1, scope: !3483)
!3492 = distinct !DISubprogram(name: "drop_in_place<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17h63d27b91458a9b7aE", scope: !47, file: !460, line: 805, type: !3493, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2647, retainedNodes: !3496)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{null, !3495}
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !407, size: 32, align: 32, dwarfAddressSpace: 0)
!3496 = !{!3497}
!3497 = !DILocalVariable(arg: 1, scope: !3492, file: !460, line: 805, type: !3495)
!3498 = !DILocation(line: 805, column: 1, scope: !3492)
!3499 = distinct !DISubprogram(name: "write<core::cell::Cell<usize>>", linkageName: "_ZN4core3ptr5write17hb8dcf6731a19344fE", scope: !47, file: !460, line: 1921, type: !3500, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3506, retainedNodes: !3503)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{null, !3502, !2052, !1241}
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::cell::Cell<usize>", baseType: !2052, size: 32, align: 32, dwarfAddressSpace: 0)
!3503 = !{!3504, !3505}
!3504 = !DILocalVariable(name: "dst", arg: 1, scope: !3499, file: !460, line: 1921, type: !3502)
!3505 = !DILocalVariable(name: "src", arg: 2, scope: !3499, file: !460, line: 1921, type: !2052)
!3506 = !{!3507}
!3507 = !DITemplateTypeParameter(name: "T", type: !2052)
!3508 = !DILocation(line: 1921, column: 30, scope: !3499)
!3509 = !DILocation(line: 1921, column: 43, scope: !3499)
!3510 = !DILocation(line: 77, column: 35, scope: !3511)
!3511 = !DILexicalBlockFile(scope: !3499, file: !473, discriminator: 0)
!3512 = !DILocation(line: 1944, column: 9, scope: !3499)
!3513 = !DILocation(line: 1946, column: 2, scope: !3499)
!3514 = !DILocation(line: 78, column: 17, scope: !3511)
!3515 = distinct !DISubprogram(name: "write<u8>", linkageName: "_ZN4core3ptr5write17hbcf903752b270816E", scope: !47, file: !460, line: 1921, type: !3516, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !3518)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{null, !463, !24, !1241}
!3518 = !{!3519, !3520}
!3519 = !DILocalVariable(name: "dst", arg: 1, scope: !3515, file: !460, line: 1921, type: !463)
!3520 = !DILocalVariable(name: "src", arg: 2, scope: !3515, file: !460, line: 1921, type: !24)
!3521 = !DILocation(line: 1921, column: 30, scope: !3515)
!3522 = !DILocation(line: 1921, column: 43, scope: !3515)
!3523 = !DILocation(line: 77, column: 35, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3515, file: !473, discriminator: 0)
!3525 = !DILocation(line: 1944, column: 9, scope: !3515)
!3526 = !DILocation(line: 1946, column: 2, scope: !3515)
!3527 = !DILocation(line: 78, column: 17, scope: !3524)
!3528 = distinct !DISubprogram(name: "write<core::sync::atomic::AtomicUsize>", linkageName: "_ZN4core3ptr5write17hfa22795ed418023fE", scope: !47, file: !460, line: 1921, type: !3529, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3535, retainedNodes: !3532)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{null, !3531, !140, !1241}
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut core::sync::atomic::AtomicUsize", baseType: !140, size: 32, align: 32, dwarfAddressSpace: 0)
!3532 = !{!3533, !3534}
!3533 = !DILocalVariable(name: "dst", arg: 1, scope: !3528, file: !460, line: 1921, type: !3531)
!3534 = !DILocalVariable(name: "src", arg: 2, scope: !3528, file: !460, line: 1921, type: !140)
!3535 = !{!3536}
!3536 = !DITemplateTypeParameter(name: "T", type: !140)
!3537 = !DILocation(line: 1921, column: 30, scope: !3528)
!3538 = !DILocation(line: 1921, column: 43, scope: !3528)
!3539 = !DILocation(line: 77, column: 35, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !3528, file: !473, discriminator: 0)
!3541 = !DILocation(line: 1944, column: 9, scope: !3528)
!3542 = !DILocation(line: 1946, column: 2, scope: !3528)
!3543 = !DILocation(line: 78, column: 17, scope: !3540)
!3544 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr5write18precondition_check17h19f88040fb199b27E", scope: !3545, file: !473, line: 68, type: !3546, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3548)
!3545 = !DINamespace(name: "write", scope: !47)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{null, !3259, !9, !643, !1241}
!3548 = !{!3549, !3550, !3551, !3552}
!3549 = !DILocalVariable(name: "addr", arg: 1, scope: !3544, file: !473, line: 68, type: !3259)
!3550 = !DILocalVariable(name: "align", arg: 2, scope: !3544, file: !473, line: 68, type: !9)
!3551 = !DILocalVariable(name: "is_zst", arg: 3, scope: !3544, file: !473, line: 68, type: !643)
!3552 = !DILocalVariable(name: "msg", scope: !3553, file: !473, line: 70, type: !124, align: 32)
!3553 = distinct !DILexicalBlock(scope: !3544, file: !473, line: 70, column: 21)
!3554 = !DILocation(line: 68, column: 43, scope: !3544)
!3555 = !DILocation(line: 70, column: 25, scope: !3553)
!3556 = !DILocation(line: 1942, column: 18, scope: !3557)
!3557 = !DILexicalBlockFile(scope: !3544, file: !460, discriminator: 0)
!3558 = !DILocation(line: 73, column: 94, scope: !3553)
!3559 = !DILocation(line: 73, column: 59, scope: !3553)
!3560 = !DILocation(line: 73, column: 21, scope: !3553)
!3561 = !DILocation(line: 75, column: 14, scope: !3544)
!3562 = distinct !DISubprogram(name: "from_non_null<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13from_non_null17h4d115aa3d57a36cbE", scope: !193, file: !1548, line: 103, type: !1550, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3563, retainedNodes: !3564)
!3563 = !DISubprogram(name: "from_non_null<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13from_non_null17h4d115aa3d57a36cbE", scope: !193, file: !1548, line: 103, type: !1550, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3564 = !{!3565}
!3565 = !DILocalVariable(name: "pointer", arg: 1, scope: !3562, file: !1548, line: 103, type: !197)
!3566 = !DILocation(line: 103, column: 32, scope: !3562)
!3567 = !DILocation(line: 105, column: 6, scope: !3562)
!3568 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1a2c11e95994a124E", scope: !193, file: !1548, line: 86, type: !3569, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3571, retainedNodes: !3572)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!193, !463}
!3571 = !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h1a2c11e95994a124E", scope: !193, file: !1548, line: 86, type: !3569, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3572 = !{!3573}
!3573 = !DILocalVariable(name: "ptr", arg: 1, scope: !3568, file: !1548, line: 86, type: !463)
!3574 = !DILocation(line: 86, column: 39, scope: !3568)
!3575 = !DILocation(line: 88, column: 36, scope: !3568)
!3576 = !DILocation(line: 89, column: 6, scope: !3568)
!3577 = distinct !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2637b50b1414bab6E", scope: !3578, file: !1548, line: 86, type: !3592, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3588, declaration: !3598, retainedNodes: !3599)
!3578 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<core::ffi::c_str::CStr>", scope: !194, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3579, templateParams: !3588, identifier: "d2786c249d9e68ab3efa4adc748bc39")
!3579 = !{!3580, !3590}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3578, file: !2, baseType: !3581, size: 64, align: 32, flags: DIFlagPrivate)
!3581 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<core::ffi::c_str::CStr>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3582, templateParams: !3588, identifier: "f24441e654adf7dfec60d1282d5ec531")
!3582 = !{!3583}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3581, file: !2, baseType: !3584, size: 64, align: 32, flags: DIFlagPrivate)
!3584 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const core::ffi::c_str::CStr", file: !2, size: 64, align: 32, elements: !3585, templateParams: !21, identifier: "85a63f7734509e7416361a0a0c0ff617")
!3585 = !{!3586, !3587}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3584, file: !2, baseType: !414, size: 32, align: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3584, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3588 = !{!3589}
!3589 = !DITemplateTypeParameter(name: "T", type: !415)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3578, file: !2, baseType: !3591, align: 8, offset: 64, flags: DIFlagPrivate)
!3591 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<core::ffi::c_str::CStr>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !3588, identifier: "45b7befd722682e0c0a2f422b25dc96d")
!3592 = !DISubroutineType(types: !3593)
!3593 = !{!3578, !3594}
!3594 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut core::ffi::c_str::CStr", file: !2, size: 64, align: 32, elements: !3595, templateParams: !21, identifier: "792c95c3878145bf85a01387b9a098a3")
!3595 = !{!3596, !3597}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3594, file: !2, baseType: !414, size: 32, align: 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3594, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3598 = !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h2637b50b1414bab6E", scope: !3578, file: !1548, line: 86, type: !3592, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3588)
!3599 = !{!3600}
!3600 = !DILocalVariable(name: "ptr", arg: 1, scope: !3577, file: !1548, line: 86, type: !3594)
!3601 = !DILocation(line: 86, column: 39, scope: !3577)
!3602 = !DILocation(line: 88, column: 36, scope: !3577)
!3603 = !DILocation(line: 89, column: 6, scope: !3577)
!3604 = distinct !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5d95d39446f99948E", scope: !3605, file: !1548, line: 86, type: !3610, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3616, retainedNodes: !3617)
!3605 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<str>", scope: !194, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3606, templateParams: !22, identifier: "a7843d70f4b7c9249efac9354851cfd5")
!3606 = !{!3607, !3608}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3605, file: !2, baseType: !1247, size: 64, align: 32, flags: DIFlagPrivate)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3605, file: !2, baseType: !3609, align: 8, offset: 64, flags: DIFlagPrivate)
!3609 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<str>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !22, identifier: "c9fd58dc3a858d1ae70705c03ffc878b")
!3610 = !DISubroutineType(types: !3611)
!3611 = !{!3605, !3612}
!3612 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut str", file: !2, size: 64, align: 32, elements: !3613, templateParams: !21, identifier: "40e18fd27f75bcf67a53e523348b3b8e")
!3613 = !{!3614, !3615}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3612, file: !2, baseType: !127, size: 32, align: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3612, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3616 = !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h5d95d39446f99948E", scope: !3605, file: !1548, line: 86, type: !3610, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3617 = !{!3618}
!3618 = !DILocalVariable(name: "ptr", arg: 1, scope: !3604, file: !1548, line: 86, type: !3612)
!3619 = !DILocation(line: 86, column: 39, scope: !3604)
!3620 = !DILocation(line: 88, column: 36, scope: !3604)
!3621 = !DILocation(line: 89, column: 6, scope: !3604)
!3622 = distinct !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h6c776c765d583c79E", scope: !3623, file: !1548, line: 86, type: !3635, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1345, declaration: !3637, retainedNodes: !3638)
!3623 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !194, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3624, templateParams: !1345, identifier: "c417fc5b5bea74fc585ac72ae6354691")
!3624 = !{!3625, !3633}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3623, file: !2, baseType: !3626, size: 64, align: 32, flags: DIFlagPrivate)
!3626 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3627, templateParams: !1345, identifier: "e30b86232169dac8e2f0b88bd90df574")
!3627 = !{!3628}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3626, file: !2, baseType: !3629, size: 64, align: 32, flags: DIFlagPrivate)
!3629 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 64, align: 32, elements: !3630, templateParams: !21, identifier: "76c090ad3bb38b9d94d2029a6a2232b1")
!3630 = !{!3631, !3632}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3629, file: !2, baseType: !1332, size: 32, align: 32)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3629, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3623, file: !2, baseType: !3634, align: 8, offset: 64, flags: DIFlagPrivate)
!3634 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[core::mem::maybe_uninit::MaybeUninit<u8>]>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !1345, identifier: "36503ea3eddc3dadaefe87dffdccbae3")
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!3623, !1329}
!3637 = !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17h6c776c765d583c79E", scope: !3623, file: !1548, line: 86, type: !3635, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1345)
!3638 = !{!3639}
!3639 = !DILocalVariable(name: "ptr", arg: 1, scope: !3622, file: !1548, line: 86, type: !1329)
!3640 = !DILocation(line: 86, column: 39, scope: !3622)
!3641 = !DILocation(line: 88, column: 36, scope: !3622)
!3642 = !DILocation(line: 89, column: 6, scope: !3622)
!3643 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc67d77b77d277900E", scope: !3644, file: !1548, line: 86, type: !3649, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3651, retainedNodes: !3652)
!3644 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8]>", scope: !194, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3645, templateParams: !22, identifier: "a644ff117f4beb39ca3c7063569f993")
!3645 = !{!3646, !3647}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3644, file: !2, baseType: !1932, size: 64, align: 32, flags: DIFlagPrivate)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3644, file: !2, baseType: !3648, align: 8, offset: 64, flags: DIFlagPrivate)
!3648 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8]>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !22, identifier: "8bd811697db2d0f2359ff22d806bc8dc")
!3649 = !DISubroutineType(types: !3650)
!3650 = !{!3644, !1569}
!3651 = !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$13new_unchecked17hc67d77b77d277900E", scope: !3644, file: !1548, line: 86, type: !3649, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3652 = !{!3653}
!3653 = !DILocalVariable(name: "ptr", arg: 1, scope: !3643, file: !1548, line: 86, type: !1569)
!3654 = !DILocation(line: 86, column: 39, scope: !3643)
!3655 = !DILocation(line: 88, column: 36, scope: !3643)
!3656 = !DILocation(line: 89, column: 6, scope: !3643)
!3657 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h470acafb23eed9e7E", scope: !193, file: !1548, line: 117, type: !1540, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3658, retainedNodes: !3659)
!3658 = !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$15as_non_null_ptr17h470acafb23eed9e7E", scope: !193, file: !1548, line: 117, type: !1540, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3659 = !{!3660}
!3660 = !DILocalVariable(name: "self", arg: 1, scope: !3657, file: !1548, line: 117, type: !193)
!3661 = !DILocation(line: 117, column: 34, scope: !3657)
!3662 = !DILocation(line: 119, column: 6, scope: !3657)
!3663 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h51c98d4fd47d6bb9E", scope: !193, file: !1548, line: 150, type: !3664, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3667, declaration: !3666, retainedNodes: !3669)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!193, !193}
!3666 = !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h51c98d4fd47d6bb9E", scope: !193, file: !1548, line: 150, type: !3664, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3667)
!3667 = !{!23, !3668}
!3668 = !DITemplateTypeParameter(name: "U", type: !24)
!3669 = !{!3670}
!3670 = !DILocalVariable(name: "self", arg: 1, scope: !3663, file: !1548, line: 150, type: !193)
!3671 = !DILocation(line: 150, column: 26, scope: !3663)
!3672 = !DILocation(line: 153, column: 40, scope: !3663)
!3673 = !DILocation(line: 154, column: 6, scope: !3663)
!3674 = distinct !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h87c533f9223a898dE", scope: !3644, file: !1548, line: 150, type: !3675, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3667, declaration: !3677, retainedNodes: !3678)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{!193, !3644}
!3677 = !DISubprogram(name: "cast<[u8], u8>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$4cast17h87c533f9223a898dE", scope: !3644, file: !1548, line: 150, type: !3675, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3667)
!3678 = !{!3679}
!3679 = !DILocalVariable(name: "self", arg: 1, scope: !3674, file: !1548, line: 150, type: !3644)
!3680 = !DILocation(line: 150, column: 26, scope: !3674)
!3681 = !DILocation(line: 153, column: 40, scope: !3674)
!3682 = !DILocation(line: 154, column: 6, scope: !3674)
!3683 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6e25ee3522f66bf8E", scope: !3644, file: !1548, line: 110, type: !3684, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3686, retainedNodes: !3687)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{!1569, !3644}
!3686 = !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$6as_ptr17h6e25ee3522f66bf8E", scope: !3644, file: !1548, line: 110, type: !3684, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3687 = !{!3688}
!3688 = !DILocalVariable(name: "self", arg: 1, scope: !3683, file: !1548, line: 110, type: !3644)
!3689 = !DILocation(line: 110, column: 25, scope: !3683)
!3690 = !DILocalVariable(name: "self", arg: 1, scope: !3691, file: !1538, line: 401, type: !1932)
!3691 = distinct !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6eaf559e24fa28e9E", scope: !1932, file: !1538, line: 401, type: !3692, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3694, retainedNodes: !3695)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!1569, !1932}
!3694 = !DISubprogram(name: "as_ptr<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h6eaf559e24fa28e9E", scope: !1932, file: !1538, line: 401, type: !3692, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3695 = !{!3690}
!3696 = !DILocation(line: 401, column: 25, scope: !3691, inlinedAt: !3697)
!3697 = distinct !DILocation(line: 111, column: 22, scope: !3683)
!3698 = !DILocation(line: 408, column: 6, scope: !3691, inlinedAt: !3697)
!3699 = !DILocation(line: 111, column: 22, scope: !3683)
!3700 = !DILocation(line: 112, column: 6, scope: !3683)
!3701 = distinct !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h2669c55e60a761bdE", scope: !3702, file: !1548, line: 72, type: !3716, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3712, declaration: !3718)
!3702 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unique<[u8; 0]>", scope: !194, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !3703, templateParams: !3712, identifier: "181d6e0e1a06f512a8374aee5aa23253")
!3703 = !{!3704, !3714}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3702, file: !2, baseType: !3705, size: 32, align: 32, flags: DIFlagPrivate)
!3705 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[u8; 0]>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !3706, templateParams: !3712, identifier: "7e3653b64fa35bbefb45bb7273236990")
!3706 = !{!3707}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3705, file: !2, baseType: !3708, size: 32, align: 32, flags: DIFlagPrivate)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const [u8; 0]", baseType: !3709, size: 32, align: 32, dwarfAddressSpace: 0)
!3709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, align: 8, elements: !3710)
!3710 = !{!3711}
!3711 = !DISubrange(count: 0, lowerBound: 0)
!3712 = !{!3713}
!3713 = !DITemplateTypeParameter(name: "T", type: !3709)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !3702, file: !2, baseType: !3715, align: 8, offset: 32, flags: DIFlagPrivate)
!3715 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<[u8; 0]>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !3712, identifier: "8d290f43c0176a45ec517607422f74ed")
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!3702}
!3718 = !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr6unique15Unique$LT$T$GT$8dangling17h2669c55e60a761bdE", scope: !3702, file: !1548, line: 72, type: !3716, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3712)
!3719 = !DILocation(line: 74, column: 27, scope: !3701)
!3720 = !DILocation(line: 75, column: 6, scope: !3701)
!3721 = distinct !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17h81d1862fc5dceea7E", scope: !1811, file: !1810, line: 882, type: !3722, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, retainedNodes: !3725)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!9, !3724, !736, !1241}
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u16", baseType: !359, size: 32, align: 32, dwarfAddressSpace: 0)
!3725 = !{!3726, !3727}
!3726 = !DILocalVariable(name: "self", arg: 1, scope: !3721, file: !1810, line: 882, type: !3724)
!3727 = !DILocalVariable(name: "origin", arg: 2, scope: !3721, file: !1810, line: 882, type: !736)
!3728 = !DILocation(line: 882, column: 46, scope: !3721)
!3729 = !DILocation(line: 882, column: 52, scope: !3721)
!3730 = !DILocation(line: 887, column: 37, scope: !3721)
!3731 = !DILocation(line: 888, column: 6, scope: !3721)
!3732 = distinct !DISubprogram(name: "offset_from_unsigned<[u8; 2]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17ha07bd92acf028d9fE", scope: !1811, file: !1810, line: 882, type: !3733, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !3736)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!9, !3735, !510, !1241}
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [u8; 2]", baseType: !511, size: 32, align: 32, dwarfAddressSpace: 0)
!3736 = !{!3737, !3738}
!3737 = !DILocalVariable(name: "self", arg: 1, scope: !3732, file: !1810, line: 882, type: !3735)
!3738 = !DILocalVariable(name: "origin", arg: 2, scope: !3732, file: !1810, line: 882, type: !510)
!3739 = !DILocation(line: 882, column: 46, scope: !3732)
!3740 = !DILocation(line: 882, column: 52, scope: !3732)
!3741 = !DILocation(line: 887, column: 37, scope: !3732)
!3742 = !DILocation(line: 888, column: 6, scope: !3732)
!3743 = distinct !DISubprogram(name: "offset_from_unsigned<bool>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$20offset_from_unsigned17hd057e39fdb57dc82E", scope: !1811, file: !1810, line: 882, type: !3744, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, retainedNodes: !3747)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!9, !3746, !642, !1241}
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut bool", baseType: !643, size: 32, align: 32, dwarfAddressSpace: 0)
!3747 = !{!3748, !3749}
!3748 = !DILocalVariable(name: "self", arg: 1, scope: !3743, file: !1810, line: 882, type: !3746)
!3749 = !DILocalVariable(name: "origin", arg: 2, scope: !3743, file: !1810, line: 882, type: !642)
!3750 = !DILocation(line: 882, column: 46, scope: !3743)
!3751 = !DILocation(line: 882, column: 52, scope: !3743)
!3752 = !DILocation(line: 887, column: 37, scope: !3743)
!3753 = !DILocation(line: 888, column: 6, scope: !3743)
!3754 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18precondition_check17h3e8a371e74392201E", scope: !3755, file: !473, line: 68, type: !3756, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3758)
!3755 = !DINamespace(name: "add", scope: !1811)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{null, !6, !9, !9, !1241}
!3758 = !{!3759, !3760, !3761, !3762}
!3759 = !DILocalVariable(name: "this", arg: 1, scope: !3754, file: !473, line: 68, type: !6)
!3760 = !DILocalVariable(name: "count", arg: 2, scope: !3754, file: !473, line: 68, type: !9)
!3761 = !DILocalVariable(name: "size", arg: 3, scope: !3754, file: !473, line: 68, type: !9)
!3762 = !DILocalVariable(name: "msg", scope: !3763, file: !473, line: 70, type: !124, align: 32)
!3763 = distinct !DILexicalBlock(scope: !3754, file: !473, line: 70, column: 21)
!3764 = !DILocation(line: 68, column: 43, scope: !3754)
!3765 = !DILocation(line: 70, column: 25, scope: !3763)
!3766 = !DILocation(line: 957, column: 18, scope: !3767)
!3767 = !DILexicalBlockFile(scope: !3754, file: !1810, discriminator: 0)
!3768 = !DILocation(line: 73, column: 94, scope: !3763)
!3769 = !DILocation(line: 73, column: 59, scope: !3763)
!3770 = !DILocation(line: 73, column: 21, scope: !3763)
!3771 = !DILocation(line: 75, column: 14, scope: !3754)
!3772 = distinct !DISubprogram(name: "runtime_add_nowrap", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap17ha476053dc5c76815E", scope: !3755, file: !1810, line: 934, type: !3773, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3775)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!643, !6, !9, !9}
!3775 = !{!3776, !3777, !3778}
!3776 = !DILocalVariable(name: "this", arg: 1, scope: !3772, file: !1810, line: 934, type: !6)
!3777 = !DILocalVariable(name: "count", arg: 2, scope: !3772, file: !1810, line: 934, type: !9)
!3778 = !DILocalVariable(name: "size", arg: 3, scope: !3772, file: !1810, line: 934, type: !9)
!3779 = !DILocation(line: 934, column: 37, scope: !3772)
!3780 = !DILocation(line: 934, column: 54, scope: !3772)
!3781 = !DILocation(line: 934, column: 68, scope: !3772)
!3782 = !DILocation(line: 2435, column: 27, scope: !3783)
!3783 = !DILexicalBlockFile(scope: !3772, file: !2231, discriminator: 0)
!3784 = !DILocation(line: 2435, column: 9, scope: !3783)
!3785 = !DILocation(line: 947, column: 10, scope: !3772)
!3786 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add18runtime_add_nowrap7runtime17hc90d9367a26cfb65E", scope: !3787, file: !2231, line: 2423, type: !3773, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !3788)
!3787 = !DINamespace(name: "runtime_add_nowrap", scope: !3755)
!3788 = !{!3789, !3790, !3791, !3792, !3794}
!3789 = !DILocalVariable(name: "this", arg: 1, scope: !3786, file: !2231, line: 2423, type: !6)
!3790 = !DILocalVariable(name: "count", arg: 2, scope: !3786, file: !2231, line: 2423, type: !9)
!3791 = !DILocalVariable(name: "size", arg: 3, scope: !3786, file: !2231, line: 2423, type: !9)
!3792 = !DILocalVariable(name: "byte_offset", scope: !3793, file: !1810, line: 940, type: !9, align: 32)
!3793 = distinct !DILexicalBlock(scope: !3786, file: !1810, line: 940, column: 21)
!3794 = !DILocalVariable(name: "overflow", scope: !3795, file: !1810, line: 943, type: !643, align: 8)
!3795 = distinct !DILexicalBlock(scope: !3793, file: !1810, line: 943, column: 21)
!3796 = !DILocation(line: 2423, column: 40, scope: !3786)
!3797 = !DILocation(line: 940, column: 51, scope: !3798)
!3798 = !DILexicalBlockFile(scope: !3786, file: !1810, discriminator: 0)
!3799 = !DILocation(line: 940, column: 45, scope: !3798)
!3800 = !DILocation(line: 940, column: 25, scope: !3798)
!3801 = !DILocation(line: 940, column: 30, scope: !3798)
!3802 = !DILocation(line: 940, column: 30, scope: !3793)
!3803 = !DILocalVariable(name: "self", arg: 1, scope: !3804, file: !1791, line: 153, type: !6)
!3804 = distinct !DISubprogram(name: "addr<()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17h75cbe925523263ffE", scope: !1792, file: !1791, line: 153, type: !3805, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !328, retainedNodes: !3807)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!9, !6}
!3807 = !{!3803}
!3808 = !DILocation(line: 153, column: 17, scope: !3804, inlinedAt: !3809)
!3809 = distinct !DILocation(line: 943, column: 46, scope: !3793)
!3810 = !DILocalVariable(name: "self", arg: 1, scope: !3811, file: !1791, line: 48, type: !6)
!3811 = distinct !DISubprogram(name: "cast<(), ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hc708388f1094aec9E", scope: !1792, file: !1791, line: 48, type: !3812, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3815, retainedNodes: !3814)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!6, !6}
!3814 = !{!3810}
!3815 = !{!329, !3816}
!3816 = !DITemplateTypeParameter(name: "U", type: !7)
!3817 = !DILocation(line: 48, column: 26, scope: !3811, inlinedAt: !3818)
!3818 = distinct !DILocation(line: 159, column: 38, scope: !3804, inlinedAt: !3809)
!3819 = !DILocation(line: 159, column: 18, scope: !3804, inlinedAt: !3809)
!3820 = !DILocation(line: 2645, column: 38, scope: !2978, inlinedAt: !3821)
!3821 = distinct !DILocation(line: 943, column: 53, scope: !3793)
!3822 = !DILocation(line: 2645, column: 44, scope: !2978, inlinedAt: !3821)
!3823 = !DILocation(line: 2646, column: 26, scope: !2978, inlinedAt: !3821)
!3824 = !DILocation(line: 2646, column: 18, scope: !2978, inlinedAt: !3821)
!3825 = !DILocation(line: 2646, column: 18, scope: !2982, inlinedAt: !3821)
!3826 = !DILocation(line: 2646, column: 21, scope: !2978, inlinedAt: !3821)
!3827 = !DILocation(line: 2646, column: 21, scope: !2982, inlinedAt: !3821)
!3828 = !DILocation(line: 2648, column: 10, scope: !2978, inlinedAt: !3821)
!3829 = !DILocation(line: 943, column: 53, scope: !3793)
!3830 = !DILocation(line: 943, column: 29, scope: !3793)
!3831 = !DILocation(line: 943, column: 29, scope: !3795)
!3832 = !DILocation(line: 944, column: 21, scope: !3795)
!3833 = !DILocation(line: 941, column: 32, scope: !3798)
!3834 = !DILocation(line: 941, column: 25, scope: !3798)
!3835 = !DILocation(line: 944, column: 61, scope: !3795)
!3836 = !DILocation(line: 2425, column: 10, scope: !3786)
!3837 = !DILocation(line: 2423, column: 9, scope: !3786)
!3838 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17h96f2294893cd0921E", scope: !1811, file: !1810, line: 22, type: !3839, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !3841)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!643, !463}
!3841 = !{!3842}
!3842 = !DILocalVariable(name: "self", arg: 1, scope: !3838, file: !1810, line: 22, type: !463)
!3843 = !DILocation(line: 22, column: 26, scope: !3838)
!3844 = !DILocalVariable(name: "self", arg: 1, scope: !3845, file: !1810, line: 134, type: !463)
!3845 = distinct !DISubprogram(name: "cast_const<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17h5a44bfce1f1984a7E", scope: !1811, file: !1810, line: 134, type: !3846, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !3848)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!201, !463}
!3848 = !{!3844}
!3849 = !DILocation(line: 134, column: 29, scope: !3845, inlinedAt: !3850)
!3850 = distinct !DILocation(line: 23, column: 14, scope: !3838)
!3851 = !DILocation(line: 23, column: 27, scope: !3838)
!3852 = !DILocation(line: 24, column: 6, scope: !3838)
!3853 = distinct !DISubprogram(name: "is_null<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hf42c4102b4c84c5dE", scope: !1811, file: !1810, line: 22, type: !3854, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !328, retainedNodes: !3856)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!643, !3259}
!3856 = !{!3857}
!3857 = !DILocalVariable(name: "self", arg: 1, scope: !3853, file: !1810, line: 22, type: !3259)
!3858 = !DILocation(line: 22, column: 26, scope: !3853)
!3859 = !DILocalVariable(name: "self", arg: 1, scope: !3860, file: !1810, line: 134, type: !3259)
!3860 = distinct !DISubprogram(name: "cast_const<()>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17h33681b3c4c7187a2E", scope: !1811, file: !1810, line: 134, type: !3861, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !328, retainedNodes: !3863)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!6, !3259}
!3863 = !{!3859}
!3864 = !DILocation(line: 134, column: 29, scope: !3860, inlinedAt: !3865)
!3865 = distinct !DILocation(line: 23, column: 14, scope: !3853)
!3866 = !DILocation(line: 23, column: 27, scope: !3853)
!3867 = !DILocation(line: 24, column: 6, scope: !3853)
!3868 = distinct !DISubprogram(name: "from_raw_parts<[u16], u16>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h173b9b9590597271E", scope: !3870, file: !3869, line: 115, type: !3287, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3874, retainedNodes: !3871)
!3869 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "88d1c59ea4b69b6dc0e553c0ee1c4c73")
!3870 = !DINamespace(name: "metadata", scope: !47)
!3871 = !{!3872, !3873}
!3872 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3868, file: !3869, line: 116, type: !736)
!3873 = !DILocalVariable(name: "metadata", arg: 2, scope: !3868, file: !3869, line: 117, type: !9)
!3874 = !{!539, !3875}
!3875 = !DITemplateTypeParameter(name: "impl Thin", type: !359)
!3876 = !DILocation(line: 116, column: 5, scope: !3868)
!3877 = !DILocation(line: 117, column: 5, scope: !3868)
!3878 = !DILocation(line: 120, column: 2, scope: !3868)
!3879 = distinct !DISubprogram(name: "from_raw_parts<[[u8; 2]], [u8; 2]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h3914c2039f641e39E", scope: !3870, file: !3869, line: 115, type: !3302, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3883, retainedNodes: !3880)
!3880 = !{!3881, !3882}
!3881 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3879, file: !3869, line: 116, type: !510)
!3882 = !DILocalVariable(name: "metadata", arg: 2, scope: !3879, file: !3869, line: 117, type: !9)
!3883 = !{!515, !3884}
!3884 = !DITemplateTypeParameter(name: "impl Thin", type: !511)
!3885 = !DILocation(line: 116, column: 5, scope: !3879)
!3886 = !DILocation(line: 117, column: 5, scope: !3879)
!3887 = !DILocation(line: 120, column: 2, scope: !3879)
!3888 = distinct !DISubprogram(name: "from_raw_parts<core::wtf8::Wtf8, ()>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17hcf9bdc608fd62205E", scope: !3870, file: !3869, line: 115, type: !3889, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3894, retainedNodes: !3891)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!2613, !6, !9}
!3891 = !{!3892, !3893}
!3892 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3888, file: !3869, line: 116, type: !6)
!3893 = !DILocalVariable(name: "metadata", arg: 2, scope: !3888, file: !3869, line: 117, type: !9)
!3894 = !{!2625, !3895}
!3895 = !DITemplateTypeParameter(name: "impl Thin", type: !7)
!3896 = !DILocation(line: 116, column: 5, scope: !3888)
!3897 = !DILocation(line: 117, column: 5, scope: !3888)
!3898 = !DILocation(line: 120, column: 2, scope: !3888)
!3899 = distinct !DISubprogram(name: "from_raw_parts_mut<[core::mem::maybe_uninit::MaybeUninit<u8>], core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17h605ec3718cbaa691E", scope: !3870, file: !3869, line: 128, type: !3324, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3903, retainedNodes: !3900)
!3900 = !{!3901, !3902}
!3901 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3899, file: !3869, line: 129, type: !3326)
!3902 = !DILocalVariable(name: "metadata", arg: 2, scope: !3899, file: !3869, line: 130, type: !9)
!3903 = !{!1346, !3904}
!3904 = !DITemplateTypeParameter(name: "impl Thin", type: !1333)
!3905 = !DILocation(line: 129, column: 5, scope: !3899)
!3906 = !DILocation(line: 130, column: 5, scope: !3899)
!3907 = !DILocation(line: 133, column: 2, scope: !3899)
!3908 = distinct !DISubprogram(name: "from_raw_parts_mut<[i8], i8>", linkageName: "_ZN4core3ptr8metadata18from_raw_parts_mut17hace29152929145ccE", scope: !3870, file: !3869, line: 128, type: !3335, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3912, retainedNodes: !3909)
!3909 = !{!3910, !3911}
!3910 = !DILocalVariable(name: "data_pointer", arg: 1, scope: !3908, file: !3869, line: 129, type: !3342)
!3911 = !DILocalVariable(name: "metadata", arg: 2, scope: !3908, file: !3869, line: 130, type: !9)
!3912 = !{!3347, !3913}
!3913 = !DITemplateTypeParameter(name: "impl Thin", type: !420)
!3914 = !DILocation(line: 129, column: 5, scope: !3908)
!3915 = !DILocation(line: 130, column: 5, scope: !3908)
!3916 = !DILocation(line: 133, column: 2, scope: !3908)
!3917 = distinct !DISubprogram(name: "metadata<core::wtf8::Wtf8>", linkageName: "_ZN4core3ptr8metadata8metadata17h1aad4eed835b8620E", scope: !3870, file: !3869, line: 99, type: !2611, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2624, retainedNodes: !3918)
!3918 = !{!3919}
!3919 = !DILocalVariable(name: "ptr", arg: 1, scope: !3917, file: !3869, line: 99, type: !2613)
!3920 = !DILocation(line: 99, column: 40, scope: !3917)
!3921 = !DILocation(line: 101, column: 2, scope: !3917)
!3922 = distinct !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h05bee36eeb7c10c4E", scope: !1932, file: !1538, line: 233, type: !3923, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3925, retainedNodes: !3926)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!1932, !1569, !1241}
!3925 = !DISubprogram(name: "new_unchecked<[u8]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h05bee36eeb7c10c4E", scope: !1932, file: !1538, line: 233, type: !3923, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3926 = !{!3927}
!3927 = !DILocalVariable(name: "ptr", arg: 1, scope: !3922, file: !1538, line: 233, type: !1569)
!3928 = !DILocation(line: 233, column: 39, scope: !3922)
!3929 = !DILocation(line: 77, column: 35, scope: !3930)
!3930 = !DILexicalBlockFile(scope: !3922, file: !473, discriminator: 0)
!3931 = !DILocation(line: 243, column: 6, scope: !3922)
!3932 = !DILocation(line: 78, column: 17, scope: !3930)
!3933 = distinct !DISubprogram(name: "new_unchecked<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h528a38cc869a3990E", scope: !3934, file: !1538, line: 233, type: !3937, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2585, declaration: !3943, retainedNodes: !3944)
!3934 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::sync::ArcInner<[u8]>>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3935, templateParams: !2585, identifier: "bb7c9d9885010a31afc0040cb4a09c4")
!3935 = !{!3936}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3934, file: !2, baseType: !2573, size: 64, align: 32, flags: DIFlagPrivate)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{!3934, !3939, !1241}
!3939 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut alloc::sync::ArcInner<[u8]>", file: !2, size: 64, align: 32, elements: !3940, templateParams: !21, identifier: "9257f4888af9c3988a60abf487e00c51")
!3940 = !{!3941, !3942}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !3939, file: !2, baseType: !2576, size: 32, align: 32)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3939, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!3943 = !DISubprogram(name: "new_unchecked<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h528a38cc869a3990E", scope: !3934, file: !1538, line: 233, type: !3937, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2585)
!3944 = !{!3945}
!3945 = !DILocalVariable(name: "ptr", arg: 1, scope: !3933, file: !1538, line: 233, type: !3939)
!3946 = !DILocation(line: 233, column: 39, scope: !3933)
!3947 = !DILocation(line: 77, column: 35, scope: !3948)
!3948 = !DILexicalBlockFile(scope: !3933, file: !473, discriminator: 0)
!3949 = !DILocation(line: 243, column: 6, scope: !3933)
!3950 = !DILocation(line: 78, column: 17, scope: !3948)
!3951 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h54220ec484ab9072E", scope: !197, file: !1538, line: 233, type: !3952, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3954, retainedNodes: !3955)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!197, !463, !1241}
!3954 = !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h54220ec484ab9072E", scope: !197, file: !1538, line: 233, type: !3952, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3955 = !{!3956}
!3956 = !DILocalVariable(name: "ptr", arg: 1, scope: !3951, file: !1538, line: 233, type: !463)
!3957 = !DILocation(line: 233, column: 39, scope: !3951)
!3958 = !DILocation(line: 77, column: 35, scope: !3959)
!3959 = !DILexicalBlockFile(scope: !3951, file: !473, discriminator: 0)
!3960 = !DILocation(line: 243, column: 6, scope: !3951)
!3961 = !DILocation(line: 78, column: 17, scope: !3959)
!3962 = distinct !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8498bb13b76c4152E", scope: !3581, file: !1538, line: 233, type: !3963, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3588, declaration: !3965, retainedNodes: !3966)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!3581, !3594, !1241}
!3965 = !DISubprogram(name: "new_unchecked<core::ffi::c_str::CStr>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h8498bb13b76c4152E", scope: !3581, file: !1538, line: 233, type: !3963, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3588)
!3966 = !{!3967}
!3967 = !DILocalVariable(name: "ptr", arg: 1, scope: !3962, file: !1538, line: 233, type: !3594)
!3968 = !DILocation(line: 233, column: 39, scope: !3962)
!3969 = !DILocation(line: 77, column: 35, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3962, file: !473, discriminator: 0)
!3971 = !DILocation(line: 243, column: 6, scope: !3962)
!3972 = !DILocation(line: 78, column: 17, scope: !3970)
!3973 = distinct !DISubprogram(name: "new_unchecked<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h887ea8867725a62aE", scope: !3974, file: !1538, line: 233, type: !3977, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2599, declaration: !3979, retainedNodes: !3980)
!3974 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::rc::RcInner<[u8]>>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !3975, templateParams: !2599, identifier: "9ad8e2c47438654c8b53e80552caca69")
!3975 = !{!3976}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3974, file: !2, baseType: !2593, size: 64, align: 32, flags: DIFlagPrivate)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!3974, !2044, !1241}
!3979 = !DISubprogram(name: "new_unchecked<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h887ea8867725a62aE", scope: !3974, file: !1538, line: 233, type: !3977, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2599)
!3980 = !{!3981}
!3981 = !DILocalVariable(name: "ptr", arg: 1, scope: !3973, file: !1538, line: 233, type: !2044)
!3982 = !DILocation(line: 233, column: 39, scope: !3973)
!3983 = !DILocation(line: 77, column: 35, scope: !3984)
!3984 = !DILexicalBlockFile(scope: !3973, file: !473, discriminator: 0)
!3985 = !DILocation(line: 243, column: 6, scope: !3973)
!3986 = !DILocation(line: 78, column: 17, scope: !3984)
!3987 = distinct !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9e6bb5441538ac48E", scope: !1247, file: !1538, line: 233, type: !3988, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !3990, retainedNodes: !3991)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!1247, !3612, !1241}
!3990 = !DISubprogram(name: "new_unchecked<str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9e6bb5441538ac48E", scope: !1247, file: !1538, line: 233, type: !3988, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!3991 = !{!3992}
!3992 = !DILocalVariable(name: "ptr", arg: 1, scope: !3987, file: !1538, line: 233, type: !3612)
!3993 = !DILocation(line: 233, column: 39, scope: !3987)
!3994 = !DILocation(line: 77, column: 35, scope: !3995)
!3995 = !DILexicalBlockFile(scope: !3987, file: !473, discriminator: 0)
!3996 = !DILocation(line: 243, column: 6, scope: !3987)
!3997 = !DILocation(line: 78, column: 17, scope: !3995)
!3998 = distinct !DISubprogram(name: "new_unchecked<alloc::rc::RcInner<core::wtf8::Wtf8>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9fbda931aa6e85ffE", scope: !3999, file: !1538, line: 233, type: !4014, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4012, declaration: !4020, retainedNodes: !4021)
!3999 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::rc::RcInner<core::wtf8::Wtf8>>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4000, templateParams: !4012, identifier: "da0b6ac81aaac0933ed65a4747c0fc0f")
!4000 = !{!4001}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3999, file: !2, baseType: !4002, size: 64, align: 32, flags: DIFlagPrivate)
!4002 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const alloc::rc::RcInner<core::wtf8::Wtf8>", file: !2, size: 64, align: 32, elements: !4003, templateParams: !21, identifier: "d4dbfffb8b1932717c81d078c926566")
!4003 = !{!4004, !4011}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4002, file: !2, baseType: !4005, size: 32, align: 32)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 32, align: 32, dwarfAddressSpace: 0)
!4006 = !DICompositeType(tag: DW_TAG_structure_type, name: "RcInner<core::wtf8::Wtf8>", scope: !2049, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !4007, templateParams: !2624, identifier: "47b44a43f060651638d8ac43541cc98c")
!4007 = !{!4008, !4009, !4010}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !4006, file: !2, baseType: !2052, size: 32, align: 32, flags: DIFlagPrivate)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !4006, file: !2, baseType: !2052, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4006, file: !2, baseType: !2617, align: 8, offset: 64, flags: DIFlagPrivate)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4002, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4012 = !{!4013}
!4013 = !DITemplateTypeParameter(name: "T", type: !4006)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!3999, !4016, !1241}
!4016 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut alloc::rc::RcInner<core::wtf8::Wtf8>", file: !2, size: 64, align: 32, elements: !4017, templateParams: !21, identifier: "73ab2b5309377cbf5ff43befb0d99422")
!4017 = !{!4018, !4019}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4016, file: !2, baseType: !4005, size: 32, align: 32)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4016, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4020 = !DISubprogram(name: "new_unchecked<alloc::rc::RcInner<core::wtf8::Wtf8>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h9fbda931aa6e85ffE", scope: !3999, file: !1538, line: 233, type: !4014, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4012)
!4021 = !{!4022}
!4022 = !DILocalVariable(name: "ptr", arg: 1, scope: !3998, file: !1538, line: 233, type: !4016)
!4023 = !DILocation(line: 233, column: 39, scope: !3998)
!4024 = !DILocation(line: 77, column: 35, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !3998, file: !473, discriminator: 0)
!4026 = !DILocation(line: 243, column: 6, scope: !3998)
!4027 = !DILocation(line: 78, column: 17, scope: !4025)
!4028 = distinct !DISubprogram(name: "new_unchecked<alloc::sync::ArcInner<core::wtf8::Wtf8>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha8dad3f6b4196332E", scope: !4029, file: !1538, line: 233, type: !4044, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4042, declaration: !4050, retainedNodes: !4051)
!4029 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<alloc::sync::ArcInner<core::wtf8::Wtf8>>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4030, templateParams: !4042, identifier: "7c6b7e315330c3198e86cb8a200f15bd")
!4030 = !{!4031}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4029, file: !2, baseType: !4032, size: 64, align: 32, flags: DIFlagPrivate)
!4032 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const alloc::sync::ArcInner<core::wtf8::Wtf8>", file: !2, size: 64, align: 32, elements: !4033, templateParams: !21, identifier: "8295f396bb0b0062f1ddc3650d0f846b")
!4033 = !{!4034, !4041}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4032, file: !2, baseType: !4035, size: 32, align: 32)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 32, align: 32, dwarfAddressSpace: 0)
!4036 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<core::wtf8::Wtf8>", scope: !131, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !4037, templateParams: !2624, identifier: "207566ac36c69af0499349e4444a65c4")
!4037 = !{!4038, !4039, !4040}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !4036, file: !2, baseType: !140, size: 32, align: 32, flags: DIFlagPrivate)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !4036, file: !2, baseType: !140, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4036, file: !2, baseType: !2617, align: 8, offset: 64, flags: DIFlagPrivate)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4032, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4042 = !{!4043}
!4043 = !DITemplateTypeParameter(name: "T", type: !4036)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!4029, !4046, !1241}
!4046 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut alloc::sync::ArcInner<core::wtf8::Wtf8>", file: !2, size: 64, align: 32, elements: !4047, templateParams: !21, identifier: "52038f4a8187061a1ce57878f28b0855")
!4047 = !{!4048, !4049}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4046, file: !2, baseType: !4035, size: 32, align: 32)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4046, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4050 = !DISubprogram(name: "new_unchecked<alloc::sync::ArcInner<core::wtf8::Wtf8>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17ha8dad3f6b4196332E", scope: !4029, file: !1538, line: 233, type: !4044, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4042)
!4051 = !{!4052}
!4052 = !DILocalVariable(name: "ptr", arg: 1, scope: !4028, file: !1538, line: 233, type: !4046)
!4053 = !DILocation(line: 233, column: 39, scope: !4028)
!4054 = !DILocation(line: 77, column: 35, scope: !4055)
!4055 = !DILexicalBlockFile(scope: !4028, file: !473, discriminator: 0)
!4056 = !DILocation(line: 243, column: 6, scope: !4028)
!4057 = !DILocation(line: 78, column: 17, scope: !4055)
!4058 = distinct !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hb78bbfc5ff31349eE", scope: !3626, file: !1538, line: 233, type: !4059, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1345, declaration: !4061, retainedNodes: !4062)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!3626, !1329, !1241}
!4061 = !DISubprogram(name: "new_unchecked<[core::mem::maybe_uninit::MaybeUninit<u8>]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17hb78bbfc5ff31349eE", scope: !3626, file: !1538, line: 233, type: !4059, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1345)
!4062 = !{!4063}
!4063 = !DILocalVariable(name: "ptr", arg: 1, scope: !4058, file: !1538, line: 233, type: !1329)
!4064 = !DILocation(line: 233, column: 39, scope: !4058)
!4065 = !DILocation(line: 77, column: 35, scope: !4066)
!4066 = !DILexicalBlockFile(scope: !4058, file: !473, discriminator: 0)
!4067 = !DILocation(line: 243, column: 6, scope: !4058)
!4068 = !DILocation(line: 78, column: 17, scope: !4066)
!4069 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked18precondition_check17hb713f17ed6753e33E", scope: !4070, file: !473, line: 68, type: !4072, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4074)
!4070 = !DINamespace(name: "new_unchecked", scope: !4071)
!4071 = !DINamespace(name: "{impl#3}", scope: !198)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{null, !3259, !1241}
!4074 = !{!4075, !4076}
!4075 = !DILocalVariable(name: "ptr", arg: 1, scope: !4069, file: !473, line: 68, type: !3259)
!4076 = !DILocalVariable(name: "msg", scope: !4077, file: !473, line: 70, type: !124, align: 32)
!4077 = distinct !DILexicalBlock(scope: !4069, file: !473, line: 70, column: 21)
!4078 = !DILocation(line: 68, column: 43, scope: !4069)
!4079 = !DILocation(line: 70, column: 25, scope: !4077)
!4080 = !DILocation(line: 239, column: 57, scope: !4081)
!4081 = !DILexicalBlockFile(scope: !4069, file: !1538, discriminator: 0)
!4082 = !DILocation(line: 239, column: 53, scope: !4081)
!4083 = !DILocation(line: 75, column: 14, scope: !4069)
!4084 = !DILocation(line: 73, column: 94, scope: !4077)
!4085 = !DILocation(line: 73, column: 59, scope: !4077)
!4086 = !DILocation(line: 73, column: 21, scope: !4077)
!4087 = distinct !DISubprogram(name: "without_provenance<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hb3cf249ff93074e0E", scope: !197, file: !1538, line: 101, type: !4088, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !4097, retainedNodes: !4098)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{!197, !4090}
!4090 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZero<usize>", scope: !4091, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4092, templateParams: !109, identifier: "a51ecee75410e49c32f50f2375440820")
!4091 = !DINamespace(name: "nonzero", scope: !208)
!4092 = !{!4093}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4090, file: !2, baseType: !4094, size: 32, align: 32, flags: DIFlagPrivate)
!4094 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonZeroUsizeInner", scope: !207, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4095, templateParams: !21, identifier: "1788621093501d3c2e2adc902d5bca43")
!4095 = !{!4096}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4094, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPrivate)
!4097 = !DISubprogram(name: "without_provenance<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hb3cf249ff93074e0E", scope: !197, file: !1538, line: 101, type: !4088, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!4098 = !{!4099, !4100}
!4099 = !DILocalVariable(name: "addr", arg: 1, scope: !4087, file: !1538, line: 101, type: !4090)
!4100 = !DILocalVariable(name: "pointer", scope: !4101, file: !1538, line: 102, type: !201, align: 32)
!4101 = distinct !DILexicalBlock(scope: !4087, file: !1538, line: 102, column: 9)
!4102 = !DILocation(line: 101, column: 37, scope: !4087)
!4103 = !DILocation(line: 102, column: 59, scope: !4087)
!4104 = !DILocalVariable(name: "addr", arg: 1, scope: !4105, file: !460, line: 883, type: !9)
!4105 = distinct !DISubprogram(name: "without_provenance<u8>", linkageName: "_ZN4core3ptr18without_provenance17h40f3830c468a0217E", scope: !47, file: !460, line: 883, type: !4106, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !4108)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!201, !9}
!4108 = !{!4104}
!4109 = !DILocation(line: 883, column: 36, scope: !4105, inlinedAt: !4110)
!4110 = distinct !DILocation(line: 102, column: 23, scope: !4087)
!4111 = !DILocalVariable(name: "addr", arg: 1, scope: !4112, file: !460, line: 922, type: !9)
!4112 = distinct !DISubprogram(name: "without_provenance_mut<u8>", linkageName: "_ZN4core3ptr22without_provenance_mut17h6cace9bc7ad531f4E", scope: !47, file: !460, line: 922, type: !4113, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !4115)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{!463, !9}
!4115 = !{!4111}
!4116 = !DILocation(line: 922, column: 40, scope: !4112, inlinedAt: !4117)
!4117 = distinct !DILocation(line: 884, column: 5, scope: !4105, inlinedAt: !4110)
!4118 = !DILocation(line: 928, column: 14, scope: !4112, inlinedAt: !4117)
!4119 = !DILocation(line: 102, column: 23, scope: !4087)
!4120 = !DILocation(line: 102, column: 13, scope: !4101)
!4121 = !DILocation(line: 105, column: 6, scope: !4087)
!4122 = distinct !DISubprogram(name: "without_provenance<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hdc948f4f994dff57E", scope: !3705, file: !1538, line: 101, type: !4123, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3712, declaration: !4125, retainedNodes: !4126)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!3705, !4090}
!4125 = !DISubprogram(name: "without_provenance<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$18without_provenance17hdc948f4f994dff57E", scope: !3705, file: !1538, line: 101, type: !4123, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3712)
!4126 = !{!4127, !4128}
!4127 = !DILocalVariable(name: "addr", arg: 1, scope: !4122, file: !1538, line: 101, type: !4090)
!4128 = !DILocalVariable(name: "pointer", scope: !4129, file: !1538, line: 102, type: !3708, align: 32)
!4129 = distinct !DILexicalBlock(scope: !4122, file: !1538, line: 102, column: 9)
!4130 = !DILocation(line: 101, column: 37, scope: !4122)
!4131 = !DILocation(line: 102, column: 59, scope: !4122)
!4132 = !DILocalVariable(name: "addr", arg: 1, scope: !4133, file: !460, line: 883, type: !9)
!4133 = distinct !DISubprogram(name: "without_provenance<[u8; 0]>", linkageName: "_ZN4core3ptr18without_provenance17h3d0ce59f2c92fd39E", scope: !47, file: !460, line: 883, type: !4134, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3712, retainedNodes: !4136)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!3708, !9}
!4136 = !{!4132}
!4137 = !DILocation(line: 883, column: 36, scope: !4133, inlinedAt: !4138)
!4138 = distinct !DILocation(line: 102, column: 23, scope: !4122)
!4139 = !DILocalVariable(name: "addr", arg: 1, scope: !4140, file: !460, line: 922, type: !9)
!4140 = distinct !DISubprogram(name: "without_provenance_mut<[u8; 0]>", linkageName: "_ZN4core3ptr22without_provenance_mut17h7d0fbad402c6dc4eE", scope: !47, file: !460, line: 922, type: !4141, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3712, retainedNodes: !4144)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!4143, !9}
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut [u8; 0]", baseType: !3709, size: 32, align: 32, dwarfAddressSpace: 0)
!4144 = !{!4139}
!4145 = !DILocation(line: 922, column: 40, scope: !4140, inlinedAt: !4146)
!4146 = distinct !DILocation(line: 884, column: 5, scope: !4133, inlinedAt: !4138)
!4147 = !DILocation(line: 928, column: 14, scope: !4140, inlinedAt: !4146)
!4148 = !DILocation(line: 102, column: 23, scope: !4122)
!4149 = !DILocation(line: 102, column: 13, scope: !4129)
!4150 = !DILocation(line: 105, column: 6, scope: !4122)
!4151 = distinct !DISubprogram(name: "offset_from_unsigned<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h879d8474d78b6cd8E", scope: !507, file: !1538, line: 948, type: !4152, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !4154, retainedNodes: !4155)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!9, !507, !507}
!4154 = !DISubprogram(name: "offset_from_unsigned<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17h879d8474d78b6cd8E", scope: !507, file: !1538, line: 948, type: !4152, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!4155 = !{!4156, !4157}
!4156 = !DILocalVariable(name: "self", arg: 1, scope: !4151, file: !1538, line: 948, type: !507)
!4157 = !DILocalVariable(name: "subtracted", arg: 2, scope: !4151, file: !1538, line: 948, type: !507)
!4158 = !DILocation(line: 948, column: 46, scope: !4151)
!4159 = !DILocation(line: 948, column: 52, scope: !4151)
!4160 = !DILocalVariable(name: "self", arg: 1, scope: !4161, file: !1538, line: 401, type: !507)
!4161 = distinct !DISubprogram(name: "as_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb8c42848994e2747E", scope: !507, file: !1538, line: 401, type: !4162, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !4164, retainedNodes: !4165)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!3735, !507}
!4164 = !DISubprogram(name: "as_ptr<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hb8c42848994e2747E", scope: !507, file: !1538, line: 401, type: !4162, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!4165 = !{!4160}
!4166 = !DILocation(line: 401, column: 25, scope: !4161, inlinedAt: !4167)
!4167 = distinct !DILocation(line: 953, column: 23, scope: !4151)
!4168 = !DILocation(line: 401, column: 25, scope: !4161, inlinedAt: !4169)
!4169 = distinct !DILocation(line: 953, column: 64, scope: !4151)
!4170 = !DILocation(line: 953, column: 32, scope: !4151)
!4171 = !DILocation(line: 954, column: 6, scope: !4151)
!4172 = distinct !DISubprogram(name: "offset_from_unsigned<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hb8f9ff13572ac731E", scope: !639, file: !1538, line: 948, type: !4173, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, declaration: !4175, retainedNodes: !4176)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!9, !639, !639}
!4175 = !DISubprogram(name: "offset_from_unsigned<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hb8f9ff13572ac731E", scope: !639, file: !1538, line: 948, type: !4173, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !644)
!4176 = !{!4177, !4178}
!4177 = !DILocalVariable(name: "self", arg: 1, scope: !4172, file: !1538, line: 948, type: !639)
!4178 = !DILocalVariable(name: "subtracted", arg: 2, scope: !4172, file: !1538, line: 948, type: !639)
!4179 = !DILocation(line: 948, column: 46, scope: !4172)
!4180 = !DILocation(line: 948, column: 52, scope: !4172)
!4181 = !DILocalVariable(name: "self", arg: 1, scope: !4182, file: !1538, line: 401, type: !639)
!4182 = distinct !DISubprogram(name: "as_ptr<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd744095fd0ef97a4E", scope: !639, file: !1538, line: 401, type: !4183, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, declaration: !4185, retainedNodes: !4186)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!3746, !639}
!4185 = !DISubprogram(name: "as_ptr<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hd744095fd0ef97a4E", scope: !639, file: !1538, line: 401, type: !4183, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !644)
!4186 = !{!4181}
!4187 = !DILocation(line: 401, column: 25, scope: !4182, inlinedAt: !4188)
!4188 = distinct !DILocation(line: 953, column: 23, scope: !4172)
!4189 = !DILocation(line: 401, column: 25, scope: !4182, inlinedAt: !4190)
!4190 = distinct !DILocation(line: 953, column: 64, scope: !4172)
!4191 = !DILocation(line: 953, column: 32, scope: !4172)
!4192 = !DILocation(line: 954, column: 6, scope: !4172)
!4193 = distinct !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hfd39b030f221307bE", scope: !733, file: !1538, line: 948, type: !4194, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, declaration: !4196, retainedNodes: !4197)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!9, !733, !733}
!4196 = !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$20offset_from_unsigned17hfd39b030f221307bE", scope: !733, file: !1538, line: 948, type: !4194, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !538)
!4197 = !{!4198, !4199}
!4198 = !DILocalVariable(name: "self", arg: 1, scope: !4193, file: !1538, line: 948, type: !733)
!4199 = !DILocalVariable(name: "subtracted", arg: 2, scope: !4193, file: !1538, line: 948, type: !733)
!4200 = !DILocation(line: 948, column: 46, scope: !4193)
!4201 = !DILocation(line: 948, column: 52, scope: !4193)
!4202 = !DILocalVariable(name: "self", arg: 1, scope: !4203, file: !1538, line: 401, type: !733)
!4203 = distinct !DISubprogram(name: "as_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3c3a32e929034544E", scope: !733, file: !1538, line: 401, type: !4204, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, declaration: !4206, retainedNodes: !4207)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!3724, !733}
!4206 = !DISubprogram(name: "as_ptr<u16>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h3c3a32e929034544E", scope: !733, file: !1538, line: 401, type: !4204, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !538)
!4207 = !{!4202}
!4208 = !DILocation(line: 401, column: 25, scope: !4203, inlinedAt: !4209)
!4209 = distinct !DILocation(line: 953, column: 23, scope: !4193)
!4210 = !DILocation(line: 401, column: 25, scope: !4203, inlinedAt: !4211)
!4211 = distinct !DILocation(line: 953, column: 64, scope: !4193)
!4212 = !DILocation(line: 953, column: 32, scope: !4193)
!4213 = !DILocation(line: 954, column: 6, scope: !4193)
!4214 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5968324df1351dc8E", scope: !197, file: !1538, line: 269, type: !4215, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !4230, retainedNodes: !4231)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{!4217, !463}
!4217 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::non_null::NonNull<u8>>", scope: !14, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4218, templateParams: !21, identifier: "1389cd33a7a685d88ba363fcbeb0bea8")
!4218 = !{!4219}
!4219 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4217, file: !2, size: 32, align: 32, elements: !4220, templateParams: !21, identifier: "d2441b206024888b9d7c40f014836b10", discriminator: !4229)
!4220 = !{!4221, !4225}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4219, file: !2, baseType: !4222, size: 32, align: 32, extraData: i32 0)
!4222 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4217, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !4223, identifier: "8dd593fc8f39c1fc32ee7e5036604b79")
!4223 = !{!4224}
!4224 = !DITemplateTypeParameter(name: "T", type: !197)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4219, file: !2, baseType: !4226, size: 32, align: 32)
!4226 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4217, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4227, templateParams: !4223, identifier: "acf97aa130165646d689650405131d9b")
!4227 = !{!4228}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4226, file: !2, baseType: !197, size: 32, align: 32, flags: DIFlagPublic)
!4229 = !DIDerivedType(tag: DW_TAG_member, scope: !4217, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!4230 = !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3new17h5968324df1351dc8E", scope: !197, file: !1538, line: 269, type: !4215, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!4231 = !{!4232}
!4232 = !DILocalVariable(name: "ptr", arg: 1, scope: !4214, file: !1538, line: 269, type: !463)
!4233 = !DILocation(line: 269, column: 22, scope: !4214)
!4234 = !DILocation(line: 270, column: 17, scope: !4214)
!4235 = !DILocation(line: 270, column: 13, scope: !4214)
!4236 = !DILocation(line: 272, column: 27, scope: !4214)
!4237 = !DILocation(line: 272, column: 13, scope: !4214)
!4238 = !DILocation(line: 270, column: 9, scope: !4214)
!4239 = !DILocation(line: 274, column: 13, scope: !4214)
!4240 = !DILocation(line: 276, column: 6, scope: !4214)
!4241 = distinct !DISubprogram(name: "cast<[bool], bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5317967526785ca4E", scope: !4242, file: !1538, line: 502, type: !4250, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4253, declaration: !4252, retainedNodes: !4255)
!4242 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[bool]>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4243, templateParams: !644, identifier: "34414e76b5452d751c806244a87808e1")
!4243 = !{!4244}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4242, file: !2, baseType: !4245, size: 64, align: 32, flags: DIFlagPrivate)
!4245 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [bool]", file: !2, size: 64, align: 32, elements: !4246, templateParams: !21, identifier: "112b6c5c019cc9a0fb9b617b6325895")
!4246 = !{!4247, !4249}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4245, file: !2, baseType: !4248, size: 32, align: 32)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 32, align: 32, dwarfAddressSpace: 0)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4245, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!639, !4242}
!4252 = !DISubprogram(name: "cast<[bool], bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17h5317967526785ca4E", scope: !4242, file: !1538, line: 502, type: !4250, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4253)
!4253 = !{!645, !4254}
!4254 = !DITemplateTypeParameter(name: "U", type: !643)
!4255 = !{!4256}
!4256 = !DILocalVariable(name: "self", arg: 1, scope: !4241, file: !1538, line: 502, type: !4242)
!4257 = !DILocation(line: 502, column: 26, scope: !4241)
!4258 = !DILocalVariable(name: "self", arg: 1, scope: !4259, file: !1538, line: 401, type: !4242)
!4259 = distinct !DISubprogram(name: "as_ptr<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc26fdc9dfbda8c9bE", scope: !4242, file: !1538, line: 401, type: !4260, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, declaration: !4266, retainedNodes: !4267)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!4262, !4242}
!4262 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [bool]", file: !2, size: 64, align: 32, elements: !4263, templateParams: !21, identifier: "edacd3b4198ccbfd12db79ea199d1979")
!4263 = !{!4264, !4265}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4262, file: !2, baseType: !4248, size: 32, align: 32)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4262, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4266 = !DISubprogram(name: "as_ptr<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hc26fdc9dfbda8c9bE", scope: !4242, file: !1538, line: 401, type: !4260, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !644)
!4267 = !{!4258}
!4268 = !DILocation(line: 401, column: 25, scope: !4259, inlinedAt: !4269)
!4269 = distinct !DILocation(line: 504, column: 42, scope: !4241)
!4270 = !DILocation(line: 408, column: 6, scope: !4259, inlinedAt: !4269)
!4271 = !DILocation(line: 504, column: 42, scope: !4241)
!4272 = !DILocation(line: 505, column: 6, scope: !4241)
!4273 = distinct !DISubprogram(name: "cast<(usize, core::option::Option<usize>), ()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haf0707dc4461958bE", scope: !4274, file: !1538, line: 502, type: !4278, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4281, declaration: !4280, retainedNodes: !4282)
!4274 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<(usize, core::option::Option<usize>)>", scope: !198, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4275, templateParams: !2327, identifier: "b00790dd1f38f8f6618f5d85154e988f")
!4275 = !{!4276}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4274, file: !2, baseType: !4277, size: 32, align: 32, flags: DIFlagPrivate)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const (usize, core::option::Option<usize>)", baseType: !802, size: 32, align: 32, dwarfAddressSpace: 0)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!325, !4274}
!4280 = !DISubprogram(name: "cast<(usize, core::option::Option<usize>), ()>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17haf0707dc4461958bE", scope: !4274, file: !1538, line: 502, type: !4278, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4281)
!4281 = !{!2328, !3816}
!4282 = !{!4283}
!4283 = !DILocalVariable(name: "self", arg: 1, scope: !4273, file: !1538, line: 502, type: !4274)
!4284 = !DILocation(line: 502, column: 26, scope: !4273)
!4285 = !DILocalVariable(name: "self", arg: 1, scope: !4286, file: !1538, line: 401, type: !4274)
!4286 = distinct !DISubprogram(name: "as_ptr<(usize, core::option::Option<usize>)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h256f8b8db010b2b2E", scope: !4274, file: !1538, line: 401, type: !4287, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2327, declaration: !4290, retainedNodes: !4291)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!4289, !4274}
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut (usize, core::option::Option<usize>)", baseType: !802, size: 32, align: 32, dwarfAddressSpace: 0)
!4290 = !DISubprogram(name: "as_ptr<(usize, core::option::Option<usize>)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h256f8b8db010b2b2E", scope: !4274, file: !1538, line: 401, type: !4287, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2327)
!4291 = !{!4285}
!4292 = !DILocation(line: 401, column: 25, scope: !4286, inlinedAt: !4293)
!4293 = distinct !DILocation(line: 504, column: 42, scope: !4273)
!4294 = !DILocation(line: 505, column: 6, scope: !4273)
!4295 = distinct !DISubprogram(name: "cast<[[u8; 2]], [u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb0f3714333d545a0E", scope: !4296, file: !1538, line: 502, type: !4299, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4302, declaration: !4301, retainedNodes: !4304)
!4296 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<[[u8; 2]]>", scope: !198, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4297, templateParams: !514, identifier: "cb713e9d72f48944d0111685fe612bdf")
!4297 = !{!4298}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4296, file: !2, baseType: !3304, size: 64, align: 32, flags: DIFlagPrivate)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{!507, !4296}
!4301 = !DISubprogram(name: "cast<[[u8; 2]], [u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hb0f3714333d545a0E", scope: !4296, file: !1538, line: 502, type: !4299, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !4302)
!4302 = !{!515, !4303}
!4303 = !DITemplateTypeParameter(name: "U", type: !511)
!4304 = !{!4305}
!4305 = !DILocalVariable(name: "self", arg: 1, scope: !4295, file: !1538, line: 502, type: !4296)
!4306 = !DILocation(line: 502, column: 26, scope: !4295)
!4307 = !DILocalVariable(name: "self", arg: 1, scope: !4308, file: !1538, line: 401, type: !4296)
!4308 = distinct !DISubprogram(name: "as_ptr<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h77e1fb435ac9e97bE", scope: !4296, file: !1538, line: 401, type: !4309, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !4315, retainedNodes: !4316)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!4311, !4296}
!4311 = !DICompositeType(tag: DW_TAG_structure_type, name: "*mut [[u8; 2]]", file: !2, size: 64, align: 32, elements: !4312, templateParams: !21, identifier: "56e179ed4afe9da41dde468737551bc2")
!4312 = !{!4313, !4314}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4311, file: !2, baseType: !3307, size: 32, align: 32)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4311, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4315 = !DISubprogram(name: "as_ptr<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h77e1fb435ac9e97bE", scope: !4296, file: !1538, line: 401, type: !4309, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!4316 = !{!4307}
!4317 = !DILocation(line: 401, column: 25, scope: !4308, inlinedAt: !4318)
!4318 = distinct !DILocation(line: 504, column: 42, scope: !4295)
!4319 = !DILocation(line: 408, column: 6, scope: !4308, inlinedAt: !4318)
!4320 = !DILocation(line: 504, column: 42, scope: !4295)
!4321 = !DILocation(line: 505, column: 6, scope: !4295)
!4322 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hdc9c4827fe10252bE", scope: !197, file: !1538, line: 502, type: !4323, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3667, declaration: !4325, retainedNodes: !4326)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{!197, !197}
!4325 = !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$4cast17hdc9c4827fe10252bE", scope: !197, file: !1538, line: 502, type: !4323, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3667)
!4326 = !{!4327}
!4327 = !DILocalVariable(name: "self", arg: 1, scope: !4322, file: !1538, line: 502, type: !197)
!4328 = !DILocation(line: 502, column: 26, scope: !4322)
!4329 = !DILocalVariable(name: "self", arg: 1, scope: !4330, file: !1538, line: 401, type: !197)
!4330 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h965f1154e983902bE", scope: !197, file: !1538, line: 401, type: !4331, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !4333, retainedNodes: !4334)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!463, !197}
!4333 = !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h965f1154e983902bE", scope: !197, file: !1538, line: 401, type: !4331, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!4334 = !{!4329}
!4335 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !4336)
!4336 = distinct !DILocation(line: 504, column: 42, scope: !4322)
!4337 = !DILocation(line: 505, column: 6, scope: !4322)
!4338 = distinct !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hffce1f59d4a9cdf1E", scope: !3705, file: !1538, line: 130, type: !4339, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3712, declaration: !4341, retainedNodes: !4342)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!3705}
!4341 = !DISubprogram(name: "dangling<[u8; 0]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8dangling17hffce1f59d4a9cdf1E", scope: !3705, file: !1538, line: 130, type: !4339, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3712)
!4342 = !{!4343}
!4343 = !DILocalVariable(name: "align", scope: !4344, file: !1538, line: 131, type: !45, align: 32)
!4344 = distinct !DILexicalBlock(scope: !4338, file: !1538, line: 131, column: 9)
!4345 = !DILocation(line: 131, column: 21, scope: !4338)
!4346 = !DILocation(line: 131, column: 13, scope: !4344)
!4347 = !DILocation(line: 132, column: 43, scope: !4344)
!4348 = !DILocation(line: 132, column: 9, scope: !4344)
!4349 = !DILocation(line: 133, column: 6, scope: !4338)
!4350 = distinct !DISubprogram(name: "from_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h1aac49e2a23c865eE", scope: !1738, file: !1538, line: 291, type: !4351, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, declaration: !4353, retainedNodes: !4354)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!1738, !1608}
!4353 = !DISubprogram(name: "from_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_mut17h1aac49e2a23c865eE", scope: !1738, file: !1538, line: 291, type: !4351, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1742)
!4354 = !{!4355}
!4355 = !DILocalVariable(name: "r", arg: 1, scope: !4350, file: !1538, line: 291, type: !1608)
!4356 = !DILocation(line: 291, column: 27, scope: !4350)
!4357 = !DILocation(line: 294, column: 6, scope: !4350)
!4358 = distinct !DISubprogram(name: "from_ref<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1b16d23d519f4c51E", scope: !4296, file: !1538, line: 282, type: !4359, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !4365, retainedNodes: !4366)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!4296, !4361}
!4361 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[[u8; 2]]", file: !2, size: 64, align: 32, elements: !4362, templateParams: !21, identifier: "40143d69b4d89e322fbe7582b18eb612")
!4362 = !{!4363, !4364}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4361, file: !2, baseType: !3307, size: 32, align: 32)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4361, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4365 = !DISubprogram(name: "from_ref<[[u8; 2]]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1b16d23d519f4c51E", scope: !4296, file: !1538, line: 282, type: !4359, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!4366 = !{!4367}
!4367 = !DILocalVariable(name: "r", arg: 1, scope: !4358, file: !1538, line: 282, type: !4361)
!4368 = !DILocation(line: 282, column: 27, scope: !4358)
!4369 = !DILocation(line: 285, column: 6, scope: !4358)
!4370 = distinct !DISubprogram(name: "from_ref<(usize, core::option::Option<usize>)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f140e76f1334349E", scope: !4274, file: !1538, line: 282, type: !4371, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2327, declaration: !4373, retainedNodes: !4374)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!4274, !2325}
!4373 = !DISubprogram(name: "from_ref<(usize, core::option::Option<usize>)>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f140e76f1334349E", scope: !4274, file: !1538, line: 282, type: !4371, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2327)
!4374 = !{!4375}
!4375 = !DILocalVariable(name: "r", arg: 1, scope: !4370, file: !1538, line: 282, type: !2325)
!4376 = !DILocation(line: 282, column: 27, scope: !4370)
!4377 = !DILocation(line: 285, column: 6, scope: !4370)
!4378 = distinct !DISubprogram(name: "from_ref<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f44a684d96c23b5E", scope: !4242, file: !1538, line: 282, type: !4379, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, declaration: !4385, retainedNodes: !4386)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!4242, !4381}
!4381 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[bool]", file: !2, size: 64, align: 32, elements: !4382, templateParams: !21, identifier: "ec7aa1ae4cf8db3cda3ded1628757579")
!4382 = !{!4383, !4384}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !4381, file: !2, baseType: !4248, size: 32, align: 32)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4381, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!4385 = !DISubprogram(name: "from_ref<[bool]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$8from_ref17h1f44a684d96c23b5E", scope: !4242, file: !1538, line: 282, type: !4379, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !644)
!4386 = !{!4387}
!4387 = !DILocalVariable(name: "r", arg: 1, scope: !4378, file: !1538, line: 282, type: !4381)
!4388 = !DILocation(line: 282, column: 27, scope: !4378)
!4389 = !DILocation(line: 285, column: 6, scope: !4378)
!4390 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb0f82c01d41aa59eE", scope: !1932, file: !1538, line: 1498, type: !4391, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !4393, retainedNodes: !4394)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!463, !1932}
!4393 = !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$10as_mut_ptr17hb0f82c01d41aa59eE", scope: !1932, file: !1538, line: 1498, type: !4391, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!4394 = !{!4395}
!4395 = !DILocalVariable(name: "self", arg: 1, scope: !4390, file: !1538, line: 1498, type: !1932)
!4396 = !DILocation(line: 1498, column: 29, scope: !4390)
!4397 = !DILocation(line: 1499, column: 14, scope: !4390)
!4398 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !4399)
!4399 = distinct !DILocation(line: 1499, column: 32, scope: !4390)
!4400 = !DILocation(line: 1500, column: 6, scope: !4390)
!4401 = distinct !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2f422c653439189dE", scope: !1932, file: !1538, line: 1479, type: !4402, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !4404, retainedNodes: !4405)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!197, !1932}
!4404 = !DISubprogram(name: "as_non_null_ptr<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$15as_non_null_ptr17h2f422c653439189dE", scope: !1932, file: !1538, line: 1479, type: !4402, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!4405 = !{!4406}
!4406 = !DILocalVariable(name: "self", arg: 1, scope: !4401, file: !1538, line: 1479, type: !1932)
!4407 = !DILocation(line: 1479, column: 34, scope: !4401)
!4408 = !DILocation(line: 1480, column: 14, scope: !4401)
!4409 = !DILocation(line: 1481, column: 6, scope: !4401)
!4410 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE", scope: !1932, file: !1538, line: 1419, type: !4411, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !4413, retainedNodes: !4414)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{!1932, !197, !9}
!4413 = !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr8non_null26NonNull$LT$$u5b$T$u5d$$GT$20slice_from_raw_parts17h8a96af0019037d9dE", scope: !1932, file: !1538, line: 1419, type: !4411, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!4414 = !{!4415, !4416}
!4415 = !DILocalVariable(name: "data", arg: 1, scope: !4410, file: !1538, line: 1419, type: !197)
!4416 = !DILocalVariable(name: "len", arg: 2, scope: !4410, file: !1538, line: 1419, type: !9)
!4417 = !DILocation(line: 1419, column: 39, scope: !4410)
!4418 = !DILocation(line: 1419, column: 57, scope: !4410)
!4419 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !4420)
!4420 = distinct !DILocation(line: 1421, column: 75, scope: !4410)
!4421 = !DILocation(line: 1421, column: 38, scope: !4410)
!4422 = !DILocation(line: 1421, column: 18, scope: !4410)
!4423 = !DILocation(line: 1422, column: 6, scope: !4410)
!4424 = distinct !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3ptr9alignment9Alignment10as_nonzero17h91cf2c4e24e67346E", scope: !45, file: !4425, line: 101, type: !4426, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !4428, retainedNodes: !4429)
!4425 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ptr/alignment.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe5cbe26e2468bf6e2b3ac0bfe05e41a")
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!4090, !45}
!4428 = !DISubprogram(name: "as_nonzero", linkageName: "_ZN4core3ptr9alignment9Alignment10as_nonzero17h91cf2c4e24e67346E", scope: !45, file: !4425, line: 101, type: !4426, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!4429 = !{!4430}
!4430 = !DILocalVariable(name: "self", arg: 1, scope: !4424, file: !4425, line: 101, type: !45)
!4431 = !DILocation(line: 101, column: 29, scope: !4424)
!4432 = !DILocation(line: 109, column: 6, scope: !4424)
!4433 = distinct !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3ptr9alignment9Alignment13new_unchecked17h0cea6419a241b6d9E", scope: !45, file: !4425, line: 79, type: !4434, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !4436, retainedNodes: !4437)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!45, !9, !1241}
!4436 = !DISubprogram(name: "new_unchecked", linkageName: "_ZN4core3ptr9alignment9Alignment13new_unchecked17h0cea6419a241b6d9E", scope: !45, file: !4425, line: 79, type: !4434, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!4437 = !{!4438}
!4438 = !DILocalVariable(name: "align", arg: 1, scope: !4433, file: !4425, line: 79, type: !9)
!4439 = !DILocation(line: 79, column: 39, scope: !4433)
!4440 = !DILocation(line: 77, column: 35, scope: !4441)
!4441 = !DILexicalBlockFile(scope: !4433, file: !473, discriminator: 0)
!4442 = !DILocation(line: 89, column: 6, scope: !4433)
!4443 = !DILocation(line: 78, column: 17, scope: !4441)
!4444 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9alignment9Alignment13new_unchecked18precondition_check17h30bdb86857112a23E", scope: !4445, file: !473, line: 68, type: !4447, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4449)
!4445 = !DINamespace(name: "new_unchecked", scope: !4446)
!4446 = !DINamespace(name: "{impl#0}", scope: !46)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{null, !9, !1241}
!4449 = !{!4450, !4451}
!4450 = !DILocalVariable(name: "align", arg: 1, scope: !4444, file: !473, line: 68, type: !9)
!4451 = !DILocalVariable(name: "msg", scope: !4452, file: !473, line: 70, type: !124, align: 32)
!4452 = distinct !DILexicalBlock(scope: !4444, file: !473, line: 70, column: 21)
!4453 = !DILocation(line: 68, column: 43, scope: !4444)
!4454 = !DILocation(line: 70, column: 25, scope: !4452)
!4455 = !DILocalVariable(name: "self", arg: 1, scope: !4456, file: !2832, line: 3574, type: !9)
!4456 = distinct !DISubprogram(name: "is_power_of_two", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$15is_power_of_two17hfabe4a8dd2e9c481E", scope: !2880, file: !2832, line: 3574, type: !4457, scopeLine: 3574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4459)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!643, !9}
!4459 = !{!4455}
!4460 = !DILocation(line: 3574, column: 38, scope: !4456, inlinedAt: !4461)
!4461 = distinct !DILocation(line: 83, column: 45, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !4444, file: !4425, discriminator: 0)
!4463 = !DILocalVariable(name: "self", arg: 1, scope: !4464, file: !2832, line: 81, type: !9)
!4464 = distinct !DISubprogram(name: "count_ones", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$10count_ones17h438d1e73b08c514bE", scope: !2880, file: !2832, line: 81, type: !4465, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4467)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{!51, !9}
!4467 = !{!4463}
!4468 = !DILocation(line: 81, column: 33, scope: !4464, inlinedAt: !4469)
!4469 = distinct !DILocation(line: 3575, column: 18, scope: !4456, inlinedAt: !4461)
!4470 = !DILocation(line: 82, column: 20, scope: !4464, inlinedAt: !4469)
!4471 = !DILocation(line: 3575, column: 13, scope: !4456, inlinedAt: !4461)
!4472 = !DILocation(line: 83, column: 39, scope: !4462)
!4473 = !DILocation(line: 73, column: 94, scope: !4452)
!4474 = !DILocation(line: 73, column: 59, scope: !4452)
!4475 = !DILocation(line: 73, column: 21, scope: !4452)
!4476 = !DILocation(line: 75, column: 14, scope: !4444)
!4477 = distinct !DISubprogram(name: "of<[u8; 0]>", linkageName: "_ZN4core3ptr9alignment9Alignment2of17h7755b249dd8e5150E", scope: !45, file: !4425, line: 48, type: !4478, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3712, declaration: !4480)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!45}
!4480 = !DISubprogram(name: "of<[u8; 0]>", linkageName: "_ZN4core3ptr9alignment9Alignment2of17h7755b249dd8e5150E", scope: !45, file: !4425, line: 48, type: !4478, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3712)
!4481 = !DILocation(line: 51, column: 6, scope: !4477)
!4482 = distinct !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3ptr9alignment9Alignment2of17ha22585e6cc44d869E", scope: !45, file: !4425, line: 48, type: !4478, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !4483)
!4483 = !DISubprogram(name: "of<u8>", linkageName: "_ZN4core3ptr9alignment9Alignment2of17ha22585e6cc44d869E", scope: !45, file: !4425, line: 48, type: !4478, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!4484 = !DILocation(line: 51, column: 6, scope: !4482)
!4485 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core3ptr9alignment9Alignment3new17h269ae4b41cefe36aE", scope: !45, file: !4425, line: 59, type: !4486, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !4499, retainedNodes: !4500)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!4488, !9}
!4488 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::ptr::alignment::Alignment>", scope: !14, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4489, templateParams: !21, identifier: "752732ca18916085deb49d5dfdf29443")
!4489 = !{!4490}
!4490 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4488, file: !2, size: 32, align: 32, elements: !4491, templateParams: !21, identifier: "8446f59489b6616059656db5aba87da7", discriminator: !4498)
!4491 = !{!4492, !4494}
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4490, file: !2, baseType: !4493, size: 32, align: 32, extraData: i32 0)
!4493 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4488, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !2211, identifier: "206c9de9d2c9d9699937dfacd4b6356d")
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4490, file: !2, baseType: !4495, size: 32, align: 32)
!4495 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4488, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !4496, templateParams: !2211, identifier: "f723cf3755c8dfcd09e93aa43965153")
!4496 = !{!4497}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4495, file: !2, baseType: !45, size: 32, align: 32, flags: DIFlagPublic)
!4498 = !DIDerivedType(tag: DW_TAG_member, scope: !4488, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!4499 = !DISubprogram(name: "new", linkageName: "_ZN4core3ptr9alignment9Alignment3new17h269ae4b41cefe36aE", scope: !45, file: !4425, line: 59, type: !4486, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!4500 = !{!4501}
!4501 = !DILocalVariable(name: "align", arg: 1, scope: !4485, file: !4425, line: 59, type: !9)
!4502 = !DILocation(line: 59, column: 22, scope: !4485)
!4503 = !DILocation(line: 3574, column: 38, scope: !4456, inlinedAt: !4504)
!4504 = distinct !DILocation(line: 60, column: 18, scope: !4485)
!4505 = !DILocation(line: 81, column: 33, scope: !4464, inlinedAt: !4506)
!4506 = distinct !DILocation(line: 3575, column: 18, scope: !4456, inlinedAt: !4504)
!4507 = !DILocation(line: 82, column: 20, scope: !4464, inlinedAt: !4506)
!4508 = !DILocation(line: 3575, column: 13, scope: !4456, inlinedAt: !4504)
!4509 = !DILocation(line: 60, column: 12, scope: !4485)
!4510 = !DILocation(line: 64, column: 13, scope: !4485)
!4511 = !DILocation(line: 60, column: 9, scope: !4485)
!4512 = !DILocation(line: 62, column: 27, scope: !4485)
!4513 = !DILocation(line: 62, column: 13, scope: !4485)
!4514 = !DILocation(line: 66, column: 6, scope: !4485)
!4515 = distinct !DISubprogram(name: "as_usize", linkageName: "_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE", scope: !45, file: !4425, line: 94, type: !4516, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !4518, retainedNodes: !4519)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{!9, !45}
!4518 = !DISubprogram(name: "as_usize", linkageName: "_ZN4core3ptr9alignment9Alignment8as_usize17h201be829385fa0bfE", scope: !45, file: !4425, line: 94, type: !4516, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!4519 = !{!4520}
!4520 = !DILocalVariable(name: "self", arg: 1, scope: !4515, file: !4425, line: 94, type: !45)
!4521 = !DILocation(line: 94, column: 27, scope: !4515)
!4522 = !DILocation(line: 96, column: 6, scope: !4515)
!4523 = distinct !DISubprogram(name: "with_metadata_of<u8, core::wtf8::Wtf8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$16with_metadata_of17h18687fb54e0b84d8E", scope: !1792, file: !1791, line: 130, type: !4524, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4529, retainedNodes: !4526)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!2613, !201, !2613}
!4526 = !{!4527, !4528}
!4527 = !DILocalVariable(name: "self", arg: 1, scope: !4523, file: !1791, line: 130, type: !201)
!4528 = !DILocalVariable(name: "meta", arg: 2, scope: !4523, file: !1791, line: 130, type: !2613)
!4529 = !{!23, !4530}
!4530 = !DITemplateTypeParameter(name: "U", type: !2617)
!4531 = !DILocation(line: 130, column: 38, scope: !4523)
!4532 = !DILocation(line: 130, column: 44, scope: !4523)
!4533 = !DILocation(line: 134, column: 48, scope: !4523)
!4534 = !DILocation(line: 134, column: 9, scope: !4523)
!4535 = !DILocation(line: 135, column: 6, scope: !4523)
!4536 = distinct !DISubprogram(name: "offset_from_unsigned<u16>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17h379c7f3f7759cca7E", scope: !1792, file: !1791, line: 701, type: !4537, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, retainedNodes: !4539)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!9, !736, !736, !1241}
!4539 = !{!4540, !4541, !4542}
!4540 = !DILocalVariable(name: "self", arg: 1, scope: !4536, file: !1791, line: 701, type: !736)
!4541 = !DILocalVariable(name: "origin", arg: 2, scope: !4536, file: !1791, line: 701, type: !736)
!4542 = !DILocalVariable(name: "pointee_size", scope: !4543, file: !1791, line: 726, type: !9, align: 32)
!4543 = distinct !DILexicalBlock(scope: !4536, file: !1791, line: 726, column: 9)
!4544 = !DILocation(line: 701, column: 46, scope: !4536)
!4545 = !DILocation(line: 701, column: 52, scope: !4536)
!4546 = !DILocation(line: 77, column: 35, scope: !4547)
!4547 = !DILexicalBlockFile(scope: !4536, file: !473, discriminator: 0)
!4548 = !DILocation(line: 726, column: 28, scope: !4536)
!4549 = !DILocation(line: 726, column: 13, scope: !4543)
!4550 = !DILocation(line: 727, column: 17, scope: !4543)
!4551 = !DILocation(line: 78, column: 17, scope: !4547)
!4552 = !DILocation(line: 727, column: 9, scope: !4543)
!4553 = !DILocation(line: 727, column: 37, scope: !4543)
!4554 = !DILocation(line: 729, column: 18, scope: !4543)
!4555 = !DILocation(line: 730, column: 6, scope: !4536)
!4556 = distinct !DISubprogram(name: "offset_from_unsigned<bool>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hade586b0eb215fe3E", scope: !1792, file: !1791, line: 701, type: !4557, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, retainedNodes: !4559)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!9, !642, !642, !1241}
!4559 = !{!4560, !4561, !4562}
!4560 = !DILocalVariable(name: "self", arg: 1, scope: !4556, file: !1791, line: 701, type: !642)
!4561 = !DILocalVariable(name: "origin", arg: 2, scope: !4556, file: !1791, line: 701, type: !642)
!4562 = !DILocalVariable(name: "pointee_size", scope: !4563, file: !1791, line: 726, type: !9, align: 32)
!4563 = distinct !DILexicalBlock(scope: !4556, file: !1791, line: 726, column: 9)
!4564 = !DILocation(line: 701, column: 46, scope: !4556)
!4565 = !DILocation(line: 701, column: 52, scope: !4556)
!4566 = !DILocation(line: 77, column: 35, scope: !4567)
!4567 = !DILexicalBlockFile(scope: !4556, file: !473, discriminator: 0)
!4568 = !DILocation(line: 726, column: 28, scope: !4556)
!4569 = !DILocation(line: 726, column: 13, scope: !4563)
!4570 = !DILocation(line: 727, column: 17, scope: !4563)
!4571 = !DILocation(line: 78, column: 17, scope: !4567)
!4572 = !DILocation(line: 727, column: 9, scope: !4563)
!4573 = !DILocation(line: 727, column: 37, scope: !4563)
!4574 = !DILocation(line: 729, column: 18, scope: !4563)
!4575 = !DILocation(line: 730, column: 6, scope: !4556)
!4576 = distinct !DISubprogram(name: "offset_from_unsigned<[u8; 2]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned17hcb351b796122b61aE", scope: !1792, file: !1791, line: 701, type: !4577, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !4579)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!9, !510, !510, !1241}
!4579 = !{!4580, !4581, !4582}
!4580 = !DILocalVariable(name: "self", arg: 1, scope: !4576, file: !1791, line: 701, type: !510)
!4581 = !DILocalVariable(name: "origin", arg: 2, scope: !4576, file: !1791, line: 701, type: !510)
!4582 = !DILocalVariable(name: "pointee_size", scope: !4583, file: !1791, line: 726, type: !9, align: 32)
!4583 = distinct !DILexicalBlock(scope: !4576, file: !1791, line: 726, column: 9)
!4584 = !DILocation(line: 701, column: 46, scope: !4576)
!4585 = !DILocation(line: 701, column: 52, scope: !4576)
!4586 = !DILocation(line: 77, column: 35, scope: !4587)
!4587 = !DILexicalBlockFile(scope: !4576, file: !473, discriminator: 0)
!4588 = !DILocation(line: 726, column: 28, scope: !4576)
!4589 = !DILocation(line: 726, column: 13, scope: !4583)
!4590 = !DILocation(line: 727, column: 17, scope: !4583)
!4591 = !DILocation(line: 78, column: 17, scope: !4587)
!4592 = !DILocation(line: 727, column: 9, scope: !4583)
!4593 = !DILocation(line: 727, column: 37, scope: !4583)
!4594 = !DILocation(line: 729, column: 18, scope: !4583)
!4595 = !DILocation(line: 730, column: 6, scope: !4576)
!4596 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$20offset_from_unsigned18precondition_check17h50309da3cfdf55efE", scope: !4597, file: !473, line: 68, type: !4598, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4600)
!4597 = !DINamespace(name: "offset_from_unsigned", scope: !1792)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{null, !6, !6, !1241}
!4600 = !{!4601, !4602, !4603}
!4601 = !DILocalVariable(name: "this", arg: 1, scope: !4596, file: !473, line: 68, type: !6)
!4602 = !DILocalVariable(name: "origin", arg: 2, scope: !4596, file: !473, line: 68, type: !6)
!4603 = !DILocalVariable(name: "msg", scope: !4604, file: !473, line: 70, type: !124, align: 32)
!4604 = distinct !DILexicalBlock(scope: !4596, file: !473, line: 70, column: 21)
!4605 = !DILocation(line: 68, column: 43, scope: !4596)
!4606 = !DILocation(line: 70, column: 25, scope: !4604)
!4607 = !DILocation(line: 723, column: 18, scope: !4608)
!4608 = !DILexicalBlockFile(scope: !4596, file: !1791, discriminator: 0)
!4609 = !DILocation(line: 73, column: 94, scope: !4604)
!4610 = !DILocation(line: 73, column: 59, scope: !4604)
!4611 = !DILocation(line: 73, column: 21, scope: !4604)
!4612 = !DILocation(line: 75, column: 14, scope: !4596)
!4613 = distinct !DISubprogram(name: "copy_to_nonoverlapping<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$22copy_to_nonoverlapping17hf5c34a4f3a3f1b2aE", scope: !1792, file: !1791, line: 1247, type: !4614, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !4616)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{null, !201, !463, !9, !1241}
!4616 = !{!4617, !4618, !4619}
!4617 = !DILocalVariable(name: "self", arg: 1, scope: !4613, file: !1791, line: 1247, type: !201)
!4618 = !DILocalVariable(name: "dest", arg: 2, scope: !4613, file: !1791, line: 1247, type: !463)
!4619 = !DILocalVariable(name: "count", arg: 3, scope: !4613, file: !1791, line: 1247, type: !9)
!4620 = !DILocation(line: 1247, column: 48, scope: !4613)
!4621 = !DILocation(line: 1247, column: 54, scope: !4613)
!4622 = !DILocation(line: 1247, column: 68, scope: !4613)
!4623 = !DILocation(line: 526, column: 44, scope: !459, inlinedAt: !4624)
!4624 = distinct !DILocation(line: 1252, column: 18, scope: !4613)
!4625 = !DILocation(line: 526, column: 59, scope: !459, inlinedAt: !4624)
!4626 = !DILocation(line: 526, column: 72, scope: !459, inlinedAt: !4624)
!4627 = !DILocation(line: 77, column: 35, scope: !472, inlinedAt: !4624)
!4628 = !DILocation(line: 78, column: 17, scope: !472, inlinedAt: !4624)
!4629 = !DILocation(line: 547, column: 14, scope: !459, inlinedAt: !4624)
!4630 = !DILocation(line: 1253, column: 6, scope: !4613)
!4631 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18precondition_check17h165b117dcf9af246E", scope: !4632, file: !473, line: 68, type: !3756, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4633)
!4632 = !DINamespace(name: "add", scope: !1792)
!4633 = !{!4634, !4635, !4636, !4637}
!4634 = !DILocalVariable(name: "this", arg: 1, scope: !4631, file: !473, line: 68, type: !6)
!4635 = !DILocalVariable(name: "count", arg: 2, scope: !4631, file: !473, line: 68, type: !9)
!4636 = !DILocalVariable(name: "size", arg: 3, scope: !4631, file: !473, line: 68, type: !9)
!4637 = !DILocalVariable(name: "msg", scope: !4638, file: !473, line: 70, type: !124, align: 32)
!4638 = distinct !DILexicalBlock(scope: !4631, file: !473, line: 70, column: 21)
!4639 = !DILocation(line: 68, column: 43, scope: !4631)
!4640 = !DILocation(line: 70, column: 25, scope: !4638)
!4641 = !DILocation(line: 859, column: 18, scope: !4642)
!4642 = !DILexicalBlockFile(scope: !4631, file: !1791, discriminator: 0)
!4643 = !DILocation(line: 73, column: 94, scope: !4638)
!4644 = !DILocation(line: 73, column: 59, scope: !4638)
!4645 = !DILocation(line: 73, column: 21, scope: !4638)
!4646 = !DILocation(line: 75, column: 14, scope: !4631)
!4647 = distinct !DISubprogram(name: "runtime_add_nowrap", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap17h3419a66eee12dc4eE", scope: !4632, file: !1791, line: 836, type: !3773, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4648)
!4648 = !{!4649, !4650, !4651}
!4649 = !DILocalVariable(name: "this", arg: 1, scope: !4647, file: !1791, line: 836, type: !6)
!4650 = !DILocalVariable(name: "count", arg: 2, scope: !4647, file: !1791, line: 836, type: !9)
!4651 = !DILocalVariable(name: "size", arg: 3, scope: !4647, file: !1791, line: 836, type: !9)
!4652 = !DILocation(line: 836, column: 37, scope: !4647)
!4653 = !DILocation(line: 836, column: 54, scope: !4647)
!4654 = !DILocation(line: 836, column: 68, scope: !4647)
!4655 = !DILocation(line: 2435, column: 27, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !4647, file: !2231, discriminator: 0)
!4657 = !DILocation(line: 2435, column: 9, scope: !4656)
!4658 = !DILocation(line: 849, column: 10, scope: !4647)
!4659 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add18runtime_add_nowrap7runtime17hef3eae1824627a39E", scope: !4660, file: !2231, line: 2423, type: !3773, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4661)
!4660 = !DINamespace(name: "runtime_add_nowrap", scope: !4632)
!4661 = !{!4662, !4663, !4664, !4665, !4667}
!4662 = !DILocalVariable(name: "this", arg: 1, scope: !4659, file: !2231, line: 2423, type: !6)
!4663 = !DILocalVariable(name: "count", arg: 2, scope: !4659, file: !2231, line: 2423, type: !9)
!4664 = !DILocalVariable(name: "size", arg: 3, scope: !4659, file: !2231, line: 2423, type: !9)
!4665 = !DILocalVariable(name: "byte_offset", scope: !4666, file: !1791, line: 842, type: !9, align: 32)
!4666 = distinct !DILexicalBlock(scope: !4659, file: !1791, line: 842, column: 21)
!4667 = !DILocalVariable(name: "overflow", scope: !4668, file: !1791, line: 845, type: !643, align: 8)
!4668 = distinct !DILexicalBlock(scope: !4666, file: !1791, line: 845, column: 21)
!4669 = !DILocation(line: 2423, column: 40, scope: !4659)
!4670 = !DILocation(line: 842, column: 51, scope: !4671)
!4671 = !DILexicalBlockFile(scope: !4659, file: !1791, discriminator: 0)
!4672 = !DILocation(line: 842, column: 45, scope: !4671)
!4673 = !DILocation(line: 842, column: 25, scope: !4671)
!4674 = !DILocation(line: 842, column: 30, scope: !4671)
!4675 = !DILocation(line: 842, column: 30, scope: !4666)
!4676 = !DILocation(line: 153, column: 17, scope: !3804, inlinedAt: !4677)
!4677 = distinct !DILocation(line: 845, column: 46, scope: !4666)
!4678 = !DILocation(line: 48, column: 26, scope: !3811, inlinedAt: !4679)
!4679 = distinct !DILocation(line: 159, column: 38, scope: !3804, inlinedAt: !4677)
!4680 = !DILocation(line: 159, column: 18, scope: !3804, inlinedAt: !4677)
!4681 = !DILocation(line: 2645, column: 38, scope: !2978, inlinedAt: !4682)
!4682 = distinct !DILocation(line: 845, column: 53, scope: !4666)
!4683 = !DILocation(line: 2645, column: 44, scope: !2978, inlinedAt: !4682)
!4684 = !DILocation(line: 2646, column: 26, scope: !2978, inlinedAt: !4682)
!4685 = !DILocation(line: 2646, column: 18, scope: !2978, inlinedAt: !4682)
!4686 = !DILocation(line: 2646, column: 18, scope: !2982, inlinedAt: !4682)
!4687 = !DILocation(line: 2646, column: 21, scope: !2978, inlinedAt: !4682)
!4688 = !DILocation(line: 2646, column: 21, scope: !2982, inlinedAt: !4682)
!4689 = !DILocation(line: 2648, column: 10, scope: !2978, inlinedAt: !4682)
!4690 = !DILocation(line: 845, column: 53, scope: !4666)
!4691 = !DILocation(line: 845, column: 29, scope: !4666)
!4692 = !DILocation(line: 845, column: 29, scope: !4668)
!4693 = !DILocation(line: 846, column: 21, scope: !4668)
!4694 = !DILocation(line: 843, column: 32, scope: !4671)
!4695 = !DILocation(line: 843, column: 25, scope: !4671)
!4696 = !DILocation(line: 846, column: 61, scope: !4668)
!4697 = !DILocation(line: 2425, column: 10, scope: !4659)
!4698 = !DILocation(line: 2423, column: 9, scope: !4659)
!4699 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18precondition_check17h8fdae33813982b0eE", scope: !4700, file: !473, line: 68, type: !3756, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4701)
!4700 = !DINamespace(name: "sub", scope: !1792)
!4701 = !{!4702, !4703, !4704, !4705}
!4702 = !DILocalVariable(name: "this", arg: 1, scope: !4699, file: !473, line: 68, type: !6)
!4703 = !DILocalVariable(name: "count", arg: 2, scope: !4699, file: !473, line: 68, type: !9)
!4704 = !DILocalVariable(name: "size", arg: 3, scope: !4699, file: !473, line: 68, type: !9)
!4705 = !DILocalVariable(name: "msg", scope: !4706, file: !473, line: 70, type: !124, align: 32)
!4706 = distinct !DILexicalBlock(scope: !4699, file: !473, line: 70, column: 21)
!4707 = !DILocation(line: 68, column: 43, scope: !4699)
!4708 = !DILocation(line: 70, column: 25, scope: !4706)
!4709 = !DILocation(line: 964, column: 18, scope: !4710)
!4710 = !DILexicalBlockFile(scope: !4699, file: !1791, discriminator: 0)
!4711 = !DILocation(line: 73, column: 94, scope: !4706)
!4712 = !DILocation(line: 73, column: 59, scope: !4706)
!4713 = !DILocation(line: 73, column: 21, scope: !4706)
!4714 = !DILocation(line: 75, column: 14, scope: !4699)
!4715 = distinct !DISubprogram(name: "runtime_sub_nowrap", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18runtime_sub_nowrap17hf543ca3926447dedE", scope: !4700, file: !1791, line: 942, type: !3773, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4716)
!4716 = !{!4717, !4718, !4719}
!4717 = !DILocalVariable(name: "this", arg: 1, scope: !4715, file: !1791, line: 942, type: !6)
!4718 = !DILocalVariable(name: "count", arg: 2, scope: !4715, file: !1791, line: 942, type: !9)
!4719 = !DILocalVariable(name: "size", arg: 3, scope: !4715, file: !1791, line: 942, type: !9)
!4720 = !DILocation(line: 942, column: 37, scope: !4715)
!4721 = !DILocation(line: 942, column: 54, scope: !4715)
!4722 = !DILocation(line: 942, column: 68, scope: !4715)
!4723 = !DILocation(line: 2435, column: 27, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4715, file: !2231, discriminator: 0)
!4725 = !DILocation(line: 2435, column: 9, scope: !4724)
!4726 = !DILocation(line: 954, column: 10, scope: !4715)
!4727 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub18runtime_sub_nowrap7runtime17h6a081fc76a8f9f37E", scope: !4728, file: !2231, line: 2423, type: !3773, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4729)
!4728 = !DINamespace(name: "runtime_sub_nowrap", scope: !4700)
!4729 = !{!4730, !4731, !4732, !4733}
!4730 = !DILocalVariable(name: "this", arg: 1, scope: !4727, file: !2231, line: 2423, type: !6)
!4731 = !DILocalVariable(name: "count", arg: 2, scope: !4727, file: !2231, line: 2423, type: !9)
!4732 = !DILocalVariable(name: "size", arg: 3, scope: !4727, file: !2231, line: 2423, type: !9)
!4733 = !DILocalVariable(name: "byte_offset", scope: !4734, file: !1791, line: 948, type: !9, align: 32)
!4734 = distinct !DILexicalBlock(scope: !4727, file: !1791, line: 948, column: 21)
!4735 = !DILocation(line: 2423, column: 40, scope: !4727)
!4736 = !DILocation(line: 948, column: 51, scope: !4737)
!4737 = !DILexicalBlockFile(scope: !4727, file: !1791, discriminator: 0)
!4738 = !DILocation(line: 948, column: 45, scope: !4737)
!4739 = !DILocation(line: 948, column: 25, scope: !4737)
!4740 = !DILocation(line: 948, column: 30, scope: !4737)
!4741 = !DILocation(line: 948, column: 30, scope: !4734)
!4742 = !DILocation(line: 951, column: 21, scope: !4734)
!4743 = !DILocation(line: 949, column: 32, scope: !4737)
!4744 = !DILocation(line: 949, column: 25, scope: !4737)
!4745 = !DILocation(line: 153, column: 17, scope: !3804, inlinedAt: !4746)
!4746 = distinct !DILocation(line: 951, column: 66, scope: !4734)
!4747 = !DILocation(line: 48, column: 26, scope: !3811, inlinedAt: !4748)
!4748 = distinct !DILocation(line: 159, column: 38, scope: !3804, inlinedAt: !4746)
!4749 = !DILocation(line: 159, column: 18, scope: !3804, inlinedAt: !4746)
!4750 = !DILocation(line: 951, column: 61, scope: !4734)
!4751 = !DILocation(line: 2425, column: 10, scope: !4727)
!4752 = !DILocation(line: 2423, column: 9, scope: !4727)
!4753 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h6d871e3f473eea11E", scope: !1792, file: !1791, line: 22, type: !4754, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !4756)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{!643, !201}
!4756 = !{!4757, !4758}
!4757 = !DILocalVariable(name: "self", arg: 1, scope: !4753, file: !1791, line: 22, type: !201)
!4758 = !DILocalVariable(name: "ptr", scope: !4759, file: !1791, line: 25, type: !201, align: 32)
!4759 = distinct !DILexicalBlock(scope: !4753, file: !1791, line: 25, column: 9)
!4760 = !DILocation(line: 22, column: 26, scope: !4753)
!4761 = !DILocation(line: 25, column: 19, scope: !4753)
!4762 = !DILocation(line: 25, column: 13, scope: !4759)
!4763 = !DILocation(line: 2435, column: 9, scope: !4764)
!4764 = !DILexicalBlockFile(scope: !4759, file: !2231, discriminator: 0)
!4765 = !DILocation(line: 41, column: 6, scope: !4753)
!4766 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null7runtime17hbd280b595dfa2480E", scope: !4767, file: !2231, line: 2423, type: !4754, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4768)
!4767 = !DINamespace(name: "is_null", scope: !1792)
!4768 = !{!4769}
!4769 = !DILocalVariable(name: "ptr", arg: 1, scope: !4766, file: !2231, line: 2423, type: !201)
!4770 = !DILocation(line: 2423, column: 40, scope: !4766)
!4771 = !DILocalVariable(name: "self", arg: 1, scope: !4772, file: !1791, line: 153, type: !201)
!4772 = distinct !DISubprogram(name: "addr<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4addr17hff1aef0646845d75E", scope: !1792, file: !1791, line: 153, type: !4773, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !4775)
!4773 = !DISubroutineType(types: !4774)
!4774 = !{!9, !201}
!4775 = !{!4771}
!4776 = !DILocation(line: 153, column: 17, scope: !4772, inlinedAt: !4777)
!4777 = distinct !DILocation(line: 38, column: 21, scope: !4778)
!4778 = !DILexicalBlockFile(scope: !4766, file: !1791, discriminator: 0)
!4779 = !DILocalVariable(name: "self", arg: 1, scope: !4780, file: !1791, line: 48, type: !201)
!4780 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hf9e14b8e7cbd7c1aE", scope: !1792, file: !1791, line: 48, type: !4781, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4784, retainedNodes: !4783)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!6, !201}
!4783 = !{!4779}
!4784 = !{!23, !3816}
!4785 = !DILocation(line: 48, column: 26, scope: !4780, inlinedAt: !4786)
!4786 = distinct !DILocation(line: 159, column: 38, scope: !4772, inlinedAt: !4777)
!4787 = !DILocation(line: 159, column: 18, scope: !4772, inlinedAt: !4777)
!4788 = !DILocation(line: 38, column: 17, scope: !4778)
!4789 = !DILocation(line: 2425, column: 10, scope: !4766)
!4790 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h8e8702373278c649E", scope: !4792, file: !4791, line: 10, type: !4793, scopeLine: 10, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4795)
!4791 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "3ff4baf6e4458f1a7f4e35f76384ccd7")
!4792 = !DINamespace(name: "validations", scope: !262)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!51, !24, !51}
!4795 = !{!4796, !4797}
!4796 = !DILocalVariable(name: "byte", arg: 1, scope: !4790, file: !4791, line: 10, type: !24)
!4797 = !DILocalVariable(name: "width", arg: 2, scope: !4790, file: !4791, line: 10, type: !51)
!4798 = !DILocation(line: 10, column: 26, scope: !4790)
!4799 = !DILocation(line: 10, column: 36, scope: !4790)
!4800 = !DILocation(line: 11, column: 13, scope: !4790)
!4801 = !DILocation(line: 11, column: 5, scope: !4790)
!4802 = !DILocation(line: 12, column: 2, scope: !4790)
!4803 = distinct !DISubprogram(name: "utf8_is_cont_byte", linkageName: "_ZN4core3str11validations17utf8_is_cont_byte17h949f0d4c22ec31d0E", scope: !4792, file: !4791, line: 23, type: !4804, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4806)
!4804 = !DISubroutineType(types: !4805)
!4805 = !{!643, !24}
!4806 = !{!4807}
!4807 = !DILocalVariable(name: "byte", arg: 1, scope: !4803, file: !4791, line: 23, type: !24)
!4808 = !DILocation(line: 23, column: 39, scope: !4803)
!4809 = !DILocation(line: 24, column: 5, scope: !4803)
!4810 = !DILocation(line: 25, column: 2, scope: !4803)
!4811 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17h07be36f50abef2bdE", scope: !4792, file: !4791, line: 16, type: !4812, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4814)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!51, !51, !24}
!4814 = !{!4815, !4816}
!4815 = !DILocalVariable(name: "ch", arg: 1, scope: !4811, file: !4791, line: 16, type: !51)
!4816 = !DILocalVariable(name: "byte", arg: 2, scope: !4811, file: !4791, line: 16, type: !24)
!4817 = !DILocation(line: 16, column: 29, scope: !4811)
!4818 = !DILocation(line: 16, column: 38, scope: !4811)
!4819 = !DILocation(line: 17, column: 5, scope: !4811)
!4820 = !DILocation(line: 17, column: 17, scope: !4811)
!4821 = !DILocation(line: 18, column: 2, scope: !4811)
!4822 = distinct !DISubprogram(name: "next_code_point_reverse<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations23next_code_point_reverse17h72ee05c2af757cf7E", scope: !4792, file: !4791, line: 78, type: !4823, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !4859, retainedNodes: !4838)
!4823 = !DISubroutineType(types: !4824)
!4824 = !{!4825, !2656}
!4825 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !14, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4826, templateParams: !21, identifier: "579007fbdd9ea110599ff25fd2866f3e")
!4826 = !{!4827}
!4827 = !DICompositeType(tag: DW_TAG_variant_part, scope: !4825, file: !2, size: 64, align: 32, elements: !4828, templateParams: !21, identifier: "651cc50a16f8f71ee0bf6d9c39946cb2", discriminator: !4837)
!4828 = !{!4829, !4833}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4827, file: !2, baseType: !4830, size: 64, align: 32, extraData: i32 0)
!4830 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4825, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !4831, identifier: "7020278afee02926c8932797fcde8eee")
!4831 = !{!4832}
!4832 = !DITemplateTypeParameter(name: "T", type: !51)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4827, file: !2, baseType: !4834, size: 64, align: 32, extraData: i32 1)
!4834 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4825, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !4835, templateParams: !4831, identifier: "d812b4673db9d3d0c577f4c8931ce3c7")
!4835 = !{!4836}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4834, file: !2, baseType: !51, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!4837 = !DIDerivedType(tag: DW_TAG_member, scope: !4825, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!4838 = !{!4839, !4840, !4842, !4844, !4846, !4848, !4849, !4851, !4853, !4855, !4857}
!4839 = !DILocalVariable(name: "bytes", arg: 1, scope: !4822, file: !4791, line: 78, type: !2656)
!4840 = !DILocalVariable(name: "w", scope: !4841, file: !4791, line: 83, type: !24, align: 8)
!4841 = distinct !DILexicalBlock(scope: !4822, file: !4791, line: 83, column: 5)
!4842 = !DILocalVariable(name: "residual", scope: !4843, file: !4791, line: 83, type: !1702, align: 8)
!4843 = distinct !DILexicalBlock(scope: !4822, file: !4791, line: 83, column: 37)
!4844 = !DILocalVariable(name: "val", scope: !4845, file: !4791, line: 83, type: !244, align: 32)
!4845 = distinct !DILexicalBlock(scope: !4822, file: !4791, line: 83, column: 20)
!4846 = !DILocalVariable(name: "next_byte", scope: !4847, file: !4791, line: 84, type: !24, align: 8)
!4847 = distinct !DILexicalBlock(scope: !4822, file: !4791, line: 84, column: 9)
!4848 = !DILocalVariable(name: "next_byte", scope: !4847, file: !4791, line: 84, type: !244, align: 32)
!4849 = !DILocalVariable(name: "back_byte", scope: !4850, file: !4791, line: 85, type: !24, align: 8)
!4850 = distinct !DILexicalBlock(scope: !4822, file: !4791, line: 85, column: 9)
!4851 = !DILocalVariable(name: "ch", scope: !4852, file: !4791, line: 90, type: !51, align: 32)
!4852 = distinct !DILexicalBlock(scope: !4841, file: !4791, line: 90, column: 5)
!4853 = !DILocalVariable(name: "z", scope: !4854, file: !4791, line: 93, type: !24, align: 8)
!4854 = distinct !DILexicalBlock(scope: !4852, file: !4791, line: 93, column: 5)
!4855 = !DILocalVariable(name: "y", scope: !4856, file: !4791, line: 98, type: !24, align: 8)
!4856 = distinct !DILexicalBlock(scope: !4854, file: !4791, line: 98, column: 9)
!4857 = !DILocalVariable(name: "x", scope: !4858, file: !4791, line: 103, type: !24, align: 8)
!4858 = distinct !DILexicalBlock(scope: !4856, file: !4791, line: 103, column: 13)
!4859 = !{!4860}
!4860 = !DITemplateTypeParameter(name: "I", type: !1405)
!4861 = !DILocation(line: 78, column: 53, scope: !4822)
!4862 = !DILocation(line: 90, column: 9, scope: !4852)
!4863 = !DILocation(line: 83, column: 37, scope: !4843)
!4864 = !DILocation(line: 83, column: 26, scope: !4822)
!4865 = !DILocation(line: 83, column: 20, scope: !4822)
!4866 = !DILocation(line: 83, column: 20, scope: !4843)
!4867 = !DILocation(line: 83, column: 20, scope: !4845)
!4868 = !DILocation(line: 84, column: 9, scope: !4847)
!4869 = !DILocation(line: 84, column: 22, scope: !4822)
!4870 = !DILocation(line: 85, column: 9, scope: !4822)
!4871 = !DILocation(line: 83, column: 9, scope: !4841)
!4872 = !DILocation(line: 85, column: 9, scope: !4850)
!4873 = !DILocation(line: 93, column: 29, scope: !4852)
!4874 = !DILocation(line: 93, column: 41, scope: !4852)
!4875 = !DILocation(line: 93, column: 22, scope: !4852)
!4876 = !DILocation(line: 93, column: 9, scope: !4854)
!4877 = !DILocation(line: 94, column: 10, scope: !4854)
!4878 = !DILocation(line: 94, column: 5, scope: !4854)
!4879 = !DILocation(line: 95, column: 8, scope: !4854)
!4880 = !DILocation(line: 84, column: 9, scope: !4822)
!4881 = !DILocation(line: 84, column: 53, scope: !4847)
!4882 = !DILocation(line: 84, column: 48, scope: !4847)
!4883 = !DILocation(line: 0, scope: !4884)
!4884 = !DILexicalBlockFile(scope: !4822, file: !4885, discriminator: 0)
!4885 = !DIFile(filename: "src/lib.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "bc3a4a1b702118edc1866f07ebe4cb01")
!4886 = !DILocation(line: 109, column: 29, scope: !4854)
!4887 = !DILocation(line: 109, column: 10, scope: !4854)
!4888 = !DILocation(line: 109, column: 5, scope: !4854)
!4889 = !DILocation(line: 111, column: 10, scope: !4854)
!4890 = !DILocation(line: 111, column: 5, scope: !4854)
!4891 = !DILocation(line: 112, column: 2, scope: !4822)
!4892 = !DILocation(line: 98, column: 33, scope: !4854)
!4893 = !DILocation(line: 98, column: 45, scope: !4854)
!4894 = !DILocation(line: 98, column: 26, scope: !4854)
!4895 = !DILocation(line: 98, column: 13, scope: !4856)
!4896 = !DILocation(line: 99, column: 14, scope: !4856)
!4897 = !DILocation(line: 99, column: 9, scope: !4856)
!4898 = !DILocation(line: 100, column: 12, scope: !4856)
!4899 = !DILocation(line: 107, column: 33, scope: !4856)
!4900 = !DILocation(line: 107, column: 14, scope: !4856)
!4901 = !DILocation(line: 107, column: 9, scope: !4856)
!4902 = !DILocation(line: 95, column: 5, scope: !4854)
!4903 = !DILocation(line: 103, column: 37, scope: !4856)
!4904 = !DILocation(line: 103, column: 49, scope: !4856)
!4905 = !DILocation(line: 103, column: 30, scope: !4856)
!4906 = !DILocation(line: 103, column: 17, scope: !4858)
!4907 = !DILocation(line: 104, column: 18, scope: !4858)
!4908 = !DILocation(line: 104, column: 13, scope: !4858)
!4909 = !DILocation(line: 105, column: 37, scope: !4858)
!4910 = !DILocation(line: 105, column: 18, scope: !4858)
!4911 = !DILocation(line: 105, column: 13, scope: !4858)
!4912 = !DILocation(line: 100, column: 9, scope: !4856)
!4913 = distinct !DISubprogram(name: "char_indices", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$12char_indices17h177befd449ee2c89E", scope: !4915, file: !4914, line: 1107, type: !4916, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4922)
!4914 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "361734e74e585b99fb3835c9168d18d7")
!4915 = !DINamespace(name: "{impl#0}", scope: !262)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!4918, !124}
!4918 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharIndices", scope: !1402, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !4919, templateParams: !21, identifier: "f621b490c1f0edaa36da3a23723a4d64")
!4919 = !{!4920, !4921}
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "front_offset", scope: !4918, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagProtected)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !4918, file: !2, baseType: !1401, size: 64, align: 32, flags: DIFlagProtected)
!4922 = !{!4923}
!4923 = !DILocalVariable(name: "self", arg: 1, scope: !4913, file: !4914, line: 1107, type: !124)
!4924 = !DILocation(line: 1107, column: 25, scope: !4913)
!4925 = !DILocation(line: 1108, column: 51, scope: !4913)
!4926 = !DILocation(line: 1108, column: 9, scope: !4913)
!4927 = !DILocation(line: 1109, column: 6, scope: !4913)
!4928 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17h3bc7705d41a210a2E", scope: !4915, file: !4914, line: 141, type: !4929, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4931)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!9, !124}
!4931 = !{!4932}
!4932 = !DILocalVariable(name: "self", arg: 1, scope: !4928, file: !4914, line: 141, type: !124)
!4933 = !DILocation(line: 141, column: 22, scope: !4928)
!4934 = !DILocalVariable(name: "self", arg: 1, scope: !4935, file: !4914, line: 486, type: !124)
!4935 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h9707b0eb27d72843E", scope: !4915, file: !4914, line: 486, type: !4936, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4938)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!432, !124}
!4938 = !{!4934}
!4939 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !4940)
!4940 = distinct !DILocation(line: 142, column: 14, scope: !4928)
!4941 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !4940)
!4942 = !DILocation(line: 142, column: 14, scope: !4928)
!4943 = !DILocation(line: 143, column: 6, scope: !4928)
!4944 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17hdc83417ee00d71e3E", scope: !4915, file: !4914, line: 1050, type: !4945, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4947)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!1401, !124}
!4947 = !{!4948}
!4948 = !DILocalVariable(name: "self", arg: 1, scope: !4944, file: !4914, line: 1050, type: !124)
!4949 = !DILocation(line: 1050, column: 18, scope: !4944)
!4950 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !4951)
!4951 = distinct !DILocation(line: 1051, column: 28, scope: !4944)
!4952 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !4951)
!4953 = !DILocation(line: 1051, column: 28, scope: !4944)
!4954 = !DILocation(line: 1051, column: 39, scope: !4944)
!4955 = !DILocation(line: 1052, column: 6, scope: !4944)
!4956 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17h1a6184bdcfacbb3aE", scope: !4915, file: !4914, line: 161, type: !4957, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4959)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!643, !124}
!4959 = !{!4960}
!4960 = !DILocalVariable(name: "self", arg: 1, scope: !4956, file: !4914, line: 161, type: !124)
!4961 = !DILocation(line: 161, column: 27, scope: !4956)
!4962 = !DILocation(line: 162, column: 14, scope: !4956)
!4963 = !DILocation(line: 162, column: 9, scope: !4956)
!4964 = !DILocation(line: 163, column: 6, scope: !4956)
!4965 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17h4fa41a383d1b5080E", scope: !1401, file: !4966, line: 159, type: !4967, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !4970, retainedNodes: !4971)
!4966 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "5d5947d948aa788fc646eb2f10b2054a")
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!124, !4969}
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::iter::Chars", baseType: !1401, size: 32, align: 32, dwarfAddressSpace: 0)
!4970 = !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17h4fa41a383d1b5080E", scope: !1401, file: !4966, line: 159, type: !4967, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!4971 = !{!4972}
!4972 = !DILocalVariable(name: "self", arg: 1, scope: !4965, file: !4966, line: 159, type: !4969)
!4973 = !DILocation(line: 159, column: 19, scope: !4965)
!4974 = !DILocation(line: 161, column: 48, scope: !4965)
!4975 = !DILocation(line: 161, column: 18, scope: !4965)
!4976 = !DILocation(line: 162, column: 6, scope: !4965)
!4977 = distinct !DISubprogram(name: "valid_up_to", linkageName: "_ZN4core3str5error9Utf8Error11valid_up_to17h319ff214de48af79E", scope: !260, file: !4978, line: 79, type: !4979, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !4982, retainedNodes: !4983)
!4978 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/error.rs", directory: "", checksumkind: CSK_MD5, checksum: "2dabe4a3dcb004711b22087b567c3c72")
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!9, !4981}
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::str::error::Utf8Error", baseType: !260, size: 32, align: 32, dwarfAddressSpace: 0)
!4982 = !DISubprogram(name: "valid_up_to", linkageName: "_ZN4core3str5error9Utf8Error11valid_up_to17h319ff214de48af79E", scope: !260, file: !4978, line: 79, type: !4979, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!4983 = !{!4984}
!4984 = !DILocalVariable(name: "self", arg: 1, scope: !4977, file: !4978, line: 79, type: !4981)
!4985 = !DILocation(line: 79, column: 30, scope: !4977)
!4986 = !DILocation(line: 80, column: 9, scope: !4977)
!4987 = !DILocation(line: 81, column: 6, scope: !4977)
!4988 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits99_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFull$GT$5index17h0e80e9d18d837736E", scope: !4990, file: !4989, line: 119, type: !4992, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !4995)
!4989 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "de595381df0e1d6f75d5ae5278f53e2f")
!4990 = !DINamespace(name: "{impl#6}", scope: !4991)
!4991 = !DINamespace(name: "traits", scope: !262)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{!124, !4994, !124, !1241}
!4994 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFull", scope: !1235, file: !2, align: 8, flags: DIFlagPublic, elements: !21, identifier: "13322fd7a2e7ed91daa3f63083135bc7")
!4995 = !{!4996, !4997, !4998}
!4996 = !DILocalVariable(name: "self", scope: !4988, file: !4989, line: 119, type: !4994, align: 8)
!4997 = !DILocalVariable(name: "slice", arg: 2, scope: !4988, file: !4989, line: 119, type: !124)
!4998 = !DILocalVariable(arg: 1, scope: !4988, file: !4989, line: 119, type: !4994)
!4999 = !DILocation(line: 119, column: 14, scope: !4988)
!5000 = !DILocation(line: 119, column: 20, scope: !4988)
!5001 = !DILocation(line: 121, column: 6, scope: !4988)
!5002 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17hac4c7b0d6e58e420E", scope: !5004, file: !5003, line: 178, type: !5005, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5007)
!5003 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "e9035c094c664ecc363abf0007689bcc")
!5004 = !DINamespace(name: "converts", scope: !262)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!124, !432}
!5007 = !{!5008}
!5008 = !DILocalVariable(name: "v", arg: 1, scope: !5002, file: !5003, line: 178, type: !432)
!5009 = !DILocation(line: 178, column: 41, scope: !5002)
!5010 = !DILocation(line: 182, column: 2, scope: !5002)
!5011 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3new17h4393201bae3dbf67E", scope: !2052, file: !5012, line: 415, type: !5013, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !109, declaration: !5015, retainedNodes: !5016)
!5012 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/cell.rs", directory: "", checksumkind: CSK_MD5, checksum: "0fa32187f20826ea351a1606e10938e3")
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!2052, !9}
!5015 = !DISubprogram(name: "new<usize>", linkageName: "_ZN4core4cell13Cell$LT$T$GT$3new17h4393201bae3dbf67E", scope: !2052, file: !5012, line: 415, type: !5013, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !109)
!5016 = !{!5017}
!5017 = !DILocalVariable(name: "value", arg: 1, scope: !5011, file: !5012, line: 415, type: !9)
!5018 = !DILocation(line: 415, column: 22, scope: !5011)
!5019 = !DILocalVariable(name: "value", arg: 1, scope: !5020, file: !5012, line: 2299, type: !9)
!5020 = distinct !DISubprogram(name: "new<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3new17hadcc9e786112b902E", scope: !145, file: !5012, line: 2299, type: !5021, scopeLine: 2299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !109, declaration: !5023, retainedNodes: !5024)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!145, !9}
!5023 = !DISubprogram(name: "new<usize>", linkageName: "_ZN4core4cell19UnsafeCell$LT$T$GT$3new17hadcc9e786112b902E", scope: !145, file: !5012, line: 2299, type: !5021, scopeLine: 2299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !109)
!5024 = !{!5019}
!5025 = !DILocation(line: 2299, column: 22, scope: !5020, inlinedAt: !5026)
!5026 = distinct !DILocation(line: 416, column: 23, scope: !5011)
!5027 = !DILocation(line: 417, column: 6, scope: !5011)
!5028 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char6decode12decode_utf1617h0ddfb08daf367a6fE", scope: !492, file: !5029, line: 35, type: !5030, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !545, retainedNodes: !5032)
!5029 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/decode.rs", directory: "", checksumkind: CSK_MD5, checksum: "9cbf85c61f55436af0d7fcad7ddc8993")
!5030 = !DISubroutineType(types: !5031)
!5031 = !{!491, !496}
!5032 = !{!5033}
!5033 = !DILocalVariable(name: "iter", arg: 1, scope: !5028, file: !5029, line: 35, type: !496)
!5034 = !DILocation(line: 35, column: 57, scope: !5028)
!5035 = !DILocation(line: 36, column: 30, scope: !5028)
!5036 = !DILocation(line: 36, column: 5, scope: !5028)
!5037 = !DILocation(line: 37, column: 2, scope: !5028)
!5038 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char6decode12decode_utf1617h17941822919627ffE", scope: !492, file: !5029, line: 35, type: !5039, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !690, retainedNodes: !5041)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!682, !685}
!5041 = !{!5042}
!5042 = !DILocalVariable(name: "iter", arg: 1, scope: !5038, file: !5029, line: 35, type: !685)
!5043 = !DILocation(line: 35, column: 57, scope: !5038)
!5044 = !DILocation(line: 36, column: 30, scope: !5038)
!5045 = !DILocation(line: 36, column: 5, scope: !5038)
!5046 = !DILocation(line: 37, column: 2, scope: !5038)
!5047 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN4core4char6decode12decode_utf1617h59267bb08a162c81E", scope: !492, file: !5029, line: 35, type: !5048, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !746, retainedNodes: !5050)
!5048 = !DISubroutineType(types: !5049)
!5049 = !{!723, !726}
!5050 = !{!5051}
!5051 = !DILocalVariable(name: "iter", arg: 1, scope: !5047, file: !5029, line: 35, type: !726)
!5052 = !DILocation(line: 35, column: 57, scope: !5047)
!5053 = !DILocation(line: 36, column: 30, scope: !5047)
!5054 = !DILocation(line: 36, column: 5, scope: !5047)
!5055 = !DILocation(line: 37, column: 2, scope: !5047)
!5056 = distinct !DISubprogram(name: "char_try_from_u32", linkageName: "_ZN4core4char7convert17char_try_from_u3217h4e2faeb6573f1185E", scope: !5058, file: !5057, line: 236, type: !5059, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5079)
!5057 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "6f1616d15777773c7758fa685d06b161")
!5058 = !DINamespace(name: "convert", scope: !493)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{!5061, !51}
!5061 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<char, core::char::convert::CharTryFromError>", scope: !335, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !5062, templateParams: !21, identifier: "6eeef053464495a608bd852a2e88d4")
!5062 = !{!5063}
!5063 = !DICompositeType(tag: DW_TAG_variant_part, scope: !5061, file: !2, size: 32, align: 32, elements: !5064, templateParams: !21, identifier: "a6039b4c06c5663ea50f8a60c6973c3b", discriminator: !5078)
!5064 = !{!5065, !5074}
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !5063, file: !2, baseType: !5066, size: 32, align: 32)
!5066 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !5061, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !5067, templateParams: !5069, identifier: "6654e82dd92b112597ff13bd4019cfc9")
!5067 = !{!5068}
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5066, file: !2, baseType: !574, size: 32, align: 32, flags: DIFlagPublic)
!5069 = !{!1121, !5070}
!5070 = !DITemplateTypeParameter(name: "E", type: !5071)
!5071 = !DICompositeType(tag: DW_TAG_structure_type, name: "CharTryFromError", scope: !5058, file: !2, align: 8, flags: DIFlagPublic, elements: !5072, templateParams: !21, identifier: "88786f5ac8fb120c4b8adbd73fb8113f")
!5072 = !{!5073}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5071, file: !2, baseType: !7, align: 8, flags: DIFlagPrivate)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !5063, file: !2, baseType: !5075, size: 32, align: 32, extraData: i32 1114112)
!5075 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !5061, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !5076, templateParams: !5069, identifier: "bd41bd5f65eb1055f88c81e4244d02d0")
!5076 = !{!5077}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5075, file: !2, baseType: !5071, align: 8, flags: DIFlagPublic)
!5078 = !DIDerivedType(tag: DW_TAG_member, scope: !5061, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!5079 = !{!5080}
!5080 = !DILocalVariable(name: "i", arg: 1, scope: !5056, file: !5057, line: 236, type: !51)
!5081 = !DILocation(line: 236, column: 28, scope: !5056)
!5082 = !DILocation(line: 250, column: 8, scope: !5056)
!5083 = !DILocalVariable(name: "self", arg: 1, scope: !5084, file: !2832, line: 2339, type: !51)
!5084 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17hf6d4bc74d2672fe7E", scope: !5085, file: !2832, line: 2339, type: !5086, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5088)
!5085 = !DINamespace(name: "{impl#8}", scope: !208)
!5086 = !DISubroutineType(types: !5087)
!5087 = !{!51, !51, !51}
!5088 = !{!5083, !5089}
!5089 = !DILocalVariable(name: "rhs", arg: 2, scope: !5084, file: !2832, line: 2339, type: !51)
!5090 = !DILocation(line: 2339, column: 35, scope: !5084, inlinedAt: !5091)
!5091 = distinct !DILocation(line: 250, column: 21, scope: !5056)
!5092 = !DILocation(line: 2339, column: 41, scope: !5084, inlinedAt: !5091)
!5093 = !DILocation(line: 2340, column: 13, scope: !5084, inlinedAt: !5091)
!5094 = !DILocation(line: 254, column: 9, scope: !5056)
!5095 = !DILocation(line: 250, column: 5, scope: !5056)
!5096 = !DILocation(line: 251, column: 9, scope: !5056)
!5097 = !DILocation(line: 256, column: 2, scope: !5056)
!5098 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17hf744add997150557E", scope: !5058, file: !5057, line: 26, type: !5099, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5101)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{!574, !51, !1241}
!5101 = !{!5102}
!5102 = !DILocalVariable(name: "i", arg: 1, scope: !5098, file: !5057, line: 26, type: !51)
!5103 = !DILocation(line: 26, column: 47, scope: !5098)
!5104 = !DILocation(line: 77, column: 35, scope: !5105)
!5105 = !DILexicalBlockFile(scope: !5098, file: !473, discriminator: 0)
!5106 = !DILocation(line: 36, column: 2, scope: !5098)
!5107 = !DILocation(line: 78, column: 17, scope: !5105)
!5108 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core4char7convert18from_u32_unchecked18precondition_check17h15ed6a7325f4a6efE", scope: !5109, file: !473, line: 68, type: !5110, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5112)
!5109 = !DINamespace(name: "from_u32_unchecked", scope: !5058)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{null, !51, !1241}
!5112 = !{!5113, !5114}
!5113 = !DILocalVariable(name: "i", arg: 1, scope: !5108, file: !473, line: 68, type: !51)
!5114 = !DILocalVariable(name: "msg", scope: !5115, file: !473, line: 70, type: !124, align: 32)
!5115 = distinct !DILexicalBlock(scope: !5108, file: !473, line: 70, column: 21)
!5116 = !DILocation(line: 68, column: 43, scope: !5108)
!5117 = !DILocation(line: 70, column: 25, scope: !5115)
!5118 = !DILocation(line: 32, column: 29, scope: !5119)
!5119 = !DILexicalBlockFile(scope: !5108, file: !5057, discriminator: 0)
!5120 = !DILocation(line: 32, column: 50, scope: !5119)
!5121 = !DILocation(line: 73, column: 94, scope: !5115)
!5122 = !DILocation(line: 73, column: 59, scope: !5115)
!5123 = !DILocation(line: 73, column: 21, scope: !5115)
!5124 = !DILocation(line: 75, column: 14, scope: !5108)
!5125 = distinct !DISubprogram(name: "encode_utf8_raw", linkageName: "_ZN4core4char7methods15encode_utf8_raw17h5651d1f2b96f3c25E", scope: !5127, file: !5126, line: 1873, type: !5128, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5134)
!5126 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "aef19757a827b829abda53fa550996ee")
!5127 = !DINamespace(name: "methods", scope: !493)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!5130, !51, !5130}
!5130 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [u8]", file: !2, size: 64, align: 32, elements: !5131, templateParams: !21, identifier: "bdfeb4840e2373d8742974745efe30b6")
!5131 = !{!5132, !5133}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5130, file: !2, baseType: !127, size: 32, align: 32)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5130, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!5134 = !{!5135, !5136, !5137}
!5135 = !DILocalVariable(name: "code", arg: 1, scope: !5125, file: !5126, line: 1873, type: !51)
!5136 = !DILocalVariable(name: "dst", arg: 2, scope: !5125, file: !5126, line: 1873, type: !5130)
!5137 = !DILocalVariable(name: "len", scope: !5138, file: !5126, line: 1874, type: !9, align: 32)
!5138 = distinct !DILexicalBlock(scope: !5125, file: !5126, line: 1874, column: 5)
!5139 = !DILocation(line: 1873, column: 30, scope: !5125)
!5140 = !DILocation(line: 1873, column: 41, scope: !5125)
!5141 = !DILocation(line: 1874, column: 15, scope: !5125)
!5142 = !DILocation(line: 1874, column: 9, scope: !5138)
!5143 = !DILocation(line: 1875, column: 8, scope: !5138)
!5144 = !DILocalVariable(name: "self", arg: 1, scope: !5145, file: !449, line: 755, type: !5130)
!5145 = distinct !DISubprogram(name: "as_mut_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$10as_mut_ptr17hb8b6233d5764e6e7E", scope: !450, file: !449, line: 755, type: !5146, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !5148)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{!463, !5130}
!5148 = !{!5144}
!5149 = !DILocation(line: 755, column: 29, scope: !5145, inlinedAt: !5150)
!5150 = distinct !DILocation(line: 1886, column: 50, scope: !5138)
!5151 = !DILocation(line: 1886, column: 14, scope: !5138)
!5152 = !DILocation(line: 755, column: 29, scope: !5145, inlinedAt: !5153)
!5153 = distinct !DILocation(line: 1889, column: 44, scope: !5138)
!5154 = !DILocation(line: 1889, column: 14, scope: !5138)
!5155 = !DILocation(line: 1890, column: 2, scope: !5125)
!5156 = !DILocalVariable(name: "code", arg: 1, scope: !5157, file: !304, line: 166, type: !51)
!5157 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core4char7methods15encode_utf8_raw8do_panic17h579160be39dda5c0E", scope: !5158, file: !304, line: 166, type: !5159, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5161)
!5158 = !DINamespace(name: "encode_utf8_raw", scope: !5127)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{null, !51, !9, !9, !1241}
!5161 = !{!5156, !5162, !5163}
!5162 = !DILocalVariable(name: "len", arg: 2, scope: !5157, file: !304, line: 166, type: !9)
!5163 = !DILocalVariable(name: "dst_len", arg: 3, scope: !5157, file: !304, line: 166, type: !9)
!5164 = !DILocation(line: 166, column: 29, scope: !5157, inlinedAt: !5165)
!5165 = distinct !DILocation(line: 178, column: 9, scope: !5166)
!5166 = !DILexicalBlockFile(scope: !5138, file: !304, discriminator: 0)
!5167 = !DILocation(line: 2435, column: 27, scope: !5168, inlinedAt: !5165)
!5168 = !DILexicalBlockFile(scope: !5157, file: !2231, discriminator: 0)
!5169 = !DILocation(line: 2435, column: 9, scope: !5168, inlinedAt: !5165)
!5170 = !DILocation(line: 178, column: 9, scope: !5166)
!5171 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617h5020acdbefe335aeE", scope: !5172, file: !5126, line: 150, type: !5048, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !746, retainedNodes: !5173)
!5172 = !DINamespace(name: "{impl#0}", scope: !5127)
!5173 = !{!5174}
!5174 = !DILocalVariable(name: "iter", arg: 1, scope: !5171, file: !5126, line: 150, type: !726)
!5175 = !DILocation(line: 150, column: 54, scope: !5171)
!5176 = !DILocation(line: 151, column: 9, scope: !5171)
!5177 = !DILocation(line: 152, column: 6, scope: !5171)
!5178 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617he542c089b93c4231E", scope: !5172, file: !5126, line: 150, type: !5030, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !545, retainedNodes: !5179)
!5179 = !{!5180}
!5180 = !DILocalVariable(name: "iter", arg: 1, scope: !5178, file: !5126, line: 150, type: !496)
!5181 = !DILocation(line: 150, column: 54, scope: !5178)
!5182 = !DILocation(line: 151, column: 9, scope: !5178)
!5183 = !DILocation(line: 152, column: 6, scope: !5178)
!5184 = distinct !DISubprogram(name: "decode_utf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$12decode_utf1617hf07191350f05d07bE", scope: !5172, file: !5126, line: 150, type: !5039, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !690, retainedNodes: !5185)
!5185 = !{!5186}
!5186 = !DILocalVariable(name: "iter", arg: 1, scope: !5184, file: !5126, line: 150, type: !685)
!5187 = !DILocation(line: 150, column: 54, scope: !5184)
!5188 = !DILocation(line: 151, column: 9, scope: !5184)
!5189 = !DILocation(line: 152, column: 6, scope: !5184)
!5190 = distinct !DISubprogram(name: "is_case_ignorable", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$17is_case_ignorable17ha34e138c472dbef3E", scope: !5172, file: !5126, line: 1003, type: !5191, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!643, !574}
!5193 = !{!5194}
!5194 = !DILocalVariable(name: "self", arg: 1, scope: !5190, file: !5126, line: 1003, type: !574)
!5195 = !DILocation(line: 1003, column: 30, scope: !5190)
!5196 = !DILocation(line: 1004, column: 17, scope: !5190)
!5197 = !DILocation(line: 1004, column: 12, scope: !5190)
!5198 = !DILocation(line: 1007, column: 13, scope: !5190)
!5199 = !DILocation(line: 437, column: 9, scope: !5200)
!5200 = !DILexicalBlockFile(scope: !5190, file: !2304, discriminator: 0)
!5201 = !DILocation(line: 1009, column: 6, scope: !5190)
!5202 = !DILocation(line: 439, column: 18, scope: !5200)
!5203 = !DILocation(line: 438, column: 39, scope: !5200)
!5204 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$18from_u32_unchecked17h010636f4244396c3E", scope: !5172, file: !5126, line: 237, type: !5205, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5207)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{!574, !51}
!5207 = !{!5208}
!5208 = !DILocalVariable(name: "i", arg: 1, scope: !5204, file: !5126, line: 237, type: !51)
!5209 = !DILocation(line: 237, column: 44, scope: !5204)
!5210 = !DILocation(line: 239, column: 18, scope: !5204)
!5211 = !DILocation(line: 240, column: 6, scope: !5204)
!5212 = distinct !DISubprogram(name: "is_ascii_alphabetic", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$19is_ascii_alphabetic17hd02ef05cca0a0a49E", scope: !5172, file: !5126, line: 1447, type: !5213, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5215)
!5213 = !DISubroutineType(types: !5214)
!5214 = !{!643, !1504}
!5215 = !{!5216}
!5216 = !DILocalVariable(name: "self", arg: 1, scope: !5212, file: !5126, line: 1447, type: !1504)
!5217 = !DILocation(line: 1447, column: 38, scope: !5212)
!5218 = !DILocation(line: 1448, column: 25, scope: !5212)
!5219 = !DILocation(line: 1448, column: 37, scope: !5212)
!5220 = !DILocation(line: 438, column: 39, scope: !5221)
!5221 = !DILexicalBlockFile(scope: !5212, file: !2304, discriminator: 0)
!5222 = !DILocation(line: 439, column: 18, scope: !5221)
!5223 = !DILocation(line: 1449, column: 6, scope: !5212)
!5224 = distinct !DISubprogram(name: "is_ascii", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_ascii17h60f03876197a0f94E", scope: !5172, file: !5126, line: 1229, type: !5213, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5225)
!5225 = !{!5226}
!5226 = !DILocalVariable(name: "self", arg: 1, scope: !5224, file: !5126, line: 1229, type: !1504)
!5227 = !DILocation(line: 1229, column: 27, scope: !5224)
!5228 = !DILocation(line: 1230, column: 9, scope: !5224)
!5229 = !DILocation(line: 1231, column: 6, scope: !5224)
!5230 = distinct !DISubprogram(name: "is_cased", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8is_cased17h406efb6a17678473E", scope: !5172, file: !5126, line: 987, type: !5191, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5231)
!5231 = !{!5232}
!5232 = !DILocalVariable(name: "self", arg: 1, scope: !5230, file: !5126, line: 987, type: !574)
!5233 = !DILocation(line: 987, column: 21, scope: !5230)
!5234 = !DILocation(line: 988, column: 17, scope: !5230)
!5235 = !DILocation(line: 988, column: 12, scope: !5230)
!5236 = !DILocation(line: 988, column: 66, scope: !5230)
!5237 = !DILocation(line: 988, column: 35, scope: !5230)
!5238 = !DILocation(line: 989, column: 6, scope: !5230)
!5239 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8len_utf817h43f83d25bab4344eE", scope: !5172, file: !5126, line: 645, type: !5240, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5242)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!9, !574}
!5242 = !{!5243}
!5243 = !DILocalVariable(name: "self", arg: 1, scope: !5239, file: !5126, line: 645, type: !574)
!5244 = !DILocation(line: 645, column: 27, scope: !5239)
!5245 = !DILocation(line: 646, column: 9, scope: !5239)
!5246 = !DILocation(line: 647, column: 6, scope: !5239)
!5247 = distinct !DISubprogram(name: "encode_utf8_raw_unchecked", linkageName: "_ZN4core4char7methods25encode_utf8_raw_unchecked17h85e7bbede87537d1E", scope: !5127, file: !5126, line: 1910, type: !5248, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5250)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{null, !51, !463}
!5250 = !{!5251, !5252, !5253, !5255, !5257, !5259, !5261}
!5251 = !DILocalVariable(name: "code", arg: 1, scope: !5247, file: !5126, line: 1910, type: !51)
!5252 = !DILocalVariable(name: "dst", arg: 2, scope: !5247, file: !5126, line: 1910, type: !463)
!5253 = !DILocalVariable(name: "len", scope: !5254, file: !5126, line: 1911, type: !9, align: 32)
!5254 = distinct !DILexicalBlock(scope: !5247, file: !5126, line: 1911, column: 5)
!5255 = !DILocalVariable(name: "last1", scope: !5256, file: !5126, line: 1920, type: !24, align: 8)
!5256 = distinct !DILexicalBlock(scope: !5254, file: !5126, line: 1920, column: 9)
!5257 = !DILocalVariable(name: "last2", scope: !5258, file: !5126, line: 1921, type: !24, align: 8)
!5258 = distinct !DILexicalBlock(scope: !5256, file: !5126, line: 1921, column: 9)
!5259 = !DILocalVariable(name: "last3", scope: !5260, file: !5126, line: 1922, type: !24, align: 8)
!5260 = distinct !DILexicalBlock(scope: !5258, file: !5126, line: 1922, column: 9)
!5261 = !DILocalVariable(name: "last4", scope: !5262, file: !5126, line: 1923, type: !24, align: 8)
!5262 = distinct !DILexicalBlock(scope: !5260, file: !5126, line: 1923, column: 9)
!5263 = !DILocation(line: 1910, column: 47, scope: !5247)
!5264 = !DILocation(line: 1910, column: 58, scope: !5247)
!5265 = !DILocation(line: 1911, column: 15, scope: !5247)
!5266 = !DILocation(line: 1911, column: 9, scope: !5254)
!5267 = !DILocation(line: 1915, column: 12, scope: !5254)
!5268 = !DILocation(line: 1916, column: 13, scope: !5254)
!5269 = !DILocation(line: 0, scope: !5270)
!5270 = !DILexicalBlockFile(scope: !5254, file: !4885, discriminator: 0)
!5271 = !DILocation(line: 1920, column: 22, scope: !5254)
!5272 = !DILocation(line: 1920, column: 21, scope: !5254)
!5273 = !DILocation(line: 1920, column: 13, scope: !5256)
!5274 = !DILocation(line: 1921, column: 22, scope: !5256)
!5275 = !DILocation(line: 1921, column: 21, scope: !5256)
!5276 = !DILocation(line: 1921, column: 13, scope: !5258)
!5277 = !DILocation(line: 1922, column: 22, scope: !5258)
!5278 = !DILocation(line: 1922, column: 21, scope: !5258)
!5279 = !DILocation(line: 1922, column: 13, scope: !5260)
!5280 = !DILocation(line: 1923, column: 22, scope: !5260)
!5281 = !DILocation(line: 1923, column: 21, scope: !5260)
!5282 = !DILocation(line: 1923, column: 13, scope: !5262)
!5283 = !DILocation(line: 1925, column: 12, scope: !5262)
!5284 = !DILocation(line: 1943, column: 2, scope: !5247)
!5285 = !DILocation(line: 1926, column: 13, scope: !5262)
!5286 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !5287)
!5287 = distinct !DILocation(line: 1927, column: 18, scope: !5262)
!5288 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !5287)
!5289 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !5287)
!5290 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !5287)
!5291 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !5287)
!5292 = !DILocation(line: 1927, column: 13, scope: !5262)
!5293 = !DILocation(line: 0, scope: !5294)
!5294 = !DILexicalBlockFile(scope: !5262, file: !4885, discriminator: 0)
!5295 = !DILocation(line: 1931, column: 12, scope: !5262)
!5296 = !DILocation(line: 1932, column: 13, scope: !5262)
!5297 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !5298)
!5298 = distinct !DILocation(line: 1933, column: 18, scope: !5262)
!5299 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !5298)
!5300 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !5298)
!5301 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !5298)
!5302 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !5298)
!5303 = !DILocation(line: 1933, column: 13, scope: !5262)
!5304 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !5305)
!5305 = distinct !DILocation(line: 1934, column: 18, scope: !5262)
!5306 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !5305)
!5307 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !5305)
!5308 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !5305)
!5309 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !5305)
!5310 = !DILocation(line: 1934, column: 13, scope: !5262)
!5311 = !DILocation(line: 1938, column: 9, scope: !5262)
!5312 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !5313)
!5313 = distinct !DILocation(line: 1939, column: 14, scope: !5262)
!5314 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !5313)
!5315 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !5313)
!5316 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !5313)
!5317 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !5313)
!5318 = !DILocation(line: 1939, column: 9, scope: !5262)
!5319 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !5320)
!5320 = distinct !DILocation(line: 1940, column: 14, scope: !5262)
!5321 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !5320)
!5322 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !5320)
!5323 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !5320)
!5324 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !5320)
!5325 = !DILocation(line: 1940, column: 9, scope: !5262)
!5326 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !5327)
!5327 = distinct !DILocation(line: 1941, column: 14, scope: !5262)
!5328 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !5327)
!5329 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !5327)
!5330 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !5327)
!5331 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !5327)
!5332 = !DILocation(line: 1941, column: 9, scope: !5262)
!5333 = distinct !DISubprogram(name: "len_utf8", linkageName: "_ZN4core4char7methods8len_utf817h526e1e68148fccd7E", scope: !5127, file: !5126, line: 1842, type: !5334, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5336)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{!9, !51}
!5336 = !{!5337}
!5337 = !DILocalVariable(name: "code", arg: 1, scope: !5333, file: !5126, line: 1842, type: !51)
!5338 = !DILocation(line: 1842, column: 19, scope: !5333)
!5339 = !DILocation(line: 1844, column: 9, scope: !5333)
!5340 = !DILocation(line: 1845, column: 9, scope: !5333)
!5341 = !DILocation(line: 1844, column: 24, scope: !5333)
!5342 = !DILocation(line: 1846, column: 9, scope: !5333)
!5343 = !DILocation(line: 1845, column: 24, scope: !5333)
!5344 = !DILocation(line: 1847, column: 14, scope: !5333)
!5345 = !DILocation(line: 1846, column: 26, scope: !5333)
!5346 = !DILocation(line: 1849, column: 2, scope: !5333)
!5347 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core4hint16assert_unchecked18precondition_check17h46754d9649a9e6d0E", scope: !5348, file: !473, line: 68, type: !5350, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !5352)
!5348 = !DINamespace(name: "assert_unchecked", scope: !5349)
!5349 = !DINamespace(name: "hint", scope: !15)
!5350 = !DISubroutineType(types: !5351)
!5351 = !{null, !643, !1241}
!5352 = !{!5353, !5354}
!5353 = !DILocalVariable(name: "cond", arg: 1, scope: !5347, file: !473, line: 68, type: !643)
!5354 = !DILocalVariable(name: "msg", scope: !5355, file: !473, line: 70, type: !124, align: 32)
!5355 = distinct !DILexicalBlock(scope: !5347, file: !473, line: 70, column: 21)
!5356 = !DILocation(line: 68, column: 43, scope: !5347)
!5357 = !DILocation(line: 70, column: 25, scope: !5355)
!5358 = !DILocation(line: 207, column: 36, scope: !5359)
!5359 = !DILexicalBlockFile(scope: !5347, file: !5360, discriminator: 0)
!5360 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/hint.rs", directory: "", checksumkind: CSK_MD5, checksum: "56f659f9cbc57d60ad8ce456b7f06ccb")
!5361 = !DILocation(line: 73, column: 94, scope: !5355)
!5362 = !DILocation(line: 73, column: 59, scope: !5355)
!5363 = !DILocation(line: 73, column: 21, scope: !5355)
!5364 = !DILocation(line: 75, column: 14, scope: !5347)
!5365 = distinct !DISubprogram(name: "len<alloc::vec::into_iter::IntoIter<u8, alloc::alloc::Global>>", linkageName: "_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hf72db64fc94ef7e9E", scope: !5367, file: !5366, line: 116, type: !5369, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5381, retainedNodes: !5371)
!5366 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/exact_size.rs", directory: "", checksumkind: CSK_MD5, checksum: "b65df84932b5452054a09996bbfca6e2")
!5367 = !DINamespace(name: "ExactSizeIterator", scope: !5368)
!5368 = !DINamespace(name: "exact_size", scope: !559)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{!9, !857}
!5371 = !{!5372, !5373, !5375, !5376, !5378, !5379}
!5372 = !DILocalVariable(name: "self", arg: 1, scope: !5365, file: !5366, line: 116, type: !857)
!5373 = !DILocalVariable(name: "lower", scope: !5374, file: !5366, line: 117, type: !9, align: 32)
!5374 = distinct !DILexicalBlock(scope: !5365, file: !5366, line: 117, column: 9)
!5375 = !DILocalVariable(name: "upper", scope: !5374, file: !5366, line: 117, type: !103, align: 32)
!5376 = !DILocalVariable(name: "left_val", scope: !5377, file: !2304, line: 45, type: !102, align: 32)
!5377 = distinct !DILexicalBlock(scope: !5374, file: !2304, line: 45, column: 13)
!5378 = !DILocalVariable(name: "right_val", scope: !5377, file: !2304, line: 45, type: !102, align: 32)
!5379 = !DILocalVariable(name: "kind", scope: !5380, file: !2304, line: 47, type: !280, align: 8)
!5380 = distinct !DILexicalBlock(scope: !5377, file: !2304, line: 47, column: 21)
!5381 = !{!5382}
!5382 = !DITemplateTypeParameter(name: "Self", type: !858)
!5383 = !DILocation(line: 116, column: 12, scope: !5365)
!5384 = !DILocation(line: 117, column: 21, scope: !5374)
!5385 = !DILocation(line: 117, column: 35, scope: !5365)
!5386 = !DILocation(line: 117, column: 14, scope: !5365)
!5387 = !DILocation(line: 117, column: 14, scope: !5374)
!5388 = !DILocation(line: 117, column: 21, scope: !5365)
!5389 = !DILocation(line: 122, column: 27, scope: !5374)
!5390 = !DILocation(line: 45, column: 14, scope: !5391)
!5391 = !DILexicalBlockFile(scope: !5374, file: !2304, discriminator: 0)
!5392 = !DILocation(line: 45, column: 14, scope: !5377)
!5393 = !DILocation(line: 45, column: 24, scope: !5391)
!5394 = !DILocation(line: 45, column: 24, scope: !5377)
!5395 = !DILocation(line: 46, column: 21, scope: !5377)
!5396 = !DILocation(line: 47, column: 32, scope: !5377)
!5397 = !DILocation(line: 47, column: 25, scope: !5380)
!5398 = !DILocation(line: 51, column: 85, scope: !5380)
!5399 = !DILocation(line: 51, column: 21, scope: !5380)
!5400 = !DILocation(line: 124, column: 6, scope: !5365)
!5401 = distinct !DISubprogram(name: "rfind<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind17h07ea06c9ea1f0e72E", scope: !5403, file: !5402, line: 356, type: !5405, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5411, retainedNodes: !5408)
!5402 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/double_ended.rs", directory: "", checksumkind: CSK_MD5, checksum: "4bf153d82d01e9943c3fcd15b2ede365")
!5403 = !DINamespace(name: "DoubleEndedIterator", scope: !5404)
!5404 = !DINamespace(name: "double_ended", scope: !559)
!5405 = !DISubroutineType(types: !5406)
!5406 = !{!1381, !5407, !1488}
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::Chars", baseType: !1401, size: 32, align: 32, dwarfAddressSpace: 0)
!5408 = !{!5409, !5410}
!5409 = !DILocalVariable(name: "self", arg: 1, scope: !5401, file: !5402, line: 356, type: !5407)
!5410 = !DILocalVariable(name: "predicate", arg: 2, scope: !5401, file: !5402, line: 356, type: !1488)
!5411 = !{!5412, !5413}
!5412 = !DITemplateTypeParameter(name: "Self", type: !1401)
!5413 = !DITemplateTypeParameter(name: "P", type: !1488)
!5414 = !DILocation(line: 356, column: 17, scope: !5401)
!5415 = !DILocation(line: 356, column: 28, scope: !5401)
!5416 = !DILocation(line: 368, column: 28, scope: !5401)
!5417 = !DILocation(line: 368, column: 14, scope: !5401)
!5418 = !DILocation(line: 368, column: 46, scope: !5401)
!5419 = !DILocation(line: 369, column: 6, scope: !5401)
!5420 = distinct !DISubprogram(name: "check<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check17h16a279aec322990dE", scope: !5421, file: !5402, line: 362, type: !5422, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5430, retainedNodes: !5428)
!5421 = !DINamespace(name: "rfind", scope: !5403)
!5422 = !DISubroutineType(types: !5423)
!5423 = !{!5424, !1488}
!5424 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", scope: !5425, file: !2, size: 64, align: 32, elements: !5426, templateParams: !21, identifier: "6bc8905749db438434decb545cd891ea")
!5425 = !DINamespace(name: "check", scope: !5421)
!5426 = !{!5427}
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !5424, file: !2, baseType: !1488, size: 64, align: 32)
!5428 = !{!5429}
!5429 = !DILocalVariable(name: "predicate", arg: 1, scope: !5420, file: !5402, line: 362, type: !1488)
!5430 = !{!1121, !5431}
!5431 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1488)
!5432 = !DILocation(line: 362, column: 21, scope: !5420)
!5433 = !DILocation(line: 366, column: 10, scope: !5420)
!5434 = distinct !DISubprogram(name: "{closure#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h6f52b05c9f4e5dc7E", scope: !5425, file: !5402, line: 363, type: !5435, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5430, retainedNodes: !5438)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{!2118, !5437, !7, !574}
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", baseType: !5424, size: 32, align: 32, dwarfAddressSpace: 0)
!5438 = !{!5439, !5440, !5441}
!5439 = !DILocalVariable(name: "x", arg: 3, scope: !5434, file: !5402, line: 363, type: !574)
!5440 = !DILocalVariable(name: "predicate", scope: !5434, file: !5402, line: 362, type: !1488, align: 32)
!5441 = !DILocalVariable(arg: 2, scope: !5434, file: !5402, line: 363, type: !7)
!5442 = !DILocation(line: 362, column: 25, scope: !5434)
!5443 = !DILocation(line: 363, column: 19, scope: !5434)
!5444 = !DILocation(line: 363, column: 23, scope: !5434)
!5445 = !DILocation(line: 364, column: 20, scope: !5434)
!5446 = !DILocation(line: 364, column: 67, scope: !5434)
!5447 = !DILocation(line: 364, column: 17, scope: !5434)
!5448 = !DILocation(line: 364, column: 55, scope: !5434)
!5449 = !DILocation(line: 364, column: 36, scope: !5434)
!5450 = !DILocation(line: 365, column: 13, scope: !5434)
!5451 = !DILocation(line: 365, column: 14, scope: !5434)
!5452 = distinct !DISubprogram(name: "try_rfold<core::str::iter::Chars, (), core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>, core::ops::control_flow::ControlFlow<char, ()>>", linkageName: "_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17hb23917e3efb0dc81E", scope: !5403, file: !5402, line: 230, type: !5453, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5467, retainedNodes: !5455)
!5453 = !DISubroutineType(types: !5454)
!5454 = !{!2118, !5407, !7, !5424}
!5455 = !{!5456, !5457, !5458, !5459, !5461, !5463, !5465}
!5456 = !DILocalVariable(name: "self", arg: 1, scope: !5452, file: !5402, line: 230, type: !5407)
!5457 = !DILocalVariable(name: "init", arg: 2, scope: !5452, file: !5402, line: 230, type: !7)
!5458 = !DILocalVariable(name: "f", arg: 3, scope: !5452, file: !5402, line: 230, type: !5424)
!5459 = !DILocalVariable(name: "accum", scope: !5460, file: !5402, line: 236, type: !7, align: 8)
!5460 = distinct !DILexicalBlock(scope: !5452, file: !5402, line: 236, column: 9)
!5461 = !DILocalVariable(name: "x", scope: !5462, file: !5402, line: 237, type: !574, align: 32)
!5462 = distinct !DILexicalBlock(scope: !5460, file: !5402, line: 237, column: 46)
!5463 = !DILocalVariable(name: "residual", scope: !5464, file: !5402, line: 238, type: !2132, align: 32)
!5464 = distinct !DILexicalBlock(scope: !5462, file: !5402, line: 238, column: 32)
!5465 = !DILocalVariable(name: "val", scope: !5466, file: !5402, line: 238, type: !7, align: 8)
!5466 = distinct !DILexicalBlock(scope: !5462, file: !5402, line: 238, column: 21)
!5467 = !{!5412, !1052, !5468, !5469}
!5468 = !DITemplateTypeParameter(name: "F", type: !5424)
!5469 = !DITemplateTypeParameter(name: "R", type: !2118)
!5470 = !DILocation(line: 230, column: 27, scope: !5452)
!5471 = !DILocation(line: 230, column: 38, scope: !5452)
!5472 = !DILocation(line: 230, column: 47, scope: !5452)
!5473 = !DILocation(line: 236, column: 13, scope: !5460)
!5474 = !DILocation(line: 238, column: 21, scope: !5466)
!5475 = !DILocation(line: 237, column: 9, scope: !5460)
!5476 = !DILocation(line: 237, column: 34, scope: !5462)
!5477 = !DILocation(line: 237, column: 29, scope: !5462)
!5478 = !DILocation(line: 237, column: 19, scope: !5462)
!5479 = !DILocation(line: 237, column: 24, scope: !5462)
!5480 = !DILocation(line: 238, column: 21, scope: !5462)
!5481 = !DILocation(line: 240, column: 15, scope: !5460)
!5482 = !DILocation(line: 241, column: 5, scope: !5452)
!5483 = !DILocation(line: 238, column: 32, scope: !5462)
!5484 = !DILocation(line: 238, column: 32, scope: !5464)
!5485 = !DILocation(line: 238, column: 21, scope: !5464)
!5486 = !DILocation(line: 241, column: 6, scope: !5452)
!5487 = distinct !DISubprogram(name: "skip_while<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10skip_while17h11ee7767fd6e264bE", scope: !557, file: !5488, line: 1121, type: !5489, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5494, retainedNodes: !5491)
!5488 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "c7c2e5a973ab44115d21857ec4b2ea0f")
!5489 = !DISubroutineType(types: !5490)
!5490 = !{!1444, !1401, !1449}
!5491 = !{!5492, !5493}
!5492 = !DILocalVariable(name: "self", arg: 1, scope: !5487, file: !5488, line: 1121, type: !1401)
!5493 = !DILocalVariable(name: "predicate", arg: 2, scope: !5487, file: !5488, line: 1121, type: !1449)
!5494 = !{!5412, !1452}
!5495 = !DILocation(line: 1121, column: 22, scope: !5487)
!5496 = !DILocation(line: 1121, column: 28, scope: !5487)
!5497 = !DILocation(line: 1126, column: 9, scope: !5487)
!5498 = !DILocation(line: 1127, column: 6, scope: !5487)
!5499 = distinct !DISubprogram(name: "skip_while<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator10skip_while17h8364ad83c5b1951fE", scope: !557, file: !5488, line: 1121, type: !5500, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5505, retainedNodes: !5502)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{!1394, !1397, !1417}
!5502 = !{!5503, !5504}
!5503 = !DILocalVariable(name: "self", arg: 1, scope: !5499, file: !5488, line: 1121, type: !1397)
!5504 = !DILocalVariable(name: "predicate", arg: 2, scope: !5499, file: !5488, line: 1121, type: !1417)
!5505 = !{!5506, !1423}
!5506 = !DITemplateTypeParameter(name: "Self", type: !1397)
!5507 = !DILocation(line: 1121, column: 22, scope: !5499)
!5508 = !DILocation(line: 1121, column: 28, scope: !5499)
!5509 = !DILocation(line: 1126, column: 9, scope: !5499)
!5510 = !DILocation(line: 1127, column: 6, scope: !5499)
!5511 = distinct !DISubprogram(name: "map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, u16, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h14e1dfbe78c75388E", scope: !557, file: !5488, line: 773, type: !5512, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5517, retainedNodes: !5514)
!5512 = !DISubroutineType(types: !5513)
!5513 = !{!685, !499, !525}
!5514 = !{!5515, !5516}
!5515 = !DILocalVariable(name: "self", arg: 1, scope: !5511, file: !5488, line: 773, type: !499)
!5516 = !DILocalVariable(name: "f", arg: 2, scope: !5511, file: !5488, line: 773, type: !525)
!5517 = !{!5518, !780, !530}
!5518 = !DITemplateTypeParameter(name: "Self", type: !499)
!5519 = !DILocation(line: 773, column: 18, scope: !5511)
!5520 = !DILocation(line: 773, column: 24, scope: !5511)
!5521 = !DILocation(line: 778, column: 9, scope: !5511)
!5522 = !DILocation(line: 779, column: 6, scope: !5511)
!5523 = distinct !DISubprogram(name: "map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, u16, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h1a3302aedb79ddd0E", scope: !557, file: !5488, line: 773, type: !5524, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5517, retainedNodes: !5526)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{!496, !499, !525}
!5526 = !{!5527, !5528}
!5527 = !DILocalVariable(name: "self", arg: 1, scope: !5523, file: !5488, line: 773, type: !499)
!5528 = !DILocalVariable(name: "f", arg: 2, scope: !5523, file: !5488, line: 773, type: !525)
!5529 = !DILocation(line: 773, column: 18, scope: !5523)
!5530 = !DILocation(line: 773, column: 24, scope: !5523)
!5531 = !DILocation(line: 778, column: 9, scope: !5523)
!5532 = !DILocation(line: 779, column: 6, scope: !5523)
!5533 = distinct !DISubprogram(name: "map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, char, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h3ee1244166e89cfcE", scope: !557, file: !5488, line: 773, type: !5534, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5539, retainedNodes: !5536)
!5534 = !DISubroutineType(types: !5535)
!5535 = !{!679, !682, !693}
!5536 = !{!5537, !5538}
!5537 = !DILocalVariable(name: "self", arg: 1, scope: !5533, file: !5488, line: 773, type: !682)
!5538 = !DILocalVariable(name: "f", arg: 2, scope: !5533, file: !5488, line: 773, type: !693)
!5539 = !{!5540, !573, !697}
!5540 = !DITemplateTypeParameter(name: "Self", type: !682)
!5541 = !DILocation(line: 773, column: 18, scope: !5533)
!5542 = !DILocation(line: 773, column: 24, scope: !5533)
!5543 = !DILocation(line: 778, column: 9, scope: !5533)
!5544 = !DILocation(line: 779, column: 6, scope: !5533)
!5545 = distinct !DISubprogram(name: "map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, char, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h415efc52b5b920f3E", scope: !557, file: !5488, line: 773, type: !5546, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5551, retainedNodes: !5548)
!5546 = !DISubroutineType(types: !5547)
!5547 = !{!720, !723, !749}
!5548 = !{!5549, !5550}
!5549 = !DILocalVariable(name: "self", arg: 1, scope: !5545, file: !5488, line: 773, type: !723)
!5550 = !DILocalVariable(name: "f", arg: 2, scope: !5545, file: !5488, line: 773, type: !749)
!5551 = !{!5552, !573, !753}
!5552 = !DITemplateTypeParameter(name: "Self", type: !723)
!5553 = !DILocation(line: 773, column: 18, scope: !5545)
!5554 = !DILocation(line: 773, column: 24, scope: !5545)
!5555 = !DILocation(line: 778, column: 9, scope: !5545)
!5556 = !DILocation(line: 779, column: 6, scope: !5545)
!5557 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<&str>, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h41ebf98691fa9ee0E", scope: !557, file: !5488, line: 773, type: !5558, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5563, retainedNodes: !5560)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{!587, !590, !606}
!5560 = !{!5561, !5562}
!5561 = !DILocalVariable(name: "self", arg: 1, scope: !5557, file: !5488, line: 773, type: !590)
!5562 = !DILocalVariable(name: "f", arg: 2, scope: !5557, file: !5488, line: 773, type: !606)
!5563 = !{!5564, !621, !611}
!5564 = !DITemplateTypeParameter(name: "Self", type: !590)
!5565 = !DILocation(line: 773, column: 18, scope: !5557)
!5566 = !DILocation(line: 773, column: 24, scope: !5557)
!5567 = !DILocation(line: 778, column: 9, scope: !5557)
!5568 = !DILocation(line: 779, column: 6, scope: !5557)
!5569 = distinct !DISubprogram(name: "map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, char, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h9527faa05991fa5aE", scope: !557, file: !5488, line: 773, type: !5570, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5575, retainedNodes: !5572)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!488, !491, !548}
!5572 = !{!5573, !5574}
!5573 = !DILocalVariable(name: "self", arg: 1, scope: !5569, file: !5488, line: 773, type: !491)
!5574 = !DILocalVariable(name: "f", arg: 2, scope: !5569, file: !5488, line: 773, type: !548)
!5575 = !{!5576, !573, !553}
!5576 = !DITemplateTypeParameter(name: "Self", type: !491)
!5577 = !DILocation(line: 773, column: 18, scope: !5569)
!5578 = !DILocation(line: 773, column: 24, scope: !5569)
!5579 = !DILocation(line: 778, column: 9, scope: !5569)
!5580 = !DILocation(line: 779, column: 6, scope: !5569)
!5581 = distinct !DISubprogram(name: "map<core::slice::iter::Iter<bool>, u8, alloc::str::convert_while_ascii::{closure_env#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3map17h9763f4e8d9728936E", scope: !557, file: !5488, line: 773, type: !5582, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5587, retainedNodes: !5584)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{!633, !636, !653}
!5584 = !{!5585, !5586}
!5585 = !DILocalVariable(name: "self", arg: 1, scope: !5581, file: !5488, line: 773, type: !636)
!5586 = !DILocalVariable(name: "f", arg: 2, scope: !5581, file: !5488, line: 773, type: !653)
!5587 = !{!5588, !667, !658}
!5588 = !DITemplateTypeParameter(name: "Self", type: !636)
!5589 = !DILocation(line: 773, column: 18, scope: !5581)
!5590 = !DILocation(line: 773, column: 24, scope: !5581)
!5591 = !DILocation(line: 778, column: 9, scope: !5581)
!5592 = !DILocation(line: 779, column: 6, scope: !5581)
!5593 = distinct !DISubprogram(name: "rev<core::str::iter::Chars>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3rev17hd0b95926e983aec0E", scope: !557, file: !5488, line: 3351, type: !5594, scopeLine: 3351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5598, retainedNodes: !5596)
!5594 = !DISubroutineType(types: !5595)
!5595 = !{!1397, !1401}
!5596 = !{!5597}
!5597 = !DILocalVariable(name: "self", arg: 1, scope: !5593, file: !5488, line: 3351, type: !1401)
!5598 = !{!5412}
!5599 = !DILocation(line: 3351, column: 12, scope: !5593)
!5600 = !DILocation(line: 3355, column: 9, scope: !5593)
!5601 = !DILocation(line: 3356, column: 6, scope: !5593)
!5602 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>, usize>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3sum17h06caeb082aa12247E", scope: !557, file: !5488, line: 3576, type: !5603, scopeLine: 3576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5607, retainedNodes: !5605)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!9, !587}
!5605 = !{!5606}
!5606 = !DILocalVariable(name: "self", arg: 1, scope: !5602, file: !5488, line: 3576, type: !587)
!5607 = !{!5608, !5609}
!5608 = !DITemplateTypeParameter(name: "Self", type: !587)
!5609 = !DITemplateTypeParameter(name: "S", type: !9)
!5610 = !DILocation(line: 3576, column: 15, scope: !5602)
!5611 = !DILocation(line: 3581, column: 9, scope: !5602)
!5612 = !DILocation(line: 3582, column: 6, scope: !5602)
!5613 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>, u8>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3sum17hef28a6c18ae3e6b0E", scope: !557, file: !5488, line: 3576, type: !5614, scopeLine: 3576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5618, retainedNodes: !5616)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!24, !633}
!5616 = !{!5617}
!5617 = !DILocalVariable(name: "self", arg: 1, scope: !5613, file: !5488, line: 3576, type: !633)
!5618 = !{!5619, !5620}
!5619 = !DITemplateTypeParameter(name: "Self", type: !633)
!5620 = !DITemplateTypeParameter(name: "S", type: !24)
!5621 = !DILocation(line: 3576, column: 15, scope: !5613)
!5622 = !DILocation(line: 3581, column: 9, scope: !5613)
!5623 = !DILocation(line: 3582, column: 6, scope: !5613)
!5624 = distinct !DISubprogram(name: "find<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find17h5d6385388677c2c4E", scope: !557, file: !5488, line: 2877, type: !5625, scopeLine: 2877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5630, retainedNodes: !5627)
!5625 = !DISubroutineType(types: !5626)
!5626 = !{!1381, !5407, !1472}
!5627 = !{!5628, !5629}
!5628 = !DILocalVariable(name: "self", arg: 1, scope: !5624, file: !5488, line: 2877, type: !5407)
!5629 = !DILocalVariable(name: "predicate", arg: 2, scope: !5624, file: !5488, line: 2877, type: !1472)
!5630 = !{!5412, !5631}
!5631 = !DITemplateTypeParameter(name: "P", type: !1472)
!5632 = !DILocation(line: 2877, column: 16, scope: !5624)
!5633 = !DILocation(line: 2877, column: 27, scope: !5624)
!5634 = !DILocation(line: 2889, column: 27, scope: !5624)
!5635 = !DILocation(line: 2889, column: 14, scope: !5624)
!5636 = !DILocation(line: 2889, column: 45, scope: !5624)
!5637 = !DILocation(line: 2890, column: 6, scope: !5624)
!5638 = distinct !DISubprogram(name: "check<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find5check17ha0e0e1bf72428063E", scope: !5639, file: !5488, line: 2883, type: !5640, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5648, retainedNodes: !5646)
!5639 = !DINamespace(name: "find", scope: !557)
!5640 = !DISubroutineType(types: !5641)
!5641 = !{!5642, !1472}
!5642 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", scope: !5643, file: !2, size: 64, align: 32, elements: !5644, templateParams: !21, identifier: "8892fb738b86e900cb819bef51f610ca")
!5643 = !DINamespace(name: "check", scope: !5639)
!5644 = !{!5645}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !5642, file: !2, baseType: !1472, size: 64, align: 32)
!5646 = !{!5647}
!5647 = !DILocalVariable(name: "predicate", arg: 1, scope: !5638, file: !5488, line: 2883, type: !1472)
!5648 = !{!1121, !5649}
!5649 = !DITemplateTypeParameter(name: "impl FnMut(&T) -> bool", type: !1472)
!5650 = !DILocation(line: 2883, column: 21, scope: !5638)
!5651 = !DILocation(line: 2887, column: 10, scope: !5638)
!5652 = distinct !DISubprogram(name: "{closure#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4find5check28_$u7b$$u7b$closure$u7d$$u7d$17h7288b3ffa0d94002E", scope: !5643, file: !5488, line: 2884, type: !5653, scopeLine: 2884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5648, retainedNodes: !5656)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{!2118, !5655, !7, !574}
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::find::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>", baseType: !5642, size: 32, align: 32, dwarfAddressSpace: 0)
!5656 = !{!5657, !5658, !5659}
!5657 = !DILocalVariable(name: "x", arg: 3, scope: !5652, file: !5488, line: 2884, type: !574)
!5658 = !DILocalVariable(name: "predicate", scope: !5652, file: !5488, line: 2883, type: !1472, align: 32)
!5659 = !DILocalVariable(arg: 2, scope: !5652, file: !5488, line: 2884, type: !7)
!5660 = !DILocation(line: 2883, column: 25, scope: !5652)
!5661 = !DILocation(line: 2884, column: 19, scope: !5652)
!5662 = !DILocation(line: 2884, column: 23, scope: !5652)
!5663 = !DILocation(line: 2885, column: 20, scope: !5652)
!5664 = !DILocation(line: 2885, column: 67, scope: !5652)
!5665 = !DILocation(line: 2885, column: 17, scope: !5652)
!5666 = !DILocation(line: 2885, column: 55, scope: !5652)
!5667 = !DILocation(line: 2885, column: 36, scope: !5652)
!5668 = !DILocation(line: 2886, column: 13, scope: !5652)
!5669 = !DILocation(line: 2886, column: 14, scope: !5652)
!5670 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h11413b9cfc449ae0E", scope: !557, file: !5488, line: 2596, type: !5671, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5686, retainedNodes: !5678)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{null, !491, !7, !5673}
!5673 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", scope: !5674, file: !2, size: 32, align: 32, elements: !5675, templateParams: !21, identifier: "a1a6e72a6966f85f6f12d3bde9d6dcd2")
!5674 = !DINamespace(name: "map_fold", scope: !483)
!5675 = !{!5676, !5677}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5673, file: !2, baseType: !554, size: 32, align: 32)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5673, file: !2, baseType: !548, align: 8, offset: 32)
!5678 = !{!5679, !5680, !5681, !5682, !5684}
!5679 = !DILocalVariable(name: "self", arg: 1, scope: !5670, file: !5488, line: 2596, type: !491)
!5680 = !DILocalVariable(name: "init", arg: 2, scope: !5670, file: !5488, line: 2596, type: !7)
!5681 = !DILocalVariable(name: "f", arg: 3, scope: !5670, file: !5488, line: 2596, type: !5673)
!5682 = !DILocalVariable(name: "accum", scope: !5683, file: !5488, line: 2601, type: !7, align: 8)
!5683 = distinct !DILexicalBlock(scope: !5670, file: !5488, line: 2601, column: 9)
!5684 = !DILocalVariable(name: "x", scope: !5685, file: !5488, line: 2602, type: !1112, align: 32)
!5685 = distinct !DILexicalBlock(scope: !5683, file: !5488, line: 2602, column: 41)
!5686 = !{!5576, !1052, !5687}
!5687 = !DITemplateTypeParameter(name: "F", type: !5673)
!5688 = !DILocation(line: 2596, column: 19, scope: !5670)
!5689 = !DILocation(line: 2596, column: 29, scope: !5670)
!5690 = !DILocation(line: 2596, column: 38, scope: !5670)
!5691 = !DILocation(line: 2601, column: 13, scope: !5683)
!5692 = !DILocation(line: 2602, column: 24, scope: !5685)
!5693 = !DILocation(line: 2602, column: 9, scope: !5683)
!5694 = !DILocation(line: 2602, column: 34, scope: !5685)
!5695 = !DILocation(line: 2602, column: 29, scope: !5685)
!5696 = !DILocation(line: 2602, column: 19, scope: !5685)
!5697 = !DILocation(line: 2603, column: 21, scope: !5685)
!5698 = !DILocation(line: 2606, column: 6, scope: !5670)
!5699 = !DILocation(line: 2596, column: 5, scope: !5670)
!5700 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, (), core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h34daa7dcf129f3aeE", scope: !557, file: !5488, line: 2596, type: !5701, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5715, retainedNodes: !5707)
!5701 = !DISubroutineType(types: !5702)
!5702 = !{null, !723, !7, !5703}
!5703 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", scope: !5674, file: !2, size: 32, align: 32, elements: !5704, templateParams: !21, identifier: "5b0dc4349868a555d2b632e9f3b05fa3")
!5704 = !{!5705, !5706}
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5703, file: !2, baseType: !754, size: 32, align: 32)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5703, file: !2, baseType: !749, align: 8, offset: 32)
!5707 = !{!5708, !5709, !5710, !5711, !5713}
!5708 = !DILocalVariable(name: "self", arg: 1, scope: !5700, file: !5488, line: 2596, type: !723)
!5709 = !DILocalVariable(name: "init", arg: 2, scope: !5700, file: !5488, line: 2596, type: !7)
!5710 = !DILocalVariable(name: "f", arg: 3, scope: !5700, file: !5488, line: 2596, type: !5703)
!5711 = !DILocalVariable(name: "accum", scope: !5712, file: !5488, line: 2601, type: !7, align: 8)
!5712 = distinct !DILexicalBlock(scope: !5700, file: !5488, line: 2601, column: 9)
!5713 = !DILocalVariable(name: "x", scope: !5714, file: !5488, line: 2602, type: !1112, align: 32)
!5714 = distinct !DILexicalBlock(scope: !5712, file: !5488, line: 2602, column: 41)
!5715 = !{!5552, !1052, !5716}
!5716 = !DITemplateTypeParameter(name: "F", type: !5703)
!5717 = !DILocation(line: 2596, column: 19, scope: !5700)
!5718 = !DILocation(line: 2596, column: 29, scope: !5700)
!5719 = !DILocation(line: 2596, column: 38, scope: !5700)
!5720 = !DILocation(line: 2601, column: 13, scope: !5712)
!5721 = !DILocation(line: 2602, column: 24, scope: !5714)
!5722 = !DILocation(line: 2602, column: 9, scope: !5712)
!5723 = !DILocation(line: 2602, column: 34, scope: !5714)
!5724 = !DILocation(line: 2602, column: 29, scope: !5714)
!5725 = !DILocation(line: 2602, column: 19, scope: !5714)
!5726 = !DILocation(line: 2603, column: 21, scope: !5714)
!5727 = !DILocation(line: 2606, column: 6, scope: !5700)
!5728 = !DILocation(line: 2596, column: 5, scope: !5700)
!5729 = distinct !DISubprogram(name: "fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17hecebd7358d334c47E", scope: !557, file: !5488, line: 2596, type: !5730, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5744, retainedNodes: !5736)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{null, !682, !7, !5732}
!5732 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", scope: !5674, file: !2, size: 32, align: 32, elements: !5733, templateParams: !21, identifier: "d15288cf769c3c3b35e80f950328ffed")
!5733 = !{!5734, !5735}
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5732, file: !2, baseType: !698, size: 32, align: 32)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !5732, file: !2, baseType: !693, align: 8, offset: 32)
!5736 = !{!5737, !5738, !5739, !5740, !5742}
!5737 = !DILocalVariable(name: "self", arg: 1, scope: !5729, file: !5488, line: 2596, type: !682)
!5738 = !DILocalVariable(name: "init", arg: 2, scope: !5729, file: !5488, line: 2596, type: !7)
!5739 = !DILocalVariable(name: "f", arg: 3, scope: !5729, file: !5488, line: 2596, type: !5732)
!5740 = !DILocalVariable(name: "accum", scope: !5741, file: !5488, line: 2601, type: !7, align: 8)
!5741 = distinct !DILexicalBlock(scope: !5729, file: !5488, line: 2601, column: 9)
!5742 = !DILocalVariable(name: "x", scope: !5743, file: !5488, line: 2602, type: !1112, align: 32)
!5743 = distinct !DILexicalBlock(scope: !5741, file: !5488, line: 2602, column: 41)
!5744 = !{!5540, !1052, !5745}
!5745 = !DITemplateTypeParameter(name: "F", type: !5732)
!5746 = !DILocation(line: 2596, column: 19, scope: !5729)
!5747 = !DILocation(line: 2596, column: 29, scope: !5729)
!5748 = !DILocation(line: 2596, column: 38, scope: !5729)
!5749 = !DILocation(line: 2601, column: 13, scope: !5741)
!5750 = !DILocation(line: 2602, column: 24, scope: !5743)
!5751 = !DILocation(line: 2602, column: 9, scope: !5741)
!5752 = !DILocation(line: 2602, column: 34, scope: !5743)
!5753 = !DILocation(line: 2602, column: 29, scope: !5743)
!5754 = !DILocation(line: 2602, column: 19, scope: !5743)
!5755 = !DILocation(line: 2603, column: 21, scope: !5743)
!5756 = !DILocation(line: 2606, column: 6, scope: !5729)
!5757 = !DILocation(line: 2596, column: 5, scope: !5729)
!5758 = distinct !DISubprogram(name: "cloned<core::slice::iter::Iter<u16>, u16>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6cloned17hafc97ffc625f8677E", scope: !557, file: !5488, line: 3466, type: !5759, scopeLine: 3466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5763, retainedNodes: !5761)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{!726, !730}
!5761 = !{!5762}
!5762 = !DILocalVariable(name: "self", arg: 1, scope: !5758, file: !5488, line: 3466, type: !730)
!5763 = !{!5764, !539}
!5764 = !DITemplateTypeParameter(name: "Self", type: !730)
!5765 = !DILocation(line: 3466, column: 22, scope: !5758)
!5766 = !DILocation(line: 3471, column: 9, scope: !5758)
!5767 = !DILocation(line: 3472, column: 6, scope: !5758)
!5768 = distinct !DISubprogram(name: "copied<core::slice::iter::Iter<[u8; 2]>, [u8; 2]>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6copied17h4c1953df581c139cE", scope: !557, file: !5488, line: 3418, type: !5769, scopeLine: 3418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5773, retainedNodes: !5771)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{!499, !503}
!5771 = !{!5772}
!5772 = !DILocalVariable(name: "self", arg: 1, scope: !5768, file: !5488, line: 3418, type: !503)
!5773 = !{!5774, !515}
!5774 = !DITemplateTypeParameter(name: "Self", type: !503)
!5775 = !DILocation(line: 3418, column: 22, scope: !5768)
!5776 = !DILocation(line: 3423, column: 9, scope: !5768)
!5777 = !DILocation(line: 3424, column: 6, scope: !5768)
!5778 = distinct !DISubprogram(name: "collect<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h00b6c60aaf12ce63E", scope: !557, file: !5488, line: 2015, type: !5779, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5794, retainedNodes: !5781)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!178, !488}
!5781 = !{!5782, !5783, !5785, !5791}
!5782 = !DILocalVariable(name: "self", arg: 1, scope: !5778, file: !5488, line: 2015, type: !488)
!5783 = !DILocalVariable(name: "hint", scope: !5784, file: !5488, line: 2024, type: !802, align: 32)
!5784 = distinct !DILexicalBlock(scope: !5778, file: !5488, line: 2024, column: 13)
!5785 = !DILocalVariable(name: "args", scope: !5786, file: !5488, line: 2025, type: !5788, align: 32)
!5786 = !DILexicalBlockFile(scope: !5787, file: !5488, discriminator: 0)
!5787 = distinct !DILexicalBlock(scope: !5784, file: !304, line: 62, column: 38)
!5788 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&(usize, core::option::Option<usize>))", file: !2, size: 32, align: 32, elements: !5789, templateParams: !21, identifier: "3554d2f59fe06b4b58c60f39420a5e7")
!5789 = !{!5790}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !5788, file: !2, baseType: !2325, size: 32, align: 32)
!5791 = !DILocalVariable(name: "args", scope: !5792, file: !5488, line: 2025, type: !311, align: 32)
!5792 = !DILexicalBlockFile(scope: !5793, file: !5488, discriminator: 0)
!5793 = distinct !DILexicalBlock(scope: !5787, file: !304, line: 62, column: 38)
!5794 = !{!5795, !5796}
!5795 = !DITemplateTypeParameter(name: "Self", type: !488)
!5796 = !DITemplateTypeParameter(name: "B", type: !178)
!5797 = !DILocation(line: 2015, column: 45, scope: !5778)
!5798 = !DILocation(line: 2024, column: 17, scope: !5784)
!5799 = !DILocation(line: 2025, column: 13, scope: !5792)
!5800 = !DILocation(line: 2024, column: 29, scope: !5778)
!5801 = !DILocation(line: 2025, column: 21, scope: !5784)
!5802 = !DILocation(line: 2025, column: 28, scope: !5784)
!5803 = !DILocation(line: 2025, column: 13, scope: !5784)
!5804 = !DILocation(line: 2025, column: 13, scope: !5786)
!5805 = !DILocation(line: 2028, column: 33, scope: !5778)
!5806 = !DILocation(line: 2028, column: 9, scope: !5778)
!5807 = !DILocation(line: 2029, column: 6, scope: !5778)
!5808 = distinct !DISubprogram(name: "collect<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h0534f5381279e41fE", scope: !557, file: !5488, line: 2015, type: !5809, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5821, retainedNodes: !5811)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!178, !948}
!5811 = !{!5812, !5813, !5815, !5818}
!5812 = !DILocalVariable(name: "self", arg: 1, scope: !5808, file: !5488, line: 2015, type: !948)
!5813 = !DILocalVariable(name: "hint", scope: !5814, file: !5488, line: 2024, type: !802, align: 32)
!5814 = distinct !DILexicalBlock(scope: !5808, file: !5488, line: 2024, column: 13)
!5815 = !DILocalVariable(name: "args", scope: !5816, file: !5488, line: 2025, type: !5788, align: 32)
!5816 = !DILexicalBlockFile(scope: !5817, file: !5488, discriminator: 0)
!5817 = distinct !DILexicalBlock(scope: !5814, file: !304, line: 62, column: 38)
!5818 = !DILocalVariable(name: "args", scope: !5819, file: !5488, line: 2025, type: !311, align: 32)
!5819 = !DILexicalBlockFile(scope: !5820, file: !5488, discriminator: 0)
!5820 = distinct !DILexicalBlock(scope: !5817, file: !304, line: 62, column: 38)
!5821 = !{!5822, !5796}
!5822 = !DITemplateTypeParameter(name: "Self", type: !948)
!5823 = !DILocation(line: 2015, column: 45, scope: !5808)
!5824 = !DILocation(line: 2024, column: 17, scope: !5814)
!5825 = !DILocation(line: 2025, column: 13, scope: !5819)
!5826 = !DILocation(line: 2024, column: 29, scope: !5808)
!5827 = !DILocation(line: 2025, column: 21, scope: !5814)
!5828 = !DILocation(line: 2025, column: 28, scope: !5814)
!5829 = !DILocation(line: 2025, column: 13, scope: !5814)
!5830 = !DILocation(line: 2025, column: 13, scope: !5816)
!5831 = !DILocation(line: 2028, column: 33, scope: !5808)
!5832 = !DILocation(line: 2028, column: 9, scope: !5808)
!5833 = !DILocation(line: 2029, column: 6, scope: !5808)
!5834 = distinct !DISubprogram(name: "collect<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h4baab2942ae0c3e1E", scope: !557, file: !5488, line: 2015, type: !5835, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5847, retainedNodes: !5837)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!178, !679}
!5837 = !{!5838, !5839, !5841, !5844}
!5838 = !DILocalVariable(name: "self", arg: 1, scope: !5834, file: !5488, line: 2015, type: !679)
!5839 = !DILocalVariable(name: "hint", scope: !5840, file: !5488, line: 2024, type: !802, align: 32)
!5840 = distinct !DILexicalBlock(scope: !5834, file: !5488, line: 2024, column: 13)
!5841 = !DILocalVariable(name: "args", scope: !5842, file: !5488, line: 2025, type: !5788, align: 32)
!5842 = !DILexicalBlockFile(scope: !5843, file: !5488, discriminator: 0)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !304, line: 62, column: 38)
!5844 = !DILocalVariable(name: "args", scope: !5845, file: !5488, line: 2025, type: !311, align: 32)
!5845 = !DILexicalBlockFile(scope: !5846, file: !5488, discriminator: 0)
!5846 = distinct !DILexicalBlock(scope: !5843, file: !304, line: 62, column: 38)
!5847 = !{!5848, !5796}
!5848 = !DITemplateTypeParameter(name: "Self", type: !679)
!5849 = !DILocation(line: 2015, column: 45, scope: !5834)
!5850 = !DILocation(line: 2024, column: 17, scope: !5840)
!5851 = !DILocation(line: 2025, column: 13, scope: !5845)
!5852 = !DILocation(line: 2024, column: 29, scope: !5834)
!5853 = !DILocation(line: 2025, column: 21, scope: !5840)
!5854 = !DILocation(line: 2025, column: 28, scope: !5840)
!5855 = !DILocation(line: 2025, column: 13, scope: !5840)
!5856 = !DILocation(line: 2025, column: 13, scope: !5842)
!5857 = !DILocation(line: 2028, column: 33, scope: !5834)
!5858 = !DILocation(line: 2028, column: 9, scope: !5834)
!5859 = !DILocation(line: 2029, column: 6, scope: !5834)
!5860 = distinct !DISubprogram(name: "collect<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h9155694014f277cfE", scope: !557, file: !5488, line: 2015, type: !5861, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5873, retainedNodes: !5863)
!5861 = !DISubroutineType(types: !5862)
!5862 = !{!178, !720}
!5863 = !{!5864, !5865, !5867, !5870}
!5864 = !DILocalVariable(name: "self", arg: 1, scope: !5860, file: !5488, line: 2015, type: !720)
!5865 = !DILocalVariable(name: "hint", scope: !5866, file: !5488, line: 2024, type: !802, align: 32)
!5866 = distinct !DILexicalBlock(scope: !5860, file: !5488, line: 2024, column: 13)
!5867 = !DILocalVariable(name: "args", scope: !5868, file: !5488, line: 2025, type: !5788, align: 32)
!5868 = !DILexicalBlockFile(scope: !5869, file: !5488, discriminator: 0)
!5869 = distinct !DILexicalBlock(scope: !5866, file: !304, line: 62, column: 38)
!5870 = !DILocalVariable(name: "args", scope: !5871, file: !5488, line: 2025, type: !311, align: 32)
!5871 = !DILexicalBlockFile(scope: !5872, file: !5488, discriminator: 0)
!5872 = distinct !DILexicalBlock(scope: !5869, file: !304, line: 62, column: 38)
!5873 = !{!5874, !5796}
!5874 = !DITemplateTypeParameter(name: "Self", type: !720)
!5875 = !DILocation(line: 2015, column: 45, scope: !5860)
!5876 = !DILocation(line: 2024, column: 17, scope: !5866)
!5877 = !DILocation(line: 2025, column: 13, scope: !5871)
!5878 = !DILocation(line: 2024, column: 29, scope: !5860)
!5879 = !DILocation(line: 2025, column: 21, scope: !5866)
!5880 = !DILocation(line: 2025, column: 28, scope: !5866)
!5881 = !DILocation(line: 2025, column: 13, scope: !5866)
!5882 = !DILocation(line: 2025, column: 13, scope: !5868)
!5883 = !DILocation(line: 2028, column: 33, scope: !5860)
!5884 = !DILocation(line: 2028, column: 9, scope: !5860)
!5885 = !DILocation(line: 2029, column: 6, scope: !5860)
!5886 = distinct !DISubprogram(name: "collect<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17h95e39428dc266a7cE", scope: !557, file: !5488, line: 2015, type: !1650, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5897, retainedNodes: !5887)
!5887 = !{!5888, !5889, !5891, !5894}
!5888 = !DILocalVariable(name: "self", arg: 1, scope: !5886, file: !5488, line: 2015, type: !491)
!5889 = !DILocalVariable(name: "hint", scope: !5890, file: !5488, line: 2024, type: !802, align: 32)
!5890 = distinct !DILexicalBlock(scope: !5886, file: !5488, line: 2024, column: 13)
!5891 = !DILocalVariable(name: "args", scope: !5892, file: !5488, line: 2025, type: !5788, align: 32)
!5892 = !DILexicalBlockFile(scope: !5893, file: !5488, discriminator: 0)
!5893 = distinct !DILexicalBlock(scope: !5890, file: !304, line: 62, column: 38)
!5894 = !DILocalVariable(name: "args", scope: !5895, file: !5488, line: 2025, type: !311, align: 32)
!5895 = !DILexicalBlockFile(scope: !5896, file: !5488, discriminator: 0)
!5896 = distinct !DILexicalBlock(scope: !5893, file: !304, line: 62, column: 38)
!5897 = !{!5576, !5898}
!5898 = !DITemplateTypeParameter(name: "B", type: !1625)
!5899 = !DILocation(line: 2015, column: 45, scope: !5886)
!5900 = !DILocation(line: 2024, column: 17, scope: !5890)
!5901 = !DILocation(line: 2025, column: 13, scope: !5895)
!5902 = !DILocation(line: 2024, column: 29, scope: !5886)
!5903 = !DILocation(line: 2025, column: 21, scope: !5890)
!5904 = !DILocation(line: 2025, column: 28, scope: !5890)
!5905 = !DILocation(line: 2025, column: 13, scope: !5890)
!5906 = !DILocation(line: 2025, column: 13, scope: !5892)
!5907 = !DILocation(line: 2028, column: 33, scope: !5886)
!5908 = !DILocation(line: 2028, column: 9, scope: !5886)
!5909 = !DILocation(line: 2029, column: 6, scope: !5886)
!5910 = distinct !DISubprogram(name: "collect<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17hab070e2b81ea11acE", scope: !557, file: !5488, line: 2015, type: !5911, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5923, retainedNodes: !5913)
!5911 = !DISubroutineType(types: !5912)
!5912 = !{!178, !1012}
!5913 = !{!5914, !5915, !5917, !5920}
!5914 = !DILocalVariable(name: "self", arg: 1, scope: !5910, file: !5488, line: 2015, type: !1012)
!5915 = !DILocalVariable(name: "hint", scope: !5916, file: !5488, line: 2024, type: !802, align: 32)
!5916 = distinct !DILexicalBlock(scope: !5910, file: !5488, line: 2024, column: 13)
!5917 = !DILocalVariable(name: "args", scope: !5918, file: !5488, line: 2025, type: !5788, align: 32)
!5918 = !DILexicalBlockFile(scope: !5919, file: !5488, discriminator: 0)
!5919 = distinct !DILexicalBlock(scope: !5916, file: !304, line: 62, column: 38)
!5920 = !DILocalVariable(name: "args", scope: !5921, file: !5488, line: 2025, type: !311, align: 32)
!5921 = !DILexicalBlockFile(scope: !5922, file: !5488, discriminator: 0)
!5922 = distinct !DILexicalBlock(scope: !5919, file: !304, line: 62, column: 38)
!5923 = !{!5924, !5796}
!5924 = !DITemplateTypeParameter(name: "Self", type: !1012)
!5925 = !DILocation(line: 2015, column: 45, scope: !5910)
!5926 = !DILocation(line: 2024, column: 17, scope: !5916)
!5927 = !DILocation(line: 2025, column: 13, scope: !5921)
!5928 = !DILocation(line: 2024, column: 29, scope: !5910)
!5929 = !DILocation(line: 2025, column: 21, scope: !5916)
!5930 = !DILocation(line: 2025, column: 28, scope: !5916)
!5931 = !DILocation(line: 2025, column: 13, scope: !5916)
!5932 = !DILocation(line: 2025, column: 13, scope: !5918)
!5933 = !DILocation(line: 2028, column: 33, scope: !5910)
!5934 = !DILocation(line: 2028, column: 9, scope: !5910)
!5935 = !DILocation(line: 2029, column: 6, scope: !5910)
!5936 = distinct !DISubprogram(name: "collect<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect17hf987cbf227505394E", scope: !557, file: !5488, line: 2015, type: !1623, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5947, retainedNodes: !5937)
!5937 = !{!5938, !5939, !5941, !5944}
!5938 = !DILocalVariable(name: "self", arg: 1, scope: !5936, file: !5488, line: 2015, type: !682)
!5939 = !DILocalVariable(name: "hint", scope: !5940, file: !5488, line: 2024, type: !802, align: 32)
!5940 = distinct !DILexicalBlock(scope: !5936, file: !5488, line: 2024, column: 13)
!5941 = !DILocalVariable(name: "args", scope: !5942, file: !5488, line: 2025, type: !5788, align: 32)
!5942 = !DILexicalBlockFile(scope: !5943, file: !5488, discriminator: 0)
!5943 = distinct !DILexicalBlock(scope: !5940, file: !304, line: 62, column: 38)
!5944 = !DILocalVariable(name: "args", scope: !5945, file: !5488, line: 2025, type: !311, align: 32)
!5945 = !DILexicalBlockFile(scope: !5946, file: !5488, discriminator: 0)
!5946 = distinct !DILexicalBlock(scope: !5943, file: !304, line: 62, column: 38)
!5947 = !{!5540, !5898}
!5948 = !DILocation(line: 2015, column: 45, scope: !5936)
!5949 = !DILocation(line: 2024, column: 17, scope: !5940)
!5950 = !DILocation(line: 2025, column: 13, scope: !5945)
!5951 = !DILocation(line: 2024, column: 29, scope: !5936)
!5952 = !DILocation(line: 2025, column: 21, scope: !5940)
!5953 = !DILocation(line: 2025, column: 28, scope: !5940)
!5954 = !DILocation(line: 2025, column: 13, scope: !5940)
!5955 = !DILocation(line: 2025, column: 13, scope: !5942)
!5956 = !DILocation(line: 2028, column: 33, scope: !5936)
!5957 = !DILocation(line: 2028, column: 9, scope: !5936)
!5958 = !DILocation(line: 2029, column: 6, scope: !5936)
!5959 = distinct !DISubprogram(name: "{closure#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h069203ada9279684E", scope: !5960, file: !5488, line: 2025, type: !5961, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5897, retainedNodes: !5966)
!5960 = !DINamespace(name: "collect", scope: !557)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!643, !5963, !9}
!5963 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", scope: !5960, file: !2, size: 32, align: 32, elements: !5964, templateParams: !21, identifier: "e67679e65643b1f9a7f9b6a8847949d7")
!5964 = !{!5965}
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__hint__0", scope: !5963, file: !2, baseType: !93, size: 32, align: 32)
!5966 = !{!5967, !5968}
!5967 = !DILocalVariable(name: "high", arg: 2, scope: !5959, file: !5488, line: 2025, type: !9)
!5968 = !DILocalVariable(name: "hint__0", scope: !5959, file: !5488, line: 2024, type: !9, align: 32)
!5969 = !DILocation(line: 2024, column: 17, scope: !5959)
!5970 = !DILocation(line: 2025, column: 40, scope: !5959)
!5971 = !DILocation(line: 2025, column: 54, scope: !5959)
!5972 = !DILocation(line: 2025, column: 46, scope: !5959)
!5973 = !DILocation(line: 2025, column: 60, scope: !5959)
!5974 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h93a90841749055ddE", scope: !5960, file: !5488, line: 2025, type: !5975, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5923, retainedNodes: !5980)
!5975 = !DISubroutineType(types: !5976)
!5976 = !{!643, !5977, !9}
!5977 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", scope: !5960, file: !2, size: 32, align: 32, elements: !5978, templateParams: !21, identifier: "520e0446af12f6cac8e648dbddd28650")
!5978 = !{!5979}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__hint__0", scope: !5977, file: !2, baseType: !93, size: 32, align: 32)
!5980 = !{!5981, !5982}
!5981 = !DILocalVariable(name: "high", arg: 2, scope: !5974, file: !5488, line: 2025, type: !9)
!5982 = !DILocalVariable(name: "hint__0", scope: !5974, file: !5488, line: 2024, type: !9, align: 32)
!5983 = !DILocation(line: 2024, column: 17, scope: !5974)
!5984 = !DILocation(line: 2025, column: 40, scope: !5974)
!5985 = !DILocation(line: 2025, column: 54, scope: !5974)
!5986 = !DILocation(line: 2025, column: 46, scope: !5974)
!5987 = !DILocation(line: 2025, column: 60, scope: !5974)
!5988 = distinct !DISubprogram(name: "{closure#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17h9e05c36c473fcb89E", scope: !5960, file: !5488, line: 2025, type: !5989, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5947, retainedNodes: !5994)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{!643, !5991, !9}
!5991 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>", scope: !5960, file: !2, size: 32, align: 32, elements: !5992, templateParams: !21, identifier: "d1b5e24eb8fd08559dcad28639ae662a")
!5992 = !{!5993}
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__hint__0", scope: !5991, file: !2, baseType: !93, size: 32, align: 32)
!5994 = !{!5995, !5996}
!5995 = !DILocalVariable(name: "high", arg: 2, scope: !5988, file: !5488, line: 2025, type: !9)
!5996 = !DILocalVariable(name: "hint__0", scope: !5988, file: !5488, line: 2024, type: !9, align: 32)
!5997 = !DILocation(line: 2024, column: 17, scope: !5988)
!5998 = !DILocation(line: 2025, column: 40, scope: !5988)
!5999 = !DILocation(line: 2025, column: 54, scope: !5988)
!6000 = !DILocation(line: 2025, column: 46, scope: !5988)
!6001 = !DILocation(line: 2025, column: 60, scope: !5988)
!6002 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17ha74fa3270f5d2a29E", scope: !5960, file: !5488, line: 2025, type: !6003, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5794, retainedNodes: !6008)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!643, !6005, !9}
!6005 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::String>", scope: !5960, file: !2, size: 32, align: 32, elements: !6006, templateParams: !21, identifier: "8008c8c03101e424341218b90e14b71d")
!6006 = !{!6007}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__hint__0", scope: !6005, file: !2, baseType: !93, size: 32, align: 32)
!6008 = !{!6009, !6010}
!6009 = !DILocalVariable(name: "high", arg: 2, scope: !6002, file: !5488, line: 2025, type: !9)
!6010 = !DILocalVariable(name: "hint__0", scope: !6002, file: !5488, line: 2024, type: !9, align: 32)
!6011 = !DILocation(line: 2024, column: 17, scope: !6002)
!6012 = !DILocation(line: 2025, column: 40, scope: !6002)
!6013 = !DILocation(line: 2025, column: 54, scope: !6002)
!6014 = !DILocation(line: 2025, column: 46, scope: !6002)
!6015 = !DILocation(line: 2025, column: 60, scope: !6002)
!6016 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17hbb1f206f45e00d6bE", scope: !5960, file: !5488, line: 2025, type: !6017, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5873, retainedNodes: !6022)
!6017 = !DISubroutineType(types: !6018)
!6018 = !{!643, !6019, !9}
!6019 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::String>", scope: !5960, file: !2, size: 32, align: 32, elements: !6020, templateParams: !21, identifier: "7952b7051e44a83179d302aea9b571be")
!6020 = !{!6021}
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__hint__0", scope: !6019, file: !2, baseType: !93, size: 32, align: 32)
!6022 = !{!6023, !6024}
!6023 = !DILocalVariable(name: "high", arg: 2, scope: !6016, file: !5488, line: 2025, type: !9)
!6024 = !DILocalVariable(name: "hint__0", scope: !6016, file: !5488, line: 2024, type: !9, align: 32)
!6025 = !DILocation(line: 2024, column: 17, scope: !6016)
!6026 = !DILocation(line: 2025, column: 40, scope: !6016)
!6027 = !DILocation(line: 2025, column: 54, scope: !6016)
!6028 = !DILocation(line: 2025, column: 46, scope: !6016)
!6029 = !DILocation(line: 2025, column: 60, scope: !6016)
!6030 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17he0e16c92ec0ca111E", scope: !5960, file: !5488, line: 2025, type: !6031, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5847, retainedNodes: !6036)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{!643, !6033, !9}
!6033 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::String>", scope: !5960, file: !2, size: 32, align: 32, elements: !6034, templateParams: !21, identifier: "6252e4cc1987402cbbffbe647b96b366")
!6034 = !{!6035}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__hint__0", scope: !6033, file: !2, baseType: !93, size: 32, align: 32)
!6036 = !{!6037, !6038}
!6037 = !DILocalVariable(name: "high", arg: 2, scope: !6030, file: !5488, line: 2025, type: !9)
!6038 = !DILocalVariable(name: "hint__0", scope: !6030, file: !5488, line: 2024, type: !9, align: 32)
!6039 = !DILocation(line: 2024, column: 17, scope: !6030)
!6040 = !DILocation(line: 2025, column: 40, scope: !6030)
!6041 = !DILocation(line: 2025, column: 54, scope: !6030)
!6042 = !DILocation(line: 2025, column: 46, scope: !6030)
!6043 = !DILocation(line: 2025, column: 60, scope: !6030)
!6044 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", linkageName: "_ZN4core4iter6traits8iterator8Iterator7collect28_$u7b$$u7b$closure$u7d$$u7d$17hfceb720a7bf54a7dE", scope: !5960, file: !5488, line: 2025, type: !6045, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !5821, retainedNodes: !6050)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!643, !6047, !9}
!6047 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>", scope: !5960, file: !2, size: 32, align: 32, elements: !6048, templateParams: !21, identifier: "ad053e38a55e0c2fcf24007cea3a35cf")
!6048 = !{!6049}
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__hint__0", scope: !6047, file: !2, baseType: !93, size: 32, align: 32)
!6050 = !{!6051, !6052}
!6051 = !DILocalVariable(name: "high", arg: 2, scope: !6044, file: !5488, line: 2025, type: !9)
!6052 = !DILocalVariable(name: "hint__0", scope: !6044, file: !5488, line: 2024, type: !9, align: 32)
!6053 = !DILocation(line: 2024, column: 17, scope: !6044)
!6054 = !DILocation(line: 2025, column: 40, scope: !6044)
!6055 = !DILocation(line: 2025, column: 54, scope: !6044)
!6056 = !DILocation(line: 2025, column: 46, scope: !6044)
!6057 = !DILocation(line: 2025, column: 60, scope: !6044)
!6058 = distinct !DISubprogram(name: "for_each<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h0645607ed23fde21E", scope: !557, file: !5488, line: 818, type: !6059, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6064, retainedNodes: !6061)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{null, !679, !701}
!6061 = !{!6062, !6063}
!6062 = !DILocalVariable(name: "self", arg: 1, scope: !6058, file: !5488, line: 818, type: !679)
!6063 = !DILocalVariable(name: "f", arg: 2, scope: !6058, file: !5488, line: 818, type: !701)
!6064 = !{!5848, !6065}
!6065 = !DITemplateTypeParameter(name: "F", type: !701)
!6066 = !DILocation(line: 818, column: 20, scope: !6058)
!6067 = !DILocation(line: 818, column: 26, scope: !6058)
!6068 = !DILocation(line: 828, column: 23, scope: !6058)
!6069 = !DILocation(line: 828, column: 14, scope: !6058)
!6070 = !DILocation(line: 829, column: 6, scope: !6058)
!6071 = distinct !DISubprogram(name: "for_each<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h859a065e4dff12edE", scope: !557, file: !5488, line: 818, type: !6072, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6077, retainedNodes: !6074)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{null, !1012, !1020}
!6074 = !{!6075, !6076}
!6075 = !DILocalVariable(name: "self", arg: 1, scope: !6071, file: !5488, line: 818, type: !1012)
!6076 = !DILocalVariable(name: "f", arg: 2, scope: !6071, file: !5488, line: 818, type: !1020)
!6077 = !{!5924, !6078}
!6078 = !DITemplateTypeParameter(name: "F", type: !1020)
!6079 = !DILocation(line: 818, column: 20, scope: !6071)
!6080 = !DILocation(line: 818, column: 26, scope: !6071)
!6081 = !DILocation(line: 828, column: 23, scope: !6071)
!6082 = !DILocation(line: 828, column: 14, scope: !6071)
!6083 = !DILocation(line: 829, column: 6, scope: !6071)
!6084 = distinct !DISubprogram(name: "for_each<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17h8e14239f11058b32E", scope: !557, file: !5488, line: 818, type: !6085, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6090, retainedNodes: !6087)
!6085 = !DISubroutineType(types: !6086)
!6086 = !{null, !948, !993}
!6087 = !{!6088, !6089}
!6088 = !DILocalVariable(name: "self", arg: 1, scope: !6084, file: !5488, line: 818, type: !948)
!6089 = !DILocalVariable(name: "f", arg: 2, scope: !6084, file: !5488, line: 818, type: !993)
!6090 = !{!5822, !6091}
!6091 = !DITemplateTypeParameter(name: "F", type: !993)
!6092 = !DILocation(line: 818, column: 20, scope: !6084)
!6093 = !DILocation(line: 818, column: 26, scope: !6084)
!6094 = !DILocation(line: 828, column: 23, scope: !6084)
!6095 = !DILocation(line: 828, column: 14, scope: !6084)
!6096 = !DILocation(line: 829, column: 6, scope: !6084)
!6097 = distinct !DISubprogram(name: "for_each<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17ha321f594e12e6296E", scope: !557, file: !5488, line: 818, type: !6098, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6103, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{null, !488, !562}
!6100 = !{!6101, !6102}
!6101 = !DILocalVariable(name: "self", arg: 1, scope: !6097, file: !5488, line: 818, type: !488)
!6102 = !DILocalVariable(name: "f", arg: 2, scope: !6097, file: !5488, line: 818, type: !562)
!6103 = !{!5795, !6104}
!6104 = !DITemplateTypeParameter(name: "F", type: !562)
!6105 = !DILocation(line: 818, column: 20, scope: !6097)
!6106 = !DILocation(line: 818, column: 26, scope: !6097)
!6107 = !DILocation(line: 828, column: 23, scope: !6097)
!6108 = !DILocation(line: 828, column: 14, scope: !6097)
!6109 = !DILocation(line: 829, column: 6, scope: !6097)
!6110 = distinct !DISubprogram(name: "for_each<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each17hb73fe35e04a8db1eE", scope: !557, file: !5488, line: 818, type: !6111, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6116, retainedNodes: !6113)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{null, !720, !757}
!6113 = !{!6114, !6115}
!6114 = !DILocalVariable(name: "self", arg: 1, scope: !6110, file: !5488, line: 818, type: !720)
!6115 = !DILocalVariable(name: "f", arg: 2, scope: !6110, file: !5488, line: 818, type: !757)
!6116 = !{!5874, !6117}
!6117 = !DITemplateTypeParameter(name: "F", type: !757)
!6118 = !DILocation(line: 818, column: 20, scope: !6110)
!6119 = !DILocation(line: 818, column: 26, scope: !6110)
!6120 = !DILocation(line: 828, column: 23, scope: !6110)
!6121 = !DILocation(line: 828, column: 14, scope: !6110)
!6122 = !DILocation(line: 829, column: 6, scope: !6110)
!6123 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h238f340ef83aa6d8E", scope: !556, file: !5488, line: 824, type: !6124, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6128, retainedNodes: !6126)
!6124 = !DISubroutineType(types: !6125)
!6125 = !{!990, !993}
!6126 = !{!6127}
!6127 = !DILocalVariable(name: "f", arg: 1, scope: !6123, file: !5488, line: 824, type: !993)
!6128 = !{!1121, !6129}
!6129 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !993)
!6130 = !DILocation(line: 824, column: 20, scope: !6123)
!6131 = !DILocation(line: 826, column: 10, scope: !6123)
!6132 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h8b191bf5f5353cbbE", scope: !556, file: !5488, line: 824, type: !6133, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6137, retainedNodes: !6135)
!6133 = !DISubroutineType(types: !6134)
!6134 = !{!1017, !1020}
!6135 = !{!6136}
!6136 = !DILocalVariable(name: "f", arg: 1, scope: !6132, file: !5488, line: 824, type: !1020)
!6137 = !{!1121, !6138}
!6138 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !1020)
!6139 = !DILocation(line: 824, column: 20, scope: !6132)
!6140 = !DILocation(line: 826, column: 10, scope: !6132)
!6141 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17h94a381fdf96eae99E", scope: !556, file: !5488, line: 824, type: !6142, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6146, retainedNodes: !6144)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!698, !701}
!6144 = !{!6145}
!6145 = !DILocalVariable(name: "f", arg: 1, scope: !6141, file: !5488, line: 824, type: !701)
!6146 = !{!1121, !6147}
!6147 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !701)
!6148 = !DILocation(line: 824, column: 20, scope: !6141)
!6149 = !DILocation(line: 826, column: 10, scope: !6141)
!6150 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17hc60eb75827302f00E", scope: !556, file: !5488, line: 824, type: !6151, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6155, retainedNodes: !6153)
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!554, !562}
!6153 = !{!6154}
!6154 = !DILocalVariable(name: "f", arg: 1, scope: !6150, file: !5488, line: 824, type: !562)
!6155 = !{!1121, !6156}
!6156 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !562)
!6157 = !DILocation(line: 824, column: 20, scope: !6150)
!6158 = !DILocation(line: 826, column: 10, scope: !6150)
!6159 = distinct !DISubprogram(name: "call<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call17hf593ef07d886244eE", scope: !556, file: !5488, line: 824, type: !6160, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6164, retainedNodes: !6162)
!6160 = !DISubroutineType(types: !6161)
!6161 = !{!754, !757}
!6162 = !{!6163}
!6163 = !DILocalVariable(name: "f", arg: 1, scope: !6159, file: !5488, line: 824, type: !757)
!6164 = !{!1121, !6165}
!6165 = !DITemplateTypeParameter(name: "impl FnMut(T)", type: !757)
!6166 = !DILocation(line: 824, column: 20, scope: !6159)
!6167 = !DILocation(line: 826, column: 10, scope: !6159)
!6168 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h359248ba5520ec7dE", scope: !555, file: !5488, line: 825, type: !6169, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6137, retainedNodes: !6172)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{null, !6171, !7, !574}
!6171 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", baseType: !1017, size: 32, align: 32, dwarfAddressSpace: 0)
!6172 = !{!6173, !6174, !6175}
!6173 = !DILocalVariable(name: "item", arg: 3, scope: !6168, file: !5488, line: 825, type: !574)
!6174 = !DILocalVariable(name: "f", scope: !6168, file: !5488, line: 824, type: !1020, align: 32)
!6175 = !DILocalVariable(arg: 2, scope: !6168, file: !5488, line: 825, type: !7)
!6176 = !DILocation(line: 824, column: 24, scope: !6168)
!6177 = !DILocation(line: 825, column: 19, scope: !6168)
!6178 = !DILocation(line: 825, column: 23, scope: !6168)
!6179 = !DILocation(line: 825, column: 29, scope: !6168)
!6180 = !DILocation(line: 825, column: 36, scope: !6168)
!6181 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h5aabf4c3929a7d79E", scope: !555, file: !5488, line: 825, type: !6182, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6128, retainedNodes: !6185)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{null, !6184, !7, !574}
!6184 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>", baseType: !990, size: 32, align: 32, dwarfAddressSpace: 0)
!6185 = !{!6186, !6187, !6188}
!6186 = !DILocalVariable(name: "item", arg: 3, scope: !6181, file: !5488, line: 825, type: !574)
!6187 = !DILocalVariable(name: "f", scope: !6181, file: !5488, line: 824, type: !993, align: 32)
!6188 = !DILocalVariable(arg: 2, scope: !6181, file: !5488, line: 825, type: !7)
!6189 = !DILocation(line: 824, column: 24, scope: !6181)
!6190 = !DILocation(line: 825, column: 19, scope: !6181)
!6191 = !DILocation(line: 825, column: 23, scope: !6181)
!6192 = !DILocation(line: 825, column: 29, scope: !6181)
!6193 = !DILocation(line: 825, column: 36, scope: !6181)
!6194 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17ha1051e264a981eccE", scope: !555, file: !5488, line: 825, type: !6195, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6155, retainedNodes: !6198)
!6195 = !DISubroutineType(types: !6196)
!6196 = !{null, !6197, !7, !574}
!6197 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>", baseType: !554, size: 32, align: 32, dwarfAddressSpace: 0)
!6198 = !{!6199, !6200, !6201}
!6199 = !DILocalVariable(name: "item", arg: 3, scope: !6194, file: !5488, line: 825, type: !574)
!6200 = !DILocalVariable(name: "f", scope: !6194, file: !5488, line: 824, type: !562, align: 32)
!6201 = !DILocalVariable(arg: 2, scope: !6194, file: !5488, line: 825, type: !7)
!6202 = !DILocation(line: 824, column: 24, scope: !6194)
!6203 = !DILocation(line: 825, column: 19, scope: !6194)
!6204 = !DILocation(line: 825, column: 23, scope: !6194)
!6205 = !DILocation(line: 825, column: 29, scope: !6194)
!6206 = !DILocation(line: 825, column: 36, scope: !6194)
!6207 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hf1cd338897f1027fE", scope: !555, file: !5488, line: 825, type: !6208, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6164, retainedNodes: !6211)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{null, !6210, !7, !574}
!6210 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>", baseType: !754, size: 32, align: 32, dwarfAddressSpace: 0)
!6211 = !{!6212, !6213, !6214}
!6212 = !DILocalVariable(name: "item", arg: 3, scope: !6207, file: !5488, line: 825, type: !574)
!6213 = !DILocalVariable(name: "f", scope: !6207, file: !5488, line: 824, type: !757, align: 32)
!6214 = !DILocalVariable(arg: 2, scope: !6207, file: !5488, line: 825, type: !7)
!6215 = !DILocation(line: 824, column: 24, scope: !6207)
!6216 = !DILocation(line: 825, column: 19, scope: !6207)
!6217 = !DILocation(line: 825, column: 23, scope: !6207)
!6218 = !DILocation(line: 825, column: 29, scope: !6207)
!6219 = !DILocation(line: 825, column: 36, scope: !6207)
!6220 = distinct !DISubprogram(name: "{closure#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17hf7193f7aad62f09dE", scope: !555, file: !5488, line: 825, type: !6221, scopeLine: 825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6146, retainedNodes: !6224)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !6223, !7, !574}
!6223 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>", baseType: !698, size: 32, align: 32, dwarfAddressSpace: 0)
!6224 = !{!6225, !6226, !6227}
!6225 = !DILocalVariable(name: "item", arg: 3, scope: !6220, file: !5488, line: 825, type: !574)
!6226 = !DILocalVariable(name: "f", scope: !6220, file: !5488, line: 824, type: !701, align: 32)
!6227 = !DILocalVariable(arg: 2, scope: !6220, file: !5488, line: 825, type: !7)
!6228 = !DILocation(line: 824, column: 24, scope: !6220)
!6229 = !DILocation(line: 825, column: 19, scope: !6220)
!6230 = !DILocation(line: 825, column: 23, scope: !6220)
!6231 = !DILocation(line: 825, column: 29, scope: !6220)
!6232 = !DILocation(line: 825, column: 36, scope: !6220)
!6233 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>, core::ops::control_flow::ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17h589d773956655b6cE", scope: !557, file: !5488, line: 2419, type: !6234, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6249, retainedNodes: !6237)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!1089, !6236, !7, !1107}
!6236 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", baseType: !491, size: 32, align: 32, dwarfAddressSpace: 0)
!6237 = !{!6238, !6239, !6240, !6241, !6243, !6245, !6247}
!6238 = !DILocalVariable(name: "self", arg: 1, scope: !6233, file: !5488, line: 2419, type: !6236)
!6239 = !DILocalVariable(name: "init", arg: 2, scope: !6233, file: !5488, line: 2419, type: !7)
!6240 = !DILocalVariable(name: "f", arg: 3, scope: !6233, file: !5488, line: 2419, type: !1107)
!6241 = !DILocalVariable(name: "accum", scope: !6242, file: !5488, line: 2425, type: !7, align: 8)
!6242 = distinct !DILexicalBlock(scope: !6233, file: !5488, line: 2425, column: 9)
!6243 = !DILocalVariable(name: "x", scope: !6244, file: !5488, line: 2426, type: !1112, align: 32)
!6244 = distinct !DILexicalBlock(scope: !6242, file: !5488, line: 2426, column: 41)
!6245 = !DILocalVariable(name: "residual", scope: !6246, file: !5488, line: 2427, type: !2094, align: 8)
!6246 = distinct !DILexicalBlock(scope: !6244, file: !5488, line: 2427, column: 32)
!6247 = !DILocalVariable(name: "val", scope: !6248, file: !5488, line: 2427, type: !7, align: 8)
!6248 = distinct !DILexicalBlock(scope: !6244, file: !5488, line: 2427, column: 21)
!6249 = !{!5576, !1052, !6250, !6251}
!6250 = !DITemplateTypeParameter(name: "F", type: !1107)
!6251 = !DITemplateTypeParameter(name: "R", type: !1089)
!6252 = !DILocation(line: 2419, column: 26, scope: !6233)
!6253 = !DILocation(line: 2419, column: 37, scope: !6233)
!6254 = !DILocation(line: 2419, column: 46, scope: !6233)
!6255 = !DILocation(line: 2425, column: 13, scope: !6242)
!6256 = !DILocation(line: 2426, column: 24, scope: !6244)
!6257 = !DILocation(line: 2427, column: 32, scope: !6246)
!6258 = !DILocation(line: 2427, column: 21, scope: !6248)
!6259 = !DILocation(line: 2426, column: 9, scope: !6242)
!6260 = !DILocation(line: 2426, column: 34, scope: !6244)
!6261 = !DILocation(line: 2426, column: 29, scope: !6244)
!6262 = !DILocation(line: 2426, column: 19, scope: !6244)
!6263 = !DILocation(line: 2427, column: 21, scope: !6244)
!6264 = !DILocation(line: 2429, column: 15, scope: !6242)
!6265 = !DILocation(line: 2430, column: 5, scope: !6233)
!6266 = !DILocation(line: 2427, column: 21, scope: !6246)
!6267 = !DILocation(line: 2430, column: 6, scope: !6233)
!6268 = distinct !DISubprogram(name: "try_fold<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, (), core::iter::adapters::{impl#0}::try_fold::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, (), core::ops::try_trait::{impl#0}::wrap_mut_2::{closure_env#0}<(), (), char, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>>>, core::ops::try_trait::NeverShortCircuit<()>>, core::ops::control_flow::ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17hc3031e90bc21e441E", scope: !557, file: !5488, line: 2419, type: !6269, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6284, retainedNodes: !6272)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!1089, !6271, !7, !1157}
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", baseType: !682, size: 32, align: 32, dwarfAddressSpace: 0)
!6272 = !{!6273, !6274, !6275, !6276, !6278, !6280, !6282}
!6273 = !DILocalVariable(name: "self", arg: 1, scope: !6268, file: !5488, line: 2419, type: !6271)
!6274 = !DILocalVariable(name: "init", arg: 2, scope: !6268, file: !5488, line: 2419, type: !7)
!6275 = !DILocalVariable(name: "f", arg: 3, scope: !6268, file: !5488, line: 2419, type: !1157)
!6276 = !DILocalVariable(name: "accum", scope: !6277, file: !5488, line: 2425, type: !7, align: 8)
!6277 = distinct !DILexicalBlock(scope: !6268, file: !5488, line: 2425, column: 9)
!6278 = !DILocalVariable(name: "x", scope: !6279, file: !5488, line: 2426, type: !1112, align: 32)
!6279 = distinct !DILexicalBlock(scope: !6277, file: !5488, line: 2426, column: 41)
!6280 = !DILocalVariable(name: "residual", scope: !6281, file: !5488, line: 2427, type: !2094, align: 8)
!6281 = distinct !DILexicalBlock(scope: !6279, file: !5488, line: 2427, column: 32)
!6282 = !DILocalVariable(name: "val", scope: !6283, file: !5488, line: 2427, type: !7, align: 8)
!6283 = distinct !DILexicalBlock(scope: !6279, file: !5488, line: 2427, column: 21)
!6284 = !{!5540, !1052, !6285, !6251}
!6285 = !DITemplateTypeParameter(name: "F", type: !1157)
!6286 = !DILocation(line: 2419, column: 26, scope: !6268)
!6287 = !DILocation(line: 2419, column: 37, scope: !6268)
!6288 = !DILocation(line: 2419, column: 46, scope: !6268)
!6289 = !DILocation(line: 2425, column: 13, scope: !6277)
!6290 = !DILocation(line: 2426, column: 24, scope: !6279)
!6291 = !DILocation(line: 2427, column: 32, scope: !6281)
!6292 = !DILocation(line: 2427, column: 21, scope: !6283)
!6293 = !DILocation(line: 2426, column: 9, scope: !6277)
!6294 = !DILocation(line: 2426, column: 34, scope: !6279)
!6295 = !DILocation(line: 2426, column: 29, scope: !6279)
!6296 = !DILocation(line: 2426, column: 19, scope: !6279)
!6297 = !DILocation(line: 2427, column: 21, scope: !6279)
!6298 = !DILocation(line: 2429, column: 15, scope: !6277)
!6299 = !DILocation(line: 2430, column: 5, scope: !6268)
!6300 = !DILocation(line: 2427, column: 21, scope: !6281)
!6301 = !DILocation(line: 2430, column: 6, scope: !6268)
!6302 = distinct !DISubprogram(name: "try_fold<core::str::iter::Chars, (), core::iter::traits::iterator::Iterator::find::check::{closure_env#0}<char, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>>, core::ops::control_flow::ControlFlow<char, ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17hd1ec53e5f2701640E", scope: !557, file: !5488, line: 2419, type: !6303, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6317, retainedNodes: !6305)
!6303 = !DISubroutineType(types: !6304)
!6304 = !{!2118, !5407, !7, !5642}
!6305 = !{!6306, !6307, !6308, !6309, !6311, !6313, !6315}
!6306 = !DILocalVariable(name: "self", arg: 1, scope: !6302, file: !5488, line: 2419, type: !5407)
!6307 = !DILocalVariable(name: "init", arg: 2, scope: !6302, file: !5488, line: 2419, type: !7)
!6308 = !DILocalVariable(name: "f", arg: 3, scope: !6302, file: !5488, line: 2419, type: !5642)
!6309 = !DILocalVariable(name: "accum", scope: !6310, file: !5488, line: 2425, type: !7, align: 8)
!6310 = distinct !DILexicalBlock(scope: !6302, file: !5488, line: 2425, column: 9)
!6311 = !DILocalVariable(name: "x", scope: !6312, file: !5488, line: 2426, type: !574, align: 32)
!6312 = distinct !DILexicalBlock(scope: !6310, file: !5488, line: 2426, column: 41)
!6313 = !DILocalVariable(name: "residual", scope: !6314, file: !5488, line: 2427, type: !2132, align: 32)
!6314 = distinct !DILexicalBlock(scope: !6312, file: !5488, line: 2427, column: 32)
!6315 = !DILocalVariable(name: "val", scope: !6316, file: !5488, line: 2427, type: !7, align: 8)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !5488, line: 2427, column: 21)
!6317 = !{!5412, !1052, !6318, !5469}
!6318 = !DITemplateTypeParameter(name: "F", type: !5642)
!6319 = !DILocation(line: 2419, column: 26, scope: !6302)
!6320 = !DILocation(line: 2419, column: 37, scope: !6302)
!6321 = !DILocation(line: 2419, column: 46, scope: !6302)
!6322 = !DILocation(line: 2425, column: 13, scope: !6310)
!6323 = !DILocation(line: 2427, column: 21, scope: !6316)
!6324 = !DILocation(line: 2426, column: 9, scope: !6310)
!6325 = !DILocation(line: 2426, column: 34, scope: !6312)
!6326 = !DILocation(line: 2426, column: 29, scope: !6312)
!6327 = !DILocation(line: 2426, column: 19, scope: !6312)
!6328 = !DILocation(line: 2426, column: 24, scope: !6312)
!6329 = !DILocation(line: 2427, column: 21, scope: !6312)
!6330 = !DILocation(line: 2429, column: 15, scope: !6310)
!6331 = !DILocation(line: 2430, column: 5, scope: !6302)
!6332 = !DILocation(line: 2427, column: 32, scope: !6312)
!6333 = !DILocation(line: 2427, column: 32, scope: !6314)
!6334 = !DILocation(line: 2427, column: 21, scope: !6314)
!6335 = !DILocation(line: 2430, column: 6, scope: !6302)
!6336 = distinct !DISubprogram(name: "new<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3c20aa351d303f35E", scope: !1444, file: !1376, line: 24, type: !5489, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1450, declaration: !6337, retainedNodes: !6338)
!6337 = !DISubprogram(name: "new<core::str::iter::Chars, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::str::iter::Chars>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h3c20aa351d303f35E", scope: !1444, file: !1376, line: 24, type: !5489, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1450)
!6338 = !{!6339, !6340}
!6339 = !DILocalVariable(name: "iter", arg: 1, scope: !6336, file: !1376, line: 24, type: !1401)
!6340 = !DILocalVariable(name: "predicate", arg: 2, scope: !6336, file: !1376, line: 24, type: !1449)
!6341 = !DILocation(line: 24, column: 32, scope: !6336)
!6342 = !DILocation(line: 24, column: 41, scope: !6336)
!6343 = !DILocation(line: 25, column: 9, scope: !6336)
!6344 = !DILocation(line: 26, column: 6, scope: !6336)
!6345 = distinct !DISubprogram(name: "new<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h92aabd5b4bfbdcbdE", scope: !1394, file: !1376, line: 24, type: !5500, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1421, declaration: !6346, retainedNodes: !6347)
!6346 = !DISubprogram(name: "new<core::iter::adapters::rev::Rev<core::str::iter::Chars>, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>", linkageName: "_ZN4core4iter8adapters10skip_while22SkipWhile$LT$I$C$P$GT$3new17h92aabd5b4bfbdcbdE", scope: !1394, file: !1376, line: 24, type: !5500, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1421)
!6347 = !{!6348, !6349}
!6348 = !DILocalVariable(name: "iter", arg: 1, scope: !6345, file: !1376, line: 24, type: !1397)
!6349 = !DILocalVariable(name: "predicate", arg: 2, scope: !6345, file: !1376, line: 24, type: !1417)
!6350 = !DILocation(line: 24, column: 32, scope: !6345)
!6351 = !DILocation(line: 24, column: 41, scope: !6345)
!6352 = !DILocation(line: 25, column: 9, scope: !6345)
!6353 = !DILocation(line: 26, column: 6, scope: !6345)
!6354 = distinct !DISubprogram(name: "try_process<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, char, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, core::result::{impl#26}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>, alloc::string::String>", linkageName: "_ZN4core4iter8adapters11try_process17h5a971f4fa39a6a0bE", scope: !484, file: !1036, line: 152, type: !6355, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6368, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!1625, !682, !1676}
!6357 = !{!6358, !6359, !6360, !6362, !6364, !6366}
!6358 = !DILocalVariable(name: "iter", arg: 1, scope: !6354, file: !1036, line: 152, type: !682)
!6359 = !DILocalVariable(name: "f", arg: 2, scope: !6354, file: !1036, line: 152, type: !1676)
!6360 = !DILocalVariable(name: "residual", scope: !6361, file: !1036, line: 158, type: !953, align: 16)
!6361 = distinct !DILexicalBlock(scope: !6354, file: !1036, line: 158, column: 5)
!6362 = !DILocalVariable(name: "shunt", scope: !6363, file: !1036, line: 159, type: !948, align: 32)
!6363 = distinct !DILexicalBlock(scope: !6361, file: !1036, line: 159, column: 5)
!6364 = !DILocalVariable(name: "value", scope: !6365, file: !1036, line: 160, type: !178, align: 32)
!6365 = distinct !DILexicalBlock(scope: !6363, file: !1036, line: 160, column: 5)
!6366 = !DILocalVariable(name: "r", scope: !6367, file: !1036, line: 162, type: !961, align: 16)
!6367 = distinct !DILexicalBlock(scope: !6365, file: !1036, line: 162, column: 9)
!6368 = !{!696, !1121, !989, !6369, !6370}
!6369 = !DITemplateTypeParameter(name: "F", type: !1676)
!6370 = !DITemplateTypeParameter(name: "U", type: !178)
!6371 = !DILocation(line: 152, column: 42, scope: !6354)
!6372 = !DILocation(line: 152, column: 51, scope: !6354)
!6373 = !DILocation(line: 158, column: 9, scope: !6361)
!6374 = !DILocation(line: 159, column: 9, scope: !6363)
!6375 = !DILocation(line: 160, column: 9, scope: !6365)
!6376 = !DILocation(line: 158, column: 9, scope: !6354)
!6377 = !DILocation(line: 158, column: 24, scope: !6354)
!6378 = !DILocation(line: 159, column: 17, scope: !6361)
!6379 = !DILocation(line: 160, column: 17, scope: !6363)
!6380 = !DILocation(line: 160, column: 24, scope: !6363)
!6381 = !DILocation(line: 161, column: 11, scope: !6365)
!6382 = !DILocation(line: 161, column: 5, scope: !6365)
!6383 = !DILocation(line: 162, column: 14, scope: !6365)
!6384 = !DILocation(line: 162, column: 14, scope: !6367)
!6385 = !DILocation(line: 162, column: 20, scope: !6367)
!6386 = !DILocation(line: 163, column: 34, scope: !6365)
!6387 = !DILocation(line: 163, column: 17, scope: !6365)
!6388 = !DILocation(line: 165, column: 1, scope: !6363)
!6389 = !DILocation(line: 165, column: 2, scope: !6354)
!6390 = distinct !DISubprogram(name: "try_process<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, char, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, core::result::{impl#26}::from_iter::{closure_env#0}<char, core::char::decode::DecodeUtf16Error, alloc::string::String, core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>, alloc::string::String>", linkageName: "_ZN4core4iter8adapters11try_process17hbf0f27c7335f51e9E", scope: !484, file: !1036, line: 152, type: !6391, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6404, retainedNodes: !6393)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{!1625, !491, !1664}
!6393 = !{!6394, !6395, !6396, !6398, !6400, !6402}
!6394 = !DILocalVariable(name: "iter", arg: 1, scope: !6390, file: !1036, line: 152, type: !491)
!6395 = !DILocalVariable(name: "f", arg: 2, scope: !6390, file: !1036, line: 152, type: !1664)
!6396 = !DILocalVariable(name: "residual", scope: !6397, file: !1036, line: 158, type: !953, align: 16)
!6397 = distinct !DILexicalBlock(scope: !6390, file: !1036, line: 158, column: 5)
!6398 = !DILocalVariable(name: "shunt", scope: !6399, file: !1036, line: 159, type: !1012, align: 32)
!6399 = distinct !DILexicalBlock(scope: !6397, file: !1036, line: 159, column: 5)
!6400 = !DILocalVariable(name: "value", scope: !6401, file: !1036, line: 160, type: !178, align: 32)
!6401 = distinct !DILexicalBlock(scope: !6399, file: !1036, line: 160, column: 5)
!6402 = !DILocalVariable(name: "r", scope: !6403, file: !1036, line: 162, type: !961, align: 16)
!6403 = distinct !DILexicalBlock(scope: !6401, file: !1036, line: 162, column: 9)
!6404 = !{!552, !1121, !989, !6405, !6370}
!6405 = !DITemplateTypeParameter(name: "F", type: !1664)
!6406 = !DILocation(line: 152, column: 42, scope: !6390)
!6407 = !DILocation(line: 152, column: 51, scope: !6390)
!6408 = !DILocation(line: 158, column: 9, scope: !6397)
!6409 = !DILocation(line: 159, column: 9, scope: !6399)
!6410 = !DILocation(line: 160, column: 9, scope: !6401)
!6411 = !DILocation(line: 158, column: 9, scope: !6390)
!6412 = !DILocation(line: 158, column: 24, scope: !6390)
!6413 = !DILocation(line: 159, column: 17, scope: !6397)
!6414 = !DILocation(line: 160, column: 17, scope: !6399)
!6415 = !DILocation(line: 160, column: 24, scope: !6399)
!6416 = !DILocation(line: 161, column: 11, scope: !6401)
!6417 = !DILocation(line: 161, column: 5, scope: !6401)
!6418 = !DILocation(line: 162, column: 14, scope: !6401)
!6419 = !DILocation(line: 162, column: 14, scope: !6403)
!6420 = !DILocation(line: 162, column: 20, scope: !6403)
!6421 = !DILocation(line: 163, column: 34, scope: !6401)
!6422 = !DILocation(line: 163, column: 17, scope: !6401)
!6423 = !DILocation(line: 165, column: 1, scope: !6399)
!6424 = !DILocation(line: 165, column: 2, scope: !6390)
!6425 = distinct !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1226c194d618a651E", scope: !488, file: !481, line: 68, type: !5570, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !551, declaration: !6426, retainedNodes: !6427)
!6426 = !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h1226c194d618a651E", scope: !488, file: !481, line: 68, type: !5570, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !551)
!6427 = !{!6428, !6429}
!6428 = !DILocalVariable(name: "iter", arg: 1, scope: !6425, file: !481, line: 68, type: !491)
!6429 = !DILocalVariable(name: "f", arg: 2, scope: !6425, file: !481, line: 68, type: !548)
!6430 = !DILocation(line: 68, column: 32, scope: !6425)
!6431 = !DILocation(line: 68, column: 41, scope: !6425)
!6432 = !DILocation(line: 69, column: 9, scope: !6425)
!6433 = !DILocation(line: 70, column: 6, scope: !6425)
!6434 = distinct !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3b992ba92e06b38fE", scope: !685, file: !481, line: 68, type: !5512, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !528, declaration: !6435, retainedNodes: !6436)
!6435 = !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h3b992ba92e06b38fE", scope: !685, file: !481, line: 68, type: !5512, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !528)
!6436 = !{!6437, !6438}
!6437 = !DILocalVariable(name: "iter", arg: 1, scope: !6434, file: !481, line: 68, type: !499)
!6438 = !DILocalVariable(name: "f", arg: 2, scope: !6434, file: !481, line: 68, type: !525)
!6439 = !DILocation(line: 68, column: 32, scope: !6434)
!6440 = !DILocation(line: 68, column: 41, scope: !6434)
!6441 = !DILocation(line: 70, column: 6, scope: !6434)
!6442 = distinct !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h53db666e82883828E", scope: !496, file: !481, line: 68, type: !5524, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !528, declaration: !6443, retainedNodes: !6444)
!6443 = !DISubprogram(name: "new<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17h53db666e82883828E", scope: !496, file: !481, line: 68, type: !5524, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !528)
!6444 = !{!6445, !6446}
!6445 = !DILocalVariable(name: "iter", arg: 1, scope: !6442, file: !481, line: 68, type: !499)
!6446 = !DILocalVariable(name: "f", arg: 2, scope: !6442, file: !481, line: 68, type: !525)
!6447 = !DILocation(line: 68, column: 32, scope: !6442)
!6448 = !DILocation(line: 68, column: 41, scope: !6442)
!6449 = !DILocation(line: 70, column: 6, scope: !6442)
!6450 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb1b0225a12e6e567E", scope: !633, file: !481, line: 68, type: !5582, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !656, declaration: !6451, retainedNodes: !6452)
!6451 = !DISubprogram(name: "new<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hb1b0225a12e6e567E", scope: !633, file: !481, line: 68, type: !5582, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !656)
!6452 = !{!6453, !6454}
!6453 = !DILocalVariable(name: "iter", arg: 1, scope: !6450, file: !481, line: 68, type: !636)
!6454 = !DILocalVariable(name: "f", arg: 2, scope: !6450, file: !481, line: 68, type: !653)
!6455 = !DILocation(line: 68, column: 32, scope: !6450)
!6456 = !DILocation(line: 68, column: 41, scope: !6450)
!6457 = !DILocation(line: 70, column: 6, scope: !6450)
!6458 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hc525012c93a213ddE", scope: !587, file: !481, line: 68, type: !5558, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !609, declaration: !6459, retainedNodes: !6460)
!6459 = !DISubprogram(name: "new<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hc525012c93a213ddE", scope: !587, file: !481, line: 68, type: !5558, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !609)
!6460 = !{!6461, !6462}
!6461 = !DILocalVariable(name: "iter", arg: 1, scope: !6458, file: !481, line: 68, type: !590)
!6462 = !DILocalVariable(name: "f", arg: 2, scope: !6458, file: !481, line: 68, type: !606)
!6463 = !DILocation(line: 68, column: 32, scope: !6458)
!6464 = !DILocation(line: 68, column: 41, scope: !6458)
!6465 = !DILocation(line: 70, column: 6, scope: !6458)
!6466 = distinct !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hdfcc33e85e2bb21eE", scope: !679, file: !481, line: 68, type: !5534, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !695, declaration: !6467, retainedNodes: !6468)
!6467 = !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hdfcc33e85e2bb21eE", scope: !679, file: !481, line: 68, type: !5534, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !695)
!6468 = !{!6469, !6470}
!6469 = !DILocalVariable(name: "iter", arg: 1, scope: !6466, file: !481, line: 68, type: !682)
!6470 = !DILocalVariable(name: "f", arg: 2, scope: !6466, file: !481, line: 68, type: !693)
!6471 = !DILocation(line: 68, column: 32, scope: !6466)
!6472 = !DILocation(line: 68, column: 41, scope: !6466)
!6473 = !DILocation(line: 69, column: 9, scope: !6466)
!6474 = !DILocation(line: 70, column: 6, scope: !6466)
!6475 = distinct !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf2159c97354589f0E", scope: !720, file: !481, line: 68, type: !5546, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !751, declaration: !6476, retainedNodes: !6477)
!6476 = !DISubprogram(name: "new<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>", linkageName: "_ZN4core4iter8adapters3map16Map$LT$I$C$F$GT$3new17hf2159c97354589f0E", scope: !720, file: !481, line: 68, type: !5546, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !751)
!6477 = !{!6478, !6479}
!6478 = !DILocalVariable(name: "iter", arg: 1, scope: !6475, file: !481, line: 68, type: !723)
!6479 = !DILocalVariable(name: "f", arg: 2, scope: !6475, file: !481, line: 68, type: !749)
!6480 = !DILocation(line: 68, column: 32, scope: !6475)
!6481 = !DILocation(line: 68, column: 41, scope: !6475)
!6482 = !DILocation(line: 69, column: 9, scope: !6475)
!6483 = !DILocation(line: 70, column: 6, scope: !6475)
!6484 = distinct !DISubprogram(name: "map_fold<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17h77b577df5c8d5e69E", scope: !483, file: !481, line: 84, type: !6485, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6490, retainedNodes: !6487)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{null, !606, !612}
!6487 = !{!6488, !6489}
!6488 = !DILocalVariable(name: "f", arg: 1, scope: !6484, file: !481, line: 85, type: !606)
!6489 = !DILocalVariable(name: "g", arg: 2, scope: !6484, file: !481, line: 86, type: !612)
!6490 = !{!603, !621, !622, !6491, !6492}
!6491 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !606)
!6492 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !612)
!6493 = !DILocation(line: 85, column: 5, scope: !6484)
!6494 = !DILocation(line: 86, column: 5, scope: !6484)
!6495 = !DILocation(line: 89, column: 2, scope: !6484)
!6496 = distinct !DISubprogram(name: "map_fold<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17h9fbeeb88c390e13aE", scope: !483, file: !481, line: 84, type: !6497, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6502, retainedNodes: !6499)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!5673, !548, !554}
!6499 = !{!6500, !6501}
!6500 = !DILocalVariable(name: "f", arg: 1, scope: !6496, file: !481, line: 85, type: !548)
!6501 = !DILocalVariable(name: "g", arg: 2, scope: !6496, file: !481, line: 86, type: !554)
!6502 = !{!1696, !573, !575, !6503, !6504}
!6503 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !548)
!6504 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !554)
!6505 = !DILocation(line: 85, column: 5, scope: !6496)
!6506 = !DILocation(line: 86, column: 5, scope: !6496)
!6507 = !DILocation(line: 89, column: 2, scope: !6496)
!6508 = distinct !DISubprogram(name: "map_fold<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17hcb0a43cac0c84b0cE", scope: !483, file: !481, line: 84, type: !6509, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6514, retainedNodes: !6511)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{null, !653, !659}
!6511 = !{!6512, !6513}
!6512 = !DILocalVariable(name: "f", arg: 1, scope: !6508, file: !481, line: 85, type: !653)
!6513 = !DILocalVariable(name: "g", arg: 2, scope: !6508, file: !481, line: 86, type: !659)
!6514 = !{!650, !667, !668, !6515, !6516}
!6515 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !653)
!6516 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !659)
!6517 = !DILocation(line: 85, column: 5, scope: !6508)
!6518 = !DILocation(line: 86, column: 5, scope: !6508)
!6519 = !DILocation(line: 89, column: 2, scope: !6508)
!6520 = distinct !DISubprogram(name: "map_fold<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17hd4ff735be36beea1E", scope: !483, file: !481, line: 84, type: !6521, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6526, retainedNodes: !6523)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{!5732, !693, !698}
!6523 = !{!6524, !6525}
!6524 = !DILocalVariable(name: "f", arg: 1, scope: !6520, file: !481, line: 85, type: !693)
!6525 = !DILocalVariable(name: "g", arg: 2, scope: !6520, file: !481, line: 86, type: !698)
!6526 = !{!1696, !573, !575, !6527, !6528}
!6527 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !693)
!6528 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !698)
!6529 = !DILocation(line: 85, column: 5, scope: !6520)
!6530 = !DILocation(line: 86, column: 5, scope: !6520)
!6531 = !DILocation(line: 89, column: 2, scope: !6520)
!6532 = distinct !DISubprogram(name: "map_fold<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold17heebc66200a6c1895E", scope: !483, file: !481, line: 84, type: !6533, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6538, retainedNodes: !6535)
!6533 = !DISubroutineType(types: !6534)
!6534 = !{!5703, !749, !754}
!6535 = !{!6536, !6537}
!6536 = !DILocalVariable(name: "f", arg: 1, scope: !6532, file: !481, line: 85, type: !749)
!6537 = !DILocalVariable(name: "g", arg: 2, scope: !6532, file: !481, line: 86, type: !754)
!6538 = !{!1696, !573, !575, !6539, !6540}
!6539 = !DITemplateTypeParameter(name: "impl FnMut(T) -> B", type: !749)
!6540 = !DITemplateTypeParameter(name: "impl FnMut(Acc, B) -> Acc", type: !754)
!6541 = !DILocation(line: 85, column: 5, scope: !6532)
!6542 = !DILocation(line: 86, column: 5, scope: !6532)
!6543 = !DILocation(line: 89, column: 2, scope: !6532)
!6544 = distinct !DISubprogram(name: "{closure#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h7678013cee6030e9E", scope: !5674, file: !481, line: 88, type: !6545, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6502, retainedNodes: !6548)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{null, !6547, !7, !1112}
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>>>", baseType: !5673, size: 32, align: 32, dwarfAddressSpace: 0)
!6548 = !{!6549, !6550, !6551, !6552}
!6549 = !DILocalVariable(name: "acc", arg: 2, scope: !6544, file: !481, line: 88, type: !7)
!6550 = !DILocalVariable(name: "elt", arg: 3, scope: !6544, file: !481, line: 88, type: !1112)
!6551 = !DILocalVariable(name: "g", scope: !6544, file: !481, line: 86, type: !554, align: 32)
!6552 = !DILocalVariable(name: "f", scope: !6544, file: !481, line: 85, type: !548, align: 8)
!6553 = !DILocation(line: 86, column: 9, scope: !6544)
!6554 = !DILocation(line: 85, column: 9, scope: !6544)
!6555 = !DILocation(line: 88, column: 11, scope: !6544)
!6556 = !DILocation(line: 88, column: 16, scope: !6544)
!6557 = !DILocation(line: 88, column: 28, scope: !6544)
!6558 = !DILocation(line: 88, column: 21, scope: !6544)
!6559 = !DILocation(line: 88, column: 35, scope: !6544)
!6560 = distinct !DISubprogram(name: "{closure#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h8959f768052622a8E", scope: !5674, file: !481, line: 88, type: !6561, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6538, retainedNodes: !6564)
!6561 = !DISubroutineType(types: !6562)
!6562 = !{null, !6563, !7, !1112}
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>>>", baseType: !5703, size: 32, align: 32, dwarfAddressSpace: 0)
!6564 = !{!6565, !6566, !6567, !6568}
!6565 = !DILocalVariable(name: "acc", arg: 2, scope: !6560, file: !481, line: 88, type: !7)
!6566 = !DILocalVariable(name: "elt", arg: 3, scope: !6560, file: !481, line: 88, type: !1112)
!6567 = !DILocalVariable(name: "g", scope: !6560, file: !481, line: 86, type: !754, align: 32)
!6568 = !DILocalVariable(name: "f", scope: !6560, file: !481, line: 85, type: !749, align: 8)
!6569 = !DILocation(line: 86, column: 9, scope: !6560)
!6570 = !DILocation(line: 85, column: 9, scope: !6560)
!6571 = !DILocation(line: 88, column: 11, scope: !6560)
!6572 = !DILocation(line: 88, column: 16, scope: !6560)
!6573 = !DILocation(line: 88, column: 28, scope: !6560)
!6574 = !DILocation(line: 88, column: 21, scope: !6560)
!6575 = !DILocation(line: 88, column: 35, scope: !6560)
!6576 = distinct !DISubprogram(name: "{closure#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he28f978449630af4E", scope: !5674, file: !481, line: 88, type: !6577, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6490, retainedNodes: !6584)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{!9, !6579, !9, !604}
!6579 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", baseType: !6580, size: 32, align: 32, dwarfAddressSpace: 0)
!6580 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>", scope: !5674, file: !2, align: 8, elements: !6581, templateParams: !21, identifier: "131149976fd80b62ab1752f719253540")
!6581 = !{!6582, !6583}
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6580, file: !2, baseType: !612, align: 8)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !6580, file: !2, baseType: !606, align: 8)
!6584 = !{!6585, !6586, !6587, !6588}
!6585 = !DILocalVariable(name: "acc", arg: 2, scope: !6576, file: !481, line: 88, type: !9)
!6586 = !DILocalVariable(name: "elt", arg: 3, scope: !6576, file: !481, line: 88, type: !604)
!6587 = !DILocalVariable(name: "g", scope: !6576, file: !481, line: 86, type: !612, align: 8)
!6588 = !DILocalVariable(name: "f", scope: !6576, file: !481, line: 85, type: !606, align: 8)
!6589 = !DILocation(line: 86, column: 9, scope: !6576)
!6590 = !DILocation(line: 85, column: 9, scope: !6576)
!6591 = !DILocation(line: 88, column: 11, scope: !6576)
!6592 = !DILocation(line: 88, column: 16, scope: !6576)
!6593 = !DILocation(line: 88, column: 28, scope: !6576)
!6594 = !DILocation(line: 88, column: 21, scope: !6576)
!6595 = !DILocation(line: 88, column: 35, scope: !6576)
!6596 = distinct !DISubprogram(name: "{closure#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he747967c238de89dE", scope: !5674, file: !481, line: 88, type: !6597, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6514, retainedNodes: !6604)
!6597 = !DISubroutineType(types: !6598)
!6598 = !{!24, !6599, !24, !651}
!6599 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", baseType: !6600, size: 32, align: 32, dwarfAddressSpace: 0)
!6600 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>", scope: !5674, file: !2, align: 8, elements: !6601, templateParams: !21, identifier: "8a1802644c326441f973cea0b845a3c4")
!6601 = !{!6602, !6603}
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6600, file: !2, baseType: !659, align: 8)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !6600, file: !2, baseType: !653, align: 8)
!6604 = !{!6605, !6606, !6607, !6608}
!6605 = !DILocalVariable(name: "acc", arg: 2, scope: !6596, file: !481, line: 88, type: !24)
!6606 = !DILocalVariable(name: "elt", arg: 3, scope: !6596, file: !481, line: 88, type: !651)
!6607 = !DILocalVariable(name: "g", scope: !6596, file: !481, line: 86, type: !659, align: 8)
!6608 = !DILocalVariable(name: "f", scope: !6596, file: !481, line: 85, type: !653, align: 8)
!6609 = !DILocation(line: 86, column: 9, scope: !6596)
!6610 = !DILocation(line: 85, column: 9, scope: !6596)
!6611 = !DILocation(line: 88, column: 11, scope: !6596)
!6612 = !DILocation(line: 88, column: 16, scope: !6596)
!6613 = !DILocation(line: 88, column: 28, scope: !6596)
!6614 = !DILocation(line: 88, column: 21, scope: !6596)
!6615 = !DILocation(line: 88, column: 35, scope: !6596)
!6616 = distinct !DISubprogram(name: "{closure#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", linkageName: "_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hec3619a9d4d00ba4E", scope: !5674, file: !481, line: 88, type: !6617, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6526, retainedNodes: !6620)
!6617 = !DISubroutineType(types: !6618)
!6618 = !{null, !6619, !7, !1112}
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::map::map_fold::{closure_env#0}<core::result::Result<char, core::char::decode::DecodeUtf16Error>, char, (), alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}, core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<char, alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>>>", baseType: !5732, size: 32, align: 32, dwarfAddressSpace: 0)
!6620 = !{!6621, !6622, !6623, !6624}
!6621 = !DILocalVariable(name: "acc", arg: 2, scope: !6616, file: !481, line: 88, type: !7)
!6622 = !DILocalVariable(name: "elt", arg: 3, scope: !6616, file: !481, line: 88, type: !1112)
!6623 = !DILocalVariable(name: "g", scope: !6616, file: !481, line: 86, type: !698, align: 32)
!6624 = !DILocalVariable(name: "f", scope: !6616, file: !481, line: 85, type: !693, align: 8)
!6625 = !DILocation(line: 86, column: 9, scope: !6616)
!6626 = !DILocation(line: 85, column: 9, scope: !6616)
!6627 = !DILocation(line: 88, column: 11, scope: !6616)
!6628 = !DILocation(line: 88, column: 16, scope: !6616)
!6629 = !DILocation(line: 88, column: 28, scope: !6616)
!6630 = !DILocation(line: 88, column: 21, scope: !6616)
!6631 = !DILocation(line: 88, column: 35, scope: !6616)
!6632 = distinct !DISubprogram(name: "new<core::str::iter::Chars>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he3e613b33ad0cb26E", scope: !1397, file: !6633, line: 20, type: !5594, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1413, declaration: !6634, retainedNodes: !6635)
!6633 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/adapters/rev.rs", directory: "", checksumkind: CSK_MD5, checksum: "c0b51c2e2801a373cd0b2d2d78a81982")
!6634 = !DISubprogram(name: "new<core::str::iter::Chars>", linkageName: "_ZN4core4iter8adapters3rev12Rev$LT$T$GT$3new17he3e613b33ad0cb26E", scope: !1397, file: !6633, line: 20, type: !5594, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1413)
!6635 = !{!6636}
!6636 = !DILocalVariable(name: "iter", arg: 1, scope: !6632, file: !6633, line: 20, type: !1401)
!6637 = !DILocation(line: 20, column: 32, scope: !6632)
!6638 = !DILocation(line: 22, column: 6, scope: !6632)
!6639 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u16>>", linkageName: "_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17h0a074f97ffafc930E", scope: !726, file: !889, line: 23, type: !5759, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !743, declaration: !6640, retainedNodes: !6641)
!6640 = !DISubprogram(name: "new<core::slice::iter::Iter<u16>>", linkageName: "_ZN4core4iter8adapters6cloned15Cloned$LT$I$GT$3new17h0a074f97ffafc930E", scope: !726, file: !889, line: 23, type: !5759, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !743)
!6641 = !{!6642}
!6642 = !DILocalVariable(name: "it", arg: 1, scope: !6639, file: !889, line: 23, type: !730)
!6643 = !DILocation(line: 23, column: 32, scope: !6639)
!6644 = !DILocation(line: 25, column: 6, scope: !6639)
!6645 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<[u8; 2]>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h02e3115f4c605eabE", scope: !499, file: !911, line: 24, type: !5769, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !522, declaration: !6646, retainedNodes: !6647)
!6646 = !DISubprogram(name: "new<core::slice::iter::Iter<[u8; 2]>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17h02e3115f4c605eabE", scope: !499, file: !911, line: 24, type: !5769, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !522)
!6647 = !{!6648}
!6648 = !DILocalVariable(name: "it", arg: 1, scope: !6645, file: !911, line: 24, type: !503)
!6649 = !DILocation(line: 24, column: 32, scope: !6645)
!6650 = !DILocation(line: 26, column: 6, scope: !6645)
!6651 = distinct !DISubprogram(name: "new", linkageName: "_ZN4core4sync6atomic11AtomicUsize3new17h516593380012ce35E", scope: !140, file: !6652, line: 2650, type: !6653, scopeLine: 2650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6655, retainedNodes: !6656)
!6652 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/sync/atomic.rs", directory: "", checksumkind: CSK_MD5, checksum: "639097b02b98707b4e548f724aa5c367")
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!140, !9}
!6655 = !DISubprogram(name: "new", linkageName: "_ZN4core4sync6atomic11AtomicUsize3new17h516593380012ce35E", scope: !140, file: !6652, line: 2650, type: !6653, scopeLine: 2650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6656 = !{!6657}
!6657 = !DILocalVariable(name: "v", arg: 1, scope: !6651, file: !6652, line: 2650, type: !9)
!6658 = !DILocation(line: 2650, column: 30, scope: !6651)
!6659 = !DILocation(line: 2299, column: 22, scope: !5020, inlinedAt: !6660)
!6660 = distinct !DILocation(line: 2651, column: 26, scope: !6651)
!6661 = !DILocation(line: 2651, column: 17, scope: !6651)
!6662 = !DILocation(line: 2652, column: 14, scope: !6651)
!6663 = distinct !DISubprogram(name: "decode_surrogate", linkageName: "_ZN4core4wtf816decode_surrogate17h7fef71ac8b53fc15E", scope: !2618, file: !6664, line: 423, type: !6665, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !6667)
!6664 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/wtf8.rs", directory: "", checksumkind: CSK_MD5, checksum: "9927292134babddd9c802d4e97599e5d")
!6665 = !DISubroutineType(types: !6666)
!6666 = !{!359, !24, !24}
!6667 = !{!6668, !6669}
!6668 = !DILocalVariable(name: "second_byte", arg: 1, scope: !6663, file: !6664, line: 423, type: !24)
!6669 = !DILocalVariable(name: "third_byte", arg: 2, scope: !6663, file: !6664, line: 423, type: !24)
!6670 = !DILocation(line: 423, column: 21, scope: !6663)
!6671 = !DILocation(line: 423, column: 38, scope: !6663)
!6672 = !DILocation(line: 425, column: 15, scope: !6663)
!6673 = !DILocation(line: 425, column: 14, scope: !6663)
!6674 = !DILocation(line: 425, column: 5, scope: !6663)
!6675 = !DILocation(line: 425, column: 49, scope: !6663)
!6676 = !DILocation(line: 426, column: 2, scope: !6663)
!6677 = distinct !DISubprogram(name: "next_surrogate", linkageName: "_ZN4core4wtf84Wtf814next_surrogate17h4ca7c63da452551aE", scope: !2617, file: !6664, line: 284, type: !6678, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6701, retainedNodes: !6702)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!6680, !6697, !9}
!6680 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, u16)>", scope: !14, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !6681, templateParams: !21, identifier: "b91c27ca3345e55b8fc779a3371e1a03")
!6681 = !{!6682}
!6682 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6680, file: !2, size: 96, align: 32, elements: !6683, templateParams: !21, identifier: "b78e30bd60d1236a8deb97c83bd83d49", discriminator: !6696)
!6683 = !{!6684, !6692}
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !6682, file: !2, baseType: !6685, size: 96, align: 32, extraData: i32 0)
!6685 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !6680, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !6686, identifier: "a6c8cc0bf891858dcfe9a4f0f43ea6f3")
!6686 = !{!6687}
!6687 = !DITemplateTypeParameter(name: "T", type: !6688)
!6688 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, u16)", file: !2, size: 64, align: 32, elements: !6689, templateParams: !21, identifier: "149a26d47b12ca32f750131f209beb2f")
!6689 = !{!6690, !6691}
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6688, file: !2, baseType: !9, size: 32, align: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6688, file: !2, baseType: !359, size: 16, align: 16, offset: 32)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !6682, file: !2, baseType: !6693, size: 96, align: 32, extraData: i32 1)
!6693 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !6680, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !6694, templateParams: !6686, identifier: "587b642e77e6980d7e6b9cbc31e9a2a9")
!6694 = !{!6695}
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6693, file: !2, baseType: !6688, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!6696 = !DIDerivedType(tag: DW_TAG_member, scope: !6680, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!6697 = !DICompositeType(tag: DW_TAG_structure_type, name: "&core::wtf8::Wtf8", file: !2, size: 64, align: 32, elements: !6698, templateParams: !21, identifier: "16351567ab4f174b3a0cb5aa39b4749")
!6698 = !{!6699, !6700}
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6697, file: !2, baseType: !2616, size: 32, align: 32)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6697, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!6701 = !DISubprogram(name: "next_surrogate", linkageName: "_ZN4core4wtf84Wtf814next_surrogate17h4ca7c63da452551aE", scope: !2617, file: !6664, line: 284, type: !6678, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6702 = !{!6703, !6704, !6705, !6707, !6709, !6711, !6713, !6715, !6716, !6717}
!6703 = !DILocalVariable(name: "self", arg: 1, scope: !6677, file: !6664, line: 284, type: !6697)
!6704 = !DILocalVariable(name: "pos", arg: 2, scope: !6677, file: !6664, line: 284, type: !9)
!6705 = !DILocalVariable(name: "iter", scope: !6706, file: !6664, line: 285, type: !1405, align: 32)
!6706 = distinct !DILexicalBlock(scope: !6677, file: !6664, line: 285, column: 9)
!6707 = !DILocalVariable(name: "b", scope: !6708, file: !6664, line: 287, type: !24, align: 8)
!6708 = distinct !DILexicalBlock(scope: !6706, file: !6664, line: 287, column: 13)
!6709 = !DILocalVariable(name: "residual", scope: !6710, file: !6664, line: 287, type: !1702, align: 8)
!6710 = distinct !DILexicalBlock(scope: !6706, file: !6664, line: 287, column: 33)
!6711 = !DILocalVariable(name: "val", scope: !6712, file: !6664, line: 287, type: !244, align: 32)
!6712 = distinct !DILexicalBlock(scope: !6706, file: !6664, line: 287, column: 22)
!6713 = !DILocalVariable(name: "b2", scope: !6714, file: !6664, line: 295, type: !24, align: 8)
!6714 = distinct !DILexicalBlock(scope: !6708, file: !6664, line: 295, column: 21)
!6715 = !DILocalVariable(name: "b2", scope: !6714, file: !6664, line: 295, type: !244, align: 32)
!6716 = !DILocalVariable(name: "b3", scope: !6714, file: !6664, line: 295, type: !24, align: 8)
!6717 = !DILocalVariable(name: "b3", scope: !6714, file: !6664, line: 295, type: !244, align: 32)
!6718 = !DILocation(line: 284, column: 27, scope: !6677)
!6719 = !DILocation(line: 284, column: 34, scope: !6677)
!6720 = !DILocation(line: 285, column: 13, scope: !6706)
!6721 = !DILocation(line: 287, column: 33, scope: !6710)
!6722 = !DILocation(line: 285, column: 35, scope: !6677)
!6723 = !DILocalVariable(name: "self", arg: 1, scope: !6724, file: !1225, line: 17, type: !432)
!6724 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17he38aa287b9ab234bE", scope: !6725, file: !1225, line: 17, type: !6726, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6730, retainedNodes: !6728)
!6725 = !DINamespace(name: "{impl#0}", scope: !1227)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!432, !432, !1364, !1241}
!6728 = !{!6723, !6729}
!6729 = !DILocalVariable(name: "index", arg: 2, scope: !6724, file: !1225, line: 17, type: !1364)
!6730 = !{!23, !6731}
!6731 = !DITemplateTypeParameter(name: "I", type: !1364)
!6732 = !DILocation(line: 17, column: 14, scope: !6724, inlinedAt: !6733)
!6733 = distinct !DILocation(line: 285, column: 34, scope: !6677)
!6734 = !DILocation(line: 17, column: 21, scope: !6724, inlinedAt: !6733)
!6735 = !DILocation(line: 18, column: 15, scope: !6724, inlinedAt: !6733)
!6736 = !DILocation(line: 285, column: 34, scope: !6677)
!6737 = !DILocation(line: 285, column: 42, scope: !6677)
!6738 = !DILocation(line: 287, column: 27, scope: !6706)
!6739 = !DILocation(line: 287, column: 22, scope: !6706)
!6740 = !DILocation(line: 287, column: 22, scope: !6710)
!6741 = !DILocation(line: 287, column: 22, scope: !6712)
!6742 = !DILocation(line: 287, column: 21, scope: !6706)
!6743 = !DILocation(line: 287, column: 17, scope: !6708)
!6744 = !DILocation(line: 288, column: 16, scope: !6708)
!6745 = !DILocation(line: 290, column: 23, scope: !6708)
!6746 = !DILocation(line: 289, column: 17, scope: !6708)
!6747 = !DILocation(line: 293, column: 23, scope: !6708)
!6748 = !DILocation(line: 291, column: 22, scope: !6708)
!6749 = !DILocation(line: 292, column: 17, scope: !6708)
!6750 = !DILocation(line: 294, column: 29, scope: !6708)
!6751 = !DILocation(line: 294, column: 42, scope: !6708)
!6752 = !DILocation(line: 294, column: 23, scope: !6708)
!6753 = !DILocation(line: 294, column: 17, scope: !6708)
!6754 = !DILocation(line: 300, column: 23, scope: !6708)
!6755 = !DILocation(line: 298, column: 26, scope: !6708)
!6756 = !DILocation(line: 295, column: 28, scope: !6708)
!6757 = !DILocation(line: 295, column: 28, scope: !6714)
!6758 = !DILocation(line: 295, column: 39, scope: !6708)
!6759 = !DILocation(line: 295, column: 39, scope: !6714)
!6760 = !DILocation(line: 295, column: 47, scope: !6708)
!6761 = !DILocation(line: 296, column: 38, scope: !6714)
!6762 = !DILocation(line: 296, column: 43, scope: !6714)
!6763 = !DILocation(line: 296, column: 32, scope: !6714)
!6764 = !DILocation(line: 0, scope: !6765)
!6765 = !DILexicalBlockFile(scope: !6708, file: !4885, discriminator: 0)
!6766 = !DILocation(line: 311, column: 6, scope: !6677)
!6767 = !DILocation(line: 293, column: 20, scope: !6708)
!6768 = !DILocation(line: 305, column: 22, scope: !6708)
!6769 = !DILocation(line: 306, column: 22, scope: !6708)
!6770 = !DILocation(line: 307, column: 22, scope: !6708)
!6771 = !DILocation(line: 308, column: 17, scope: !6708)
!6772 = !DILocation(line: 301, column: 22, scope: !6708)
!6773 = !DILocation(line: 302, column: 22, scope: !6708)
!6774 = !DILocation(line: 303, column: 17, scope: !6708)
!6775 = !DILocation(line: 300, column: 20, scope: !6708)
!6776 = !DILocation(line: 290, column: 20, scope: !6708)
!6777 = !DILocation(line: 288, column: 13, scope: !6708)
!6778 = distinct !DISubprogram(name: "from_bytes_unchecked", linkageName: "_ZN4core4wtf84Wtf820from_bytes_unchecked17h0b03043889451617E", scope: !2617, file: !6664, line: 210, type: !6779, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6781, retainedNodes: !6782)
!6779 = !DISubroutineType(types: !6780)
!6780 = !{!6697, !432}
!6781 = !DISubprogram(name: "from_bytes_unchecked", linkageName: "_ZN4core4wtf84Wtf820from_bytes_unchecked17h0b03043889451617E", scope: !2617, file: !6664, line: 210, type: !6779, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6782 = !{!6783}
!6783 = !DILocalVariable(name: "value", arg: 1, scope: !6778, file: !6664, line: 210, type: !432)
!6784 = !DILocation(line: 210, column: 40, scope: !6778)
!6785 = !DILocation(line: 213, column: 6, scope: !6778)
!6786 = distinct !DISubprogram(name: "from_mut_bytes_unchecked", linkageName: "_ZN4core4wtf84Wtf824from_mut_bytes_unchecked17hceb39cf6c353907fE", scope: !2617, file: !6664, line: 220, type: !6787, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6793, retainedNodes: !6794)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{!6789, !5130}
!6789 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut core::wtf8::Wtf8", file: !2, size: 64, align: 32, elements: !6790, templateParams: !21, identifier: "d0ef509611128b43d882d0a2bfe74000")
!6790 = !{!6791, !6792}
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !6789, file: !2, baseType: !2616, size: 32, align: 32)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6789, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!6793 = !DISubprogram(name: "from_mut_bytes_unchecked", linkageName: "_ZN4core4wtf84Wtf824from_mut_bytes_unchecked17hceb39cf6c353907fE", scope: !2617, file: !6664, line: 220, type: !6787, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6794 = !{!6795}
!6795 = !DILocalVariable(name: "value", arg: 1, scope: !6786, file: !6664, line: 220, type: !5130)
!6796 = !DILocation(line: 220, column: 44, scope: !6786)
!6797 = !DILocation(line: 223, column: 6, scope: !6786)
!6798 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core4wtf84Wtf83len17h6b8ffe7c2e815550E", scope: !2617, file: !6664, line: 227, type: !6799, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6801, retainedNodes: !6802)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{!9, !6697}
!6801 = !DISubprogram(name: "len", linkageName: "_ZN4core4wtf84Wtf83len17h6b8ffe7c2e815550E", scope: !2617, file: !6664, line: 227, type: !6799, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6802 = !{!6803}
!6803 = !DILocalVariable(name: "self", arg: 1, scope: !6798, file: !6664, line: 227, type: !6697)
!6804 = !DILocation(line: 227, column: 16, scope: !6798)
!6805 = !DILocation(line: 229, column: 6, scope: !6798)
!6806 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E", scope: !2617, file: !6664, line: 258, type: !6807, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6809, retainedNodes: !6810)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{!432, !6697}
!6809 = !DISubprogram(name: "as_bytes", linkageName: "_ZN4core4wtf84Wtf88as_bytes17heea87beafcb82012E", scope: !2617, file: !6664, line: 258, type: !6807, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6810 = !{!6811}
!6811 = !DILocalVariable(name: "self", arg: 1, scope: !6806, file: !6664, line: 258, type: !6697)
!6812 = !DILocation(line: 258, column: 21, scope: !6806)
!6813 = !DILocation(line: 260, column: 6, scope: !6806)
!6814 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4wtf89CodePoint18from_u32_unchecked17hb8f3683f824849b5E", scope: !6815, file: !6664, line: 54, type: !6818, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6820, retainedNodes: !6821)
!6815 = !DICompositeType(tag: DW_TAG_structure_type, name: "CodePoint", scope: !2618, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !6816, templateParams: !21, identifier: "ad92429d6ab4fa337685a9cadc2e48ef")
!6816 = !{!6817}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6815, file: !2, baseType: !2712, size: 32, align: 32, flags: DIFlagPrivate)
!6818 = !DISubroutineType(types: !6819)
!6819 = !{!6815, !51}
!6820 = !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4wtf89CodePoint18from_u32_unchecked17hb8f3683f824849b5E", scope: !6815, file: !6664, line: 54, type: !6818, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6821 = !{!6822}
!6822 = !DILocalVariable(name: "value", arg: 1, scope: !6814, file: !6664, line: 54, type: !51)
!6823 = !DILocation(line: 54, column: 38, scope: !6814)
!6824 = !DILocation(line: 56, column: 28, scope: !6814)
!6825 = !DILocation(line: 57, column: 6, scope: !6814)
!6826 = distinct !DISubprogram(name: "to_u32", linkageName: "_ZN4core4wtf89CodePoint6to_u3217h02d6270e7c09274aE", scope: !6815, file: !6664, line: 78, type: !6827, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6830, retainedNodes: !6831)
!6827 = !DISubroutineType(types: !6828)
!6828 = !{!51, !6829}
!6829 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::wtf8::CodePoint", baseType: !6815, size: 32, align: 32, dwarfAddressSpace: 0)
!6830 = !DISubprogram(name: "to_u32", linkageName: "_ZN4core4wtf89CodePoint6to_u3217h02d6270e7c09274aE", scope: !6815, file: !6664, line: 78, type: !6827, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6831 = !{!6832}
!6832 = !DILocalVariable(name: "self", arg: 1, scope: !6826, file: !6664, line: 78, type: !6829)
!6833 = !DILocation(line: 78, column: 19, scope: !6826)
!6834 = !DILocation(line: 79, column: 9, scope: !6826)
!6835 = !DILocation(line: 79, column: 16, scope: !6826)
!6836 = !DILocation(line: 80, column: 6, scope: !6826)
!6837 = distinct !DISubprogram(name: "from_char", linkageName: "_ZN4core4wtf89CodePoint9from_char17hdb05d5e5a71cbfebE", scope: !6815, file: !6664, line: 71, type: !6838, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6840, retainedNodes: !6841)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{!6815, !574}
!6840 = !DISubprogram(name: "from_char", linkageName: "_ZN4core4wtf89CodePoint9from_char17hdb05d5e5a71cbfebE", scope: !6815, file: !6664, line: 71, type: !6838, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6841 = !{!6842}
!6842 = !DILocalVariable(name: "value", arg: 1, scope: !6837, file: !6664, line: 71, type: !574)
!6843 = !DILocation(line: 71, column: 22, scope: !6837)
!6844 = !DILocation(line: 73, column: 18, scope: !6837)
!6845 = !DILocation(line: 74, column: 6, scope: !6837)
!6846 = distinct !DISubprogram(name: "size_align<alloc::rc::RcInner<()>>", linkageName: "_ZN4core5alloc6layout10size_align17h043df471973d8cceE", scope: !40, file: !6847, line: 19, type: !6848, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6854)
!6847 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/alloc/layout.rs", directory: "", checksumkind: CSK_MD5, checksum: "f4c671648a78730d8e2bc82acdc17667")
!6848 = !DISubroutineType(types: !6849)
!6849 = !{!6850}
!6850 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, usize)", file: !2, size: 64, align: 32, elements: !6851, templateParams: !21, identifier: "2f134127956ac419dda29236a1891616")
!6851 = !{!6852, !6853}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6850, file: !2, baseType: !9, size: 32, align: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !6850, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!6854 = !{!6855}
!6855 = !DITemplateTypeParameter(name: "T", type: !6856)
!6856 = !DICompositeType(tag: DW_TAG_structure_type, name: "RcInner<()>", scope: !2049, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !6857, templateParams: !328, identifier: "e48fdc7797c6e18ffc879f0288a177fb")
!6857 = !{!6858, !6859, !6860}
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !6856, file: !2, baseType: !2052, size: 32, align: 32, flags: DIFlagPrivate)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !6856, file: !2, baseType: !2052, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6856, file: !2, baseType: !7, align: 8, offset: 64, flags: DIFlagPrivate)
!6861 = !DILocation(line: 21, column: 2, scope: !6846)
!6862 = distinct !DISubprogram(name: "size_align<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout10size_align17h0c77b4273ffd08e1E", scope: !40, file: !6847, line: 19, type: !6848, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6863)
!6863 = !{!6864}
!6864 = !DITemplateTypeParameter(name: "T", type: !6865)
!6865 = !DICompositeType(tag: DW_TAG_structure_type, name: "ArcInner<()>", scope: !131, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !6866, templateParams: !328, identifier: "e60af0301fb451d0264cbae11b9439ae")
!6866 = !{!6867, !6868, !6869}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "strong", scope: !6865, file: !2, baseType: !140, size: 32, align: 32, flags: DIFlagPrivate)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "weak", scope: !6865, file: !2, baseType: !140, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6865, file: !2, baseType: !7, align: 8, offset: 64, flags: DIFlagPrivate)
!6870 = !DILocation(line: 21, column: 2, scope: !6862)
!6871 = distinct !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17hd6bb20c13501b721E", scope: !39, file: !6847, line: 334, type: !6872, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6874, retainedNodes: !6875)
!6872 = !DISubroutineType(types: !6873)
!6873 = !{!39, !38}
!6874 = !DISubprogram(name: "pad_to_align", linkageName: "_ZN4core5alloc6layout6Layout12pad_to_align17hd6bb20c13501b721E", scope: !39, file: !6847, line: 334, type: !6872, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6875 = !{!6876, !6877}
!6876 = !DILocalVariable(name: "self", arg: 1, scope: !6871, file: !6847, line: 334, type: !38)
!6877 = !DILocalVariable(name: "new_size", scope: !6878, file: !6847, line: 339, type: !9, align: 32)
!6878 = distinct !DILexicalBlock(scope: !6871, file: !6847, line: 339, column: 9)
!6879 = !DILocation(line: 334, column: 31, scope: !6871)
!6880 = !DILocation(line: 339, column: 61, scope: !6871)
!6881 = !DILocation(line: 339, column: 29, scope: !6871)
!6882 = !DILocation(line: 339, column: 13, scope: !6878)
!6883 = !DILocation(line: 342, column: 67, scope: !6878)
!6884 = !DILocation(line: 342, column: 18, scope: !6878)
!6885 = !DILocation(line: 343, column: 6, scope: !6871)
!6886 = distinct !DISubprogram(name: "for_value_raw<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h09860ca8dbc1ac9cE", scope: !39, file: !6847, line: 220, type: !6887, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2599, declaration: !6889, retainedNodes: !6890)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{!39, !2593}
!6889 = !DISubprogram(name: "for_value_raw<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h09860ca8dbc1ac9cE", scope: !39, file: !6847, line: 220, type: !6887, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2599)
!6890 = !{!6891, !6892, !6894}
!6891 = !DILocalVariable(name: "t", arg: 1, scope: !6886, file: !6847, line: 220, type: !2593)
!6892 = !DILocalVariable(name: "size", scope: !6893, file: !6847, line: 222, type: !9, align: 32)
!6893 = distinct !DILexicalBlock(scope: !6886, file: !6847, line: 222, column: 9)
!6894 = !DILocalVariable(name: "align", scope: !6893, file: !6847, line: 222, type: !9, align: 32)
!6895 = !DILocation(line: 220, column: 50, scope: !6886)
!6896 = !DILocation(line: 222, column: 39, scope: !6886)
!6897 = !DILocation(line: 222, column: 64, scope: !6886)
!6898 = !DILocation(line: 222, column: 14, scope: !6886)
!6899 = !DILocation(line: 222, column: 14, scope: !6893)
!6900 = !DILocation(line: 222, column: 20, scope: !6886)
!6901 = !DILocation(line: 222, column: 20, scope: !6893)
!6902 = !DILocation(line: 224, column: 18, scope: !6893)
!6903 = !DILocation(line: 225, column: 6, scope: !6886)
!6904 = distinct !DISubprogram(name: "for_value_raw<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h24b292b48d264a7cE", scope: !39, file: !6847, line: 220, type: !6905, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2585, declaration: !6907, retainedNodes: !6908)
!6905 = !DISubroutineType(types: !6906)
!6906 = !{!39, !2573}
!6907 = !DISubprogram(name: "for_value_raw<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h24b292b48d264a7cE", scope: !39, file: !6847, line: 220, type: !6905, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2585)
!6908 = !{!6909, !6910, !6912}
!6909 = !DILocalVariable(name: "t", arg: 1, scope: !6904, file: !6847, line: 220, type: !2573)
!6910 = !DILocalVariable(name: "size", scope: !6911, file: !6847, line: 222, type: !9, align: 32)
!6911 = distinct !DILexicalBlock(scope: !6904, file: !6847, line: 222, column: 9)
!6912 = !DILocalVariable(name: "align", scope: !6911, file: !6847, line: 222, type: !9, align: 32)
!6913 = !DILocation(line: 220, column: 50, scope: !6904)
!6914 = !DILocation(line: 222, column: 39, scope: !6904)
!6915 = !DILocation(line: 222, column: 64, scope: !6904)
!6916 = !DILocation(line: 222, column: 14, scope: !6904)
!6917 = !DILocation(line: 222, column: 14, scope: !6911)
!6918 = !DILocation(line: 222, column: 20, scope: !6904)
!6919 = !DILocation(line: 222, column: 20, scope: !6911)
!6920 = !DILocation(line: 224, column: 18, scope: !6911)
!6921 = !DILocation(line: 225, column: 6, scope: !6904)
!6922 = distinct !DISubprogram(name: "for_value_raw<[u8]>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h769be55b98bbc847E", scope: !39, file: !6847, line: 220, type: !6923, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !6925, retainedNodes: !6926)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!39, !1230}
!6925 = !DISubprogram(name: "for_value_raw<[u8]>", linkageName: "_ZN4core5alloc6layout6Layout13for_value_raw17h769be55b98bbc847E", scope: !39, file: !6847, line: 220, type: !6923, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!6926 = !{!6927, !6928, !6930}
!6927 = !DILocalVariable(name: "t", arg: 1, scope: !6922, file: !6847, line: 220, type: !1230)
!6928 = !DILocalVariable(name: "size", scope: !6929, file: !6847, line: 222, type: !9, align: 32)
!6929 = distinct !DILexicalBlock(scope: !6922, file: !6847, line: 222, column: 9)
!6930 = !DILocalVariable(name: "align", scope: !6929, file: !6847, line: 222, type: !9, align: 32)
!6931 = !DILocation(line: 220, column: 50, scope: !6922)
!6932 = !DILocation(line: 222, column: 39, scope: !6922)
!6933 = !DILocation(line: 222, column: 64, scope: !6922)
!6934 = !DILocation(line: 222, column: 14, scope: !6922)
!6935 = !DILocation(line: 222, column: 14, scope: !6929)
!6936 = !DILocation(line: 222, column: 20, scope: !6922)
!6937 = !DILocation(line: 222, column: 20, scope: !6929)
!6938 = !DILocation(line: 224, column: 18, scope: !6929)
!6939 = !DILocation(line: 225, column: 6, scope: !6922)
!6940 = distinct !DISubprogram(name: "repeat_packed", linkageName: "_ZN4core5alloc6layout6Layout13repeat_packed17hd684fbfa65570bc6E", scope: !39, file: !6847, line: 462, type: !6941, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6959, retainedNodes: !6960)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{!6943, !38, !9}
!6943 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", scope: !335, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !6944, templateParams: !21, identifier: "5fb4945a41e4cf609b401d9d5aa75c15")
!6944 = !{!6945}
!6945 = !DICompositeType(tag: DW_TAG_variant_part, scope: !6943, file: !2, size: 64, align: 32, elements: !6946, templateParams: !21, identifier: "5e0e9c9011f874e1679d29c17f0e0998", discriminator: !6958)
!6946 = !{!6947, !6954}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !6945, file: !2, baseType: !6948, size: 64, align: 32)
!6948 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !6943, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !6949, templateParams: !6951, identifier: "de1ad16c66072b4b7935f0d8193ab7ff")
!6949 = !{!6950}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6948, file: !2, baseType: !39, size: 64, align: 32, flags: DIFlagPublic)
!6951 = !{!2184, !6952}
!6952 = !DITemplateTypeParameter(name: "E", type: !6953)
!6953 = !DICompositeType(tag: DW_TAG_structure_type, name: "LayoutError", scope: !40, file: !2, align: 8, flags: DIFlagPublic, elements: !21, identifier: "a11166d23ea1704fada18ec860323244")
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !6945, file: !2, baseType: !6955, size: 64, align: 32, extraData: i32 0)
!6955 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !6943, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !6956, templateParams: !6951, identifier: "d9812787763d4059bcaff15c8edea88e")
!6956 = !{!6957}
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !6955, file: !2, baseType: !6953, align: 8, flags: DIFlagPublic)
!6958 = !DIDerivedType(tag: DW_TAG_member, scope: !6943, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!6959 = !DISubprogram(name: "repeat_packed", linkageName: "_ZN4core5alloc6layout6Layout13repeat_packed17hd684fbfa65570bc6E", scope: !39, file: !6847, line: 462, type: !6941, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6960 = !{!6961, !6962, !6963}
!6961 = !DILocalVariable(name: "self", arg: 1, scope: !6940, file: !6847, line: 462, type: !38)
!6962 = !DILocalVariable(name: "n", arg: 2, scope: !6940, file: !6847, line: 462, type: !9)
!6963 = !DILocalVariable(name: "size", scope: !6964, file: !6847, line: 463, type: !9, align: 32)
!6964 = distinct !DILexicalBlock(scope: !6940, file: !6847, line: 463, column: 54)
!6965 = !DILocation(line: 462, column: 32, scope: !6940)
!6966 = !DILocation(line: 462, column: 39, scope: !6940)
!6967 = !DILocation(line: 463, column: 29, scope: !6964)
!6968 = !DILocation(line: 463, column: 39, scope: !6964)
!6969 = !DILocation(line: 463, column: 16, scope: !6964)
!6970 = !DILocation(line: 463, column: 21, scope: !6964)
!6971 = !DILocation(line: 465, column: 47, scope: !6964)
!6972 = !DILocation(line: 465, column: 13, scope: !6964)
!6973 = !DILocation(line: 467, column: 13, scope: !6940)
!6974 = !DILocation(line: 463, column: 9, scope: !6940)
!6975 = !DILocation(line: 469, column: 6, scope: !6940)
!6976 = !DILocation(line: 462, column: 5, scope: !6940)
!6977 = distinct !DISubprogram(name: "padding_needed_for", linkageName: "_ZN4core5alloc6layout6Layout18padding_needed_for17h7c7334a8a9cd85d3E", scope: !39, file: !6847, line: 285, type: !6978, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !6980, retainedNodes: !6981)
!6978 = !DISubroutineType(types: !6979)
!6979 = !{!9, !38, !9}
!6980 = !DISubprogram(name: "padding_needed_for", linkageName: "_ZN4core5alloc6layout6Layout18padding_needed_for17h7c7334a8a9cd85d3E", scope: !39, file: !6847, line: 285, type: !6978, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!6981 = !{!6982, !6983, !6984, !6986}
!6982 = !DILocalVariable(name: "self", arg: 1, scope: !6977, file: !6847, line: 285, type: !38)
!6983 = !DILocalVariable(name: "align", arg: 2, scope: !6977, file: !6847, line: 285, type: !9)
!6984 = !DILocalVariable(name: "align", scope: !6985, file: !6847, line: 287, type: !45, align: 32)
!6985 = distinct !DILexicalBlock(scope: !6977, file: !6847, line: 287, column: 9)
!6986 = !DILocalVariable(name: "len_rounded_up", scope: !6987, file: !6847, line: 288, type: !9, align: 32)
!6987 = distinct !DILexicalBlock(scope: !6985, file: !6847, line: 288, column: 9)
!6988 = !DILocation(line: 285, column: 37, scope: !6977)
!6989 = !DILocation(line: 285, column: 44, scope: !6977)
!6990 = !DILocation(line: 287, column: 27, scope: !6977)
!6991 = !DILocation(line: 287, column: 13, scope: !6977)
!6992 = !DILocation(line: 287, column: 18, scope: !6977)
!6993 = !DILocation(line: 287, column: 18, scope: !6985)
!6994 = !DILocation(line: 288, column: 35, scope: !6985)
!6995 = !DILocation(line: 288, column: 13, scope: !6987)
!6996 = !DILocation(line: 290, column: 48, scope: !6987)
!6997 = !DILocation(line: 290, column: 18, scope: !6987)
!6998 = !DILocation(line: 291, column: 6, scope: !6977)
!6999 = !DILocation(line: 287, column: 63, scope: !6977)
!7000 = !DILocation(line: 287, column: 56, scope: !6977)
!7001 = !DILocation(line: 285, column: 5, scope: !6977)
!7002 = distinct !DISubprogram(name: "from_size_alignment", linkageName: "_ZN4core5alloc6layout6Layout19from_size_alignment17hc7ff22cca4893d6dE", scope: !39, file: !6847, line: 110, type: !7003, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7005, retainedNodes: !7006)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{!6943, !9, !45}
!7005 = !DISubprogram(name: "from_size_alignment", linkageName: "_ZN4core5alloc6layout6Layout19from_size_alignment17hc7ff22cca4893d6dE", scope: !39, file: !6847, line: 110, type: !7003, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7006 = !{!7007, !7008}
!7007 = !DILocalVariable(name: "size", arg: 1, scope: !7002, file: !6847, line: 110, type: !9)
!7008 = !DILocalVariable(name: "align", arg: 2, scope: !7002, file: !6847, line: 110, type: !45)
!7009 = !DILocation(line: 110, column: 34, scope: !7002)
!7010 = !DILocation(line: 110, column: 47, scope: !7002)
!7011 = !DILocalVariable(name: "align", arg: 1, scope: !7012, file: !6847, line: 87, type: !45)
!7012 = distinct !DISubprogram(name: "max_size_for_align", linkageName: "_ZN4core5alloc6layout6Layout18max_size_for_align17hf2d011a50771de1fE", scope: !39, file: !6847, line: 87, type: !4516, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7013, retainedNodes: !7014)
!7013 = !DISubprogram(name: "max_size_for_align", linkageName: "_ZN4core5alloc6layout6Layout18max_size_for_align17hf2d011a50771de1fE", scope: !39, file: !6847, line: 87, type: !4516, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7014 = !{!7011}
!7015 = !DILocation(line: 87, column: 33, scope: !7012, inlinedAt: !7016)
!7016 = distinct !DILocation(line: 111, column: 19, scope: !7002)
!7017 = !DILocation(line: 105, column: 63, scope: !7012, inlinedAt: !7016)
!7018 = !DILocation(line: 105, column: 18, scope: !7012, inlinedAt: !7016)
!7019 = !DILocation(line: 111, column: 12, scope: !7002)
!7020 = !DILocation(line: 116, column: 9, scope: !7002)
!7021 = !DILocation(line: 117, column: 6, scope: !7002)
!7022 = !DILocation(line: 112, column: 20, scope: !7002)
!7023 = distinct !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E", scope: !39, file: !6847, line: 130, type: !7024, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7026, retainedNodes: !7027)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{!39, !9, !9, !1241}
!7026 = !DISubprogram(name: "from_size_align_unchecked", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked17h29b95c9bd4d0bc75E", scope: !39, file: !6847, line: 130, type: !7024, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7027 = !{!7028, !7029}
!7028 = !DILocalVariable(name: "size", arg: 1, scope: !7023, file: !6847, line: 130, type: !9)
!7029 = !DILocalVariable(name: "align", arg: 2, scope: !7023, file: !6847, line: 130, type: !9)
!7030 = !DILocation(line: 130, column: 51, scope: !7023)
!7031 = !DILocation(line: 130, column: 64, scope: !7023)
!7032 = !DILocation(line: 77, column: 35, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7023, file: !473, discriminator: 0)
!7034 = !DILocation(line: 78, column: 17, scope: !7033)
!7035 = !DILocation(line: 142, column: 6, scope: !7023)
!7036 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5alloc6layout6Layout25from_size_align_unchecked18precondition_check17ha019ed5da67ab6f9E", scope: !7037, file: !473, line: 68, type: !2968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7039)
!7037 = !DINamespace(name: "from_size_align_unchecked", scope: !7038)
!7038 = !DINamespace(name: "{impl#0}", scope: !40)
!7039 = !{!7040, !7041, !7042}
!7040 = !DILocalVariable(name: "size", arg: 1, scope: !7036, file: !473, line: 68, type: !9)
!7041 = !DILocalVariable(name: "align", arg: 2, scope: !7036, file: !473, line: 68, type: !9)
!7042 = !DILocalVariable(name: "msg", scope: !7043, file: !473, line: 70, type: !124, align: 32)
!7043 = distinct !DILexicalBlock(scope: !7036, file: !473, line: 70, column: 21)
!7044 = !DILocation(line: 68, column: 43, scope: !7036)
!7045 = !DILocation(line: 70, column: 25, scope: !7043)
!7046 = !DILocation(line: 138, column: 18, scope: !7047)
!7047 = !DILexicalBlockFile(scope: !7036, file: !6847, discriminator: 0)
!7048 = !DILocation(line: 73, column: 94, scope: !7043)
!7049 = !DILocation(line: 73, column: 59, scope: !7043)
!7050 = !DILocation(line: 73, column: 21, scope: !7043)
!7051 = !DILocation(line: 75, column: 14, scope: !7036)
!7052 = distinct !DISubprogram(name: "size_rounded_up_to_custom_align", linkageName: "_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17ha0b8d205b201db59E", scope: !39, file: !6847, line: 298, type: !7053, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7055, retainedNodes: !7056)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{!9, !38, !45}
!7055 = !DISubprogram(name: "size_rounded_up_to_custom_align", linkageName: "_ZN4core5alloc6layout6Layout31size_rounded_up_to_custom_align17ha0b8d205b201db59E", scope: !39, file: !6847, line: 298, type: !7053, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7056 = !{!7057, !7058, !7059, !7061}
!7057 = !DILocalVariable(name: "self", arg: 1, scope: !7052, file: !6847, line: 298, type: !38)
!7058 = !DILocalVariable(name: "align", arg: 2, scope: !7052, file: !6847, line: 298, type: !45)
!7059 = !DILocalVariable(name: "align_m1", scope: !7060, file: !6847, line: 318, type: !9, align: 32)
!7060 = distinct !DILexicalBlock(scope: !7052, file: !6847, line: 318, column: 13)
!7061 = !DILocalVariable(name: "size_rounded_up", scope: !7062, file: !6847, line: 319, type: !9, align: 32)
!7062 = distinct !DILexicalBlock(scope: !7060, file: !6847, line: 319, column: 13)
!7063 = !DILocation(line: 298, column: 46, scope: !7052)
!7064 = !DILocation(line: 298, column: 53, scope: !7052)
!7065 = !DILocation(line: 318, column: 48, scope: !7052)
!7066 = !DILocation(line: 318, column: 28, scope: !7052)
!7067 = !DILocation(line: 318, column: 17, scope: !7060)
!7068 = !DILocation(line: 319, column: 49, scope: !7060)
!7069 = !DILocation(line: 319, column: 35, scope: !7060)
!7070 = !DILocation(line: 319, column: 72, scope: !7060)
!7071 = !DILocation(line: 319, column: 17, scope: !7062)
!7072 = !DILocation(line: 322, column: 6, scope: !7052)
!7073 = distinct !DISubprogram(name: "new<alloc::rc::RcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h8411cd06de775e47E", scope: !39, file: !6847, line: 170, type: !7074, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6854, declaration: !7076, retainedNodes: !7077)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!39}
!7076 = !DISubprogram(name: "new<alloc::rc::RcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h8411cd06de775e47E", scope: !39, file: !6847, line: 170, type: !7074, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6854)
!7077 = !{!7078, !7080}
!7078 = !DILocalVariable(name: "size", scope: !7079, file: !6847, line: 171, type: !9, align: 32)
!7079 = distinct !DILexicalBlock(scope: !7073, file: !6847, line: 171, column: 9)
!7080 = !DILocalVariable(name: "align", scope: !7079, file: !6847, line: 171, type: !9, align: 32)
!7081 = !DILocation(line: 171, column: 29, scope: !7073)
!7082 = !DILocation(line: 171, column: 14, scope: !7073)
!7083 = !DILocation(line: 171, column: 14, scope: !7079)
!7084 = !DILocation(line: 171, column: 20, scope: !7073)
!7085 = !DILocation(line: 171, column: 20, scope: !7079)
!7086 = !DILocation(line: 175, column: 18, scope: !7079)
!7087 = !DILocation(line: 176, column: 6, scope: !7073)
!7088 = distinct !DISubprogram(name: "new<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h9702638446ad85a0E", scope: !39, file: !6847, line: 170, type: !7074, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6863, declaration: !7089, retainedNodes: !7090)
!7089 = !DISubprogram(name: "new<alloc::sync::ArcInner<()>>", linkageName: "_ZN4core5alloc6layout6Layout3new17h9702638446ad85a0E", scope: !39, file: !6847, line: 170, type: !7074, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6863)
!7090 = !{!7091, !7093}
!7091 = !DILocalVariable(name: "size", scope: !7092, file: !6847, line: 171, type: !9, align: 32)
!7092 = distinct !DILexicalBlock(scope: !7088, file: !6847, line: 171, column: 9)
!7093 = !DILocalVariable(name: "align", scope: !7092, file: !6847, line: 171, type: !9, align: 32)
!7094 = !DILocation(line: 171, column: 29, scope: !7088)
!7095 = !DILocation(line: 171, column: 14, scope: !7088)
!7096 = !DILocation(line: 171, column: 14, scope: !7092)
!7097 = !DILocation(line: 171, column: 20, scope: !7088)
!7098 = !DILocation(line: 171, column: 20, scope: !7092)
!7099 = !DILocation(line: 175, column: 18, scope: !7092)
!7100 = !DILocation(line: 176, column: 6, scope: !7088)
!7101 = distinct !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE", scope: !39, file: !6847, line: 149, type: !7102, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7104, retainedNodes: !7105)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{!9, !38}
!7104 = !DISubprogram(name: "size", linkageName: "_ZN4core5alloc6layout6Layout4size17h71dd8fd59754fafaE", scope: !39, file: !6847, line: 149, type: !7102, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7105 = !{!7106}
!7106 = !DILocalVariable(name: "self", arg: 1, scope: !7101, file: !6847, line: 149, type: !38)
!7107 = !DILocation(line: 149, column: 23, scope: !7101)
!7108 = !DILocation(line: 150, column: 9, scope: !7101)
!7109 = !DILocation(line: 151, column: 6, scope: !7101)
!7110 = distinct !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE", scope: !39, file: !6847, line: 161, type: !7102, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7111, retainedNodes: !7112)
!7111 = !DISubprogram(name: "align", linkageName: "_ZN4core5alloc6layout6Layout5align17h253bdd2b5ea7ce6dE", scope: !39, file: !6847, line: 161, type: !7102, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7112 = !{!7113}
!7113 = !DILocalVariable(name: "self", arg: 1, scope: !7110, file: !6847, line: 161, type: !38)
!7114 = !DILocation(line: 161, column: 24, scope: !7110)
!7115 = !DILocation(line: 162, column: 9, scope: !7110)
!7116 = !DILocation(line: 162, column: 20, scope: !7110)
!7117 = !DILocation(line: 163, column: 6, scope: !7110)
!7118 = distinct !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17hbb3a65fd97d1bfd1E", scope: !39, file: !6847, line: 494, type: !7119, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !7121, retainedNodes: !7122)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{!6943, !9}
!7121 = !DISubprogram(name: "array<u8>", linkageName: "_ZN4core5alloc6layout6Layout5array17hbb3a65fd97d1bfd1E", scope: !39, file: !6847, line: 494, type: !7119, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!7122 = !{!7123}
!7123 = !DILocalVariable(name: "n", arg: 1, scope: !7118, file: !6847, line: 494, type: !9)
!7124 = !DILocation(line: 494, column: 27, scope: !7118)
!7125 = !DILocation(line: 496, column: 16, scope: !7118)
!7126 = !DILocation(line: 523, column: 6, scope: !7118)
!7127 = distinct !DISubprogram(name: "inner", linkageName: "_ZN4core5alloc6layout6Layout5array5inner17hf986857a41e92cb7E", scope: !7128, file: !6847, line: 499, type: !7129, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7131)
!7128 = !DINamespace(name: "array", scope: !7038)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!6943, !39, !9}
!7131 = !{!7132, !7133, !7134, !7136, !7137}
!7132 = !DILocalVariable(name: "element_layout", arg: 1, scope: !7127, file: !6847, line: 499, type: !39)
!7133 = !DILocalVariable(name: "n", arg: 2, scope: !7127, file: !6847, line: 499, type: !9)
!7134 = !DILocalVariable(name: "element_size", scope: !7135, file: !6847, line: 500, type: !9, align: 32)
!7135 = distinct !DILexicalBlock(scope: !7127, file: !6847, line: 500, column: 13)
!7136 = !DILocalVariable(name: "align", scope: !7135, file: !6847, line: 500, type: !45, align: 32)
!7137 = !DILocalVariable(name: "array_size", scope: !7138, file: !6847, line: 516, type: !9, align: 32)
!7138 = distinct !DILexicalBlock(scope: !7135, file: !6847, line: 516, column: 13)
!7139 = !DILocation(line: 499, column: 24, scope: !7127)
!7140 = !DILocation(line: 499, column: 48, scope: !7127)
!7141 = !DILocation(line: 500, column: 32, scope: !7127)
!7142 = !DILocation(line: 500, column: 32, scope: !7135)
!7143 = !DILocation(line: 500, column: 46, scope: !7127)
!7144 = !DILocation(line: 500, column: 46, scope: !7135)
!7145 = !DILocation(line: 508, column: 16, scope: !7135)
!7146 = !DILocation(line: 516, column: 39, scope: !7135)
!7147 = !DILocation(line: 516, column: 17, scope: !7138)
!7148 = !DILocation(line: 521, column: 77, scope: !7138)
!7149 = !DILocation(line: 521, column: 25, scope: !7138)
!7150 = !DILocation(line: 521, column: 22, scope: !7138)
!7151 = !DILocation(line: 522, column: 10, scope: !7127)
!7152 = !DILocation(line: 87, column: 33, scope: !7012, inlinedAt: !7153)
!7153 = distinct !DILocation(line: 508, column: 41, scope: !7135)
!7154 = !DILocation(line: 105, column: 63, scope: !7012, inlinedAt: !7153)
!7155 = !DILocation(line: 105, column: 18, scope: !7012, inlinedAt: !7153)
!7156 = !DILocation(line: 508, column: 41, scope: !7135)
!7157 = !DILocation(line: 508, column: 37, scope: !7135)
!7158 = !DILocation(line: 509, column: 24, scope: !7135)
!7159 = distinct !DISubprogram(name: "extend", linkageName: "_ZN4core5alloc6layout6Layout6extend17h66fe036cba65f0e0E", scope: !39, file: !6847, line: 431, type: !7160, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7181, retainedNodes: !7182)
!7160 = !DISubroutineType(types: !7161)
!7161 = !{!7162, !38, !39}
!7162 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !7163, templateParams: !21, identifier: "33efe9f5be4fca2db48b9f448c3d1817")
!7163 = !{!7164}
!7164 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7162, file: !2, size: 96, align: 32, elements: !7165, templateParams: !21, identifier: "c5c551933bd0fb8bb0ebf59b871ce2c2", discriminator: !7180)
!7165 = !{!7166, !7176}
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !7164, file: !2, baseType: !7167, size: 96, align: 32)
!7167 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !7162, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !7168, templateParams: !7174, identifier: "fce424314b101f09b3e2aa1c26740f19")
!7168 = !{!7169}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7167, file: !2, baseType: !7170, size: 96, align: 32, flags: DIFlagPublic)
!7170 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::alloc::layout::Layout, usize)", file: !2, size: 96, align: 32, elements: !7171, templateParams: !21, identifier: "a9b6a9017197bb64415d1f5a28a1696c")
!7171 = !{!7172, !7173}
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7170, file: !2, baseType: !39, size: 64, align: 32)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7170, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!7174 = !{!7175, !6952}
!7175 = !DITemplateTypeParameter(name: "T", type: !7170)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !7164, file: !2, baseType: !7177, size: 96, align: 32, extraData: i32 0)
!7177 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !7162, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !7178, templateParams: !7174, identifier: "36f18c0aa4150a81ac894e226e337477")
!7178 = !{!7179}
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7177, file: !2, baseType: !6953, align: 8, flags: DIFlagPublic)
!7180 = !DIDerivedType(tag: DW_TAG_member, scope: !7162, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!7181 = !DISubprogram(name: "extend", linkageName: "_ZN4core5alloc6layout6Layout6extend17h66fe036cba65f0e0E", scope: !39, file: !6847, line: 431, type: !7160, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7182 = !{!7183, !7184, !7185, !7187, !7189, !7191}
!7183 = !DILocalVariable(name: "self", arg: 1, scope: !7159, file: !6847, line: 431, type: !38)
!7184 = !DILocalVariable(name: "next", arg: 2, scope: !7159, file: !6847, line: 431, type: !39)
!7185 = !DILocalVariable(name: "new_align", scope: !7186, file: !6847, line: 432, type: !45, align: 32)
!7186 = distinct !DILexicalBlock(scope: !7159, file: !6847, line: 432, column: 9)
!7187 = !DILocalVariable(name: "offset", scope: !7188, file: !6847, line: 433, type: !9, align: 32)
!7188 = distinct !DILexicalBlock(scope: !7186, file: !6847, line: 433, column: 9)
!7189 = !DILocalVariable(name: "new_size", scope: !7190, file: !6847, line: 439, type: !9, align: 32)
!7190 = distinct !DILexicalBlock(scope: !7188, file: !6847, line: 439, column: 9)
!7191 = !DILocalVariable(name: "layout", scope: !7192, file: !6847, line: 441, type: !39, align: 32)
!7192 = distinct !DILexicalBlock(scope: !7190, file: !6847, line: 441, column: 78)
!7193 = !DILocation(line: 431, column: 25, scope: !7159)
!7194 = !DILocation(line: 431, column: 32, scope: !7159)
!7195 = !DILocation(line: 432, column: 40, scope: !7159)
!7196 = !DILocation(line: 432, column: 25, scope: !7159)
!7197 = !DILocation(line: 432, column: 13, scope: !7186)
!7198 = !DILocation(line: 433, column: 27, scope: !7186)
!7199 = !DILocation(line: 433, column: 13, scope: !7188)
!7200 = !DILocation(line: 439, column: 33, scope: !7188)
!7201 = !DILocation(line: 439, column: 13, scope: !7190)
!7202 = !DILocation(line: 441, column: 29, scope: !7192)
!7203 = !DILocation(line: 441, column: 16, scope: !7192)
!7204 = !DILocation(line: 444, column: 13, scope: !7190)
!7205 = !DILocation(line: 441, column: 9, scope: !7190)
!7206 = !DILocation(line: 441, column: 19, scope: !7192)
!7207 = !DILocation(line: 442, column: 16, scope: !7192)
!7208 = !DILocation(line: 442, column: 13, scope: !7192)
!7209 = !DILocation(line: 446, column: 6, scope: !7159)
!7210 = !DILocation(line: 431, column: 5, scope: !7159)
!7211 = distinct !DISubprogram(name: "repeat", linkageName: "_ZN4core5alloc6layout6Layout6repeat17h3713722149b2470fE", scope: !39, file: !6847, line: 374, type: !7212, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7214, retainedNodes: !7215)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!7162, !38, !9}
!7214 = !DISubprogram(name: "repeat", linkageName: "_ZN4core5alloc6layout6Layout6repeat17h3713722149b2470fE", scope: !39, file: !6847, line: 374, type: !7212, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7215 = !{!7216, !7217, !7218, !7220}
!7216 = !DILocalVariable(name: "self", arg: 1, scope: !7211, file: !6847, line: 374, type: !38)
!7217 = !DILocalVariable(name: "n", arg: 2, scope: !7211, file: !6847, line: 374, type: !9)
!7218 = !DILocalVariable(name: "padded", scope: !7219, file: !6847, line: 375, type: !39, align: 32)
!7219 = distinct !DILexicalBlock(scope: !7211, file: !6847, line: 375, column: 9)
!7220 = !DILocalVariable(name: "repeated", scope: !7221, file: !6847, line: 376, type: !39, align: 32)
!7221 = distinct !DILexicalBlock(scope: !7219, file: !6847, line: 376, column: 55)
!7222 = !DILocation(line: 374, column: 25, scope: !7211)
!7223 = !DILocation(line: 374, column: 32, scope: !7211)
!7224 = !DILocation(line: 375, column: 13, scope: !7219)
!7225 = !DILocation(line: 375, column: 27, scope: !7211)
!7226 = !DILocation(line: 376, column: 38, scope: !7221)
!7227 = !DILocation(line: 376, column: 31, scope: !7221)
!7228 = !DILocation(line: 376, column: 16, scope: !7221)
!7229 = !DILocation(line: 379, column: 13, scope: !7219)
!7230 = !DILocation(line: 376, column: 9, scope: !7219)
!7231 = !DILocation(line: 376, column: 19, scope: !7221)
!7232 = !DILocation(line: 377, column: 34, scope: !7221)
!7233 = !DILocation(line: 377, column: 16, scope: !7221)
!7234 = !DILocation(line: 377, column: 13, scope: !7221)
!7235 = !DILocation(line: 381, column: 6, scope: !7211)
!7236 = !DILocation(line: 374, column: 5, scope: !7211)
!7237 = distinct !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h4aeee76b033d9204E", scope: !39, file: !6847, line: 236, type: !7238, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7240, retainedNodes: !7241)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{!197, !38}
!7240 = !DISubprogram(name: "dangling", linkageName: "_ZN4core5alloc6layout6Layout8dangling17h4aeee76b033d9204E", scope: !39, file: !6847, line: 236, type: !7238, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7241 = !{!7242}
!7242 = !DILocalVariable(name: "self", arg: 1, scope: !7237, file: !6847, line: 236, type: !38)
!7243 = !DILocation(line: 236, column: 27, scope: !7237)
!7244 = !DILocation(line: 237, column: 37, scope: !7237)
!7245 = !DILocation(line: 237, column: 48, scope: !7237)
!7246 = !DILocation(line: 237, column: 9, scope: !7237)
!7247 = !DILocation(line: 238, column: 6, scope: !7237)
!7248 = distinct !DISubprogram(name: "alignment", linkageName: "_ZN4core5alloc6layout6Layout9alignment17hcd7615b9c84f4810E", scope: !39, file: !6847, line: 529, type: !7249, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !7251, retainedNodes: !7252)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{!45, !38}
!7251 = !DISubprogram(name: "alignment", linkageName: "_ZN4core5alloc6layout6Layout9alignment17hcd7615b9c84f4810E", scope: !39, file: !6847, line: 529, type: !7249, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!7252 = !{!7253}
!7253 = !DILocalVariable(name: "self", arg: 1, scope: !7248, file: !6847, line: 529, type: !38)
!7254 = !DILocation(line: 529, column: 28, scope: !7248)
!7255 = !DILocation(line: 530, column: 9, scope: !7248)
!7256 = !DILocation(line: 531, column: 6, scope: !7248)
!7257 = distinct !DISubprogram(name: "description<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error11description17h2c60e9cf1692feeaE", scope: !7259, file: !7258, line: 137, type: !7261, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7265, retainedNodes: !7263)
!7258 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/error.rs", directory: "", checksumkind: CSK_MD5, checksum: "f66cd4a3e425b7ee2f196e7e42791c60")
!7259 = !DINamespace(name: "Error", scope: !7260)
!7260 = !DINamespace(name: "error", scope: !15)
!7261 = !DISubroutineType(types: !7262)
!7262 = !{!124, !2157}
!7263 = !{!7264}
!7264 = !DILocalVariable(name: "self", arg: 1, scope: !7257, file: !7258, line: 137, type: !2157)
!7265 = !{!7266}
!7266 = !DITemplateTypeParameter(name: "Self", type: !171)
!7267 = !DILocation(line: 137, column: 20, scope: !7257)
!7268 = !DILocation(line: 139, column: 6, scope: !7257)
!7269 = distinct !DISubprogram(name: "description<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error11description17he14e8c6f3ee22003E", scope: !7259, file: !7258, line: 137, type: !7270, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7274, retainedNodes: !7272)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!124, !4981}
!7272 = !{!7273}
!7273 = !DILocalVariable(name: "self", arg: 1, scope: !7269, file: !7258, line: 137, type: !4981)
!7274 = !{!7275}
!7275 = !DITemplateTypeParameter(name: "Self", type: !260)
!7276 = !DILocation(line: 137, column: 20, scope: !7269)
!7277 = !DILocation(line: 139, column: 6, scope: !7269)
!7278 = distinct !DISubprogram(name: "cause<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error5cause17h70f54b427eb43c4cE", scope: !7259, file: !7258, line: 147, type: !7279, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7265, retainedNodes: !7304)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{!7281, !2157}
!7281 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&dyn core::error::Error>", scope: !14, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7282, templateParams: !21, identifier: "6607ec75bb015f5c6c55db6711c289a1")
!7282 = !{!7283}
!7283 = !DICompositeType(tag: DW_TAG_variant_part, scope: !7281, file: !2, size: 64, align: 32, elements: !7284, templateParams: !21, identifier: "202bcc269ca419ece52b9344193b7cf3", discriminator: !7303)
!7284 = !{!7285, !7299}
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !7283, file: !2, baseType: !7286, size: 64, align: 32, extraData: i32 0)
!7286 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !7281, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !7287, identifier: "261228fcc3562b86990d0ebba44235fa")
!7287 = !{!7288}
!7288 = !DITemplateTypeParameter(name: "T", type: !7289)
!7289 = !DICompositeType(tag: DW_TAG_structure_type, name: "&dyn core::error::Error", file: !2, size: 64, align: 32, elements: !7290, templateParams: !21, identifier: "2011621da2ccae2ecf68474217237623")
!7290 = !{!7291, !7294}
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7289, file: !2, baseType: !7292, size: 32, align: 32)
!7292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7293, size: 32, align: 32, dwarfAddressSpace: 0)
!7293 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::error::Error", file: !2, align: 8, elements: !21, identifier: "f2c7bd904341dfc3d91dbf5522aaa1d4")
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !7289, file: !2, baseType: !7295, size: 32, align: 32, offset: 32)
!7295 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 10]", baseType: !7296, size: 32, align: 32, dwarfAddressSpace: 0)
!7296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 320, align: 32, elements: !7297)
!7297 = !{!7298}
!7298 = !DISubrange(count: 10, lowerBound: 0)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !7283, file: !2, baseType: !7300, size: 64, align: 32)
!7300 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !7281, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !7301, templateParams: !7287, identifier: "89be8412699f2bda95b41cf2af699343")
!7301 = !{!7302}
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7300, file: !2, baseType: !7289, size: 64, align: 32, flags: DIFlagPublic)
!7303 = !DIDerivedType(tag: DW_TAG_member, scope: !7281, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!7304 = !{!7305}
!7305 = !DILocalVariable(name: "self", arg: 1, scope: !7278, file: !7258, line: 147, type: !2157)
!7306 = !DILocation(line: 147, column: 14, scope: !7278)
!7307 = !DILocation(line: 148, column: 14, scope: !7278)
!7308 = !DILocation(line: 149, column: 6, scope: !7278)
!7309 = distinct !DISubprogram(name: "cause<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error5cause17h8f5d85379d4ac393E", scope: !7259, file: !7258, line: 147, type: !7310, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7274, retainedNodes: !7312)
!7310 = !DISubroutineType(types: !7311)
!7311 = !{!7281, !4981}
!7312 = !{!7313}
!7313 = !DILocalVariable(name: "self", arg: 1, scope: !7309, file: !7258, line: 147, type: !4981)
!7314 = !DILocation(line: 147, column: 14, scope: !7309)
!7315 = !DILocation(line: 148, column: 14, scope: !7309)
!7316 = !DILocation(line: 149, column: 6, scope: !7309)
!7317 = distinct !DISubprogram(name: "source<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error6source17h9a1b86d2bfee8a73E", scope: !7259, file: !7258, line: 111, type: !7310, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7274, retainedNodes: !7318)
!7318 = !{!7319}
!7319 = !DILocalVariable(name: "self", arg: 1, scope: !7317, file: !7258, line: 111, type: !4981)
!7320 = !DILocation(line: 111, column: 15, scope: !7317)
!7321 = !DILocation(line: 113, column: 6, scope: !7317)
!7322 = distinct !DISubprogram(name: "source<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error6source17hf403cbc540d20139E", scope: !7259, file: !7258, line: 111, type: !7279, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7265, retainedNodes: !7323)
!7323 = !{!7324}
!7324 = !DILocalVariable(name: "self", arg: 1, scope: !7322, file: !7258, line: 111, type: !2157)
!7325 = !DILocation(line: 111, column: 15, scope: !7322)
!7326 = !DILocation(line: 113, column: 6, scope: !7322)
!7327 = distinct !DISubprogram(name: "provide<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error7provide17h421f2a69dcbdf26fE", scope: !7259, file: !7258, line: 210, type: !7328, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7274, retainedNodes: !7349)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{null, !4981, !7330}
!7330 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut core::error::Request", file: !2, size: 64, align: 32, elements: !7331, templateParams: !21, identifier: "3d334d9726b675928e9a1d33906f0d6")
!7331 = !{!7332, !7344}
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !7330, file: !2, baseType: !7333, size: 32, align: 32)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 32, align: 32, dwarfAddressSpace: 0)
!7334 = !DICompositeType(tag: DW_TAG_structure_type, name: "Request", scope: !7260, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !7335, templateParams: !21, identifier: "6dcfdd38724f8dd26414a982352e90de")
!7335 = !{!7336}
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7334, file: !2, baseType: !7337, size: 128, align: 32, flags: DIFlagPrivate)
!7337 = !DICompositeType(tag: DW_TAG_structure_type, name: "Tagged<dyn core::error::Erased>", scope: !7260, file: !2, size: 128, align: 32, flags: DIFlagPrivate, elements: !7338, templateParams: !7342, identifier: "9105ff37ccf844a64a9f3887abd21a98")
!7338 = !{!7339, !7340}
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "tag_id", scope: !7337, file: !2, baseType: !2238, size: 128, align: 32, flags: DIFlagPrivate)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !7337, file: !2, baseType: !7341, align: 8, offset: 128, flags: DIFlagPrivate)
!7341 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::error::Erased", file: !2, align: 8, elements: !21, identifier: "fca2539df334ae2e70ee771aeb31fd42")
!7342 = !{!7343}
!7343 = !DITemplateTypeParameter(name: "E", type: !7341)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !7330, file: !2, baseType: !7345, size: 32, align: 32, offset: 32)
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !7346, size: 32, align: 32, dwarfAddressSpace: 0)
!7346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 96, align: 32, elements: !7347)
!7347 = !{!7348}
!7348 = !DISubrange(count: 3, lowerBound: 0)
!7349 = !{!7350, !7351}
!7350 = !DILocalVariable(name: "self", arg: 1, scope: !7327, file: !7258, line: 210, type: !4981)
!7351 = !DILocalVariable(name: "request", arg: 2, scope: !7327, file: !7258, line: 210, type: !7330)
!7352 = !DILocation(line: 210, column: 20, scope: !7327)
!7353 = !DILocation(line: 210, column: 30, scope: !7327)
!7354 = !DILocation(line: 210, column: 59, scope: !7327)
!7355 = distinct !DISubprogram(name: "provide<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error7provide17h804af5c6ecda1838E", scope: !7259, file: !7258, line: 210, type: !7356, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7265, retainedNodes: !7358)
!7356 = !DISubroutineType(types: !7357)
!7357 = !{null, !2157, !7330}
!7358 = !{!7359, !7360}
!7359 = !DILocalVariable(name: "self", arg: 1, scope: !7355, file: !7258, line: 210, type: !2157)
!7360 = !DILocalVariable(name: "request", arg: 2, scope: !7355, file: !7258, line: 210, type: !7330)
!7361 = !DILocation(line: 210, column: 20, scope: !7355)
!7362 = !DILocation(line: 210, column: 30, scope: !7355)
!7363 = !DILocation(line: 210, column: 59, scope: !7355)
!7364 = distinct !DISubprogram(name: "type_id<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN4core5error5Error7type_id17h89860cf44f21bc22E", scope: !7259, file: !7258, line: 122, type: !7365, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7265, retainedNodes: !7369)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{!2238, !2157, !7367}
!7367 = !DICompositeType(tag: DW_TAG_structure_type, name: "Internal", scope: !7368, file: !2, align: 8, flags: DIFlagPublic, elements: !21, identifier: "ff0e032eaf878b66400f26c7f2549913")
!7368 = !DINamespace(name: "private", scope: !7260)
!7369 = !{!7370, !7371}
!7370 = !DILocalVariable(name: "self", arg: 1, scope: !7364, file: !7258, line: 122, type: !2157)
!7371 = !DILocalVariable(arg: 2, scope: !7364, file: !7258, line: 122, type: !7367)
!7372 = !DILocation(line: 122, column: 16, scope: !7364)
!7373 = !DILocation(line: 122, column: 23, scope: !7364)
!7374 = !DILocation(line: 126, column: 9, scope: !7364)
!7375 = !DILocation(line: 127, column: 6, scope: !7364)
!7376 = distinct !DISubprogram(name: "type_id<core::str::error::Utf8Error>", linkageName: "_ZN4core5error5Error7type_id17hb25c7eddb00d2a3bE", scope: !7259, file: !7258, line: 122, type: !7377, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7274, retainedNodes: !7379)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{!2238, !4981, !7367}
!7379 = !{!7380, !7381}
!7380 = !DILocalVariable(name: "self", arg: 1, scope: !7376, file: !7258, line: 122, type: !4981)
!7381 = !DILocalVariable(arg: 2, scope: !7376, file: !7258, line: 122, type: !7367)
!7382 = !DILocation(line: 122, column: 16, scope: !7376)
!7383 = !DILocation(line: 122, column: 23, scope: !7376)
!7384 = !DILocation(line: 126, column: 9, scope: !7376)
!7385 = !DILocation(line: 127, column: 6, scope: !7376)
!7386 = distinct !DISubprogram(name: "get_unchecked<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h1dd74b4882c2d5a2E", scope: !450, file: !449, line: 637, type: !6726, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6730, retainedNodes: !7387)
!7387 = !{!7388, !7389}
!7388 = !DILocalVariable(name: "self", arg: 1, scope: !7386, file: !449, line: 637, type: !432)
!7389 = !DILocalVariable(name: "index", arg: 2, scope: !7386, file: !449, line: 637, type: !1364)
!7390 = !DILocation(line: 637, column: 42, scope: !7386)
!7391 = !DILocation(line: 637, column: 49, scope: !7386)
!7392 = !DILocation(line: 644, column: 26, scope: !7386)
!7393 = !DILocation(line: 645, column: 6, scope: !7386)
!7394 = distinct !DISubprogram(name: "get_unchecked<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$13get_unchecked17h86dafd40d2594af2E", scope: !450, file: !449, line: 637, type: !7395, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7400, retainedNodes: !7397)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!432, !432, !1316, !1241}
!7397 = !{!7398, !7399}
!7398 = !DILocalVariable(name: "self", arg: 1, scope: !7394, file: !449, line: 637, type: !432)
!7399 = !DILocalVariable(name: "index", arg: 2, scope: !7394, file: !449, line: 637, type: !1316)
!7400 = !{!23, !7401}
!7401 = !DITemplateTypeParameter(name: "I", type: !1316)
!7402 = !DILocation(line: 637, column: 42, scope: !7394)
!7403 = !DILocation(line: 637, column: 49, scope: !7394)
!7404 = !DILocation(line: 644, column: 26, scope: !7394)
!7405 = !DILocation(line: 645, column: 6, scope: !7394)
!7406 = distinct !DISubprogram(name: "align_to_offsets<u8, u16>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$16align_to_offsets17hc6d64b8cd185f960E", scope: !450, file: !449, line: 3990, type: !7407, scopeLine: 3990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7421, retainedNodes: !7409)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{!6850, !432}
!7409 = !{!7410, !7411, !7413, !7415, !7417, !7419}
!7410 = !DILocalVariable(name: "self", arg: 1, scope: !7406, file: !449, line: 3990, type: !432)
!7411 = !DILocalVariable(name: "gcd", scope: !7412, file: !449, line: 4015, type: !9, align: 32)
!7412 = distinct !DILexicalBlock(scope: !7406, file: !449, line: 4015, column: 9)
!7413 = !DILocalVariable(name: "ts", scope: !7414, file: !449, line: 4016, type: !9, align: 32)
!7414 = distinct !DILexicalBlock(scope: !7412, file: !449, line: 4016, column: 9)
!7415 = !DILocalVariable(name: "us", scope: !7416, file: !449, line: 4017, type: !9, align: 32)
!7416 = distinct !DILexicalBlock(scope: !7414, file: !449, line: 4017, column: 9)
!7417 = !DILocalVariable(name: "us_len", scope: !7418, file: !449, line: 4020, type: !9, align: 32)
!7418 = distinct !DILexicalBlock(scope: !7416, file: !449, line: 4020, column: 9)
!7419 = !DILocalVariable(name: "ts_len", scope: !7420, file: !449, line: 4022, type: !9, align: 32)
!7420 = distinct !DILexicalBlock(scope: !7418, file: !449, line: 4022, column: 9)
!7421 = !{!23, !7422}
!7422 = !DITemplateTypeParameter(name: "U", type: !359)
!7423 = !DILocation(line: 3990, column: 28, scope: !7406)
!7424 = !DILocation(line: 4015, column: 26, scope: !7406)
!7425 = !DILocation(line: 4015, column: 13, scope: !7412)
!7426 = !DILocation(line: 4016, column: 25, scope: !7412)
!7427 = !DILocation(line: 4016, column: 13, scope: !7414)
!7428 = !DILocation(line: 4017, column: 25, scope: !7414)
!7429 = !DILocation(line: 4017, column: 13, scope: !7416)
!7430 = !DILocation(line: 4020, column: 22, scope: !7416)
!7431 = !DILocation(line: 4020, column: 13, scope: !7418)
!7432 = !DILocation(line: 4022, column: 22, scope: !7418)
!7433 = !DILocation(line: 4022, column: 13, scope: !7420)
!7434 = !DILocation(line: 4024, column: 6, scope: !7406)
!7435 = distinct !DISubprogram(name: "get_unchecked_mut<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$17get_unchecked_mut17h90fa6615ae1899cfE", scope: !450, file: !449, line: 682, type: !7436, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7445, retainedNodes: !7442)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!7438, !7438, !1316, !1241}
!7438 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [core::mem::maybe_uninit::MaybeUninit<u8>]", file: !2, size: 64, align: 32, elements: !7439, templateParams: !21, identifier: "d525640cb24946fb145c65f2ad931945")
!7439 = !{!7440, !7441}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7438, file: !2, baseType: !1332, size: 32, align: 32)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7438, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!7442 = !{!7443, !7444}
!7443 = !DILocalVariable(name: "self", arg: 1, scope: !7435, file: !449, line: 682, type: !7438)
!7444 = !DILocalVariable(name: "index", arg: 2, scope: !7435, file: !449, line: 682, type: !1316)
!7445 = !{!1346, !7401}
!7446 = !DILocation(line: 682, column: 46, scope: !7435)
!7447 = !DILocation(line: 682, column: 57, scope: !7435)
!7448 = !DILocation(line: 689, column: 30, scope: !7435)
!7449 = !DILocation(line: 690, column: 6, scope: !7435)
!7450 = distinct !DISubprogram(name: "as_chunks_unchecked<u8, 2>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked17hc664e3a446fbe54aE", scope: !450, file: !449, line: 1334, type: !7451, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !7453)
!7451 = !DISubroutineType(types: !7452)
!7452 = !{!4361, !432, !1241}
!7453 = !{!7454, !7455}
!7454 = !DILocalVariable(name: "self", arg: 1, scope: !7450, file: !449, line: 1334, type: !432)
!7455 = !DILocalVariable(name: "new_len", scope: !7456, file: !449, line: 1341, type: !9, align: 32)
!7456 = distinct !DILexicalBlock(scope: !7450, file: !449, line: 1341, column: 9)
!7457 = !DILocation(line: 1334, column: 61, scope: !7450)
!7458 = !DILocation(line: 77, column: 35, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !7450, file: !473, discriminator: 0)
!7460 = !DILocation(line: 1341, column: 32, scope: !7450)
!7461 = !DILocation(line: 1341, column: 13, scope: !7456)
!7462 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !7463)
!7463 = distinct !DILocation(line: 1344, column: 38, scope: !7456)
!7464 = !DILocalVariable(name: "self", arg: 1, scope: !7465, file: !1791, line: 48, type: !201)
!7465 = distinct !DISubprogram(name: "cast<u8, [u8; 2]>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h18009982c00ed9b6E", scope: !1792, file: !1791, line: 48, type: !7466, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7469, retainedNodes: !7468)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{!510, !201}
!7468 = !{!7464}
!7469 = !{!23, !4303}
!7470 = !DILocation(line: 48, column: 26, scope: !7465, inlinedAt: !7471)
!7471 = distinct !DILocation(line: 1344, column: 47, scope: !7456)
!7472 = !DILocation(line: 1344, column: 18, scope: !7456)
!7473 = !DILocation(line: 1345, column: 6, scope: !7450)
!7474 = !DILocation(line: 78, column: 17, scope: !7459)
!7475 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$19as_chunks_unchecked18precondition_check17hc594328cd71589b1E", scope: !7476, file: !473, line: 68, type: !2968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7477)
!7476 = !DINamespace(name: "as_chunks_unchecked", scope: !450)
!7477 = !{!7478, !7479, !7480}
!7478 = !DILocalVariable(name: "n", arg: 1, scope: !7475, file: !473, line: 68, type: !9)
!7479 = !DILocalVariable(name: "len", arg: 2, scope: !7475, file: !473, line: 68, type: !9)
!7480 = !DILocalVariable(name: "msg", scope: !7481, file: !473, line: 70, type: !124, align: 32)
!7481 = distinct !DILexicalBlock(scope: !7475, file: !473, line: 70, column: 21)
!7482 = !DILocation(line: 68, column: 43, scope: !7475)
!7483 = !DILocation(line: 70, column: 25, scope: !7481)
!7484 = !DILocation(line: 1338, column: 56, scope: !7485)
!7485 = !DILexicalBlockFile(scope: !7475, file: !449, discriminator: 0)
!7486 = !DILocation(line: 73, column: 94, scope: !7481)
!7487 = !DILocation(line: 73, column: 59, scope: !7481)
!7488 = !DILocation(line: 73, column: 21, scope: !7481)
!7489 = !DILocation(line: 1338, column: 70, scope: !7485)
!7490 = !DILocation(line: 1338, column: 66, scope: !7485)
!7491 = !DILocation(line: 75, column: 14, scope: !7475)
!7492 = distinct !DISubprogram(name: "iter<[u8; 2]>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1d6c4e206d8f8bc2E", scope: !450, file: !449, line: 1036, type: !7493, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !7495)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!503, !4361}
!7495 = !{!7496}
!7496 = !DILocalVariable(name: "self", arg: 1, scope: !7492, file: !449, line: 1036, type: !4361)
!7497 = !DILocation(line: 1036, column: 23, scope: !7492)
!7498 = !DILocation(line: 1037, column: 9, scope: !7492)
!7499 = !DILocation(line: 1038, column: 6, scope: !7492)
!7500 = distinct !DISubprogram(name: "iter<bool>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h747981fe58cbafc4E", scope: !450, file: !449, line: 1036, type: !7501, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, retainedNodes: !7503)
!7501 = !DISubroutineType(types: !7502)
!7502 = !{!636, !4381}
!7503 = !{!7504}
!7504 = !DILocalVariable(name: "self", arg: 1, scope: !7500, file: !449, line: 1036, type: !4381)
!7505 = !DILocation(line: 1036, column: 23, scope: !7500)
!7506 = !DILocation(line: 1037, column: 9, scope: !7500)
!7507 = !DILocation(line: 1038, column: 6, scope: !7500)
!7508 = distinct !DISubprogram(name: "align_to<u8, u16>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8align_to17hebffc43b8ef6e788E", scope: !450, file: !449, line: 4056, type: !7509, scopeLine: 4056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7421, retainedNodes: !7520)
!7509 = !DISubroutineType(types: !7510)
!7510 = !{!7511, !432}
!7511 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[u8], &[u16], &[u8])", file: !2, size: 192, align: 32, elements: !7512, templateParams: !21, identifier: "1113c14513bdb91cb5ddbfc9a36082dd")
!7512 = !{!7513, !7514, !7519}
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7511, file: !2, baseType: !432, size: 64, align: 32)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7511, file: !2, baseType: !7515, size: 64, align: 32, offset: 64)
!7515 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u16]", file: !2, size: 64, align: 32, elements: !7516, templateParams: !21, identifier: "7754e79038034cabe41502e81189cbe9")
!7516 = !{!7517, !7518}
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7515, file: !2, baseType: !3292, size: 32, align: 32)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7515, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !7511, file: !2, baseType: !432, size: 64, align: 32, offset: 128)
!7520 = !{!7521, !7522, !7524, !7526, !7528, !7529, !7531}
!7521 = !DILocalVariable(name: "self", arg: 1, scope: !7508, file: !449, line: 4056, type: !432)
!7522 = !DILocalVariable(name: "ptr", scope: !7523, file: !449, line: 4065, type: !201, align: 32)
!7523 = distinct !DILexicalBlock(scope: !7508, file: !449, line: 4065, column: 9)
!7524 = !DILocalVariable(name: "offset", scope: !7525, file: !449, line: 4067, type: !9, align: 32)
!7525 = distinct !DILexicalBlock(scope: !7523, file: !449, line: 4067, column: 9)
!7526 = !DILocalVariable(name: "left", scope: !7527, file: !449, line: 4071, type: !432, align: 32)
!7527 = distinct !DILexicalBlock(scope: !7525, file: !449, line: 4071, column: 13)
!7528 = !DILocalVariable(name: "rest", scope: !7527, file: !449, line: 4071, type: !432, align: 32)
!7529 = !DILocalVariable(name: "us_len", scope: !7530, file: !449, line: 4072, type: !9, align: 32)
!7530 = distinct !DILexicalBlock(scope: !7527, file: !449, line: 4072, column: 13)
!7531 = !DILocalVariable(name: "ts_len", scope: !7530, file: !449, line: 4072, type: !9, align: 32)
!7532 = !DILocation(line: 4056, column: 31, scope: !7508)
!7533 = !DILocation(line: 4058, column: 12, scope: !7508)
!7534 = !DILocation(line: 4058, column: 25, scope: !7508)
!7535 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !7536)
!7536 = distinct !DILocation(line: 4065, column: 24, scope: !7508)
!7537 = !DILocation(line: 4065, column: 24, scope: !7508)
!7538 = !DILocation(line: 4065, column: 13, scope: !7523)
!7539 = !DILocation(line: 4067, column: 31, scope: !7523)
!7540 = !DILocation(line: 4067, column: 13, scope: !7525)
!7541 = !DILocation(line: 4068, column: 12, scope: !7525)
!7542 = !DILocation(line: 4071, column: 37, scope: !7525)
!7543 = !DILocation(line: 4071, column: 18, scope: !7525)
!7544 = !DILocation(line: 4071, column: 18, scope: !7527)
!7545 = !DILocation(line: 4071, column: 24, scope: !7525)
!7546 = !DILocation(line: 4071, column: 24, scope: !7527)
!7547 = !DILocation(line: 4072, column: 41, scope: !7527)
!7548 = !DILocation(line: 4072, column: 18, scope: !7527)
!7549 = !DILocation(line: 4072, column: 18, scope: !7530)
!7550 = !DILocation(line: 4072, column: 26, scope: !7527)
!7551 = !DILocation(line: 4072, column: 26, scope: !7530)
!7552 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !7553)
!7553 = distinct !DILocation(line: 4084, column: 41, scope: !7530)
!7554 = !DILocation(line: 4084, column: 21, scope: !7530)
!7555 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !7556)
!7556 = distinct !DILocation(line: 4085, column: 41, scope: !7530)
!7557 = !DILocation(line: 4085, column: 54, scope: !7530)
!7558 = !DILocation(line: 4069, column: 13, scope: !7525)
!7559 = !DILocation(line: 4068, column: 9, scope: !7525)
!7560 = !DILocation(line: 829, column: 29, scope: !1790, inlinedAt: !7561)
!7561 = distinct !DILocation(line: 4085, column: 50, scope: !7530)
!7562 = !DILocation(line: 829, column: 35, scope: !1790, inlinedAt: !7561)
!7563 = !DILocation(line: 77, column: 35, scope: !1802, inlinedAt: !7561)
!7564 = !DILocation(line: 78, column: 17, scope: !1802, inlinedAt: !7561)
!7565 = !DILocation(line: 863, column: 18, scope: !1790, inlinedAt: !7561)
!7566 = !DILocation(line: 4085, column: 21, scope: !7530)
!7567 = !DILocation(line: 4082, column: 17, scope: !7530)
!7568 = !DILocation(line: 4089, column: 6, scope: !7508)
!7569 = distinct !DISubprogram(name: "is_empty<core::fmt::rt::Argument>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h3927176a461ce4f3E", scope: !450, file: !449, line: 134, type: !7570, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7574, retainedNodes: !7572)
!7570 = !DISubroutineType(types: !7571)
!7571 = !{!643, !2433}
!7572 = !{!7573}
!7573 = !DILocalVariable(name: "self", arg: 1, scope: !7569, file: !449, line: 134, type: !2433)
!7574 = !{!7575}
!7575 = !DITemplateTypeParameter(name: "T", type: !312)
!7576 = !DILocation(line: 134, column: 27, scope: !7569)
!7577 = !DILocation(line: 135, column: 9, scope: !7569)
!7578 = !DILocation(line: 136, column: 6, scope: !7569)
!7579 = distinct !DISubprogram(name: "is_empty<&str>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17hf54b78ef45a4106bE", scope: !450, file: !449, line: 134, type: !7580, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !597, retainedNodes: !7582)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!643, !2387}
!7582 = !{!7583}
!7583 = !DILocalVariable(name: "self", arg: 1, scope: !7579, file: !449, line: 134, type: !2387)
!7584 = !DILocation(line: 134, column: 27, scope: !7579)
!7585 = !DILocation(line: 135, column: 9, scope: !7579)
!7586 = !DILocation(line: 136, column: 6, scope: !7579)
!7587 = distinct !DISubprogram(name: "as_chunks<u8, 2>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9as_chunks17hd0a4c83639f3e067E", scope: !450, file: !449, line: 1392, type: !7588, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !7594)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!7590, !432, !1241}
!7590 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&[[u8; 2]], &[u8])", file: !2, size: 128, align: 32, elements: !7591, templateParams: !21, identifier: "1149b65e3e3c70de2e3ab2a91e9803f2")
!7591 = !{!7592, !7593}
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !7590, file: !2, baseType: !4361, size: 64, align: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !7590, file: !2, baseType: !432, size: 64, align: 32, offset: 64)
!7594 = !{!7595, !7596, !7598, !7600, !7601}
!7595 = !DILocalVariable(name: "self", arg: 1, scope: !7587, file: !449, line: 1392, type: !432)
!7596 = !DILocalVariable(name: "len_rounded_down", scope: !7597, file: !449, line: 1394, type: !9, align: 32)
!7597 = distinct !DILexicalBlock(scope: !7587, file: !449, line: 1394, column: 9)
!7598 = !DILocalVariable(name: "multiple_of_n", scope: !7599, file: !449, line: 1397, type: !432, align: 32)
!7599 = distinct !DILexicalBlock(scope: !7597, file: !449, line: 1397, column: 9)
!7600 = !DILocalVariable(name: "remainder", scope: !7599, file: !449, line: 1397, type: !432, align: 32)
!7601 = !DILocalVariable(name: "array_slice", scope: !7602, file: !449, line: 1400, type: !4361, align: 32)
!7602 = distinct !DILexicalBlock(scope: !7599, file: !449, line: 1400, column: 9)
!7603 = !DILocation(line: 1392, column: 44, scope: !7587)
!7604 = !DILocation(line: 1393, column: 17, scope: !7587)
!7605 = !DILocation(line: 1394, column: 32, scope: !7587)
!7606 = !DILocation(line: 1393, column: 9, scope: !7587)
!7607 = !DILocation(line: 1394, column: 13, scope: !7597)
!7608 = !DILocation(line: 1397, column: 56, scope: !7597)
!7609 = !DILocation(line: 1397, column: 14, scope: !7597)
!7610 = !DILocation(line: 1397, column: 14, scope: !7599)
!7611 = !DILocation(line: 1397, column: 29, scope: !7597)
!7612 = !DILocation(line: 1397, column: 29, scope: !7599)
!7613 = !DILocation(line: 1400, column: 50, scope: !7599)
!7614 = !DILocation(line: 1400, column: 13, scope: !7602)
!7615 = !DILocation(line: 1401, column: 9, scope: !7602)
!7616 = !DILocation(line: 1402, column: 6, scope: !7587)
!7617 = distinct !DISubprogram(name: "from_raw_parts<[u8; 2]>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hb912f82c06f6dcbaE", scope: !7619, file: !7618, line: 124, type: !7620, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !7622)
!7618 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "1c257c0bb74a1862c3fb776eeea63ad9")
!7619 = !DINamespace(name: "raw", scope: !451)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{!4361, !510, !9, !1241}
!7622 = !{!7623, !7624}
!7623 = !DILocalVariable(name: "data", arg: 1, scope: !7617, file: !7618, line: 124, type: !510)
!7624 = !DILocalVariable(name: "len", arg: 2, scope: !7617, file: !7618, line: 124, type: !9)
!7625 = !DILocation(line: 124, column: 43, scope: !7617)
!7626 = !DILocation(line: 124, column: 59, scope: !7617)
!7627 = !DILocation(line: 77, column: 35, scope: !7628)
!7628 = !DILexicalBlockFile(scope: !7617, file: !473, discriminator: 0)
!7629 = !DILocation(line: 139, column: 11, scope: !7617)
!7630 = !DILocation(line: 141, column: 2, scope: !7617)
!7631 = !DILocation(line: 78, column: 17, scope: !7628)
!7632 = distinct !DISubprogram(name: "from_raw_parts<u16>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hca28aac29c6895e6E", scope: !7619, file: !7618, line: 124, type: !7633, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, retainedNodes: !7635)
!7633 = !DISubroutineType(types: !7634)
!7634 = !{!7515, !736, !9, !1241}
!7635 = !{!7636, !7637}
!7636 = !DILocalVariable(name: "data", arg: 1, scope: !7632, file: !7618, line: 124, type: !736)
!7637 = !DILocalVariable(name: "len", arg: 2, scope: !7632, file: !7618, line: 124, type: !9)
!7638 = !DILocation(line: 124, column: 43, scope: !7632)
!7639 = !DILocation(line: 124, column: 59, scope: !7632)
!7640 = !DILocation(line: 77, column: 35, scope: !7641)
!7641 = !DILexicalBlockFile(scope: !7632, file: !473, discriminator: 0)
!7642 = !DILocation(line: 139, column: 11, scope: !7632)
!7643 = !DILocation(line: 141, column: 2, scope: !7632)
!7644 = !DILocation(line: 78, column: 17, scope: !7641)
!7645 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5slice3raw14from_raw_parts18precondition_check17haf94a5081294d436E", scope: !7646, file: !473, line: 68, type: !7647, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7649)
!7646 = !DINamespace(name: "from_raw_parts", scope: !7619)
!7647 = !DISubroutineType(types: !7648)
!7648 = !{null, !3259, !9, !9, !9, !1241}
!7649 = !{!7650, !7651, !7652, !7653, !7654}
!7650 = !DILocalVariable(name: "data", arg: 1, scope: !7645, file: !473, line: 68, type: !3259)
!7651 = !DILocalVariable(name: "size", arg: 2, scope: !7645, file: !473, line: 68, type: !9)
!7652 = !DILocalVariable(name: "align", arg: 3, scope: !7645, file: !473, line: 68, type: !9)
!7653 = !DILocalVariable(name: "len", arg: 4, scope: !7645, file: !473, line: 68, type: !9)
!7654 = !DILocalVariable(name: "msg", scope: !7655, file: !473, line: 70, type: !124, align: 32)
!7655 = distinct !DILexicalBlock(scope: !7645, file: !473, line: 70, column: 21)
!7656 = !DILocation(line: 68, column: 43, scope: !7645)
!7657 = !DILocation(line: 70, column: 25, scope: !7655)
!7658 = !DILocation(line: 136, column: 13, scope: !7659)
!7659 = !DILexicalBlockFile(scope: !7645, file: !7618, discriminator: 0)
!7660 = !DILocation(line: 73, column: 94, scope: !7655)
!7661 = !DILocation(line: 73, column: 59, scope: !7655)
!7662 = !DILocation(line: 73, column: 21, scope: !7655)
!7663 = !DILocation(line: 137, column: 20, scope: !7659)
!7664 = !DILocation(line: 75, column: 14, scope: !7645)
!7665 = distinct !DISubprogram(name: "from_raw_parts_mut<core::mem::maybe_uninit::MaybeUninit<u8>>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17h52107d0139937d65E", scope: !7619, file: !7618, line: 179, type: !7666, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1345, retainedNodes: !7668)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!7438, !3326, !9, !1241}
!7668 = !{!7669, !7670}
!7669 = !DILocalVariable(name: "data", arg: 1, scope: !7665, file: !7618, line: 179, type: !3326)
!7670 = !DILocalVariable(name: "len", arg: 2, scope: !7665, file: !7618, line: 179, type: !9)
!7671 = !DILocation(line: 179, column: 47, scope: !7665)
!7672 = !DILocation(line: 179, column: 61, scope: !7665)
!7673 = !DILocation(line: 77, column: 35, scope: !7674)
!7674 = !DILexicalBlockFile(scope: !7665, file: !473, discriminator: 0)
!7675 = !DILocation(line: 194, column: 15, scope: !7665)
!7676 = !DILocation(line: 196, column: 2, scope: !7665)
!7677 = !DILocation(line: 78, column: 17, scope: !7674)
!7678 = distinct !DISubprogram(name: "from_raw_parts_mut<i8>", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut17hed5ebb1c23f3321bE", scope: !7619, file: !7618, line: 179, type: !7679, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3346, retainedNodes: !7685)
!7679 = !DISubroutineType(types: !7680)
!7680 = !{!7681, !3342, !9, !1241}
!7681 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut [i8]", file: !2, size: 64, align: 32, elements: !7682, templateParams: !21, identifier: "ada2f5e14ad166ff25ebe72e9356385f")
!7682 = !{!7683, !7684}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !7681, file: !2, baseType: !3340, size: 32, align: 32)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !7681, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!7685 = !{!7686, !7687}
!7686 = !DILocalVariable(name: "data", arg: 1, scope: !7678, file: !7618, line: 179, type: !3342)
!7687 = !DILocalVariable(name: "len", arg: 2, scope: !7678, file: !7618, line: 179, type: !9)
!7688 = !DILocation(line: 179, column: 47, scope: !7678)
!7689 = !DILocation(line: 179, column: 61, scope: !7678)
!7690 = !DILocation(line: 77, column: 35, scope: !7691)
!7691 = !DILexicalBlockFile(scope: !7678, file: !473, discriminator: 0)
!7692 = !DILocation(line: 194, column: 15, scope: !7678)
!7693 = !DILocation(line: 196, column: 2, scope: !7678)
!7694 = !DILocation(line: 78, column: 17, scope: !7691)
!7695 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN4core5slice3raw18from_raw_parts_mut18precondition_check17h519148e56e25adbcE", scope: !7696, file: !473, line: 68, type: !7647, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7697)
!7696 = !DINamespace(name: "from_raw_parts_mut", scope: !7619)
!7697 = !{!7698, !7699, !7700, !7701, !7702}
!7698 = !DILocalVariable(name: "data", arg: 1, scope: !7695, file: !473, line: 68, type: !3259)
!7699 = !DILocalVariable(name: "size", arg: 2, scope: !7695, file: !473, line: 68, type: !9)
!7700 = !DILocalVariable(name: "align", arg: 3, scope: !7695, file: !473, line: 68, type: !9)
!7701 = !DILocalVariable(name: "len", arg: 4, scope: !7695, file: !473, line: 68, type: !9)
!7702 = !DILocalVariable(name: "msg", scope: !7703, file: !473, line: 70, type: !124, align: 32)
!7703 = distinct !DILexicalBlock(scope: !7695, file: !473, line: 70, column: 21)
!7704 = !DILocation(line: 68, column: 43, scope: !7695)
!7705 = !DILocation(line: 70, column: 25, scope: !7703)
!7706 = !DILocation(line: 191, column: 13, scope: !7707)
!7707 = !DILexicalBlockFile(scope: !7695, file: !7618, discriminator: 0)
!7708 = !DILocation(line: 73, column: 94, scope: !7703)
!7709 = !DILocation(line: 73, column: 59, scope: !7703)
!7710 = !DILocation(line: 73, column: 21, scope: !7703)
!7711 = !DILocation(line: 192, column: 20, scope: !7707)
!7712 = !DILocation(line: 75, column: 14, scope: !7695)
!7713 = distinct !DISubprogram(name: "new<[u8; 2]>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h30d8497769b03873E", scope: !503, file: !7714, line: 96, type: !7493, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !7715, retainedNodes: !7716)
!7714 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "69db2748005f3986c6551b3886462616")
!7715 = !DISubprogram(name: "new<[u8; 2]>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h30d8497769b03873E", scope: !503, file: !7714, line: 96, type: !7493, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!7716 = !{!7717, !7718, !7720, !7722}
!7717 = !DILocalVariable(name: "slice", arg: 1, scope: !7713, file: !7714, line: 96, type: !4361)
!7718 = !DILocalVariable(name: "len", scope: !7719, file: !7714, line: 97, type: !9, align: 32)
!7719 = distinct !DILexicalBlock(scope: !7713, file: !7714, line: 97, column: 9)
!7720 = !DILocalVariable(name: "ptr", scope: !7721, file: !7714, line: 98, type: !507, align: 32)
!7721 = distinct !DILexicalBlock(scope: !7719, file: !7714, line: 98, column: 9)
!7722 = !DILocalVariable(name: "end_or_len", scope: !7723, file: !7714, line: 101, type: !510, align: 32)
!7723 = distinct !DILexicalBlock(scope: !7721, file: !7714, line: 101, column: 13)
!7724 = !DILocation(line: 96, column: 29, scope: !7713)
!7725 = !DILocation(line: 101, column: 17, scope: !7723)
!7726 = !DILocation(line: 97, column: 19, scope: !7713)
!7727 = !DILocation(line: 97, column: 13, scope: !7719)
!7728 = !DILocation(line: 98, column: 31, scope: !7719)
!7729 = !DILocation(line: 98, column: 56, scope: !7719)
!7730 = !DILocation(line: 98, column: 13, scope: !7721)
!7731 = !DILocation(line: 102, column: 20, scope: !7721)
!7732 = !DILocation(line: 401, column: 25, scope: !4161, inlinedAt: !7733)
!7733 = distinct !DILocation(line: 102, column: 69, scope: !7721)
!7734 = !DILocalVariable(name: "self", arg: 1, scope: !7735, file: !1810, line: 927, type: !3735)
!7735 = distinct !DISubprogram(name: "add<[u8; 2]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17hfc5fc5e82f6833d7E", scope: !1811, file: !1810, line: 927, type: !7736, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !7738)
!7736 = !DISubroutineType(types: !7737)
!7737 = !{!3735, !3735, !9, !1241}
!7738 = !{!7734, !7739}
!7739 = !DILocalVariable(name: "count", arg: 2, scope: !7735, file: !1810, line: 927, type: !9)
!7740 = !DILocation(line: 927, column: 29, scope: !7735, inlinedAt: !7741)
!7741 = distinct !DILocation(line: 102, column: 78, scope: !7721)
!7742 = !DILocation(line: 927, column: 35, scope: !7735, inlinedAt: !7741)
!7743 = !DILocation(line: 77, column: 35, scope: !7744, inlinedAt: !7741)
!7744 = !DILexicalBlockFile(scope: !7735, file: !473, discriminator: 0)
!7745 = !DILocation(line: 78, column: 17, scope: !7744, inlinedAt: !7741)
!7746 = !DILocation(line: 961, column: 18, scope: !7735, inlinedAt: !7741)
!7747 = !DILocation(line: 102, column: 63, scope: !7721)
!7748 = !DILocation(line: 102, column: 17, scope: !7721)
!7749 = !DILocation(line: 104, column: 25, scope: !7723)
!7750 = !DILocation(line: 106, column: 6, scope: !7713)
!7751 = distinct !DISubprogram(name: "new<bool>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17he8c2bbb2cd1bb8e2E", scope: !636, file: !7714, line: 96, type: !7501, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, declaration: !7752, retainedNodes: !7753)
!7752 = !DISubprogram(name: "new<bool>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17he8c2bbb2cd1bb8e2E", scope: !636, file: !7714, line: 96, type: !7501, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !644)
!7753 = !{!7754, !7755, !7757, !7759}
!7754 = !DILocalVariable(name: "slice", arg: 1, scope: !7751, file: !7714, line: 96, type: !4381)
!7755 = !DILocalVariable(name: "len", scope: !7756, file: !7714, line: 97, type: !9, align: 32)
!7756 = distinct !DILexicalBlock(scope: !7751, file: !7714, line: 97, column: 9)
!7757 = !DILocalVariable(name: "ptr", scope: !7758, file: !7714, line: 98, type: !639, align: 32)
!7758 = distinct !DILexicalBlock(scope: !7756, file: !7714, line: 98, column: 9)
!7759 = !DILocalVariable(name: "end_or_len", scope: !7760, file: !7714, line: 101, type: !642, align: 32)
!7760 = distinct !DILexicalBlock(scope: !7758, file: !7714, line: 101, column: 13)
!7761 = !DILocation(line: 96, column: 29, scope: !7751)
!7762 = !DILocation(line: 101, column: 17, scope: !7760)
!7763 = !DILocation(line: 97, column: 19, scope: !7751)
!7764 = !DILocation(line: 97, column: 13, scope: !7756)
!7765 = !DILocation(line: 98, column: 31, scope: !7756)
!7766 = !DILocation(line: 98, column: 56, scope: !7756)
!7767 = !DILocation(line: 98, column: 13, scope: !7758)
!7768 = !DILocation(line: 102, column: 20, scope: !7758)
!7769 = !DILocation(line: 401, column: 25, scope: !4182, inlinedAt: !7770)
!7770 = distinct !DILocation(line: 102, column: 69, scope: !7758)
!7771 = !DILocalVariable(name: "self", arg: 1, scope: !7772, file: !1810, line: 927, type: !3746)
!7772 = distinct !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h0b542c96349ecd54E", scope: !1811, file: !1810, line: 927, type: !7773, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, retainedNodes: !7775)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!3746, !3746, !9, !1241}
!7775 = !{!7771, !7776}
!7776 = !DILocalVariable(name: "count", arg: 2, scope: !7772, file: !1810, line: 927, type: !9)
!7777 = !DILocation(line: 927, column: 29, scope: !7772, inlinedAt: !7778)
!7778 = distinct !DILocation(line: 102, column: 78, scope: !7758)
!7779 = !DILocation(line: 927, column: 35, scope: !7772, inlinedAt: !7778)
!7780 = !DILocation(line: 77, column: 35, scope: !7781, inlinedAt: !7778)
!7781 = !DILexicalBlockFile(scope: !7772, file: !473, discriminator: 0)
!7782 = !DILocation(line: 78, column: 17, scope: !7781, inlinedAt: !7778)
!7783 = !DILocation(line: 961, column: 18, scope: !7772, inlinedAt: !7778)
!7784 = !DILocation(line: 102, column: 63, scope: !7758)
!7785 = !DILocation(line: 102, column: 17, scope: !7758)
!7786 = !DILocation(line: 104, column: 25, scope: !7760)
!7787 = !DILocation(line: 106, column: 6, scope: !7751)
!7788 = distinct !DISubprogram(name: "slice_index_fail", linkageName: "_ZN4core5slice5index16slice_index_fail17h5f94bff3ac3e9db5E", scope: !1227, file: !1225, line: 37, type: !1295, scopeLine: 37, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7789)
!7789 = !{!7790, !7791, !7792}
!7790 = !DILocalVariable(name: "start", arg: 1, scope: !7788, file: !1225, line: 37, type: !9)
!7791 = !DILocalVariable(name: "end", arg: 2, scope: !7788, file: !1225, line: 37, type: !9)
!7792 = !DILocalVariable(name: "len", arg: 3, scope: !7788, file: !1225, line: 37, type: !9)
!7793 = !DILocation(line: 37, column: 27, scope: !7788)
!7794 = !DILocation(line: 37, column: 41, scope: !7788)
!7795 = !DILocation(line: 37, column: 53, scope: !7788)
!7796 = !DILocation(line: 38, column: 8, scope: !7788)
!7797 = !DILocation(line: 47, column: 8, scope: !7788)
!7798 = !DILocalVariable(name: "start", arg: 1, scope: !7799, file: !304, line: 166, type: !9)
!7799 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17h7b5eeb3cd5064bf8E", scope: !7800, file: !304, line: 166, type: !2968, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7801)
!7800 = !DINamespace(name: "slice_index_fail", scope: !1227)
!7801 = !{!7798, !7802}
!7802 = !DILocalVariable(name: "len", arg: 2, scope: !7799, file: !304, line: 166, type: !9)
!7803 = !DILocation(line: 166, column: 29, scope: !7799, inlinedAt: !7804)
!7804 = distinct !DILocation(line: 178, column: 9, scope: !7805)
!7805 = !DILexicalBlockFile(scope: !7788, file: !304, discriminator: 0)
!7806 = !DILocation(line: 2435, column: 9, scope: !7807, inlinedAt: !7804)
!7807 = !DILexicalBlockFile(scope: !7799, file: !2231, discriminator: 0)
!7808 = !DILocation(line: 178, column: 9, scope: !7805)
!7809 = !DILocation(line: 56, column: 8, scope: !7788)
!7810 = !DILocalVariable(name: "end", arg: 1, scope: !7811, file: !304, line: 166, type: !9)
!7811 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17ha4978ed09fb396c5E", scope: !7800, file: !304, line: 166, type: !2968, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7812)
!7812 = !{!7810, !7813}
!7813 = !DILocalVariable(name: "len", arg: 2, scope: !7811, file: !304, line: 166, type: !9)
!7814 = !DILocation(line: 166, column: 29, scope: !7811, inlinedAt: !7815)
!7815 = distinct !DILocation(line: 178, column: 9, scope: !7805)
!7816 = !DILocation(line: 2435, column: 9, scope: !7817, inlinedAt: !7815)
!7817 = !DILexicalBlockFile(scope: !7811, file: !2231, discriminator: 0)
!7818 = !DILocalVariable(name: "end", arg: 1, scope: !7819, file: !304, line: 166, type: !9)
!7819 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17h23a360d8865a5df8E", scope: !7800, file: !304, line: 166, type: !2968, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7820)
!7820 = !{!7818, !7821}
!7821 = !DILocalVariable(name: "len", arg: 2, scope: !7819, file: !304, line: 166, type: !9)
!7822 = !DILocation(line: 166, column: 29, scope: !7819, inlinedAt: !7823)
!7823 = distinct !DILocation(line: 178, column: 9, scope: !7805)
!7824 = !DILocation(line: 2435, column: 9, scope: !7825, inlinedAt: !7823)
!7825 = !DILexicalBlockFile(scope: !7819, file: !2231, discriminator: 0)
!7826 = !DILocalVariable(name: "start", arg: 1, scope: !7827, file: !304, line: 166, type: !9)
!7827 = distinct !DISubprogram(name: "do_panic", linkageName: "_ZN4core5slice5index16slice_index_fail8do_panic17hdddde5dc9635833dE", scope: !7800, file: !304, line: 166, type: !2968, scopeLine: 166, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7828)
!7828 = !{!7826, !7829}
!7829 = !DILocalVariable(name: "end", arg: 2, scope: !7827, file: !304, line: 166, type: !9)
!7830 = !DILocation(line: 166, column: 29, scope: !7827, inlinedAt: !7831)
!7831 = distinct !DILocation(line: 178, column: 9, scope: !7805)
!7832 = !DILocation(line: 2435, column: 9, scope: !7833, inlinedAt: !7831)
!7833 = !DILexicalBlockFile(scope: !7827, file: !2231, discriminator: 0)
!7834 = distinct !DISubprogram(name: "range<core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index5range17h9654c3e01792ff9dE", scope: !1227, file: !1225, line: 902, type: !7835, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7866, retainedNodes: !7837)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{!1234, !1234, !1316, !1241}
!7837 = !{!7838, !7839, !7840, !7842, !7844, !7846, !7847, !7849, !7851, !7852, !7854, !7856, !7858, !7859, !7861, !7863, !7864}
!7838 = !DILocalVariable(name: "range", arg: 1, scope: !7834, file: !1225, line: 902, type: !1234)
!7839 = !DILocalVariable(name: "bounds", arg: 2, scope: !7834, file: !1225, line: 902, type: !1316)
!7840 = !DILocalVariable(name: "len", scope: !7841, file: !1225, line: 906, type: !9, align: 32)
!7841 = distinct !DILexicalBlock(scope: !7834, file: !1225, line: 906, column: 5)
!7842 = !DILocalVariable(name: "end", scope: !7843, file: !1225, line: 908, type: !9, align: 32)
!7843 = distinct !DILexicalBlock(scope: !7841, file: !1225, line: 908, column: 5)
!7844 = !DILocalVariable(name: "end", scope: !7845, file: !1225, line: 909, type: !9, align: 32)
!7845 = distinct !DILexicalBlock(scope: !7841, file: !1225, line: 909, column: 9)
!7846 = !DILocalVariable(name: "end", scope: !7845, file: !1225, line: 909, type: !93, align: 32)
!7847 = !DILocalVariable(name: "end", scope: !7848, file: !1225, line: 911, type: !9, align: 32)
!7848 = distinct !DILexicalBlock(scope: !7841, file: !1225, line: 911, column: 9)
!7849 = !DILocalVariable(name: "end", scope: !7850, file: !1225, line: 913, type: !9, align: 32)
!7850 = distinct !DILexicalBlock(scope: !7841, file: !1225, line: 913, column: 9)
!7851 = !DILocalVariable(name: "end", scope: !7850, file: !1225, line: 913, type: !93, align: 32)
!7852 = !DILocalVariable(name: "end", scope: !7853, file: !1225, line: 914, type: !9, align: 32)
!7853 = distinct !DILexicalBlock(scope: !7841, file: !1225, line: 914, column: 9)
!7854 = !DILocalVariable(name: "start", scope: !7855, file: !1225, line: 918, type: !9, align: 32)
!7855 = distinct !DILexicalBlock(scope: !7843, file: !1225, line: 918, column: 5)
!7856 = !DILocalVariable(name: "start", scope: !7857, file: !1225, line: 919, type: !9, align: 32)
!7857 = distinct !DILexicalBlock(scope: !7843, file: !1225, line: 919, column: 9)
!7858 = !DILocalVariable(name: "start", scope: !7857, file: !1225, line: 919, type: !93, align: 32)
!7859 = !DILocalVariable(name: "start", scope: !7860, file: !1225, line: 921, type: !9, align: 32)
!7860 = distinct !DILexicalBlock(scope: !7843, file: !1225, line: 921, column: 9)
!7861 = !DILocalVariable(name: "start", scope: !7862, file: !1225, line: 923, type: !9, align: 32)
!7862 = distinct !DILexicalBlock(scope: !7843, file: !1225, line: 923, column: 9)
!7863 = !DILocalVariable(name: "start", scope: !7862, file: !1225, line: 923, type: !93, align: 32)
!7864 = !DILocalVariable(name: "start", scope: !7865, file: !1225, line: 924, type: !9, align: 32)
!7865 = distinct !DILexicalBlock(scope: !7843, file: !1225, line: 924, column: 9)
!7866 = !{!7867}
!7867 = !DITemplateTypeParameter(name: "R", type: !1234)
!7868 = !DILocation(line: 902, column: 17, scope: !7834)
!7869 = !DILocation(line: 902, column: 27, scope: !7834)
!7870 = !DILocation(line: 908, column: 9, scope: !7843)
!7871 = !DILocation(line: 918, column: 9, scope: !7855)
!7872 = !DILocation(line: 906, column: 15, scope: !7834)
!7873 = !DILocation(line: 906, column: 9, scope: !7841)
!7874 = !DILocation(line: 908, column: 27, scope: !7841)
!7875 = !DILocation(line: 908, column: 21, scope: !7841)
!7876 = !DILocation(line: 908, column: 15, scope: !7841)
!7877 = !DILocation(line: 0, scope: !7878)
!7878 = !DILexicalBlockFile(scope: !7834, file: !4885, discriminator: 0)
!7879 = !DILocation(line: 909, column: 31, scope: !7841)
!7880 = !DILocation(line: 909, column: 31, scope: !7845)
!7881 = !DILocation(line: 909, column: 39, scope: !7841)
!7882 = !DILocation(line: 913, column: 31, scope: !7841)
!7883 = !DILocation(line: 913, column: 31, scope: !7850)
!7884 = !DILocation(line: 913, column: 39, scope: !7841)
!7885 = !DILocation(line: 915, column: 34, scope: !7841)
!7886 = !DILocation(line: 911, column: 31, scope: !7841)
!7887 = !DILocation(line: 911, column: 31, scope: !7848)
!7888 = !DILocation(line: 911, column: 39, scope: !7848)
!7889 = !DILocation(line: 909, column: 53, scope: !7845)
!7890 = !DILocation(line: 911, column: 45, scope: !7841)
!7891 = !DILocation(line: 918, column: 29, scope: !7843)
!7892 = !DILocation(line: 918, column: 23, scope: !7843)
!7893 = !DILocation(line: 918, column: 17, scope: !7843)
!7894 = !DILocation(line: 914, column: 31, scope: !7841)
!7895 = !DILocation(line: 914, column: 31, scope: !7853)
!7896 = !DILocation(line: 914, column: 39, scope: !7853)
!7897 = !DILocation(line: 914, column: 41, scope: !7841)
!7898 = !DILocation(line: 913, column: 52, scope: !7850)
!7899 = !DILocation(line: 923, column: 31, scope: !7843)
!7900 = !DILocation(line: 923, column: 31, scope: !7862)
!7901 = !DILocation(line: 923, column: 41, scope: !7843)
!7902 = !DILocation(line: 923, column: 49, scope: !7843)
!7903 = !DILocation(line: 919, column: 31, scope: !7843)
!7904 = !DILocation(line: 919, column: 31, scope: !7857)
!7905 = !DILocation(line: 919, column: 41, scope: !7843)
!7906 = !DILocation(line: 919, column: 50, scope: !7843)
!7907 = !DILocation(line: 926, column: 34, scope: !7843)
!7908 = !DILocation(line: 924, column: 31, scope: !7843)
!7909 = !DILocation(line: 924, column: 31, scope: !7865)
!7910 = !DILocation(line: 924, column: 41, scope: !7865)
!7911 = !DILocation(line: 924, column: 45, scope: !7843)
!7912 = !DILocation(line: 923, column: 80, scope: !7862)
!7913 = !DILocation(line: 923, column: 56, scope: !7862)
!7914 = !DILocation(line: 929, column: 18, scope: !7855)
!7915 = !DILocation(line: 929, column: 25, scope: !7855)
!7916 = !DILocation(line: 930, column: 2, scope: !7834)
!7917 = !DILocation(line: 921, column: 31, scope: !7843)
!7918 = !DILocation(line: 921, column: 31, scope: !7860)
!7919 = !DILocation(line: 921, column: 41, scope: !7860)
!7920 = !DILocation(line: 919, column: 81, scope: !7857)
!7921 = !DILocation(line: 919, column: 57, scope: !7857)
!7922 = !DILocation(line: 921, column: 49, scope: !7843)
!7923 = distinct !DISubprogram(name: "memchr_naive", linkageName: "_ZN4core5slice6memchr12memchr_naive17h72741c3649231f0dE", scope: !7925, file: !7924, line: 35, type: !7926, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7928)
!7924 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/memchr.rs", directory: "", checksumkind: CSK_MD5, checksum: "fe9d861b954a98f86a5ec9ec0f1385e4")
!7925 = !DINamespace(name: "memchr", scope: !451)
!7926 = !DISubroutineType(types: !7927)
!7927 = !{!103, !24, !432}
!7928 = !{!7929, !7930, !7931}
!7929 = !DILocalVariable(name: "x", arg: 1, scope: !7923, file: !7924, line: 35, type: !24)
!7930 = !DILocalVariable(name: "text", arg: 2, scope: !7923, file: !7924, line: 35, type: !432)
!7931 = !DILocalVariable(name: "i", scope: !7932, file: !7924, line: 36, type: !9, align: 32)
!7932 = distinct !DILexicalBlock(scope: !7923, file: !7924, line: 36, column: 5)
!7933 = !DILocation(line: 35, column: 23, scope: !7923)
!7934 = !DILocation(line: 35, column: 30, scope: !7923)
!7935 = !DILocation(line: 36, column: 9, scope: !7932)
!7936 = !DILocation(line: 36, column: 17, scope: !7923)
!7937 = !DILocation(line: 39, column: 5, scope: !7932)
!7938 = !DILocation(line: 39, column: 11, scope: !7932)
!7939 = !DILocation(line: 47, column: 5, scope: !7932)
!7940 = !DILocation(line: 48, column: 2, scope: !7923)
!7941 = !DILocation(line: 40, column: 17, scope: !7932)
!7942 = !DILocation(line: 40, column: 12, scope: !7932)
!7943 = !DILocation(line: 44, column: 9, scope: !7932)
!7944 = !DILocation(line: 41, column: 25, scope: !7932)
!7945 = !DILocation(line: 41, column: 20, scope: !7932)
!7946 = distinct !DISubprogram(name: "memchr", linkageName: "_ZN4core5slice6memchr6memchr17hf97767d92ffdb307E", scope: !7925, file: !7924, line: 25, type: !7926, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !7947)
!7947 = !{!7948, !7949}
!7948 = !DILocalVariable(name: "x", arg: 1, scope: !7946, file: !7924, line: 25, type: !24)
!7949 = !DILocalVariable(name: "text", arg: 2, scope: !7946, file: !7924, line: 25, type: !432)
!7950 = !DILocation(line: 25, column: 21, scope: !7946)
!7951 = !DILocation(line: 25, column: 28, scope: !7946)
!7952 = !DILocation(line: 27, column: 21, scope: !7946)
!7953 = !DILocation(line: 27, column: 8, scope: !7946)
!7954 = !DILocation(line: 31, column: 5, scope: !7946)
!7955 = !DILocation(line: 28, column: 16, scope: !7946)
!7956 = !DILocation(line: 32, column: 2, scope: !7946)
!7957 = distinct !DISubprogram(name: "unwrap_failed", linkageName: "_ZN4core6option13unwrap_failed17hb44eba05d48b3214E", scope: !14, file: !1685, line: 2173, type: !7958, scopeLine: 2173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{null, !1241}
!7960 = !DILocation(line: 2174, column: 5, scope: !7957)
!7961 = distinct !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17h387e6b7e86edd8e5E", scope: !103, file: !1685, line: 709, type: !7962, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7965, declaration: !7964, retainedNodes: !7967)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{!643, !103, !5977}
!7964 = !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17h387e6b7e86edd8e5E", scope: !103, file: !1685, line: 709, type: !7962, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7965)
!7965 = !{!110, !7966}
!7966 = !DITemplateTypeParameter(name: "impl [const] FnOnce(T) -> bool + [const] Destruct", type: !5977)
!7967 = !{!7968, !7969, !7970}
!7968 = !DILocalVariable(name: "self", arg: 1, scope: !7961, file: !1685, line: 709, type: !103)
!7969 = !DILocalVariable(name: "f", arg: 2, scope: !7961, file: !1685, line: 709, type: !5977)
!7970 = !DILocalVariable(name: "x", scope: !7971, file: !1685, line: 712, type: !9, align: 32)
!7971 = distinct !DILexicalBlock(scope: !7961, file: !1685, line: 712, column: 13)
!7972 = !DILocation(line: 709, column: 29, scope: !7961)
!7973 = !DILocation(line: 709, column: 35, scope: !7961)
!7974 = !DILocation(line: 710, column: 15, scope: !7961)
!7975 = !DILocation(line: 710, column: 9, scope: !7961)
!7976 = !DILocation(line: 712, column: 18, scope: !7961)
!7977 = !DILocation(line: 712, column: 18, scope: !7971)
!7978 = !DILocation(line: 712, column: 24, scope: !7971)
!7979 = !DILocation(line: 711, column: 21, scope: !7961)
!7980 = !DILocation(line: 714, column: 5, scope: !7961)
!7981 = !DILocation(line: 714, column: 6, scope: !7961)
!7982 = distinct !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17h4ae3165fe5c581bbE", scope: !103, file: !1685, line: 709, type: !7983, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7986, declaration: !7985, retainedNodes: !7988)
!7983 = !DISubroutineType(types: !7984)
!7984 = !{!643, !103, !6047}
!7985 = !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17h4ae3165fe5c581bbE", scope: !103, file: !1685, line: 709, type: !7983, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7986)
!7986 = !{!110, !7987}
!7987 = !DITemplateTypeParameter(name: "impl [const] FnOnce(T) -> bool + [const] Destruct", type: !6047)
!7988 = !{!7989, !7990, !7991}
!7989 = !DILocalVariable(name: "self", arg: 1, scope: !7982, file: !1685, line: 709, type: !103)
!7990 = !DILocalVariable(name: "f", arg: 2, scope: !7982, file: !1685, line: 709, type: !6047)
!7991 = !DILocalVariable(name: "x", scope: !7992, file: !1685, line: 712, type: !9, align: 32)
!7992 = distinct !DILexicalBlock(scope: !7982, file: !1685, line: 712, column: 13)
!7993 = !DILocation(line: 709, column: 29, scope: !7982)
!7994 = !DILocation(line: 709, column: 35, scope: !7982)
!7995 = !DILocation(line: 710, column: 15, scope: !7982)
!7996 = !DILocation(line: 710, column: 9, scope: !7982)
!7997 = !DILocation(line: 712, column: 18, scope: !7982)
!7998 = !DILocation(line: 712, column: 18, scope: !7992)
!7999 = !DILocation(line: 712, column: 24, scope: !7992)
!8000 = !DILocation(line: 711, column: 21, scope: !7982)
!8001 = !DILocation(line: 714, column: 5, scope: !7982)
!8002 = !DILocation(line: 714, column: 6, scope: !7982)
!8003 = distinct !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17h7509a03bf33938e1E", scope: !103, file: !1685, line: 709, type: !8004, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8007, declaration: !8006, retainedNodes: !8009)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!643, !103, !6033}
!8006 = !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17h7509a03bf33938e1E", scope: !103, file: !1685, line: 709, type: !8004, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8007)
!8007 = !{!110, !8008}
!8008 = !DITemplateTypeParameter(name: "impl [const] FnOnce(T) -> bool + [const] Destruct", type: !6033)
!8009 = !{!8010, !8011, !8012}
!8010 = !DILocalVariable(name: "self", arg: 1, scope: !8003, file: !1685, line: 709, type: !103)
!8011 = !DILocalVariable(name: "f", arg: 2, scope: !8003, file: !1685, line: 709, type: !6033)
!8012 = !DILocalVariable(name: "x", scope: !8013, file: !1685, line: 712, type: !9, align: 32)
!8013 = distinct !DILexicalBlock(scope: !8003, file: !1685, line: 712, column: 13)
!8014 = !DILocation(line: 709, column: 29, scope: !8003)
!8015 = !DILocation(line: 709, column: 35, scope: !8003)
!8016 = !DILocation(line: 710, column: 15, scope: !8003)
!8017 = !DILocation(line: 710, column: 9, scope: !8003)
!8018 = !DILocation(line: 712, column: 18, scope: !8003)
!8019 = !DILocation(line: 712, column: 18, scope: !8013)
!8020 = !DILocation(line: 712, column: 24, scope: !8013)
!8021 = !DILocation(line: 711, column: 21, scope: !8003)
!8022 = !DILocation(line: 714, column: 5, scope: !8003)
!8023 = !DILocation(line: 714, column: 6, scope: !8003)
!8024 = distinct !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17hba06054a761fef88E", scope: !103, file: !1685, line: 709, type: !8025, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8028, declaration: !8027, retainedNodes: !8030)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!643, !103, !6005}
!8027 = !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17hba06054a761fef88E", scope: !103, file: !1685, line: 709, type: !8025, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8028)
!8028 = !{!110, !8029}
!8029 = !DITemplateTypeParameter(name: "impl [const] FnOnce(T) -> bool + [const] Destruct", type: !6005)
!8030 = !{!8031, !8032, !8033}
!8031 = !DILocalVariable(name: "self", arg: 1, scope: !8024, file: !1685, line: 709, type: !103)
!8032 = !DILocalVariable(name: "f", arg: 2, scope: !8024, file: !1685, line: 709, type: !6005)
!8033 = !DILocalVariable(name: "x", scope: !8034, file: !1685, line: 712, type: !9, align: 32)
!8034 = distinct !DILexicalBlock(scope: !8024, file: !1685, line: 712, column: 13)
!8035 = !DILocation(line: 709, column: 29, scope: !8024)
!8036 = !DILocation(line: 709, column: 35, scope: !8024)
!8037 = !DILocation(line: 710, column: 15, scope: !8024)
!8038 = !DILocation(line: 710, column: 9, scope: !8024)
!8039 = !DILocation(line: 712, column: 18, scope: !8024)
!8040 = !DILocation(line: 712, column: 18, scope: !8034)
!8041 = !DILocation(line: 712, column: 24, scope: !8034)
!8042 = !DILocation(line: 711, column: 21, scope: !8024)
!8043 = !DILocation(line: 714, column: 5, scope: !8024)
!8044 = !DILocation(line: 714, column: 6, scope: !8024)
!8045 = distinct !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17he4fbacfc159a5c29E", scope: !103, file: !1685, line: 709, type: !8046, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8049, declaration: !8048, retainedNodes: !8051)
!8046 = !DISubroutineType(types: !8047)
!8047 = !{!643, !103, !5991}
!8048 = !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17he4fbacfc159a5c29E", scope: !103, file: !1685, line: 709, type: !8046, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8049)
!8049 = !{!110, !8050}
!8050 = !DITemplateTypeParameter(name: "impl [const] FnOnce(T) -> bool + [const] Destruct", type: !5991)
!8051 = !{!8052, !8053, !8054}
!8052 = !DILocalVariable(name: "self", arg: 1, scope: !8045, file: !1685, line: 709, type: !103)
!8053 = !DILocalVariable(name: "f", arg: 2, scope: !8045, file: !1685, line: 709, type: !5991)
!8054 = !DILocalVariable(name: "x", scope: !8055, file: !1685, line: 712, type: !9, align: 32)
!8055 = distinct !DILexicalBlock(scope: !8045, file: !1685, line: 712, column: 13)
!8056 = !DILocation(line: 709, column: 29, scope: !8045)
!8057 = !DILocation(line: 709, column: 35, scope: !8045)
!8058 = !DILocation(line: 710, column: 15, scope: !8045)
!8059 = !DILocation(line: 710, column: 9, scope: !8045)
!8060 = !DILocation(line: 712, column: 18, scope: !8045)
!8061 = !DILocation(line: 712, column: 18, scope: !8055)
!8062 = !DILocation(line: 712, column: 24, scope: !8055)
!8063 = !DILocation(line: 711, column: 21, scope: !8045)
!8064 = !DILocation(line: 714, column: 5, scope: !8045)
!8065 = !DILocation(line: 714, column: 6, scope: !8045)
!8066 = distinct !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17he91b33f9d7ed4de7E", scope: !103, file: !1685, line: 709, type: !8067, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8070, declaration: !8069, retainedNodes: !8072)
!8067 = !DISubroutineType(types: !8068)
!8068 = !{!643, !103, !6019}
!8069 = !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>, alloc::string::String>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17he91b33f9d7ed4de7E", scope: !103, file: !1685, line: 709, type: !8067, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8070)
!8070 = !{!110, !8071}
!8071 = !DITemplateTypeParameter(name: "impl [const] FnOnce(T) -> bool + [const] Destruct", type: !6019)
!8072 = !{!8073, !8074, !8075}
!8073 = !DILocalVariable(name: "self", arg: 1, scope: !8066, file: !1685, line: 709, type: !103)
!8074 = !DILocalVariable(name: "f", arg: 2, scope: !8066, file: !1685, line: 709, type: !6019)
!8075 = !DILocalVariable(name: "x", scope: !8076, file: !1685, line: 712, type: !9, align: 32)
!8076 = distinct !DILexicalBlock(scope: !8066, file: !1685, line: 712, column: 13)
!8077 = !DILocation(line: 709, column: 29, scope: !8066)
!8078 = !DILocation(line: 709, column: 35, scope: !8066)
!8079 = !DILocation(line: 710, column: 15, scope: !8066)
!8080 = !DILocation(line: 710, column: 9, scope: !8066)
!8081 = !DILocation(line: 712, column: 18, scope: !8066)
!8082 = !DILocation(line: 712, column: 18, scope: !8076)
!8083 = !DILocation(line: 712, column: 24, scope: !8076)
!8084 = !DILocation(line: 711, column: 21, scope: !8066)
!8085 = !DILocation(line: 714, column: 5, scope: !8066)
!8086 = !DILocation(line: 714, column: 6, scope: !8066)
!8087 = distinct !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17hf0ddf8587f423d4eE", scope: !103, file: !1685, line: 709, type: !8088, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8091, declaration: !8090, retainedNodes: !8093)
!8088 = !DISubroutineType(types: !8089)
!8089 = !{!643, !103, !5963}
!8090 = !DISubprogram(name: "is_none_or<usize, core::iter::traits::iterator::Iterator::collect::{closure_env#0}<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<alloc::string::String, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$10is_none_or17hf0ddf8587f423d4eE", scope: !103, file: !1685, line: 709, type: !8088, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8091)
!8091 = !{!110, !8092}
!8092 = !DITemplateTypeParameter(name: "impl [const] FnOnce(T) -> bool + [const] Destruct", type: !5963)
!8093 = !{!8094, !8095, !8096}
!8094 = !DILocalVariable(name: "self", arg: 1, scope: !8087, file: !1685, line: 709, type: !103)
!8095 = !DILocalVariable(name: "f", arg: 2, scope: !8087, file: !1685, line: 709, type: !5963)
!8096 = !DILocalVariable(name: "x", scope: !8097, file: !1685, line: 712, type: !9, align: 32)
!8097 = distinct !DILexicalBlock(scope: !8087, file: !1685, line: 712, column: 13)
!8098 = !DILocation(line: 709, column: 29, scope: !8087)
!8099 = !DILocation(line: 709, column: 35, scope: !8087)
!8100 = !DILocation(line: 710, column: 15, scope: !8087)
!8101 = !DILocation(line: 710, column: 9, scope: !8087)
!8102 = !DILocation(line: 712, column: 18, scope: !8087)
!8103 = !DILocation(line: 712, column: 18, scope: !8097)
!8104 = !DILocation(line: 712, column: 24, scope: !8097)
!8105 = !DILocation(line: 711, column: 21, scope: !8087)
!8106 = !DILocation(line: 714, column: 5, scope: !8087)
!8107 = !DILocation(line: 714, column: 6, scope: !8087)
!8108 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#2}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h94312db253717797E", scope: !4825, file: !1685, line: 1159, type: !8109, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8115, declaration: !8114, retainedNodes: !8118)
!8109 = !DISubroutineType(types: !8110)
!8110 = !{!1381, !4825, !8111}
!8111 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !8112, file: !2, align: 8, elements: !21, identifier: "5f69b9e87a27f7422dbc65abe1d55e7a")
!8112 = !DINamespace(name: "next_back", scope: !8113)
!8113 = !DINamespace(name: "{impl#2}", scope: !1402)
!8114 = !DISubprogram(name: "map<u32, char, core::str::iter::{impl#2}::next_back::{closure_env#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17h94312db253717797E", scope: !4825, file: !1685, line: 1159, type: !8109, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8115)
!8115 = !{!4832, !8116, !8117}
!8116 = !DITemplateTypeParameter(name: "U", type: !574)
!8117 = !DITemplateTypeParameter(name: "F", type: !8111)
!8118 = !{!8119, !8120, !8121}
!8119 = !DILocalVariable(name: "self", arg: 1, scope: !8108, file: !1685, line: 1159, type: !4825)
!8120 = !DILocalVariable(name: "f", arg: 2, scope: !8108, file: !1685, line: 1159, type: !8111)
!8121 = !DILocalVariable(name: "x", scope: !8122, file: !1685, line: 1164, type: !51, align: 32)
!8122 = distinct !DILexicalBlock(scope: !8108, file: !1685, line: 1164, column: 13)
!8123 = !DILocation(line: 1159, column: 28, scope: !8108)
!8124 = !DILocation(line: 1159, column: 34, scope: !8108)
!8125 = !DILocation(line: 1163, column: 15, scope: !8108)
!8126 = !DILocation(line: 1163, column: 9, scope: !8108)
!8127 = !DILocation(line: 1164, column: 18, scope: !8108)
!8128 = !DILocation(line: 1164, column: 18, scope: !8122)
!8129 = !DILocation(line: 1164, column: 29, scope: !8122)
!8130 = !DILocation(line: 1164, column: 24, scope: !8122)
!8131 = !DILocation(line: 1164, column: 33, scope: !8108)
!8132 = !DILocation(line: 1165, column: 21, scope: !8108)
!8133 = !DILocation(line: 1167, column: 5, scope: !8108)
!8134 = !DILocation(line: 1167, column: 6, scope: !8108)
!8135 = distinct !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hcfc3e3e90154290fE", scope: !915, file: !1685, line: 1159, type: !8136, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8139, declaration: !8138, retainedNodes: !8141)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!532, !915, !3145}
!8138 = !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hcfc3e3e90154290fE", scope: !915, file: !1685, line: 1159, type: !8136, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8139)
!8139 = !{!515, !7422, !8140}
!8140 = !DITemplateTypeParameter(name: "F", type: !3145)
!8141 = !{!8142, !8143, !8144}
!8142 = !DILocalVariable(name: "self", arg: 1, scope: !8135, file: !1685, line: 1159, type: !915)
!8143 = !DILocalVariable(name: "f", arg: 2, scope: !8135, file: !1685, line: 1159, type: !3145)
!8144 = !DILocalVariable(name: "x", scope: !8145, file: !1685, line: 1164, type: !511, align: 8)
!8145 = distinct !DILexicalBlock(scope: !8135, file: !1685, line: 1164, column: 13)
!8146 = !DILocation(line: 1159, column: 28, scope: !8135)
!8147 = !DILocation(line: 1159, column: 34, scope: !8135)
!8148 = !DILocation(line: 1164, column: 18, scope: !8145)
!8149 = !DILocation(line: 1163, column: 15, scope: !8135)
!8150 = !DILocation(line: 1163, column: 9, scope: !8135)
!8151 = !DILocation(line: 1164, column: 18, scope: !8135)
!8152 = !DILocation(line: 1164, column: 29, scope: !8145)
!8153 = !DILocation(line: 1164, column: 24, scope: !8145)
!8154 = !DILocation(line: 1164, column: 33, scope: !8135)
!8155 = !DILocation(line: 1165, column: 21, scope: !8135)
!8156 = !DILocation(line: 1167, column: 5, scope: !8135)
!8157 = !DILocation(line: 1167, column: 6, scope: !8135)
!8158 = distinct !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17he097700b04df08d9E", scope: !915, file: !1685, line: 1159, type: !8136, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8139, declaration: !8159, retainedNodes: !8160)
!8159 = !DISubprogram(name: "map<[u8; 2], u16, &mut fn([u8; 2]) -> u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17he097700b04df08d9E", scope: !915, file: !1685, line: 1159, type: !8136, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8139)
!8160 = !{!8161, !8162, !8163}
!8161 = !DILocalVariable(name: "self", arg: 1, scope: !8158, file: !1685, line: 1159, type: !915)
!8162 = !DILocalVariable(name: "f", arg: 2, scope: !8158, file: !1685, line: 1159, type: !3145)
!8163 = !DILocalVariable(name: "x", scope: !8164, file: !1685, line: 1164, type: !511, align: 8)
!8164 = distinct !DILexicalBlock(scope: !8158, file: !1685, line: 1164, column: 13)
!8165 = !DILocation(line: 1159, column: 28, scope: !8158)
!8166 = !DILocation(line: 1159, column: 34, scope: !8158)
!8167 = !DILocation(line: 1164, column: 18, scope: !8164)
!8168 = !DILocation(line: 1163, column: 15, scope: !8158)
!8169 = !DILocation(line: 1163, column: 9, scope: !8158)
!8170 = !DILocation(line: 1164, column: 18, scope: !8158)
!8171 = !DILocation(line: 1164, column: 29, scope: !8164)
!8172 = !DILocation(line: 1164, column: 24, scope: !8164)
!8173 = !DILocation(line: 1164, column: 33, scope: !8158)
!8174 = !DILocation(line: 1165, column: 21, scope: !8158)
!8175 = !DILocation(line: 1167, column: 5, scope: !8158)
!8176 = !DILocation(line: 1167, column: 6, scope: !8158)
!8177 = distinct !DISubprogram(name: "take<u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h4524744efa872fecE", scope: !532, file: !1685, line: 1840, type: !8178, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, declaration: !8180, retainedNodes: !8181)
!8178 = !DISubroutineType(types: !8179)
!8179 = !{!532, !2682}
!8180 = !DISubprogram(name: "take<u16>", linkageName: "_ZN4core6option15Option$LT$T$GT$4take17h4524744efa872fecE", scope: !532, file: !1685, line: 1840, type: !8178, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !538)
!8181 = !{!8182}
!8182 = !DILocalVariable(name: "self", arg: 1, scope: !8177, file: !1685, line: 1840, type: !2682)
!8183 = !DILocation(line: 1840, column: 23, scope: !8177)
!8184 = !DILocation(line: 1842, column: 9, scope: !8177)
!8185 = !DILocation(line: 1843, column: 6, scope: !8177)
!8186 = distinct !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h7f0a41a439ef3779E", scope: !103, file: !1685, line: 1336, type: !8187, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8197, declaration: !8203, retainedNodes: !8204)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!8189, !103, !1586}
!8189 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, alloc::collections::TryReserveErrorKind>", scope: !335, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8190, templateParams: !21, identifier: "fb2d0ee9c19f2cc8634265ea359fb4dd")
!8190 = !{!8191}
!8191 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8189, file: !2, size: 64, align: 32, elements: !8192, templateParams: !21, identifier: "52f7f7662f7c93a07b26da2cfadd1a7c", discriminator: !8202)
!8192 = !{!8193, !8198}
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8191, file: !2, baseType: !8194, size: 64, align: 32, extraData: i32 -2147483647)
!8194 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8189, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8195, templateParams: !8197, identifier: "6feeb4099ea0b5d8e50d0cdeafc1c6b2")
!8195 = !{!8196}
!8196 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8194, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!8197 = !{!110, !2018}
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8191, file: !2, baseType: !8199, size: 64, align: 32)
!8199 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8189, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !8200, templateParams: !8197, identifier: "5686dd34b90ff0ba19f11ea338a5993a")
!8200 = !{!8201}
!8201 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8199, file: !2, baseType: !1586, size: 64, align: 32, flags: DIFlagPublic)
!8202 = !DIDerivedType(tag: DW_TAG_member, scope: !8189, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8203 = !DISubprogram(name: "ok_or<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h7f0a41a439ef3779E", scope: !103, file: !1685, line: 1336, type: !8187, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8197)
!8204 = !{!8205, !8206, !8207}
!8205 = !DILocalVariable(name: "self", arg: 1, scope: !8186, file: !1685, line: 1336, type: !103)
!8206 = !DILocalVariable(name: "err", arg: 2, scope: !8186, file: !1685, line: 1336, type: !1586)
!8207 = !DILocalVariable(name: "v", scope: !8208, file: !1685, line: 1338, type: !9, align: 32)
!8208 = distinct !DILexicalBlock(scope: !8186, file: !1685, line: 1338, column: 13)
!8209 = !DILocation(line: 1336, column: 45, scope: !8186)
!8210 = !DILocation(line: 1336, column: 51, scope: !8186)
!8211 = !DILocation(line: 1337, column: 15, scope: !8186)
!8212 = !DILocation(line: 1337, column: 9, scope: !8186)
!8213 = !DILocation(line: 1338, column: 18, scope: !8186)
!8214 = !DILocation(line: 1338, column: 18, scope: !8208)
!8215 = !DILocation(line: 1338, column: 24, scope: !8208)
!8216 = !DILocation(line: 1338, column: 28, scope: !8186)
!8217 = !DILocation(line: 1339, column: 25, scope: !8186)
!8218 = !DILocation(line: 1339, column: 21, scope: !8186)
!8219 = !DILocation(line: 1339, column: 28, scope: !8186)
!8220 = !DILocation(line: 1341, column: 5, scope: !8186)
!8221 = !DILocation(line: 1341, column: 6, scope: !8186)
!8222 = distinct !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h9504f9ce93f07665E", scope: !4217, file: !1685, line: 1336, type: !8223, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8233, declaration: !8239, retainedNodes: !8240)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!8225, !4217, !1969}
!8225 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", scope: !335, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8226, templateParams: !21, identifier: "873d61683daa04fed1a41b148ad1c8a8")
!8226 = !{!8227}
!8227 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8225, file: !2, size: 32, align: 32, elements: !8228, templateParams: !21, identifier: "35a59b2d58215824153b6f5cc99b110e", discriminator: !8238)
!8228 = !{!8229, !8234}
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8227, file: !2, baseType: !8230, size: 32, align: 32)
!8230 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8225, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8231, templateParams: !8233, identifier: "c8036cf556ff09ce5bca79a01aecd2c5")
!8231 = !{!8232}
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8230, file: !2, baseType: !197, size: 32, align: 32, flags: DIFlagPublic)
!8233 = !{!4224, !1968}
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8227, file: !2, baseType: !8235, size: 32, align: 32, extraData: i32 0)
!8235 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8225, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8236, templateParams: !8233, identifier: "2d0ee34979e6caac82501e3c8bea0575")
!8236 = !{!8237}
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8235, file: !2, baseType: !1969, align: 8, flags: DIFlagPublic)
!8238 = !DIDerivedType(tag: DW_TAG_member, scope: !8225, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8239 = !DISubprogram(name: "ok_or<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN4core6option15Option$LT$T$GT$5ok_or17h9504f9ce93f07665E", scope: !4217, file: !1685, line: 1336, type: !8223, scopeLine: 1336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8233)
!8240 = !{!8241, !8242, !8243}
!8241 = !DILocalVariable(name: "self", arg: 1, scope: !8222, file: !1685, line: 1336, type: !4217)
!8242 = !DILocalVariable(name: "err", arg: 2, scope: !8222, file: !1685, line: 1336, type: !1969)
!8243 = !DILocalVariable(name: "v", scope: !8244, file: !1685, line: 1338, type: !197, align: 32)
!8244 = distinct !DILexicalBlock(scope: !8222, file: !1685, line: 1338, column: 13)
!8245 = !DILocation(line: 1336, column: 45, scope: !8222)
!8246 = !DILocation(line: 1336, column: 51, scope: !8222)
!8247 = !DILocation(line: 1337, column: 15, scope: !8222)
!8248 = !DILocation(line: 1337, column: 9, scope: !8222)
!8249 = !DILocation(line: 1338, column: 18, scope: !8222)
!8250 = !DILocation(line: 1338, column: 18, scope: !8244)
!8251 = !DILocation(line: 1338, column: 24, scope: !8244)
!8252 = !DILocation(line: 1338, column: 28, scope: !8222)
!8253 = !DILocation(line: 1339, column: 25, scope: !8222)
!8254 = !DILocation(line: 1339, column: 21, scope: !8222)
!8255 = !DILocation(line: 1339, column: 28, scope: !8222)
!8256 = !DILocation(line: 1341, column: 5, scope: !8222)
!8257 = !DILocation(line: 1341, column: 6, scope: !8222)
!8258 = distinct !DISubprogram(name: "is_none<(usize, u16)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17h485d96c1aeb5d92bE", scope: !6680, file: !1685, line: 683, type: !8259, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6686, declaration: !8262, retainedNodes: !8263)
!8259 = !DISubroutineType(types: !8260)
!8260 = !{!643, !8261}
!8261 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<(usize, u16)>", baseType: !6680, size: 32, align: 32, dwarfAddressSpace: 0)
!8262 = !DISubprogram(name: "is_none<(usize, u16)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17h485d96c1aeb5d92bE", scope: !6680, file: !1685, line: 683, type: !8259, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6686)
!8263 = !{!8264}
!8264 = !DILocalVariable(name: "self", arg: 1, scope: !8258, file: !1685, line: 683, type: !8261)
!8265 = !DILocation(line: 683, column: 26, scope: !8258)
!8266 = !DILocation(line: 684, column: 15, scope: !8258)
!8267 = !DILocation(line: 684, column: 9, scope: !8258)
!8268 = !DILocation(line: 685, column: 6, scope: !8258)
!8269 = distinct !DISubprogram(name: "is_some<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17ha87fa5e8c650b7d4E", scope: !953, file: !1685, line: 634, type: !8270, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !959, declaration: !8273, retainedNodes: !8274)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!643, !8272}
!8272 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::option::Option<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", baseType: !953, size: 32, align: 32, dwarfAddressSpace: 0)
!8273 = !DISubprogram(name: "is_some<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17ha87fa5e8c650b7d4E", scope: !953, file: !1685, line: 634, type: !8270, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !959)
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "self", arg: 1, scope: !8269, file: !1685, line: 634, type: !8272)
!8276 = !DILocation(line: 634, column: 26, scope: !8269)
!8277 = !DILocation(line: 635, column: 18, scope: !8269)
!8278 = !DILocation(line: 437, column: 9, scope: !8279)
!8279 = !DILexicalBlockFile(scope: !8269, file: !2304, discriminator: 0)
!8280 = !DILocation(line: 636, column: 6, scope: !8269)
!8281 = distinct !DISubprogram(name: "is_some<(usize, u16)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17hc09341d0f5c027b0E", scope: !6680, file: !1685, line: 634, type: !8259, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6686, declaration: !8282, retainedNodes: !8283)
!8282 = !DISubprogram(name: "is_some<(usize, u16)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17hc09341d0f5c027b0E", scope: !6680, file: !1685, line: 634, type: !8259, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6686)
!8283 = !{!8284}
!8284 = !DILocalVariable(name: "self", arg: 1, scope: !8281, file: !1685, line: 634, type: !8261)
!8285 = !DILocation(line: 634, column: 26, scope: !8281)
!8286 = !DILocation(line: 635, column: 18, scope: !8281)
!8287 = !DILocation(line: 437, column: 9, scope: !8288)
!8288 = !DILexicalBlockFile(scope: !8281, file: !2304, discriminator: 0)
!8289 = !DILocation(line: 636, column: 6, scope: !8281)
!8290 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h15a9c95e93f58520E", scope: !103, file: !1685, line: 1540, type: !8291, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8299, declaration: !8298, retainedNodes: !8302)
!8291 = !DISubroutineType(types: !8292)
!8292 = !{!103, !103, !8293}
!8293 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", scope: !8294, file: !2, size: 32, align: 32, elements: !8296, templateParams: !21, identifier: "d1c80b92f9a1daccc2827020fb0ffaca")
!8294 = !DINamespace(name: "size_hint", scope: !8295)
!8295 = !DINamespace(name: "{impl#0}", scope: !492)
!8296 = !{!8297}
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !8293, file: !2, baseType: !93, size: 32, align: 32)
!8298 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h15a9c95e93f58520E", scope: !103, file: !1685, line: 1540, type: !8291, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8299)
!8299 = !{!110, !8300, !8301}
!8300 = !DITemplateTypeParameter(name: "U", type: !9)
!8301 = !DITemplateTypeParameter(name: "F", type: !8293)
!8302 = !{!8303, !8304, !8305}
!8303 = !DILocalVariable(name: "self", arg: 1, scope: !8290, file: !1685, line: 1540, type: !103)
!8304 = !DILocalVariable(name: "f", arg: 2, scope: !8290, file: !1685, line: 1540, type: !8293)
!8305 = !DILocalVariable(name: "x", scope: !8306, file: !1685, line: 1545, type: !9, align: 32)
!8306 = distinct !DILexicalBlock(scope: !8290, file: !1685, line: 1545, column: 13)
!8307 = !DILocation(line: 1540, column: 33, scope: !8290)
!8308 = !DILocation(line: 1540, column: 39, scope: !8290)
!8309 = !DILocation(line: 1544, column: 15, scope: !8290)
!8310 = !DILocation(line: 1544, column: 9, scope: !8290)
!8311 = !DILocation(line: 1545, column: 18, scope: !8290)
!8312 = !DILocation(line: 1545, column: 18, scope: !8306)
!8313 = !DILocation(line: 1545, column: 24, scope: !8306)
!8314 = !DILocation(line: 1546, column: 21, scope: !8290)
!8315 = !DILocation(line: 1548, column: 5, scope: !8290)
!8316 = !DILocation(line: 1548, column: 6, scope: !8290)
!8317 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h30ba2367727980b4E", scope: !103, file: !1685, line: 1540, type: !8318, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8324, declaration: !8323, retainedNodes: !8326)
!8318 = !DISubroutineType(types: !8319)
!8319 = !{!103, !103, !8320}
!8320 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", scope: !8294, file: !2, size: 32, align: 32, elements: !8321, templateParams: !21, identifier: "65ce701a2b5a57a8d36a257c234d20f")
!8321 = !{!8322}
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !8320, file: !2, baseType: !93, size: 32, align: 32)
!8323 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h30ba2367727980b4E", scope: !103, file: !1685, line: 1540, type: !8318, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8324)
!8324 = !{!110, !8300, !8325}
!8325 = !DITemplateTypeParameter(name: "F", type: !8320)
!8326 = !{!8327, !8328, !8329}
!8327 = !DILocalVariable(name: "self", arg: 1, scope: !8317, file: !1685, line: 1540, type: !103)
!8328 = !DILocalVariable(name: "f", arg: 2, scope: !8317, file: !1685, line: 1540, type: !8320)
!8329 = !DILocalVariable(name: "x", scope: !8330, file: !1685, line: 1545, type: !9, align: 32)
!8330 = distinct !DILexicalBlock(scope: !8317, file: !1685, line: 1545, column: 13)
!8331 = !DILocation(line: 1540, column: 33, scope: !8317)
!8332 = !DILocation(line: 1540, column: 39, scope: !8317)
!8333 = !DILocation(line: 1544, column: 15, scope: !8317)
!8334 = !DILocation(line: 1544, column: 9, scope: !8317)
!8335 = !DILocation(line: 1545, column: 18, scope: !8317)
!8336 = !DILocation(line: 1545, column: 18, scope: !8330)
!8337 = !DILocation(line: 1545, column: 24, scope: !8330)
!8338 = !DILocation(line: 1546, column: 21, scope: !8317)
!8339 = !DILocation(line: 1548, column: 5, scope: !8317)
!8340 = !DILocation(line: 1548, column: 6, scope: !8317)
!8341 = distinct !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h387791a40a65eb08E", scope: !103, file: !1685, line: 1540, type: !8342, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8348, declaration: !8347, retainedNodes: !8350)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!103, !103, !8344}
!8344 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", scope: !8294, file: !2, size: 32, align: 32, elements: !8345, templateParams: !21, identifier: "7ba5f3cb91a5749d5aff91bf2ab4430d")
!8345 = !{!8346}
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__high_buf", scope: !8344, file: !2, baseType: !93, size: 32, align: 32)
!8347 = !DISubprogram(name: "and_then<usize, usize, core::char::decode::{impl#0}::size_hint::{closure_env#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>>", linkageName: "_ZN4core6option15Option$LT$T$GT$8and_then17h387791a40a65eb08E", scope: !103, file: !1685, line: 1540, type: !8342, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8348)
!8348 = !{!110, !8300, !8349}
!8349 = !DITemplateTypeParameter(name: "F", type: !8344)
!8350 = !{!8351, !8352, !8353}
!8351 = !DILocalVariable(name: "self", arg: 1, scope: !8341, file: !1685, line: 1540, type: !103)
!8352 = !DILocalVariable(name: "f", arg: 2, scope: !8341, file: !1685, line: 1540, type: !8344)
!8353 = !DILocalVariable(name: "x", scope: !8354, file: !1685, line: 1545, type: !9, align: 32)
!8354 = distinct !DILexicalBlock(scope: !8341, file: !1685, line: 1545, column: 13)
!8355 = !DILocation(line: 1540, column: 33, scope: !8341)
!8356 = !DILocation(line: 1540, column: 39, scope: !8341)
!8357 = !DILocation(line: 1544, column: 15, scope: !8341)
!8358 = !DILocation(line: 1544, column: 9, scope: !8341)
!8359 = !DILocation(line: 1545, column: 18, scope: !8341)
!8360 = !DILocation(line: 1545, column: 18, scope: !8354)
!8361 = !DILocation(line: 1545, column: 24, scope: !8354)
!8362 = !DILocation(line: 1546, column: 21, scope: !8341)
!8363 = !DILocation(line: 1548, column: 5, scope: !8341)
!8364 = !DILocation(line: 1548, column: 6, scope: !8341)
!8365 = distinct !DISubprogram(name: "cloned<u16>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hfa3c6d43cdc2252bE", scope: !8366, file: !1685, line: 2077, type: !8377, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, declaration: !8379, retainedNodes: !8380)
!8366 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u16>", scope: !14, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8367, templateParams: !21, identifier: "1f2097261a3999054d1db04bc0f3709f")
!8367 = !{!8368}
!8368 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8366, file: !2, size: 32, align: 32, elements: !8369, templateParams: !21, identifier: "714fa771f55540bcf0173718ce90706d", discriminator: !8376)
!8369 = !{!8370, !8372}
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !8368, file: !2, baseType: !8371, size: 32, align: 32, extraData: i32 0)
!8371 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !8366, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !740, identifier: "bccd14109547c22f6c576bcf5139b9fd")
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !8368, file: !2, baseType: !8373, size: 32, align: 32)
!8373 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !8366, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8374, templateParams: !740, identifier: "34a9775169c85dc7c6260da43acdfd51")
!8374 = !{!8375}
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8373, file: !2, baseType: !742, size: 32, align: 32, flags: DIFlagPublic)
!8376 = !DIDerivedType(tag: DW_TAG_member, scope: !8366, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{!532, !8366}
!8379 = !DISubprogram(name: "cloned<u16>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6cloned17hfa3c6d43cdc2252bE", scope: !8366, file: !1685, line: 2077, type: !8377, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !538)
!8380 = !{!8381, !8382}
!8381 = !DILocalVariable(name: "self", arg: 1, scope: !8365, file: !1685, line: 2077, type: !8366)
!8382 = !DILocalVariable(name: "t", scope: !8383, file: !1685, line: 2082, type: !742, align: 32)
!8383 = distinct !DILexicalBlock(scope: !8365, file: !1685, line: 2082, column: 13)
!8384 = !DILocation(line: 2077, column: 19, scope: !8365)
!8385 = !DILocation(line: 2081, column: 15, scope: !8365)
!8386 = !DILocation(line: 2081, column: 9, scope: !8365)
!8387 = !DILocation(line: 2082, column: 18, scope: !8365)
!8388 = !DILocation(line: 2082, column: 18, scope: !8383)
!8389 = !DILocalVariable(name: "self", arg: 1, scope: !8390, file: !8391, line: 581, type: !742)
!8390 = distinct !DISubprogram(name: "clone", linkageName: "_ZN4core5clone5impls52_$LT$impl$u20$core..clone..Clone$u20$for$u20$u16$GT$5clone17hcece027e03416153E", scope: !8392, file: !8391, line: 581, type: !8395, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8397)
!8391 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/clone.rs", directory: "", checksumkind: CSK_MD5, checksum: "ab1cebb6cbd097d629a08d04734692b8")
!8392 = !DINamespace(name: "{impl#7}", scope: !8393)
!8393 = !DINamespace(name: "impls", scope: !8394)
!8394 = !DINamespace(name: "clone", scope: !15)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{!359, !742}
!8397 = !{!8389}
!8398 = !DILocation(line: 581, column: 30, scope: !8390, inlinedAt: !8399)
!8399 = distinct !DILocation(line: 2082, column: 31, scope: !8383)
!8400 = !DILocation(line: 582, column: 25, scope: !8390, inlinedAt: !8399)
!8401 = !DILocation(line: 2082, column: 24, scope: !8383)
!8402 = !DILocation(line: 2082, column: 38, scope: !8365)
!8403 = !DILocation(line: 2083, column: 21, scope: !8365)
!8404 = !DILocation(line: 2085, column: 6, scope: !8365)
!8405 = distinct !DISubprogram(name: "copied<[u8; 2]>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h2aea4de361f9caadE", scope: !8406, file: !1685, line: 2051, type: !8417, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !8419, retainedNodes: !8420)
!8406 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&[u8; 2]>", scope: !14, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8407, templateParams: !21, identifier: "51b864b8a3b2d55a6f2a4aa947c16de5")
!8407 = !{!8408}
!8408 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8406, file: !2, size: 32, align: 32, elements: !8409, templateParams: !21, identifier: "c8ecd5c207f145abbf4df123d7867100", discriminator: !8416)
!8409 = !{!8410, !8412}
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !8408, file: !2, baseType: !8411, size: 32, align: 32, extraData: i32 0)
!8411 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !8406, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !519, identifier: "94910f20cc9d7c7b4faeca048d4194ad")
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !8408, file: !2, baseType: !8413, size: 32, align: 32)
!8413 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !8406, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !8414, templateParams: !519, identifier: "246b11196122a1c5538de9abd2a02dc1")
!8414 = !{!8415}
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8413, file: !2, baseType: !521, size: 32, align: 32, flags: DIFlagPublic)
!8416 = !DIDerivedType(tag: DW_TAG_member, scope: !8406, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8417 = !DISubroutineType(types: !8418)
!8418 = !{!915, !8406}
!8419 = !DISubprogram(name: "copied<[u8; 2]>", linkageName: "_ZN4core6option19Option$LT$$RF$T$GT$6copied17h2aea4de361f9caadE", scope: !8406, file: !1685, line: 2051, type: !8417, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!8420 = !{!8421, !8422}
!8421 = !DILocalVariable(name: "self", arg: 1, scope: !8405, file: !1685, line: 2051, type: !8406)
!8422 = !DILocalVariable(name: "v", scope: !8423, file: !1685, line: 2058, type: !511, align: 8)
!8423 = distinct !DILexicalBlock(scope: !8405, file: !1685, line: 2058, column: 13)
!8424 = !DILocation(line: 2051, column: 25, scope: !8405)
!8425 = !DILocation(line: 2058, column: 19, scope: !8423)
!8426 = !DILocation(line: 2057, column: 15, scope: !8405)
!8427 = !DILocation(line: 2057, column: 9, scope: !8405)
!8428 = !DILocation(line: 2058, column: 19, scope: !8405)
!8429 = !DILocation(line: 2058, column: 25, scope: !8423)
!8430 = !DILocation(line: 2058, column: 31, scope: !8405)
!8431 = !DILocation(line: 2059, column: 21, scope: !8405)
!8432 = !DILocation(line: 2061, column: 6, scope: !8405)
!8433 = distinct !DISubprogram(name: "unwrap_failed<core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result13unwrap_failed17hbf072231b1fad67dE", scope: !335, file: !1621, line: 1873, type: !8434, scopeLine: 1873, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8440, retainedNodes: !8437)
!8434 = !DISubroutineType(types: !8435)
!8435 = !{null, !124, !8436, !1241}
!8436 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::alloc::layout::LayoutError", baseType: !6953, size: 32, align: 32, dwarfAddressSpace: 0)
!8437 = !{!8438, !8439}
!8438 = !DILocalVariable(name: "_msg", arg: 1, scope: !8433, file: !1621, line: 1873, type: !124)
!8439 = !DILocalVariable(name: "_error", arg: 2, scope: !8433, file: !1621, line: 1873, type: !8436)
!8440 = !{!8441}
!8441 = !DITemplateTypeParameter(name: "T", type: !6953)
!8442 = !DILocation(line: 1873, column: 27, scope: !8433)
!8443 = !DILocation(line: 1873, column: 39, scope: !8433)
!8444 = !DILocation(line: 1874, column: 5, scope: !8433)
!8445 = distinct !DISubprogram(name: "unwrap_or_else<*mut alloc::rc::RcInner<[u8]>, core::alloc::AllocError, alloc::rc::{impl#20}::allocate_for_layout::{closure_env#0}<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h8fc6d2a2227fa507E", scope: !2036, file: !1621, line: 1616, type: !8446, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8454, declaration: !8453, retainedNodes: !8456)
!8446 = !DISubroutineType(types: !8447)
!8447 = !{!2044, !2036, !8448, !1241}
!8448 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>", scope: !8449, file: !2, size: 32, align: 32, elements: !8451, templateParams: !21, identifier: "7b3678ca18d36de9c9ac209f564210")
!8449 = !DINamespace(name: "allocate_for_layout", scope: !8450)
!8450 = !DINamespace(name: "{impl#20}", scope: !2049)
!8451 = !{!8452}
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__layout", scope: !8448, file: !2, baseType: !38, size: 32, align: 32)
!8453 = !DISubprogram(name: "unwrap_or_else<*mut alloc::rc::RcInner<[u8]>, core::alloc::AllocError, alloc::rc::{impl#20}::allocate_for_layout::{closure_env#0}<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h8fc6d2a2227fa507E", scope: !2036, file: !1621, line: 1616, type: !8446, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8454)
!8454 = !{!2059, !1968, !8455}
!8455 = !DITemplateTypeParameter(name: "F", type: !8448)
!8456 = !{!8457, !8458, !8459, !8461}
!8457 = !DILocalVariable(name: "self", arg: 1, scope: !8445, file: !1621, line: 1616, type: !2036)
!8458 = !DILocalVariable(name: "op", arg: 2, scope: !8445, file: !1621, line: 1616, type: !8448)
!8459 = !DILocalVariable(name: "t", scope: !8460, file: !1621, line: 1621, type: !2044, align: 32)
!8460 = distinct !DILexicalBlock(scope: !8445, file: !1621, line: 1621, column: 13)
!8461 = !DILocalVariable(name: "e", scope: !8462, file: !1621, line: 1622, type: !1969, align: 8)
!8462 = distinct !DILexicalBlock(scope: !8445, file: !1621, line: 1622, column: 13)
!8463 = !DILocation(line: 1616, column: 36, scope: !8445)
!8464 = !DILocation(line: 1616, column: 42, scope: !8445)
!8465 = !DILocation(line: 1622, column: 17, scope: !8462)
!8466 = !DILocation(line: 1620, column: 15, scope: !8445)
!8467 = !DILocation(line: 1620, column: 9, scope: !8445)
!8468 = !DILocation(line: 1622, column: 23, scope: !8462)
!8469 = !DILocation(line: 1621, column: 16, scope: !8445)
!8470 = !DILocation(line: 1621, column: 16, scope: !8460)
!8471 = !DILocation(line: 1621, column: 22, scope: !8460)
!8472 = !DILocation(line: 1621, column: 22, scope: !8445)
!8473 = !DILocation(line: 1624, column: 5, scope: !8445)
!8474 = !DILocation(line: 1624, column: 6, scope: !8445)
!8475 = distinct !DISubprogram(name: "unwrap_or_else<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::sync::{impl#24}::allocate_for_layout::{closure_env#0}<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#0}<u8>, alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17he0e8bd1bfc76508bE", scope: !1959, file: !1621, line: 1616, type: !8476, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8484, declaration: !8483, retainedNodes: !8486)
!8476 = !DISubroutineType(types: !8477)
!8477 = !{!1932, !1959, !8478, !1241}
!8478 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#0}<u8>, alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>", scope: !8479, file: !2, size: 32, align: 32, elements: !8481, templateParams: !21, identifier: "66a8832c3282e1e2b716bb69f03a8a7a")
!8479 = !DINamespace(name: "allocate_for_layout", scope: !8480)
!8480 = !DINamespace(name: "{impl#24}", scope: !131)
!8481 = !{!8482}
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__layout", scope: !8478, file: !2, baseType: !38, size: 32, align: 32)
!8483 = !DISubprogram(name: "unwrap_or_else<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::sync::{impl#24}::allocate_for_layout::{closure_env#0}<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#0}<u8>, alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17he0e8bd1bfc76508bE", scope: !1959, file: !1621, line: 1616, type: !8476, scopeLine: 1616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8484)
!8484 = !{!1936, !1968, !8485}
!8485 = !DITemplateTypeParameter(name: "F", type: !8478)
!8486 = !{!8487, !8488, !8489, !8491}
!8487 = !DILocalVariable(name: "self", arg: 1, scope: !8475, file: !1621, line: 1616, type: !1959)
!8488 = !DILocalVariable(name: "op", arg: 2, scope: !8475, file: !1621, line: 1616, type: !8478)
!8489 = !DILocalVariable(name: "t", scope: !8490, file: !1621, line: 1621, type: !1932, align: 32)
!8490 = distinct !DILexicalBlock(scope: !8475, file: !1621, line: 1621, column: 13)
!8491 = !DILocalVariable(name: "e", scope: !8492, file: !1621, line: 1622, type: !1969, align: 8)
!8492 = distinct !DILexicalBlock(scope: !8475, file: !1621, line: 1622, column: 13)
!8493 = !DILocation(line: 1616, column: 36, scope: !8475)
!8494 = !DILocation(line: 1616, column: 42, scope: !8475)
!8495 = !DILocation(line: 1622, column: 17, scope: !8492)
!8496 = !DILocation(line: 1620, column: 15, scope: !8475)
!8497 = !DILocation(line: 1620, column: 9, scope: !8475)
!8498 = !DILocation(line: 1622, column: 23, scope: !8492)
!8499 = !DILocation(line: 1621, column: 16, scope: !8475)
!8500 = !DILocation(line: 1621, column: 16, scope: !8490)
!8501 = !DILocation(line: 1621, column: 22, scope: !8490)
!8502 = !DILocation(line: 1621, column: 22, scope: !8475)
!8503 = !DILocation(line: 1624, column: 5, scope: !8475)
!8504 = !DILocation(line: 1624, column: 6, scope: !8475)
!8505 = distinct !DISubprogram(name: "map<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::Layout, alloc::raw_vec::layout_array::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17hdb328e8875e8f43dE", scope: !7162, file: !1621, line: 831, type: !8506, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8511, declaration: !8510, retainedNodes: !8514)
!8506 = !DISubroutineType(types: !8507)
!8507 = !{!6943, !7162, !8508}
!8508 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !8509, file: !2, align: 8, elements: !21, identifier: "18367a18882aa0783a3d34dced8d7f6e")
!8509 = !DINamespace(name: "layout_array", scope: !187)
!8510 = !DISubprogram(name: "map<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError, core::alloc::layout::Layout, alloc::raw_vec::layout_array::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$3map17hdb328e8875e8f43dE", scope: !7162, file: !1621, line: 831, type: !8506, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8511)
!8511 = !{!7175, !6952, !8512, !8513}
!8512 = !DITemplateTypeParameter(name: "U", type: !39)
!8513 = !DITemplateTypeParameter(name: "F", type: !8508)
!8514 = !{!8515, !8516, !8517, !8519}
!8515 = !DILocalVariable(name: "self", arg: 1, scope: !8505, file: !1621, line: 831, type: !7162)
!8516 = !DILocalVariable(name: "op", arg: 2, scope: !8505, file: !1621, line: 831, type: !8508)
!8517 = !DILocalVariable(name: "t", scope: !8518, file: !1621, line: 836, type: !7170, align: 32)
!8518 = distinct !DILexicalBlock(scope: !8505, file: !1621, line: 836, column: 13)
!8519 = !DILocalVariable(name: "e", scope: !8520, file: !1621, line: 837, type: !6953, align: 8)
!8520 = distinct !DILexicalBlock(scope: !8505, file: !1621, line: 837, column: 13)
!8521 = !DILocation(line: 831, column: 28, scope: !8505)
!8522 = !DILocation(line: 831, column: 34, scope: !8505)
!8523 = !DILocation(line: 836, column: 16, scope: !8518)
!8524 = !DILocation(line: 837, column: 17, scope: !8520)
!8525 = !DILocation(line: 835, column: 15, scope: !8505)
!8526 = !DILocation(line: 835, column: 9, scope: !8505)
!8527 = !DILocation(line: 837, column: 23, scope: !8520)
!8528 = !DILocation(line: 837, column: 28, scope: !8505)
!8529 = !DILocation(line: 836, column: 16, scope: !8505)
!8530 = !DILocation(line: 836, column: 25, scope: !8518)
!8531 = !DILocation(line: 836, column: 22, scope: !8518)
!8532 = !DILocation(line: 836, column: 30, scope: !8505)
!8533 = !DILocation(line: 839, column: 5, scope: !8505)
!8534 = !DILocation(line: 839, column: 6, scope: !8505)
!8535 = distinct !DISubprogram(name: "expect<(), core::fmt::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc7655a8bfca1ac16E", scope: !334, file: !1621, line: 1179, type: !8536, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !343, declaration: !8538, retainedNodes: !8539)
!8536 = !DISubroutineType(types: !8537)
!8537 = !{null, !334, !124, !1241}
!8538 = !DISubprogram(name: "expect<(), core::fmt::Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6expect17hc7655a8bfca1ac16E", scope: !334, file: !1621, line: 1179, type: !8536, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !343)
!8539 = !{!8540, !8541, !8542, !8544}
!8540 = !DILocalVariable(name: "self", arg: 1, scope: !8535, file: !1621, line: 1179, type: !334)
!8541 = !DILocalVariable(name: "msg", arg: 2, scope: !8535, file: !1621, line: 1179, type: !124)
!8542 = !DILocalVariable(name: "t", scope: !8543, file: !1621, line: 1184, type: !7, align: 8)
!8543 = distinct !DILexicalBlock(scope: !8535, file: !1621, line: 1184, column: 13)
!8544 = !DILocalVariable(name: "e", scope: !8545, file: !1621, line: 1185, type: !345, align: 8)
!8545 = distinct !DILexicalBlock(scope: !8535, file: !1621, line: 1185, column: 13)
!8546 = !DILocation(line: 1184, column: 16, scope: !8543)
!8547 = !DILocation(line: 1179, column: 19, scope: !8535)
!8548 = !DILocation(line: 1179, column: 25, scope: !8535)
!8549 = !DILocation(line: 1185, column: 17, scope: !8545)
!8550 = !DILocation(line: 1183, column: 15, scope: !8535)
!8551 = !DILocation(line: 1183, column: 9, scope: !8535)
!8552 = !DILocation(line: 1185, column: 23, scope: !8545)
!8553 = !DILocation(line: 1187, column: 6, scope: !8535)
!8554 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::{impl#4}::shrink_unchecked::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h38cc76addc955dbdE", scope: !1959, file: !1621, line: 962, type: !8555, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8577, declaration: !8576, retainedNodes: !8580)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{!8557, !1959, !8571}
!8557 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8558, templateParams: !21, identifier: "ae6579f14438ce5a95841d26eab1ea")
!8558 = !{!8559}
!8559 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8557, file: !2, size: 96, align: 32, elements: !8560, templateParams: !21, identifier: "8a18b2d109119566e43a64d23f7e193f", discriminator: !8570)
!8560 = !{!8561, !8566}
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8559, file: !2, baseType: !8562, size: 96, align: 32, extraData: i32 0)
!8562 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8557, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8563, templateParams: !8565, identifier: "5bc3e23d65bdd81bd5e9f1bdea17de4c")
!8563 = !{!8564}
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8562, file: !2, baseType: !1932, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!8565 = !{!1936, !2018}
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8559, file: !2, baseType: !8567, size: 96, align: 32, extraData: i32 1)
!8567 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8557, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8568, templateParams: !8565, identifier: "52a153a95978121c4e7ddce37163aef7")
!8568 = !{!8569}
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8567, file: !2, baseType: !1586, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!8570 = !DIDerivedType(tag: DW_TAG_member, scope: !8557, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8571 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !8572, file: !2, size: 32, align: 32, elements: !8574, templateParams: !21, identifier: "a2dcb22679bc2325440579868dd2790")
!8572 = !DINamespace(name: "shrink_unchecked", scope: !8573)
!8573 = !DINamespace(name: "{impl#4}", scope: !187)
!8574 = !{!8575}
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !8571, file: !2, baseType: !38, size: 32, align: 32)
!8576 = !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveErrorKind, alloc::raw_vec::{impl#4}::shrink_unchecked::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h38cc76addc955dbdE", scope: !1959, file: !1621, line: 962, type: !8555, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8577)
!8577 = !{!1936, !1968, !8578, !8579}
!8578 = !DITemplateTypeParameter(name: "F", type: !1586)
!8579 = !DITemplateTypeParameter(name: "O", type: !8571)
!8580 = !{!8581, !8582, !8583, !8585}
!8581 = !DILocalVariable(name: "self", arg: 1, scope: !8554, file: !1621, line: 962, type: !1959)
!8582 = !DILocalVariable(name: "op", arg: 2, scope: !8554, file: !1621, line: 962, type: !8571)
!8583 = !DILocalVariable(name: "t", scope: !8584, file: !1621, line: 967, type: !1932, align: 32)
!8584 = distinct !DILexicalBlock(scope: !8554, file: !1621, line: 967, column: 13)
!8585 = !DILocalVariable(name: "e", scope: !8586, file: !1621, line: 968, type: !1969, align: 8)
!8586 = distinct !DILexicalBlock(scope: !8554, file: !1621, line: 968, column: 13)
!8587 = !DILocation(line: 962, column: 32, scope: !8554)
!8588 = !DILocation(line: 962, column: 38, scope: !8554)
!8589 = !DILocation(line: 968, column: 17, scope: !8586)
!8590 = !DILocation(line: 966, column: 15, scope: !8554)
!8591 = !DILocation(line: 966, column: 9, scope: !8554)
!8592 = !DILocation(line: 968, column: 27, scope: !8586)
!8593 = !DILocation(line: 968, column: 23, scope: !8586)
!8594 = !DILocation(line: 968, column: 32, scope: !8554)
!8595 = !DILocation(line: 967, column: 16, scope: !8554)
!8596 = !DILocation(line: 967, column: 16, scope: !8584)
!8597 = !DILocation(line: 967, column: 22, scope: !8584)
!8598 = !DILocation(line: 967, column: 26, scope: !8554)
!8599 = !DILocation(line: 970, column: 5, scope: !8554)
!8600 = !DILocation(line: 970, column: 6, scope: !8554)
!8601 = distinct !DISubprogram(name: "map_err<alloc::string::String, alloc::string::FromUtf8Error, alloc::ffi::c_str::IntoStringError, alloc::ffi::c_str::{impl#1}::into_string::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h73a9e8ee8601aa1eE", scope: !8602, file: !1621, line: 962, type: !8617, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8642, declaration: !8641, retainedNodes: !8645)
!8602 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf8Error>", scope: !335, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !8603, templateParams: !21, identifier: "bfee5de263b7c41b1991491dbf2fbcb4")
!8603 = !{!8604}
!8604 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8602, file: !2, size: 160, align: 32, elements: !8605, templateParams: !21, identifier: "91d1f316f012bab08052dc656d115af2", discriminator: !8616)
!8605 = !{!8606, !8612}
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8604, file: !2, baseType: !8607, size: 160, align: 32, extraData: i32 -2147483648)
!8607 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8602, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !8608, templateParams: !8610, identifier: "f82e6041a2d933437f2db54659400e4")
!8608 = !{!8609}
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8607, file: !2, baseType: !178, size: 96, align: 32, offset: 32, flags: DIFlagPublic)
!8610 = !{!1634, !8611}
!8611 = !DITemplateTypeParameter(name: "E", type: !3370)
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8604, file: !2, baseType: !8613, size: 160, align: 32)
!8613 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8602, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !8614, templateParams: !8610, identifier: "efa31676800895ad4dcf4714d7b13d82")
!8614 = !{!8615}
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8613, file: !2, baseType: !3370, size: 160, align: 32, flags: DIFlagPublic)
!8616 = !DIDerivedType(tag: DW_TAG_member, scope: !8602, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8617 = !DISubroutineType(types: !8618)
!8618 = !{!8619, !8602, !8638}
!8619 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::ffi::c_str::IntoStringError>", scope: !335, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !8620, templateParams: !21, identifier: "230bd7d3adfb5376a6011f9b86506768")
!8620 = !{!8621}
!8621 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8619, file: !2, size: 128, align: 32, elements: !8622, templateParams: !21, identifier: "3d301197e769588f9724215c82c983b8", discriminator: !8637)
!8622 = !{!8623, !8633}
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8621, file: !2, baseType: !8624, size: 128, align: 32, extraData: i8 2)
!8624 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8619, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !8625, templateParams: !8627, identifier: "80c2e5c3077c587e9377e8bbd7a4b460")
!8625 = !{!8626}
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8624, file: !2, baseType: !178, size: 96, align: 32, flags: DIFlagPublic)
!8627 = !{!1634, !8628}
!8628 = !DITemplateTypeParameter(name: "E", type: !8629)
!8629 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoStringError", scope: !400, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !8630, templateParams: !21, identifier: "3666675d13c62d89931270d66ac68fb0")
!8630 = !{!8631, !8632}
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !8629, file: !2, baseType: !404, size: 64, align: 32, flags: DIFlagPrivate)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !8629, file: !2, baseType: !260, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8621, file: !2, baseType: !8634, size: 128, align: 32)
!8634 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8619, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !8635, templateParams: !8627, identifier: "1d244a11764681fba926db54c1b0c14f")
!8635 = !{!8636}
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8634, file: !2, baseType: !8629, size: 128, align: 32, flags: DIFlagPublic)
!8637 = !DIDerivedType(tag: DW_TAG_member, scope: !8619, file: !2, baseType: !24, size: 8, align: 8, offset: 96, flags: DIFlagArtificial)
!8638 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !8639, file: !2, align: 8, elements: !21, identifier: "d5a11220acb8da9fe95b2d17b535116a")
!8639 = !DINamespace(name: "into_string", scope: !8640)
!8640 = !DINamespace(name: "{impl#1}", scope: !400)
!8641 = !DISubprogram(name: "map_err<alloc::string::String, alloc::string::FromUtf8Error, alloc::ffi::c_str::IntoStringError, alloc::ffi::c_str::{impl#1}::into_string::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h73a9e8ee8601aa1eE", scope: !8602, file: !1621, line: 962, type: !8617, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8642)
!8642 = !{!1634, !8611, !8643, !8644}
!8643 = !DITemplateTypeParameter(name: "F", type: !8629)
!8644 = !DITemplateTypeParameter(name: "O", type: !8638)
!8645 = !{!8646, !8647, !8648, !8650}
!8646 = !DILocalVariable(name: "self", arg: 1, scope: !8601, file: !1621, line: 962, type: !8602)
!8647 = !DILocalVariable(name: "op", arg: 2, scope: !8601, file: !1621, line: 962, type: !8638)
!8648 = !DILocalVariable(name: "t", scope: !8649, file: !1621, line: 967, type: !178, align: 32)
!8649 = distinct !DILexicalBlock(scope: !8601, file: !1621, line: 967, column: 13)
!8650 = !DILocalVariable(name: "e", scope: !8651, file: !1621, line: 968, type: !3370, align: 32)
!8651 = distinct !DILexicalBlock(scope: !8601, file: !1621, line: 968, column: 13)
!8652 = !DILocation(line: 962, column: 32, scope: !8601)
!8653 = !DILocation(line: 962, column: 38, scope: !8601)
!8654 = !DILocation(line: 967, column: 16, scope: !8649)
!8655 = !DILocation(line: 968, column: 17, scope: !8651)
!8656 = !DILocation(line: 966, column: 15, scope: !8601)
!8657 = !DILocation(line: 966, column: 9, scope: !8601)
!8658 = !DILocation(line: 968, column: 17, scope: !8601)
!8659 = !DILocation(line: 968, column: 27, scope: !8651)
!8660 = !DILocation(line: 968, column: 23, scope: !8651)
!8661 = !DILocation(line: 968, column: 32, scope: !8601)
!8662 = !DILocation(line: 967, column: 16, scope: !8601)
!8663 = !DILocation(line: 967, column: 22, scope: !8649)
!8664 = !DILocation(line: 967, column: 26, scope: !8601)
!8665 = !DILocation(line: 970, column: 5, scope: !8601)
!8666 = !DILocation(line: 970, column: 6, scope: !8601)
!8667 = distinct !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16le::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h90d6cec6483c057dE", scope: !1625, file: !1621, line: 962, type: !8668, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8691, declaration: !8690, retainedNodes: !8694)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{!8670, !1625, !8688}
!8670 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::string::FromUtf16Error>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8671, templateParams: !21, identifier: "89f50800e78b9f92e5af5f832caeb1e9")
!8671 = !{!8672}
!8672 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8670, file: !2, size: 96, align: 32, elements: !8673, templateParams: !21, identifier: "73748adf4bb5c191c60f320772c4fa04", discriminator: !8687)
!8673 = !{!8674, !8683}
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8672, file: !2, baseType: !8675, size: 96, align: 32)
!8675 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8670, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8676, templateParams: !8678, identifier: "aa7b924cfcb383cbaf5b5af621526365")
!8676 = !{!8677}
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8675, file: !2, baseType: !178, size: 96, align: 32, flags: DIFlagPublic)
!8678 = !{!1634, !8679}
!8679 = !DITemplateTypeParameter(name: "E", type: !8680)
!8680 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromUtf16Error", scope: !179, file: !2, align: 8, flags: DIFlagPublic, elements: !8681, templateParams: !21, identifier: "acce93ac8950b18487cedbcc633b36aa")
!8681 = !{!8682}
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8680, file: !2, baseType: !7, align: 8, flags: DIFlagPrivate)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8672, file: !2, baseType: !8684, size: 96, align: 32, extraData: i32 -2147483648)
!8684 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8670, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8685, templateParams: !8678, identifier: "43d2466b0e7a152d27f78223dea206f3")
!8685 = !{!8686}
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8684, file: !2, baseType: !8680, align: 8, flags: DIFlagPublic)
!8687 = !DIDerivedType(tag: DW_TAG_member, scope: !8670, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8688 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !8689, file: !2, align: 8, elements: !21, identifier: "178fe8755ed5168899ae97013a3eb013")
!8689 = !DINamespace(name: "from_utf16le", scope: !550)
!8690 = !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16le::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h90d6cec6483c057dE", scope: !1625, file: !1621, line: 962, type: !8668, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8691)
!8691 = !{!1634, !975, !8692, !8693}
!8692 = !DITemplateTypeParameter(name: "F", type: !8680)
!8693 = !DITemplateTypeParameter(name: "O", type: !8688)
!8694 = !{!8695, !8696, !8697, !8699}
!8695 = !DILocalVariable(name: "self", arg: 1, scope: !8667, file: !1621, line: 962, type: !1625)
!8696 = !DILocalVariable(name: "op", arg: 2, scope: !8667, file: !1621, line: 962, type: !8688)
!8697 = !DILocalVariable(name: "t", scope: !8698, file: !1621, line: 967, type: !178, align: 32)
!8698 = distinct !DILexicalBlock(scope: !8667, file: !1621, line: 967, column: 13)
!8699 = !DILocalVariable(name: "e", scope: !8700, file: !1621, line: 968, type: !976, align: 16)
!8700 = distinct !DILexicalBlock(scope: !8667, file: !1621, line: 968, column: 13)
!8701 = !DILocation(line: 962, column: 32, scope: !8667)
!8702 = !DILocation(line: 962, column: 38, scope: !8667)
!8703 = !DILocation(line: 967, column: 16, scope: !8698)
!8704 = !DILocation(line: 966, column: 15, scope: !8667)
!8705 = !DILocation(line: 966, column: 9, scope: !8667)
!8706 = !DILocation(line: 968, column: 17, scope: !8667)
!8707 = !DILocation(line: 968, column: 17, scope: !8700)
!8708 = !DILocation(line: 968, column: 27, scope: !8700)
!8709 = !DILocation(line: 968, column: 23, scope: !8700)
!8710 = !DILocation(line: 968, column: 32, scope: !8667)
!8711 = !DILocation(line: 967, column: 16, scope: !8667)
!8712 = !DILocation(line: 967, column: 22, scope: !8698)
!8713 = !DILocation(line: 967, column: 26, scope: !8667)
!8714 = !DILocation(line: 970, column: 5, scope: !8667)
!8715 = !DILocation(line: 970, column: 6, scope: !8667)
!8716 = distinct !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveError, alloc::raw_vec::layout_array::{closure_env#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9191610bed43e73bE", scope: !6943, file: !1621, line: 962, type: !8717, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8735, declaration: !8734, retainedNodes: !8737)
!8717 = !DISubroutineType(types: !8718)
!8718 = !{!8719, !6943, !8733}
!8719 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::alloc::layout::Layout, alloc::collections::TryReserveError>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8720, templateParams: !21, identifier: "3e7288f761d60c763853f098b8c9c117")
!8720 = !{!8721}
!8721 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8719, file: !2, size: 96, align: 32, elements: !8722, templateParams: !21, identifier: "2e9a332d376de7a2b18f29fc789b184", discriminator: !8732)
!8722 = !{!8723, !8728}
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !8721, file: !2, baseType: !8724, size: 96, align: 32, extraData: i32 0)
!8724 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !8719, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8725, templateParams: !8727, identifier: "ac9e198398fca571ee2bdae34f74890a")
!8725 = !{!8726}
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8724, file: !2, baseType: !39, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!8727 = !{!2184, !1881}
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !8721, file: !2, baseType: !8729, size: 96, align: 32, extraData: i32 1)
!8729 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !8719, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8730, templateParams: !8727, identifier: "b08db511d1e3d7d79858f6d9b2d21fc")
!8730 = !{!8731}
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8729, file: !2, baseType: !1583, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!8732 = !DIDerivedType(tag: DW_TAG_member, scope: !8719, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8733 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}", scope: !8509, file: !2, align: 8, elements: !21, identifier: "aeabaf6f06fb0ae53a5f0c8246f6c612")
!8734 = !DISubprogram(name: "map_err<core::alloc::layout::Layout, core::alloc::layout::LayoutError, alloc::collections::TryReserveError, alloc::raw_vec::layout_array::{closure_env#1}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9191610bed43e73bE", scope: !6943, file: !1621, line: 962, type: !8717, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8735)
!8735 = !{!2184, !6952, !1905, !8736}
!8736 = !DITemplateTypeParameter(name: "O", type: !8733)
!8737 = !{!8738, !8739, !8740, !8742}
!8738 = !DILocalVariable(name: "self", arg: 1, scope: !8716, file: !1621, line: 962, type: !6943)
!8739 = !DILocalVariable(name: "op", arg: 2, scope: !8716, file: !1621, line: 962, type: !8733)
!8740 = !DILocalVariable(name: "t", scope: !8741, file: !1621, line: 967, type: !39, align: 32)
!8741 = distinct !DILexicalBlock(scope: !8716, file: !1621, line: 967, column: 13)
!8742 = !DILocalVariable(name: "e", scope: !8743, file: !1621, line: 968, type: !6953, align: 8)
!8743 = distinct !DILexicalBlock(scope: !8716, file: !1621, line: 968, column: 13)
!8744 = !DILocation(line: 962, column: 32, scope: !8716)
!8745 = !DILocation(line: 962, column: 38, scope: !8716)
!8746 = !DILocation(line: 968, column: 17, scope: !8743)
!8747 = !DILocation(line: 966, column: 15, scope: !8716)
!8748 = !DILocation(line: 966, column: 9, scope: !8716)
!8749 = !DILocation(line: 968, column: 27, scope: !8743)
!8750 = !DILocation(line: 968, column: 23, scope: !8743)
!8751 = !DILocation(line: 968, column: 32, scope: !8716)
!8752 = !DILocation(line: 967, column: 16, scope: !8716)
!8753 = !DILocation(line: 967, column: 16, scope: !8741)
!8754 = !DILocation(line: 967, column: 22, scope: !8741)
!8755 = !DILocation(line: 967, column: 26, scope: !8716)
!8756 = !DILocation(line: 970, column: 5, scope: !8716)
!8757 = !DILocation(line: 970, column: 6, scope: !8716)
!8758 = distinct !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::{impl#4}::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h94788840a701f0cfE", scope: !1959, file: !1621, line: 962, type: !8759, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8766, declaration: !8765, retainedNodes: !8768)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{!1924, !1959, !8761}
!8761 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<alloc::alloc::Global>", scope: !8762, file: !2, size: 32, align: 32, elements: !8763, templateParams: !21, identifier: "57f44b31e9eb0d0b1ba147ee3fc47df")
!8762 = !DINamespace(name: "finish_grow", scope: !8573)
!8763 = !{!8764}
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__new_layout", scope: !8761, file: !2, baseType: !38, size: 32, align: 32)
!8765 = !DISubprogram(name: "map_err<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::{impl#4}::finish_grow::{closure_env#0}<alloc::alloc::Global>>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h94788840a701f0cfE", scope: !1959, file: !1621, line: 962, type: !8759, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8766)
!8766 = !{!1936, !1968, !1905, !8767}
!8767 = !DITemplateTypeParameter(name: "O", type: !8761)
!8768 = !{!8769, !8770, !8771, !8773}
!8769 = !DILocalVariable(name: "self", arg: 1, scope: !8758, file: !1621, line: 962, type: !1959)
!8770 = !DILocalVariable(name: "op", arg: 2, scope: !8758, file: !1621, line: 962, type: !8761)
!8771 = !DILocalVariable(name: "t", scope: !8772, file: !1621, line: 967, type: !1932, align: 32)
!8772 = distinct !DILexicalBlock(scope: !8758, file: !1621, line: 967, column: 13)
!8773 = !DILocalVariable(name: "e", scope: !8774, file: !1621, line: 968, type: !1969, align: 8)
!8774 = distinct !DILexicalBlock(scope: !8758, file: !1621, line: 968, column: 13)
!8775 = !DILocation(line: 962, column: 32, scope: !8758)
!8776 = !DILocation(line: 962, column: 38, scope: !8758)
!8777 = !DILocation(line: 968, column: 17, scope: !8774)
!8778 = !DILocation(line: 966, column: 15, scope: !8758)
!8779 = !DILocation(line: 966, column: 9, scope: !8758)
!8780 = !DILocation(line: 968, column: 27, scope: !8774)
!8781 = !DILocation(line: 968, column: 23, scope: !8774)
!8782 = !DILocation(line: 968, column: 32, scope: !8758)
!8783 = !DILocation(line: 967, column: 16, scope: !8758)
!8784 = !DILocation(line: 967, column: 16, scope: !8772)
!8785 = !DILocation(line: 967, column: 22, scope: !8772)
!8786 = !DILocation(line: 967, column: 26, scope: !8758)
!8787 = !DILocation(line: 970, column: 5, scope: !8758)
!8788 = !DILocation(line: 970, column: 6, scope: !8758)
!8789 = distinct !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16be::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9dc848eac107c796E", scope: !1625, file: !1621, line: 962, type: !8790, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8795, declaration: !8794, retainedNodes: !8797)
!8790 = !DISubroutineType(types: !8791)
!8791 = !{!8670, !1625, !8792}
!8792 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}", scope: !8793, file: !2, align: 8, elements: !21, identifier: "3a9e6205eb9ee4991b896bc2390fc700")
!8793 = !DINamespace(name: "from_utf16be", scope: !550)
!8794 = !DISubprogram(name: "map_err<alloc::string::String, core::char::decode::DecodeUtf16Error, alloc::string::FromUtf16Error, alloc::string::{impl#0}::from_utf16be::{closure_env#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h9dc848eac107c796E", scope: !1625, file: !1621, line: 962, type: !8790, scopeLine: 962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !8795)
!8795 = !{!1634, !975, !8692, !8796}
!8796 = !DITemplateTypeParameter(name: "O", type: !8792)
!8797 = !{!8798, !8799, !8800, !8802}
!8798 = !DILocalVariable(name: "self", arg: 1, scope: !8789, file: !1621, line: 962, type: !1625)
!8799 = !DILocalVariable(name: "op", arg: 2, scope: !8789, file: !1621, line: 962, type: !8792)
!8800 = !DILocalVariable(name: "t", scope: !8801, file: !1621, line: 967, type: !178, align: 32)
!8801 = distinct !DILexicalBlock(scope: !8789, file: !1621, line: 967, column: 13)
!8802 = !DILocalVariable(name: "e", scope: !8803, file: !1621, line: 968, type: !976, align: 16)
!8803 = distinct !DILexicalBlock(scope: !8789, file: !1621, line: 968, column: 13)
!8804 = !DILocation(line: 962, column: 32, scope: !8789)
!8805 = !DILocation(line: 962, column: 38, scope: !8789)
!8806 = !DILocation(line: 967, column: 16, scope: !8801)
!8807 = !DILocation(line: 966, column: 15, scope: !8789)
!8808 = !DILocation(line: 966, column: 9, scope: !8789)
!8809 = !DILocation(line: 968, column: 17, scope: !8789)
!8810 = !DILocation(line: 968, column: 17, scope: !8803)
!8811 = !DILocation(line: 968, column: 27, scope: !8803)
!8812 = !DILocation(line: 968, column: 23, scope: !8803)
!8813 = !DILocation(line: 968, column: 32, scope: !8789)
!8814 = !DILocation(line: 967, column: 16, scope: !8789)
!8815 = !DILocation(line: 967, column: 22, scope: !8801)
!8816 = !DILocation(line: 967, column: 26, scope: !8789)
!8817 = !DILocation(line: 970, column: 5, scope: !8789)
!8818 = !DILocation(line: 970, column: 6, scope: !8789)
!8819 = distinct !DISubprogram(name: "unwrap_or<char, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17hf7981cfaf74295d8E", scope: !1112, file: !1621, line: 1590, type: !8820, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1120, declaration: !8822, retainedNodes: !8823)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!574, !1112, !574}
!8822 = !DISubprogram(name: "unwrap_or<char, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17hf7981cfaf74295d8E", scope: !1112, file: !1621, line: 1590, type: !8820, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1120)
!8823 = !{!8824, !8825, !8826}
!8824 = !DILocalVariable(name: "self", arg: 1, scope: !8819, file: !1621, line: 1590, type: !1112)
!8825 = !DILocalVariable(name: "default", arg: 2, scope: !8819, file: !1621, line: 1590, type: !574)
!8826 = !DILocalVariable(name: "t", scope: !8827, file: !1621, line: 1596, type: !574, align: 32)
!8827 = distinct !DILexicalBlock(scope: !8819, file: !1621, line: 1596, column: 13)
!8828 = !DILocation(line: 1590, column: 28, scope: !8819)
!8829 = !DILocation(line: 1590, column: 34, scope: !8819)
!8830 = !DILocation(line: 1595, column: 15, scope: !8819)
!8831 = !DILocation(line: 1595, column: 9, scope: !8819)
!8832 = !DILocation(line: 1597, column: 23, scope: !8819)
!8833 = !DILocation(line: 1596, column: 16, scope: !8819)
!8834 = !DILocation(line: 1596, column: 16, scope: !8827)
!8835 = !DILocation(line: 1596, column: 22, scope: !8827)
!8836 = !DILocation(line: 1596, column: 22, scope: !8819)
!8837 = !DILocation(line: 1599, column: 5, scope: !8819)
!8838 = !DILocation(line: 1599, column: 6, scope: !8819)
!8839 = distinct !DISubprogram(name: "lookup", linkageName: "_ZN4core7unicode12unicode_data14case_ignorable6lookup17h7bccb44ea784e7a9E", scope: !8841, file: !8840, line: 318, type: !5191, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8844)
!8840 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/unicode/unicode_data.rs", directory: "", checksumkind: CSK_MD5, checksum: "f8471147458c614569650135e63cd79a")
!8841 = !DINamespace(name: "case_ignorable", scope: !8842)
!8842 = !DINamespace(name: "unicode_data", scope: !8843)
!8843 = !DINamespace(name: "unicode", scope: !15)
!8844 = !{!8845}
!8845 = !DILocalVariable(name: "c", arg: 1, scope: !8839, file: !8840, line: 318, type: !574)
!8846 = !DILocation(line: 318, column: 19, scope: !8839)
!8847 = !DILocation(line: 319, column: 26, scope: !8839)
!8848 = !DILocation(line: 319, column: 24, scope: !8839)
!8849 = !DILocation(line: 320, column: 9, scope: !8839)
!8850 = !DILocation(line: 295, column: 13, scope: !8851)
!8851 = !DILexicalBlockFile(scope: !8839, file: !2304, discriminator: 0)
!8852 = !DILocation(line: 320, column: 31, scope: !8839)
!8853 = !DILocation(line: 321, column: 6, scope: !8839)
!8854 = distinct !DISubprogram(name: "lookup", linkageName: "_ZN4core7unicode12unicode_data5cased6lookup17h3e46302b6fe81cb0E", scope: !8855, file: !8840, line: 371, type: !5191, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8856)
!8855 = !DINamespace(name: "cased", scope: !8842)
!8856 = !{!8857}
!8857 = !DILocalVariable(name: "c", arg: 1, scope: !8854, file: !8840, line: 371, type: !574)
!8858 = !DILocation(line: 371, column: 19, scope: !8854)
!8859 = !DILocation(line: 372, column: 26, scope: !8854)
!8860 = !DILocation(line: 372, column: 24, scope: !8854)
!8861 = !DILocation(line: 373, column: 9, scope: !8854)
!8862 = !DILocation(line: 295, column: 13, scope: !8863)
!8863 = !DILexicalBlockFile(scope: !8854, file: !2304, discriminator: 0)
!8864 = !DILocation(line: 373, column: 31, scope: !8854)
!8865 = !DILocation(line: 374, column: 6, scope: !8854)
!8866 = distinct !DISubprogram(name: "panic_const_div_by_zero", linkageName: "_ZN4core9panicking11panic_const23panic_const_div_by_zero17h5051c6ff4ea8e3faE", scope: !8868, file: !8867, line: 173, type: !7958, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!8867 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs", directory: "", checksumkind: CSK_MD5, checksum: "b120da646d1a09f31201b8a519374e57")
!8868 = !DINamespace(name: "panic_const", scope: !281)
!8869 = !DILocation(line: 180, column: 27, scope: !8866)
!8870 = !DILocation(line: 180, column: 17, scope: !8866)
!8871 = distinct !DISubprogram(name: "panic_const_rem_by_zero", linkageName: "_ZN4core9panicking11panic_const23panic_const_rem_by_zero17hf7f0dd58d8b45737E", scope: !8868, file: !8867, line: 173, type: !7958, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!8872 = !DILocation(line: 180, column: 27, scope: !8871)
!8873 = !DILocation(line: 180, column: 17, scope: !8871)
!8874 = distinct !DISubprogram(name: "panic_const_add_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_add_overflow17h3ff13cea42d358f0E", scope: !8868, file: !8867, line: 173, type: !7958, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!8875 = !DILocation(line: 180, column: 27, scope: !8874)
!8876 = !DILocation(line: 180, column: 17, scope: !8874)
!8877 = distinct !DISubprogram(name: "panic_const_mul_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_mul_overflow17hab8ee8a4892feb14E", scope: !8868, file: !8867, line: 173, type: !7958, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!8878 = !DILocation(line: 180, column: 27, scope: !8877)
!8879 = !DILocation(line: 180, column: 17, scope: !8877)
!8880 = distinct !DISubprogram(name: "panic_const_shl_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_shl_overflow17ha8a57b421ff69571E", scope: !8868, file: !8867, line: 173, type: !7958, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!8881 = !DILocation(line: 180, column: 27, scope: !8880)
!8882 = !DILocation(line: 180, column: 17, scope: !8880)
!8883 = distinct !DISubprogram(name: "panic_const_shr_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_shr_overflow17h53cfb129f0f9bfb7E", scope: !8868, file: !8867, line: 173, type: !7958, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!8884 = !DILocation(line: 180, column: 27, scope: !8883)
!8885 = !DILocation(line: 180, column: 17, scope: !8883)
!8886 = distinct !DISubprogram(name: "panic_const_sub_overflow", linkageName: "_ZN4core9panicking11panic_const24panic_const_sub_overflow17h9fa96d1986b44acaE", scope: !8868, file: !8867, line: 173, type: !7958, scopeLine: 173, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!8887 = !DILocation(line: 180, column: 27, scope: !8886)
!8888 = !DILocation(line: 180, column: 17, scope: !8886)
!8889 = distinct !DISubprogram(name: "assert_failed<core::option::Option<u8>, core::option::Option<u8>>", linkageName: "_ZN4core9panicking13assert_failed17h59a1cc89abfda22fE", scope: !281, file: !8867, line: 389, type: !8890, scopeLine: 389, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8910, retainedNodes: !8905)
!8890 = !DISubroutineType(types: !8891)
!8891 = !{null, !280, !12, !12, !8892, !1241}
!8892 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::fmt::Arguments>", scope: !14, file: !2, size: 192, align: 32, flags: DIFlagPublic, elements: !8893, templateParams: !21, identifier: "ab84d8f380f2b038f2b47451e9a88965")
!8893 = !{!8894}
!8894 = !DICompositeType(tag: DW_TAG_variant_part, scope: !8892, file: !2, size: 192, align: 32, elements: !8895, templateParams: !21, identifier: "a9c288554fe5264c26193b21f9c51dd1", discriminator: !8904)
!8895 = !{!8896, !8900}
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !8894, file: !2, baseType: !8897, size: 192, align: 32, extraData: i32 0)
!8897 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !8892, file: !2, size: 192, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !8898, identifier: "d44097508e0ad9b814396a0a66442e09")
!8898 = !{!8899}
!8899 = !DITemplateTypeParameter(name: "T", type: !2384)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !8894, file: !2, baseType: !8901, size: 192, align: 32)
!8901 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !8892, file: !2, size: 192, align: 32, flags: DIFlagPublic, elements: !8902, templateParams: !8898, identifier: "fca2c2f54e5c8adabc82a35ba16e73f9")
!8902 = !{!8903}
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8901, file: !2, baseType: !2384, size: 192, align: 32, flags: DIFlagPublic)
!8904 = !DIDerivedType(tag: DW_TAG_member, scope: !8892, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!8905 = !{!8906, !8907, !8908, !8909}
!8906 = !DILocalVariable(name: "kind", arg: 1, scope: !8889, file: !8867, line: 390, type: !280)
!8907 = !DILocalVariable(name: "left", arg: 2, scope: !8889, file: !8867, line: 391, type: !12)
!8908 = !DILocalVariable(name: "right", arg: 3, scope: !8889, file: !8867, line: 392, type: !12)
!8909 = !DILocalVariable(name: "args", arg: 4, scope: !8889, file: !8867, line: 393, type: !8892)
!8910 = !{!2198, !8911}
!8911 = !DITemplateTypeParameter(name: "U", type: !13)
!8912 = !DILocation(line: 390, column: 5, scope: !8889)
!8913 = !DILocation(line: 391, column: 5, scope: !8889)
!8914 = !DILocation(line: 392, column: 5, scope: !8889)
!8915 = !DILocation(line: 393, column: 5, scope: !8889)
!8916 = !DILocation(line: 399, column: 5, scope: !8889)
!8917 = distinct !DISubprogram(name: "assert_failed<core::alloc::layout::Layout, core::alloc::layout::Layout>", linkageName: "_ZN4core9panicking13assert_failed17hf2b3c7a53ef8be1eE", scope: !281, file: !8867, line: 389, type: !8918, scopeLine: 389, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8925, retainedNodes: !8920)
!8918 = !DISubroutineType(types: !8919)
!8919 = !{null, !280, !38, !38, !8892, !1241}
!8920 = !{!8921, !8922, !8923, !8924}
!8921 = !DILocalVariable(name: "kind", arg: 1, scope: !8917, file: !8867, line: 390, type: !280)
!8922 = !DILocalVariable(name: "left", arg: 2, scope: !8917, file: !8867, line: 391, type: !38)
!8923 = !DILocalVariable(name: "right", arg: 3, scope: !8917, file: !8867, line: 392, type: !38)
!8924 = !DILocalVariable(name: "args", arg: 4, scope: !8917, file: !8867, line: 393, type: !8892)
!8925 = !{!2184, !8512}
!8926 = !DILocation(line: 390, column: 5, scope: !8917)
!8927 = !DILocation(line: 391, column: 5, scope: !8917)
!8928 = !DILocation(line: 392, column: 5, scope: !8917)
!8929 = !DILocation(line: 393, column: 5, scope: !8917)
!8930 = !DILocation(line: 399, column: 5, scope: !8917)
!8931 = distinct !DISubprogram(name: "panic_nounwind", linkageName: "_ZN4core9panicking14panic_nounwind17h92ec681c78bc5927E", scope: !281, file: !8867, line: 229, type: !8932, scopeLine: 229, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8934)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{null, !124}
!8934 = !{!8935}
!8935 = !DILocalVariable(name: "expr", arg: 1, scope: !8931, file: !8867, line: 229, type: !124)
!8936 = !DILocation(line: 229, column: 29, scope: !8931)
!8937 = !DILocation(line: 230, column: 51, scope: !8931)
!8938 = !DILocation(line: 230, column: 24, scope: !8931)
!8939 = !DILocation(line: 230, column: 5, scope: !8931)
!8940 = distinct !DISubprogram(name: "panic_bounds_check", linkageName: "_ZN4core9panicking18panic_bounds_check17h4b3dbd454bea2b3bE", scope: !281, file: !8867, line: 271, type: !2968, scopeLine: 271, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8941)
!8941 = !{!8942, !8943, !8944, !8951}
!8942 = !DILocalVariable(name: "index", arg: 1, scope: !8940, file: !8867, line: 271, type: !9)
!8943 = !DILocalVariable(name: "len", arg: 2, scope: !8940, file: !8867, line: 271, type: !9)
!8944 = !DILocalVariable(name: "args", scope: !8945, file: !8867, line: 276, type: !8947, align: 32)
!8945 = !DILexicalBlockFile(scope: !8946, file: !8867, discriminator: 0)
!8946 = distinct !DILexicalBlock(scope: !8940, file: !304, line: 62, column: 38)
!8947 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !2, size: 64, align: 32, elements: !8948, templateParams: !21, identifier: "c7a49237229ff8f5cee7a39428e0a5c9")
!8948 = !{!8949, !8950}
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !8947, file: !2, baseType: !93, size: 32, align: 32)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !8947, file: !2, baseType: !93, size: 32, align: 32, offset: 32)
!8951 = !DILocalVariable(name: "args", scope: !8952, file: !8867, line: 276, type: !8954, align: 32)
!8952 = !DILexicalBlockFile(scope: !8953, file: !8867, discriminator: 0)
!8953 = distinct !DILexicalBlock(scope: !8946, file: !304, line: 62, column: 38)
!8954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, align: 32, elements: !512)
!8955 = !DILocation(line: 271, column: 23, scope: !8940)
!8956 = !DILocation(line: 271, column: 37, scope: !8940)
!8957 = !DILocation(line: 273, column: 9, scope: !8940)
!8958 = distinct !DISubprogram(name: "panic_nounwind_fmt", linkageName: "_ZN4core9panicking18panic_nounwind_fmt17h49d5f7c68de81c41E", scope: !281, file: !8867, line: 95, type: !8959, scopeLine: 95, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8961)
!8959 = !DISubroutineType(types: !8960)
!8960 = !{null, !2384, !643, !1241}
!8961 = !{!8962, !8963}
!8962 = !DILocalVariable(name: "fmt", arg: 1, scope: !8958, file: !8867, line: 95, type: !2384)
!8963 = !DILocalVariable(name: "force_no_backtrace", arg: 2, scope: !8958, file: !8867, line: 95, type: !643)
!8964 = !DILocation(line: 95, column: 33, scope: !8958)
!8965 = !DILocation(line: 95, column: 58, scope: !8958)
!8966 = !DILocation(line: 2435, column: 27, scope: !8967)
!8967 = !DILexicalBlockFile(scope: !8958, file: !2231, discriminator: 0)
!8968 = !DILocation(line: 2435, column: 9, scope: !8967)
!8969 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9panicking18panic_nounwind_fmt7runtime17hf0cf52a188ea282eE", scope: !8970, file: !2231, line: 2423, type: !8959, scopeLine: 2423, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8971)
!8970 = !DINamespace(name: "panic_nounwind_fmt", scope: !281)
!8971 = !{!8972, !8973, !8974}
!8972 = !DILocalVariable(name: "fmt", arg: 1, scope: !8969, file: !2231, line: 2423, type: !2384)
!8973 = !DILocalVariable(name: "force_no_backtrace", arg: 2, scope: !8969, file: !2231, line: 2423, type: !643)
!8974 = !DILocalVariable(name: "pi", scope: !8975, file: !8867, line: 114, type: !8976, align: 32)
!8975 = distinct !DILexicalBlock(scope: !8969, file: !8867, line: 114, column: 13)
!8976 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicInfo", scope: !8977, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !8978, templateParams: !21, identifier: "74943ad5cfeaa8d7c3439d6f603267a6")
!8977 = !DINamespace(name: "panic_info", scope: !1244)
!8978 = !{!8979, !8980, !8981, !8982}
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !8976, file: !2, baseType: !2451, size: 32, align: 32, flags: DIFlagPrivate)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8976, file: !2, baseType: !1241, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "can_unwind", scope: !8976, file: !2, baseType: !643, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "force_no_backtrace", scope: !8976, file: !2, baseType: !643, size: 8, align: 8, offset: 72, flags: DIFlagPrivate)
!8983 = !DILocation(line: 2423, column: 40, scope: !8969)
!8984 = !DILocation(line: 103, column: 17, scope: !8985)
!8985 = !DILexicalBlockFile(scope: !8969, file: !8867, discriminator: 0)
!8986 = distinct !DISubprogram(name: "assert_failed_inner", linkageName: "_ZN4core9panicking19assert_failed_inner17ha9096800332a722cE", scope: !281, file: !8867, line: 426, type: !8987, scopeLine: 426, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !8997)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{null, !280, !8989, !8989, !8892, !1241}
!8989 = !DICompositeType(tag: DW_TAG_structure_type, name: "&dyn core::fmt::Debug", file: !2, size: 64, align: 32, elements: !8990, templateParams: !21, identifier: "f621565895f83eb86021d7f82a9f11c7")
!8990 = !{!8991, !8994}
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8989, file: !2, baseType: !8992, size: 32, align: 32)
!8992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8993, size: 32, align: 32, dwarfAddressSpace: 0)
!8993 = !DICompositeType(tag: DW_TAG_structure_type, name: "dyn core::fmt::Debug", file: !2, align: 8, elements: !21, identifier: "c3b7a2a6681ed1de85d5a0424ad0bd95")
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !8989, file: !2, baseType: !8995, size: 32, align: 32, offset: 32)
!8995 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 4]", baseType: !8996, size: 32, align: 32, dwarfAddressSpace: 0)
!8996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 128, align: 32, elements: !2243)
!8997 = !{!8998, !8999, !9000, !9001, !9002, !9004, !9006, !9016, !9020, !9028}
!8998 = !DILocalVariable(name: "kind", arg: 1, scope: !8986, file: !8867, line: 427, type: !280)
!8999 = !DILocalVariable(name: "left", arg: 2, scope: !8986, file: !8867, line: 428, type: !8989)
!9000 = !DILocalVariable(name: "right", arg: 3, scope: !8986, file: !8867, line: 429, type: !8989)
!9001 = !DILocalVariable(name: "args", arg: 4, scope: !8986, file: !8867, line: 430, type: !8892)
!9002 = !DILocalVariable(name: "op", scope: !9003, file: !8867, line: 432, type: !124, align: 32)
!9003 = distinct !DILexicalBlock(scope: !8986, file: !8867, line: 432, column: 5)
!9004 = !DILocalVariable(name: "args", scope: !9005, file: !8867, line: 439, type: !2384, align: 32)
!9005 = distinct !DILexicalBlock(scope: !9003, file: !8867, line: 439, column: 9)
!9006 = !DILocalVariable(name: "args", scope: !9007, file: !8867, line: 439, type: !9009, align: 32)
!9007 = !DILexicalBlockFile(scope: !9008, file: !8867, discriminator: 0)
!9008 = distinct !DILexicalBlock(scope: !9005, file: !304, line: 62, column: 38)
!9009 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&&str, &core::fmt::Arguments, &&dyn core::fmt::Debug, &&dyn core::fmt::Debug)", file: !2, size: 128, align: 32, elements: !9010, templateParams: !21, identifier: "c1dfec16c1a0cbb678b24e4f7344a6b6")
!9010 = !{!9011, !9012, !9013, !9015}
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9009, file: !2, baseType: !604, size: 32, align: 32)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !9009, file: !2, baseType: !2451, size: 32, align: 32, offset: 32)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !9009, file: !2, baseType: !9014, size: 32, align: 32, offset: 64)
!9014 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&dyn core::fmt::Debug", baseType: !8989, size: 32, align: 32, dwarfAddressSpace: 0)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "__3", scope: !9009, file: !2, baseType: !9014, size: 32, align: 32, offset: 96)
!9016 = !DILocalVariable(name: "args", scope: !9017, file: !8867, line: 439, type: !9019, align: 32)
!9017 = !DILexicalBlockFile(scope: !9018, file: !8867, discriminator: 0)
!9018 = distinct !DILexicalBlock(scope: !9008, file: !304, line: 62, column: 38)
!9019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, align: 32, elements: !2243)
!9020 = !DILocalVariable(name: "args", scope: !9021, file: !8867, line: 444, type: !9023, align: 32)
!9021 = !DILexicalBlockFile(scope: !9022, file: !8867, discriminator: 0)
!9022 = distinct !DILexicalBlock(scope: !9003, file: !304, line: 62, column: 38)
!9023 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&&str, &&dyn core::fmt::Debug, &&dyn core::fmt::Debug)", file: !2, size: 96, align: 32, elements: !9024, templateParams: !21, identifier: "70485fee849c454c20f56eb17c02f6d1")
!9024 = !{!9025, !9026, !9027}
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9023, file: !2, baseType: !604, size: 32, align: 32)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !9023, file: !2, baseType: !9014, size: 32, align: 32, offset: 32)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !9023, file: !2, baseType: !9014, size: 32, align: 32, offset: 64)
!9028 = !DILocalVariable(name: "args", scope: !9029, file: !8867, line: 444, type: !9031, align: 32)
!9029 = !DILexicalBlockFile(scope: !9030, file: !8867, discriminator: 0)
!9030 = distinct !DILexicalBlock(scope: !9022, file: !304, line: 62, column: 38)
!9031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 192, align: 32, elements: !7347)
!9032 = !DILocation(line: 427, column: 5, scope: !8986)
!9033 = !DILocation(line: 428, column: 5, scope: !8986)
!9034 = !DILocation(line: 429, column: 5, scope: !8986)
!9035 = !DILocation(line: 430, column: 5, scope: !8986)
!9036 = !DILocation(line: 432, column: 9, scope: !9003)
!9037 = !DILocation(line: 439, column: 14, scope: !9005)
!9038 = !DILocation(line: 439, column: 23, scope: !9007)
!9039 = !DILocation(line: 439, column: 23, scope: !9017)
!9040 = !DILocation(line: 444, column: 17, scope: !9021)
!9041 = !DILocation(line: 444, column: 17, scope: !9029)
!9042 = !DILocation(line: 432, column: 20, scope: !8986)
!9043 = !DILocation(line: 432, column: 14, scope: !8986)
!9044 = !DILocation(line: 0, scope: !9045)
!9045 = !DILexicalBlockFile(scope: !8986, file: !4885, discriminator: 0)
!9046 = !DILocation(line: 433, column: 27, scope: !8986)
!9047 = !DILocation(line: 434, column: 27, scope: !8986)
!9048 = !DILocation(line: 434, column: 30, scope: !8986)
!9049 = !DILocation(line: 435, column: 30, scope: !8986)
!9050 = !DILocation(line: 435, column: 38, scope: !8986)
!9051 = !DILocation(line: 438, column: 11, scope: !9003)
!9052 = !DILocation(line: 438, column: 5, scope: !9003)
!9053 = !DILocation(line: 439, column: 14, scope: !9003)
!9054 = !DILocation(line: 439, column: 23, scope: !9005)
!9055 = !DILocation(line: 444, column: 17, scope: !9003)
!9056 = distinct !DISubprogram(name: "panic", linkageName: "_ZN4core9panicking5panic17hd506548a43a79924E", scope: !281, file: !8867, line: 138, type: !9057, scopeLine: 138, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9059)
!9057 = !DISubroutineType(types: !9058)
!9058 = !{null, !124, !1241}
!9059 = !{!9060}
!9060 = !DILocalVariable(name: "expr", arg: 1, scope: !9056, file: !8867, line: 138, type: !124)
!9061 = !DILocation(line: 138, column: 20, scope: !9056)
!9062 = !DILocation(line: 150, column: 42, scope: !9056)
!9063 = !DILocation(line: 150, column: 15, scope: !9056)
!9064 = !DILocation(line: 150, column: 5, scope: !9056)
!9065 = distinct !DISubprogram(name: "panic_fmt", linkageName: "_ZN4core9panicking9panic_fmt17hb52a98bbbe63b68aE", scope: !281, file: !8867, line: 60, type: !9066, scopeLine: 60, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9068)
!9066 = !DISubroutineType(types: !9067)
!9067 = !{null, !2384, !1241}
!9068 = !{!9069, !9070}
!9069 = !DILocalVariable(name: "fmt", arg: 1, scope: !9065, file: !8867, line: 60, type: !2384)
!9070 = !DILocalVariable(name: "pi", scope: !9071, file: !8867, line: 72, type: !8976, align: 32)
!9071 = distinct !DILexicalBlock(scope: !9065, file: !8867, line: 72, column: 5)
!9072 = !DILocation(line: 60, column: 24, scope: !9065)
!9073 = !DILocation(line: 62, column: 9, scope: !9065)
!9074 = distinct !DISubprogram(name: "maybe_is_aligned", linkageName: "_ZN4core9ub_checks16maybe_is_aligned17h9894fc37ada87e73E", scope: !9075, file: !473, line: 135, type: !9076, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9078)
!9075 = !DINamespace(name: "ub_checks", scope: !15)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!643, !6, !9}
!9078 = !{!9079, !9080}
!9079 = !DILocalVariable(name: "ptr", arg: 1, scope: !9074, file: !473, line: 135, type: !6)
!9080 = !DILocalVariable(name: "align", arg: 2, scope: !9074, file: !473, line: 135, type: !9)
!9081 = !DILocation(line: 135, column: 38, scope: !9074)
!9082 = !DILocation(line: 135, column: 54, scope: !9074)
!9083 = !DILocation(line: 2435, column: 9, scope: !9084)
!9084 = !DILexicalBlockFile(scope: !9074, file: !2231, discriminator: 0)
!9085 = !DILocation(line: 145, column: 2, scope: !9074)
!9086 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks16maybe_is_aligned7runtime17hb58490c59891d4c9E", scope: !9087, file: !2231, line: 2423, type: !9076, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9088)
!9087 = !DINamespace(name: "maybe_is_aligned", scope: !9075)
!9088 = !{!9089, !9090}
!9089 = !DILocalVariable(name: "ptr", arg: 1, scope: !9086, file: !2231, line: 2423, type: !6)
!9090 = !DILocalVariable(name: "align", arg: 2, scope: !9086, file: !2231, line: 2423, type: !9)
!9091 = !DILocation(line: 2423, column: 40, scope: !9086)
!9092 = !DILocation(line: 142, column: 17, scope: !9093)
!9093 = !DILexicalBlockFile(scope: !9086, file: !473, discriminator: 0)
!9094 = !DILocation(line: 2425, column: 10, scope: !9086)
!9095 = distinct !DISubprogram(name: "check_language_ub", linkageName: "_ZN4core9ub_checks17check_language_ub17hc8481ca93ebf6c15E", scope: !9075, file: !473, line: 96, type: !1357, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!9096 = !DILocation(line: 98, column: 5, scope: !9095)
!9097 = !DILocation(line: 2435, column: 9, scope: !9098)
!9098 = !DILexicalBlockFile(scope: !9095, file: !2231, discriminator: 0)
!9099 = !DILocation(line: 109, column: 2, scope: !9095)
!9100 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks17check_language_ub7runtime17h95447c125060130fE", scope: !9101, file: !2231, line: 2423, type: !1357, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!9101 = !DINamespace(name: "check_language_ub", scope: !9075)
!9102 = !DILocation(line: 2425, column: 10, scope: !9100)
!9103 = distinct !DISubprogram(name: "maybe_is_nonoverlapping", linkageName: "_ZN4core9ub_checks23maybe_is_nonoverlapping17h181d6ea8dbb6d1a3E", scope: !9075, file: !473, line: 160, type: !9104, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9106)
!9104 = !DISubroutineType(types: !9105)
!9105 = !{!643, !6, !6, !9, !9}
!9106 = !{!9107, !9108, !9109, !9110}
!9107 = !DILocalVariable(name: "src", arg: 1, scope: !9103, file: !473, line: 161, type: !6)
!9108 = !DILocalVariable(name: "dst", arg: 2, scope: !9103, file: !473, line: 162, type: !6)
!9109 = !DILocalVariable(name: "size", arg: 3, scope: !9103, file: !473, line: 163, type: !9)
!9110 = !DILocalVariable(name: "count", arg: 4, scope: !9103, file: !473, line: 164, type: !9)
!9111 = !DILocation(line: 161, column: 5, scope: !9103)
!9112 = !DILocation(line: 162, column: 5, scope: !9103)
!9113 = !DILocation(line: 163, column: 5, scope: !9103)
!9114 = !DILocation(line: 164, column: 5, scope: !9103)
!9115 = !DILocation(line: 2435, column: 27, scope: !9116)
!9116 = !DILexicalBlockFile(scope: !9103, file: !2231, discriminator: 0)
!9117 = !DILocation(line: 2435, column: 9, scope: !9116)
!9118 = !DILocation(line: 185, column: 2, scope: !9103)
!9119 = distinct !DISubprogram(name: "runtime", linkageName: "_ZN4core9ub_checks23maybe_is_nonoverlapping7runtime17h6bf1cd564fcdd605E", scope: !9120, file: !2231, line: 2423, type: !9104, scopeLine: 2423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9121)
!9120 = !DINamespace(name: "maybe_is_nonoverlapping", scope: !9075)
!9121 = !{!9122, !9123, !9124, !9125, !9126, !9128, !9130, !9132}
!9122 = !DILocalVariable(name: "src", arg: 1, scope: !9119, file: !2231, line: 2423, type: !6)
!9123 = !DILocalVariable(name: "dst", arg: 2, scope: !9119, file: !2231, line: 2423, type: !6)
!9124 = !DILocalVariable(name: "size", arg: 3, scope: !9119, file: !2231, line: 2423, type: !9)
!9125 = !DILocalVariable(name: "count", arg: 4, scope: !9119, file: !2231, line: 2423, type: !9)
!9126 = !DILocalVariable(name: "src_usize", scope: !9127, file: !473, line: 172, type: !9, align: 32)
!9127 = distinct !DILexicalBlock(scope: !9119, file: !473, line: 172, column: 13)
!9128 = !DILocalVariable(name: "dst_usize", scope: !9129, file: !473, line: 173, type: !9, align: 32)
!9129 = distinct !DILexicalBlock(scope: !9127, file: !473, line: 173, column: 13)
!9130 = !DILocalVariable(name: "size", scope: !9131, file: !473, line: 174, type: !9, align: 32)
!9131 = distinct !DILexicalBlock(scope: !9129, file: !473, line: 174, column: 13)
!9132 = !DILocalVariable(name: "diff", scope: !9133, file: !473, line: 179, type: !9, align: 32)
!9133 = distinct !DILexicalBlock(scope: !9131, file: !473, line: 179, column: 13)
!9134 = !DILocation(line: 2423, column: 40, scope: !9119)
!9135 = !DILocation(line: 153, column: 17, scope: !3804, inlinedAt: !9136)
!9136 = distinct !DILocation(line: 172, column: 33, scope: !9137)
!9137 = !DILexicalBlockFile(scope: !9119, file: !473, discriminator: 0)
!9138 = !DILocation(line: 48, column: 26, scope: !3811, inlinedAt: !9139)
!9139 = distinct !DILocation(line: 159, column: 38, scope: !3804, inlinedAt: !9136)
!9140 = !DILocation(line: 159, column: 18, scope: !3804, inlinedAt: !9136)
!9141 = !DILocation(line: 172, column: 33, scope: !9137)
!9142 = !DILocation(line: 172, column: 17, scope: !9127)
!9143 = !DILocation(line: 153, column: 17, scope: !3804, inlinedAt: !9144)
!9144 = distinct !DILocation(line: 173, column: 33, scope: !9127)
!9145 = !DILocation(line: 48, column: 26, scope: !3811, inlinedAt: !9146)
!9146 = distinct !DILocation(line: 159, column: 38, scope: !3804, inlinedAt: !9144)
!9147 = !DILocation(line: 159, column: 18, scope: !3804, inlinedAt: !9144)
!9148 = !DILocation(line: 173, column: 33, scope: !9127)
!9149 = !DILocation(line: 173, column: 17, scope: !9129)
!9150 = !DILocation(line: 174, column: 35, scope: !9129)
!9151 = !DILocation(line: 174, column: 30, scope: !9129)
!9152 = !DILocation(line: 174, column: 17, scope: !9129)
!9153 = !DILocation(line: 174, column: 22, scope: !9129)
!9154 = !DILocation(line: 174, column: 22, scope: !9131)
!9155 = !DILocation(line: 179, column: 34, scope: !9131)
!9156 = !DILocation(line: 179, column: 17, scope: !9133)
!9157 = !DILocation(line: 182, column: 13, scope: !9133)
!9158 = !DILocation(line: 2425, column: 10, scope: !9119)
!9159 = !DILocation(line: 175, column: 17, scope: !9129)
!9160 = !DILocation(line: 2423, column: 9, scope: !9119)
!9161 = distinct !DISubprogram(name: "is_valid_allocation_size", linkageName: "_ZN4core9ub_checks24is_valid_allocation_size17hf07e9f27c08ad4ddE", scope: !9075, file: !473, line: 148, type: !3025, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9162)
!9162 = !{!9163, !9164, !9165}
!9163 = !DILocalVariable(name: "size", arg: 1, scope: !9161, file: !473, line: 148, type: !9)
!9164 = !DILocalVariable(name: "len", arg: 2, scope: !9161, file: !473, line: 148, type: !9)
!9165 = !DILocalVariable(name: "max_len", scope: !9166, file: !473, line: 149, type: !9, align: 32)
!9166 = distinct !DILexicalBlock(scope: !9161, file: !473, line: 149, column: 5)
!9167 = !DILocation(line: 148, column: 46, scope: !9161)
!9168 = !DILocation(line: 148, column: 59, scope: !9161)
!9169 = !DILocation(line: 149, column: 9, scope: !9166)
!9170 = !DILocation(line: 149, column: 22, scope: !9161)
!9171 = !DILocation(line: 149, column: 34, scope: !9161)
!9172 = !DILocation(line: 149, column: 19, scope: !9161)
!9173 = !DILocation(line: 149, column: 54, scope: !9161)
!9174 = !DILocation(line: 150, column: 12, scope: !9166)
!9175 = !DILocation(line: 150, column: 5, scope: !9166)
!9176 = !DILocation(line: 151, column: 2, scope: !9161)
!9177 = distinct !DISubprogram(name: "maybe_is_aligned_and_not_null", linkageName: "_ZN4core9ub_checks29maybe_is_aligned_and_not_null17hd6d03060bfe2ce90E", scope: !9075, file: !473, line: 119, type: !9178, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9180)
!9178 = !DISubroutineType(types: !9179)
!9179 = !{!643, !6, !9, !643}
!9180 = !{!9181, !9182, !9183}
!9181 = !DILocalVariable(name: "ptr", arg: 1, scope: !9177, file: !473, line: 120, type: !6)
!9182 = !DILocalVariable(name: "align", arg: 2, scope: !9177, file: !473, line: 121, type: !9)
!9183 = !DILocalVariable(name: "is_zst", arg: 3, scope: !9177, file: !473, line: 122, type: !643)
!9184 = !DILocation(line: 120, column: 5, scope: !9177)
!9185 = !DILocation(line: 121, column: 5, scope: !9177)
!9186 = !DILocation(line: 122, column: 5, scope: !9177)
!9187 = !DILocation(line: 125, column: 5, scope: !9177)
!9188 = !DILocation(line: 125, column: 38, scope: !9177)
!9189 = !DILocation(line: 126, column: 2, scope: !9177)
!9190 = !DILocation(line: 125, column: 53, scope: !9177)
!9191 = !DILocation(line: 125, column: 48, scope: !9177)
!9192 = !DILocation(line: 125, column: 37, scope: !9177)
!9193 = distinct !DISubprogram(name: "fmt<usize, core::option::Option<usize>>", linkageName: "_ZN50_$LT$$LP$U$C$T$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h834ab37bfdc2f8e5E", scope: !9194, file: !2175, line: 2876, type: !2334, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9210, retainedNodes: !9195)
!9194 = !DINamespace(name: "{impl#99}", scope: !314)
!9195 = !{!9196, !9197, !9198, !9207, !9209}
!9196 = !DILocalVariable(name: "self", arg: 1, scope: !9193, file: !2175, line: 2876, type: !2325)
!9197 = !DILocalVariable(name: "f", arg: 2, scope: !9193, file: !2175, line: 2876, type: !351)
!9198 = !DILocalVariable(name: "builder", scope: !9199, file: !2175, line: 2877, type: !9200, align: 32)
!9199 = distinct !DILexicalBlock(scope: !9193, file: !2175, line: 2877, column: 21)
!9200 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugTuple", scope: !9201, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !9202, templateParams: !21, identifier: "ad08b5ab4b36950c6c0cdda615d9081a")
!9201 = !DINamespace(name: "builders", scope: !314)
!9202 = !{!9203, !9204, !9205, !9206}
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !9200, file: !2, baseType: !351, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !9200, file: !2, baseType: !334, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !9200, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPrivate)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "empty_name", scope: !9200, file: !2, baseType: !643, size: 8, align: 8, offset: 72, flags: DIFlagPrivate)
!9207 = !DILocalVariable(name: "U", scope: !9208, file: !2175, line: 2878, type: !93, align: 32)
!9208 = distinct !DILexicalBlock(scope: !9199, file: !2175, line: 2878, column: 21)
!9209 = !DILocalVariable(name: "T", scope: !9208, file: !2175, line: 2878, type: !102, align: 32)
!9210 = !{!8300, !9211}
!9211 = !DITemplateTypeParameter(name: "T", type: !103)
!9212 = !DILocation(line: 2876, column: 24, scope: !9193)
!9213 = !DILocation(line: 2876, column: 31, scope: !9193)
!9214 = !DILocation(line: 2877, column: 25, scope: !9199)
!9215 = !DILocation(line: 2878, column: 28, scope: !9208)
!9216 = !DILocation(line: 2877, column: 41, scope: !9193)
!9217 = !DILocation(line: 2878, column: 28, scope: !9199)
!9218 = !DILocation(line: 2880, column: 33, scope: !9208)
!9219 = !DILocation(line: 2883, column: 29, scope: !9208)
!9220 = !DILocation(line: 2884, column: 18, scope: !9193)
!9221 = distinct !DISubprogram(name: "into<alloc::collections::TryReserveErrorKind, alloc::collections::TryReserveError>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17h3b12669cba43f857E", scope: !9222, file: !1858, line: 777, type: !9223, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9227, retainedNodes: !9225)
!9222 = !DINamespace(name: "{impl#3}", scope: !970)
!9223 = !DISubroutineType(types: !9224)
!9224 = !{!1583, !1586, !1241}
!9225 = !{!9226}
!9226 = !DILocalVariable(name: "self", arg: 1, scope: !9221, file: !1858, line: 777, type: !1586)
!9227 = !{!9228, !9229}
!9228 = !DITemplateTypeParameter(name: "T", type: !1586)
!9229 = !DITemplateTypeParameter(name: "U", type: !1583)
!9230 = !DILocation(line: 777, column: 13, scope: !9221)
!9231 = !DILocation(line: 778, column: 9, scope: !9221)
!9232 = !DILocation(line: 779, column: 6, scope: !9221)
!9233 = distinct !DISubprogram(name: "into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17ha9f6daaa8dcf4fd2E", scope: !9222, file: !1858, line: 777, type: !9234, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9238, retainedNodes: !9236)
!9234 = !DISubroutineType(types: !9235)
!9235 = !{!407, !432, !1241}
!9236 = !{!9237}
!9237 = !DILocalVariable(name: "self", arg: 1, scope: !9233, file: !1858, line: 777, type: !432)
!9238 = !{!9239, !9240}
!9239 = !DITemplateTypeParameter(name: "T", type: !432)
!9240 = !DITemplateTypeParameter(name: "U", type: !407)
!9241 = !DILocation(line: 777, column: 13, scope: !9233)
!9242 = !DILocation(line: 778, column: 9, scope: !9233)
!9243 = !DILocation(line: 779, column: 6, scope: !9233)
!9244 = distinct !DISubprogram(name: "into<core::ptr::unique::Unique<u8>, core::ptr::non_null::NonNull<u8>>", linkageName: "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hb85bfb109eca2be5E", scope: !9222, file: !1858, line: 777, type: !9245, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9249, retainedNodes: !9247)
!9245 = !DISubroutineType(types: !9246)
!9246 = !{!197, !193, !1241}
!9247 = !{!9248}
!9248 = !DILocalVariable(name: "self", arg: 1, scope: !9244, file: !1858, line: 777, type: !193)
!9249 = !{!9250, !9251}
!9250 = !DITemplateTypeParameter(name: "T", type: !193)
!9251 = !DITemplateTypeParameter(name: "U", type: !197)
!9252 = !DILocation(line: 777, column: 13, scope: !9244)
!9253 = !DILocation(line: 778, column: 9, scope: !9244)
!9254 = !DILocation(line: 779, column: 6, scope: !9244)
!9255 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", linkageName: "_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h633143ec2d3d47baE", scope: !661, file: !9256, line: 49, type: !5614, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9259, retainedNodes: !9257)
!9256 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/accum.rs", directory: "", checksumkind: CSK_MD5, checksum: "29c702feed2d279674f04740ce9fc327")
!9257 = !{!9258}
!9258 = !DILocalVariable(name: "iter", arg: 1, scope: !9255, file: !9256, line: 49, type: !633)
!9259 = !{!9260}
!9260 = !DITemplateTypeParameter(name: "I", type: !633)
!9261 = !DILocation(line: 49, column: 44, scope: !9255)
!9262 = !DILocation(line: 50, column: 22, scope: !9255)
!9263 = !DILocation(line: 55, column: 14, scope: !9255)
!9264 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", linkageName: "_ZN53_$LT$u8$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17h76494bbec28dd2d5E", scope: !660, file: !9256, line: 53, type: !9265, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9259, retainedNodes: !9268)
!9265 = !DISubroutineType(types: !9266)
!9266 = !{!24, !9267, !24, !24}
!9267 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>", baseType: !659, size: 32, align: 32, dwarfAddressSpace: 0)
!9268 = !{!9269, !9270, !9271}
!9269 = !DILocalVariable(name: "a", arg: 2, scope: !9264, file: !9256, line: 53, type: !24)
!9270 = !DILocalVariable(name: "b", arg: 3, scope: !9264, file: !9256, line: 53, type: !24)
!9271 = !DILocalVariable(arg: 1, scope: !9264, file: !9256, line: 53, type: !9267)
!9272 = !DILocation(line: 53, column: 21, scope: !9264)
!9273 = !DILocation(line: 53, column: 22, scope: !9264)
!9274 = !DILocation(line: 53, column: 25, scope: !9264)
!9275 = !DILocation(line: 53, column: 28, scope: !9264)
!9276 = !DILocation(line: 53, column: 33, scope: !9264)
!9277 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hd4160544094e76aeE", scope: !9279, file: !9278, line: 976, type: !9281, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9319)
!9278 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/str/pattern.rs", directory: "", checksumkind: CSK_MD5, checksum: "a6e38dd27356b29bea094a12de70a44b")
!9279 = !DINamespace(name: "{impl#31}", scope: !9280)
!9280 = !DINamespace(name: "pattern", scope: !262)
!9281 = !DISubroutineType(types: !9282)
!9282 = !{!9283, !124, !124}
!9283 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcher", scope: !9280, file: !2, size: 512, align: 64, flags: DIFlagPublic, elements: !9284, templateParams: !21, identifier: "dda102b44addf191a186de4765f7a94b")
!9284 = !{!9285, !9286, !9287}
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "haystack", scope: !9283, file: !2, baseType: !124, size: 64, align: 32, offset: 384, flags: DIFlagPrivate)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "needle", scope: !9283, file: !2, baseType: !124, size: 64, align: 32, offset: 448, flags: DIFlagPrivate)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "searcher", scope: !9283, file: !2, baseType: !9288, size: 384, align: 64, flags: DIFlagPrivate)
!9288 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrSearcherImpl", scope: !9280, file: !2, size: 384, align: 64, flags: DIFlagPrivate, elements: !9289, templateParams: !21, identifier: "37b6cbe6492adce69a7105c4284a86c1")
!9289 = !{!9290}
!9290 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9288, file: !2, size: 384, align: 64, elements: !9291, templateParams: !21, identifier: "71e5b85b3edc7a83b3e29c2ff4073d2e", discriminator: !9318)
!9291 = !{!9292, !9303}
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "Empty", scope: !9290, file: !2, baseType: !9293, size: 384, align: 64, extraData: i32 0)
!9293 = !DICompositeType(tag: DW_TAG_structure_type, name: "Empty", scope: !9288, file: !2, size: 384, align: 64, flags: DIFlagPrivate, elements: !9294, templateParams: !21, identifier: "9743e2c2de42a6a6e3bcc1477536a335")
!9294 = !{!9295}
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9293, file: !2, baseType: !9296, size: 96, align: 32, offset: 32, flags: DIFlagPrivate)
!9296 = !DICompositeType(tag: DW_TAG_structure_type, name: "EmptyNeedle", scope: !9280, file: !2, size: 96, align: 32, flags: DIFlagPrivate, elements: !9297, templateParams: !21, identifier: "f8cb550a303123ed2ddcd5b0beaf3595")
!9297 = !{!9298, !9299, !9300, !9301, !9302}
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !9296, file: !2, baseType: !9, size: 32, align: 32, flags: DIFlagPrivate)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !9296, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_fw", scope: !9296, file: !2, baseType: !643, size: 8, align: 8, offset: 64, flags: DIFlagPrivate)
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "is_match_bw", scope: !9296, file: !2, baseType: !643, size: 8, align: 8, offset: 72, flags: DIFlagPrivate)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "is_finished", scope: !9296, file: !2, baseType: !643, size: 8, align: 8, offset: 80, flags: DIFlagPrivate)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "TwoWay", scope: !9290, file: !2, baseType: !9304, size: 384, align: 64, extraData: i32 1)
!9304 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWay", scope: !9288, file: !2, size: 384, align: 64, flags: DIFlagPrivate, elements: !9305, templateParams: !21, identifier: "c49ed6a8d46afa1d9e8eb62950a5a92a")
!9305 = !{!9306}
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9304, file: !2, baseType: !9307, size: 320, align: 64, offset: 64, flags: DIFlagPrivate)
!9307 = !DICompositeType(tag: DW_TAG_structure_type, name: "TwoWaySearcher", scope: !9280, file: !2, size: 320, align: 64, flags: DIFlagPrivate, elements: !9308, templateParams: !21, identifier: "e1302328977871ab5364dbe2d05cb038")
!9308 = !{!9309, !9310, !9311, !9312, !9314, !9315, !9316, !9317}
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos", scope: !9307, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "crit_pos_back", scope: !9307, file: !2, baseType: !9, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !9307, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "byteset", scope: !9307, file: !2, baseType: !9313, size: 64, align: 64, flags: DIFlagPrivate)
!9313 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !9307, file: !2, baseType: !9, size: 32, align: 32, offset: 160, flags: DIFlagPrivate)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !9307, file: !2, baseType: !9, size: 32, align: 32, offset: 192, flags: DIFlagPrivate)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !9307, file: !2, baseType: !9, size: 32, align: 32, offset: 224, flags: DIFlagPrivate)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "memory_back", scope: !9307, file: !2, baseType: !9, size: 32, align: 32, offset: 256, flags: DIFlagPrivate)
!9318 = !DIDerivedType(tag: DW_TAG_member, scope: !9288, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!9319 = !{!9320, !9321}
!9320 = !DILocalVariable(name: "self", arg: 1, scope: !9277, file: !9278, line: 976, type: !124)
!9321 = !DILocalVariable(name: "haystack", arg: 2, scope: !9277, file: !9278, line: 976, type: !124)
!9322 = !DILocation(line: 976, column: 22, scope: !9277)
!9323 = !DILocation(line: 976, column: 28, scope: !9277)
!9324 = !DILocation(line: 977, column: 9, scope: !9277)
!9325 = !DILocation(line: 978, column: 6, scope: !9277)
!9326 = distinct !DISubprogram(name: "sum<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", linkageName: "_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum17h00e688882549e0c6E", scope: !614, file: !9256, line: 49, type: !5603, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9329, retainedNodes: !9327)
!9327 = !{!9328}
!9328 = !DILocalVariable(name: "iter", arg: 1, scope: !9326, file: !9256, line: 49, type: !587)
!9329 = !{!9330}
!9330 = !DITemplateTypeParameter(name: "I", type: !587)
!9331 = !DILocation(line: 49, column: 44, scope: !9326)
!9332 = !DILocation(line: 50, column: 22, scope: !9326)
!9333 = !DILocation(line: 55, column: 14, scope: !9326)
!9334 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", linkageName: "_ZN56_$LT$usize$u20$as$u20$core..iter..traits..accum..Sum$GT$3sum28_$u7b$$u7b$closure$u7d$$u7d$17hf3d98d5c7cb8263eE", scope: !613, file: !9256, line: 53, type: !9335, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9329, retainedNodes: !9338)
!9335 = !DISubroutineType(types: !9336)
!9336 = !{!9, !9337, !9, !9}
!9337 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>", baseType: !612, size: 32, align: 32, dwarfAddressSpace: 0)
!9338 = !{!9339, !9340, !9341}
!9339 = !DILocalVariable(name: "a", arg: 2, scope: !9334, file: !9256, line: 53, type: !9)
!9340 = !DILocalVariable(name: "b", arg: 3, scope: !9334, file: !9256, line: 53, type: !9)
!9341 = !DILocalVariable(arg: 1, scope: !9334, file: !9256, line: 53, type: !9337)
!9342 = !DILocation(line: 53, column: 21, scope: !9334)
!9343 = !DILocation(line: 53, column: 22, scope: !9334)
!9344 = !DILocation(line: 53, column: 25, scope: !9334)
!9345 = !DILocation(line: 53, column: 28, scope: !9334)
!9346 = !DILocation(line: 53, column: 33, scope: !9334)
!9347 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN57_$LT$alloc..string..Drain$u20$as$u20$core..fmt..Debug$GT$3fmt17h46d880b4ac377b22E", scope: !9349, file: !9348, line: 3388, type: !9350, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9359)
!9348 = !DIFile(filename: "src/string.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "83c2249afea7114e907a9aedb4530919")
!9349 = !DINamespace(name: "{impl#63}", scope: !179)
!9350 = !DISubroutineType(types: !9351)
!9351 = !{!334, !9352, !351}
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::Drain", baseType: !9353, size: 32, align: 32, dwarfAddressSpace: 0)
!9353 = !DICompositeType(tag: DW_TAG_structure_type, name: "Drain", scope: !179, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !9354, templateParams: !21, identifier: "7a6e7869874d951ac7114dee689ec0ce")
!9354 = !{!9355, !9356, !9357, !9358}
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !9353, file: !2, baseType: !3355, size: 32, align: 32, offset: 64, flags: DIFlagPrivate)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9353, file: !2, baseType: !9, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !9353, file: !2, baseType: !9, size: 32, align: 32, offset: 128, flags: DIFlagPrivate)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !9353, file: !2, baseType: !1401, size: 64, align: 32, flags: DIFlagPrivate)
!9359 = !{!9360, !9361}
!9360 = !DILocalVariable(name: "self", arg: 1, scope: !9347, file: !9348, line: 3388, type: !9352)
!9361 = !DILocalVariable(name: "f", arg: 2, scope: !9347, file: !9348, line: 3388, type: !351)
!9362 = !DILocation(line: 3388, column: 12, scope: !9347)
!9363 = !DILocation(line: 3388, column: 19, scope: !9347)
!9364 = !DILocation(line: 3389, column: 11, scope: !9347)
!9365 = !DILocation(line: 3389, column: 44, scope: !9347)
!9366 = !DILocation(line: 3389, column: 32, scope: !9347)
!9367 = !DILocation(line: 3389, column: 54, scope: !9347)
!9368 = !DILocation(line: 3390, column: 6, scope: !9347)
!9369 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Debug$GT$3fmt17h68e51c38356b61cbE", scope: !9370, file: !9348, line: 2611, type: !9371, scopeLine: 2611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9374)
!9370 = !DINamespace(name: "{impl#24}", scope: !179)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!334, !9373, !351}
!9373 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::String", baseType: !178, size: 32, align: 32, dwarfAddressSpace: 0)
!9374 = !{!9375, !9376}
!9375 = !DILocalVariable(name: "self", arg: 1, scope: !9369, file: !9348, line: 2611, type: !9373)
!9376 = !DILocalVariable(name: "f", arg: 2, scope: !9369, file: !9348, line: 2611, type: !351)
!9377 = !DILocation(line: 2611, column: 12, scope: !9369)
!9378 = !DILocation(line: 2611, column: 19, scope: !9369)
!9379 = !DILocation(line: 2612, column: 26, scope: !9369)
!9380 = !DILocation(line: 2612, column: 9, scope: !9369)
!9381 = !DILocation(line: 2613, column: 6, scope: !9369)
!9382 = distinct !DISubprogram(name: "write_char", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17hd9bae8fdfa467958E", scope: !9383, file: !9348, line: 3234, type: !9384, scopeLine: 3234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9386)
!9383 = !DINamespace(name: "{impl#57}", scope: !179)
!9384 = !DISubroutineType(types: !9385)
!9385 = !{!334, !567, !574}
!9386 = !{!9387, !9388}
!9387 = !DILocalVariable(name: "self", arg: 1, scope: !9382, file: !9348, line: 3234, type: !567)
!9388 = !DILocalVariable(name: "c", arg: 2, scope: !9382, file: !9348, line: 3234, type: !574)
!9389 = !DILocation(line: 3234, column: 19, scope: !9382)
!9390 = !DILocation(line: 3234, column: 30, scope: !9382)
!9391 = !DILocation(line: 3235, column: 14, scope: !9382)
!9392 = !DILocation(line: 3237, column: 6, scope: !9382)
!9393 = distinct !DISubprogram(name: "write_str", linkageName: "_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17he33dda6c037d345bE", scope: !9383, file: !9348, line: 3228, type: !9394, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9396)
!9394 = !DISubroutineType(types: !9395)
!9395 = !{!334, !567, !124}
!9396 = !{!9397, !9398}
!9397 = !DILocalVariable(name: "self", arg: 1, scope: !9393, file: !9348, line: 3228, type: !567)
!9398 = !DILocalVariable(name: "s", arg: 2, scope: !9393, file: !9348, line: 3228, type: !124)
!9399 = !DILocation(line: 3228, column: 18, scope: !9393)
!9400 = !DILocation(line: 3228, column: 29, scope: !9393)
!9401 = !DILocation(line: 3229, column: 14, scope: !9393)
!9402 = !DILocation(line: 3231, column: 6, scope: !9393)
!9403 = distinct !DISubprogram(name: "clone", linkageName: "_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17hd00f5b8f953c5378E", scope: !9404, file: !294, line: 49, type: !9405, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9408)
!9404 = !DINamespace(name: "{impl#3}", scope: !213)
!9405 = !DISubroutineType(types: !9406)
!9406 = !{null, !9407}
!9407 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::alloc::Global", baseType: !212, size: 32, align: 32, dwarfAddressSpace: 0)
!9408 = !{!9409}
!9409 = !DILocalVariable(name: "self", arg: 1, scope: !9403, file: !294, line: 49, type: !9407)
!9410 = !DILocation(line: 49, column: 16, scope: !9403)
!9411 = !DILocation(line: 49, column: 21, scope: !9403)
!9412 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN59_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..fmt..Display$GT$3fmt17h6dccffb25b3aeae7E", scope: !9414, file: !9413, line: 82, type: !9416, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9423)
!9413 = !DIFile(filename: "src/wtf8/mod.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "02acb82ad51c63e575fff75d13505c45")
!9414 = !DINamespace(name: "{impl#3}", scope: !9415)
!9415 = !DINamespace(name: "wtf8", scope: !132)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{!334, !9418, !351}
!9418 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::wtf8::Wtf8Buf", baseType: !9419, size: 32, align: 32, dwarfAddressSpace: 0)
!9419 = !DICompositeType(tag: DW_TAG_structure_type, name: "Wtf8Buf", scope: !9415, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !9420, templateParams: !21, identifier: "6499c0d0f6e2a85cddab6b19ee1323b8")
!9420 = !{!9421, !9422}
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9419, file: !2, baseType: !182, size: 96, align: 32, flags: DIFlagPrivate)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "is_known_utf8", scope: !9419, file: !2, baseType: !643, size: 8, align: 8, offset: 96, flags: DIFlagPrivate)
!9423 = !{!9424, !9425, !9426}
!9424 = !DILocalVariable(name: "self", arg: 1, scope: !9412, file: !9413, line: 82, type: !9418)
!9425 = !DILocalVariable(name: "formatter", arg: 2, scope: !9412, file: !9413, line: 82, type: !351)
!9426 = !DILocalVariable(name: "s", scope: !9427, file: !9413, line: 83, type: !124, align: 32)
!9427 = distinct !DILexicalBlock(scope: !9412, file: !9413, line: 83, column: 47)
!9428 = !DILocation(line: 82, column: 12, scope: !9412)
!9429 = !DILocation(line: 82, column: 19, scope: !9412)
!9430 = !DILocation(line: 83, column: 31, scope: !9427)
!9431 = !DILocation(line: 83, column: 26, scope: !9427)
!9432 = !DILocation(line: 83, column: 16, scope: !9427)
!9433 = !DILocation(line: 83, column: 21, scope: !9427)
!9434 = !DILocation(line: 84, column: 13, scope: !9427)
!9435 = !DILocation(line: 86, column: 32, scope: !9412)
!9436 = !DILocation(line: 86, column: 13, scope: !9412)
!9437 = !DILocation(line: 88, column: 6, scope: !9412)
!9438 = !DILocation(line: 82, column: 5, scope: !9412)
!9439 = distinct !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h3365508834357dd0E", scope: !1583, file: !1579, line: 87, type: !9440, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !9443, retainedNodes: !9444)
!9440 = !DISubroutineType(types: !9441)
!9441 = !{!1586, !9442}
!9442 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveError", baseType: !1583, size: 32, align: 32, dwarfAddressSpace: 0)
!9443 = !DISubprogram(name: "kind", linkageName: "_ZN5alloc11collections15TryReserveError4kind17h3365508834357dd0E", scope: !1583, file: !1579, line: 87, type: !9440, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!9444 = !{!9445}
!9445 = !DILocalVariable(name: "self", arg: 1, scope: !9439, file: !1579, line: 87, type: !9442)
!9446 = !DILocation(line: 87, column: 17, scope: !9439)
!9447 = !DILocation(line: 88, column: 19, scope: !9439)
!9448 = !DILocation(line: 89, column: 6, scope: !9439)
!9449 = distinct !DISubprogram(name: "splitpoint", linkageName: "_ZN5alloc11collections5btree4node10splitpoint17h59bb27f72dcf72afE", scope: !9451, file: !9450, line: 920, type: !9452, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9471)
!9450 = !DIFile(filename: "src/collections/btree/node.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "2c7ff6689df230256c71b9afe347434c")
!9451 = !DINamespace(name: "node", scope: !1355)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{!9454, !9}
!9454 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, alloc::collections::btree::node::LeftOrRight<usize>)", file: !2, size: 96, align: 32, elements: !9455, templateParams: !21, identifier: "81feffab49152462b4842b8a4e2e584e")
!9455 = !{!9456, !9457}
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9454, file: !2, baseType: !9, size: 32, align: 32)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !9454, file: !2, baseType: !9458, size: 64, align: 32, offset: 32)
!9458 = !DICompositeType(tag: DW_TAG_structure_type, name: "LeftOrRight<usize>", scope: !9451, file: !2, size: 64, align: 32, flags: DIFlagProtected, elements: !9459, templateParams: !21, identifier: "be571303c2ab14bbb0c526b2fc15d60a")
!9459 = !{!9460}
!9460 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9458, file: !2, size: 64, align: 32, elements: !9461, templateParams: !21, identifier: "26416325ee4800c518bce7ae4a739386", discriminator: !9470)
!9461 = !{!9462, !9466}
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "Left", scope: !9460, file: !2, baseType: !9463, size: 64, align: 32, extraData: i32 0)
!9463 = !DICompositeType(tag: DW_TAG_structure_type, name: "Left", scope: !9458, file: !2, size: 64, align: 32, flags: DIFlagProtected, elements: !9464, templateParams: !109, identifier: "31a396f54349c00765feb4d236cc8b78")
!9464 = !{!9465}
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9463, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagProtected)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "Right", scope: !9460, file: !2, baseType: !9467, size: 64, align: 32, extraData: i32 1)
!9467 = !DICompositeType(tag: DW_TAG_structure_type, name: "Right", scope: !9458, file: !2, size: 64, align: 32, flags: DIFlagProtected, elements: !9468, templateParams: !109, identifier: "2265a15ff99198f9f5bb2e12a25935b7")
!9468 = !{!9469}
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9467, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagProtected)
!9470 = !DIDerivedType(tag: DW_TAG_member, scope: !9458, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!9471 = !{!9472}
!9472 = !DILocalVariable(name: "edge_idx", arg: 1, scope: !9449, file: !9450, line: 920, type: !9)
!9473 = !DILocation(line: 920, column: 15, scope: !9449)
!9474 = !DILocation(line: 921, column: 19, scope: !9449)
!9475 = !DILocation(line: 921, column: 5, scope: !9449)
!9476 = !DILocation(line: 924, column: 9, scope: !9449)
!9477 = !DILocation(line: 923, column: 5, scope: !9449)
!9478 = !DILocation(line: 924, column: 39, scope: !9449)
!9479 = !DILocation(line: 924, column: 86, scope: !9449)
!9480 = !DILocation(line: 927, column: 53, scope: !9449)
!9481 = !DILocation(line: 925, column: 36, scope: !9449)
!9482 = !DILocation(line: 925, column: 79, scope: !9449)
!9483 = !DILocation(line: 926, column: 37, scope: !9449)
!9484 = !DILocation(line: 926, column: 74, scope: !9449)
!9485 = !DILocation(line: 929, column: 2, scope: !9449)
!9486 = !DILocation(line: 927, column: 14, scope: !9449)
!9487 = !DILocation(line: 927, column: 88, scope: !9449)
!9488 = distinct !DISubprogram(name: "from_inner<[u8]>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$10from_inner17h44aeff79326fb47fE", scope: !9490, file: !9489, line: 349, type: !9496, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !9498, retainedNodes: !9499)
!9489 = !DIFile(filename: "src/rc.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "bc163529924b16bb548238cc703b51ed")
!9490 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rc<[u8], alloc::alloc::Global>", scope: !2049, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !9491, templateParams: !217, identifier: "47296b2123a2246b8727f79019cdce38")
!9491 = !{!9492, !9493, !9495}
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9490, file: !2, baseType: !3974, size: 64, align: 32, flags: DIFlagPrivate)
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !9490, file: !2, baseType: !9494, align: 8, offset: 64, flags: DIFlagPrivate)
!9494 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::rc::RcInner<[u8]>>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !2599, identifier: "c035cad10da352971693167d5b55067f")
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !9490, file: !2, baseType: !212, align: 8, offset: 64, flags: DIFlagPrivate)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{!9490, !3974}
!9498 = !DISubprogram(name: "from_inner<[u8]>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$10from_inner17h44aeff79326fb47fE", scope: !9490, file: !9489, line: 349, type: !9496, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!9499 = !{!9500}
!9500 = !DILocalVariable(name: "ptr", arg: 1, scope: !9488, file: !9489, line: 349, type: !3974)
!9501 = !DILocation(line: 349, column: 26, scope: !9488)
!9502 = !DILocation(line: 350, column: 18, scope: !9488)
!9503 = !DILocation(line: 351, column: 6, scope: !9488)
!9504 = distinct !DISubprogram(name: "allocate_for_layout<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$19allocate_for_layout17h69293dd76dae0c10E", scope: !9490, file: !9489, line: 2044, type: !9505, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9514, declaration: !9513, retainedNodes: !9517)
!9505 = !DISubroutineType(types: !9506)
!9506 = !{!2044, !39, !9507, !9510}
!9507 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !9508, file: !2, align: 8, elements: !21, identifier: "7629e4e9c576c98fb6160efc931eabf3")
!9508 = !DINamespace(name: "allocate_for_slice", scope: !9509)
!9509 = !DINamespace(name: "{impl#22}", scope: !2049)
!9510 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<u8>", scope: !9508, file: !2, size: 32, align: 32, elements: !9511, templateParams: !21, identifier: "f1fa3281ec7dce5cb9ec8700f616d95a")
!9511 = !{!9512}
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !9510, file: !2, baseType: !93, size: 32, align: 32)
!9513 = !DISubprogram(name: "allocate_for_layout<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$19allocate_for_layout17h69293dd76dae0c10E", scope: !9490, file: !9489, line: 2044, type: !9505, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9514)
!9514 = !{!23, !9515, !9516}
!9515 = !DITemplateTypeParameter(name: "impl FnOnce(Layout) -> Result<NonNull<[u8]>, AllocError>", type: !9507)
!9516 = !DITemplateTypeParameter(name: "impl FnOnce(*mut u8) -> *mut RcInner<T>", type: !9510)
!9517 = !{!9518, !9519, !9520, !9521}
!9518 = !DILocalVariable(name: "value_layout", arg: 1, scope: !9504, file: !9489, line: 2045, type: !39)
!9519 = !DILocalVariable(name: "allocate", arg: 2, scope: !9504, file: !9489, line: 2046, type: !9507)
!9520 = !DILocalVariable(name: "mem_to_rc_inner", arg: 3, scope: !9504, file: !9489, line: 2047, type: !9510)
!9521 = !DILocalVariable(name: "layout", scope: !9522, file: !9489, line: 2049, type: !39, align: 32)
!9522 = distinct !DILexicalBlock(scope: !9504, file: !9489, line: 2049, column: 9)
!9523 = !DILocation(line: 2045, column: 9, scope: !9504)
!9524 = !DILocation(line: 2046, column: 9, scope: !9504)
!9525 = !DILocation(line: 2047, column: 9, scope: !9504)
!9526 = !DILocation(line: 2049, column: 13, scope: !9522)
!9527 = !DILocation(line: 2049, column: 22, scope: !9504)
!9528 = !DILocation(line: 2051, column: 13, scope: !9522)
!9529 = !DILocation(line: 2052, column: 18, scope: !9522)
!9530 = !DILocation(line: 2054, column: 6, scope: !9504)
!9531 = distinct !DISubprogram(name: "{closure#0}<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$19allocate_for_layout28_$u7b$$u7b$closure$u7d$$u7d$17h84bc834276d50e30E", scope: !8449, file: !9489, line: 2052, type: !9532, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9514, retainedNodes: !9534)
!9532 = !DISubroutineType(types: !9533)
!9533 = !{!2044, !8448, !1969}
!9534 = !{!9535, !9536}
!9535 = !DILocalVariable(name: "layout", scope: !9531, file: !9489, line: 2049, type: !39, align: 32)
!9536 = !DILocalVariable(arg: 2, scope: !9531, file: !9489, line: 2052, type: !1969)
!9537 = !DILocation(line: 2049, column: 13, scope: !9531)
!9538 = !DILocation(line: 2052, column: 34, scope: !9531)
!9539 = !DILocation(line: 2052, column: 56, scope: !9531)
!9540 = !DILocation(line: 2052, column: 37, scope: !9531)
!9541 = distinct !DISubprogram(name: "try_allocate_for_layout<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$23try_allocate_for_layout17ha2d81cb34e01b8adE", scope: !9490, file: !9489, line: 2063, type: !9542, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9514, declaration: !9544, retainedNodes: !9545)
!9542 = !DISubroutineType(types: !9543)
!9543 = !{!2036, !39, !9507, !9510}
!9544 = !DISubprogram(name: "try_allocate_for_layout<[u8], alloc::rc::{impl#22}::allocate_for_slice::{closure_env#0}<u8>, alloc::rc::{impl#22}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$23try_allocate_for_layout17ha2d81cb34e01b8adE", scope: !9490, file: !9489, line: 2063, type: !9542, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9514)
!9545 = !{!9546, !9547, !9548, !9549, !9551, !9553, !9555, !9557, !9559, !9562, !9563}
!9546 = !DILocalVariable(name: "value_layout", arg: 1, scope: !9541, file: !9489, line: 2064, type: !39)
!9547 = !DILocalVariable(name: "allocate", arg: 2, scope: !9541, file: !9489, line: 2065, type: !9507)
!9548 = !DILocalVariable(name: "mem_to_rc_inner", arg: 3, scope: !9541, file: !9489, line: 2066, type: !9510)
!9549 = !DILocalVariable(name: "layout", scope: !9550, file: !9489, line: 2068, type: !39, align: 32)
!9550 = distinct !DILexicalBlock(scope: !9541, file: !9489, line: 2068, column: 9)
!9551 = !DILocalVariable(name: "ptr", scope: !9552, file: !9489, line: 2071, type: !1932, align: 32)
!9552 = distinct !DILexicalBlock(scope: !9550, file: !9489, line: 2071, column: 9)
!9553 = !DILocalVariable(name: "residual", scope: !9554, file: !9489, line: 2071, type: !1975, align: 8)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !9489, line: 2071, column: 35)
!9555 = !DILocalVariable(name: "val", scope: !9556, file: !9489, line: 2071, type: !1932, align: 32)
!9556 = distinct !DILexicalBlock(scope: !9550, file: !9489, line: 2071, column: 19)
!9557 = !DILocalVariable(name: "inner", scope: !9558, file: !9489, line: 2074, type: !2044, align: 32)
!9558 = distinct !DILexicalBlock(scope: !9552, file: !9489, line: 2074, column: 9)
!9559 = !DILocalVariable(name: "left_val", scope: !9560, file: !9489, line: 2076, type: !38, align: 32)
!9560 = !DILexicalBlockFile(scope: !9561, file: !9489, discriminator: 0)
!9561 = distinct !DILexicalBlock(scope: !9558, file: !2304, line: 45, column: 13)
!9562 = !DILocalVariable(name: "right_val", scope: !9560, file: !9489, line: 2076, type: !38, align: 32)
!9563 = !DILocalVariable(name: "kind", scope: !9564, file: !9489, line: 2076, type: !280, align: 8)
!9564 = !DILexicalBlockFile(scope: !9565, file: !9489, discriminator: 0)
!9565 = distinct !DILexicalBlock(scope: !9561, file: !2304, line: 47, column: 21)
!9566 = !DILocation(line: 2064, column: 9, scope: !9541)
!9567 = !DILocation(line: 2065, column: 9, scope: !9541)
!9568 = !DILocation(line: 2066, column: 9, scope: !9541)
!9569 = !DILocation(line: 2068, column: 13, scope: !9550)
!9570 = !DILocation(line: 2071, column: 35, scope: !9554)
!9571 = !DILocation(line: 2068, column: 22, scope: !9541)
!9572 = !DILocation(line: 2071, column: 19, scope: !9550)
!9573 = !DILocation(line: 2071, column: 19, scope: !9554)
!9574 = !DILocation(line: 2083, column: 5, scope: !9541)
!9575 = !DILocation(line: 2071, column: 13, scope: !9552)
!9576 = !DILocation(line: 2071, column: 19, scope: !9556)
!9577 = !DILocation(line: 2074, column: 41, scope: !9552)
!9578 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !9579)
!9579 = distinct !DILocation(line: 2074, column: 59, scope: !9552)
!9580 = !DILocation(line: 2074, column: 21, scope: !9552)
!9581 = !DILocation(line: 2074, column: 13, scope: !9558)
!9582 = !DILocation(line: 2076, column: 30, scope: !9558)
!9583 = !DILocation(line: 2076, column: 13, scope: !9558)
!9584 = !DILocation(line: 2076, column: 13, scope: !9560)
!9585 = !DILocation(line: 2076, column: 13, scope: !9564)
!9586 = !DILocation(line: 2078, column: 46, scope: !9558)
!9587 = !DILocalVariable(name: "self", arg: 1, scope: !9588, file: !1810, line: 1413, type: !3502)
!9588 = distinct !DISubprogram(name: "write<core::cell::Cell<usize>>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17hd19ec5122401cfa2E", scope: !1811, file: !1810, line: 1413, type: !3500, scopeLine: 1413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3506, retainedNodes: !9589)
!9589 = !{!9587, !9590}
!9590 = !DILocalVariable(name: "val", arg: 2, scope: !9588, file: !1810, line: 1413, type: !2052)
!9591 = !DILocation(line: 1413, column: 31, scope: !9588, inlinedAt: !9592)
!9592 = distinct !DILocation(line: 2078, column: 40, scope: !9558)
!9593 = !DILocation(line: 1413, column: 37, scope: !9588, inlinedAt: !9592)
!9594 = !DILocation(line: 1418, column: 18, scope: !9588, inlinedAt: !9592)
!9595 = !DILocation(line: 2079, column: 13, scope: !9558)
!9596 = !DILocation(line: 2079, column: 44, scope: !9558)
!9597 = !DILocation(line: 1413, column: 31, scope: !9588, inlinedAt: !9598)
!9598 = distinct !DILocation(line: 2079, column: 38, scope: !9558)
!9599 = !DILocation(line: 1413, column: 37, scope: !9588, inlinedAt: !9598)
!9600 = !DILocation(line: 1418, column: 18, scope: !9588, inlinedAt: !9598)
!9601 = !DILocation(line: 2082, column: 9, scope: !9558)
!9602 = !DILocation(line: 2083, column: 6, scope: !9541)
!9603 = distinct !DISubprogram(name: "from_ptr<[u8]>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$8from_ptr17h98c160283f4ee6ecE", scope: !9490, file: !9489, line: 354, type: !9604, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !9606, retainedNodes: !9607)
!9604 = !DISubroutineType(types: !9605)
!9605 = !{!9490, !2044}
!9606 = !DISubprogram(name: "from_ptr<[u8]>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$8from_ptr17h98c160283f4ee6ecE", scope: !9490, file: !9489, line: 354, type: !9604, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!9607 = !{!9608}
!9608 = !DILocalVariable(name: "ptr", arg: 1, scope: !9603, file: !9489, line: 354, type: !2044)
!9609 = !DILocation(line: 354, column: 24, scope: !9603)
!9610 = !DILocation(line: 355, column: 35, scope: !9603)
!9611 = !DILocation(line: 355, column: 18, scope: !9603)
!9612 = !DILocation(line: 356, column: 6, scope: !9603)
!9613 = distinct !DISubprogram(name: "from_raw<core::wtf8::Wtf8>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$8from_raw17h6f48e13b04b279bbE", scope: !9614, file: !9489, line: 1306, type: !9621, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2624, declaration: !9623, retainedNodes: !9624)
!9614 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rc<core::wtf8::Wtf8, alloc::alloc::Global>", scope: !2049, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !9615, templateParams: !9620, identifier: "24dbb176c0bcd536b8e330eddde131f")
!9615 = !{!9616, !9617, !9619}
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9614, file: !2, baseType: !3999, size: 64, align: 32, flags: DIFlagPrivate)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !9614, file: !2, baseType: !9618, align: 8, offset: 64, flags: DIFlagPrivate)
!9618 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::rc::RcInner<core::wtf8::Wtf8>>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !4012, identifier: "967bde431995b0af144c905fe08c5fc6")
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !9614, file: !2, baseType: !212, align: 8, offset: 64, flags: DIFlagPrivate)
!9620 = !{!2625, !215}
!9621 = !DISubroutineType(types: !9622)
!9622 = !{!9614, !2613}
!9623 = !DISubprogram(name: "from_raw<core::wtf8::Wtf8>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$8from_raw17h6f48e13b04b279bbE", scope: !9614, file: !9489, line: 1306, type: !9621, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2624)
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "ptr", arg: 1, scope: !9613, file: !9489, line: 1306, type: !2613)
!9626 = !DILocation(line: 1306, column: 28, scope: !9613)
!9627 = !DILocation(line: 1307, column: 18, scope: !9613)
!9628 = !DILocation(line: 1308, column: 6, scope: !9613)
!9629 = distinct !DISubprogram(name: "into_raw<[u8]>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$8into_raw17h2ab08474558f018aE", scope: !9490, file: !9489, line: 1329, type: !9630, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !9632, retainedNodes: !9633)
!9630 = !DISubroutineType(types: !9631)
!9631 = !{!1230, !9490}
!9632 = !DISubprogram(name: "into_raw<[u8]>", linkageName: "_ZN5alloc2rc11Rc$LT$T$GT$8into_raw17h2ab08474558f018aE", scope: !9490, file: !9489, line: 1329, type: !9630, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!9633 = !{!9634, !9635}
!9634 = !DILocalVariable(name: "this", arg: 1, scope: !9629, file: !9489, line: 1329, type: !9490)
!9635 = !DILocalVariable(name: "this", scope: !9636, file: !9489, line: 1330, type: !9637, align: 32)
!9636 = distinct !DILexicalBlock(scope: !9629, file: !9489, line: 1330, column: 9)
!9637 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::rc::Rc<[u8], alloc::alloc::Global>>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !9638, templateParams: !9640, identifier: "f99bea1e47514a4725ebda26187476f5")
!9638 = !{!9639}
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9637, file: !2, baseType: !9490, size: 64, align: 32, flags: DIFlagPrivate)
!9640 = !{!9641}
!9641 = !DITemplateTypeParameter(name: "T", type: !9490)
!9642 = !DILocation(line: 1329, column: 21, scope: !9629)
!9643 = !DILocation(line: 1330, column: 13, scope: !9636)
!9644 = !DILocalVariable(name: "value", arg: 1, scope: !9645, file: !9646, line: 181, type: !9490)
!9645 = distinct !DISubprogram(name: "new<alloc::rc::Rc<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdba89a32ec45aa5fE", scope: !9637, file: !9646, line: 181, type: !9647, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9640, declaration: !9649, retainedNodes: !9650)
!9646 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/manually_drop.rs", directory: "", checksumkind: CSK_MD5, checksum: "cb93188e9fe8eda8268775a56e071ba3")
!9647 = !DISubroutineType(types: !9648)
!9648 = !{!9637, !9490}
!9649 = !DISubprogram(name: "new<alloc::rc::Rc<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdba89a32ec45aa5fE", scope: !9637, file: !9646, line: 181, type: !9647, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9640)
!9650 = !{!9644}
!9651 = !DILocation(line: 181, column: 22, scope: !9645, inlinedAt: !9652)
!9652 = distinct !DILocation(line: 1330, column: 20, scope: !9629)
!9653 = !DILocation(line: 183, column: 6, scope: !9645, inlinedAt: !9652)
!9654 = !DILocation(line: 1330, column: 20, scope: !9629)
!9655 = !DILocalVariable(name: "self", arg: 1, scope: !9656, file: !9646, line: 270, type: !9661)
!9656 = distinct !DISubprogram(name: "deref<alloc::rc::Rc<[u8], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h45a3fb6d82cef487E", scope: !9657, file: !9646, line: 270, type: !9658, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9640, retainedNodes: !9662)
!9657 = !DINamespace(name: "{impl#2}", scope: !865)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!9660, !9661}
!9660 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::rc::Rc<[u8], alloc::alloc::Global>", baseType: !9490, size: 32, align: 32, dwarfAddressSpace: 0)
!9661 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::rc::Rc<[u8], alloc::alloc::Global>>", baseType: !9637, size: 32, align: 32, dwarfAddressSpace: 0)
!9662 = !{!9655}
!9663 = !DILocation(line: 270, column: 14, scope: !9656, inlinedAt: !9664)
!9664 = distinct !DILocation(line: 1331, column: 23, scope: !9636)
!9665 = !DILocation(line: 1331, column: 9, scope: !9636)
!9666 = !DILocation(line: 1332, column: 6, scope: !9629)
!9667 = distinct !DISubprogram(name: "data_offset<core::wtf8::Wtf8>", linkageName: "_ZN5alloc2rc11data_offset17h217cf52f8b73d0ecE", scope: !2049, file: !9489, line: 3668, type: !2611, scopeLine: 3668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2624, retainedNodes: !9668)
!9668 = !{!9669}
!9669 = !DILocalVariable(name: "ptr", arg: 1, scope: !9667, file: !9489, line: 3668, type: !2613)
!9670 = !DILocation(line: 3668, column: 34, scope: !9667)
!9671 = !DILocation(line: 3675, column: 32, scope: !9667)
!9672 = !DILocation(line: 3675, column: 14, scope: !9667)
!9673 = !DILocation(line: 3676, column: 2, scope: !9667)
!9674 = distinct !DISubprogram(name: "from_ptr_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_ptr_in17hce7a5d9ba848ce7bE", scope: !9614, file: !9489, line: 379, type: !9675, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9620, declaration: !9677, retainedNodes: !9678)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!9614, !4016, !212}
!9677 = !DISubprogram(name: "from_ptr_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_ptr_in17hce7a5d9ba848ce7bE", scope: !9614, file: !9489, line: 379, type: !9675, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9620)
!9678 = !{!9679, !9680}
!9679 = !DILocalVariable(name: "ptr", arg: 1, scope: !9674, file: !9489, line: 379, type: !4016)
!9680 = !DILocalVariable(name: "alloc", arg: 2, scope: !9674, file: !9489, line: 379, type: !212)
!9681 = !DILocation(line: 379, column: 27, scope: !9674)
!9682 = !DILocation(line: 379, column: 49, scope: !9674)
!9683 = !DILocation(line: 380, column: 38, scope: !9674)
!9684 = !DILocation(line: 380, column: 18, scope: !9674)
!9685 = !DILocation(line: 381, column: 6, scope: !9674)
!9686 = distinct !DISubprogram(name: "from_raw_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_raw_in17h614bf3b00e90bd74E", scope: !9614, file: !9489, line: 1543, type: !9687, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9620, declaration: !9689, retainedNodes: !9690)
!9687 = !DISubroutineType(types: !9688)
!9688 = !{!9614, !2613, !212}
!9689 = !DISubprogram(name: "from_raw_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$11from_raw_in17h614bf3b00e90bd74E", scope: !9614, file: !9489, line: 1543, type: !9687, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9620)
!9690 = !{!9691, !9692, !9693, !9695}
!9691 = !DILocalVariable(name: "ptr", arg: 1, scope: !9686, file: !9489, line: 1543, type: !2613)
!9692 = !DILocalVariable(name: "alloc", arg: 2, scope: !9686, file: !9489, line: 1543, type: !212)
!9693 = !DILocalVariable(name: "offset", scope: !9694, file: !9489, line: 1544, type: !9, align: 32)
!9694 = distinct !DILexicalBlock(scope: !9686, file: !9489, line: 1544, column: 9)
!9695 = !DILocalVariable(name: "rc_ptr", scope: !9696, file: !9489, line: 1547, type: !4016, align: 32)
!9696 = distinct !DILexicalBlock(scope: !9694, file: !9489, line: 1547, column: 9)
!9697 = !DILocation(line: 1543, column: 31, scope: !9686)
!9698 = !DILocation(line: 1543, column: 46, scope: !9686)
!9699 = !DILocation(line: 1544, column: 31, scope: !9686)
!9700 = !DILocation(line: 1544, column: 13, scope: !9694)
!9701 = !DILocalVariable(name: "self", arg: 1, scope: !9702, file: !1791, line: 993, type: !2613)
!9702 = distinct !DISubprogram(name: "byte_sub<core::wtf8::Wtf8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$8byte_sub17hf465fe39072e60a6E", scope: !1792, file: !1791, line: 993, type: !9703, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2624, retainedNodes: !9705)
!9703 = !DISubroutineType(types: !9704)
!9704 = !{!2613, !2613, !9, !1241}
!9705 = !{!9701, !9706}
!9706 = !DILocalVariable(name: "count", arg: 2, scope: !9702, file: !1791, line: 993, type: !9)
!9707 = !DILocation(line: 993, column: 34, scope: !9702, inlinedAt: !9708)
!9708 = distinct !DILocation(line: 1547, column: 35, scope: !9694)
!9709 = !DILocation(line: 993, column: 40, scope: !9702, inlinedAt: !9708)
!9710 = !DILocalVariable(name: "self", arg: 1, scope: !9711, file: !1791, line: 48, type: !2613)
!9711 = distinct !DISubprogram(name: "cast<core::wtf8::Wtf8, u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17h5e70f6090f1ebf32E", scope: !1792, file: !1791, line: 48, type: !9712, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9715, retainedNodes: !9714)
!9712 = !DISubroutineType(types: !9713)
!9713 = !{!201, !2613}
!9714 = !{!9710}
!9715 = !{!2625, !3668}
!9716 = !DILocation(line: 48, column: 26, scope: !9711, inlinedAt: !9717)
!9717 = distinct !DILocation(line: 995, column: 23, scope: !9702, inlinedAt: !9708)
!9718 = !DILocalVariable(name: "self", arg: 1, scope: !9719, file: !1791, line: 935, type: !201)
!9719 = distinct !DISubprogram(name: "sub<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3sub17h081a45f5fd846793E", scope: !1792, file: !1791, line: 935, type: !1794, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !9720)
!9720 = !{!9718, !9721}
!9721 = !DILocalVariable(name: "count", arg: 2, scope: !9719, file: !1791, line: 935, type: !9)
!9722 = !DILocation(line: 935, column: 29, scope: !9719, inlinedAt: !9723)
!9723 = distinct !DILocation(line: 995, column: 36, scope: !9702, inlinedAt: !9708)
!9724 = !DILocation(line: 935, column: 35, scope: !9719, inlinedAt: !9723)
!9725 = !DILocation(line: 77, column: 35, scope: !9726, inlinedAt: !9723)
!9726 = !DILexicalBlockFile(scope: !9719, file: !473, discriminator: 0)
!9727 = !DILocation(line: 78, column: 17, scope: !9726, inlinedAt: !9723)
!9728 = !DILocation(line: 974, column: 47, scope: !9719, inlinedAt: !9723)
!9729 = !DILocation(line: 974, column: 22, scope: !9719, inlinedAt: !9723)
!9730 = !DILocation(line: 976, column: 6, scope: !9719, inlinedAt: !9723)
!9731 = !DILocation(line: 995, column: 47, scope: !9702, inlinedAt: !9708)
!9732 = !DILocation(line: 1547, column: 35, scope: !9694)
!9733 = !DILocation(line: 1547, column: 31, scope: !9694)
!9734 = !DILocation(line: 1547, column: 13, scope: !9696)
!9735 = !DILocation(line: 1549, column: 18, scope: !9696)
!9736 = !DILocation(line: 1550, column: 6, scope: !9686)
!9737 = distinct !DISubprogram(name: "from_inner_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17h1687f0a17f41dd4cE", scope: !9490, file: !9489, line: 374, type: !9738, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !9740, retainedNodes: !9741)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{!9490, !3974, !212}
!9740 = !DISubprogram(name: "from_inner_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17h1687f0a17f41dd4cE", scope: !9490, file: !9489, line: 374, type: !9738, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!9741 = !{!9742, !9743}
!9742 = !DILocalVariable(name: "ptr", arg: 1, scope: !9737, file: !9489, line: 374, type: !3974)
!9743 = !DILocalVariable(name: "alloc", arg: 2, scope: !9737, file: !9489, line: 374, type: !212)
!9744 = !DILocation(line: 374, column: 29, scope: !9737)
!9745 = !DILocation(line: 374, column: 55, scope: !9737)
!9746 = !DILocation(line: 376, column: 6, scope: !9737)
!9747 = distinct !DISubprogram(name: "from_inner_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17he0e6f6bafa51fb1eE", scope: !9614, file: !9489, line: 374, type: !9748, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9620, declaration: !9750, retainedNodes: !9751)
!9748 = !DISubroutineType(types: !9749)
!9749 = !{!9614, !3999, !212}
!9750 = !DISubprogram(name: "from_inner_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$13from_inner_in17he0e6f6bafa51fb1eE", scope: !9614, file: !9489, line: 374, type: !9748, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9620)
!9751 = !{!9752, !9753}
!9752 = !DILocalVariable(name: "ptr", arg: 1, scope: !9747, file: !9489, line: 374, type: !3999)
!9753 = !DILocalVariable(name: "alloc", arg: 2, scope: !9747, file: !9489, line: 374, type: !212)
!9754 = !DILocation(line: 374, column: 29, scope: !9747)
!9755 = !DILocation(line: 374, column: 55, scope: !9747)
!9756 = !DILocation(line: 376, column: 6, scope: !9747)
!9757 = distinct !DISubprogram(name: "as_ptr<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$6as_ptr17h49098fb28ff5c4d5E", scope: !9490, file: !9489, line: 1466, type: !9758, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !9760, retainedNodes: !9761)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{!1230, !9660}
!9760 = !DISubprogram(name: "as_ptr<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc2rc15Rc$LT$T$C$A$GT$6as_ptr17h49098fb28ff5c4d5E", scope: !9490, file: !9489, line: 1466, type: !9758, scopeLine: 1466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!9761 = !{!9762, !9763}
!9762 = !DILocalVariable(name: "this", arg: 1, scope: !9757, file: !9489, line: 1466, type: !9660)
!9763 = !DILocalVariable(name: "ptr", scope: !9764, file: !9489, line: 1467, type: !2044, align: 32)
!9764 = distinct !DILexicalBlock(scope: !9757, file: !9489, line: 1467, column: 9)
!9765 = !DILocation(line: 1466, column: 19, scope: !9757)
!9766 = !DILocation(line: 1467, column: 52, scope: !9757)
!9767 = !DILocalVariable(name: "self", arg: 1, scope: !9768, file: !1538, line: 401, type: !3974)
!9768 = distinct !DISubprogram(name: "as_ptr<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0ed307c650d2baaaE", scope: !3974, file: !1538, line: 401, type: !9769, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2599, declaration: !9771, retainedNodes: !9772)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{!2044, !3974}
!9771 = !DISubprogram(name: "as_ptr<alloc::rc::RcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h0ed307c650d2baaaE", scope: !3974, file: !1538, line: 401, type: !9769, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2599)
!9772 = !{!9767}
!9773 = !DILocation(line: 401, column: 25, scope: !9768, inlinedAt: !9774)
!9774 = distinct !DILocation(line: 1467, column: 36, scope: !9757)
!9775 = !DILocation(line: 408, column: 6, scope: !9768, inlinedAt: !9774)
!9776 = !DILocation(line: 1467, column: 36, scope: !9757)
!9777 = !DILocation(line: 1467, column: 13, scope: !9764)
!9778 = !DILocation(line: 1472, column: 18, scope: !9764)
!9779 = !DILocation(line: 1473, column: 6, scope: !9757)
!9780 = distinct !DISubprogram(name: "data_offset_align", linkageName: "_ZN5alloc2rc17data_offset_align17hcec6aee450e513eeE", scope: !2049, file: !9489, line: 3679, type: !9781, scopeLine: 3679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9783)
!9781 = !DISubroutineType(types: !9782)
!9782 = !{!9, !9}
!9783 = !{!9784, !9785}
!9784 = !DILocalVariable(name: "align", arg: 1, scope: !9780, file: !9489, line: 3679, type: !9)
!9785 = !DILocalVariable(name: "layout", scope: !9786, file: !9489, line: 3680, type: !39, align: 32)
!9786 = distinct !DILexicalBlock(scope: !9780, file: !9489, line: 3680, column: 5)
!9787 = !DILocation(line: 3679, column: 22, scope: !9780)
!9788 = !DILocation(line: 3680, column: 9, scope: !9786)
!9789 = !DILocation(line: 3680, column: 18, scope: !9780)
!9790 = !DILocation(line: 3681, column: 12, scope: !9786)
!9791 = !DILocation(line: 3681, column: 28, scope: !9786)
!9792 = !DILocation(line: 3681, column: 5, scope: !9786)
!9793 = !DILocation(line: 3682, column: 2, scope: !9780)
!9794 = distinct !DISubprogram(name: "copy_from_slice<u8>", linkageName: "_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$15copy_from_slice17hc1e1af185925dfd7E", scope: !9490, file: !9489, line: 2140, type: !9795, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !9797, retainedNodes: !9798)
!9795 = !DISubroutineType(types: !9796)
!9796 = !{!9490, !432}
!9797 = !DISubprogram(name: "copy_from_slice<u8>", linkageName: "_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$15copy_from_slice17hc1e1af185925dfd7E", scope: !9490, file: !9489, line: 2140, type: !9795, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!9798 = !{!9799, !9800}
!9799 = !DILocalVariable(name: "v", arg: 1, scope: !9794, file: !9489, line: 2140, type: !432)
!9800 = !DILocalVariable(name: "ptr", scope: !9801, file: !9489, line: 2142, type: !2044, align: 32)
!9801 = distinct !DILexicalBlock(scope: !9794, file: !9489, line: 2142, column: 13)
!9802 = !DILocation(line: 2140, column: 31, scope: !9794)
!9803 = !DILocation(line: 2142, column: 23, scope: !9794)
!9804 = !DILocation(line: 2142, column: 17, scope: !9801)
!9805 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !9806)
!9806 = distinct !DILocation(line: 2143, column: 40, scope: !9801)
!9807 = !DILocation(line: 2143, column: 50, scope: !9801)
!9808 = !DILocation(line: 526, column: 44, scope: !459, inlinedAt: !9809)
!9809 = distinct !DILocation(line: 2143, column: 13, scope: !9801)
!9810 = !DILocation(line: 526, column: 59, scope: !459, inlinedAt: !9809)
!9811 = !DILocation(line: 526, column: 72, scope: !459, inlinedAt: !9809)
!9812 = !DILocation(line: 77, column: 35, scope: !472, inlinedAt: !9809)
!9813 = !DILocation(line: 78, column: 17, scope: !472, inlinedAt: !9809)
!9814 = !DILocation(line: 547, column: 14, scope: !459, inlinedAt: !9809)
!9815 = !DILocation(line: 2144, column: 13, scope: !9801)
!9816 = !DILocation(line: 2146, column: 6, scope: !9794)
!9817 = distinct !DISubprogram(name: "allocate_for_slice<u8>", linkageName: "_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h3767b62e0f407519E", scope: !9490, file: !9489, line: 2126, type: !9818, scopeLine: 2126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !9820, retainedNodes: !9821)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{!2044, !9}
!9820 = !DISubprogram(name: "allocate_for_slice<u8>", linkageName: "_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h3767b62e0f407519E", scope: !9490, file: !9489, line: 2126, type: !9818, scopeLine: 2126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!9821 = !{!9822}
!9822 = !DILocalVariable(name: "len", arg: 1, scope: !9817, file: !9489, line: 2126, type: !9)
!9823 = !DILocation(line: 2126, column: 34, scope: !9817)
!9824 = !DILocation(line: 2129, column: 17, scope: !9817)
!9825 = !DILocalVariable(name: "self", arg: 1, scope: !9826, file: !1621, line: 1227, type: !6943)
!9826 = distinct !DISubprogram(name: "unwrap<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h37b0cdb4594bde65E", scope: !6943, file: !1621, line: 1227, type: !9827, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !6951, declaration: !9829, retainedNodes: !9830)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{!39, !6943, !1241}
!9829 = !DISubprogram(name: "unwrap<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h37b0cdb4594bde65E", scope: !6943, file: !1621, line: 1227, type: !9827, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !6951)
!9830 = !{!9825, !9831, !9833}
!9831 = !DILocalVariable(name: "t", scope: !9832, file: !1621, line: 1232, type: !39, align: 32)
!9832 = distinct !DILexicalBlock(scope: !9826, file: !1621, line: 1232, column: 13)
!9833 = !DILocalVariable(name: "e", scope: !9834, file: !1621, line: 1233, type: !6953, align: 8)
!9834 = distinct !DILexicalBlock(scope: !9826, file: !1621, line: 1233, column: 13)
!9835 = !DILocation(line: 1227, column: 19, scope: !9826, inlinedAt: !9836)
!9836 = distinct !DILocation(line: 2129, column: 41, scope: !9817)
!9837 = !DILocation(line: 1233, column: 17, scope: !9834, inlinedAt: !9836)
!9838 = !DILocation(line: 1231, column: 15, scope: !9826, inlinedAt: !9836)
!9839 = !DILocation(line: 1231, column: 9, scope: !9826, inlinedAt: !9836)
!9840 = !DILocation(line: 1233, column: 23, scope: !9834, inlinedAt: !9836)
!9841 = !DILocation(line: 1232, column: 16, scope: !9826, inlinedAt: !9836)
!9842 = !DILocation(line: 1232, column: 16, scope: !9832, inlinedAt: !9836)
!9843 = !DILocation(line: 1235, column: 6, scope: !9826, inlinedAt: !9836)
!9844 = !DILocation(line: 2129, column: 41, scope: !9817)
!9845 = !DILocation(line: 2128, column: 13, scope: !9817)
!9846 = !DILocation(line: 2134, column: 6, scope: !9817)
!9847 = distinct !DISubprogram(name: "{closure#0}<u8>", linkageName: "_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h53dfcd36625c322cE", scope: !9508, file: !9489, line: 2130, type: !9848, scopeLine: 2130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !9850)
!9848 = !DISubroutineType(types: !9849)
!9849 = !{!1959, !9507, !39}
!9850 = !{!9851, !9852}
!9851 = !DILocalVariable(name: "layout", arg: 2, scope: !9847, file: !9489, line: 2130, type: !39)
!9852 = !DILocalVariable(arg: 1, scope: !9847, file: !9489, line: 2130, type: !9507)
!9853 = !DILocation(line: 2130, column: 17, scope: !9847)
!9854 = !DILocation(line: 2130, column: 18, scope: !9847)
!9855 = !DILocation(line: 2130, column: 33, scope: !9847)
!9856 = !DILocation(line: 2130, column: 49, scope: !9847)
!9857 = distinct !DISubprogram(name: "{closure#1}<u8>", linkageName: "_ZN5alloc2rc21Rc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h73212051466d7917E", scope: !9508, file: !9489, line: 2131, type: !9858, scopeLine: 2131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !9860)
!9858 = !DISubroutineType(types: !9859)
!9859 = !{!2044, !9510, !463}
!9860 = !{!9861, !9862}
!9861 = !DILocalVariable(name: "mem", arg: 2, scope: !9857, file: !9489, line: 2131, type: !463)
!9862 = !DILocalVariable(name: "len", scope: !9857, file: !9489, line: 2126, type: !9, align: 32)
!9863 = !DILocation(line: 2126, column: 34, scope: !9857)
!9864 = !DILocation(line: 2131, column: 18, scope: !9857)
!9865 = !DILocalVariable(name: "self", arg: 1, scope: !9866, file: !1810, line: 31, type: !463)
!9866 = distinct !DISubprogram(name: "cast<u8, u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$4cast17ha3e755a167e155d2E", scope: !1811, file: !1810, line: 31, type: !9867, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3667, retainedNodes: !9869)
!9867 = !DISubroutineType(types: !9868)
!9868 = !{!463, !463}
!9869 = !{!9865}
!9870 = !DILocation(line: 31, column: 26, scope: !9866, inlinedAt: !9871)
!9871 = distinct !DILocation(line: 2131, column: 57, scope: !9857)
!9872 = !DILocation(line: 2131, column: 70, scope: !9857)
!9873 = !DILocation(line: 2131, column: 23, scope: !9857)
!9874 = !DILocation(line: 2131, column: 95, scope: !9857)
!9875 = distinct !DISubprogram(name: "rc_inner_layout_for_value_layout", linkageName: "_ZN5alloc2rc32rc_inner_layout_for_value_layout17h6c6f54d46bc6df2eE", scope: !2049, file: !9489, line: 290, type: !9876, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9878)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!39, !39}
!9878 = !{!9879}
!9879 = !DILocalVariable(name: "layout", arg: 1, scope: !9875, file: !9489, line: 290, type: !39)
!9880 = !DILocation(line: 290, column: 37, scope: !9875)
!9881 = !DILocation(line: 295, column: 5, scope: !9875)
!9882 = !DILocation(line: 295, column: 34, scope: !9875)
!9883 = !DILocalVariable(name: "t", scope: !9884, file: !1621, line: 1232, type: !7170, align: 32)
!9884 = distinct !DILexicalBlock(scope: !9885, file: !1621, line: 1232, column: 13)
!9885 = distinct !DISubprogram(name: "unwrap<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7b63fb84987f0c45E", scope: !7162, file: !1621, line: 1227, type: !9886, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7174, declaration: !9888, retainedNodes: !9889)
!9886 = !DISubroutineType(types: !9887)
!9887 = !{!7170, !7162, !1241}
!9888 = !DISubprogram(name: "unwrap<(core::alloc::layout::Layout, usize), core::alloc::layout::LayoutError>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h7b63fb84987f0c45E", scope: !7162, file: !1621, line: 1227, type: !9886, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !7174)
!9889 = !{!9890, !9883, !9891}
!9890 = !DILocalVariable(name: "self", arg: 1, scope: !9885, file: !1621, line: 1227, type: !7162)
!9891 = !DILocalVariable(name: "e", scope: !9892, file: !1621, line: 1233, type: !6953, align: 8)
!9892 = distinct !DILexicalBlock(scope: !9885, file: !1621, line: 1233, column: 13)
!9893 = !DILocation(line: 1232, column: 16, scope: !9884, inlinedAt: !9894)
!9894 = distinct !DILocation(line: 295, column: 49, scope: !9875)
!9895 = !DILocation(line: 1227, column: 19, scope: !9885, inlinedAt: !9894)
!9896 = !DILocation(line: 1233, column: 17, scope: !9892, inlinedAt: !9894)
!9897 = !DILocation(line: 1231, column: 15, scope: !9885, inlinedAt: !9894)
!9898 = !DILocation(line: 1231, column: 9, scope: !9885, inlinedAt: !9894)
!9899 = !DILocation(line: 1233, column: 23, scope: !9892, inlinedAt: !9894)
!9900 = !DILocation(line: 1232, column: 16, scope: !9885, inlinedAt: !9894)
!9901 = !DILocation(line: 295, column: 60, scope: !9875)
!9902 = !DILocation(line: 296, column: 2, scope: !9875)
!9903 = distinct !DISubprogram(name: "default", linkageName: "_ZN5alloc3ffi5c_str100_$LT$impl$u20$core..default..Default$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$7default17hddc8fc96dad6de2aE", scope: !9904, file: !398, line: 979, type: !9905, scopeLine: 979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21)
!9904 = !DINamespace(name: "{impl#28}", scope: !400)
!9905 = !DISubroutineType(types: !9906)
!9906 = !{!1561}
!9907 = !DILocation(line: 980, column: 9, scope: !9903)
!9908 = !DILocation(line: 981, column: 6, scope: !9903)
!9909 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc3ffi5c_str131_$LT$impl$u20$core..convert..From$LT$$RF$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17hdfd5d25b40010dcbE", scope: !9910, file: !398, line: 768, type: !9911, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9913)
!9910 = !DINamespace(name: "{impl#9}", scope: !400)
!9911 = !DISubroutineType(types: !9912)
!9912 = !{!1561, !411}
!9913 = !{!9914, !9915}
!9914 = !DILocalVariable(name: "s", arg: 1, scope: !9909, file: !398, line: 768, type: !411)
!9915 = !DILocalVariable(name: "boxed", scope: !9916, file: !398, line: 769, type: !407, align: 32)
!9916 = distinct !DILexicalBlock(scope: !9909, file: !398, line: 769, column: 9)
!9917 = !DILocation(line: 768, column: 13, scope: !9909)
!9918 = !DILocation(line: 769, column: 44, scope: !9909)
!9919 = !DILocation(line: 769, column: 32, scope: !9909)
!9920 = !DILocation(line: 769, column: 13, scope: !9916)
!9921 = !DILocation(line: 770, column: 32, scope: !9916)
!9922 = !DILocation(line: 770, column: 18, scope: !9916)
!9923 = !DILocation(line: 771, column: 6, scope: !9909)
!9924 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc3ffi5c_str139_$LT$impl$u20$core..convert..From$LT$$RF$mut$u20$core..ffi..c_str..CStr$GT$$u20$for$u20$alloc..boxed..Box$LT$core..ffi..c_str..CStr$GT$$GT$4from17h03f5acae6f222f58E", scope: !9925, file: !398, line: 778, type: !9926, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !9932)
!9925 = !DINamespace(name: "{impl#10}", scope: !400)
!9926 = !DISubroutineType(types: !9927)
!9927 = !{!1561, !9928}
!9928 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut core::ffi::c_str::CStr", file: !2, size: 64, align: 32, elements: !9929, templateParams: !21, identifier: "be0b845fb02272449b9cecff78694cc0")
!9929 = !{!9930, !9931}
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !9928, file: !2, baseType: !414, size: 32, align: 32)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9928, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!9932 = !{!9933}
!9933 = !DILocalVariable(name: "s", arg: 1, scope: !9924, file: !398, line: 778, type: !9928)
!9934 = !DILocation(line: 778, column: 13, scope: !9924)
!9935 = !DILocation(line: 779, column: 9, scope: !9924)
!9936 = !DILocation(line: 780, column: 6, scope: !9924)
!9937 = distinct !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17h81e2e7abf5767986E", scope: !8629, file: !398, line: 1056, type: !9938, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !9941, retainedNodes: !9942)
!9938 = !DISubroutineType(types: !9939)
!9939 = !{!260, !9940}
!9940 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::IntoStringError", baseType: !8629, size: 32, align: 32, dwarfAddressSpace: 0)
!9941 = !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError10utf8_error17h81e2e7abf5767986E", scope: !8629, file: !398, line: 1056, type: !9938, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!9942 = !{!9943}
!9943 = !DILocalVariable(name: "self", arg: 1, scope: !9937, file: !398, line: 1056, type: !9940)
!9944 = !DILocation(line: 1056, column: 23, scope: !9937)
!9945 = !DILocation(line: 1057, column: 9, scope: !9937)
!9946 = !DILocation(line: 1058, column: 6, scope: !9937)
!9947 = distinct !DISubprogram(name: "into_cstring", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17h66582bb5aba9df53E", scope: !8629, file: !398, line: 1049, type: !9948, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !9950, retainedNodes: !9951)
!9948 = !DISubroutineType(types: !9949)
!9949 = !{!404, !8629}
!9950 = !DISubprogram(name: "into_cstring", linkageName: "_ZN5alloc3ffi5c_str15IntoStringError12into_cstring17h66582bb5aba9df53E", scope: !8629, file: !398, line: 1049, type: !9948, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!9951 = !{!9952}
!9952 = !DILocalVariable(name: "self", arg: 1, scope: !9947, file: !398, line: 1049, type: !8629)
!9953 = !DILocation(line: 1049, column: 25, scope: !9947)
!9954 = !DILocation(line: 1050, column: 9, scope: !9947)
!9955 = !DILocation(line: 1051, column: 6, scope: !9947)
!9956 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17hf6953d006eb999d9E", scope: !9957, file: !398, line: 207, type: !9972, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !9974, retainedNodes: !9975)
!9957 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromVecWithNulError", scope: !400, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !9958, templateParams: !21, identifier: "91c3f1bcf11781db5d018939264a38a9")
!9958 = !{!9959, !9971}
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "error_kind", scope: !9957, file: !2, baseType: !9960, size: 64, align: 32, flags: DIFlagPrivate)
!9960 = !DICompositeType(tag: DW_TAG_structure_type, name: "FromBytesWithNulErrorKind", scope: !400, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !9961, templateParams: !21, identifier: "4c27d079c14926d979783f300262aee5")
!9961 = !{!9962}
!9962 = !DICompositeType(tag: DW_TAG_variant_part, scope: !9960, file: !2, size: 64, align: 32, elements: !9963, templateParams: !21, identifier: "4698ec675983dffc1fa8cdd3f1bac1b2", discriminator: !9970)
!9963 = !{!9964, !9968}
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "InteriorNul", scope: !9962, file: !2, baseType: !9965, size: 64, align: 32, extraData: i32 0)
!9965 = !DICompositeType(tag: DW_TAG_structure_type, name: "InteriorNul", scope: !9960, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !9966, templateParams: !21, identifier: "16adce800a5d89e5b3384f4b1b7d65e5")
!9966 = !{!9967}
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !9965, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPrivate)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "NotNulTerminated", scope: !9962, file: !2, baseType: !9969, size: 64, align: 32, extraData: i32 1)
!9969 = !DICompositeType(tag: DW_TAG_structure_type, name: "NotNulTerminated", scope: !9960, file: !2, size: 64, align: 32, flags: DIFlagPrivate, elements: !21, identifier: "f59f1d814dce309bb3f6e5b11b9d471a")
!9970 = !DIDerivedType(tag: DW_TAG_member, scope: !9960, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9957, file: !2, baseType: !182, size: 96, align: 32, offset: 64, flags: DIFlagPrivate)
!9972 = !DISubroutineType(types: !9973)
!9973 = !{!182, !9957}
!9974 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError10into_bytes17hf6953d006eb999d9E", scope: !9957, file: !398, line: 207, type: !9972, scopeLine: 207, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!9975 = !{!9976}
!9976 = !DILocalVariable(name: "self", arg: 1, scope: !9956, file: !398, line: 207, type: !9957)
!9977 = !DILocation(line: 207, column: 23, scope: !9956)
!9978 = !DILocation(line: 208, column: 9, scope: !9956)
!9979 = !DILocation(line: 209, column: 6, scope: !9956)
!9980 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17h5617e99a0cba297eE", scope: !9957, file: !398, line: 181, type: !9981, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !9984, retainedNodes: !9985)
!9981 = !DISubroutineType(types: !9982)
!9982 = !{!432, !9983}
!9983 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::FromVecWithNulError", baseType: !9957, size: 32, align: 32, dwarfAddressSpace: 0)
!9984 = !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc3ffi5c_str19FromVecWithNulError8as_bytes17h5617e99a0cba297eE", scope: !9957, file: !398, line: 181, type: !9981, scopeLine: 181, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!9985 = !{!9986}
!9986 = !DILocalVariable(name: "self", arg: 1, scope: !9980, file: !398, line: 181, type: !9983)
!9987 = !DILocation(line: 181, column: 21, scope: !9980)
!9988 = !DILocation(line: 182, column: 10, scope: !9980)
!9989 = !DILocation(line: 182, column: 20, scope: !9980)
!9990 = !DILocation(line: 183, column: 6, scope: !9980)
!9991 = distinct !DISubprogram(name: "into_c_string", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17h41c1f35a0e008804E", scope: !415, file: !398, line: 1209, type: !1559, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !9992, retainedNodes: !9993)
!9992 = !DISubprogram(name: "into_c_string", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$13into_c_string17h41c1f35a0e008804E", scope: !415, file: !398, line: 1209, type: !1559, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!9993 = !{!9994}
!9994 = !DILocalVariable(name: "self", arg: 1, scope: !9991, file: !398, line: 1209, type: !1561)
!9995 = !DILocation(line: 1209, column: 26, scope: !9991)
!9996 = !DILocation(line: 1210, column: 9, scope: !9991)
!9997 = !DILocation(line: 1211, column: 6, scope: !9991)
!9998 = distinct !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17hdbbc177d25b3c72fE", scope: !415, file: !398, line: 1190, type: !9999, scopeLine: 1190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10001, retainedNodes: !10002)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!3456, !411}
!10001 = !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc3ffi5c_str40_$LT$impl$u20$core..ffi..c_str..CStr$GT$15to_string_lossy17hdbbc177d25b3c72fE", scope: !415, file: !398, line: 1190, type: !9999, scopeLine: 1190, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10002 = !{!10003}
!10003 = !DILocalVariable(name: "self", arg: 1, scope: !9998, file: !398, line: 1190, type: !411)
!10004 = !DILocation(line: 1190, column: 28, scope: !9998)
!10005 = !DILocation(line: 1191, column: 38, scope: !9998)
!10006 = !DILocation(line: 1191, column: 9, scope: !9998)
!10007 = !DILocation(line: 1192, column: 6, scope: !9998)
!10008 = distinct !DISubprogram(name: "clone_into", linkageName: "_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$10clone_into17h0299472760d34272E", scope: !10009, file: !398, line: 1076, type: !10010, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10013)
!10009 = !DINamespace(name: "{impl#34}", scope: !400)
!10010 = !DISubroutineType(types: !10011)
!10011 = !{null, !411, !10012}
!10012 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::ffi::c_str::CString", baseType: !404, size: 32, align: 32, dwarfAddressSpace: 0)
!10013 = !{!10014, !10015, !10016}
!10014 = !DILocalVariable(name: "self", arg: 1, scope: !10008, file: !398, line: 1076, type: !411)
!10015 = !DILocalVariable(name: "target", arg: 2, scope: !10008, file: !398, line: 1076, type: !10012)
!10016 = !DILocalVariable(name: "b", scope: !10017, file: !398, line: 1077, type: !182, align: 32)
!10017 = distinct !DILexicalBlock(scope: !10008, file: !398, line: 1077, column: 9)
!10018 = !DILocation(line: 1076, column: 19, scope: !10008)
!10019 = !DILocation(line: 1076, column: 26, scope: !10008)
!10020 = !DILocation(line: 1077, column: 13, scope: !10017)
!10021 = !DILocation(line: 1077, column: 21, scope: !10008)
!10022 = !DILocation(line: 1077, column: 50, scope: !10008)
!10023 = !DILocation(line: 1078, column: 14, scope: !10017)
!10024 = !DILocation(line: 1078, column: 34, scope: !10017)
!10025 = !DILocation(line: 1079, column: 24, scope: !10017)
!10026 = !DILocation(line: 1079, column: 26, scope: !10017)
!10027 = !DILocation(line: 1079, column: 9, scope: !10017)
!10028 = !DILocation(line: 1080, column: 6, scope: !10008)
!10029 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3ffi5c_str75_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$core..ffi..c_str..CStr$GT$8to_owned17haacd9a91ba7d82a0E", scope: !10009, file: !398, line: 1072, type: !402, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10030)
!10030 = !{!10031}
!10031 = !DILocalVariable(name: "self", arg: 1, scope: !10029, file: !398, line: 1072, type: !411)
!10032 = !DILocation(line: 1072, column: 17, scope: !10029)
!10033 = !DILocation(line: 1073, column: 31, scope: !10029)
!10034 = !DILocation(line: 1073, column: 51, scope: !10029)
!10035 = !DILocation(line: 1074, column: 6, scope: !10029)
!10036 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString10into_bytes17hbd338bb8d849f9e8E", scope: !404, file: !398, line: 497, type: !10037, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10039, retainedNodes: !10040)
!10037 = !DISubroutineType(types: !10038)
!10038 = !{!182, !404}
!10039 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString10into_bytes17hbd338bb8d849f9e8E", scope: !404, file: !398, line: 497, type: !10037, scopeLine: 497, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10040 = !{!10041, !10042, !10044, !10046, !10049, !10050}
!10041 = !DILocalVariable(name: "self", arg: 1, scope: !10036, file: !398, line: 497, type: !404)
!10042 = !DILocalVariable(name: "vec", scope: !10043, file: !398, line: 498, type: !182, align: 32)
!10043 = distinct !DILexicalBlock(scope: !10036, file: !398, line: 498, column: 9)
!10044 = !DILocalVariable(name: "_nul", scope: !10045, file: !398, line: 499, type: !13, align: 8)
!10045 = distinct !DILexicalBlock(scope: !10043, file: !398, line: 499, column: 9)
!10046 = !DILocalVariable(name: "left_val", scope: !10047, file: !398, line: 500, type: !12, align: 32)
!10047 = !DILexicalBlockFile(scope: !10048, file: !398, discriminator: 0)
!10048 = distinct !DILexicalBlock(scope: !10045, file: !2304, line: 45, column: 13)
!10049 = !DILocalVariable(name: "right_val", scope: !10047, file: !398, line: 500, type: !12, align: 32)
!10050 = !DILocalVariable(name: "kind", scope: !10051, file: !398, line: 500, type: !280, align: 8)
!10051 = !DILexicalBlockFile(scope: !10052, file: !398, discriminator: 0)
!10052 = distinct !DILexicalBlock(scope: !10048, file: !2304, line: 47, column: 21)
!10053 = !DILocation(line: 497, column: 23, scope: !10036)
!10054 = !DILocation(line: 498, column: 13, scope: !10043)
!10055 = !DILocation(line: 499, column: 13, scope: !10045)
!10056 = !DILocation(line: 498, column: 28, scope: !10036)
!10057 = !DILocation(line: 498, column: 41, scope: !10036)
!10058 = !DILocation(line: 499, column: 24, scope: !10043)
!10059 = !DILocation(line: 500, column: 9, scope: !10045)
!10060 = !DILocation(line: 500, column: 9, scope: !10047)
!10061 = !DILocation(line: 500, column: 9, scope: !10051)
!10062 = !DILocation(line: 501, column: 9, scope: !10045)
!10063 = !DILocation(line: 502, column: 6, scope: !10036)
!10064 = distinct !DISubprogram(name: "into_inner", linkageName: "_ZN5alloc3ffi5c_str7CString10into_inner17hbcdcd443f75a46f3E", scope: !404, file: !398, line: 602, type: !10065, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10067, retainedNodes: !10068)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!407, !404}
!10067 = !DISubprogram(name: "into_inner", linkageName: "_ZN5alloc3ffi5c_str7CString10into_inner17hbcdcd443f75a46f3E", scope: !404, file: !398, line: 602, type: !10065, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!10068 = !{!10069, !10070}
!10069 = !DILocalVariable(name: "self", arg: 1, scope: !10064, file: !398, line: 602, type: !404)
!10070 = !DILocalVariable(name: "this", scope: !10071, file: !398, line: 607, type: !10072, align: 32)
!10071 = distinct !DILexicalBlock(scope: !10064, file: !398, line: 607, column: 9)
!10072 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::ffi::c_str::CString>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !10073, templateParams: !10075, identifier: "ede24aa16863370d15c79951c96a0b35")
!10073 = !{!10074}
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !10072, file: !2, baseType: !404, size: 64, align: 32, flags: DIFlagPrivate)
!10075 = !{!10076}
!10076 = !DITemplateTypeParameter(name: "T", type: !404)
!10077 = !DILocation(line: 602, column: 19, scope: !10064)
!10078 = !DILocation(line: 607, column: 13, scope: !10071)
!10079 = !DILocalVariable(name: "value", arg: 1, scope: !10080, file: !9646, line: 181, type: !404)
!10080 = distinct !DISubprogram(name: "new<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb53f42207ce2ca7dE", scope: !10072, file: !9646, line: 181, type: !10081, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !10075, declaration: !10083, retainedNodes: !10084)
!10081 = !DISubroutineType(types: !10082)
!10082 = !{!10072, !404}
!10083 = !DISubprogram(name: "new<alloc::ffi::c_str::CString>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hb53f42207ce2ca7dE", scope: !10072, file: !9646, line: 181, type: !10081, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !10075)
!10084 = !{!10079}
!10085 = !DILocation(line: 181, column: 22, scope: !10080, inlinedAt: !10086)
!10086 = distinct !DILocation(line: 607, column: 20, scope: !10064)
!10087 = !DILocation(line: 183, column: 6, scope: !10080, inlinedAt: !10086)
!10088 = !DILocation(line: 607, column: 20, scope: !10064)
!10089 = !DILocalVariable(name: "self", arg: 1, scope: !10090, file: !9646, line: 270, type: !10094)
!10090 = distinct !DISubprogram(name: "deref<alloc::ffi::c_str::CString>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8a8c664823bd5b6aE", scope: !9657, file: !9646, line: 270, type: !10091, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !10075, retainedNodes: !10095)
!10091 = !DISubroutineType(types: !10092)
!10092 = !{!10093, !10094}
!10093 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::CString", baseType: !404, size: 32, align: 32, dwarfAddressSpace: 0)
!10094 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::ffi::c_str::CString>", baseType: !10072, size: 32, align: 32, dwarfAddressSpace: 0)
!10095 = !{!10089}
!10096 = !DILocation(line: 270, column: 14, scope: !10090, inlinedAt: !10097)
!10097 = distinct !DILocation(line: 608, column: 29, scope: !10071)
!10098 = !DILocation(line: 608, column: 18, scope: !10071)
!10099 = !DILocation(line: 609, column: 6, scope: !10064)
!10100 = distinct !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string17h06372032653c0a48E", scope: !404, file: !398, line: 473, type: !10101, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10103, retainedNodes: !10104)
!10101 = !DISubroutineType(types: !10102)
!10102 = !{!8619, !404}
!10103 = !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string17h06372032653c0a48E", scope: !404, file: !398, line: 473, type: !10101, scopeLine: 473, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10104 = !{!10105}
!10105 = !DILocalVariable(name: "self", arg: 1, scope: !10100, file: !398, line: 473, type: !404)
!10106 = !DILocation(line: 473, column: 24, scope: !10100)
!10107 = !DILocation(line: 474, column: 32, scope: !10100)
!10108 = !DILocation(line: 474, column: 9, scope: !10100)
!10109 = !DILocation(line: 474, column: 46, scope: !10100)
!10110 = !DILocation(line: 478, column: 6, scope: !10100)
!10111 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc3ffi5c_str7CString11into_string28_$u7b$$u7b$closure$u7d$$u7d$17hfd3b06a1e6dcc217E", scope: !8639, file: !398, line: 474, type: !10112, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10114)
!10112 = !DISubroutineType(types: !10113)
!10113 = !{!8629, !8638, !3370}
!10114 = !{!10115, !10116}
!10115 = !DILocalVariable(name: "e", arg: 2, scope: !10111, file: !398, line: 474, type: !3370)
!10116 = !DILocalVariable(arg: 1, scope: !10111, file: !398, line: 474, type: !8638)
!10117 = !DILocation(line: 474, column: 54, scope: !10111)
!10118 = !DILocation(line: 474, column: 55, scope: !10111)
!10119 = !DILocation(line: 475, column: 22, scope: !10111)
!10120 = !DILocation(line: 476, column: 57, scope: !10111)
!10121 = !DILocation(line: 476, column: 29, scope: !10111)
!10122 = !DILocation(line: 474, column: 58, scope: !10111)
!10123 = !DILocation(line: 477, column: 10, scope: !10111)
!10124 = distinct !DISubprogram(name: "into_boxed_c_str", linkageName: "_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17h4fe3229376c8603bE", scope: !404, file: !398, line: 596, type: !10125, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10127, retainedNodes: !10128)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!1561, !404}
!10127 = !DISubprogram(name: "into_boxed_c_str", linkageName: "_ZN5alloc3ffi5c_str7CString16into_boxed_c_str17h4fe3229376c8603bE", scope: !404, file: !398, line: 596, type: !10125, scopeLine: 596, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10128 = !{!10129}
!10129 = !DILocalVariable(name: "self", arg: 1, scope: !10124, file: !398, line: 596, type: !404)
!10130 = !DILocation(line: 596, column: 29, scope: !10124)
!10131 = !DILocation(line: 597, column: 51, scope: !10124)
!10132 = !DILocation(line: 597, column: 32, scope: !10124)
!10133 = !DILocation(line: 597, column: 18, scope: !10124)
!10134 = !DILocation(line: 598, column: 6, scope: !10124)
!10135 = distinct !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17he9933c147850b584E", scope: !404, file: !398, line: 561, type: !10136, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10138, retainedNodes: !10139)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!432, !10093}
!10138 = !DISubprogram(name: "as_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17as_bytes_with_nul17he9933c147850b584E", scope: !404, file: !398, line: 561, type: !10136, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "self", arg: 1, scope: !10135, file: !398, line: 561, type: !10093)
!10141 = !DILocation(line: 561, column: 30, scope: !10135)
!10142 = !DILocation(line: 562, column: 9, scope: !10135)
!10143 = !DILocation(line: 563, column: 6, scope: !10135)
!10144 = distinct !DISubprogram(name: "from_vec_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17he89ac216ebfa45f0E", scope: !404, file: !398, line: 673, type: !10145, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10162, retainedNodes: !10163)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{!10147, !182}
!10147 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::FromVecWithNulError>", scope: !335, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !10148, templateParams: !21, identifier: "8e135aa8323bfb617032acc4539b85bc")
!10148 = !{!10149}
!10149 = !DICompositeType(tag: DW_TAG_variant_part, scope: !10147, file: !2, size: 160, align: 32, elements: !10150, templateParams: !21, identifier: "3b9ae7c5a0e18a72f3d397b3686c4bda", discriminator: !10161)
!10150 = !{!10151, !10157}
!10151 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !10149, file: !2, baseType: !10152, size: 160, align: 32, extraData: i32 2)
!10152 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !10147, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !10153, templateParams: !10155, identifier: "3b5e2ef99bc9ce20310528992a84ab93")
!10153 = !{!10154}
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10152, file: !2, baseType: !404, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!10155 = !{!10076, !10156}
!10156 = !DITemplateTypeParameter(name: "E", type: !9957)
!10157 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !10149, file: !2, baseType: !10158, size: 160, align: 32)
!10158 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !10147, file: !2, size: 160, align: 32, flags: DIFlagPublic, elements: !10159, templateParams: !10155, identifier: "3fa0ea04275104997a35bfd0a6fba501")
!10159 = !{!10160}
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10158, file: !2, baseType: !9957, size: 160, align: 32, flags: DIFlagPublic)
!10161 = !DIDerivedType(tag: DW_TAG_member, scope: !10147, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!10162 = !DISubprogram(name: "from_vec_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString17from_vec_with_nul17he89ac216ebfa45f0E", scope: !404, file: !398, line: 673, type: !10145, scopeLine: 673, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10163 = !{!10164, !10165, !10167, !10169, !10170}
!10164 = !DILocalVariable(name: "v", arg: 1, scope: !10144, file: !398, line: 673, type: !182)
!10165 = !DILocalVariable(name: "nul_pos", scope: !10166, file: !398, line: 674, type: !103, align: 32)
!10166 = distinct !DILexicalBlock(scope: !10144, file: !398, line: 674, column: 9)
!10167 = !DILocalVariable(name: "nul_pos", scope: !10168, file: !398, line: 676, type: !9, align: 32)
!10168 = distinct !DILexicalBlock(scope: !10166, file: !398, line: 676, column: 13)
!10169 = !DILocalVariable(name: "nul_pos", scope: !10168, file: !398, line: 676, type: !93, align: 32)
!10170 = !DILocalVariable(name: "nul_pos", scope: !10171, file: !398, line: 681, type: !9, align: 32)
!10171 = distinct !DILexicalBlock(scope: !10166, file: !398, line: 681, column: 13)
!10172 = !DILocation(line: 673, column: 30, scope: !10144)
!10173 = !DILocation(line: 674, column: 13, scope: !10166)
!10174 = !DILocation(line: 674, column: 41, scope: !10144)
!10175 = !DILocation(line: 674, column: 23, scope: !10144)
!10176 = !DILocation(line: 675, column: 15, scope: !10166)
!10177 = !DILocation(line: 675, column: 9, scope: !10166)
!10178 = !DILocation(line: 676, column: 18, scope: !10166)
!10179 = !DILocation(line: 676, column: 18, scope: !10168)
!10180 = !DILocation(line: 676, column: 30, scope: !10166)
!10181 = !DILocation(line: 685, column: 25, scope: !10166)
!10182 = !DILocation(line: 685, column: 21, scope: !10166)
!10183 = !DILocation(line: 688, column: 14, scope: !10166)
!10184 = !DILocation(line: 690, column: 6, scope: !10144)
!10185 = !DILocation(line: 676, column: 47, scope: !10166)
!10186 = !DILocation(line: 681, column: 18, scope: !10166)
!10187 = !DILocation(line: 681, column: 18, scope: !10171)
!10188 = !DILocation(line: 681, column: 34, scope: !10171)
!10189 = !DILocation(line: 681, column: 30, scope: !10171)
!10190 = !DILocation(line: 684, column: 14, scope: !10166)
!10191 = !DILocation(line: 679, column: 29, scope: !10168)
!10192 = !DILocation(line: 679, column: 17, scope: !10168)
!10193 = !DILocation(line: 680, column: 13, scope: !10166)
!10194 = distinct !DISubprogram(name: "from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17h2488c29354f95cb5E", scope: !404, file: !398, line: 335, type: !10195, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10197, retainedNodes: !10198)
!10195 = !DISubroutineType(types: !10196)
!10196 = !{!404, !182}
!10197 = !DISubprogram(name: "from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString18from_vec_unchecked17h2488c29354f95cb5E", scope: !404, file: !398, line: 335, type: !10195, scopeLine: 335, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10198 = !{!10199}
!10199 = !DILocalVariable(name: "v", arg: 1, scope: !10194, file: !398, line: 335, type: !182)
!10200 = !DILocation(line: 335, column: 38, scope: !10194)
!10201 = !DILocation(line: 336, column: 41, scope: !10194)
!10202 = !DILocation(line: 336, column: 23, scope: !10194)
!10203 = !DILocation(line: 336, column: 45, scope: !10194)
!10204 = !DILocation(line: 336, column: 9, scope: !10194)
!10205 = !DILocation(line: 337, column: 18, scope: !10194)
!10206 = !DILocation(line: 338, column: 6, scope: !10194)
!10207 = distinct !DISubprogram(name: "_from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E", scope: !404, file: !398, line: 340, type: !10195, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10208, retainedNodes: !10209)
!10208 = !DISubprogram(name: "_from_vec_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString19_from_vec_unchecked17h9527e45010ed4cb6E", scope: !404, file: !398, line: 340, type: !10195, scopeLine: 340, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10209 = !{!10210}
!10210 = !DILocalVariable(name: "v", arg: 1, scope: !10207, file: !398, line: 340, type: !182)
!10211 = !DILocation(line: 340, column: 35, scope: !10207)
!10212 = !DILocation(line: 341, column: 11, scope: !10207)
!10213 = !DILocation(line: 342, column: 11, scope: !10207)
!10214 = !DILocation(line: 343, column: 23, scope: !10207)
!10215 = !DILocation(line: 343, column: 25, scope: !10207)
!10216 = !DILocation(line: 344, column: 6, scope: !10207)
!10217 = distinct !DISubprogram(name: "into_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h88e97f61fe1b32cdE", scope: !404, file: !398, line: 518, type: !10037, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10218, retainedNodes: !10219)
!10218 = !DISubprogram(name: "into_bytes_with_nul", linkageName: "_ZN5alloc3ffi5c_str7CString19into_bytes_with_nul17h88e97f61fe1b32cdE", scope: !404, file: !398, line: 518, type: !10037, scopeLine: 518, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10219 = !{!10220}
!10220 = !DILocalVariable(name: "self", arg: 1, scope: !10217, file: !398, line: 518, type: !404)
!10221 = !DILocation(line: 518, column: 32, scope: !10217)
!10222 = !DILocation(line: 519, column: 14, scope: !10217)
!10223 = !DILocation(line: 519, column: 27, scope: !10217)
!10224 = !DILocation(line: 520, column: 6, scope: !10217)
!10225 = distinct !DISubprogram(name: "from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17h89b544e319a77d7eE", scope: !404, file: !398, line: 630, type: !10195, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10226, retainedNodes: !10227)
!10226 = !DISubprogram(name: "from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString27from_vec_with_nul_unchecked17h89b544e319a77d7eE", scope: !404, file: !398, line: 630, type: !10195, scopeLine: 630, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10227 = !{!10228}
!10228 = !DILocalVariable(name: "v", arg: 1, scope: !10225, file: !398, line: 630, type: !182)
!10229 = !DILocation(line: 630, column: 47, scope: !10225)
!10230 = !DILocation(line: 631, column: 41, scope: !10225)
!10231 = !DILocation(line: 631, column: 23, scope: !10225)
!10232 = !DILocalVariable(name: "self", arg: 1, scope: !10233, file: !1685, line: 1012, type: !103)
!10233 = distinct !DISubprogram(name: "unwrap<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E", scope: !103, file: !1685, line: 1012, type: !10234, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !109, declaration: !10236, retainedNodes: !10237)
!10234 = !DISubroutineType(types: !10235)
!10235 = !{!9, !103, !1241}
!10236 = !DISubprogram(name: "unwrap<usize>", linkageName: "_ZN4core6option15Option$LT$T$GT$6unwrap17h33330b3bb5644e64E", scope: !103, file: !1685, line: 1012, type: !10234, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !109)
!10237 = !{!10232, !10238}
!10238 = !DILocalVariable(name: "val", scope: !10239, file: !1685, line: 1014, type: !9, align: 32)
!10239 = distinct !DILexicalBlock(scope: !10233, file: !1685, line: 1014, column: 13)
!10240 = !DILocation(line: 1012, column: 25, scope: !10233, inlinedAt: !10241)
!10241 = distinct !DILocation(line: 631, column: 45, scope: !10225)
!10242 = !DILocation(line: 1013, column: 15, scope: !10233, inlinedAt: !10241)
!10243 = !DILocation(line: 1013, column: 9, scope: !10233, inlinedAt: !10241)
!10244 = !DILocation(line: 1015, column: 21, scope: !10233, inlinedAt: !10241)
!10245 = !DILocation(line: 1014, column: 18, scope: !10233, inlinedAt: !10241)
!10246 = !DILocation(line: 1014, column: 18, scope: !10239, inlinedAt: !10241)
!10247 = !DILocation(line: 631, column: 63, scope: !10225)
!10248 = !DILocation(line: 631, column: 9, scope: !10225)
!10249 = !DILocation(line: 632, column: 18, scope: !10225)
!10250 = !DILocation(line: 633, column: 6, scope: !10225)
!10251 = distinct !DISubprogram(name: "_from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h55cdf3b035099001E", scope: !404, file: !398, line: 635, type: !10195, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10252, retainedNodes: !10253)
!10252 = !DISubprogram(name: "_from_vec_with_nul_unchecked", linkageName: "_ZN5alloc3ffi5c_str7CString28_from_vec_with_nul_unchecked17h55cdf3b035099001E", scope: !404, file: !398, line: 635, type: !10195, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!10253 = !{!10254}
!10254 = !DILocalVariable(name: "v", arg: 1, scope: !10251, file: !398, line: 635, type: !182)
!10255 = !DILocation(line: 635, column: 44, scope: !10251)
!10256 = !DILocation(line: 636, column: 25, scope: !10251)
!10257 = !DILocation(line: 637, column: 6, scope: !10251)
!10258 = distinct !DISubprogram(name: "as_c_str", linkageName: "_ZN5alloc3ffi5c_str7CString8as_c_str17hfb3641ecc152d7d9E", scope: !404, file: !398, line: 581, type: !10259, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10261, retainedNodes: !10262)
!10259 = !DISubroutineType(types: !10260)
!10260 = !{!411, !10093}
!10261 = !DISubprogram(name: "as_c_str", linkageName: "_ZN5alloc3ffi5c_str7CString8as_c_str17hfb3641ecc152d7d9E", scope: !404, file: !398, line: 581, type: !10259, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!10262 = !{!10263}
!10263 = !DILocalVariable(name: "self", arg: 1, scope: !10258, file: !398, line: 581, type: !10093)
!10264 = !DILocation(line: 581, column: 21, scope: !10258)
!10265 = !DILocation(line: 582, column: 59, scope: !10258)
!10266 = !DILocation(line: 582, column: 18, scope: !10258)
!10267 = !DILocation(line: 583, column: 6, scope: !10258)
!10268 = distinct !DISubprogram(name: "from_raw", linkageName: "_ZN5alloc3ffi5c_str7CString8from_raw17h86e3a4d9cec3a165E", scope: !404, file: !398, line: 397, type: !10269, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10271, retainedNodes: !10272)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{!404, !3342}
!10271 = !DISubprogram(name: "from_raw", linkageName: "_ZN5alloc3ffi5c_str7CString8from_raw17h86e3a4d9cec3a165E", scope: !404, file: !398, line: 397, type: !10269, scopeLine: 397, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10272 = !{!10273, !10274, !10276}
!10273 = !DILocalVariable(name: "ptr", arg: 1, scope: !10268, file: !398, line: 397, type: !3342)
!10274 = !DILocalVariable(name: "len", scope: !10275, file: !398, line: 408, type: !9, align: 32)
!10275 = distinct !DILexicalBlock(scope: !10268, file: !398, line: 408, column: 13)
!10276 = !DILocalVariable(name: "slice", scope: !10277, file: !398, line: 409, type: !7681, align: 32)
!10277 = distinct !DILexicalBlock(scope: !10275, file: !398, line: 409, column: 13)
!10278 = !DILocation(line: 397, column: 28, scope: !10268)
!10279 = !DILocation(line: 408, column: 23, scope: !10268)
!10280 = !DILocation(line: 408, column: 17, scope: !10275)
!10281 = !DILocation(line: 409, column: 25, scope: !10275)
!10282 = !DILocation(line: 409, column: 17, scope: !10277)
!10283 = !DILocation(line: 410, column: 30, scope: !10277)
!10284 = !DILocation(line: 412, column: 6, scope: !10268)
!10285 = distinct !DISubprogram(name: "nul_position", linkageName: "_ZN5alloc3ffi5c_str8NulError12nul_position17h57a8f2561db9a58fE", scope: !10286, file: !398, line: 1001, type: !10290, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10293, retainedNodes: !10294)
!10286 = !DICompositeType(tag: DW_TAG_structure_type, name: "NulError", scope: !400, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !10287, templateParams: !21, identifier: "c26b93e2eca0c6fbcffb0d0b8a12024")
!10287 = !{!10288, !10289}
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10286, file: !2, baseType: !9, size: 32, align: 32, offset: 96, flags: DIFlagPrivate)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !10286, file: !2, baseType: !182, size: 96, align: 32, flags: DIFlagPrivate)
!10290 = !DISubroutineType(types: !10291)
!10291 = !{!9, !10292}
!10292 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::ffi::c_str::NulError", baseType: !10286, size: 32, align: 32, dwarfAddressSpace: 0)
!10293 = !DISubprogram(name: "nul_position", linkageName: "_ZN5alloc3ffi5c_str8NulError12nul_position17h57a8f2561db9a58fE", scope: !10286, file: !398, line: 1001, type: !10290, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10294 = !{!10295}
!10295 = !DILocalVariable(name: "self", arg: 1, scope: !10285, file: !398, line: 1001, type: !10292)
!10296 = !DILocation(line: 1001, column: 25, scope: !10285)
!10297 = !DILocation(line: 1002, column: 9, scope: !10285)
!10298 = !DILocation(line: 1003, column: 6, scope: !10285)
!10299 = distinct !DISubprogram(name: "into_vec", linkageName: "_ZN5alloc3ffi5c_str8NulError8into_vec17hf70ac2b71f003851E", scope: !10286, file: !398, line: 1018, type: !10300, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !10302, retainedNodes: !10303)
!10300 = !DISubroutineType(types: !10301)
!10301 = !{!182, !10286}
!10302 = !DISubprogram(name: "into_vec", linkageName: "_ZN5alloc3ffi5c_str8NulError8into_vec17hf70ac2b71f003851E", scope: !10286, file: !398, line: 1018, type: !10300, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!10303 = !{!10304}
!10304 = !DILocalVariable(name: "self", arg: 1, scope: !10299, file: !398, line: 1018, type: !10286)
!10305 = !DILocation(line: 1018, column: 21, scope: !10299)
!10306 = !DILocation(line: 1019, column: 9, scope: !10299)
!10307 = !DILocation(line: 1020, column: 6, scope: !10299)
!10308 = distinct !DISubprogram(name: "format_inner", linkageName: "_ZN5alloc3fmt6format12format_inner17h86b286e24ffde914E", scope: !10310, file: !10309, line: 645, type: !10312, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10314)
!10309 = !DIFile(filename: "src/fmt.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "0eccf7186ccca79740d8663a480102e3")
!10310 = !DINamespace(name: "format", scope: !10311)
!10311 = !DINamespace(name: "fmt", scope: !132)
!10312 = !DISubroutineType(types: !10313)
!10313 = !{!178, !2384}
!10314 = !{!10315, !10316, !10318}
!10315 = !DILocalVariable(name: "args", arg: 1, scope: !10308, file: !10309, line: 645, type: !2384)
!10316 = !DILocalVariable(name: "capacity", scope: !10317, file: !10309, line: 646, type: !9, align: 32)
!10317 = distinct !DILexicalBlock(scope: !10308, file: !10309, line: 646, column: 9)
!10318 = !DILocalVariable(name: "output", scope: !10319, file: !10309, line: 647, type: !178, align: 32)
!10319 = distinct !DILexicalBlock(scope: !10317, file: !10309, line: 647, column: 9)
!10320 = !DILocation(line: 645, column: 21, scope: !10308)
!10321 = !DILocation(line: 647, column: 13, scope: !10319)
!10322 = !DILocation(line: 646, column: 29, scope: !10308)
!10323 = !DILocation(line: 646, column: 13, scope: !10317)
!10324 = !DILocation(line: 647, column: 26, scope: !10317)
!10325 = !DILocation(line: 648, column: 9, scope: !10319)
!10326 = !DILocation(line: 649, column: 14, scope: !10319)
!10327 = !DILocation(line: 650, column: 14, scope: !10319)
!10328 = !DILocation(line: 651, column: 9, scope: !10319)
!10329 = !DILocation(line: 652, column: 6, scope: !10308)
!10330 = distinct !DISubprogram(name: "convert_while_ascii", linkageName: "_ZN5alloc3str19convert_while_ascii17h247351e9b033564eE", scope: !655, file: !10331, line: 634, type: !10332, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10339)
!10331 = !DIFile(filename: "src/str.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "9d5a63f2fc25284173abb83d04f8df92")
!10332 = !DISubroutineType(types: !10333)
!10333 = !{!10334, !124, !10338}
!10334 = !DICompositeType(tag: DW_TAG_structure_type, name: "(alloc::string::String, &str)", file: !2, size: 160, align: 32, elements: !10335, templateParams: !21, identifier: "6f0427a36fe116cb2d3ffccfb650d454")
!10335 = !{!10336, !10337}
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10334, file: !2, baseType: !178, size: 96, align: 32)
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !10334, file: !2, baseType: !124, size: 64, align: 32, offset: 96)
!10338 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&u8) -> u8", baseType: !2767, size: 32, align: 32, dwarfAddressSpace: 0)
!10339 = !{!10340, !10341, !10342, !10344, !10346, !10348, !10350, !10355, !10357, !10359, !10361, !10363, !10365, !10367, !10369, !10371}
!10340 = !DILocalVariable(name: "s", arg: 1, scope: !10330, file: !10331, line: 634, type: !124)
!10341 = !DILocalVariable(name: "convert", arg: 2, scope: !10330, file: !10331, line: 634, type: !10338)
!10342 = !DILocalVariable(name: "slice", scope: !10343, file: !10331, line: 641, type: !432, align: 32)
!10343 = distinct !DILexicalBlock(scope: !10330, file: !10331, line: 641, column: 5)
!10344 = !DILocalVariable(name: "out", scope: !10345, file: !10331, line: 642, type: !182, align: 32)
!10345 = distinct !DILexicalBlock(scope: !10343, file: !10331, line: 642, column: 5)
!10346 = !DILocalVariable(name: "out_slice", scope: !10347, file: !10331, line: 643, type: !7438, align: 32)
!10347 = distinct !DILexicalBlock(scope: !10345, file: !10331, line: 643, column: 5)
!10348 = !DILocalVariable(name: "ascii_prefix_len", scope: !10349, file: !10331, line: 645, type: !9, align: 32)
!10349 = distinct !DILexicalBlock(scope: !10347, file: !10331, line: 645, column: 5)
!10350 = !DILocalVariable(name: "is_ascii", scope: !10351, file: !10331, line: 646, type: !10352, align: 8)
!10351 = distinct !DILexicalBlock(scope: !10349, file: !10331, line: 646, column: 5)
!10352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !643, size: 128, align: 8, elements: !10353)
!10353 = !{!10354}
!10354 = !DISubrange(count: 16, lowerBound: 0)
!10355 = !DILocalVariable(name: "chunk", scope: !10356, file: !10331, line: 650, type: !432, align: 32)
!10356 = distinct !DILexicalBlock(scope: !10351, file: !10331, line: 650, column: 9)
!10357 = !DILocalVariable(name: "out_chunk", scope: !10358, file: !10331, line: 652, type: !7438, align: 32)
!10358 = distinct !DILexicalBlock(scope: !10356, file: !10331, line: 652, column: 9)
!10359 = !DILocalVariable(name: "iter", scope: !10360, file: !10331, line: 654, type: !1234, align: 32)
!10360 = distinct !DILexicalBlock(scope: !10358, file: !10331, line: 654, column: 9)
!10361 = !DILocalVariable(name: "j", scope: !10362, file: !10331, line: 654, type: !9, align: 32)
!10362 = distinct !DILexicalBlock(scope: !10360, file: !10331, line: 654, column: 23)
!10363 = !DILocalVariable(name: "iter", scope: !10364, file: !10331, line: 666, type: !1234, align: 32)
!10364 = distinct !DILexicalBlock(scope: !10358, file: !10331, line: 666, column: 9)
!10365 = !DILocalVariable(name: "j", scope: !10366, file: !10331, line: 666, type: !9, align: 32)
!10366 = distinct !DILexicalBlock(scope: !10364, file: !10331, line: 666, column: 23)
!10367 = !DILocalVariable(name: "byte", scope: !10368, file: !10331, line: 677, type: !24, align: 8)
!10368 = distinct !DILexicalBlock(scope: !10351, file: !10331, line: 677, column: 9)
!10369 = !DILocalVariable(name: "ascii_string", scope: !10370, file: !10331, line: 695, type: !178, align: 32)
!10370 = distinct !DILexicalBlock(scope: !10351, file: !10331, line: 695, column: 9)
!10371 = !DILocalVariable(name: "rest", scope: !10372, file: !10331, line: 699, type: !124, align: 32)
!10372 = distinct !DILexicalBlock(scope: !10370, file: !10331, line: 699, column: 9)
!10373 = !DILocation(line: 634, column: 28, scope: !10330)
!10374 = !DILocation(line: 634, column: 37, scope: !10330)
!10375 = !DILocation(line: 641, column: 9, scope: !10343)
!10376 = !DILocation(line: 642, column: 9, scope: !10345)
!10377 = !DILocation(line: 643, column: 9, scope: !10347)
!10378 = !DILocation(line: 645, column: 9, scope: !10349)
!10379 = !DILocation(line: 646, column: 9, scope: !10351)
!10380 = !DILocation(line: 654, column: 18, scope: !10360)
!10381 = !DILocation(line: 666, column: 18, scope: !10364)
!10382 = !DILocation(line: 677, column: 13, scope: !10368)
!10383 = !DILocation(line: 695, column: 13, scope: !10370)
!10384 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !10385)
!10385 = distinct !DILocation(line: 641, column: 23, scope: !10330)
!10386 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !10385)
!10387 = !DILocation(line: 641, column: 23, scope: !10330)
!10388 = !DILocation(line: 642, column: 38, scope: !10343)
!10389 = !DILocation(line: 642, column: 19, scope: !10343)
!10390 = !DILocation(line: 643, column: 29, scope: !10345)
!10391 = !DILocation(line: 645, column: 32, scope: !10347)
!10392 = !DILocation(line: 646, column: 24, scope: !10349)
!10393 = !DILocation(line: 648, column: 5, scope: !10351)
!10394 = !DILocation(line: 648, column: 11, scope: !10351)
!10395 = !DILocation(line: 676, column: 11, scope: !10351)
!10396 = !DILocation(line: 650, column: 30, scope: !10351)
!10397 = !DILocation(line: 650, column: 36, scope: !10351)
!10398 = !DILocation(line: 650, column: 13, scope: !10356)
!10399 = !DILocation(line: 652, column: 34, scope: !10356)
!10400 = !DILocation(line: 652, column: 44, scope: !10356)
!10401 = !DILocation(line: 652, column: 13, scope: !10358)
!10402 = !DILocation(line: 654, column: 18, scope: !10358)
!10403 = !DILocation(line: 654, column: 9, scope: !10360)
!10404 = !DILocation(line: 654, column: 13, scope: !10360)
!10405 = !DILocation(line: 654, column: 13, scope: !10362)
!10406 = !DILocation(line: 655, column: 27, scope: !10362)
!10407 = !DILocation(line: 662, column: 21, scope: !10358)
!10408 = !DILocation(line: 662, column: 28, scope: !10358)
!10409 = !DILocation(line: 662, column: 46, scope: !10358)
!10410 = !DILocation(line: 662, column: 12, scope: !10358)
!10411 = !DILocation(line: 666, column: 18, scope: !10358)
!10412 = !DILocation(line: 666, column: 9, scope: !10364)
!10413 = !DILocation(line: 666, column: 13, scope: !10364)
!10414 = !DILocation(line: 666, column: 13, scope: !10366)
!10415 = !DILocation(line: 667, column: 54, scope: !10366)
!10416 = !DILocation(line: 670, column: 9, scope: !10358)
!10417 = !DILocation(line: 671, column: 26, scope: !10358)
!10418 = !DILocation(line: 671, column: 32, scope: !10358)
!10419 = !DILocation(line: 671, column: 9, scope: !10358)
!10420 = !DILocation(line: 672, column: 30, scope: !10358)
!10421 = !DILocation(line: 672, column: 40, scope: !10358)
!10422 = !DILocation(line: 672, column: 9, scope: !10358)
!10423 = !DILocation(line: 667, column: 53, scope: !10366)
!10424 = !DILocation(line: 667, column: 45, scope: !10366)
!10425 = !DILocalVariable(name: "val", arg: 1, scope: !10426, file: !10427, line: 308, type: !24)
!10426 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17h440b69bce004ad7eE", scope: !1333, file: !10427, line: 308, type: !10428, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !10430, retainedNodes: !10431)
!10427 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/mem/maybe_uninit.rs", directory: "", checksumkind: CSK_MD5, checksum: "6de2d108794a3cb7d570256a1615f222")
!10428 = !DISubroutineType(types: !10429)
!10429 = !{!1333, !24}
!10430 = !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem12maybe_uninit20MaybeUninit$LT$T$GT$3new17h440b69bce004ad7eE", scope: !1333, file: !10427, line: 308, type: !10428, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!10431 = !{!10425}
!10432 = !DILocation(line: 308, column: 22, scope: !10426, inlinedAt: !10433)
!10433 = distinct !DILocation(line: 667, column: 28, scope: !10366)
!10434 = !DILocalVariable(name: "value", arg: 1, scope: !10435, file: !9646, line: 181, type: !24)
!10435 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h1cbd1d2cef7502ffE", scope: !1338, file: !9646, line: 181, type: !10436, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !10438, retainedNodes: !10439)
!10436 = !DISubroutineType(types: !10437)
!10437 = !{!1338, !24}
!10438 = !DISubprogram(name: "new<u8>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h1cbd1d2cef7502ffE", scope: !1338, file: !9646, line: 181, type: !10436, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!10439 = !{!10434}
!10440 = !DILocation(line: 181, column: 22, scope: !10435, inlinedAt: !10441)
!10441 = distinct !DILocation(line: 309, column: 30, scope: !10426, inlinedAt: !10433)
!10442 = !DILocation(line: 667, column: 13, scope: !10366)
!10443 = !DILocation(line: 692, column: 21, scope: !10351)
!10444 = !DILocation(line: 692, column: 13, scope: !10351)
!10445 = !DILocation(line: 695, column: 56, scope: !10351)
!10446 = !DILocation(line: 695, column: 28, scope: !10351)
!10447 = !DILocation(line: 699, column: 51, scope: !10370)
!10448 = !DILocation(line: 699, column: 20, scope: !10370)
!10449 = !DILocation(line: 699, column: 13, scope: !10372)
!10450 = !DILocation(line: 701, column: 9, scope: !10372)
!10451 = !DILocation(line: 703, column: 2, scope: !10330)
!10452 = !DILocation(line: 677, column: 20, scope: !10351)
!10453 = !DILocation(line: 678, column: 12, scope: !10368)
!10454 = !DILocation(line: 683, column: 64, scope: !10368)
!10455 = !DILocation(line: 308, column: 22, scope: !10426, inlinedAt: !10456)
!10456 = distinct !DILocation(line: 683, column: 47, scope: !10368)
!10457 = !DILocation(line: 181, column: 22, scope: !10435, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 309, column: 30, scope: !10426, inlinedAt: !10456)
!10459 = !DILocation(line: 683, column: 14, scope: !10368)
!10460 = !DILocation(line: 683, column: 24, scope: !10368)
!10461 = !DILocation(line: 683, column: 13, scope: !10368)
!10462 = !DILocation(line: 685, column: 9, scope: !10368)
!10463 = !DILocation(line: 686, column: 26, scope: !10368)
!10464 = !DILocation(line: 686, column: 32, scope: !10368)
!10465 = !DILocation(line: 686, column: 9, scope: !10368)
!10466 = !DILocation(line: 687, column: 30, scope: !10368)
!10467 = !DILocation(line: 687, column: 40, scope: !10368)
!10468 = !DILocation(line: 687, column: 9, scope: !10368)
!10469 = !DILocation(line: 676, column: 5, scope: !10351)
!10470 = !DILocation(line: 655, column: 13, scope: !10362)
!10471 = !DILocation(line: 0, scope: !10472)
!10472 = !DILexicalBlockFile(scope: !10330, file: !4885, discriminator: 0)
!10473 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc3str19convert_while_ascii28_$u7b$$u7b$closure$u7d$$u7d$17h3d80ddc3b3c51e89E", scope: !654, file: !10331, line: 662, type: !10474, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10477)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{!24, !10476, !651}
!10476 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::str::convert_while_ascii::{closure_env#0}", baseType: !653, size: 32, align: 32, dwarfAddressSpace: 0)
!10477 = !{!10478, !10479}
!10478 = !DILocalVariable(name: "x", arg: 2, scope: !10473, file: !10331, line: 662, type: !651)
!10479 = !DILocalVariable(arg: 1, scope: !10473, file: !10331, line: 662, type: !10476)
!10480 = !DILocation(line: 662, column: 32, scope: !10473)
!10481 = !DILocation(line: 662, column: 33, scope: !10473)
!10482 = !DILocation(line: 662, column: 36, scope: !10473)
!10483 = !DILocation(line: 662, column: 44, scope: !10473)
!10484 = distinct !DISubprogram(name: "into_string", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$11into_string17hbdbf9a1951d573f4E", scope: !1420, file: !10331, line: 500, type: !10485, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10491)
!10485 = !DISubroutineType(types: !10486)
!10486 = !{!178, !10487}
!10487 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<str, alloc::alloc::Global>", file: !2, size: 64, align: 32, elements: !10488, templateParams: !21, identifier: "1484c8c348a1f5826ccc309a9e47178b")
!10488 = !{!10489, !10490}
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !10487, file: !2, baseType: !127, size: 32, align: 32)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10487, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!10491 = !{!10492, !10493}
!10492 = !DILocalVariable(name: "self", arg: 1, scope: !10484, file: !10331, line: 500, type: !10487)
!10493 = !DILocalVariable(name: "slice", scope: !10494, file: !10331, line: 501, type: !407, align: 32)
!10494 = distinct !DILexicalBlock(scope: !10484, file: !10331, line: 501, column: 9)
!10495 = !DILocation(line: 500, column: 24, scope: !10484)
!10496 = !DILocation(line: 501, column: 21, scope: !10484)
!10497 = !DILocation(line: 501, column: 13, scope: !10494)
!10498 = !DILocation(line: 502, column: 52, scope: !10494)
!10499 = !DILocation(line: 502, column: 18, scope: !10494)
!10500 = !DILocation(line: 503, column: 6, scope: !10484)
!10501 = distinct !DISubprogram(name: "to_lowercase", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase17h27e40ddb7db006c1E", scope: !1420, file: !10331, line: 380, type: !10502, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10504)
!10502 = !DISubroutineType(types: !10503)
!10503 = !{!178, !124}
!10504 = !{!10505, !10506, !10508, !10509, !10511, !10513, !10515, !10516, !10518, !10520, !10522, !10523, !10525, !10526}
!10505 = !DILocalVariable(name: "self", arg: 1, scope: !10501, file: !10331, line: 380, type: !124)
!10506 = !DILocalVariable(name: "s", scope: !10507, file: !10331, line: 381, type: !178, align: 32)
!10507 = distinct !DILexicalBlock(scope: !10501, file: !10331, line: 381, column: 9)
!10508 = !DILocalVariable(name: "rest", scope: !10507, file: !10331, line: 381, type: !124, align: 32)
!10509 = !DILocalVariable(name: "prefix_len", scope: !10510, file: !10331, line: 383, type: !9, align: 32)
!10510 = distinct !DILexicalBlock(scope: !10507, file: !10331, line: 383, column: 9)
!10511 = !DILocalVariable(name: "iter", scope: !10512, file: !10331, line: 385, type: !4918, align: 32)
!10512 = distinct !DILexicalBlock(scope: !10510, file: !10331, line: 385, column: 9)
!10513 = !DILocalVariable(name: "i", scope: !10514, file: !10331, line: 385, type: !9, align: 32)
!10514 = distinct !DILexicalBlock(scope: !10512, file: !10331, line: 385, column: 43)
!10515 = !DILocalVariable(name: "c", scope: !10514, file: !10331, line: 385, type: !574, align: 32)
!10516 = !DILocalVariable(name: "sigma_lowercase", scope: !10517, file: !10331, line: 392, type: !574, align: 32)
!10517 = distinct !DILexicalBlock(scope: !10514, file: !10331, line: 392, column: 17)
!10518 = !DILocalVariable(name: "a", scope: !10519, file: !10331, line: 396, type: !574, align: 32)
!10519 = distinct !DILexicalBlock(scope: !10514, file: !10331, line: 396, column: 21)
!10520 = !DILocalVariable(name: "a", scope: !10521, file: !10331, line: 397, type: !574, align: 32)
!10521 = distinct !DILexicalBlock(scope: !10514, file: !10331, line: 397, column: 21)
!10522 = !DILocalVariable(name: "b", scope: !10521, file: !10331, line: 397, type: !574, align: 32)
!10523 = !DILocalVariable(name: "a", scope: !10524, file: !10331, line: 401, type: !574, align: 32)
!10524 = distinct !DILexicalBlock(scope: !10514, file: !10331, line: 401, column: 21)
!10525 = !DILocalVariable(name: "b", scope: !10524, file: !10331, line: 401, type: !574, align: 32)
!10526 = !DILocalVariable(name: "c", scope: !10524, file: !10331, line: 401, type: !574, align: 32)
!10527 = !DILocation(line: 380, column: 25, scope: !10501)
!10528 = !DILocation(line: 381, column: 14, scope: !10507)
!10529 = !DILocation(line: 385, column: 23, scope: !10512)
!10530 = !DILocation(line: 381, column: 29, scope: !10501)
!10531 = !DILocation(line: 381, column: 14, scope: !10501)
!10532 = !DILocation(line: 381, column: 21, scope: !10501)
!10533 = !DILocation(line: 381, column: 21, scope: !10507)
!10534 = !DILocation(line: 383, column: 28, scope: !10507)
!10535 = !DILocation(line: 383, column: 13, scope: !10510)
!10536 = !DILocation(line: 385, column: 28, scope: !10510)
!10537 = !DILocation(line: 385, column: 23, scope: !10510)
!10538 = !DILocation(line: 385, column: 9, scope: !10512)
!10539 = !DILocation(line: 385, column: 14, scope: !10512)
!10540 = !DILocation(line: 385, column: 14, scope: !10514)
!10541 = !DILocation(line: 385, column: 17, scope: !10512)
!10542 = !DILocation(line: 385, column: 17, scope: !10514)
!10543 = !DILocation(line: 386, column: 16, scope: !10514)
!10544 = !DILocation(line: 409, column: 16, scope: !10510)
!10545 = !DILocation(line: 426, column: 6, scope: !10501)
!10546 = !DILocation(line: 392, column: 65, scope: !10514)
!10547 = !DILocation(line: 395, column: 23, scope: !10514)
!10548 = !DILocation(line: 395, column: 17, scope: !10514)
!10549 = !DILocation(line: 392, column: 39, scope: !10514)
!10550 = !DILocation(line: 392, column: 21, scope: !10517)
!10551 = !DILocation(line: 393, column: 19, scope: !10517)
!10552 = !DILocation(line: 396, column: 22, scope: !10514)
!10553 = !DILocation(line: 396, column: 22, scope: !10519)
!10554 = !DILocation(line: 396, column: 39, scope: !10519)
!10555 = !DILocation(line: 397, column: 22, scope: !10514)
!10556 = !DILocation(line: 397, column: 22, scope: !10521)
!10557 = !DILocation(line: 397, column: 25, scope: !10514)
!10558 = !DILocation(line: 397, column: 25, scope: !10521)
!10559 = !DILocation(line: 398, column: 27, scope: !10521)
!10560 = !DILocation(line: 399, column: 27, scope: !10521)
!10561 = !DILocation(line: 401, column: 22, scope: !10514)
!10562 = !DILocation(line: 401, column: 22, scope: !10524)
!10563 = !DILocation(line: 401, column: 25, scope: !10514)
!10564 = !DILocation(line: 401, column: 25, scope: !10524)
!10565 = !DILocation(line: 401, column: 28, scope: !10514)
!10566 = !DILocation(line: 401, column: 28, scope: !10524)
!10567 = !DILocation(line: 402, column: 27, scope: !10524)
!10568 = !DILocation(line: 403, column: 27, scope: !10524)
!10569 = !DILocation(line: 404, column: 27, scope: !10524)
!10570 = distinct !DISubprogram(name: "map_uppercase_sigma", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase19map_uppercase_sigma17h0d0732ef0aaa22b8E", scope: !1419, file: !10331, line: 411, type: !10571, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10573)
!10571 = !DISubroutineType(types: !10572)
!10572 = !{!574, !124, !9}
!10573 = !{!10574, !10575, !10576}
!10574 = !DILocalVariable(name: "from", arg: 1, scope: !10570, file: !10331, line: 411, type: !124)
!10575 = !DILocalVariable(name: "i", arg: 2, scope: !10570, file: !10331, line: 411, type: !9)
!10576 = !DILocalVariable(name: "is_word_final", scope: !10577, file: !10331, line: 415, type: !643, align: 8)
!10577 = distinct !DILexicalBlock(scope: !10570, file: !10331, line: 415, column: 13)
!10578 = !DILocation(line: 411, column: 32, scope: !10570)
!10579 = !DILocation(line: 411, column: 44, scope: !10570)
!10580 = !DILocation(line: 415, column: 17, scope: !10577)
!10581 = !DILocation(line: 414, column: 32, scope: !10570)
!10582 = !DILocation(line: 414, column: 27, scope: !10570)
!10583 = !DILocation(line: 415, column: 63, scope: !10570)
!10584 = !DILocation(line: 415, column: 69, scope: !10570)
!10585 = !DILocation(line: 415, column: 77, scope: !10570)
!10586 = !DILocation(line: 415, column: 33, scope: !10570)
!10587 = !DILocation(line: 414, column: 13, scope: !10570)
!10588 = !DILocation(line: 416, column: 52, scope: !10570)
!10589 = !DILocation(line: 417, column: 16, scope: !10577)
!10590 = !DILocation(line: 416, column: 51, scope: !10570)
!10591 = !DILocation(line: 416, column: 61, scope: !10570)
!10592 = !DILocation(line: 416, column: 21, scope: !10570)
!10593 = !DILocation(line: 416, column: 20, scope: !10570)
!10594 = !DILocation(line: 417, column: 46, scope: !10577)
!10595 = !DILocation(line: 417, column: 13, scope: !10577)
!10596 = !DILocation(line: 417, column: 32, scope: !10577)
!10597 = !DILocation(line: 418, column: 10, scope: !10570)
!10598 = distinct !DISubprogram(name: "case_ignorable_then_cased<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17h7a0f16609c93e4c1E", scope: !1419, file: !10331, line: 420, type: !10599, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !10605, retainedNodes: !10601)
!10599 = !DISubroutineType(types: !10600)
!10600 = !{!643, !1397}
!10601 = !{!10602, !10603}
!10602 = !DILocalVariable(name: "iter", arg: 1, scope: !10598, file: !10331, line: 420, type: !1397)
!10603 = !DILocalVariable(name: "c", scope: !10604, file: !10331, line: 422, type: !574, align: 32)
!10604 = distinct !DILexicalBlock(scope: !10598, file: !10331, line: 422, column: 17)
!10605 = !{!1422}
!10606 = !DILocation(line: 420, column: 64, scope: !10598)
!10607 = !DILocation(line: 421, column: 24, scope: !10598)
!10608 = !DILocation(line: 421, column: 63, scope: !10598)
!10609 = !DILocation(line: 421, column: 19, scope: !10598)
!10610 = !DILocation(line: 421, column: 13, scope: !10598)
!10611 = !DILocation(line: 422, column: 22, scope: !10598)
!10612 = !DILocation(line: 422, column: 22, scope: !10604)
!10613 = !DILocation(line: 422, column: 30, scope: !10604)
!10614 = !DILocation(line: 423, column: 25, scope: !10598)
!10615 = !DILocation(line: 425, column: 10, scope: !10598)
!10616 = distinct !DISubprogram(name: "case_ignorable_then_cased<core::str::iter::Chars>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased17h9c8d1db5fcc39ba4E", scope: !1419, file: !10331, line: 420, type: !10617, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !10623, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!643, !1401}
!10619 = !{!10620, !10621}
!10620 = !DILocalVariable(name: "iter", arg: 1, scope: !10616, file: !10331, line: 420, type: !1401)
!10621 = !DILocalVariable(name: "c", scope: !10622, file: !10331, line: 422, type: !574, align: 32)
!10622 = distinct !DILexicalBlock(scope: !10616, file: !10331, line: 422, column: 17)
!10623 = !{!1451}
!10624 = !DILocation(line: 420, column: 64, scope: !10616)
!10625 = !DILocation(line: 421, column: 24, scope: !10616)
!10626 = !DILocation(line: 421, column: 63, scope: !10616)
!10627 = !DILocation(line: 421, column: 19, scope: !10616)
!10628 = !DILocation(line: 421, column: 13, scope: !10616)
!10629 = !DILocation(line: 422, column: 22, scope: !10616)
!10630 = !DILocation(line: 422, column: 22, scope: !10622)
!10631 = !DILocation(line: 422, column: 30, scope: !10622)
!10632 = !DILocation(line: 423, column: 25, scope: !10616)
!10633 = !DILocation(line: 425, column: 10, scope: !10616)
!10634 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h147f58b0431ce64fE", scope: !1418, file: !10331, line: 421, type: !10635, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !10605, retainedNodes: !10637)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{!643, !1431, !1504}
!10637 = !{!10638, !10640, !10641}
!10638 = !DILocalVariable(name: "c", scope: !10639, file: !10331, line: 421, type: !574, align: 32)
!10639 = distinct !DILexicalBlock(scope: !10634, file: !10331, line: 421, column: 40)
!10640 = !DILocalVariable(arg: 1, scope: !10634, file: !10331, line: 421, type: !1431)
!10641 = !DILocalVariable(arg: 2, scope: !10634, file: !10331, line: 421, type: !1504)
!10642 = !DILocation(line: 421, column: 35, scope: !10634)
!10643 = !DILocation(line: 421, column: 36, scope: !10634)
!10644 = !DILocation(line: 421, column: 37, scope: !10634)
!10645 = !DILocation(line: 421, column: 37, scope: !10639)
!10646 = !DILocation(line: 421, column: 42, scope: !10639)
!10647 = !DILocation(line: 421, column: 61, scope: !10634)
!10648 = distinct !DISubprogram(name: "{closure#0}<core::str::iter::Chars>", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_lowercase25case_ignorable_then_cased28_$u7b$$u7b$closure$u7d$$u7d$17h775e7e2c581a2f52E", scope: !1418, file: !10331, line: 421, type: !10649, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !10623, retainedNodes: !10651)
!10649 = !DISubroutineType(types: !10650)
!10650 = !{!643, !1459, !1504}
!10651 = !{!10652, !10654, !10655}
!10652 = !DILocalVariable(name: "c", scope: !10653, file: !10331, line: 421, type: !574, align: 32)
!10653 = distinct !DILexicalBlock(scope: !10648, file: !10331, line: 421, column: 40)
!10654 = !DILocalVariable(arg: 1, scope: !10648, file: !10331, line: 421, type: !1459)
!10655 = !DILocalVariable(arg: 2, scope: !10648, file: !10331, line: 421, type: !1504)
!10656 = !DILocation(line: 421, column: 35, scope: !10648)
!10657 = !DILocation(line: 421, column: 36, scope: !10648)
!10658 = !DILocation(line: 421, column: 37, scope: !10648)
!10659 = !DILocation(line: 421, column: 37, scope: !10653)
!10660 = !DILocation(line: 421, column: 42, scope: !10653)
!10661 = !DILocation(line: 421, column: 61, scope: !10648)
!10662 = distinct !DISubprogram(name: "to_uppercase", linkageName: "_ZN5alloc3str21_$LT$impl$u20$str$GT$12to_uppercase17h9468e9169c888009E", scope: !1420, file: !10331, line: 466, type: !10502, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10663)
!10663 = !{!10664, !10665, !10667, !10668, !10670, !10672, !10674, !10676, !10677, !10679, !10680}
!10664 = !DILocalVariable(name: "self", arg: 1, scope: !10662, file: !10331, line: 466, type: !124)
!10665 = !DILocalVariable(name: "s", scope: !10666, file: !10331, line: 467, type: !178, align: 32)
!10666 = distinct !DILexicalBlock(scope: !10662, file: !10331, line: 467, column: 9)
!10667 = !DILocalVariable(name: "rest", scope: !10666, file: !10331, line: 467, type: !124, align: 32)
!10668 = !DILocalVariable(name: "iter", scope: !10669, file: !10331, line: 469, type: !1401, align: 32)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !10331, line: 469, column: 9)
!10670 = !DILocalVariable(name: "c", scope: !10671, file: !10331, line: 469, type: !574, align: 32)
!10671 = distinct !DILexicalBlock(scope: !10669, file: !10331, line: 469, column: 31)
!10672 = !DILocalVariable(name: "a", scope: !10673, file: !10331, line: 471, type: !574, align: 32)
!10673 = distinct !DILexicalBlock(scope: !10671, file: !10331, line: 471, column: 17)
!10674 = !DILocalVariable(name: "a", scope: !10675, file: !10331, line: 472, type: !574, align: 32)
!10675 = distinct !DILexicalBlock(scope: !10671, file: !10331, line: 472, column: 17)
!10676 = !DILocalVariable(name: "b", scope: !10675, file: !10331, line: 472, type: !574, align: 32)
!10677 = !DILocalVariable(name: "a", scope: !10678, file: !10331, line: 476, type: !574, align: 32)
!10678 = distinct !DILexicalBlock(scope: !10671, file: !10331, line: 476, column: 17)
!10679 = !DILocalVariable(name: "b", scope: !10678, file: !10331, line: 476, type: !574, align: 32)
!10680 = !DILocalVariable(name: "c", scope: !10678, file: !10331, line: 476, type: !574, align: 32)
!10681 = !DILocation(line: 466, column: 25, scope: !10662)
!10682 = !DILocation(line: 467, column: 14, scope: !10666)
!10683 = !DILocation(line: 469, column: 18, scope: !10669)
!10684 = !DILocation(line: 467, column: 29, scope: !10662)
!10685 = !DILocation(line: 467, column: 14, scope: !10662)
!10686 = !DILocation(line: 467, column: 21, scope: !10662)
!10687 = !DILocation(line: 467, column: 21, scope: !10666)
!10688 = !DILocation(line: 469, column: 23, scope: !10666)
!10689 = !DILocation(line: 469, column: 18, scope: !10666)
!10690 = !DILocation(line: 469, column: 9, scope: !10669)
!10691 = !DILocation(line: 469, column: 13, scope: !10669)
!10692 = !DILocation(line: 469, column: 13, scope: !10671)
!10693 = !DILocation(line: 470, column: 19, scope: !10671)
!10694 = !DILocation(line: 470, column: 13, scope: !10671)
!10695 = !DILocation(line: 483, column: 9, scope: !10666)
!10696 = !DILocation(line: 484, column: 6, scope: !10662)
!10697 = !DILocation(line: 471, column: 18, scope: !10671)
!10698 = !DILocation(line: 471, column: 18, scope: !10673)
!10699 = !DILocation(line: 471, column: 35, scope: !10673)
!10700 = !DILocation(line: 472, column: 18, scope: !10671)
!10701 = !DILocation(line: 472, column: 18, scope: !10675)
!10702 = !DILocation(line: 472, column: 21, scope: !10671)
!10703 = !DILocation(line: 472, column: 21, scope: !10675)
!10704 = !DILocation(line: 473, column: 23, scope: !10675)
!10705 = !DILocation(line: 474, column: 23, scope: !10675)
!10706 = !DILocation(line: 476, column: 18, scope: !10671)
!10707 = !DILocation(line: 476, column: 18, scope: !10678)
!10708 = !DILocation(line: 476, column: 21, scope: !10671)
!10709 = !DILocation(line: 476, column: 21, scope: !10678)
!10710 = !DILocation(line: 476, column: 24, scope: !10671)
!10711 = !DILocation(line: 476, column: 24, scope: !10678)
!10712 = !DILocation(line: 477, column: 23, scope: !10678)
!10713 = !DILocation(line: 478, column: 23, scope: !10678)
!10714 = !DILocation(line: 479, column: 23, scope: !10678)
!10715 = distinct !DISubprogram(name: "from_boxed_utf8_unchecked", linkageName: "_ZN5alloc3str25from_boxed_utf8_unchecked17h4a17908cfa49f8e2E", scope: !655, file: !10331, line: 617, type: !10716, scopeLine: 617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10718)
!10716 = !DISubroutineType(types: !10717)
!10717 = !{!10487, !407}
!10718 = !{!10719}
!10719 = !DILocalVariable(name: "v", arg: 1, scope: !10715, file: !10331, line: 617, type: !407)
!10720 = !DILocation(line: 617, column: 41, scope: !10715)
!10721 = !DILocation(line: 618, column: 28, scope: !10715)
!10722 = !DILocation(line: 618, column: 14, scope: !10715)
!10723 = !DILocation(line: 619, column: 2, scope: !10715)
!10724 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17hb794441537176e61E", scope: !10725, file: !10331, line: 210, type: !10502, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10726)
!10725 = !DINamespace(name: "{impl#4}", scope: !655)
!10726 = !{!10727}
!10727 = !DILocalVariable(name: "self", arg: 1, scope: !10724, file: !10331, line: 210, type: !124)
!10728 = !DILocation(line: 210, column: 17, scope: !10724)
!10729 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !10730)
!10730 = distinct !DILocation(line: 211, column: 51, scope: !10724)
!10731 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !10730)
!10732 = !DILocation(line: 211, column: 51, scope: !10724)
!10733 = !DILocation(line: 211, column: 62, scope: !10724)
!10734 = !DILocation(line: 211, column: 18, scope: !10724)
!10735 = !DILocation(line: 212, column: 6, scope: !10724)
!10736 = distinct !DISubprogram(name: "borrow", linkageName: "_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17h5c7ca20179da90ceE", scope: !10737, file: !10331, line: 191, type: !10738, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10740)
!10737 = !DINamespace(name: "{impl#2}", scope: !655)
!10738 = !DISubroutineType(types: !10739)
!10739 = !{!124, !9373}
!10740 = !{!10741}
!10741 = !DILocalVariable(name: "self", arg: 1, scope: !10736, file: !10331, line: 191, type: !9373)
!10742 = !DILocation(line: 191, column: 15, scope: !10736)
!10743 = !DILocation(line: 192, column: 14, scope: !10736)
!10744 = !DILocation(line: 193, column: 6, scope: !10736)
!10745 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E", scope: !182, file: !10746, line: 518, type: !10747, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !10749, retainedNodes: !10750)
!10746 = !DIFile(filename: "src/vec/mod.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "bd6b74dc7b337b4829bcea9c8e6e7264")
!10747 = !DISubroutineType(types: !10748)
!10748 = !{!182, !9}
!10749 = !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$13with_capacity17hc7fd65f749c7a4d7E", scope: !182, file: !10746, line: 518, type: !10747, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!10750 = !{!10751}
!10751 = !DILocalVariable(name: "capacity", arg: 1, scope: !10745, file: !10746, line: 518, type: !9)
!10752 = !DILocation(line: 518, column: 26, scope: !10745)
!10753 = !DILocation(line: 519, column: 9, scope: !10745)
!10754 = !DILocation(line: 520, column: 6, scope: !10745)
!10755 = distinct !DISubprogram(name: "into_raw_parts<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$14into_raw_parts17h523d483769e29f83E", scope: !182, file: !10746, line: 800, type: !10756, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !10763, retainedNodes: !10764)
!10756 = !DISubroutineType(types: !10757)
!10757 = !{!10758, !182}
!10758 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut u8, usize, usize)", file: !2, size: 96, align: 32, elements: !10759, templateParams: !21, identifier: "8e5146dc6c46b8cc8644e2bcd09719c3")
!10759 = !{!10760, !10761, !10762}
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !10758, file: !2, baseType: !463, size: 32, align: 32)
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !10758, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !10758, file: !2, baseType: !9, size: 32, align: 32, offset: 64)
!10763 = !DISubprogram(name: "into_raw_parts<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$14into_raw_parts17h523d483769e29f83E", scope: !182, file: !10746, line: 800, type: !10756, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!10764 = !{!10765, !10766}
!10765 = !DILocalVariable(name: "self", arg: 1, scope: !10755, file: !10746, line: 800, type: !182)
!10766 = !DILocalVariable(name: "me", scope: !10767, file: !10746, line: 801, type: !10768, align: 32)
!10767 = distinct !DILexicalBlock(scope: !10755, file: !10746, line: 801, column: 9)
!10768 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", scope: !865, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !10769, templateParams: !1742, identifier: "b6a374151fddb46bc6e53c6dfed6c716")
!10769 = !{!10770}
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !10768, file: !2, baseType: !182, size: 96, align: 32, flags: DIFlagPrivate)
!10771 = !DILocation(line: 800, column: 27, scope: !10755)
!10772 = !DILocation(line: 801, column: 13, scope: !10767)
!10773 = !DILocalVariable(name: "value", arg: 1, scope: !10774, file: !9646, line: 181, type: !182)
!10774 = distinct !DISubprogram(name: "new<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h7da2b29078891702E", scope: !10768, file: !9646, line: 181, type: !10775, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, declaration: !10777, retainedNodes: !10778)
!10775 = !DISubroutineType(types: !10776)
!10776 = !{!10768, !182}
!10777 = !DISubprogram(name: "new<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h7da2b29078891702E", scope: !10768, file: !9646, line: 181, type: !10775, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !1742)
!10778 = !{!10773}
!10779 = !DILocation(line: 181, column: 22, scope: !10774, inlinedAt: !10780)
!10780 = distinct !DILocation(line: 801, column: 22, scope: !10755)
!10781 = !DILocation(line: 182, column: 9, scope: !10774, inlinedAt: !10780)
!10782 = !DILocalVariable(name: "self", arg: 1, scope: !10783, file: !9646, line: 279, type: !10787)
!10783 = distinct !DISubprogram(name: "deref_mut<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17ha9a2ec8bb35515c0E", scope: !10784, file: !9646, line: 279, type: !10785, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, retainedNodes: !10788)
!10784 = !DINamespace(name: "{impl#3}", scope: !865)
!10785 = !DISubroutineType(types: !10786)
!10786 = !{!1608, !10787}
!10787 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !10768, size: 32, align: 32, dwarfAddressSpace: 0)
!10788 = !{!10782}
!10789 = !DILocation(line: 279, column: 18, scope: !10783, inlinedAt: !10790)
!10790 = distinct !DILocation(line: 802, column: 10, scope: !10767)
!10791 = !DILocation(line: 802, column: 13, scope: !10767)
!10792 = !DILocalVariable(name: "self", arg: 1, scope: !10793, file: !9646, line: 270, type: !10797)
!10793 = distinct !DISubprogram(name: "deref<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h57eda577cc6c0b70E", scope: !9657, file: !9646, line: 270, type: !10794, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, retainedNodes: !10798)
!10794 = !DISubroutineType(types: !10795)
!10795 = !{!10796, !10797}
!10796 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::vec::Vec<u8, alloc::alloc::Global>", baseType: !182, size: 32, align: 32, dwarfAddressSpace: 0)
!10797 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<u8, alloc::alloc::Global>>", baseType: !10768, size: 32, align: 32, dwarfAddressSpace: 0)
!10798 = !{!10792}
!10799 = !DILocation(line: 270, column: 14, scope: !10793, inlinedAt: !10800)
!10800 = distinct !DILocation(line: 802, column: 27, scope: !10767)
!10801 = !DILocation(line: 802, column: 30, scope: !10767)
!10802 = !DILocation(line: 270, column: 14, scope: !10793, inlinedAt: !10803)
!10803 = distinct !DILocation(line: 802, column: 37, scope: !10767)
!10804 = !DILocation(line: 802, column: 40, scope: !10767)
!10805 = !DILocation(line: 802, column: 9, scope: !10767)
!10806 = !DILocation(line: 803, column: 6, scope: !10755)
!10807 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h8bc511fc2432249cE", scope: !182, file: !10746, line: 459, type: !10808, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !10810)
!10808 = !DISubroutineType(types: !10809)
!10809 = !{!182}
!10810 = !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc3vec12Vec$LT$T$GT$3new17h8bc511fc2432249cE", scope: !182, file: !10746, line: 459, type: !10808, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!10811 = !DILocation(line: 460, column: 20, scope: !10807)
!10812 = !DILocation(line: 460, column: 9, scope: !10807)
!10813 = !DILocation(line: 461, column: 6, scope: !10807)
!10814 = distinct !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE", scope: !182, file: !10746, line: 1814, type: !10815, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10817, retainedNodes: !10818)
!10815 = !DISubroutineType(types: !10816)
!10816 = !{!463, !1608}
!10817 = !DISubprogram(name: "as_mut_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10as_mut_ptr17h0f4d9919cae550ccE", scope: !182, file: !10746, line: 1814, type: !10815, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10818 = !{!10819}
!10819 = !DILocalVariable(name: "self", arg: 1, scope: !10814, file: !10746, line: 1814, type: !1608)
!10820 = !DILocation(line: 1814, column: 29, scope: !10814)
!10821 = !DILocation(line: 1817, column: 18, scope: !10814)
!10822 = !DILocation(line: 1818, column: 6, scope: !10814)
!10823 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$10insert_mut13assert_failed17he5e6a8f0cce1fe1aE", scope: !10824, file: !10746, line: 2100, type: !2968, scopeLine: 2100, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10826)
!10824 = !DINamespace(name: "insert_mut", scope: !10825)
!10825 = !DINamespace(name: "{impl#1}", scope: !183)
!10826 = !{!10827, !10828, !10829, !10832}
!10827 = !DILocalVariable(name: "index", arg: 1, scope: !10823, file: !10746, line: 2100, type: !9)
!10828 = !DILocalVariable(name: "len", arg: 2, scope: !10823, file: !10746, line: 2100, type: !9)
!10829 = !DILocalVariable(name: "args", scope: !10830, file: !10746, line: 2101, type: !8947, align: 32)
!10830 = !DILexicalBlockFile(scope: !10831, file: !10746, discriminator: 0)
!10831 = distinct !DILexicalBlock(scope: !10823, file: !304, line: 62, column: 38)
!10832 = !DILocalVariable(name: "args", scope: !10833, file: !10746, line: 2101, type: !8954, align: 32)
!10833 = !DILexicalBlockFile(scope: !10834, file: !10746, discriminator: 0)
!10834 = distinct !DILexicalBlock(scope: !10831, file: !304, line: 62, column: 38)
!10835 = !DILocation(line: 2100, column: 26, scope: !10823)
!10836 = !DILocation(line: 2100, column: 40, scope: !10823)
!10837 = !DILocation(line: 2101, column: 13, scope: !10833)
!10838 = !DILocation(line: 2101, column: 13, scope: !10823)
!10839 = !DILocation(line: 2101, column: 13, scope: !10830)
!10840 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11swap_remove13assert_failed17h73cf784a59db371dE", scope: !10841, file: !10746, line: 2018, type: !296, scopeLine: 2018, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !10842)
!10841 = !DINamespace(name: "swap_remove", scope: !10825)
!10842 = !{!10843, !10844, !10845, !10848}
!10843 = !DILocalVariable(name: "index", arg: 1, scope: !10840, file: !10746, line: 2018, type: !9)
!10844 = !DILocalVariable(name: "len", arg: 2, scope: !10840, file: !10746, line: 2018, type: !9)
!10845 = !DILocalVariable(name: "args", scope: !10846, file: !10746, line: 2019, type: !8947, align: 32)
!10846 = !DILexicalBlockFile(scope: !10847, file: !10746, discriminator: 0)
!10847 = distinct !DILexicalBlock(scope: !10840, file: !304, line: 62, column: 38)
!10848 = !DILocalVariable(name: "args", scope: !10849, file: !10746, line: 2019, type: !8954, align: 32)
!10849 = !DILexicalBlockFile(scope: !10850, file: !10746, discriminator: 0)
!10850 = distinct !DILexicalBlock(scope: !10847, file: !304, line: 62, column: 38)
!10851 = !DILocation(line: 2018, column: 26, scope: !10840)
!10852 = !DILocation(line: 2018, column: 40, scope: !10840)
!10853 = !DILocation(line: 2019, column: 13, scope: !10849)
!10854 = !DILocation(line: 2019, column: 13, scope: !10840)
!10855 = !DILocation(line: 2019, column: 13, scope: !10846)
!10856 = distinct !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h1eb4e013042aec4aE", scope: !182, file: !10746, line: 1404, type: !10857, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10859, retainedNodes: !10860)
!10857 = !DISubroutineType(types: !10858)
!10858 = !{!1872, !1608, !9}
!10859 = !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$11try_reserve17h1eb4e013042aec4aE", scope: !182, file: !10746, line: 1404, type: !10857, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10860 = !{!10861, !10862}
!10861 = !DILocalVariable(name: "self", arg: 1, scope: !10856, file: !10746, line: 1404, type: !1608)
!10862 = !DILocalVariable(name: "additional", arg: 2, scope: !10856, file: !10746, line: 1404, type: !9)
!10863 = !DILocation(line: 1404, column: 24, scope: !10856)
!10864 = !DILocation(line: 1404, column: 35, scope: !10856)
!10865 = !DILocation(line: 1405, column: 30, scope: !10856)
!10866 = !DILocation(line: 1405, column: 18, scope: !10856)
!10867 = !DILocation(line: 1406, column: 6, scope: !10856)
!10868 = distinct !DISubprogram(name: "as_mut_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h72bca9be0aef2792E", scope: !182, file: !10746, line: 1655, type: !10869, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10871, retainedNodes: !10872)
!10869 = !DISubroutineType(types: !10870)
!10870 = !{!5130, !1608}
!10871 = !DISubprogram(name: "as_mut_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$12as_mut_slice17h72bca9be0aef2792E", scope: !182, file: !10746, line: 1655, type: !10869, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10872 = !{!10873}
!10873 = !DILocalVariable(name: "self", arg: 1, scope: !10868, file: !10746, line: 1655, type: !1608)
!10874 = !DILocation(line: 1655, column: 31, scope: !10868)
!10875 = !DILocation(line: 1669, column: 49, scope: !10868)
!10876 = !DILocation(line: 1669, column: 63, scope: !10868)
!10877 = !DILocation(line: 1669, column: 18, scope: !10868)
!10878 = !DILocation(line: 1670, column: 6, scope: !10868)
!10879 = distinct !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hca79a55e5fecd666E", scope: !182, file: !10746, line: 1367, type: !10880, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10882, retainedNodes: !10883)
!10880 = !DISubroutineType(types: !10881)
!10881 = !{null, !1608, !9}
!10882 = !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13reserve_exact17hca79a55e5fecd666E", scope: !182, file: !10746, line: 1367, type: !10880, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10883 = !{!10884, !10885}
!10884 = !DILocalVariable(name: "self", arg: 1, scope: !10879, file: !10746, line: 1367, type: !1608)
!10885 = !DILocalVariable(name: "additional", arg: 2, scope: !10879, file: !10746, line: 1367, type: !9)
!10886 = !DILocation(line: 1367, column: 26, scope: !10879)
!10887 = !DILocation(line: 1367, column: 37, scope: !10879)
!10888 = !DILocation(line: 1368, column: 32, scope: !10879)
!10889 = !DILocation(line: 1368, column: 18, scope: !10879)
!10890 = !DILocation(line: 1369, column: 6, scope: !10879)
!10891 = distinct !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17h0283fd91ba36fdc0E", scope: !182, file: !10746, line: 1471, type: !10892, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10894, retainedNodes: !10895)
!10892 = !DISubroutineType(types: !10893)
!10893 = !{null, !1608}
!10894 = !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$13shrink_to_fit17h0283fd91ba36fdc0E", scope: !182, file: !10746, line: 1471, type: !10892, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10895 = !{!10896}
!10896 = !DILocalVariable(name: "self", arg: 1, scope: !10891, file: !10746, line: 1471, type: !1608)
!10897 = !DILocation(line: 1471, column: 26, scope: !10891)
!10898 = !DILocation(line: 1475, column: 17, scope: !10891)
!10899 = !DILocation(line: 1475, column: 30, scope: !10891)
!10900 = !DILocation(line: 1475, column: 12, scope: !10891)
!10901 = !DILocation(line: 1478, column: 6, scope: !10891)
!10902 = !DILocation(line: 1476, column: 36, scope: !10891)
!10903 = !DILocation(line: 1476, column: 22, scope: !10891)
!10904 = distinct !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h72af747639aaced0E", scope: !182, file: !10746, line: 2796, type: !10905, scopeLine: 2796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10907, retainedNodes: !10908)
!10905 = !DISubroutineType(types: !10906)
!10906 = !{null, !1608, !1230}
!10907 = !DISubprogram(name: "append_elements<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$15append_elements17h72af747639aaced0E", scope: !182, file: !10746, line: 2796, type: !10905, scopeLine: 2796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10908 = !{!10909, !10910, !10911, !10913}
!10909 = !DILocalVariable(name: "self", arg: 1, scope: !10904, file: !10746, line: 2796, type: !1608)
!10910 = !DILocalVariable(name: "other", arg: 2, scope: !10904, file: !10746, line: 2796, type: !1230)
!10911 = !DILocalVariable(name: "count", scope: !10912, file: !10746, line: 2797, type: !9, align: 32)
!10912 = distinct !DILexicalBlock(scope: !10904, file: !10746, line: 2797, column: 9)
!10913 = !DILocalVariable(name: "len", scope: !10914, file: !10746, line: 2799, type: !9, align: 32)
!10914 = distinct !DILexicalBlock(scope: !10912, file: !10746, line: 2799, column: 9)
!10915 = !DILocation(line: 2796, column: 31, scope: !10904)
!10916 = !DILocation(line: 2796, column: 42, scope: !10904)
!10917 = !DILocation(line: 2797, column: 27, scope: !10904)
!10918 = !DILocation(line: 2797, column: 13, scope: !10912)
!10919 = !DILocation(line: 2798, column: 14, scope: !10912)
!10920 = !DILocation(line: 2799, column: 24, scope: !10912)
!10921 = !DILocation(line: 2799, column: 13, scope: !10914)
!10922 = !DILocation(line: 2800, column: 67, scope: !10914)
!10923 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !10924)
!10924 = distinct !DILocation(line: 2800, column: 80, scope: !10914)
!10925 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !10924)
!10926 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !10924)
!10927 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !10924)
!10928 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !10924)
!10929 = !DILocation(line: 526, column: 44, scope: !459, inlinedAt: !10930)
!10930 = distinct !DILocation(line: 2800, column: 18, scope: !10914)
!10931 = !DILocation(line: 526, column: 59, scope: !459, inlinedAt: !10930)
!10932 = !DILocation(line: 526, column: 72, scope: !459, inlinedAt: !10930)
!10933 = !DILocation(line: 77, column: 35, scope: !472, inlinedAt: !10930)
!10934 = !DILocation(line: 78, column: 17, scope: !472, inlinedAt: !10930)
!10935 = !DILocation(line: 547, column: 14, scope: !459, inlinedAt: !10930)
!10936 = !DILocation(line: 2801, column: 9, scope: !10914)
!10937 = !DILocation(line: 2802, column: 6, scope: !10904)
!10938 = distinct !DISubprogram(name: "into_boxed_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h9a45a2727095a7bbE", scope: !182, file: !10746, line: 1533, type: !10939, scopeLine: 1533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10941, retainedNodes: !10942)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{!407, !182}
!10941 = !DISubprogram(name: "into_boxed_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16into_boxed_slice17h9a45a2727095a7bbE", scope: !182, file: !10746, line: 1533, type: !10939, scopeLine: 1533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10942 = !{!10943, !10944, !10946, !10948}
!10943 = !DILocalVariable(name: "self", arg: 1, scope: !10938, file: !10746, line: 1533, type: !182)
!10944 = !DILocalVariable(name: "me", scope: !10945, file: !10746, line: 1536, type: !10768, align: 32)
!10945 = distinct !DILexicalBlock(scope: !10938, file: !10746, line: 1536, column: 13)
!10946 = !DILocalVariable(name: "buf", scope: !10947, file: !10746, line: 1537, type: !186, align: 32)
!10947 = distinct !DILexicalBlock(scope: !10945, file: !10746, line: 1537, column: 13)
!10948 = !DILocalVariable(name: "len", scope: !10949, file: !10746, line: 1538, type: !9, align: 32)
!10949 = distinct !DILexicalBlock(scope: !10947, file: !10746, line: 1538, column: 13)
!10950 = !DILocation(line: 1533, column: 29, scope: !10938)
!10951 = !DILocation(line: 1536, column: 17, scope: !10945)
!10952 = !DILocation(line: 1535, column: 18, scope: !10938)
!10953 = !DILocation(line: 1536, column: 40, scope: !10938)
!10954 = !DILocation(line: 181, column: 22, scope: !10774, inlinedAt: !10955)
!10955 = distinct !DILocation(line: 1536, column: 22, scope: !10938)
!10956 = !DILocation(line: 182, column: 9, scope: !10774, inlinedAt: !10955)
!10957 = !DILocation(line: 270, column: 14, scope: !10793, inlinedAt: !10958)
!10958 = distinct !DILocation(line: 1537, column: 34, scope: !10945)
!10959 = !DILocation(line: 1537, column: 23, scope: !10945)
!10960 = !DILocation(line: 1537, column: 17, scope: !10947)
!10961 = !DILocation(line: 270, column: 14, scope: !10793, inlinedAt: !10962)
!10962 = distinct !DILocation(line: 1538, column: 23, scope: !10947)
!10963 = !DILocation(line: 1538, column: 26, scope: !10947)
!10964 = !DILocation(line: 1538, column: 17, scope: !10949)
!10965 = !DILocation(line: 1539, column: 17, scope: !10949)
!10966 = !DILocation(line: 1539, column: 31, scope: !10949)
!10967 = !DILocation(line: 1541, column: 6, scope: !10938)
!10968 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h29df3afc943f947fE", scope: !182, file: !10746, line: 928, type: !10969, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10971, retainedNodes: !10972)
!10969 = !DISubroutineType(types: !10970)
!10970 = !{!182, !9, !212}
!10971 = !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$16with_capacity_in17h29df3afc943f947fE", scope: !182, file: !10746, line: 928, type: !10969, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10972 = !{!10973, !10974}
!10973 = !DILocalVariable(name: "capacity", arg: 1, scope: !10968, file: !10746, line: 928, type: !9)
!10974 = !DILocalVariable(name: "alloc", arg: 2, scope: !10968, file: !10746, line: 928, type: !212)
!10975 = !DILocation(line: 928, column: 29, scope: !10968)
!10976 = !DILocation(line: 928, column: 46, scope: !10968)
!10977 = !DILocation(line: 929, column: 20, scope: !10968)
!10978 = !DILocation(line: 929, column: 9, scope: !10968)
!10979 = !DILocation(line: 930, column: 6, scope: !10968)
!10980 = distinct !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE", scope: !182, file: !10746, line: 3324, type: !10981, scopeLine: 3324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10983, retainedNodes: !10984)
!10981 = !DISubroutineType(types: !10982)
!10982 = !{null, !1608, !432}
!10983 = !DISubprogram(name: "extend_from_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h52fc7b956817649bE", scope: !182, file: !10746, line: 3324, type: !10981, scopeLine: 3324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10984 = !{!10985, !10986}
!10985 = !DILocalVariable(name: "self", arg: 1, scope: !10980, file: !10746, line: 3324, type: !1608)
!10986 = !DILocalVariable(name: "other", arg: 2, scope: !10980, file: !10746, line: 3324, type: !432)
!10987 = !DILocation(line: 3324, column: 30, scope: !10980)
!10988 = !DILocation(line: 3324, column: 41, scope: !10980)
!10989 = !DILocation(line: 3325, column: 32, scope: !10980)
!10990 = !DILocation(line: 3325, column: 14, scope: !10980)
!10991 = !DILocation(line: 3326, column: 6, scope: !10980)
!10992 = distinct !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17h5c0a2620d4516e37E", scope: !182, file: !10746, line: 1060, type: !10993, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !10995, retainedNodes: !10996)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!182, !463, !9, !9, !212}
!10995 = !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in17h5c0a2620d4516e37E", scope: !182, file: !10746, line: 1060, type: !10993, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!10996 = !{!10997, !10998, !10999, !11000}
!10997 = !DILocalVariable(name: "ptr", arg: 1, scope: !10992, file: !10746, line: 1060, type: !463)
!10998 = !DILocalVariable(name: "length", arg: 2, scope: !10992, file: !10746, line: 1060, type: !9)
!10999 = !DILocalVariable(name: "capacity", arg: 3, scope: !10992, file: !10746, line: 1060, type: !9)
!11000 = !DILocalVariable(name: "alloc", arg: 4, scope: !10992, file: !10746, line: 1060, type: !212)
!11001 = !DILocation(line: 1060, column: 37, scope: !10992)
!11002 = !DILocation(line: 1060, column: 50, scope: !10992)
!11003 = !DILocation(line: 1060, column: 65, scope: !10992)
!11004 = !DILocation(line: 1060, column: 82, scope: !10992)
!11005 = !DILocation(line: 1061, column: 9, scope: !10992)
!11006 = !DILocation(line: 1066, column: 29, scope: !10992)
!11007 = !DILocation(line: 1066, column: 18, scope: !10992)
!11008 = !DILocation(line: 1067, column: 6, scope: !10992)
!11009 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17from_raw_parts_in18precondition_check17h82ea3908133a860eE", scope: !11010, file: !473, line: 68, type: !2968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11011)
!11010 = !DINamespace(name: "from_raw_parts_in", scope: !10825)
!11011 = !{!11012, !11013, !11014}
!11012 = !DILocalVariable(name: "length", arg: 1, scope: !11009, file: !473, line: 68, type: !9)
!11013 = !DILocalVariable(name: "capacity", arg: 2, scope: !11009, file: !473, line: 68, type: !9)
!11014 = !DILocalVariable(name: "msg", scope: !11015, file: !473, line: 70, type: !124, align: 32)
!11015 = distinct !DILexicalBlock(scope: !11009, file: !473, line: 70, column: 21)
!11016 = !DILocation(line: 68, column: 43, scope: !11009)
!11017 = !DILocation(line: 70, column: 25, scope: !11015)
!11018 = !DILocation(line: 1064, column: 69, scope: !11019)
!11019 = !DILexicalBlockFile(scope: !11009, file: !10746, discriminator: 0)
!11020 = !DILocation(line: 73, column: 94, scope: !11015)
!11021 = !DILocation(line: 73, column: 59, scope: !11015)
!11022 = !DILocation(line: 73, column: 21, scope: !11015)
!11023 = !DILocation(line: 75, column: 14, scope: !11009)
!11024 = distinct !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h542714a9ce1f26ddE", scope: !182, file: !10746, line: 1447, type: !10857, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11025, retainedNodes: !11026)
!11025 = !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$17try_reserve_exact17h542714a9ce1f26ddE", scope: !182, file: !10746, line: 1447, type: !10857, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11026 = !{!11027, !11028}
!11027 = !DILocalVariable(name: "self", arg: 1, scope: !11024, file: !10746, line: 1447, type: !1608)
!11028 = !DILocalVariable(name: "additional", arg: 2, scope: !11024, file: !10746, line: 1447, type: !9)
!11029 = !DILocation(line: 1447, column: 30, scope: !11024)
!11030 = !DILocation(line: 1447, column: 41, scope: !11024)
!11031 = !DILocation(line: 1448, column: 36, scope: !11024)
!11032 = !DILocation(line: 1448, column: 18, scope: !11024)
!11033 = !DILocation(line: 1449, column: 6, scope: !11024)
!11034 = distinct !DISubprogram(name: "spare_capacity_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hb9b6a0b0bf470925E", scope: !182, file: !10746, line: 3110, type: !11035, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11037, retainedNodes: !11038)
!11035 = !DISubroutineType(types: !11036)
!11036 = !{!7438, !1608}
!11037 = !DISubprogram(name: "spare_capacity_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17hb9b6a0b0bf470925E", scope: !182, file: !10746, line: 3110, type: !11035, scopeLine: 3110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11038 = !{!11039}
!11039 = !DILocalVariable(name: "self", arg: 1, scope: !11034, file: !10746, line: 3110, type: !1608)
!11040 = !DILocation(line: 3110, column: 31, scope: !11034)
!11041 = !DILocation(line: 3116, column: 22, scope: !11034)
!11042 = !DILocation(line: 3116, column: 39, scope: !11034)
!11043 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !11044)
!11044 = distinct !DILocation(line: 3116, column: 35, scope: !11034)
!11045 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !11044)
!11046 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !11044)
!11047 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !11044)
!11048 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !11044)
!11049 = !DILocation(line: 3117, column: 26, scope: !11034)
!11050 = !DILocation(line: 3117, column: 39, scope: !11034)
!11051 = !DILocation(line: 3117, column: 17, scope: !11034)
!11052 = !DILocation(line: 3115, column: 13, scope: !11034)
!11053 = !DILocation(line: 3120, column: 6, scope: !11034)
!11054 = distinct !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE", scope: !182, file: !10746, line: 2911, type: !11055, scopeLine: 2911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11057, retainedNodes: !11058)
!11055 = !DISubroutineType(types: !11056)
!11056 = !{!9, !10796}
!11057 = !DISubprogram(name: "len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3len17h48df988fa02c305cE", scope: !182, file: !10746, line: 2911, type: !11055, scopeLine: 2911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11058 = !{!11059, !11060}
!11059 = !DILocalVariable(name: "self", arg: 1, scope: !11054, file: !10746, line: 2911, type: !10796)
!11060 = !DILocalVariable(name: "len", scope: !11061, file: !10746, line: 2912, type: !9, align: 32)
!11061 = distinct !DILexicalBlock(scope: !11054, file: !10746, line: 2912, column: 9)
!11062 = !DILocation(line: 2911, column: 22, scope: !11054)
!11063 = !DILocation(line: 2912, column: 19, scope: !11054)
!11064 = !DILocation(line: 2912, column: 13, scope: !11061)
!11065 = !DILocation(line: 2917, column: 37, scope: !11061)
!11066 = !DILocation(line: 2920, column: 6, scope: !11054)
!11067 = distinct !DISubprogram(name: "pop<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h35b0868d37c3c7f2E", scope: !182, file: !10746, line: 2709, type: !11068, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11070, retainedNodes: !11071)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!13, !1608}
!11070 = !DISubprogram(name: "pop<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$3pop17h35b0868d37c3c7f2E", scope: !182, file: !10746, line: 2709, type: !11068, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11071 = !{!11072}
!11072 = !DILocalVariable(name: "self", arg: 1, scope: !11067, file: !10746, line: 2709, type: !1608)
!11073 = !DILocation(line: 2709, column: 16, scope: !11067)
!11074 = !DILocation(line: 2710, column: 12, scope: !11067)
!11075 = !DILocation(line: 2711, column: 13, scope: !11067)
!11076 = !DILocation(line: 2710, column: 9, scope: !11067)
!11077 = !DILocation(line: 2714, column: 17, scope: !11067)
!11078 = !DILocation(line: 2719, column: 6, scope: !11067)
!11079 = !DILocation(line: 2715, column: 46, scope: !11067)
!11080 = !DILocation(line: 2715, column: 62, scope: !11067)
!11081 = !DILocalVariable(name: "cond", arg: 1, scope: !11082, file: !5360, line: 201, type: !643)
!11082 = distinct !DISubprogram(name: "assert_unchecked", linkageName: "_ZN4core4hint16assert_unchecked17h05cf6d824fe0d97bE", scope: !5349, file: !5360, line: 201, type: !5350, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11083)
!11083 = !{!11081}
!11084 = !DILocation(line: 201, column: 38, scope: !11082, inlinedAt: !11085)
!11085 = distinct !DILocation(line: 2715, column: 17, scope: !11067)
!11086 = !DILocation(line: 77, column: 35, scope: !11087, inlinedAt: !11085)
!11087 = !DILexicalBlockFile(scope: !11082, file: !473, discriminator: 0)
!11088 = !DILocation(line: 78, column: 17, scope: !11087, inlinedAt: !11085)
!11089 = !DILocation(line: 2716, column: 37, scope: !11067)
!11090 = !DILocation(line: 2716, column: 55, scope: !11067)
!11091 = !DILocation(line: 829, column: 29, scope: !1790, inlinedAt: !11092)
!11092 = distinct !DILocation(line: 2716, column: 46, scope: !11067)
!11093 = !DILocation(line: 829, column: 35, scope: !1790, inlinedAt: !11092)
!11094 = !DILocation(line: 77, column: 35, scope: !1802, inlinedAt: !11092)
!11095 = !DILocation(line: 78, column: 17, scope: !1802, inlinedAt: !11092)
!11096 = !DILocation(line: 863, column: 18, scope: !1790, inlinedAt: !11092)
!11097 = !DILocation(line: 2716, column: 22, scope: !11067)
!11098 = !DILocation(line: 2716, column: 17, scope: !11067)
!11099 = distinct !DISubprogram(name: "push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hc841b239736e971bE", scope: !182, file: !10746, line: 2563, type: !11100, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11102, retainedNodes: !11103)
!11100 = !DISubroutineType(types: !11101)
!11101 = !{null, !1608, !24}
!11102 = !DISubprogram(name: "push<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hc841b239736e971bE", scope: !182, file: !10746, line: 2563, type: !11100, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11103 = !{!11104, !11105}
!11104 = !DILocalVariable(name: "self", arg: 1, scope: !11099, file: !10746, line: 2563, type: !1608)
!11105 = !DILocalVariable(name: "value", arg: 2, scope: !11099, file: !10746, line: 2563, type: !24)
!11106 = !DILocation(line: 2563, column: 17, scope: !11099)
!11107 = !DILocation(line: 2563, column: 28, scope: !11099)
!11108 = !DILocation(line: 2564, column: 22, scope: !11099)
!11109 = !DILocation(line: 2565, column: 6, scope: !11099)
!11110 = distinct !DISubprogram(name: "clear<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h48061e4466c7faf2E", scope: !182, file: !10746, line: 2883, type: !10892, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11111, retainedNodes: !11112)
!11111 = !DISubprogram(name: "clear<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5clear17h48061e4466c7faf2E", scope: !182, file: !10746, line: 2883, type: !10892, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11112 = !{!11113, !11114}
!11113 = !DILocalVariable(name: "self", arg: 1, scope: !11110, file: !10746, line: 2883, type: !1608)
!11114 = !DILocalVariable(name: "elems", scope: !11115, file: !10746, line: 2884, type: !1569, align: 32)
!11115 = distinct !DILexicalBlock(scope: !11110, file: !10746, line: 2884, column: 9)
!11116 = !DILocation(line: 2883, column: 18, scope: !11110)
!11117 = !DILocation(line: 2884, column: 36, scope: !11110)
!11118 = !DILocation(line: 2884, column: 31, scope: !11110)
!11119 = !DILocation(line: 2884, column: 13, scope: !11115)
!11120 = !DILocation(line: 2893, column: 13, scope: !11115)
!11121 = !DILocation(line: 2896, column: 6, scope: !11110)
!11122 = distinct !DISubprogram(name: "drain<u8, alloc::alloc::Global, core::ops::range::Range<usize>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17ha53cb2c886e1fc3fE", scope: !182, file: !10746, line: 2837, type: !11123, scopeLine: 2837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11126, declaration: !11125, retainedNodes: !11127)
!11123 = !DISubroutineType(types: !11124)
!11124 = !{!1732, !1608, !1234}
!11125 = !DISubprogram(name: "drain<u8, alloc::alloc::Global, core::ops::range::Range<usize>>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$5drain17ha53cb2c886e1fc3fE", scope: !182, file: !10746, line: 2837, type: !11123, scopeLine: 2837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11126)
!11126 = !{!23, !215, !7867}
!11127 = !{!11128, !11129, !11130, !11132, !11134, !11135}
!11128 = !DILocalVariable(name: "self", arg: 1, scope: !11122, file: !10746, line: 2837, type: !1608)
!11129 = !DILocalVariable(name: "range", arg: 2, scope: !11122, file: !10746, line: 2837, type: !1234)
!11130 = !DILocalVariable(name: "len", scope: !11131, file: !10746, line: 2851, type: !9, align: 32)
!11131 = distinct !DILexicalBlock(scope: !11122, file: !10746, line: 2851, column: 9)
!11132 = !DILocalVariable(name: "start", scope: !11133, file: !10746, line: 2852, type: !9, align: 32)
!11133 = distinct !DILexicalBlock(scope: !11131, file: !10746, line: 2852, column: 9)
!11134 = !DILocalVariable(name: "end", scope: !11133, file: !10746, line: 2852, type: !9, align: 32)
!11135 = !DILocalVariable(name: "range_slice", scope: !11136, file: !10746, line: 2857, type: !432, align: 32)
!11136 = distinct !DILexicalBlock(scope: !11133, file: !10746, line: 2857, column: 13)
!11137 = !DILocation(line: 2837, column: 21, scope: !11122)
!11138 = !DILocation(line: 2837, column: 32, scope: !11122)
!11139 = !DILocation(line: 2851, column: 24, scope: !11122)
!11140 = !DILocation(line: 2851, column: 13, scope: !11131)
!11141 = !DILocation(line: 2852, column: 36, scope: !11131)
!11142 = !DILocation(line: 2852, column: 21, scope: !11131)
!11143 = !DILocation(line: 2852, column: 21, scope: !11133)
!11144 = !DILocation(line: 2852, column: 28, scope: !11131)
!11145 = !DILocation(line: 2852, column: 28, scope: !11133)
!11146 = !DILocation(line: 2856, column: 18, scope: !11133)
!11147 = !DILocation(line: 2857, column: 58, scope: !11133)
!11148 = !DILocation(line: 829, column: 29, scope: !1790, inlinedAt: !11149)
!11149 = distinct !DILocation(line: 2857, column: 67, scope: !11133)
!11150 = !DILocation(line: 829, column: 35, scope: !1790, inlinedAt: !11149)
!11151 = !DILocation(line: 77, column: 35, scope: !1802, inlinedAt: !11149)
!11152 = !DILocation(line: 78, column: 17, scope: !1802, inlinedAt: !11149)
!11153 = !DILocation(line: 863, column: 18, scope: !1790, inlinedAt: !11149)
!11154 = !DILocation(line: 2857, column: 79, scope: !11133)
!11155 = !DILocation(line: 2857, column: 31, scope: !11133)
!11156 = !DILocation(line: 2857, column: 17, scope: !11136)
!11157 = !DILocation(line: 2860, column: 27, scope: !11136)
!11158 = !DILocation(line: 2861, column: 35, scope: !11136)
!11159 = !DILocation(line: 2862, column: 22, scope: !11136)
!11160 = !DILocation(line: 2858, column: 13, scope: !11136)
!11161 = !DILocation(line: 2865, column: 6, scope: !11122)
!11162 = distinct !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h05f13e46615c6203E", scope: !182, file: !10746, line: 1730, type: !11163, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11165, retainedNodes: !11166)
!11163 = !DISubroutineType(types: !11164)
!11164 = !{!201, !10796}
!11165 = !DISubprogram(name: "as_ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6as_ptr17h05f13e46615c6203E", scope: !182, file: !10746, line: 1730, type: !11163, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11166 = !{!11167}
!11167 = !DILocalVariable(name: "self", arg: 1, scope: !11162, file: !10746, line: 1730, type: !10796)
!11168 = !DILocation(line: 1730, column: 25, scope: !11162)
!11169 = !DILocation(line: 1733, column: 18, scope: !11162)
!11170 = !DILocation(line: 1734, column: 6, scope: !11162)
!11171 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$6remove13assert_failed17hb7a76f866e2f7e16E", scope: !11172, file: !10746, line: 2164, type: !2968, scopeLine: 2164, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11173)
!11172 = !DINamespace(name: "remove", scope: !10825)
!11173 = !{!11174, !11175, !11176, !11179}
!11174 = !DILocalVariable(name: "index", arg: 1, scope: !11171, file: !10746, line: 2164, type: !9)
!11175 = !DILocalVariable(name: "len", arg: 2, scope: !11171, file: !10746, line: 2164, type: !9)
!11176 = !DILocalVariable(name: "args", scope: !11177, file: !10746, line: 2165, type: !8947, align: 32)
!11177 = !DILexicalBlockFile(scope: !11178, file: !10746, discriminator: 0)
!11178 = distinct !DILexicalBlock(scope: !11171, file: !304, line: 62, column: 38)
!11179 = !DILocalVariable(name: "args", scope: !11180, file: !10746, line: 2165, type: !8954, align: 32)
!11180 = !DILexicalBlockFile(scope: !11181, file: !10746, discriminator: 0)
!11181 = distinct !DILexicalBlock(scope: !11178, file: !304, line: 62, column: 38)
!11182 = !DILocation(line: 2164, column: 26, scope: !11171)
!11183 = !DILocation(line: 2164, column: 40, scope: !11171)
!11184 = !DILocation(line: 2165, column: 13, scope: !11180)
!11185 = !DILocation(line: 2165, column: 13, scope: !11171)
!11186 = !DILocation(line: 2165, column: 13, scope: !11177)
!11187 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1dfb094011f11624E", scope: !182, file: !10746, line: 1337, type: !10880, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11188, retainedNodes: !11189)
!11188 = !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h1dfb094011f11624E", scope: !182, file: !10746, line: 1337, type: !10880, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11189 = !{!11190, !11191}
!11190 = !DILocalVariable(name: "self", arg: 1, scope: !11187, file: !10746, line: 1337, type: !1608)
!11191 = !DILocalVariable(name: "additional", arg: 2, scope: !11187, file: !10746, line: 1337, type: !9)
!11192 = !DILocation(line: 1337, column: 20, scope: !11187)
!11193 = !DILocation(line: 1337, column: 31, scope: !11187)
!11194 = !DILocation(line: 1338, column: 26, scope: !11187)
!11195 = !DILocation(line: 1338, column: 18, scope: !11187)
!11196 = !DILocation(line: 1339, column: 6, scope: !11187)
!11197 = distinct !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E", scope: !182, file: !10746, line: 1978, type: !10880, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11198, retainedNodes: !11199)
!11198 = !DISubprogram(name: "set_len<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len17h370fa42e0c269f60E", scope: !182, file: !10746, line: 1978, type: !10880, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11199 = !{!11200, !11201}
!11200 = !DILocalVariable(name: "self", arg: 1, scope: !11197, file: !10746, line: 1978, type: !1608)
!11201 = !DILocalVariable(name: "new_len", arg: 2, scope: !11197, file: !10746, line: 1978, type: !9)
!11202 = !DILocation(line: 1978, column: 27, scope: !11197)
!11203 = !DILocation(line: 1978, column: 38, scope: !11197)
!11204 = !DILocation(line: 1979, column: 9, scope: !11197)
!11205 = !DILocation(line: 1982, column: 63, scope: !11197)
!11206 = !DILocation(line: 1985, column: 9, scope: !11197)
!11207 = !DILocation(line: 1986, column: 6, scope: !11197)
!11208 = distinct !DISubprogram(name: "precondition_check", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$7set_len18precondition_check17hb34a41dcb8712f37E", scope: !11209, file: !473, line: 68, type: !2968, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11210)
!11209 = !DINamespace(name: "set_len", scope: !10825)
!11210 = !{!11211, !11212, !11213}
!11211 = !DILocalVariable(name: "new_len", arg: 1, scope: !11208, file: !473, line: 68, type: !9)
!11212 = !DILocalVariable(name: "capacity", arg: 2, scope: !11208, file: !473, line: 68, type: !9)
!11213 = !DILocalVariable(name: "msg", scope: !11214, file: !473, line: 70, type: !124, align: 32)
!11214 = distinct !DILexicalBlock(scope: !11208, file: !473, line: 70, column: 21)
!11215 = !DILocation(line: 68, column: 43, scope: !11208)
!11216 = !DILocation(line: 70, column: 25, scope: !11214)
!11217 = !DILocation(line: 1982, column: 78, scope: !11218)
!11218 = !DILexicalBlockFile(scope: !11208, file: !10746, discriminator: 0)
!11219 = !DILocation(line: 73, column: 94, scope: !11214)
!11220 = !DILocation(line: 73, column: 59, scope: !11214)
!11221 = !DILocation(line: 73, column: 21, scope: !11214)
!11222 = !DILocation(line: 75, column: 14, scope: !11208)
!11223 = distinct !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h9aca5a4efbfbef1bE", scope: !182, file: !10746, line: 1623, type: !11224, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11226, retainedNodes: !11227)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{!432, !10796}
!11226 = !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8as_slice17h9aca5a4efbfbef1bE", scope: !182, file: !10746, line: 1623, type: !11224, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11227 = !{!11228}
!11228 = !DILocalVariable(name: "self", arg: 1, scope: !11223, file: !10746, line: 1623, type: !10796)
!11229 = !DILocation(line: 1623, column: 27, scope: !11223)
!11230 = !DILocation(line: 1637, column: 45, scope: !11223)
!11231 = !DILocation(line: 1637, column: 55, scope: !11223)
!11232 = !DILocation(line: 1637, column: 18, scope: !11223)
!11233 = !DILocation(line: 1638, column: 6, scope: !11223)
!11234 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hb1ab5c7920d048deE", scope: !182, file: !10746, line: 1313, type: !11055, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11235, retainedNodes: !11236)
!11235 = !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8capacity17hb1ab5c7920d048deE", scope: !182, file: !10746, line: 1313, type: !11055, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11236 = !{!11237}
!11237 = !DILocalVariable(name: "self", arg: 1, scope: !11234, file: !10746, line: 1313, type: !10796)
!11238 = !DILocation(line: 1313, column: 27, scope: !11234)
!11239 = !DILocation(line: 1314, column: 18, scope: !11234)
!11240 = !DILocation(line: 1315, column: 6, scope: !11234)
!11241 = distinct !DISubprogram(name: "push_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8push_mut17h1d4f7bfb507a72c0E", scope: !182, file: !10746, line: 2640, type: !11242, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11245, retainedNodes: !11246)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{!11244, !1608, !24}
!11244 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut u8", baseType: !24, size: 32, align: 32, dwarfAddressSpace: 0)
!11245 = !DISubprogram(name: "push_mut<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$8push_mut17h1d4f7bfb507a72c0E", scope: !182, file: !10746, line: 2640, type: !11242, scopeLine: 2640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11246 = !{!11247, !11248, !11249, !11251}
!11247 = !DILocalVariable(name: "self", arg: 1, scope: !11241, file: !10746, line: 2640, type: !1608)
!11248 = !DILocalVariable(name: "value", arg: 2, scope: !11241, file: !10746, line: 2640, type: !24)
!11249 = !DILocalVariable(name: "len", scope: !11250, file: !10746, line: 2642, type: !9, align: 32)
!11250 = distinct !DILexicalBlock(scope: !11241, file: !10746, line: 2642, column: 9)
!11251 = !DILocalVariable(name: "end", scope: !11252, file: !10746, line: 2649, type: !463, align: 32)
!11252 = distinct !DILexicalBlock(scope: !11250, file: !10746, line: 2649, column: 13)
!11253 = !DILocation(line: 2640, column: 21, scope: !11241)
!11254 = !DILocation(line: 2640, column: 32, scope: !11241)
!11255 = !DILocation(line: 2642, column: 19, scope: !11241)
!11256 = !DILocation(line: 2642, column: 13, scope: !11250)
!11257 = !DILocation(line: 2645, column: 28, scope: !11250)
!11258 = !DILocation(line: 2645, column: 12, scope: !11250)
!11259 = !DILocation(line: 2649, column: 28, scope: !11250)
!11260 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !11261)
!11261 = distinct !DILocation(line: 2649, column: 41, scope: !11250)
!11262 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !11261)
!11263 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !11261)
!11264 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !11261)
!11265 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !11261)
!11266 = !DILocation(line: 2649, column: 41, scope: !11250)
!11267 = !DILocation(line: 2649, column: 17, scope: !11252)
!11268 = !DILocation(line: 2650, column: 13, scope: !11252)
!11269 = !DILocation(line: 2651, column: 24, scope: !11252)
!11270 = !DILocation(line: 2646, column: 22, scope: !11250)
!11271 = !DILocation(line: 2651, column: 13, scope: !11252)
!11272 = !DILocation(line: 2655, column: 6, scope: !11241)
!11273 = distinct !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hcc761d55e3a5cf15E", scope: !182, file: !10746, line: 1886, type: !11274, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11276, retainedNodes: !11277)
!11274 = !DISubroutineType(types: !11275)
!11275 = !{!9407, !10796}
!11276 = !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9allocator17hcc761d55e3a5cf15E", scope: !182, file: !10746, line: 1886, type: !11274, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11277 = !{!11278}
!11278 = !DILocalVariable(name: "self", arg: 1, scope: !11273, file: !10746, line: 1886, type: !10796)
!11279 = !DILocation(line: 1886, column: 22, scope: !11273)
!11280 = !DILocation(line: 1887, column: 18, scope: !11273)
!11281 = !DILocation(line: 1888, column: 6, scope: !11273)
!11282 = distinct !DISubprogram(name: "assert_failed", linkageName: "_ZN5alloc3vec16Vec$LT$T$C$A$GT$9split_off13assert_failed17h1516409d2224b70fE", scope: !11283, file: !10746, line: 2977, type: !2968, scopeLine: 2977, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11284)
!11283 = !DINamespace(name: "split_off", scope: !10825)
!11284 = !{!11285, !11286, !11287, !11290}
!11285 = !DILocalVariable(name: "at", arg: 1, scope: !11282, file: !10746, line: 2977, type: !9)
!11286 = !DILocalVariable(name: "len", arg: 2, scope: !11282, file: !10746, line: 2977, type: !9)
!11287 = !DILocalVariable(name: "args", scope: !11288, file: !10746, line: 2978, type: !8947, align: 32)
!11288 = !DILexicalBlockFile(scope: !11289, file: !10746, discriminator: 0)
!11289 = distinct !DILexicalBlock(scope: !11282, file: !304, line: 62, column: 38)
!11290 = !DILocalVariable(name: "args", scope: !11291, file: !10746, line: 2978, type: !8954, align: 32)
!11291 = !DILexicalBlockFile(scope: !11292, file: !10746, discriminator: 0)
!11292 = distinct !DILexicalBlock(scope: !11289, file: !304, line: 62, column: 38)
!11293 = !DILocation(line: 2977, column: 26, scope: !11282)
!11294 = !DILocation(line: 2977, column: 37, scope: !11282)
!11295 = !DILocation(line: 2978, column: 13, scope: !11291)
!11296 = !DILocation(line: 2978, column: 13, scope: !11282)
!11297 = !DILocation(line: 2978, column: 13, scope: !11288)
!11298 = distinct !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17h923844f361fd15ffE", scope: !858, file: !852, line: 83, type: !11299, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11301, retainedNodes: !11302)
!11299 = !DISubroutineType(types: !11300)
!11300 = !{!432, !857}
!11301 = !DISubprogram(name: "as_slice<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$8as_slice17h923844f361fd15ffE", scope: !858, file: !852, line: 83, type: !11299, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11302 = !{!11303}
!11303 = !DILocalVariable(name: "self", arg: 1, scope: !11298, file: !852, line: 83, type: !857)
!11304 = !DILocation(line: 83, column: 21, scope: !11298)
!11305 = !DILocation(line: 84, column: 40, scope: !11298)
!11306 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !11307)
!11307 = distinct !DILocation(line: 84, column: 49, scope: !11298)
!11308 = !DILocation(line: 84, column: 64, scope: !11298)
!11309 = !DILocation(line: 84, column: 18, scope: !11298)
!11310 = !DILocation(line: 85, column: 6, scope: !11298)
!11311 = distinct !DISubprogram(name: "data_offset<core::wtf8::Wtf8>", linkageName: "_ZN5alloc4sync11data_offset17h9415375490ac633dE", scope: !131, file: !133, line: 4026, type: !2611, scopeLine: 4026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2624, retainedNodes: !11312)
!11312 = !{!11313}
!11313 = !DILocalVariable(name: "ptr", arg: 1, scope: !11311, file: !133, line: 4026, type: !2613)
!11314 = !DILocation(line: 4026, column: 34, scope: !11311)
!11315 = !DILocation(line: 4033, column: 32, scope: !11311)
!11316 = !DILocation(line: 4033, column: 14, scope: !11311)
!11317 = !DILocation(line: 4034, column: 2, scope: !11311)
!11318 = distinct !DISubprogram(name: "allocate_for_layout<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#0}<u8>, alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$19allocate_for_layout17h890562bbce1b1ee8E", scope: !11319, file: !133, line: 1968, type: !11325, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11334, declaration: !11333, retainedNodes: !11337)
!11319 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arc<[u8], alloc::alloc::Global>", scope: !131, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11320, templateParams: !217, identifier: "fb8a63b8881aa355ce08d22c58220ec6")
!11320 = !{!11321, !11322, !11324}
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !11319, file: !2, baseType: !3934, size: 64, align: 32, flags: DIFlagPrivate)
!11322 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !11319, file: !2, baseType: !11323, align: 8, offset: 64, flags: DIFlagPrivate)
!11323 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::sync::ArcInner<[u8]>>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !2585, identifier: "bfd1eb9ffa6dfec24b347d5a73c70a27")
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !11319, file: !2, baseType: !212, align: 8, offset: 64, flags: DIFlagPrivate)
!11325 = !DISubroutineType(types: !11326)
!11326 = !{!3939, !39, !11327, !11330}
!11327 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#0}<u8>", scope: !11328, file: !2, align: 8, elements: !21, identifier: "c35c7b256e086d2217d12df2e27af670")
!11328 = !DINamespace(name: "allocate_for_slice", scope: !11329)
!11329 = !DINamespace(name: "{impl#26}", scope: !131)
!11330 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure_env#1}<u8>", scope: !11328, file: !2, size: 32, align: 32, elements: !11331, templateParams: !21, identifier: "a6eda2d8b935e211c54b4a5842bf7f24")
!11331 = !{!11332}
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__len", scope: !11330, file: !2, baseType: !93, size: 32, align: 32)
!11333 = !DISubprogram(name: "allocate_for_layout<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#0}<u8>, alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$19allocate_for_layout17h890562bbce1b1ee8E", scope: !11319, file: !133, line: 1968, type: !11325, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11334)
!11334 = !{!23, !11335, !11336}
!11335 = !DITemplateTypeParameter(name: "impl FnOnce(Layout) -> Result<NonNull<[u8]>, AllocError>", type: !11327)
!11336 = !DITemplateTypeParameter(name: "impl FnOnce(*mut u8) -> *mut ArcInner<T>", type: !11330)
!11337 = !{!11338, !11339, !11340, !11341, !11343}
!11338 = !DILocalVariable(name: "value_layout", arg: 1, scope: !11318, file: !133, line: 1969, type: !39)
!11339 = !DILocalVariable(name: "allocate", arg: 2, scope: !11318, file: !133, line: 1970, type: !11327)
!11340 = !DILocalVariable(name: "mem_to_arcinner", arg: 3, scope: !11318, file: !133, line: 1971, type: !11330)
!11341 = !DILocalVariable(name: "layout", scope: !11342, file: !133, line: 1973, type: !39, align: 32)
!11342 = distinct !DILexicalBlock(scope: !11318, file: !133, line: 1973, column: 9)
!11343 = !DILocalVariable(name: "ptr", scope: !11344, file: !133, line: 1975, type: !1932, align: 32)
!11344 = distinct !DILexicalBlock(scope: !11342, file: !133, line: 1975, column: 9)
!11345 = !DILocation(line: 1969, column: 9, scope: !11318)
!11346 = !DILocation(line: 1970, column: 9, scope: !11318)
!11347 = !DILocation(line: 1971, column: 9, scope: !11318)
!11348 = !DILocation(line: 1973, column: 13, scope: !11342)
!11349 = !DILocation(line: 1973, column: 22, scope: !11318)
!11350 = !DILocation(line: 1975, column: 19, scope: !11342)
!11351 = !DILocation(line: 1975, column: 36, scope: !11342)
!11352 = !DILocation(line: 1975, column: 13, scope: !11344)
!11353 = !DILocation(line: 1977, column: 18, scope: !11344)
!11354 = !DILocation(line: 1978, column: 6, scope: !11318)
!11355 = distinct !DISubprogram(name: "{closure#0}<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#0}<u8>, alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$19allocate_for_layout28_$u7b$$u7b$closure$u7d$$u7d$17h132db41e10edc885E", scope: !8479, file: !133, line: 1975, type: !11356, scopeLine: 1975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11334, retainedNodes: !11358)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{!1932, !8478, !1969}
!11358 = !{!11359, !11360}
!11359 = !DILocalVariable(name: "layout", scope: !11355, file: !133, line: 1973, type: !39, align: 32)
!11360 = !DILocalVariable(arg: 2, scope: !11355, file: !133, line: 1975, type: !1969)
!11361 = !DILocation(line: 1973, column: 13, scope: !11355)
!11362 = !DILocation(line: 1975, column: 52, scope: !11355)
!11363 = !DILocation(line: 1975, column: 74, scope: !11355)
!11364 = !DILocation(line: 1975, column: 55, scope: !11355)
!11365 = distinct !DISubprogram(name: "initialize_arcinner<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$19initialize_arcinner17h2035784ea8eb4865E", scope: !11319, file: !133, line: 2000, type: !11366, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11369, declaration: !11368, retainedNodes: !11370)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{!3939, !1932, !39, !11330}
!11368 = !DISubprogram(name: "initialize_arcinner<[u8], alloc::sync::{impl#26}::allocate_for_slice::{closure_env#1}<u8>>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$19initialize_arcinner17h2035784ea8eb4865E", scope: !11319, file: !133, line: 2000, type: !11366, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11369)
!11369 = !{!23, !11336}
!11370 = !{!11371, !11372, !11373, !11374, !11376, !11379, !11380}
!11371 = !DILocalVariable(name: "ptr", arg: 1, scope: !11365, file: !133, line: 2001, type: !1932)
!11372 = !DILocalVariable(name: "layout", arg: 2, scope: !11365, file: !133, line: 2002, type: !39)
!11373 = !DILocalVariable(name: "mem_to_arcinner", arg: 3, scope: !11365, file: !133, line: 2003, type: !11330)
!11374 = !DILocalVariable(name: "inner", scope: !11375, file: !133, line: 2005, type: !3939, align: 32)
!11375 = distinct !DILexicalBlock(scope: !11365, file: !133, line: 2005, column: 9)
!11376 = !DILocalVariable(name: "left_val", scope: !11377, file: !133, line: 2006, type: !38, align: 32)
!11377 = !DILexicalBlockFile(scope: !11378, file: !133, discriminator: 0)
!11378 = distinct !DILexicalBlock(scope: !11375, file: !2304, line: 45, column: 13)
!11379 = !DILocalVariable(name: "right_val", scope: !11377, file: !133, line: 2006, type: !38, align: 32)
!11380 = !DILocalVariable(name: "kind", scope: !11381, file: !133, line: 2006, type: !280, align: 8)
!11381 = !DILexicalBlockFile(scope: !11382, file: !133, discriminator: 0)
!11382 = distinct !DILexicalBlock(scope: !11378, file: !2304, line: 47, column: 21)
!11383 = !DILocation(line: 2001, column: 9, scope: !11365)
!11384 = !DILocation(line: 2002, column: 9, scope: !11365)
!11385 = !DILocation(line: 2003, column: 9, scope: !11365)
!11386 = !DILocation(line: 2005, column: 41, scope: !11365)
!11387 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !11388)
!11388 = distinct !DILocation(line: 2005, column: 59, scope: !11365)
!11389 = !DILocation(line: 2005, column: 21, scope: !11365)
!11390 = !DILocation(line: 2005, column: 13, scope: !11375)
!11391 = !DILocation(line: 2006, column: 35, scope: !11375)
!11392 = !DILocation(line: 2006, column: 9, scope: !11375)
!11393 = !DILocation(line: 2006, column: 9, scope: !11377)
!11394 = !DILocation(line: 2006, column: 9, scope: !11381)
!11395 = !DILocation(line: 2009, column: 46, scope: !11375)
!11396 = !DILocation(line: 2009, column: 13, scope: !11375)
!11397 = !DILocalVariable(name: "self", arg: 1, scope: !11398, file: !1810, line: 1413, type: !3531)
!11398 = distinct !DISubprogram(name: "write<core::sync::atomic::AtomicUsize>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$5write17h9e3dfdf3b7c17429E", scope: !1811, file: !1810, line: 1413, type: !3529, scopeLine: 1413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3535, retainedNodes: !11399)
!11399 = !{!11397, !11400}
!11400 = !DILocalVariable(name: "val", arg: 2, scope: !11398, file: !1810, line: 1413, type: !140)
!11401 = !DILocation(line: 1413, column: 31, scope: !11398, inlinedAt: !11402)
!11402 = distinct !DILocation(line: 2009, column: 40, scope: !11375)
!11403 = !DILocation(line: 1413, column: 37, scope: !11398, inlinedAt: !11402)
!11404 = !DILocation(line: 1418, column: 18, scope: !11398, inlinedAt: !11402)
!11405 = !DILocation(line: 2010, column: 13, scope: !11375)
!11406 = !DILocation(line: 2010, column: 44, scope: !11375)
!11407 = !DILocation(line: 1413, column: 31, scope: !11398, inlinedAt: !11408)
!11408 = distinct !DILocation(line: 2010, column: 38, scope: !11375)
!11409 = !DILocation(line: 1413, column: 37, scope: !11398, inlinedAt: !11408)
!11410 = !DILocation(line: 1418, column: 18, scope: !11398, inlinedAt: !11408)
!11411 = !DILocation(line: 2014, column: 6, scope: !11365)
!11412 = distinct !DISubprogram(name: "from_ptr<[u8]>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$8from_ptr17hf1f749b652109d73E", scope: !11319, file: !133, line: 294, type: !11413, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !11415, retainedNodes: !11416)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!11319, !3939}
!11415 = !DISubprogram(name: "from_ptr<[u8]>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$8from_ptr17hf1f749b652109d73E", scope: !11319, file: !133, line: 294, type: !11413, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!11416 = !{!11417}
!11417 = !DILocalVariable(name: "ptr", arg: 1, scope: !11412, file: !133, line: 294, type: !3939)
!11418 = !DILocation(line: 294, column: 24, scope: !11412)
!11419 = !DILocation(line: 295, column: 18, scope: !11412)
!11420 = !DILocation(line: 296, column: 6, scope: !11412)
!11421 = distinct !DISubprogram(name: "from_raw<core::wtf8::Wtf8>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$8from_raw17haeb1b77b43f746b8E", scope: !11422, file: !133, line: 1457, type: !11428, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2624, declaration: !11430, retainedNodes: !11431)
!11422 = !DICompositeType(tag: DW_TAG_structure_type, name: "Arc<core::wtf8::Wtf8, alloc::alloc::Global>", scope: !131, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11423, templateParams: !9620, identifier: "1aa4e956d24cab6d7c85b653c81e2f85")
!11423 = !{!11424, !11425, !11427}
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !11422, file: !2, baseType: !4029, size: 64, align: 32, flags: DIFlagPrivate)
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "phantom", scope: !11422, file: !2, baseType: !11426, align: 8, offset: 64, flags: DIFlagPrivate)
!11426 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<alloc::sync::ArcInner<core::wtf8::Wtf8>>", scope: !204, file: !2, align: 8, flags: DIFlagPublic, elements: !21, templateParams: !4042, identifier: "1215e99ac394554b149a8f94dd6df8c2")
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !11422, file: !2, baseType: !212, align: 8, offset: 64, flags: DIFlagPrivate)
!11428 = !DISubroutineType(types: !11429)
!11429 = !{!11422, !2613}
!11430 = !DISubprogram(name: "from_raw<core::wtf8::Wtf8>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$8from_raw17haeb1b77b43f746b8E", scope: !11422, file: !133, line: 1457, type: !11428, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2624)
!11431 = !{!11432}
!11432 = !DILocalVariable(name: "ptr", arg: 1, scope: !11421, file: !133, line: 1457, type: !2613)
!11433 = !DILocation(line: 1457, column: 28, scope: !11421)
!11434 = !DILocation(line: 1458, column: 18, scope: !11421)
!11435 = !DILocation(line: 1459, column: 6, scope: !11421)
!11436 = distinct !DISubprogram(name: "into_raw<[u8]>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$8into_raw17h43858592ae09c3a7E", scope: !11319, file: !133, line: 1480, type: !11437, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !11439, retainedNodes: !11440)
!11437 = !DISubroutineType(types: !11438)
!11438 = !{!1230, !11319}
!11439 = !DISubprogram(name: "into_raw<[u8]>", linkageName: "_ZN5alloc4sync12Arc$LT$T$GT$8into_raw17h43858592ae09c3a7E", scope: !11319, file: !133, line: 1480, type: !11437, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!11440 = !{!11441, !11442}
!11441 = !DILocalVariable(name: "this", arg: 1, scope: !11436, file: !133, line: 1480, type: !11319)
!11442 = !DILocalVariable(name: "this", scope: !11443, file: !133, line: 1481, type: !11444, align: 32)
!11443 = distinct !DILexicalBlock(scope: !11436, file: !133, line: 1481, column: 9)
!11444 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::sync::Arc<[u8], alloc::alloc::Global>>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !11445, templateParams: !11447, identifier: "e24c71fea40836063a5980040687579a")
!11445 = !{!11446}
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11444, file: !2, baseType: !11319, size: 64, align: 32, flags: DIFlagPrivate)
!11447 = !{!11448}
!11448 = !DITemplateTypeParameter(name: "T", type: !11319)
!11449 = !DILocation(line: 1480, column: 21, scope: !11436)
!11450 = !DILocation(line: 1481, column: 13, scope: !11443)
!11451 = !DILocalVariable(name: "value", arg: 1, scope: !11452, file: !9646, line: 181, type: !11319)
!11452 = distinct !DISubprogram(name: "new<alloc::sync::Arc<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdeab80b3737aa0deE", scope: !11444, file: !9646, line: 181, type: !11453, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11447, declaration: !11455, retainedNodes: !11456)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!11444, !11319}
!11455 = !DISubprogram(name: "new<alloc::sync::Arc<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hdeab80b3737aa0deE", scope: !11444, file: !9646, line: 181, type: !11453, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !11447)
!11456 = !{!11451}
!11457 = !DILocation(line: 181, column: 22, scope: !11452, inlinedAt: !11458)
!11458 = distinct !DILocation(line: 1481, column: 20, scope: !11436)
!11459 = !DILocation(line: 183, column: 6, scope: !11452, inlinedAt: !11458)
!11460 = !DILocation(line: 1481, column: 20, scope: !11436)
!11461 = !DILocalVariable(name: "self", arg: 1, scope: !11462, file: !9646, line: 270, type: !11466)
!11462 = distinct !DISubprogram(name: "deref<alloc::sync::Arc<[u8], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hbb16e08134ea11ecE", scope: !9657, file: !9646, line: 270, type: !11463, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11447, retainedNodes: !11467)
!11463 = !DISubroutineType(types: !11464)
!11464 = !{!11465, !11466}
!11465 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::sync::Arc<[u8], alloc::alloc::Global>", baseType: !11319, size: 32, align: 32, dwarfAddressSpace: 0)
!11466 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::sync::Arc<[u8], alloc::alloc::Global>>", baseType: !11444, size: 32, align: 32, dwarfAddressSpace: 0)
!11467 = !{!11461}
!11468 = !DILocation(line: 270, column: 14, scope: !11462, inlinedAt: !11469)
!11469 = distinct !DILocation(line: 1482, column: 23, scope: !11443)
!11470 = !DILocation(line: 1482, column: 9, scope: !11443)
!11471 = !DILocation(line: 1483, column: 6, scope: !11436)
!11472 = distinct !DISubprogram(name: "from_ptr_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h2c60f532ef6a2c45E", scope: !11319, file: !133, line: 312, type: !11473, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11475, retainedNodes: !11476)
!11473 = !DISubroutineType(types: !11474)
!11474 = !{!11319, !3939, !212}
!11475 = !DISubprogram(name: "from_ptr_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h2c60f532ef6a2c45E", scope: !11319, file: !133, line: 312, type: !11473, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11476 = !{!11477, !11478}
!11477 = !DILocalVariable(name: "ptr", arg: 1, scope: !11472, file: !133, line: 312, type: !3939)
!11478 = !DILocalVariable(name: "alloc", arg: 2, scope: !11472, file: !133, line: 312, type: !212)
!11479 = !DILocation(line: 312, column: 27, scope: !11472)
!11480 = !DILocation(line: 312, column: 50, scope: !11472)
!11481 = !DILocation(line: 313, column: 38, scope: !11472)
!11482 = !DILocation(line: 313, column: 18, scope: !11472)
!11483 = !DILocation(line: 314, column: 6, scope: !11472)
!11484 = distinct !DISubprogram(name: "from_ptr_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h4b255b8502527d68E", scope: !11422, file: !133, line: 312, type: !11485, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9620, declaration: !11487, retainedNodes: !11488)
!11485 = !DISubroutineType(types: !11486)
!11486 = !{!11422, !4046, !212}
!11487 = !DISubprogram(name: "from_ptr_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_ptr_in17h4b255b8502527d68E", scope: !11422, file: !133, line: 312, type: !11485, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9620)
!11488 = !{!11489, !11490}
!11489 = !DILocalVariable(name: "ptr", arg: 1, scope: !11484, file: !133, line: 312, type: !4046)
!11490 = !DILocalVariable(name: "alloc", arg: 2, scope: !11484, file: !133, line: 312, type: !212)
!11491 = !DILocation(line: 312, column: 27, scope: !11484)
!11492 = !DILocation(line: 312, column: 50, scope: !11484)
!11493 = !DILocation(line: 313, column: 38, scope: !11484)
!11494 = !DILocation(line: 313, column: 18, scope: !11484)
!11495 = !DILocation(line: 314, column: 6, scope: !11484)
!11496 = distinct !DISubprogram(name: "from_raw_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_raw_in17h3e2a3a7f8ef49983E", scope: !11422, file: !133, line: 1701, type: !11497, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9620, declaration: !11499, retainedNodes: !11500)
!11497 = !DISubroutineType(types: !11498)
!11498 = !{!11422, !2613, !212}
!11499 = !DISubprogram(name: "from_raw_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$11from_raw_in17h3e2a3a7f8ef49983E", scope: !11422, file: !133, line: 1701, type: !11497, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9620)
!11500 = !{!11501, !11502, !11503, !11505}
!11501 = !DILocalVariable(name: "ptr", arg: 1, scope: !11496, file: !133, line: 1701, type: !2613)
!11502 = !DILocalVariable(name: "alloc", arg: 2, scope: !11496, file: !133, line: 1701, type: !212)
!11503 = !DILocalVariable(name: "offset", scope: !11504, file: !133, line: 1703, type: !9, align: 32)
!11504 = distinct !DILexicalBlock(scope: !11496, file: !133, line: 1703, column: 13)
!11505 = !DILocalVariable(name: "arc_ptr", scope: !11506, file: !133, line: 1706, type: !4046, align: 32)
!11506 = distinct !DILexicalBlock(scope: !11504, file: !133, line: 1706, column: 13)
!11507 = !DILocation(line: 1701, column: 31, scope: !11496)
!11508 = !DILocation(line: 1701, column: 46, scope: !11496)
!11509 = !DILocation(line: 1703, column: 26, scope: !11496)
!11510 = !DILocation(line: 1703, column: 17, scope: !11504)
!11511 = !DILocation(line: 993, column: 34, scope: !9702, inlinedAt: !11512)
!11512 = distinct !DILocation(line: 1706, column: 31, scope: !11504)
!11513 = !DILocation(line: 993, column: 40, scope: !9702, inlinedAt: !11512)
!11514 = !DILocation(line: 48, column: 26, scope: !9711, inlinedAt: !11515)
!11515 = distinct !DILocation(line: 995, column: 23, scope: !9702, inlinedAt: !11512)
!11516 = !DILocation(line: 935, column: 29, scope: !9719, inlinedAt: !11517)
!11517 = distinct !DILocation(line: 995, column: 36, scope: !9702, inlinedAt: !11512)
!11518 = !DILocation(line: 935, column: 35, scope: !9719, inlinedAt: !11517)
!11519 = !DILocation(line: 77, column: 35, scope: !9726, inlinedAt: !11517)
!11520 = !DILocation(line: 78, column: 17, scope: !9726, inlinedAt: !11517)
!11521 = !DILocation(line: 974, column: 47, scope: !9719, inlinedAt: !11517)
!11522 = !DILocation(line: 974, column: 22, scope: !9719, inlinedAt: !11517)
!11523 = !DILocation(line: 976, column: 6, scope: !9719, inlinedAt: !11517)
!11524 = !DILocation(line: 995, column: 47, scope: !9702, inlinedAt: !11512)
!11525 = !DILocation(line: 1706, column: 31, scope: !11504)
!11526 = !DILocation(line: 1706, column: 27, scope: !11504)
!11527 = !DILocation(line: 1706, column: 17, scope: !11506)
!11528 = !DILocation(line: 1708, column: 13, scope: !11506)
!11529 = !DILocation(line: 1710, column: 6, scope: !11496)
!11530 = distinct !DISubprogram(name: "from_inner_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17h530f39af753c12dbE", scope: !11422, file: !133, line: 307, type: !11531, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !9620, declaration: !11533, retainedNodes: !11534)
!11531 = !DISubroutineType(types: !11532)
!11532 = !{!11422, !4029, !212}
!11533 = !DISubprogram(name: "from_inner_in<core::wtf8::Wtf8, alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17h530f39af753c12dbE", scope: !11422, file: !133, line: 307, type: !11531, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !9620)
!11534 = !{!11535, !11536}
!11535 = !DILocalVariable(name: "ptr", arg: 1, scope: !11530, file: !133, line: 307, type: !4029)
!11536 = !DILocalVariable(name: "alloc", arg: 2, scope: !11530, file: !133, line: 307, type: !212)
!11537 = !DILocation(line: 307, column: 29, scope: !11530)
!11538 = !DILocation(line: 307, column: 56, scope: !11530)
!11539 = !DILocation(line: 309, column: 6, scope: !11530)
!11540 = distinct !DISubprogram(name: "from_inner_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17he4e15a5cd3c4ab95E", scope: !11319, file: !133, line: 307, type: !11541, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11543, retainedNodes: !11544)
!11541 = !DISubroutineType(types: !11542)
!11542 = !{!11319, !3934, !212}
!11543 = !DISubprogram(name: "from_inner_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$13from_inner_in17he4e15a5cd3c4ab95E", scope: !11319, file: !133, line: 307, type: !11541, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11544 = !{!11545, !11546}
!11545 = !DILocalVariable(name: "ptr", arg: 1, scope: !11540, file: !133, line: 307, type: !3934)
!11546 = !DILocalVariable(name: "alloc", arg: 2, scope: !11540, file: !133, line: 307, type: !212)
!11547 = !DILocation(line: 307, column: 29, scope: !11540)
!11548 = !DILocation(line: 307, column: 56, scope: !11540)
!11549 = !DILocation(line: 309, column: 6, scope: !11540)
!11550 = distinct !DISubprogram(name: "as_ptr<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$6as_ptr17h4ad520fd4ba446caE", scope: !11319, file: !133, line: 1623, type: !11551, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !11553, retainedNodes: !11554)
!11551 = !DISubroutineType(types: !11552)
!11552 = !{!1230, !11465}
!11553 = !DISubprogram(name: "as_ptr<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc4sync16Arc$LT$T$C$A$GT$6as_ptr17h4ad520fd4ba446caE", scope: !11319, file: !133, line: 1623, type: !11551, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!11554 = !{!11555, !11556}
!11555 = !DILocalVariable(name: "this", arg: 1, scope: !11550, file: !133, line: 1623, type: !11465)
!11556 = !DILocalVariable(name: "ptr", scope: !11557, file: !133, line: 1624, type: !3939, align: 32)
!11557 = distinct !DILexicalBlock(scope: !11550, file: !133, line: 1624, column: 9)
!11558 = !DILocation(line: 1623, column: 19, scope: !11550)
!11559 = !DILocation(line: 1624, column: 53, scope: !11550)
!11560 = !DILocalVariable(name: "self", arg: 1, scope: !11561, file: !1538, line: 401, type: !3934)
!11561 = distinct !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h16dee5912ee59ed7E", scope: !3934, file: !1538, line: 401, type: !11562, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2585, declaration: !11564, retainedNodes: !11565)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{!3939, !3934}
!11564 = !DISubprogram(name: "as_ptr<alloc::sync::ArcInner<[u8]>>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h16dee5912ee59ed7E", scope: !3934, file: !1538, line: 401, type: !11562, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2585)
!11565 = !{!11560}
!11566 = !DILocation(line: 401, column: 25, scope: !11561, inlinedAt: !11567)
!11567 = distinct !DILocation(line: 1624, column: 37, scope: !11550)
!11568 = !DILocation(line: 408, column: 6, scope: !11561, inlinedAt: !11567)
!11569 = !DILocation(line: 1624, column: 37, scope: !11550)
!11570 = !DILocation(line: 1624, column: 13, scope: !11557)
!11571 = !DILocation(line: 1629, column: 18, scope: !11557)
!11572 = !DILocation(line: 1630, column: 6, scope: !11550)
!11573 = distinct !DISubprogram(name: "data_offset_align", linkageName: "_ZN5alloc4sync17data_offset_align17hd46190c9c428fc67E", scope: !131, file: !133, line: 4037, type: !9781, scopeLine: 4037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11574)
!11574 = !{!11575, !11576}
!11575 = !DILocalVariable(name: "align", arg: 1, scope: !11573, file: !133, line: 4037, type: !9)
!11576 = !DILocalVariable(name: "layout", scope: !11577, file: !133, line: 4038, type: !39, align: 32)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !133, line: 4038, column: 5)
!11578 = !DILocation(line: 4037, column: 22, scope: !11573)
!11579 = !DILocation(line: 4038, column: 9, scope: !11577)
!11580 = !DILocation(line: 4038, column: 18, scope: !11573)
!11581 = !DILocation(line: 4039, column: 12, scope: !11577)
!11582 = !DILocation(line: 4039, column: 28, scope: !11577)
!11583 = !DILocation(line: 4039, column: 5, scope: !11577)
!11584 = !DILocation(line: 4040, column: 2, scope: !11573)
!11585 = distinct !DISubprogram(name: "copy_from_slice<u8>", linkageName: "_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$15copy_from_slice17h693720af8eb58578E", scope: !11319, file: !133, line: 2072, type: !11586, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !11588, retainedNodes: !11589)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{!11319, !432}
!11588 = !DISubprogram(name: "copy_from_slice<u8>", linkageName: "_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$15copy_from_slice17h693720af8eb58578E", scope: !11319, file: !133, line: 2072, type: !11586, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!11589 = !{!11590, !11591}
!11590 = !DILocalVariable(name: "v", arg: 1, scope: !11585, file: !133, line: 2072, type: !432)
!11591 = !DILocalVariable(name: "ptr", scope: !11592, file: !133, line: 2074, type: !3939, align: 32)
!11592 = distinct !DILexicalBlock(scope: !11585, file: !133, line: 2074, column: 13)
!11593 = !DILocation(line: 2072, column: 31, scope: !11585)
!11594 = !DILocation(line: 2074, column: 23, scope: !11585)
!11595 = !DILocation(line: 2074, column: 17, scope: !11592)
!11596 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !11597)
!11597 = distinct !DILocation(line: 2076, column: 40, scope: !11592)
!11598 = !DILocation(line: 2076, column: 50, scope: !11592)
!11599 = !DILocation(line: 526, column: 44, scope: !459, inlinedAt: !11600)
!11600 = distinct !DILocation(line: 2076, column: 13, scope: !11592)
!11601 = !DILocation(line: 526, column: 59, scope: !459, inlinedAt: !11600)
!11602 = !DILocation(line: 526, column: 72, scope: !459, inlinedAt: !11600)
!11603 = !DILocation(line: 77, column: 35, scope: !472, inlinedAt: !11600)
!11604 = !DILocation(line: 78, column: 17, scope: !472, inlinedAt: !11600)
!11605 = !DILocation(line: 547, column: 14, scope: !459, inlinedAt: !11600)
!11606 = !DILocation(line: 2078, column: 13, scope: !11592)
!11607 = !DILocation(line: 2080, column: 6, scope: !11585)
!11608 = distinct !DISubprogram(name: "allocate_for_slice<u8>", linkageName: "_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h549bd140e82d1cafE", scope: !11319, file: !133, line: 2058, type: !11609, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !11611, retainedNodes: !11612)
!11609 = !DISubroutineType(types: !11610)
!11610 = !{!3939, !9}
!11611 = !DISubprogram(name: "allocate_for_slice<u8>", linkageName: "_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice17h549bd140e82d1cafE", scope: !11319, file: !133, line: 2058, type: !11609, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!11612 = !{!11613}
!11613 = !DILocalVariable(name: "len", arg: 1, scope: !11608, file: !133, line: 2058, type: !9)
!11614 = !DILocation(line: 2058, column: 34, scope: !11608)
!11615 = !DILocation(line: 2061, column: 17, scope: !11608)
!11616 = !DILocation(line: 1227, column: 19, scope: !9826, inlinedAt: !11617)
!11617 = distinct !DILocation(line: 2061, column: 41, scope: !11608)
!11618 = !DILocation(line: 1233, column: 17, scope: !9834, inlinedAt: !11617)
!11619 = !DILocation(line: 1231, column: 15, scope: !9826, inlinedAt: !11617)
!11620 = !DILocation(line: 1231, column: 9, scope: !9826, inlinedAt: !11617)
!11621 = !DILocation(line: 1233, column: 23, scope: !9834, inlinedAt: !11617)
!11622 = !DILocation(line: 1232, column: 16, scope: !9826, inlinedAt: !11617)
!11623 = !DILocation(line: 1232, column: 16, scope: !9832, inlinedAt: !11617)
!11624 = !DILocation(line: 1235, column: 6, scope: !9826, inlinedAt: !11617)
!11625 = !DILocation(line: 2061, column: 41, scope: !11608)
!11626 = !DILocation(line: 2060, column: 13, scope: !11608)
!11627 = !DILocation(line: 2066, column: 6, scope: !11608)
!11628 = distinct !DISubprogram(name: "{closure#0}<u8>", linkageName: "_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17h8cd9adf16b4b5178E", scope: !11328, file: !133, line: 2062, type: !11629, scopeLine: 2062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !11631)
!11629 = !DISubroutineType(types: !11630)
!11630 = !{!1959, !11327, !39}
!11631 = !{!11632, !11633}
!11632 = !DILocalVariable(name: "layout", arg: 2, scope: !11628, file: !133, line: 2062, type: !39)
!11633 = !DILocalVariable(arg: 1, scope: !11628, file: !133, line: 2062, type: !11327)
!11634 = !DILocation(line: 2062, column: 17, scope: !11628)
!11635 = !DILocation(line: 2062, column: 18, scope: !11628)
!11636 = !DILocation(line: 2062, column: 33, scope: !11628)
!11637 = !DILocation(line: 2062, column: 49, scope: !11628)
!11638 = distinct !DISubprogram(name: "{closure#1}<u8>", linkageName: "_ZN5alloc4sync22Arc$LT$$u5b$T$u5d$$GT$18allocate_for_slice28_$u7b$$u7b$closure$u7d$$u7d$17hf9a40612878757aaE", scope: !11328, file: !133, line: 2063, type: !11639, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !11641)
!11639 = !DISubroutineType(types: !11640)
!11640 = !{!3939, !11330, !463}
!11641 = !{!11642, !11643}
!11642 = !DILocalVariable(name: "mem", arg: 2, scope: !11638, file: !133, line: 2063, type: !463)
!11643 = !DILocalVariable(name: "len", scope: !11638, file: !133, line: 2058, type: !9, align: 32)
!11644 = !DILocation(line: 2058, column: 34, scope: !11638)
!11645 = !DILocation(line: 2063, column: 18, scope: !11638)
!11646 = !DILocation(line: 31, column: 26, scope: !9866, inlinedAt: !11647)
!11647 = distinct !DILocation(line: 2063, column: 57, scope: !11638)
!11648 = !DILocation(line: 2063, column: 70, scope: !11638)
!11649 = !DILocation(line: 2063, column: 23, scope: !11638)
!11650 = !DILocation(line: 2063, column: 96, scope: !11638)
!11651 = distinct !DISubprogram(name: "arcinner_layout_for_value_layout", linkageName: "_ZN5alloc4sync32arcinner_layout_for_value_layout17h6dbf0a4dd8fecdcaE", scope: !131, file: !133, line: 393, type: !9876, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11652)
!11652 = !{!11653}
!11653 = !DILocalVariable(name: "layout", arg: 1, scope: !11651, file: !133, line: 393, type: !39)
!11654 = !DILocation(line: 393, column: 37, scope: !11651)
!11655 = !DILocation(line: 398, column: 5, scope: !11651)
!11656 = !DILocation(line: 398, column: 35, scope: !11651)
!11657 = !DILocation(line: 1232, column: 16, scope: !9884, inlinedAt: !11658)
!11658 = distinct !DILocation(line: 398, column: 50, scope: !11651)
!11659 = !DILocation(line: 1227, column: 19, scope: !9885, inlinedAt: !11658)
!11660 = !DILocation(line: 1233, column: 17, scope: !9892, inlinedAt: !11658)
!11661 = !DILocation(line: 1231, column: 15, scope: !9885, inlinedAt: !11658)
!11662 = !DILocation(line: 1231, column: 9, scope: !9885, inlinedAt: !11658)
!11663 = !DILocation(line: 1233, column: 23, scope: !9892, inlinedAt: !11658)
!11664 = !DILocation(line: 1232, column: 16, scope: !9885, inlinedAt: !11658)
!11665 = !DILocation(line: 398, column: 61, scope: !11651)
!11666 = !DILocation(line: 399, column: 2, scope: !11651)
!11667 = distinct !DISubprogram(name: "clone_into", linkageName: "_ZN5alloc4wtf810clone_into17h4c68d45e2c3acdb6E", scope: !9415, file: !9413, line: 490, type: !11668, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11671)
!11668 = !DISubroutineType(types: !11669)
!11669 = !{null, !6697, !11670}
!11670 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::wtf8::Wtf8Buf", baseType: !9419, size: 32, align: 32, dwarfAddressSpace: 0)
!11671 = !{!11672, !11673}
!11672 = !DILocalVariable(name: "slice", arg: 1, scope: !11667, file: !9413, line: 490, type: !6697)
!11673 = !DILocalVariable(name: "buf", arg: 2, scope: !11667, file: !9413, line: 490, type: !11670)
!11674 = !DILocation(line: 490, column: 26, scope: !11667)
!11675 = !DILocation(line: 490, column: 40, scope: !11667)
!11676 = !DILocation(line: 491, column: 5, scope: !11667)
!11677 = !DILocation(line: 492, column: 11, scope: !11667)
!11678 = !DILocation(line: 492, column: 22, scope: !11667)
!11679 = !DILocation(line: 493, column: 2, scope: !11667)
!11680 = distinct !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc4wtf815to_string_lossy17hab172b277adef279E", scope: !9415, file: !9413, line: 465, type: !11681, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !11683)
!11681 = !DISubroutineType(types: !11682)
!11682 = !{!3456, !6697}
!11683 = !{!11684, !11685, !11687, !11689, !11691, !11693}
!11684 = !DILocalVariable(name: "slice", arg: 1, scope: !11680, file: !9413, line: 465, type: !6697)
!11685 = !DILocalVariable(name: "surrogate_pos", scope: !11686, file: !9413, line: 466, type: !9, align: 32)
!11686 = distinct !DILexicalBlock(scope: !11680, file: !9413, line: 466, column: 5)
!11687 = !DILocalVariable(name: "wtf8_bytes", scope: !11688, file: !9413, line: 469, type: !432, align: 32)
!11688 = distinct !DILexicalBlock(scope: !11686, file: !9413, line: 469, column: 5)
!11689 = !DILocalVariable(name: "utf8_bytes", scope: !11690, file: !9413, line: 470, type: !182, align: 32)
!11690 = distinct !DILexicalBlock(scope: !11688, file: !9413, line: 470, column: 5)
!11691 = !DILocalVariable(name: "pos", scope: !11692, file: !9413, line: 473, type: !9, align: 32)
!11692 = distinct !DILexicalBlock(scope: !11690, file: !9413, line: 473, column: 5)
!11693 = !DILocalVariable(name: "surrogate_pos", scope: !11694, file: !9413, line: 476, type: !9, align: 32)
!11694 = distinct !DILexicalBlock(scope: !11692, file: !9413, line: 476, column: 13)
!11695 = !DILocation(line: 465, column: 31, scope: !11680)
!11696 = !DILocation(line: 470, column: 9, scope: !11690)
!11697 = !DILocation(line: 473, column: 9, scope: !11692)
!11698 = !DILocation(line: 466, column: 42, scope: !11680)
!11699 = !DILocation(line: 466, column: 36, scope: !11680)
!11700 = !DILocation(line: 466, column: 9, scope: !11680)
!11701 = !DILocation(line: 466, column: 15, scope: !11680)
!11702 = !DILocation(line: 466, column: 15, scope: !11686)
!11703 = !DILocation(line: 469, column: 28, scope: !11686)
!11704 = !DILocation(line: 469, column: 9, scope: !11688)
!11705 = !DILocation(line: 470, column: 51, scope: !11688)
!11706 = !DILocation(line: 470, column: 26, scope: !11688)
!11707 = !DILocalVariable(name: "self", arg: 1, scope: !11708, file: !1225, line: 17, type: !432)
!11708 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3f2fb1ea6dffffe7E", scope: !6725, file: !1225, line: 17, type: !7395, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !7400, retainedNodes: !11709)
!11709 = !{!11707, !11710}
!11710 = !DILocalVariable(name: "index", arg: 2, scope: !11708, file: !1225, line: 17, type: !1316)
!11711 = !DILocation(line: 17, column: 14, scope: !11708, inlinedAt: !11712)
!11712 = distinct !DILocation(line: 471, column: 45, scope: !11690)
!11713 = !DILocation(line: 17, column: 21, scope: !11708, inlinedAt: !11712)
!11714 = !DILocalVariable(name: "self", arg: 1, scope: !11715, file: !1225, line: 523, type: !1316)
!11715 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN108_$LT$core..ops..range..RangeTo$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17hbe215ac020b63cc5E", scope: !1313, file: !1225, line: 523, type: !11716, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !11718)
!11716 = !DISubroutineType(types: !11717)
!11717 = !{!432, !1316, !432, !1241}
!11718 = !{!11714, !11719}
!11719 = !DILocalVariable(name: "slice", arg: 2, scope: !11715, file: !1225, line: 523, type: !432)
!11720 = !DILocation(line: 523, column: 14, scope: !11715, inlinedAt: !11721)
!11721 = distinct !DILocation(line: 18, column: 15, scope: !11708, inlinedAt: !11712)
!11722 = !DILocation(line: 523, column: 20, scope: !11715, inlinedAt: !11721)
!11723 = !DILocalVariable(name: "self", arg: 1, scope: !11724, file: !1225, line: 430, type: !1234)
!11724 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h093ccae546a3fe28E", scope: !1226, file: !1225, line: 430, type: !11725, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !11727)
!11725 = !DISubroutineType(types: !11726)
!11726 = !{!432, !1234, !432, !1241}
!11727 = !{!11723, !11728, !11729}
!11728 = !DILocalVariable(name: "slice", arg: 2, scope: !11724, file: !1225, line: 430, type: !432)
!11729 = !DILocalVariable(name: "new_len", scope: !11724, file: !1225, line: 432, type: !9, align: 32)
!11730 = !DILocation(line: 430, column: 14, scope: !11724, inlinedAt: !11731)
!11731 = distinct !DILocation(line: 524, column: 23, scope: !11715, inlinedAt: !11721)
!11732 = !DILocation(line: 430, column: 20, scope: !11724, inlinedAt: !11731)
!11733 = !DILocation(line: 432, column: 32, scope: !11724, inlinedAt: !11731)
!11734 = !DILocation(line: 432, column: 16, scope: !11724, inlinedAt: !11731)
!11735 = !DILocation(line: 432, column: 21, scope: !11724, inlinedAt: !11731)
!11736 = !DILocation(line: 433, column: 16, scope: !11724, inlinedAt: !11731)
!11737 = !DILocation(line: 438, column: 13, scope: !11724, inlinedAt: !11731)
!11738 = !DILocation(line: 82, column: 5, scope: !1272, inlinedAt: !11739)
!11739 = distinct !DILocation(line: 436, column: 24, scope: !11724, inlinedAt: !11731)
!11740 = !DILocation(line: 83, column: 5, scope: !1272, inlinedAt: !11739)
!11741 = !DILocation(line: 84, column: 5, scope: !1272, inlinedAt: !11739)
!11742 = !DILocation(line: 86, column: 15, scope: !1272, inlinedAt: !11739)
!11743 = !DILocation(line: 86, column: 9, scope: !1279, inlinedAt: !11739)
!11744 = !DILocation(line: 88, column: 24, scope: !1279, inlinedAt: !11739)
!11745 = !DILocation(line: 88, column: 9, scope: !1281, inlinedAt: !11739)
!11746 = !DILocation(line: 90, column: 2, scope: !1272, inlinedAt: !11739)
!11747 = !DILocation(line: 436, column: 24, scope: !11724, inlinedAt: !11731)
!11748 = !DILocation(line: 524, column: 23, scope: !11715, inlinedAt: !11721)
!11749 = !DILocation(line: 18, column: 15, scope: !11708, inlinedAt: !11712)
!11750 = !DILocation(line: 19, column: 6, scope: !11708, inlinedAt: !11712)
!11751 = !DILocation(line: 471, column: 45, scope: !11690)
!11752 = !DILocation(line: 471, column: 16, scope: !11690)
!11753 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !11754)
!11754 = distinct !DILocation(line: 472, column: 45, scope: !11690)
!11755 = !DILocation(line: 472, column: 45, scope: !11690)
!11756 = !DILocation(line: 472, column: 16, scope: !11690)
!11757 = !DILocation(line: 473, column: 19, scope: !11690)
!11758 = !DILocation(line: 467, column: 70, scope: !11680)
!11759 = !DILocation(line: 467, column: 39, scope: !11680)
!11760 = !DILocation(line: 467, column: 16, scope: !11680)
!11761 = !DILocation(line: 467, column: 9, scope: !11680)
!11762 = !DILocation(line: 474, column: 5, scope: !11692)
!11763 = !DILocation(line: 475, column: 36, scope: !11692)
!11764 = !DILocation(line: 475, column: 21, scope: !11692)
!11765 = !DILocation(line: 475, column: 15, scope: !11692)
!11766 = !DILocation(line: 475, column: 9, scope: !11692)
!11767 = !DILocation(line: 476, column: 19, scope: !11692)
!11768 = !DILocation(line: 476, column: 19, scope: !11694)
!11769 = !DILocation(line: 477, column: 58, scope: !11694)
!11770 = !DILocalVariable(name: "self", arg: 1, scope: !11771, file: !1225, line: 17, type: !432)
!11771 = distinct !DISubprogram(name: "index<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17ha5c37b5c2d23c000E", scope: !6725, file: !1225, line: 17, type: !11772, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11776, retainedNodes: !11774)
!11772 = !DISubroutineType(types: !11773)
!11773 = !{!432, !432, !1234, !1241}
!11774 = !{!11770, !11775}
!11775 = !DILocalVariable(name: "index", arg: 2, scope: !11771, file: !1225, line: 17, type: !1234)
!11776 = !{!23, !11777}
!11777 = !DITemplateTypeParameter(name: "I", type: !1234)
!11778 = !DILocation(line: 17, column: 14, scope: !11771, inlinedAt: !11779)
!11779 = distinct !DILocation(line: 477, column: 57, scope: !11694)
!11780 = !DILocation(line: 17, column: 21, scope: !11771, inlinedAt: !11779)
!11781 = !DILocation(line: 430, column: 14, scope: !11724, inlinedAt: !11782)
!11782 = distinct !DILocation(line: 18, column: 15, scope: !11771, inlinedAt: !11779)
!11783 = !DILocation(line: 430, column: 20, scope: !11724, inlinedAt: !11782)
!11784 = !DILocation(line: 432, column: 32, scope: !11724, inlinedAt: !11782)
!11785 = !DILocation(line: 432, column: 16, scope: !11724, inlinedAt: !11782)
!11786 = !DILocation(line: 432, column: 21, scope: !11724, inlinedAt: !11782)
!11787 = !DILocation(line: 433, column: 16, scope: !11724, inlinedAt: !11782)
!11788 = !DILocation(line: 438, column: 13, scope: !11724, inlinedAt: !11782)
!11789 = !DILocation(line: 82, column: 5, scope: !1272, inlinedAt: !11790)
!11790 = distinct !DILocation(line: 436, column: 24, scope: !11724, inlinedAt: !11782)
!11791 = !DILocation(line: 83, column: 5, scope: !1272, inlinedAt: !11790)
!11792 = !DILocation(line: 84, column: 5, scope: !1272, inlinedAt: !11790)
!11793 = !DILocation(line: 86, column: 15, scope: !1272, inlinedAt: !11790)
!11794 = !DILocation(line: 86, column: 9, scope: !1279, inlinedAt: !11790)
!11795 = !DILocation(line: 88, column: 24, scope: !1279, inlinedAt: !11790)
!11796 = !DILocation(line: 88, column: 9, scope: !1281, inlinedAt: !11790)
!11797 = !DILocation(line: 90, column: 2, scope: !1272, inlinedAt: !11790)
!11798 = !DILocation(line: 19, column: 6, scope: !11771, inlinedAt: !11779)
!11799 = !DILocation(line: 477, column: 57, scope: !11694)
!11800 = !DILocation(line: 477, column: 28, scope: !11694)
!11801 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !11802)
!11802 = distinct !DILocation(line: 478, column: 57, scope: !11694)
!11803 = !DILocation(line: 478, column: 57, scope: !11694)
!11804 = !DILocation(line: 478, column: 28, scope: !11694)
!11805 = !DILocation(line: 479, column: 23, scope: !11694)
!11806 = !DILocation(line: 482, column: 58, scope: !11692)
!11807 = !DILocation(line: 17, column: 14, scope: !6724, inlinedAt: !11808)
!11808 = distinct !DILocation(line: 482, column: 57, scope: !11692)
!11809 = !DILocation(line: 17, column: 21, scope: !6724, inlinedAt: !11808)
!11810 = !DILocation(line: 18, column: 15, scope: !6724, inlinedAt: !11808)
!11811 = !DILocation(line: 482, column: 57, scope: !11692)
!11812 = !DILocation(line: 482, column: 28, scope: !11692)
!11813 = !DILocation(line: 483, column: 72, scope: !11692)
!11814 = !DILocation(line: 483, column: 44, scope: !11692)
!11815 = !DILocation(line: 483, column: 24, scope: !11692)
!11816 = !DILocation(line: 0, scope: !11817)
!11817 = !DILexicalBlockFile(scope: !11680, file: !4885, discriminator: 0)
!11818 = !DILocation(line: 487, column: 2, scope: !11680)
!11819 = !DILocation(line: 479, column: 17, scope: !11694)
!11820 = distinct !DISubprogram(name: "clone_into", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$10clone_into17h95a954d179003937E", scope: !2617, file: !9413, line: 503, type: !11668, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11821, retainedNodes: !11822)
!11821 = !DISubprogram(name: "clone_into", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$10clone_into17h95a954d179003937E", scope: !2617, file: !9413, line: 503, type: !11668, scopeLine: 503, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11822 = !{!11823, !11824}
!11823 = !DILocalVariable(name: "self", arg: 1, scope: !11820, file: !9413, line: 503, type: !6697)
!11824 = !DILocalVariable(name: "buf", arg: 2, scope: !11820, file: !9413, line: 503, type: !11670)
!11825 = !DILocation(line: 503, column: 23, scope: !11820)
!11826 = !DILocation(line: 503, column: 30, scope: !11820)
!11827 = !DILocation(line: 504, column: 9, scope: !11820)
!11828 = !DILocation(line: 505, column: 6, scope: !11820)
!11829 = distinct !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$15to_string_lossy17h165c88a1ca506aafE", scope: !2617, file: !9413, line: 508, type: !11681, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11830, retainedNodes: !11831)
!11830 = !DISubprogram(name: "to_string_lossy", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$15to_string_lossy17h165c88a1ca506aafE", scope: !2617, file: !9413, line: 508, type: !11681, scopeLine: 508, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11831 = !{!11832}
!11832 = !DILocalVariable(name: "self", arg: 1, scope: !11829, file: !9413, line: 508, type: !6697)
!11833 = !DILocation(line: 508, column: 28, scope: !11829)
!11834 = !DILocation(line: 509, column: 9, scope: !11829)
!11835 = !DILocation(line: 510, column: 6, scope: !11829)
!11836 = distinct !DISubprogram(name: "into_rc", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$7into_rc17h30fff39b7099d8d2E", scope: !2617, file: !9413, line: 532, type: !11837, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11839, retainedNodes: !11840)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!9614, !6697}
!11839 = !DISubprogram(name: "into_rc", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$7into_rc17h30fff39b7099d8d2E", scope: !2617, file: !9413, line: 532, type: !11837, scopeLine: 532, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11840 = !{!11841, !11842}
!11841 = !DILocalVariable(name: "self", arg: 1, scope: !11836, file: !9413, line: 532, type: !6697)
!11842 = !DILocalVariable(name: "rc", scope: !11843, file: !9413, line: 533, type: !9490, align: 32)
!11843 = distinct !DILexicalBlock(scope: !11836, file: !9413, line: 533, column: 9)
!11844 = !DILocation(line: 532, column: 20, scope: !11836)
!11845 = !DILocation(line: 533, column: 42, scope: !11836)
!11846 = !DILocation(line: 533, column: 28, scope: !11836)
!11847 = !DILocation(line: 533, column: 13, scope: !11843)
!11848 = !DILocation(line: 534, column: 31, scope: !11843)
!11849 = !DILocation(line: 534, column: 18, scope: !11843)
!11850 = !DILocation(line: 535, column: 6, scope: !11836)
!11851 = distinct !DISubprogram(name: "into_arc", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8into_arc17h1fc2d5a255e01984E", scope: !2617, file: !9413, line: 526, type: !11852, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11854, retainedNodes: !11855)
!11852 = !DISubroutineType(types: !11853)
!11853 = !{!11422, !6697}
!11854 = !DISubprogram(name: "into_arc", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8into_arc17h1fc2d5a255e01984E", scope: !2617, file: !9413, line: 526, type: !11852, scopeLine: 526, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11855 = !{!11856, !11857}
!11856 = !DILocalVariable(name: "self", arg: 1, scope: !11851, file: !9413, line: 526, type: !6697)
!11857 = !DILocalVariable(name: "arc", scope: !11858, file: !9413, line: 527, type: !11319, align: 32)
!11858 = distinct !DILexicalBlock(scope: !11851, file: !9413, line: 527, column: 9)
!11859 = !DILocation(line: 526, column: 21, scope: !11851)
!11860 = !DILocation(line: 527, column: 45, scope: !11851)
!11861 = !DILocation(line: 527, column: 30, scope: !11851)
!11862 = !DILocation(line: 527, column: 13, scope: !11858)
!11863 = !DILocation(line: 528, column: 32, scope: !11858)
!11864 = !DILocation(line: 528, column: 18, scope: !11858)
!11865 = !DILocation(line: 529, column: 6, scope: !11851)
!11866 = distinct !DISubprogram(name: "into_box", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8into_box17ha327a62227d92943E", scope: !2617, file: !9413, line: 513, type: !11867, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11873, retainedNodes: !11874)
!11867 = !DISubroutineType(types: !11868)
!11868 = !{!11869, !6697}
!11869 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<core::wtf8::Wtf8, alloc::alloc::Global>", file: !2, size: 64, align: 32, elements: !11870, templateParams: !21, identifier: "260926541c49c3baddfec38aa7e9f7fa")
!11870 = !{!11871, !11872}
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !11869, file: !2, baseType: !2616, size: 32, align: 32)
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11869, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!11873 = !DISubprogram(name: "into_box", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8into_box17ha327a62227d92943E", scope: !2617, file: !9413, line: 513, type: !11867, scopeLine: 513, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11874 = !{!11875, !11876}
!11875 = !DILocalVariable(name: "self", arg: 1, scope: !11866, file: !9413, line: 513, type: !6697)
!11876 = !DILocalVariable(name: "boxed", scope: !11877, file: !9413, line: 514, type: !407, align: 32)
!11877 = distinct !DILexicalBlock(scope: !11866, file: !9413, line: 514, column: 9)
!11878 = !DILocation(line: 513, column: 21, scope: !11866)
!11879 = !DILocation(line: 514, column: 37, scope: !11866)
!11880 = !DILocation(line: 514, column: 48, scope: !11866)
!11881 = !DILocation(line: 514, column: 13, scope: !11877)
!11882 = !DILocation(line: 516, column: 6, scope: !11866)
!11883 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8to_owned17h8e00f054d89bd696E", scope: !2617, file: !9413, line: 498, type: !11884, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11886, retainedNodes: !11887)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{!9419, !6697}
!11886 = !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$8to_owned17h8e00f054d89bd696E", scope: !2617, file: !9413, line: 498, type: !11884, scopeLine: 498, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11887 = !{!11888}
!11888 = !DILocalVariable(name: "self", arg: 1, scope: !11883, file: !9413, line: 498, type: !6697)
!11889 = !DILocation(line: 498, column: 21, scope: !11883)
!11890 = !DILocation(line: 499, column: 9, scope: !11883)
!11891 = !DILocation(line: 500, column: 6, scope: !11883)
!11892 = distinct !DISubprogram(name: "empty_box", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$9empty_box17h9c1ecad2793703d1E", scope: !2617, file: !9413, line: 519, type: !11893, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11895, retainedNodes: !11896)
!11893 = !DISubroutineType(types: !11894)
!11894 = !{!11869}
!11895 = !DISubprogram(name: "empty_box", linkageName: "_ZN5alloc4wtf834_$LT$impl$u20$core..wtf8..Wtf8$GT$9empty_box17h9c1ecad2793703d1E", scope: !2617, file: !9413, line: 519, type: !11893, scopeLine: 519, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11896 = !{!11897}
!11897 = !DILocalVariable(name: "boxed", scope: !11898, file: !9413, line: 520, type: !407, align: 32)
!11898 = distinct !DILexicalBlock(scope: !11892, file: !9413, line: 520, column: 9)
!11899 = !DILocation(line: 520, column: 32, scope: !11892)
!11900 = !DILocation(line: 520, column: 13, scope: !11898)
!11901 = !DILocation(line: 522, column: 6, scope: !11892)
!11902 = distinct !DISubprogram(name: "into_string", linkageName: "_ZN5alloc4wtf87Wtf8Buf11into_string17hceaf914b337f589bE", scope: !9419, file: !9413, line: 368, type: !11903, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11920, retainedNodes: !11921)
!11903 = !DISubroutineType(types: !11904)
!11904 = !{!11905, !9419}
!11905 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::string::String, alloc::wtf8::Wtf8Buf>", scope: !335, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !11906, templateParams: !21, identifier: "9780866ca6067f58cc1a0bca4a23c000")
!11906 = !{!11907}
!11907 = !DICompositeType(tag: DW_TAG_variant_part, scope: !11905, file: !2, size: 128, align: 32, elements: !11908, templateParams: !21, identifier: "69b6f90400f1240baad802cb09404620", discriminator: !11919)
!11908 = !{!11909, !11915}
!11909 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !11907, file: !2, baseType: !11910, size: 128, align: 32, extraData: i32 -2147483648)
!11910 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !11905, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !11911, templateParams: !11913, identifier: "281fa62e668ecd7e8b514059652f846e")
!11911 = !{!11912}
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11910, file: !2, baseType: !178, size: 96, align: 32, offset: 32, flags: DIFlagPublic)
!11913 = !{!1634, !11914}
!11914 = !DITemplateTypeParameter(name: "E", type: !9419)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !11907, file: !2, baseType: !11916, size: 128, align: 32)
!11916 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !11905, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !11917, templateParams: !11913, identifier: "4df98d9f2aef90983443d4c486197bc")
!11917 = !{!11918}
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !11916, file: !2, baseType: !9419, size: 128, align: 32, flags: DIFlagPublic)
!11919 = !DIDerivedType(tag: DW_TAG_member, scope: !11905, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!11920 = !DISubprogram(name: "into_string", linkageName: "_ZN5alloc4wtf87Wtf8Buf11into_string17hceaf914b337f589bE", scope: !9419, file: !9413, line: 368, type: !11903, scopeLine: 368, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11921 = !{!11922}
!11922 = !DILocalVariable(name: "self", arg: 1, scope: !11902, file: !9413, line: 368, type: !9419)
!11923 = !DILocation(line: 368, column: 24, scope: !11902)
!11924 = !DILocation(line: 369, column: 12, scope: !11902)
!11925 = !DILocation(line: 369, column: 34, scope: !11902)
!11926 = !DILocation(line: 369, column: 39, scope: !11902)
!11927 = !DILocation(line: 369, column: 57, scope: !11902)
!11928 = !DILocation(line: 370, column: 53, scope: !11902)
!11929 = !DILocation(line: 370, column: 25, scope: !11902)
!11930 = !DILocation(line: 370, column: 13, scope: !11902)
!11931 = !DILocation(line: 369, column: 9, scope: !11902)
!11932 = !DILocation(line: 372, column: 13, scope: !11902)
!11933 = !DILocation(line: 374, column: 6, scope: !11902)
!11934 = distinct !DISubprogram(name: "as_mut_slice", linkageName: "_ZN5alloc4wtf87Wtf8Buf12as_mut_slice17h070ab0b5060d4428E", scope: !9419, file: !9413, line: 180, type: !11935, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11937, retainedNodes: !11938)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{!6789, !11670}
!11937 = !DISubprogram(name: "as_mut_slice", linkageName: "_ZN5alloc4wtf87Wtf8Buf12as_mut_slice17h070ab0b5060d4428E", scope: !9419, file: !9413, line: 180, type: !11935, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!11938 = !{!11939}
!11939 = !DILocalVariable(name: "self", arg: 1, scope: !11934, file: !9413, line: 180, type: !11670)
!11940 = !DILocation(line: 180, column: 25, scope: !11934)
!11941 = !DILocation(line: 184, column: 49, scope: !11934)
!11942 = !DILocation(line: 184, column: 18, scope: !11934)
!11943 = !DILocation(line: 185, column: 6, scope: !11934)
!11944 = distinct !DISubprogram(name: "as_known_utf8", linkageName: "_ZN5alloc4wtf87Wtf8Buf13as_known_utf817h68284879eece96fcE", scope: !9419, file: !9413, line: 190, type: !11945, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11947, retainedNodes: !11948)
!11945 = !DISubroutineType(types: !11946)
!11946 = !{!2492, !9418}
!11947 = !DISubprogram(name: "as_known_utf8", linkageName: "_ZN5alloc4wtf87Wtf8Buf13as_known_utf817h68284879eece96fcE", scope: !9419, file: !9413, line: 190, type: !11945, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!11948 = !{!11949}
!11949 = !DILocalVariable(name: "self", arg: 1, scope: !11944, file: !9413, line: 190, type: !9418)
!11950 = !DILocation(line: 190, column: 22, scope: !11944)
!11951 = !DILocation(line: 191, column: 12, scope: !11944)
!11952 = !DILocation(line: 195, column: 13, scope: !11944)
!11953 = !DILocation(line: 191, column: 9, scope: !11944)
!11954 = !DILocation(line: 193, column: 52, scope: !11944)
!11955 = !DILocation(line: 193, column: 57, scope: !11944)
!11956 = !DILocation(line: 193, column: 27, scope: !11944)
!11957 = !DILocation(line: 193, column: 13, scope: !11944)
!11958 = !DILocation(line: 197, column: 6, scope: !11944)
!11959 = distinct !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc4wtf87Wtf8Buf13with_capacity17h68c2bbb0c7ecaf02E", scope: !9419, file: !9413, line: 101, type: !11960, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11962, retainedNodes: !11963)
!11960 = !DISubroutineType(types: !11961)
!11961 = !{!9419, !9}
!11962 = !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc4wtf87Wtf8Buf13with_capacity17h68c2bbb0c7ecaf02E", scope: !9419, file: !9413, line: 101, type: !11960, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!11963 = !{!11964}
!11964 = !DILocalVariable(name: "capacity", arg: 1, scope: !11959, file: !9413, line: 101, type: !9)
!11965 = !DILocation(line: 101, column: 26, scope: !11959)
!11966 = !DILocation(line: 102, column: 26, scope: !11959)
!11967 = !DILocation(line: 102, column: 9, scope: !11959)
!11968 = !DILocation(line: 103, column: 6, scope: !11959)
!11969 = distinct !DISubprogram(name: "into_string_lossy", linkageName: "_ZN5alloc4wtf87Wtf8Buf17into_string_lossy17hfa9b0e4c35cb638fE", scope: !9419, file: !9413, line: 381, type: !11970, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !11972, retainedNodes: !11973)
!11970 = !DISubroutineType(types: !11971)
!11971 = !{!178, !9419}
!11972 = !DISubprogram(name: "into_string_lossy", linkageName: "_ZN5alloc4wtf87Wtf8Buf17into_string_lossy17hfa9b0e4c35cb638fE", scope: !9419, file: !9413, line: 381, type: !11970, scopeLine: 381, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!11973 = !{!11974, !11975, !11977}
!11974 = !DILocalVariable(name: "self", arg: 1, scope: !11969, file: !9413, line: 381, type: !9419)
!11975 = !DILocalVariable(name: "pos", scope: !11976, file: !9413, line: 383, type: !9, align: 32)
!11976 = distinct !DILexicalBlock(scope: !11969, file: !9413, line: 383, column: 13)
!11977 = !DILocalVariable(name: "surrogate_pos", scope: !11978, file: !9413, line: 384, type: !9, align: 32)
!11978 = distinct !DILexicalBlock(scope: !11976, file: !9413, line: 384, column: 75)
!11979 = !DILocation(line: 381, column: 30, scope: !11969)
!11980 = !DILocation(line: 383, column: 17, scope: !11976)
!11981 = !DILocation(line: 382, column: 13, scope: !11969)
!11982 = !DILocation(line: 383, column: 27, scope: !11969)
!11983 = !DILocation(line: 384, column: 13, scope: !11976)
!11984 = !DILocation(line: 391, column: 46, scope: !11969)
!11985 = !DILocation(line: 391, column: 18, scope: !11969)
!11986 = !DILocation(line: 392, column: 6, scope: !11969)
!11987 = !DILocation(line: 384, column: 50, scope: !11978)
!11988 = !DILocation(line: 384, column: 70, scope: !11978)
!11989 = !DILocation(line: 384, column: 55, scope: !11978)
!11990 = !DILocation(line: 384, column: 23, scope: !11978)
!11991 = !DILocation(line: 384, column: 29, scope: !11978)
!11992 = !DILocation(line: 385, column: 23, scope: !11978)
!11993 = !DILocation(line: 385, column: 17, scope: !11978)
!11994 = !DILocation(line: 388, column: 43, scope: !11978)
!11995 = !DILocation(line: 388, column: 27, scope: !11978)
!11996 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !11997)
!11997 = distinct !DILocation(line: 388, column: 75, scope: !11978)
!11998 = !DILocation(line: 388, column: 75, scope: !11978)
!11999 = !DILocation(line: 388, column: 48, scope: !11978)
!12000 = !DILocation(line: 381, column: 5, scope: !11969)
!12001 = distinct !DISubprogram(name: "push_code_point_unchecked", linkageName: "_ZN5alloc4wtf87Wtf8Buf25push_code_point_unchecked17he846b99334e62b04E", scope: !9419, file: !9413, line: 168, type: !12002, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12004, retainedNodes: !12005)
!12002 = !DISubroutineType(types: !12003)
!12003 = !{null, !11670, !6815}
!12004 = !DISubprogram(name: "push_code_point_unchecked", linkageName: "_ZN5alloc4wtf87Wtf8Buf25push_code_point_unchecked17he846b99334e62b04E", scope: !9419, file: !9413, line: 168, type: !12002, scopeLine: 168, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!12005 = !{!12006, !12007, !12008, !12011}
!12006 = !DILocalVariable(name: "self", arg: 1, scope: !12001, file: !9413, line: 168, type: !11670)
!12007 = !DILocalVariable(name: "code_point", arg: 2, scope: !12001, file: !9413, line: 168, type: !6815)
!12008 = !DILocalVariable(name: "bytes", scope: !12009, file: !9413, line: 169, type: !12010, align: 8)
!12009 = distinct !DILexicalBlock(scope: !12001, file: !9413, line: 169, column: 9)
!12010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 32, align: 8, elements: !2243)
!12011 = !DILocalVariable(name: "bytes", scope: !12012, file: !9413, line: 170, type: !5130, align: 32)
!12012 = distinct !DILexicalBlock(scope: !12009, file: !9413, line: 170, column: 9)
!12013 = !DILocation(line: 168, column: 41, scope: !12001)
!12014 = !DILocation(line: 168, column: 52, scope: !12001)
!12015 = !DILocation(line: 169, column: 13, scope: !12009)
!12016 = !DILocation(line: 169, column: 25, scope: !12001)
!12017 = !DILocation(line: 170, column: 48, scope: !12009)
!12018 = !DILocation(line: 170, column: 21, scope: !12009)
!12019 = !DILocation(line: 170, column: 13, scope: !12012)
!12020 = !DILocation(line: 171, column: 20, scope: !12012)
!12021 = !DILocation(line: 172, column: 6, scope: !12001)
!12022 = distinct !DISubprogram(name: "clear", linkageName: "_ZN5alloc4wtf87Wtf8Buf5clear17h24528a3c25445074E", scope: !9419, file: !9413, line: 134, type: !12023, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12025, retainedNodes: !12026)
!12023 = !DISubroutineType(types: !12024)
!12024 = !{null, !11670}
!12025 = !DISubprogram(name: "clear", linkageName: "_ZN5alloc4wtf87Wtf8Buf5clear17h24528a3c25445074E", scope: !9419, file: !9413, line: 134, type: !12023, scopeLine: 134, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!12026 = !{!12027}
!12027 = !DILocalVariable(name: "self", arg: 1, scope: !12022, file: !9413, line: 134, type: !11670)
!12028 = !DILocation(line: 134, column: 18, scope: !12022)
!12029 = !DILocation(line: 135, column: 20, scope: !12022)
!12030 = !DILocation(line: 136, column: 9, scope: !12022)
!12031 = !DILocation(line: 137, column: 6, scope: !12022)
!12032 = distinct !DISubprogram(name: "as_slice", linkageName: "_ZN5alloc4wtf87Wtf8Buf8as_slice17h1c24bb81eee39dafE", scope: !9419, file: !9413, line: 175, type: !12033, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12035, retainedNodes: !12036)
!12033 = !DISubroutineType(types: !12034)
!12034 = !{!6697, !9418}
!12035 = !DISubprogram(name: "as_slice", linkageName: "_ZN5alloc4wtf87Wtf8Buf8as_slice17h1c24bb81eee39dafE", scope: !9419, file: !9413, line: 175, type: !12033, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!12036 = !{!12037}
!12037 = !DILocalVariable(name: "self", arg: 1, scope: !12032, file: !9413, line: 175, type: !9418)
!12038 = !DILocation(line: 175, column: 21, scope: !12032)
!12039 = !DILocation(line: 176, column: 45, scope: !12032)
!12040 = !DILocation(line: 176, column: 18, scope: !12032)
!12041 = !DILocation(line: 177, column: 6, scope: !12032)
!12042 = distinct !DISubprogram(name: "from_box", linkageName: "_ZN5alloc4wtf87Wtf8Buf8from_box17h59544362b44a51baE", scope: !9419, file: !9413, line: 402, type: !12043, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12045, retainedNodes: !12046)
!12043 = !DISubroutineType(types: !12044)
!12044 = !{!9419, !11869}
!12045 = !DISubprogram(name: "from_box", linkageName: "_ZN5alloc4wtf87Wtf8Buf8from_box17h59544362b44a51baE", scope: !9419, file: !9413, line: 402, type: !12043, scopeLine: 402, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!12046 = !{!12047, !12048}
!12047 = !DILocalVariable(name: "boxed", arg: 1, scope: !12042, file: !9413, line: 402, type: !11869)
!12048 = !DILocalVariable(name: "bytes", scope: !12049, file: !9413, line: 403, type: !407, align: 32)
!12049 = distinct !DILexicalBlock(scope: !12042, file: !9413, line: 403, column: 9)
!12050 = !DILocation(line: 402, column: 21, scope: !12042)
!12051 = !DILocation(line: 403, column: 41, scope: !12042)
!12052 = !DILocation(line: 403, column: 13, scope: !12049)
!12053 = !DILocation(line: 404, column: 32, scope: !12049)
!12054 = !DILocation(line: 404, column: 9, scope: !12049)
!12055 = !DILocation(line: 405, column: 6, scope: !12042)
!12056 = distinct !DISubprogram(name: "from_wide", linkageName: "_ZN5alloc4wtf87Wtf8Buf9from_wide17h9a8f6a521fd00398E", scope: !9419, file: !9413, line: 143, type: !12057, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12059, retainedNodes: !12060)
!12057 = !DISubroutineType(types: !12058)
!12058 = !{!9419, !7515}
!12059 = !DISubprogram(name: "from_wide", linkageName: "_ZN5alloc4wtf87Wtf8Buf9from_wide17h9a8f6a521fd00398E", scope: !9419, file: !9413, line: 143, type: !12057, scopeLine: 143, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!12060 = !{!12061, !12062, !12064, !12066, !12068, !12070, !12072, !12074}
!12061 = !DILocalVariable(name: "v", arg: 1, scope: !12056, file: !9413, line: 143, type: !7515)
!12062 = !DILocalVariable(name: "string", scope: !12063, file: !9413, line: 144, type: !9419, align: 32)
!12063 = distinct !DILexicalBlock(scope: !12056, file: !9413, line: 144, column: 9)
!12064 = !DILocalVariable(name: "iter", scope: !12065, file: !9413, line: 145, type: !723, align: 32)
!12065 = distinct !DILexicalBlock(scope: !12063, file: !9413, line: 145, column: 9)
!12066 = !DILocalVariable(name: "item", scope: !12067, file: !9413, line: 145, type: !1112, align: 32)
!12067 = distinct !DILexicalBlock(scope: !12065, file: !9413, line: 145, column: 59)
!12068 = !DILocalVariable(name: "ch", scope: !12069, file: !9413, line: 147, type: !574, align: 32)
!12069 = distinct !DILexicalBlock(scope: !12067, file: !9413, line: 147, column: 17)
!12070 = !DILocalVariable(name: "surrogate", scope: !12071, file: !9413, line: 148, type: !976, align: 16)
!12071 = distinct !DILexicalBlock(scope: !12067, file: !9413, line: 148, column: 17)
!12072 = !DILocalVariable(name: "surrogate", scope: !12073, file: !9413, line: 149, type: !359, align: 16)
!12073 = distinct !DILexicalBlock(scope: !12071, file: !9413, line: 149, column: 21)
!12074 = !DILocalVariable(name: "code_point", scope: !12075, file: !9413, line: 151, type: !6815, align: 32)
!12075 = distinct !DILexicalBlock(scope: !12073, file: !9413, line: 151, column: 21)
!12076 = !DILocation(line: 143, column: 22, scope: !12056)
!12077 = !DILocation(line: 144, column: 13, scope: !12063)
!12078 = !DILocation(line: 145, column: 21, scope: !12065)
!12079 = !DILocation(line: 145, column: 13, scope: !12067)
!12080 = !DILocation(line: 148, column: 21, scope: !12071)
!12081 = !DILocation(line: 144, column: 26, scope: !12056)
!12082 = !DILocation(line: 145, column: 42, scope: !12063)
!12083 = !DILocation(line: 145, column: 49, scope: !12063)
!12084 = !DILocation(line: 145, column: 21, scope: !12063)
!12085 = !DILocation(line: 145, column: 9, scope: !12065)
!12086 = !DILocation(line: 145, column: 13, scope: !12065)
!12087 = !DILocation(line: 146, column: 19, scope: !12067)
!12088 = !DILocation(line: 146, column: 13, scope: !12067)
!12089 = !DILocation(line: 162, column: 9, scope: !12063)
!12090 = !DILocation(line: 163, column: 6, scope: !12056)
!12091 = !DILocation(line: 148, column: 21, scope: !12067)
!12092 = !DILocation(line: 149, column: 47, scope: !12071)
!12093 = !DILocation(line: 149, column: 25, scope: !12073)
!12094 = !DILocation(line: 151, column: 77, scope: !12073)
!12095 = !DILocation(line: 151, column: 47, scope: !12073)
!12096 = !DILocation(line: 151, column: 25, scope: !12075)
!12097 = !DILocation(line: 153, column: 21, scope: !12075)
!12098 = !DILocation(line: 157, column: 32, scope: !12075)
!12099 = !DILocation(line: 147, column: 20, scope: !12067)
!12100 = !DILocation(line: 147, column: 20, scope: !12069)
!12101 = !DILocation(line: 147, column: 34, scope: !12069)
!12102 = !DILocation(line: 0, scope: !12103)
!12103 = !DILexicalBlockFile(scope: !12056, file: !4885, discriminator: 0)
!12104 = distinct !DISubprogram(name: "push_char", linkageName: "_ZN5alloc4wtf87Wtf8Buf9push_char17ha5abd75dfbedb9b6E", scope: !9419, file: !9413, line: 312, type: !12105, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12107, retainedNodes: !12108)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{null, !11670, !574}
!12107 = !DISubprogram(name: "push_char", linkageName: "_ZN5alloc4wtf87Wtf8Buf9push_char17ha5abd75dfbedb9b6E", scope: !9419, file: !9413, line: 312, type: !12105, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!12108 = !{!12109, !12110}
!12109 = !DILocalVariable(name: "self", arg: 1, scope: !12104, file: !9413, line: 312, type: !11670)
!12110 = !DILocalVariable(name: "c", arg: 2, scope: !12104, file: !9413, line: 312, type: !574)
!12111 = !DILocation(line: 312, column: 22, scope: !12104)
!12112 = !DILocation(line: 312, column: 33, scope: !12104)
!12113 = !DILocation(line: 314, column: 49, scope: !12104)
!12114 = !DILocation(line: 314, column: 23, scope: !12104)
!12115 = !DILocation(line: 315, column: 6, scope: !12104)
!12116 = distinct !DISubprogram(name: "to_owned", linkageName: "_ZN5alloc4wtf88to_owned17h31a5efc662d37019E", scope: !9415, file: !9413, line: 455, type: !11884, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12117)
!12117 = !{!12118}
!12118 = !DILocalVariable(name: "slice", arg: 1, scope: !12116, file: !9413, line: 455, type: !6697)
!12119 = !DILocation(line: 455, column: 24, scope: !12116)
!12120 = !DILocation(line: 456, column: 28, scope: !12116)
!12121 = !DILocation(line: 456, column: 39, scope: !12116)
!12122 = !DILocation(line: 456, column: 5, scope: !12116)
!12123 = !DILocation(line: 457, column: 2, scope: !12116)
!12124 = distinct !DISubprogram(name: "alloc_zeroed", linkageName: "_ZN5alloc5alloc12alloc_zeroed17hafd657b05720231aE", scope: !213, file: !294, line: 172, type: !12125, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12127)
!12125 = !DISubroutineType(types: !12126)
!12126 = !{!463, !39}
!12127 = !{!12128}
!12128 = !DILocalVariable(name: "layout", arg: 1, scope: !12124, file: !294, line: 172, type: !39)
!12129 = !DILocation(line: 172, column: 28, scope: !12124)
!12130 = !DILocation(line: 176, column: 9, scope: !12124)
!12131 = !DILocation(line: 178, column: 36, scope: !12124)
!12132 = !DILocation(line: 178, column: 51, scope: !12124)
!12133 = !DILocation(line: 178, column: 9, scope: !12124)
!12134 = !DILocation(line: 180, column: 2, scope: !12124)
!12135 = distinct !DISubprogram(name: "exchange_malloc", linkageName: "_ZN5alloc5alloc15exchange_malloc17h6d84c5d751dea1cdE", scope: !213, file: !294, line: 350, type: !12136, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12138)
!12136 = !DISubroutineType(types: !12137)
!12137 = !{!463, !9, !9}
!12138 = !{!12139, !12140, !12141, !12143}
!12139 = !DILocalVariable(name: "size", arg: 1, scope: !12135, file: !294, line: 350, type: !9)
!12140 = !DILocalVariable(name: "align", arg: 2, scope: !12135, file: !294, line: 350, type: !9)
!12141 = !DILocalVariable(name: "layout", scope: !12142, file: !294, line: 351, type: !39, align: 32)
!12142 = distinct !DILexicalBlock(scope: !12135, file: !294, line: 351, column: 5)
!12143 = !DILocalVariable(name: "ptr", scope: !12144, file: !294, line: 353, type: !1932, align: 32)
!12144 = distinct !DILexicalBlock(scope: !12142, file: !294, line: 353, column: 9)
!12145 = !DILocation(line: 350, column: 27, scope: !12135)
!12146 = !DILocation(line: 350, column: 40, scope: !12135)
!12147 = !DILocation(line: 351, column: 27, scope: !12135)
!12148 = !DILocation(line: 351, column: 9, scope: !12142)
!12149 = !DILocation(line: 352, column: 18, scope: !12142)
!12150 = !DILocation(line: 352, column: 11, scope: !12142)
!12151 = !DILocation(line: 352, column: 5, scope: !12142)
!12152 = !DILocation(line: 354, column: 19, scope: !12142)
!12153 = !DILocation(line: 353, column: 12, scope: !12142)
!12154 = !DILocation(line: 353, column: 12, scope: !12144)
!12155 = !DILocation(line: 353, column: 24, scope: !12144)
!12156 = !DILocation(line: 356, column: 2, scope: !12135)
!12157 = distinct !DISubprogram(name: "handle_alloc_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error17h1e5cf49dcf30c6c7E", scope: !213, file: !294, line: 399, type: !12158, scopeLine: 399, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12160)
!12158 = !DISubroutineType(types: !12159)
!12159 = !{null, !39}
!12160 = !{!12161}
!12161 = !DILocalVariable(name: "layout", arg: 1, scope: !12157, file: !294, line: 399, type: !39)
!12162 = !DILocation(line: 399, column: 33, scope: !12157)
!12163 = !DILocation(line: 417, column: 5, scope: !12157)
!12164 = distinct !DISubprogram(name: "ct_error", linkageName: "_ZN5alloc5alloc18handle_alloc_error8ct_error17h16e347b0607ab49cE", scope: !12165, file: !294, line: 400, type: !12158, scopeLine: 400, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12166)
!12165 = !DINamespace(name: "handle_alloc_error", scope: !213)
!12166 = !{!12167}
!12167 = !DILocalVariable(arg: 1, scope: !12164, file: !294, line: 400, type: !39)
!12168 = !DILocation(line: 400, column: 23, scope: !12164)
!12169 = !DILocation(line: 401, column: 9, scope: !12164)
!12170 = distinct !DISubprogram(name: "alloc", linkageName: "_ZN5alloc5alloc5alloc17h37a31fc1ab4dfd1eE", scope: !213, file: !294, line: 89, type: !12125, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12171)
!12171 = !{!12172}
!12172 = !DILocalVariable(name: "layout", arg: 1, scope: !12170, file: !294, line: 89, type: !39)
!12173 = !DILocation(line: 89, column: 21, scope: !12170)
!12174 = !DILocation(line: 93, column: 9, scope: !12170)
!12175 = !DILocation(line: 95, column: 29, scope: !12170)
!12176 = !DILocation(line: 95, column: 44, scope: !12170)
!12177 = !DILocation(line: 95, column: 9, scope: !12170)
!12178 = !DILocation(line: 97, column: 2, scope: !12170)
!12179 = distinct !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h1d93fc195818213bE", scope: !212, file: !294, line: 185, type: !12180, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12182, retainedNodes: !12183)
!12180 = !DISubroutineType(types: !12181)
!12181 = !{!1959, !9407, !39, !643}
!12182 = !DISubprogram(name: "alloc_impl", linkageName: "_ZN5alloc5alloc6Global10alloc_impl17h1d93fc195818213bE", scope: !212, file: !294, line: 185, type: !12180, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!12183 = !{!12184, !12185, !12186, !12187, !12189, !12191, !12193, !12195}
!12184 = !DILocalVariable(name: "self", arg: 1, scope: !12179, file: !294, line: 185, type: !9407)
!12185 = !DILocalVariable(name: "layout", arg: 2, scope: !12179, file: !294, line: 185, type: !39)
!12186 = !DILocalVariable(name: "zeroed", arg: 3, scope: !12179, file: !294, line: 185, type: !643)
!12187 = !DILocalVariable(name: "size", scope: !12188, file: !294, line: 189, type: !9, align: 32)
!12188 = distinct !DILexicalBlock(scope: !12179, file: !294, line: 189, column: 13)
!12189 = !DILocalVariable(name: "raw_ptr", scope: !12190, file: !294, line: 190, type: !463, align: 32)
!12190 = distinct !DILexicalBlock(scope: !12188, file: !294, line: 190, column: 17)
!12191 = !DILocalVariable(name: "ptr", scope: !12192, file: !294, line: 191, type: !197, align: 32)
!12192 = distinct !DILexicalBlock(scope: !12190, file: !294, line: 191, column: 17)
!12193 = !DILocalVariable(name: "residual", scope: !12194, file: !294, line: 191, type: !1975, align: 8)
!12194 = distinct !DILexicalBlock(scope: !12190, file: !294, line: 191, column: 66)
!12195 = !DILocalVariable(name: "val", scope: !12196, file: !294, line: 191, type: !197, align: 32)
!12196 = distinct !DILexicalBlock(scope: !12190, file: !294, line: 191, column: 27)
!12197 = !DILocation(line: 185, column: 19, scope: !12179)
!12198 = !DILocation(line: 185, column: 26, scope: !12179)
!12199 = !DILocation(line: 185, column: 42, scope: !12179)
!12200 = !DILocation(line: 190, column: 21, scope: !12190)
!12201 = !DILocation(line: 191, column: 66, scope: !12194)
!12202 = !DILocation(line: 186, column: 22, scope: !12179)
!12203 = !DILocation(line: 189, column: 13, scope: !12188)
!12204 = !DILocation(line: 186, column: 9, scope: !12179)
!12205 = !DILocation(line: 187, column: 58, scope: !12179)
!12206 = !DILocation(line: 187, column: 21, scope: !12179)
!12207 = !DILocation(line: 187, column: 18, scope: !12179)
!12208 = !DILocation(line: 187, column: 72, scope: !12179)
!12209 = !DILocation(line: 190, column: 34, scope: !12188)
!12210 = !DILocation(line: 195, column: 6, scope: !12179)
!12211 = !DILocation(line: 190, column: 73, scope: !12188)
!12212 = !DILocation(line: 190, column: 43, scope: !12188)
!12213 = !DILocation(line: 191, column: 40, scope: !12190)
!12214 = !DILocation(line: 191, column: 27, scope: !12190)
!12215 = !DILocation(line: 191, column: 49, scope: !12190)
!12216 = !DILocation(line: 191, column: 27, scope: !12194)
!12217 = !DILocation(line: 191, column: 21, scope: !12192)
!12218 = !DILocation(line: 191, column: 27, scope: !12196)
!12219 = !DILocation(line: 192, column: 20, scope: !12192)
!12220 = !DILocation(line: 192, column: 17, scope: !12192)
!12221 = !DILocation(line: 193, column: 13, scope: !12179)
!12222 = distinct !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h16709bd49e1d55b1E", scope: !212, file: !294, line: 200, type: !12223, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12225, retainedNodes: !12226)
!12223 = !DISubroutineType(types: !12224)
!12224 = !{!1959, !9407, !197, !39, !39, !643}
!12225 = !DISubprogram(name: "grow_impl", linkageName: "_ZN5alloc5alloc6Global9grow_impl17h16709bd49e1d55b1E", scope: !212, file: !294, line: 200, type: !12223, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!12226 = !{!12227, !12228, !12229, !12230, !12231, !12232, !12234, !12235, !12237, !12239, !12241, !12243, !12245, !12247, !12249, !12251}
!12227 = !DILocalVariable(name: "self", arg: 1, scope: !12222, file: !294, line: 201, type: !9407)
!12228 = !DILocalVariable(name: "ptr", arg: 2, scope: !12222, file: !294, line: 202, type: !197)
!12229 = !DILocalVariable(name: "old_layout", arg: 3, scope: !12222, file: !294, line: 203, type: !39)
!12230 = !DILocalVariable(name: "new_layout", arg: 4, scope: !12222, file: !294, line: 204, type: !39)
!12231 = !DILocalVariable(name: "zeroed", arg: 5, scope: !12222, file: !294, line: 205, type: !643)
!12232 = !DILocalVariable(name: "old_size", scope: !12233, file: !294, line: 217, type: !9, align: 32)
!12233 = distinct !DILexicalBlock(scope: !12222, file: !294, line: 217, column: 13)
!12234 = !DILocalVariable(name: "old_size", scope: !12233, file: !294, line: 217, type: !93, align: 32)
!12235 = !DILocalVariable(name: "new_size", scope: !12236, file: !294, line: 218, type: !9, align: 32)
!12236 = distinct !DILexicalBlock(scope: !12233, file: !294, line: 218, column: 17)
!12237 = !DILocalVariable(name: "raw_ptr", scope: !12238, file: !294, line: 223, type: !463, align: 32)
!12238 = distinct !DILexicalBlock(scope: !12236, file: !294, line: 223, column: 17)
!12239 = !DILocalVariable(name: "ptr", scope: !12240, file: !294, line: 224, type: !197, align: 32)
!12240 = distinct !DILexicalBlock(scope: !12238, file: !294, line: 224, column: 17)
!12241 = !DILocalVariable(name: "residual", scope: !12242, file: !294, line: 224, type: !1975, align: 8)
!12242 = distinct !DILexicalBlock(scope: !12238, file: !294, line: 224, column: 66)
!12243 = !DILocalVariable(name: "val", scope: !12244, file: !294, line: 224, type: !197, align: 32)
!12244 = distinct !DILexicalBlock(scope: !12238, file: !294, line: 224, column: 27)
!12245 = !DILocalVariable(name: "old_size", scope: !12246, file: !294, line: 236, type: !9, align: 32)
!12246 = distinct !DILexicalBlock(scope: !12222, file: !294, line: 236, column: 13)
!12247 = !DILocalVariable(name: "new_ptr", scope: !12248, file: !294, line: 237, type: !1932, align: 32)
!12248 = distinct !DILexicalBlock(scope: !12246, file: !294, line: 237, column: 17)
!12249 = !DILocalVariable(name: "residual", scope: !12250, file: !294, line: 237, type: !1975, align: 8)
!12250 = distinct !DILexicalBlock(scope: !12246, file: !294, line: 237, column: 66)
!12251 = !DILocalVariable(name: "val", scope: !12252, file: !294, line: 237, type: !1932, align: 32)
!12252 = distinct !DILexicalBlock(scope: !12246, file: !294, line: 237, column: 31)
!12253 = !DILocation(line: 201, column: 9, scope: !12222)
!12254 = !DILocation(line: 202, column: 9, scope: !12222)
!12255 = !DILocation(line: 203, column: 9, scope: !12222)
!12256 = !DILocation(line: 204, column: 9, scope: !12222)
!12257 = !DILocation(line: 205, column: 9, scope: !12222)
!12258 = !DILocation(line: 217, column: 13, scope: !12233)
!12259 = !DILocation(line: 236, column: 13, scope: !12246)
!12260 = !DILocation(line: 224, column: 66, scope: !12242)
!12261 = !DILocation(line: 237, column: 66, scope: !12250)
!12262 = !DILocation(line: 208, column: 24, scope: !12222)
!12263 = !DILocation(line: 208, column: 45, scope: !12222)
!12264 = !DILocation(line: 208, column: 13, scope: !12222)
!12265 = !DILocation(line: 207, column: 9, scope: !12222)
!12266 = !DILocation(line: 212, column: 26, scope: !12222)
!12267 = !DILocation(line: 212, column: 9, scope: !12222)
!12268 = !DILocation(line: 213, column: 18, scope: !12222)
!12269 = !DILocation(line: 213, column: 23, scope: !12222)
!12270 = !DILocation(line: 217, column: 13, scope: !12222)
!12271 = !DILocation(line: 217, column: 36, scope: !12222)
!12272 = !DILocation(line: 217, column: 58, scope: !12222)
!12273 = !DILocation(line: 217, column: 25, scope: !12222)
!12274 = !DILocation(line: 243, column: 6, scope: !12222)
!12275 = !DILocation(line: 237, column: 31, scope: !12246)
!12276 = !DILocation(line: 237, column: 36, scope: !12246)
!12277 = !DILocation(line: 218, column: 43, scope: !12233)
!12278 = !DILocation(line: 218, column: 21, scope: !12236)
!12279 = !DILocation(line: 221, column: 63, scope: !12236)
!12280 = !DILocation(line: 221, column: 40, scope: !12236)
!12281 = !DILocation(line: 201, column: 38, scope: !11082, inlinedAt: !12282)
!12282 = distinct !DILocation(line: 221, column: 17, scope: !12236)
!12283 = !DILocation(line: 77, column: 35, scope: !11087, inlinedAt: !12282)
!12284 = !DILocation(line: 78, column: 17, scope: !11087, inlinedAt: !12282)
!12285 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !12286)
!12286 = distinct !DILocation(line: 223, column: 43, scope: !12236)
!12287 = !DILocation(line: 223, column: 31, scope: !12236)
!12288 = !DILocation(line: 223, column: 21, scope: !12238)
!12289 = !DILocation(line: 224, column: 27, scope: !12238)
!12290 = !DILocation(line: 224, column: 49, scope: !12238)
!12291 = !DILocation(line: 237, column: 31, scope: !12250)
!12292 = !DILocation(line: 237, column: 21, scope: !12248)
!12293 = !DILocation(line: 237, column: 31, scope: !12252)
!12294 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !12295)
!12295 = distinct !DILocation(line: 238, column: 46, scope: !12248)
!12296 = !DILocation(line: 238, column: 64, scope: !12248)
!12297 = !DILocation(line: 238, column: 17, scope: !12248)
!12298 = !DILocation(line: 526, column: 44, scope: !459, inlinedAt: !12299)
!12299 = distinct !DILocation(line: 238, column: 17, scope: !12248)
!12300 = !DILocation(line: 526, column: 59, scope: !459, inlinedAt: !12299)
!12301 = !DILocation(line: 526, column: 72, scope: !459, inlinedAt: !12299)
!12302 = !DILocation(line: 77, column: 35, scope: !472, inlinedAt: !12299)
!12303 = !DILocation(line: 78, column: 17, scope: !472, inlinedAt: !12299)
!12304 = !DILocation(line: 547, column: 14, scope: !459, inlinedAt: !12299)
!12305 = !DILocation(line: 239, column: 17, scope: !12248)
!12306 = !DILocation(line: 239, column: 22, scope: !12248)
!12307 = !DILocation(line: 240, column: 17, scope: !12248)
!12308 = !DILocation(line: 241, column: 13, scope: !12222)
!12309 = !DILocation(line: 224, column: 27, scope: !12242)
!12310 = !DILocation(line: 224, column: 21, scope: !12240)
!12311 = !DILocation(line: 224, column: 27, scope: !12244)
!12312 = !DILocation(line: 225, column: 20, scope: !12240)
!12313 = !DILocation(line: 228, column: 20, scope: !12240)
!12314 = !DILocation(line: 228, column: 17, scope: !12240)
!12315 = !DILocation(line: 229, column: 13, scope: !12222)
!12316 = !DILocation(line: 226, column: 21, scope: !12240)
!12317 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !12318)
!12318 = distinct !DILocation(line: 226, column: 29, scope: !12240)
!12319 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !12318)
!12320 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !12318)
!12321 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !12318)
!12322 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !12318)
!12323 = !DILocation(line: 226, column: 58, scope: !12240)
!12324 = !DILocalVariable(name: "self", arg: 1, scope: !12325, file: !1810, line: 1432, type: !463)
!12325 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$11write_bytes17h0af7790923225223E", scope: !1811, file: !1810, line: 1432, type: !12326, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12328)
!12326 = !DISubroutineType(types: !12327)
!12327 = !{null, !463, !24, !9, !1241}
!12328 = !{!12324, !12329, !12330}
!12329 = !DILocalVariable(name: "val", arg: 2, scope: !12325, file: !1810, line: 1432, type: !24)
!12330 = !DILocalVariable(name: "count", arg: 3, scope: !12325, file: !1810, line: 1432, type: !9)
!12331 = !DILocation(line: 1432, column: 37, scope: !12325, inlinedAt: !12332)
!12332 = distinct !DILocation(line: 226, column: 43, scope: !12240)
!12333 = !DILocation(line: 1432, column: 43, scope: !12325, inlinedAt: !12332)
!12334 = !DILocation(line: 1432, column: 52, scope: !12325, inlinedAt: !12332)
!12335 = !DILocalVariable(name: "dst", arg: 1, scope: !12336, file: !460, line: 697, type: !463)
!12336 = distinct !DISubprogram(name: "write_bytes<u8>", linkageName: "_ZN4core3ptr11write_bytes17he5e251a24f7c2a70E", scope: !47, file: !460, line: 697, type: !12337, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12339)
!12337 = !DISubroutineType(types: !12338)
!12338 = !{null, !463, !24, !9}
!12339 = !{!12335, !12340, !12341}
!12340 = !DILocalVariable(name: "val", arg: 2, scope: !12336, file: !460, line: 697, type: !24)
!12341 = !DILocalVariable(name: "count", arg: 3, scope: !12336, file: !460, line: 697, type: !9)
!12342 = !DILocation(line: 697, column: 36, scope: !12336, inlinedAt: !12343)
!12343 = distinct !DILocation(line: 1437, column: 18, scope: !12325, inlinedAt: !12332)
!12344 = !DILocation(line: 697, column: 49, scope: !12336, inlinedAt: !12343)
!12345 = !DILocation(line: 697, column: 58, scope: !12336, inlinedAt: !12343)
!12346 = !DILocation(line: 77, column: 35, scope: !12347, inlinedAt: !12343)
!12347 = !DILexicalBlockFile(scope: !12336, file: !473, discriminator: 0)
!12348 = !DILocation(line: 706, column: 48, scope: !12336, inlinedAt: !12343)
!12349 = !DILocation(line: 78, column: 17, scope: !12347, inlinedAt: !12343)
!12350 = !DILocation(line: 709, column: 9, scope: !12336, inlinedAt: !12343)
!12351 = !DILocation(line: 226, column: 43, scope: !12240)
!12352 = !DILocation(line: 0, scope: !12353)
!12353 = !DILexicalBlockFile(scope: !12222, file: !4885, discriminator: 0)
!12354 = distinct !DISubprogram(name: "dealloc", linkageName: "_ZN5alloc5alloc7dealloc17h0cb82864f8267aaaE", scope: !213, file: !294, line: 114, type: !12355, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12357)
!12355 = !DISubroutineType(types: !12356)
!12356 = !{null, !463, !39}
!12357 = !{!12358, !12359}
!12358 = !DILocalVariable(name: "ptr", arg: 1, scope: !12354, file: !294, line: 114, type: !463)
!12359 = !DILocalVariable(name: "layout", arg: 2, scope: !12354, file: !294, line: 114, type: !39)
!12360 = !DILocation(line: 114, column: 23, scope: !12354)
!12361 = !DILocation(line: 114, column: 37, scope: !12354)
!12362 = !DILocation(line: 115, column: 41, scope: !12354)
!12363 = !DILocation(line: 115, column: 56, scope: !12354)
!12364 = !DILocation(line: 115, column: 14, scope: !12354)
!12365 = !DILocation(line: 116, column: 2, scope: !12354)
!12366 = distinct !DISubprogram(name: "realloc", linkageName: "_ZN5alloc5alloc7realloc17h57000c9ca6dea045E", scope: !213, file: !294, line: 134, type: !12367, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12369)
!12367 = !DISubroutineType(types: !12368)
!12368 = !{!463, !463, !39, !9}
!12369 = !{!12370, !12371, !12372}
!12370 = !DILocalVariable(name: "ptr", arg: 1, scope: !12366, file: !294, line: 134, type: !463)
!12371 = !DILocalVariable(name: "layout", arg: 2, scope: !12366, file: !294, line: 134, type: !39)
!12372 = !DILocalVariable(name: "new_size", arg: 3, scope: !12366, file: !294, line: 134, type: !9)
!12373 = !DILocation(line: 134, column: 23, scope: !12366)
!12374 = !DILocation(line: 134, column: 37, scope: !12366)
!12375 = !DILocation(line: 134, column: 53, scope: !12366)
!12376 = !DILocation(line: 135, column: 41, scope: !12366)
!12377 = !DILocation(line: 135, column: 56, scope: !12366)
!12378 = !DILocation(line: 135, column: 14, scope: !12366)
!12379 = !DILocation(line: 136, column: 2, scope: !12366)
!12380 = distinct !DISubprogram(name: "from_raw<[u8]>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17h595bf8cefd372b4aE", scope: !12382, file: !12381, line: 1063, type: !12383, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12385)
!12381 = !DIFile(filename: "src/boxed.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "acd6052f47042be3287430901fcaf1c8")
!12382 = !DINamespace(name: "{impl#6}", scope: !175)
!12383 = !DISubroutineType(types: !12384)
!12384 = !{!407, !1569}
!12385 = !{!12386}
!12386 = !DILocalVariable(name: "raw", arg: 1, scope: !12380, file: !12381, line: 1063, type: !1569)
!12387 = !DILocation(line: 1063, column: 28, scope: !12380)
!12388 = !DILocation(line: 1064, column: 18, scope: !12380)
!12389 = !DILocation(line: 1065, column: 6, scope: !12380)
!12390 = distinct !DISubprogram(name: "from_raw<str>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hd749f9e4715d884fE", scope: !12382, file: !12381, line: 1063, type: !12391, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12393)
!12391 = !DISubroutineType(types: !12392)
!12392 = !{!10487, !3612}
!12393 = !{!12394}
!12394 = !DILocalVariable(name: "raw", arg: 1, scope: !12390, file: !12381, line: 1063, type: !3612)
!12395 = !DILocation(line: 1063, column: 28, scope: !12390)
!12396 = !DILocation(line: 1064, column: 18, scope: !12390)
!12397 = !DILocation(line: 1065, column: 6, scope: !12390)
!12398 = distinct !DISubprogram(name: "from_raw<core::ffi::c_str::CStr>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8from_raw17hfe770a3a0fb06ffdE", scope: !12382, file: !12381, line: 1063, type: !12399, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3588, retainedNodes: !12401)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{!1561, !3594}
!12401 = !{!12402}
!12402 = !DILocalVariable(name: "raw", arg: 1, scope: !12398, file: !12381, line: 1063, type: !3594)
!12403 = !DILocation(line: 1063, column: 28, scope: !12398)
!12404 = !DILocation(line: 1064, column: 18, scope: !12398)
!12405 = !DILocation(line: 1065, column: 6, scope: !12398)
!12406 = distinct !DISubprogram(name: "into_raw<[u8]>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17ha41afd7940b056a7E", scope: !12382, file: !12381, line: 1171, type: !12407, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12409)
!12407 = !DISubroutineType(types: !12408)
!12408 = !{!1569, !407}
!12409 = !{!12410, !12411}
!12410 = !DILocalVariable(name: "b", arg: 1, scope: !12406, file: !12381, line: 1171, type: !407)
!12411 = !DILocalVariable(name: "b", scope: !12412, file: !12381, line: 1173, type: !12413, align: 32)
!12412 = distinct !DILexicalBlock(scope: !12406, file: !12381, line: 1173, column: 9)
!12413 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12414, templateParams: !2647, identifier: "3613e2034f4f8cde78939489ee28242e")
!12414 = !{!12415}
!12415 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12413, file: !2, baseType: !407, size: 64, align: 32, flags: DIFlagPrivate)
!12416 = !DILocation(line: 1171, column: 21, scope: !12406)
!12417 = !DILocation(line: 1173, column: 13, scope: !12412)
!12418 = !DILocalVariable(name: "value", arg: 1, scope: !12419, file: !9646, line: 181, type: !407)
!12419 = distinct !DISubprogram(name: "new<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha5a252b8260baa81E", scope: !12413, file: !9646, line: 181, type: !12420, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2647, declaration: !12422, retainedNodes: !12423)
!12420 = !DISubroutineType(types: !12421)
!12421 = !{!12413, !407}
!12422 = !DISubprogram(name: "new<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17ha5a252b8260baa81E", scope: !12413, file: !9646, line: 181, type: !12420, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !2647)
!12423 = !{!12418}
!12424 = !DILocation(line: 181, column: 22, scope: !12419, inlinedAt: !12425)
!12425 = distinct !DILocation(line: 1173, column: 21, scope: !12406)
!12426 = !DILocation(line: 183, column: 6, scope: !12419, inlinedAt: !12425)
!12427 = !DILocation(line: 1173, column: 21, scope: !12406)
!12428 = !DILocalVariable(name: "self", arg: 1, scope: !12429, file: !9646, line: 279, type: !12432)
!12429 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17haf49c3ca6fd89837E", scope: !10784, file: !9646, line: 279, type: !12430, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2647, retainedNodes: !12433)
!12430 = !DISubroutineType(types: !12431)
!12431 = !{!2644, !12432}
!12432 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", baseType: !12413, size: 32, align: 32, dwarfAddressSpace: 0)
!12433 = !{!12428}
!12434 = !DILocation(line: 279, column: 18, scope: !12429, inlinedAt: !12435)
!12435 = distinct !DILocation(line: 1176, column: 19, scope: !12412)
!12436 = !DILocation(line: 1176, column: 9, scope: !12412)
!12437 = !DILocation(line: 1177, column: 6, scope: !12406)
!12438 = distinct !DISubprogram(name: "into_raw<core::ffi::c_str::CStr>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$8into_raw17hc64b9a9312214693E", scope: !12382, file: !12381, line: 1171, type: !12439, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3588, retainedNodes: !12441)
!12439 = !DISubroutineType(types: !12440)
!12440 = !{!3594, !1561}
!12441 = !{!12442, !12443}
!12442 = !DILocalVariable(name: "b", arg: 1, scope: !12438, file: !12381, line: 1171, type: !1561)
!12443 = !DILocalVariable(name: "b", scope: !12444, file: !12381, line: 1173, type: !12445, align: 32)
!12444 = distinct !DILexicalBlock(scope: !12438, file: !12381, line: 1173, column: 9)
!12445 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12446, templateParams: !12448, identifier: "11ed916196d40bbb8bcd026aee41675f")
!12446 = !{!12447}
!12447 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12445, file: !2, baseType: !1561, size: 64, align: 32, flags: DIFlagPrivate)
!12448 = !{!12449}
!12449 = !DITemplateTypeParameter(name: "T", type: !1561)
!12450 = !DILocation(line: 1171, column: 21, scope: !12438)
!12451 = !DILocation(line: 1173, column: 13, scope: !12444)
!12452 = !DILocalVariable(name: "value", arg: 1, scope: !12453, file: !9646, line: 181, type: !1561)
!12453 = distinct !DISubprogram(name: "new<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf9e2ed7b5e73332aE", scope: !12445, file: !9646, line: 181, type: !12454, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12448, declaration: !12456, retainedNodes: !12457)
!12454 = !DISubroutineType(types: !12455)
!12455 = !{!12445, !1561}
!12456 = !DISubprogram(name: "new<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17hf9e2ed7b5e73332aE", scope: !12445, file: !9646, line: 181, type: !12454, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12448)
!12457 = !{!12452}
!12458 = !DILocation(line: 181, column: 22, scope: !12453, inlinedAt: !12459)
!12459 = distinct !DILocation(line: 1173, column: 21, scope: !12438)
!12460 = !DILocation(line: 183, column: 6, scope: !12453, inlinedAt: !12459)
!12461 = !DILocation(line: 1173, column: 21, scope: !12438)
!12462 = !DILocalVariable(name: "self", arg: 1, scope: !12463, file: !9646, line: 279, type: !12467)
!12463 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17hbff15dbead9c43ccE", scope: !10784, file: !9646, line: 279, type: !12464, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12448, retainedNodes: !12468)
!12464 = !DISubroutineType(types: !12465)
!12465 = !{!12466, !12467}
!12466 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>", baseType: !1561, size: 32, align: 32, dwarfAddressSpace: 0)
!12467 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<core::ffi::c_str::CStr, alloc::alloc::Global>>", baseType: !12445, size: 32, align: 32, dwarfAddressSpace: 0)
!12468 = !{!12462}
!12469 = !DILocation(line: 279, column: 18, scope: !12463, inlinedAt: !12470)
!12470 = distinct !DILocation(line: 1176, column: 19, scope: !12444)
!12471 = !DILocation(line: 1176, column: 9, scope: !12444)
!12472 = !DILocation(line: 1177, column: 6, scope: !12438)
!12473 = distinct !DISubprogram(name: "from_raw_in<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h077cfab5109063c0E", scope: !12474, file: !12381, line: 1290, type: !12475, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12484, retainedNodes: !12481)
!12474 = !DINamespace(name: "{impl#7}", scope: !175)
!12475 = !DISubroutineType(types: !12476)
!12476 = !{!12477, !1329, !212}
!12477 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", file: !2, size: 64, align: 32, elements: !12478, templateParams: !21, identifier: "e30cc746e803c4cd4936cc40d09c1d28")
!12478 = !{!12479, !12480}
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !12477, file: !2, baseType: !1332, size: 32, align: 32)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12477, file: !2, baseType: !9, size: 32, align: 32, offset: 32)
!12481 = !{!12482, !12483}
!12482 = !DILocalVariable(name: "raw", arg: 1, scope: !12473, file: !12381, line: 1290, type: !1329)
!12483 = !DILocalVariable(name: "alloc", arg: 2, scope: !12473, file: !12381, line: 1290, type: !212)
!12484 = !{!1346, !215}
!12485 = !DILocation(line: 1290, column: 31, scope: !12473)
!12486 = !DILocation(line: 1290, column: 44, scope: !12473)
!12487 = !DILocation(line: 1291, column: 22, scope: !12473)
!12488 = !DILocation(line: 1292, column: 6, scope: !12473)
!12489 = distinct !DISubprogram(name: "from_raw_in<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17h99ba3a91edaf0da7E", scope: !12474, file: !12381, line: 1290, type: !12490, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !12492)
!12490 = !DISubroutineType(types: !12491)
!12491 = !{!10487, !3612, !212}
!12492 = !{!12493, !12494}
!12493 = !DILocalVariable(name: "raw", arg: 1, scope: !12489, file: !12381, line: 1290, type: !3612)
!12494 = !DILocalVariable(name: "alloc", arg: 2, scope: !12489, file: !12381, line: 1290, type: !212)
!12495 = !DILocation(line: 1290, column: 31, scope: !12489)
!12496 = !DILocation(line: 1290, column: 44, scope: !12489)
!12497 = !DILocation(line: 1291, column: 22, scope: !12489)
!12498 = !DILocation(line: 1292, column: 6, scope: !12489)
!12499 = distinct !DISubprogram(name: "from_raw_in<core::ffi::c_str::CStr, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17hb7770fb2438c598bE", scope: !12474, file: !12381, line: 1290, type: !12500, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12505, retainedNodes: !12502)
!12500 = !DISubroutineType(types: !12501)
!12501 = !{!1561, !3594, !212}
!12502 = !{!12503, !12504}
!12503 = !DILocalVariable(name: "raw", arg: 1, scope: !12499, file: !12381, line: 1290, type: !3594)
!12504 = !DILocalVariable(name: "alloc", arg: 2, scope: !12499, file: !12381, line: 1290, type: !212)
!12505 = !{!3589, !215}
!12506 = !DILocation(line: 1290, column: 31, scope: !12499)
!12507 = !DILocation(line: 1290, column: 44, scope: !12499)
!12508 = !DILocation(line: 1291, column: 22, scope: !12499)
!12509 = !DILocation(line: 1292, column: 6, scope: !12499)
!12510 = distinct !DISubprogram(name: "from_raw_in<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$11from_raw_in17he7ab9b92841103baE", scope: !12474, file: !12381, line: 1290, type: !12511, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !12513)
!12511 = !DISubroutineType(types: !12512)
!12512 = !{!407, !1569, !212}
!12513 = !{!12514, !12515}
!12514 = !DILocalVariable(name: "raw", arg: 1, scope: !12510, file: !12381, line: 1290, type: !1569)
!12515 = !DILocalVariable(name: "alloc", arg: 2, scope: !12510, file: !12381, line: 1290, type: !212)
!12516 = !DILocation(line: 1290, column: 31, scope: !12510)
!12517 = !DILocation(line: 1290, column: 44, scope: !12510)
!12518 = !DILocation(line: 1291, column: 22, scope: !12510)
!12519 = !DILocation(line: 1292, column: 6, scope: !12510)
!12520 = distinct !DISubprogram(name: "into_raw_with_allocator<str, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h23ea1f1b1169898dE", scope: !12474, file: !12381, line: 1397, type: !12521, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !12527)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{!12523, !10487}
!12523 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut str, alloc::alloc::Global)", file: !2, size: 64, align: 32, elements: !12524, templateParams: !21, identifier: "6191dfc7eab817d0b81b7b3535546ae")
!12524 = !{!12525, !12526}
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12523, file: !2, baseType: !3612, size: 64, align: 32)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12523, file: !2, baseType: !212, align: 8, offset: 64)
!12527 = !{!12528, !12529, !12536, !12538}
!12528 = !DILocalVariable(name: "b", arg: 1, scope: !12520, file: !12381, line: 1397, type: !10487)
!12529 = !DILocalVariable(name: "b", scope: !12530, file: !12381, line: 1398, type: !12531, align: 32)
!12530 = distinct !DILexicalBlock(scope: !12520, file: !12381, line: 1398, column: 9)
!12531 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12532, templateParams: !12534, identifier: "455cee0dbe8d62f9b5522d5aadaf2288")
!12532 = !{!12533}
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12531, file: !2, baseType: !10487, size: 64, align: 32, flags: DIFlagPrivate)
!12534 = !{!12535}
!12535 = !DITemplateTypeParameter(name: "T", type: !10487)
!12536 = !DILocalVariable(name: "ptr", scope: !12537, file: !12381, line: 1404, type: !3612, align: 32)
!12537 = distinct !DILexicalBlock(scope: !12530, file: !12381, line: 1404, column: 9)
!12538 = !DILocalVariable(name: "alloc", scope: !12539, file: !12381, line: 1405, type: !212, align: 8)
!12539 = distinct !DILexicalBlock(scope: !12537, file: !12381, line: 1405, column: 9)
!12540 = !DILocation(line: 1397, column: 36, scope: !12520)
!12541 = !DILocation(line: 1398, column: 13, scope: !12530)
!12542 = !DILocation(line: 1405, column: 13, scope: !12539)
!12543 = !DILocalVariable(name: "value", arg: 1, scope: !12544, file: !9646, line: 181, type: !10487)
!12544 = distinct !DISubprogram(name: "new<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h12f27e6155c7b349E", scope: !12531, file: !9646, line: 181, type: !12545, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12534, declaration: !12547, retainedNodes: !12548)
!12545 = !DISubroutineType(types: !12546)
!12546 = !{!12531, !10487}
!12547 = !DISubprogram(name: "new<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h12f27e6155c7b349E", scope: !12531, file: !9646, line: 181, type: !12545, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12534)
!12548 = !{!12543}
!12549 = !DILocation(line: 181, column: 22, scope: !12544, inlinedAt: !12550)
!12550 = distinct !DILocation(line: 1398, column: 21, scope: !12520)
!12551 = !DILocation(line: 183, column: 6, scope: !12544, inlinedAt: !12550)
!12552 = !DILocation(line: 1398, column: 21, scope: !12520)
!12553 = !DILocalVariable(name: "self", arg: 1, scope: !12554, file: !9646, line: 279, type: !12558)
!12554 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h68e818ba9e1278a4E", scope: !10784, file: !9646, line: 279, type: !12555, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12534, retainedNodes: !12559)
!12555 = !DISubroutineType(types: !12556)
!12556 = !{!12557, !12558}
!12557 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<str, alloc::alloc::Global>", baseType: !10487, size: 32, align: 32, dwarfAddressSpace: 0)
!12558 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", baseType: !12531, size: 32, align: 32, dwarfAddressSpace: 0)
!12559 = !{!12553}
!12560 = !DILocation(line: 279, column: 18, scope: !12554, inlinedAt: !12561)
!12561 = distinct !DILocation(line: 1404, column: 29, scope: !12530)
!12562 = !DILocation(line: 1404, column: 19, scope: !12530)
!12563 = !DILocation(line: 1404, column: 13, scope: !12537)
!12564 = !DILocalVariable(name: "self", arg: 1, scope: !12565, file: !9646, line: 270, type: !12569)
!12565 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<str, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hdd2dcedc424a3372E", scope: !9657, file: !9646, line: 270, type: !12566, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12534, retainedNodes: !12570)
!12566 = !DISubroutineType(types: !12567)
!12567 = !{!12568, !12569}
!12568 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<str, alloc::alloc::Global>", baseType: !10487, size: 32, align: 32, dwarfAddressSpace: 0)
!12569 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<str, alloc::alloc::Global>>", baseType: !12531, size: 32, align: 32, dwarfAddressSpace: 0)
!12570 = !{!12564}
!12571 = !DILocation(line: 270, column: 14, scope: !12565, inlinedAt: !12572)
!12572 = distinct !DILocation(line: 1405, column: 41, scope: !12537)
!12573 = !DILocation(line: 1405, column: 40, scope: !12537)
!12574 = !DILocation(line: 1405, column: 30, scope: !12537)
!12575 = !DILocation(line: 1407, column: 6, scope: !12520)
!12576 = distinct !DISubprogram(name: "into_raw_with_allocator<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7c10f4d18f51a213E", scope: !12474, file: !12381, line: 1397, type: !12577, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12484, retainedNodes: !12583)
!12577 = !DISubroutineType(types: !12578)
!12578 = !{!12579, !12477}
!12579 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut [core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global)", file: !2, size: 64, align: 32, elements: !12580, templateParams: !21, identifier: "fa22ae5539d241f1e2d780499158c924")
!12580 = !{!12581, !12582}
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12579, file: !2, baseType: !1329, size: 64, align: 32)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12579, file: !2, baseType: !212, align: 8, offset: 64)
!12583 = !{!12584, !12585, !12592, !12594}
!12584 = !DILocalVariable(name: "b", arg: 1, scope: !12576, file: !12381, line: 1397, type: !12477)
!12585 = !DILocalVariable(name: "b", scope: !12586, file: !12381, line: 1398, type: !12587, align: 32)
!12586 = distinct !DILexicalBlock(scope: !12576, file: !12381, line: 1398, column: 9)
!12587 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12588, templateParams: !12590, identifier: "f55d78156cece959c60284c5b554cfa8")
!12588 = !{!12589}
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !12587, file: !2, baseType: !12477, size: 64, align: 32, flags: DIFlagPrivate)
!12590 = !{!12591}
!12591 = !DITemplateTypeParameter(name: "T", type: !12477)
!12592 = !DILocalVariable(name: "ptr", scope: !12593, file: !12381, line: 1404, type: !1329, align: 32)
!12593 = distinct !DILexicalBlock(scope: !12586, file: !12381, line: 1404, column: 9)
!12594 = !DILocalVariable(name: "alloc", scope: !12595, file: !12381, line: 1405, type: !212, align: 8)
!12595 = distinct !DILexicalBlock(scope: !12593, file: !12381, line: 1405, column: 9)
!12596 = !DILocation(line: 1397, column: 36, scope: !12576)
!12597 = !DILocation(line: 1398, column: 13, scope: !12586)
!12598 = !DILocation(line: 1405, column: 13, scope: !12595)
!12599 = !DILocalVariable(name: "value", arg: 1, scope: !12600, file: !9646, line: 181, type: !12477)
!12600 = distinct !DISubprogram(name: "new<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he0126810b8e63bd2E", scope: !12587, file: !9646, line: 181, type: !12601, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12590, declaration: !12603, retainedNodes: !12604)
!12601 = !DISubroutineType(types: !12602)
!12602 = !{!12587, !12477}
!12603 = !DISubprogram(name: "new<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17he0126810b8e63bd2E", scope: !12587, file: !9646, line: 181, type: !12601, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !12590)
!12604 = !{!12599}
!12605 = !DILocation(line: 181, column: 22, scope: !12600, inlinedAt: !12606)
!12606 = distinct !DILocation(line: 1398, column: 21, scope: !12576)
!12607 = !DILocation(line: 183, column: 6, scope: !12600, inlinedAt: !12606)
!12608 = !DILocation(line: 1398, column: 21, scope: !12576)
!12609 = !DILocalVariable(name: "self", arg: 1, scope: !12610, file: !9646, line: 279, type: !12614)
!12610 = distinct !DISubprogram(name: "deref_mut<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN94_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h9f19a2a1eacdc32aE", scope: !10784, file: !9646, line: 279, type: !12611, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12590, retainedNodes: !12615)
!12611 = !DISubroutineType(types: !12612)
!12612 = !{!12613, !12614}
!12613 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", baseType: !12477, size: 32, align: 32, dwarfAddressSpace: 0)
!12614 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", baseType: !12587, size: 32, align: 32, dwarfAddressSpace: 0)
!12615 = !{!12609}
!12616 = !DILocation(line: 279, column: 18, scope: !12610, inlinedAt: !12617)
!12617 = distinct !DILocation(line: 1404, column: 29, scope: !12586)
!12618 = !DILocation(line: 1404, column: 19, scope: !12586)
!12619 = !DILocation(line: 1404, column: 13, scope: !12593)
!12620 = !DILocalVariable(name: "self", arg: 1, scope: !12621, file: !9646, line: 270, type: !12625)
!12621 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h8a05e3796415c3e2E", scope: !9657, file: !9646, line: 270, type: !12622, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !12590, retainedNodes: !12626)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{!12624, !12625}
!12624 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>", baseType: !12477, size: 32, align: 32, dwarfAddressSpace: 0)
!12625 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[core::mem::maybe_uninit::MaybeUninit<u8>], alloc::alloc::Global>>", baseType: !12587, size: 32, align: 32, dwarfAddressSpace: 0)
!12626 = !{!12620}
!12627 = !DILocation(line: 270, column: 14, scope: !12621, inlinedAt: !12628)
!12628 = distinct !DILocation(line: 1405, column: 41, scope: !12593)
!12629 = !DILocation(line: 1405, column: 40, scope: !12593)
!12630 = !DILocation(line: 1405, column: 30, scope: !12593)
!12631 = !DILocation(line: 1407, column: 6, scope: !12576)
!12632 = distinct !DISubprogram(name: "into_raw_with_allocator<[u8], alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed16Box$LT$T$C$A$GT$23into_raw_with_allocator17h7fc5e096bbc1c6cbE", scope: !12474, file: !12381, line: 1397, type: !12633, scopeLine: 1397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !12639)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{!12635, !407}
!12635 = !DICompositeType(tag: DW_TAG_structure_type, name: "(*mut [u8], alloc::alloc::Global)", file: !2, size: 64, align: 32, elements: !12636, templateParams: !21, identifier: "428f603bce68d22fd462690f9b9ea216")
!12636 = !{!12637, !12638}
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !12635, file: !2, baseType: !1569, size: 64, align: 32)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !12635, file: !2, baseType: !212, align: 8, offset: 64)
!12639 = !{!12640, !12641, !12643, !12645}
!12640 = !DILocalVariable(name: "b", arg: 1, scope: !12632, file: !12381, line: 1397, type: !407)
!12641 = !DILocalVariable(name: "b", scope: !12642, file: !12381, line: 1398, type: !12413, align: 32)
!12642 = distinct !DILexicalBlock(scope: !12632, file: !12381, line: 1398, column: 9)
!12643 = !DILocalVariable(name: "ptr", scope: !12644, file: !12381, line: 1404, type: !1569, align: 32)
!12644 = distinct !DILexicalBlock(scope: !12642, file: !12381, line: 1404, column: 9)
!12645 = !DILocalVariable(name: "alloc", scope: !12646, file: !12381, line: 1405, type: !212, align: 8)
!12646 = distinct !DILexicalBlock(scope: !12644, file: !12381, line: 1405, column: 9)
!12647 = !DILocation(line: 1397, column: 36, scope: !12632)
!12648 = !DILocation(line: 1398, column: 13, scope: !12642)
!12649 = !DILocation(line: 1405, column: 13, scope: !12646)
!12650 = !DILocation(line: 181, column: 22, scope: !12419, inlinedAt: !12651)
!12651 = distinct !DILocation(line: 1398, column: 21, scope: !12632)
!12652 = !DILocation(line: 183, column: 6, scope: !12419, inlinedAt: !12651)
!12653 = !DILocation(line: 1398, column: 21, scope: !12632)
!12654 = !DILocation(line: 279, column: 18, scope: !12429, inlinedAt: !12655)
!12655 = distinct !DILocation(line: 1404, column: 29, scope: !12642)
!12656 = !DILocation(line: 1404, column: 19, scope: !12642)
!12657 = !DILocation(line: 1404, column: 13, scope: !12644)
!12658 = !DILocalVariable(name: "self", arg: 1, scope: !12659, file: !9646, line: 270, type: !12663)
!12659 = distinct !DISubprogram(name: "deref<alloc::boxed::Box<[u8], alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7030b57d0dca505dE", scope: !9657, file: !9646, line: 270, type: !12660, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2647, retainedNodes: !12664)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{!12662, !12663}
!12662 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::boxed::Box<[u8], alloc::alloc::Global>", baseType: !407, size: 32, align: 32, dwarfAddressSpace: 0)
!12663 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[u8], alloc::alloc::Global>>", baseType: !12413, size: 32, align: 32, dwarfAddressSpace: 0)
!12664 = !{!12658}
!12665 = !DILocation(line: 270, column: 14, scope: !12659, inlinedAt: !12666)
!12666 = distinct !DILocation(line: 1405, column: 41, scope: !12644)
!12667 = !DILocation(line: 1405, column: 40, scope: !12644)
!12668 = !DILocation(line: 1405, column: 30, scope: !12644)
!12669 = !DILocation(line: 1407, column: 6, scope: !12632)
!12670 = distinct !DISubprogram(name: "max", linkageName: "_ZN5alloc5boxed4thin19WithHeader$LT$H$GT$14new_unsize_zst3max17hb0c7cd31b4024adfE", scope: !12672, file: !12671, line: 316, type: !3039, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12675)
!12671 = !DIFile(filename: "src/boxed/thin.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "daa5c3d70496fb8e14f23980ef94fe08")
!12672 = !DINamespace(name: "new_unsize_zst", scope: !12673)
!12673 = !DINamespace(name: "{impl#11}", scope: !12674)
!12674 = !DINamespace(name: "thin", scope: !175)
!12675 = !{!12676, !12677}
!12676 = !DILocalVariable(name: "a", arg: 1, scope: !12670, file: !12671, line: 316, type: !9)
!12677 = !DILocalVariable(name: "b", arg: 2, scope: !12670, file: !12671, line: 316, type: !9)
!12678 = !DILocation(line: 316, column: 22, scope: !12670)
!12679 = !DILocation(line: 316, column: 32, scope: !12670)
!12680 = !DILocation(line: 317, column: 16, scope: !12670)
!12681 = !DILocation(line: 317, column: 35, scope: !12670)
!12682 = !DILocation(line: 317, column: 13, scope: !12670)
!12683 = !DILocation(line: 317, column: 24, scope: !12670)
!12684 = !DILocation(line: 318, column: 10, scope: !12670)
!12685 = distinct !DISubprogram(name: "assume_init<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed70Box$LT$$u5b$core..mem..maybe_uninit..MaybeUninit$LT$T$GT$$u5d$$C$A$GT$11assume_init17h24e8cf368fce8da5E", scope: !12686, file: !12381, line: 1011, type: !12687, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !12689)
!12686 = !DINamespace(name: "{impl#5}", scope: !175)
!12687 = !DISubroutineType(types: !12688)
!12688 = !{!407, !12477}
!12689 = !{!12690, !12691, !12693}
!12690 = !DILocalVariable(name: "self", arg: 1, scope: !12685, file: !12381, line: 1011, type: !12477)
!12691 = !DILocalVariable(name: "raw", scope: !12692, file: !12381, line: 1012, type: !1329, align: 32)
!12692 = distinct !DILexicalBlock(scope: !12685, file: !12381, line: 1012, column: 9)
!12693 = !DILocalVariable(name: "alloc", scope: !12692, file: !12381, line: 1012, type: !212, align: 8)
!12694 = !DILocation(line: 1011, column: 31, scope: !12685)
!12695 = !DILocation(line: 1012, column: 19, scope: !12692)
!12696 = !DILocation(line: 1012, column: 28, scope: !12685)
!12697 = !DILocation(line: 1012, column: 14, scope: !12685)
!12698 = !DILocation(line: 1012, column: 14, scope: !12692)
!12699 = !DILocation(line: 1013, column: 18, scope: !12692)
!12700 = !DILocation(line: 1014, column: 6, scope: !12685)
!12701 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN5alloc5boxed7convert109_$LT$impl$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$GT$4from17h1a1cbdc56ea64e36E", scope: !12702, file: !428, line: 107, type: !430, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12703)
!12702 = !DINamespace(name: "{impl#4}", scope: !174)
!12703 = !{!12704}
!12704 = !DILocalVariable(name: "slice", arg: 1, scope: !12701, file: !428, line: 107, type: !432)
!12705 = !DILocation(line: 107, column: 13, scope: !12701)
!12706 = !DILocation(line: 108, column: 9, scope: !12701)
!12707 = !DILocation(line: 109, column: 6, scope: !12701)
!12708 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert116_$LT$impl$u20$core..convert..From$LT$$RF$str$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h04b5050cfb035ec9E", scope: !12709, file: !428, line: 690, type: !12710, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12716)
!12709 = !DINamespace(name: "{impl#22}", scope: !174)
!12710 = !DISubroutineType(types: !12711)
!12711 = !{!12712, !124}
!12712 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<dyn core::error::Error, alloc::alloc::Global>", file: !2, size: 64, align: 32, elements: !12713, templateParams: !21, identifier: "3adef60e2122a5f7392e8fb862d12b8f")
!12713 = !{!12714, !12715}
!12714 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12712, file: !2, baseType: !7292, size: 32, align: 32)
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !12712, file: !2, baseType: !7295, size: 32, align: 32, offset: 32)
!12716 = !{!12717}
!12717 = !DILocalVariable(name: "err", arg: 1, scope: !12708, file: !428, line: 690, type: !124)
!12718 = !DILocation(line: 690, column: 13, scope: !12708)
!12719 = !DILocation(line: 691, column: 20, scope: !12708)
!12720 = !DILocation(line: 691, column: 9, scope: !12708)
!12721 = !DILocation(line: 692, column: 6, scope: !12708)
!12722 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert130_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h75a3876f3b78fba8E", scope: !12723, file: !428, line: 644, type: !12724, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12726)
!12723 = !DINamespace(name: "{impl#20}", scope: !174)
!12724 = !DISubroutineType(types: !12725)
!12725 = !{!12712, !178}
!12726 = !{!12727, !12728, !12736}
!12727 = !DILocalVariable(name: "str_err", arg: 1, scope: !12722, file: !428, line: 644, type: !178)
!12728 = !DILocalVariable(name: "err1", scope: !12729, file: !428, line: 645, type: !12730, align: 32)
!12729 = distinct !DILexicalBlock(scope: !12722, file: !428, line: 645, column: 9)
!12730 = !DICompositeType(tag: DW_TAG_structure_type, name: "alloc::boxed::Box<(dyn core::error::Error + core::marker::Send + core::marker::Sync), alloc::alloc::Global>", file: !2, size: 64, align: 32, elements: !12731, templateParams: !21, identifier: "fdc0ffc8976f926296d1c3cf064089b4")
!12731 = !{!12732, !12735}
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !12730, file: !2, baseType: !12733, size: 32, align: 32)
!12733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12734, size: 32, align: 32, dwarfAddressSpace: 0)
!12734 = !DICompositeType(tag: DW_TAG_structure_type, name: "(dyn core::error::Error + core::marker::Send + core::marker::Sync)", file: !2, align: 8, elements: !21, identifier: "f9917eb7319f57b06612986079e579b1")
!12735 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !12730, file: !2, baseType: !7295, size: 32, align: 32, offset: 32)
!12736 = !DILocalVariable(name: "err2", scope: !12737, file: !428, line: 646, type: !12712, align: 32)
!12737 = distinct !DILexicalBlock(scope: !12729, file: !428, line: 646, column: 9)
!12738 = !DILocation(line: 645, column: 50, scope: !12722)
!12739 = !DILocation(line: 644, column: 13, scope: !12722)
!12740 = !DILocation(line: 645, column: 13, scope: !12729)
!12741 = !DILocation(line: 646, column: 36, scope: !12729)
!12742 = !DILocation(line: 646, column: 13, scope: !12737)
!12743 = !DILocation(line: 648, column: 6, scope: !12722)
!12744 = distinct !DISubprogram(name: "from<alloc::alloc::Global>", linkageName: "_ZN5alloc5boxed7convert131_$LT$impl$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$C$A$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$$u5b$u8$u5d$$C$A$GT$$GT$4from17h0c8b806982e781b7E", scope: !12745, file: !428, line: 249, type: !12746, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, retainedNodes: !12748)
!12745 = !DINamespace(name: "{impl#10}", scope: !174)
!12746 = !DISubroutineType(types: !12747)
!12747 = !{!407, !10487}
!12748 = !{!12749, !12750, !12752}
!12749 = !DILocalVariable(name: "s", arg: 1, scope: !12744, file: !428, line: 249, type: !10487)
!12750 = !DILocalVariable(name: "raw", scope: !12751, file: !428, line: 250, type: !3612, align: 32)
!12751 = distinct !DILexicalBlock(scope: !12744, file: !428, line: 250, column: 9)
!12752 = !DILocalVariable(name: "alloc", scope: !12751, file: !428, line: 250, type: !212, align: 8)
!12753 = !DILocation(line: 249, column: 13, scope: !12744)
!12754 = !DILocation(line: 250, column: 19, scope: !12751)
!12755 = !DILocation(line: 250, column: 28, scope: !12744)
!12756 = !DILocation(line: 250, column: 14, scope: !12744)
!12757 = !DILocation(line: 250, column: 14, scope: !12751)
!12758 = !DILocation(line: 251, column: 18, scope: !12751)
!12759 = !DILocation(line: 252, column: 6, scope: !12744)
!12760 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert138_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$GT$$GT$4from17h99c11f03f4d0f933E", scope: !12761, file: !428, line: 731, type: !12762, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12764)
!12761 = !DINamespace(name: "{impl#24}", scope: !174)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{!12712, !3456}
!12764 = !{!12765}
!12765 = !DILocalVariable(name: "err", arg: 1, scope: !12760, file: !428, line: 731, type: !3456)
!12766 = !DILocation(line: 731, column: 13, scope: !12760)
!12767 = !DILocation(line: 732, column: 20, scope: !12760)
!12768 = !DILocation(line: 732, column: 9, scope: !12760)
!12769 = !DILocation(line: 733, column: 6, scope: !12760)
!12770 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert176_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17h20b1cb757739a899E", scope: !173, file: !428, line: 608, type: !12771, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12773)
!12771 = !DISubroutineType(types: !12772)
!12772 = !{!12730, !178}
!12773 = !{!12774}
!12774 = !DILocalVariable(name: "err", arg: 1, scope: !12770, file: !428, line: 608, type: !178)
!12775 = !DILocation(line: 608, column: 13, scope: !12770)
!12776 = !DILocation(line: 626, column: 18, scope: !12770)
!12777 = !DILocalVariable(name: "x", arg: 1, scope: !12778, file: !12381, line: 260, type: !171)
!12778 = distinct !DISubprogram(name: "new<alloc::boxed::convert::{impl#19}::from::StringError>", linkageName: "_ZN5alloc5boxed12Box$LT$T$GT$3new17hd560a699e33ca9caE", scope: !12779, file: !12381, line: 260, type: !12780, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2254, retainedNodes: !12783)
!12779 = !DINamespace(name: "{impl#0}", scope: !175)
!12780 = !DISubroutineType(types: !12781)
!12781 = !{!12782, !171}
!12782 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "alloc::boxed::Box<alloc::boxed::convert::{impl#19}::from::StringError, alloc::alloc::Global>", baseType: !171, size: 32, align: 32, dwarfAddressSpace: 0)
!12783 = !{!12777}
!12784 = !DILocation(line: 260, column: 16, scope: !12778, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 626, column: 9, scope: !12770)
!12786 = !DILocation(line: 261, column: 16, scope: !12778, inlinedAt: !12785)
!12787 = !DILocation(line: 261, column: 24, scope: !12778, inlinedAt: !12785)
!12788 = !DILocation(line: 627, column: 6, scope: !12770)
!12789 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc5boxed7convert184_$LT$impl$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$u20$for$u20$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Sync$u2b$core..marker..Send$GT$$GT$4from17hde56fe332e1cd8caE", scope: !12790, file: !428, line: 711, type: !12791, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12793)
!12790 = !DINamespace(name: "{impl#23}", scope: !174)
!12791 = !DISubroutineType(types: !12792)
!12792 = !{!12730, !3456}
!12793 = !{!12794}
!12794 = !DILocalVariable(name: "err", arg: 1, scope: !12789, file: !428, line: 711, type: !3456)
!12795 = !DILocation(line: 711, column: 13, scope: !12789)
!12796 = !DILocation(line: 712, column: 20, scope: !12789)
!12797 = !DILocation(line: 712, column: 9, scope: !12789)
!12798 = !DILocation(line: 713, column: 6, scope: !12789)
!12799 = distinct !DISubprogram(name: "to_vec<u8>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6to_vec17hb62a9abc9ced4c0cE", scope: !12801, file: !12800, line: 370, type: !12803, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12805)
!12800 = !DIFile(filename: "src/slice.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "60356a3a1362bb8fb662f9bdda3cd75a")
!12801 = !DINamespace(name: "{impl#0}", scope: !12802)
!12802 = !DINamespace(name: "slice", scope: !132)
!12803 = !DISubroutineType(types: !12804)
!12804 = !{!182, !432}
!12805 = !{!12806}
!12806 = !DILocalVariable(name: "self", arg: 1, scope: !12799, file: !12800, line: 370, type: !432)
!12807 = !DILocation(line: 370, column: 19, scope: !12799)
!12808 = !DILocation(line: 374, column: 14, scope: !12799)
!12809 = !DILocation(line: 375, column: 6, scope: !12799)
!12810 = distinct !DISubprogram(name: "into_vec<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h40445ef263cfe410E", scope: !12801, file: !12800, line: 476, type: !12811, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !12813)
!12811 = !DISubroutineType(types: !12812)
!12812 = !{!182, !407}
!12813 = !{!12814, !12815, !12817, !12819}
!12814 = !DILocalVariable(name: "self", arg: 1, scope: !12810, file: !12800, line: 476, type: !407)
!12815 = !DILocalVariable(name: "len", scope: !12816, file: !12800, line: 478, type: !9, align: 32)
!12816 = distinct !DILexicalBlock(scope: !12810, file: !12800, line: 478, column: 13)
!12817 = !DILocalVariable(name: "b", scope: !12818, file: !12800, line: 479, type: !1569, align: 32)
!12818 = distinct !DILexicalBlock(scope: !12816, file: !12800, line: 479, column: 13)
!12819 = !DILocalVariable(name: "alloc", scope: !12818, file: !12800, line: 479, type: !212, align: 8)
!12820 = !DILocation(line: 476, column: 35, scope: !12810)
!12821 = !DILocation(line: 479, column: 21, scope: !12818)
!12822 = !DILocation(line: 478, column: 23, scope: !12810)
!12823 = !DILocation(line: 478, column: 17, scope: !12816)
!12824 = !DILocation(line: 479, column: 30, scope: !12816)
!12825 = !DILocation(line: 479, column: 18, scope: !12816)
!12826 = !DILocation(line: 479, column: 18, scope: !12818)
!12827 = !DILocation(line: 480, column: 13, scope: !12818)
!12828 = !DILocation(line: 482, column: 6, scope: !12810)
!12829 = distinct !DISubprogram(name: "to_vec_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9to_vec_in17h28c6456b20ddb617E", scope: !12801, file: !12800, line: 394, type: !12830, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !12832)
!12830 = !DISubroutineType(types: !12831)
!12831 = !{!182, !432, !212}
!12832 = !{!12833, !12834}
!12833 = !DILocalVariable(name: "self", arg: 1, scope: !12829, file: !12800, line: 394, type: !432)
!12834 = !DILocalVariable(name: "alloc", arg: 2, scope: !12829, file: !12800, line: 394, type: !212)
!12835 = !DILocation(line: 394, column: 36, scope: !12829)
!12836 = !DILocation(line: 394, column: 43, scope: !12829)
!12837 = !DILocation(line: 398, column: 16, scope: !12829)
!12838 = !DILocation(line: 456, column: 6, scope: !12829)
!12839 = distinct !DISubprogram(name: "clone_into<u8>", linkageName: "_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$10clone_into17h77f52a6af8cf214eE", scope: !12840, file: !12800, line: 841, type: !12841, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12843)
!12840 = !DINamespace(name: "{impl#9}", scope: !12802)
!12841 = !DISubroutineType(types: !12842)
!12842 = !{null, !432, !1608}
!12843 = !{!12844, !12845}
!12844 = !DILocalVariable(name: "self", arg: 1, scope: !12839, file: !12800, line: 841, type: !432)
!12845 = !DILocalVariable(name: "target", arg: 2, scope: !12839, file: !12800, line: 841, type: !1608)
!12846 = !DILocation(line: 841, column: 19, scope: !12839)
!12847 = !DILocation(line: 841, column: 26, scope: !12839)
!12848 = !DILocation(line: 842, column: 9, scope: !12839)
!12849 = !DILocation(line: 843, column: 6, scope: !12839)
!12850 = distinct !DISubprogram(name: "to_owned<u8>", linkageName: "_ZN5alloc5slice64_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$$u5b$T$u5d$$GT$8to_owned17he3cbfef68a0c3d3cE", scope: !12840, file: !12800, line: 837, type: !12803, scopeLine: 837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !12851)
!12851 = !{!12852}
!12852 = !DILocalVariable(name: "self", arg: 1, scope: !12850, file: !12800, line: 837, type: !432)
!12853 = !DILocation(line: 837, column: 17, scope: !12850)
!12854 = !DILocation(line: 838, column: 14, scope: !12850)
!12855 = !DILocation(line: 839, column: 6, scope: !12850)
!12856 = distinct !DISubprogram(name: "into_owned<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17h5ba4078f80625fc6E", scope: !3456, file: !12857, line: 322, type: !12858, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3465, declaration: !12860, retainedNodes: !12861)
!12857 = !DIFile(filename: "src/borrow.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "7a9358bb5e7aec4b9a9f55924a0f280c")
!12858 = !DISubroutineType(types: !12859)
!12859 = !{!178, !3456}
!12860 = !DISubprogram(name: "into_owned<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$10into_owned17h5ba4078f80625fc6E", scope: !3456, file: !12857, line: 322, type: !12858, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3465)
!12861 = !{!12862, !12863, !12865}
!12862 = !DILocalVariable(name: "self", arg: 1, scope: !12856, file: !12857, line: 322, type: !3456)
!12863 = !DILocalVariable(name: "borrowed", scope: !12864, file: !12857, line: 324, type: !124, align: 32)
!12864 = distinct !DILexicalBlock(scope: !12856, file: !12857, line: 324, column: 13)
!12865 = !DILocalVariable(name: "owned", scope: !12866, file: !12857, line: 325, type: !178, align: 32)
!12866 = distinct !DILexicalBlock(scope: !12856, file: !12857, line: 325, column: 13)
!12867 = !DILocation(line: 322, column: 23, scope: !12856)
!12868 = !DILocation(line: 325, column: 19, scope: !12866)
!12869 = !DILocation(line: 323, column: 15, scope: !12856)
!12870 = !DILocation(line: 323, column: 9, scope: !12856)
!12871 = !DILocation(line: 325, column: 19, scope: !12856)
!12872 = !DILocation(line: 325, column: 29, scope: !12866)
!12873 = !DILocation(line: 325, column: 33, scope: !12856)
!12874 = !DILocation(line: 324, column: 22, scope: !12856)
!12875 = !DILocation(line: 324, column: 22, scope: !12864)
!12876 = !DILocation(line: 324, column: 44, scope: !12864)
!12877 = !DILocation(line: 327, column: 6, scope: !12856)
!12878 = distinct !DISubprogram(name: "to_mut<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h9468a62c9c14f9d5E", scope: !3456, file: !12857, line: 274, type: !12879, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3465, declaration: !12882, retainedNodes: !12883)
!12879 = !DISubroutineType(types: !12880)
!12880 = !{!567, !12881}
!12881 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::borrow::Cow<str>", baseType: !3456, size: 32, align: 32, dwarfAddressSpace: 0)
!12882 = !DISubprogram(name: "to_mut<str>", linkageName: "_ZN5alloc6borrow12Cow$LT$B$GT$6to_mut17h9468a62c9c14f9d5E", scope: !3456, file: !12857, line: 274, type: !12879, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3465)
!12883 = !{!12884, !12885, !12887, !12889}
!12884 = !DILocalVariable(name: "self", arg: 1, scope: !12878, file: !12857, line: 274, type: !12881)
!12885 = !DILocalVariable(name: "borrowed", scope: !12886, file: !12857, line: 276, type: !124, align: 32)
!12886 = distinct !DILexicalBlock(scope: !12878, file: !12857, line: 276, column: 13)
!12887 = !DILocalVariable(name: "owned", scope: !12888, file: !12857, line: 280, type: !567, align: 32)
!12888 = distinct !DILexicalBlock(scope: !12886, file: !12857, line: 280, column: 21)
!12889 = !DILocalVariable(name: "owned", scope: !12890, file: !12857, line: 283, type: !567, align: 32)
!12890 = distinct !DILexicalBlock(scope: !12878, file: !12857, line: 283, column: 13)
!12891 = !DILocation(line: 274, column: 19, scope: !12878)
!12892 = !DILocation(line: 275, column: 15, scope: !12878)
!12893 = !DILocation(line: 275, column: 9, scope: !12878)
!12894 = !DILocation(line: 283, column: 19, scope: !12878)
!12895 = !DILocation(line: 283, column: 19, scope: !12890)
!12896 = !DILocation(line: 283, column: 37, scope: !12890)
!12897 = !DILocation(line: 283, column: 41, scope: !12878)
!12898 = !DILocation(line: 276, column: 22, scope: !12878)
!12899 = !DILocation(line: 276, column: 22, scope: !12886)
!12900 = !DILocation(line: 277, column: 40, scope: !12886)
!12901 = !DILocation(line: 277, column: 25, scope: !12886)
!12902 = !DILocation(line: 277, column: 17, scope: !12886)
!12903 = !DILocation(line: 278, column: 23, scope: !12886)
!12904 = !DILocation(line: 278, column: 17, scope: !12886)
!12905 = !DILocation(line: 280, column: 27, scope: !12886)
!12906 = !DILocation(line: 280, column: 27, scope: !12888)
!12907 = !DILocation(line: 282, column: 13, scope: !12878)
!12908 = !DILocation(line: 279, column: 37, scope: !12886)
!12909 = !DILocation(line: 285, column: 6, scope: !12878)
!12910 = !DILocation(line: 0, scope: !12911)
!12911 = !DILexicalBlockFile(scope: !12878, file: !4885, discriminator: 0)
!12912 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string104_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..vec..Vec$LT$u8$GT$$GT$4from17hd506371fca7a71d3E", scope: !12913, file: !9348, line: 3201, type: !12914, scopeLine: 3201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12916)
!12913 = !DINamespace(name: "{impl#55}", scope: !179)
!12914 = !DISubroutineType(types: !12915)
!12915 = !{!182, !178}
!12916 = !{!12917}
!12917 = !DILocalVariable(name: "string", arg: 1, scope: !12912, file: !9348, line: 3201, type: !178)
!12918 = !DILocation(line: 3201, column: 13, scope: !12912)
!12919 = !DILocation(line: 3202, column: 16, scope: !12912)
!12920 = !DILocation(line: 3203, column: 6, scope: !12912)
!12921 = distinct !DISubprogram(name: "from", linkageName: "_ZN5alloc6string107_$LT$impl$u20$core..convert..From$LT$alloc..string..String$GT$$u20$for$u20$alloc..boxed..Box$LT$str$GT$$GT$4from17ha1d33695b30d6bc1E", scope: !12922, file: !9348, line: 3068, type: !12923, scopeLine: 3068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !12925)
!12922 = !DINamespace(name: "{impl#47}", scope: !179)
!12923 = !DISubroutineType(types: !12924)
!12924 = !{!10487, !178}
!12925 = !{!12926}
!12926 = !DILocalVariable(name: "s", arg: 1, scope: !12921, file: !9348, line: 3068, type: !178)
!12927 = !DILocation(line: 3068, column: 13, scope: !12921)
!12928 = !DILocation(line: 3069, column: 11, scope: !12921)
!12929 = !DILocation(line: 3070, column: 6, scope: !12921)
!12930 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error10into_bytes17hda8fda9cd1c911e7E", scope: !3370, file: !9348, line: 2234, type: !12931, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12933, retainedNodes: !12934)
!12931 = !DISubroutineType(types: !12932)
!12932 = !{!182, !3370}
!12933 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error10into_bytes17hda8fda9cd1c911e7E", scope: !3370, file: !9348, line: 2234, type: !12931, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!12934 = !{!12935}
!12935 = !DILocalVariable(name: "self", arg: 1, scope: !12930, file: !9348, line: 2234, type: !3370)
!12936 = !DILocation(line: 2234, column: 23, scope: !12930)
!12937 = !DILocation(line: 2235, column: 9, scope: !12930)
!12938 = !DILocation(line: 2236, column: 6, scope: !12930)
!12939 = distinct !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc6string13FromUtf8Error10utf8_error17h48509d57271b9f9aE", scope: !3370, file: !9348, line: 2261, type: !12940, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12943, retainedNodes: !12944)
!12940 = !DISubroutineType(types: !12941)
!12941 = !{!260, !12942}
!12942 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::FromUtf8Error", baseType: !3370, size: 32, align: 32, dwarfAddressSpace: 0)
!12943 = !DISubprogram(name: "utf8_error", linkageName: "_ZN5alloc6string13FromUtf8Error10utf8_error17h48509d57271b9f9aE", scope: !3370, file: !9348, line: 2261, type: !12940, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!12944 = !{!12945}
!12945 = !DILocalVariable(name: "self", arg: 1, scope: !12939, file: !9348, line: 2261, type: !12942)
!12946 = !DILocation(line: 2261, column: 23, scope: !12939)
!12947 = !DILocation(line: 2262, column: 9, scope: !12939)
!12948 = !DILocation(line: 2263, column: 6, scope: !12939)
!12949 = distinct !DISubprogram(name: "into_utf8_lossy", linkageName: "_ZN5alloc6string13FromUtf8Error15into_utf8_lossy17h74c007d867a78b61E", scope: !3370, file: !9348, line: 2188, type: !12950, scopeLine: 2188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !12952, retainedNodes: !12953)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!178, !3370}
!12952 = !DISubprogram(name: "into_utf8_lossy", linkageName: "_ZN5alloc6string13FromUtf8Error15into_utf8_lossy17h74c007d867a78b61E", scope: !3370, file: !9348, line: 2188, type: !12950, scopeLine: 2188, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!12953 = !{!12954, !12955, !12957, !12959, !12965, !12967}
!12954 = !DILocalVariable(name: "self", arg: 1, scope: !12949, file: !9348, line: 2188, type: !3370)
!12955 = !DILocalVariable(name: "res", scope: !12956, file: !9348, line: 2191, type: !178, align: 32)
!12956 = distinct !DILexicalBlock(scope: !12949, file: !9348, line: 2191, column: 9)
!12957 = !DILocalVariable(name: "v", scope: !12958, file: !9348, line: 2192, type: !182, align: 32)
!12958 = distinct !DILexicalBlock(scope: !12949, file: !9348, line: 2192, column: 13)
!12959 = !DILocalVariable(name: "iter", scope: !12960, file: !9348, line: 2204, type: !12961, align: 32)
!12960 = distinct !DILexicalBlock(scope: !12956, file: !9348, line: 2204, column: 9)
!12961 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Chunks", scope: !12962, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !12963, templateParams: !21, identifier: "1ae337f0af5deead2f33435ccb45cb99")
!12962 = !DINamespace(name: "lossy", scope: !262)
!12963 = !{!12964}
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !12961, file: !2, baseType: !432, size: 64, align: 32, flags: DIFlagPrivate)
!12965 = !DILocalVariable(name: "iter", scope: !12966, file: !9348, line: 2206, type: !12961, align: 32)
!12966 = distinct !DILexicalBlock(scope: !12960, file: !9348, line: 2206, column: 9)
!12967 = !DILocalVariable(name: "chunk", scope: !12968, file: !9348, line: 2206, type: !12969, align: 32)
!12968 = distinct !DILexicalBlock(scope: !12966, file: !9348, line: 2206, column: 27)
!12969 = !DICompositeType(tag: DW_TAG_structure_type, name: "Utf8Chunk", scope: !12962, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !12970, templateParams: !21, identifier: "19fe4d20643e29691b4ad02553128fbe")
!12970 = !{!12971, !12972}
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !12969, file: !2, baseType: !124, size: 64, align: 32, flags: DIFlagPrivate)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !12969, file: !2, baseType: !432, size: 64, align: 32, offset: 64, flags: DIFlagPrivate)
!12973 = !DILocation(line: 2188, column: 28, scope: !12949)
!12974 = !DILocation(line: 2191, column: 13, scope: !12956)
!12975 = !DILocation(line: 2192, column: 17, scope: !12958)
!12976 = !DILocation(line: 2206, column: 22, scope: !12966)
!12977 = !DILocation(line: 2206, column: 13, scope: !12968)
!12978 = !DILocation(line: 2192, column: 55, scope: !12949)
!12979 = !DILocation(line: 2192, column: 25, scope: !12949)
!12980 = !DILocation(line: 2196, column: 47, scope: !12958)
!12981 = !DILocation(line: 2196, column: 58, scope: !12958)
!12982 = !DILocation(line: 2196, column: 44, scope: !12958)
!12983 = !DILocation(line: 2196, column: 15, scope: !12958)
!12984 = !DILocation(line: 2201, column: 50, scope: !12958)
!12985 = !DILocation(line: 2201, column: 22, scope: !12958)
!12986 = !DILocation(line: 2204, column: 31, scope: !12956)
!12987 = !DILocation(line: 2204, column: 42, scope: !12956)
!12988 = !DILocation(line: 2204, column: 30, scope: !12956)
!12989 = !DILocation(line: 2204, column: 59, scope: !12956)
!12990 = !DILocation(line: 2204, column: 13, scope: !12960)
!12991 = !DILocation(line: 2206, column: 22, scope: !12960)
!12992 = !DILocation(line: 2206, column: 9, scope: !12966)
!12993 = !DILocation(line: 2206, column: 13, scope: !12966)
!12994 = !DILocation(line: 2207, column: 32, scope: !12968)
!12995 = !DILocation(line: 2207, column: 17, scope: !12968)
!12996 = !DILocation(line: 2208, column: 23, scope: !12968)
!12997 = !DILocation(line: 2208, column: 33, scope: !12968)
!12998 = !DILocation(line: 2208, column: 17, scope: !12968)
!12999 = !DILocation(line: 2213, column: 9, scope: !12960)
!13000 = !DILocation(line: 2214, column: 5, scope: !12949)
!13001 = !DILocation(line: 2214, column: 6, scope: !12949)
!13002 = !DILocation(line: 2209, column: 21, scope: !12968)
!13003 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error8as_bytes17h937858138447444eE", scope: !3370, file: !9348, line: 2164, type: !13004, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13006, retainedNodes: !13007)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{!432, !12942}
!13006 = !DISubprogram(name: "as_bytes", linkageName: "_ZN5alloc6string13FromUtf8Error8as_bytes17h937858138447444eE", scope: !3370, file: !9348, line: 2164, type: !13004, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13007 = !{!13008}
!13008 = !DILocalVariable(name: "self", arg: 1, scope: !13003, file: !9348, line: 2164, type: !12942)
!13009 = !DILocation(line: 2164, column: 21, scope: !13003)
!13010 = !DILocation(line: 2165, column: 20, scope: !13003)
!13011 = !DILocation(line: 2166, column: 6, scope: !13003)
!13012 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string5Drain6as_str17he2aaed28f3bd3c11E", scope: !9353, file: !9348, line: 3426, type: !13013, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13015, retainedNodes: !13016)
!13013 = !DISubroutineType(types: !13014)
!13014 = !{!124, !9352}
!13015 = !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string5Drain6as_str17he2aaed28f3bd3c11E", scope: !9353, file: !9348, line: 3426, type: !13013, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13016 = !{!13017}
!13017 = !DILocalVariable(name: "self", arg: 1, scope: !13012, file: !9348, line: 3426, type: !9352)
!13018 = !DILocation(line: 3426, column: 19, scope: !13012)
!13019 = !DILocation(line: 3427, column: 19, scope: !13012)
!13020 = !DILocation(line: 3428, column: 6, scope: !13012)
!13021 = distinct !DISubprogram(name: "as_mut_vec", linkageName: "_ZN5alloc6string6String10as_mut_vec17hf4a1d5b5c8f12214E", scope: !178, file: !9348, line: 1824, type: !13022, scopeLine: 1824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13024, retainedNodes: !13025)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!1608, !567}
!13024 = !DISubprogram(name: "as_mut_vec", linkageName: "_ZN5alloc6string6String10as_mut_vec17hf4a1d5b5c8f12214E", scope: !178, file: !9348, line: 1824, type: !13022, scopeLine: 1824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13025 = !{!13026}
!13026 = !DILocalVariable(name: "self", arg: 1, scope: !13021, file: !9348, line: 1824, type: !567)
!13027 = !DILocation(line: 1824, column: 36, scope: !13021)
!13028 = !DILocation(line: 1826, column: 6, scope: !13021)
!13029 = distinct !DISubprogram(name: "from_utf16", linkageName: "_ZN5alloc6string6String10from_utf1617h7b854ec6ef45042bE", scope: !178, file: !9348, line: 721, type: !13030, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13032, retainedNodes: !13033)
!13030 = !DISubroutineType(types: !13031)
!13031 = !{!8670, !7515}
!13032 = !DISubprogram(name: "from_utf16", linkageName: "_ZN5alloc6string6String10from_utf1617h7b854ec6ef45042bE", scope: !178, file: !9348, line: 721, type: !13030, scopeLine: 721, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13033 = !{!13034, !13035, !13037, !13039, !13041}
!13034 = !DILocalVariable(name: "v", arg: 1, scope: !13029, file: !9348, line: 721, type: !7515)
!13035 = !DILocalVariable(name: "ret", scope: !13036, file: !9348, line: 724, type: !178, align: 32)
!13036 = distinct !DILexicalBlock(scope: !13029, file: !9348, line: 724, column: 9)
!13037 = !DILocalVariable(name: "iter", scope: !13038, file: !9348, line: 725, type: !723, align: 32)
!13038 = distinct !DILexicalBlock(scope: !13036, file: !9348, line: 725, column: 9)
!13039 = !DILocalVariable(name: "c", scope: !13040, file: !9348, line: 725, type: !1112, align: 32)
!13040 = distinct !DILexicalBlock(scope: !13038, file: !9348, line: 725, column: 56)
!13041 = !DILocalVariable(name: "c", scope: !13042, file: !9348, line: 726, type: !574, align: 32)
!13042 = distinct !DILexicalBlock(scope: !13040, file: !9348, line: 726, column: 30)
!13043 = !DILocation(line: 721, column: 23, scope: !13029)
!13044 = !DILocation(line: 724, column: 13, scope: !13036)
!13045 = !DILocation(line: 725, column: 18, scope: !13038)
!13046 = !DILocation(line: 725, column: 13, scope: !13040)
!13047 = !DILocation(line: 724, column: 23, scope: !13029)
!13048 = !DILocation(line: 725, column: 39, scope: !13036)
!13049 = !DILocation(line: 725, column: 46, scope: !13036)
!13050 = !DILocation(line: 725, column: 18, scope: !13036)
!13051 = !DILocation(line: 725, column: 9, scope: !13038)
!13052 = !DILocation(line: 725, column: 13, scope: !13038)
!13053 = !DILocation(line: 726, column: 28, scope: !13042)
!13054 = !DILocation(line: 726, column: 20, scope: !13042)
!13055 = !DILocation(line: 732, column: 12, scope: !13036)
!13056 = !DILocation(line: 732, column: 9, scope: !13036)
!13057 = !DILocation(line: 733, column: 6, scope: !13029)
!13058 = !DILocation(line: 729, column: 24, scope: !13040)
!13059 = !DILocation(line: 733, column: 5, scope: !13029)
!13060 = !DILocation(line: 726, column: 23, scope: !13042)
!13061 = !DILocation(line: 727, column: 21, scope: !13042)
!13062 = distinct !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string6String10into_bytes17h0f639dae8a5a39abE", scope: !178, file: !9348, line: 1048, type: !12914, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13063, retainedNodes: !13064)
!13063 = !DISubprogram(name: "into_bytes", linkageName: "_ZN5alloc6string6String10into_bytes17h0f639dae8a5a39abE", scope: !178, file: !9348, line: 1048, type: !12914, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13064 = !{!13065}
!13065 = !DILocalVariable(name: "self", arg: 1, scope: !13062, file: !9348, line: 1048, type: !178)
!13066 = !DILocation(line: 1048, column: 29, scope: !13062)
!13067 = !DILocation(line: 1049, column: 9, scope: !13062)
!13068 = !DILocation(line: 1050, column: 6, scope: !13062)
!13069 = distinct !DISubprogram(name: "try_reserve", linkageName: "_ZN5alloc6string6String11try_reserve17hc3c9e18c6d21984eE", scope: !178, file: !9348, line: 1296, type: !13070, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13072, retainedNodes: !13073)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{!1872, !567, !9}
!13072 = !DISubprogram(name: "try_reserve", linkageName: "_ZN5alloc6string6String11try_reserve17hc3c9e18c6d21984eE", scope: !178, file: !9348, line: 1296, type: !13070, scopeLine: 1296, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13073 = !{!13074, !13075}
!13074 = !DILocalVariable(name: "self", arg: 1, scope: !13069, file: !9348, line: 1296, type: !567)
!13075 = !DILocalVariable(name: "additional", arg: 2, scope: !13069, file: !9348, line: 1296, type: !9)
!13076 = !DILocation(line: 1296, column: 24, scope: !13069)
!13077 = !DILocation(line: 1296, column: 35, scope: !13069)
!13078 = !DILocation(line: 1297, column: 18, scope: !13069)
!13079 = !DILocation(line: 1298, column: 6, scope: !13069)
!13080 = distinct !DISubprogram(name: "from_utf16be", linkageName: "_ZN5alloc6string6String12from_utf16be17h10415554e5f0a8d0E", scope: !178, file: !9348, line: 864, type: !13081, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13083, retainedNodes: !13084)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{!8670, !432}
!13083 = !DISubprogram(name: "from_utf16be", linkageName: "_ZN5alloc6string6String12from_utf16be17h10415554e5f0a8d0E", scope: !178, file: !9348, line: 864, type: !13081, scopeLine: 864, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13084 = !{!13085, !13086, !13088}
!13085 = !DILocalVariable(name: "v", arg: 1, scope: !13080, file: !9348, line: 864, type: !432)
!13086 = !DILocalVariable(name: "chunks", scope: !13087, file: !9348, line: 865, type: !4361, align: 32)
!13087 = distinct !DILexicalBlock(scope: !13080, file: !9348, line: 865, column: 9)
!13088 = !DILocalVariable(name: "v", scope: !13089, file: !9348, line: 869, type: !7515, align: 32)
!13089 = distinct !DILexicalBlock(scope: !13087, file: !9348, line: 869, column: 13)
!13090 = !DILocation(line: 864, column: 25, scope: !13080)
!13091 = !DILocation(line: 865, column: 30, scope: !13080)
!13092 = !DILocation(line: 865, column: 22, scope: !13080)
!13093 = !DILocation(line: 865, column: 14, scope: !13080)
!13094 = !DILocation(line: 865, column: 14, scope: !13087)
!13095 = !DILocation(line: 868, column: 56, scope: !13087)
!13096 = !DILocation(line: 868, column: 15, scope: !13087)
!13097 = !DILocation(line: 868, column: 9, scope: !13087)
!13098 = !DILocation(line: 866, column: 20, scope: !13080)
!13099 = !DILocation(line: 866, column: 13, scope: !13080)
!13100 = !DILocation(line: 870, column: 44, scope: !13087)
!13101 = !DILocation(line: 870, column: 51, scope: !13087)
!13102 = !DILocation(line: 870, column: 60, scope: !13087)
!13103 = !DILocation(line: 870, column: 18, scope: !13087)
!13104 = !DILocation(line: 871, column: 18, scope: !13087)
!13105 = !DILocation(line: 872, column: 18, scope: !13087)
!13106 = !DILocation(line: 869, column: 21, scope: !13087)
!13107 = !DILocation(line: 869, column: 28, scope: !13087)
!13108 = !DILocation(line: 869, column: 25, scope: !13087)
!13109 = !DILocation(line: 869, column: 25, scope: !13089)
!13110 = !DILocation(line: 869, column: 36, scope: !13089)
!13111 = !DILocation(line: 874, column: 6, scope: !13080)
!13112 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String12from_utf16be28_$u7b$$u7b$closure$u7d$$u7d$17hd716dae50148b655E", scope: !8793, file: !9348, line: 872, type: !13113, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13115)
!13113 = !DISubroutineType(types: !13114)
!13114 = !{null, !8792, !976}
!13115 = !{!13116, !13117}
!13116 = !DILocalVariable(arg: 1, scope: !13112, file: !9348, line: 872, type: !8792)
!13117 = !DILocalVariable(arg: 2, scope: !13112, file: !9348, line: 872, type: !976)
!13118 = !DILocation(line: 872, column: 26, scope: !13112)
!13119 = !DILocation(line: 872, column: 27, scope: !13112)
!13120 = !DILocation(line: 872, column: 48, scope: !13112)
!13121 = distinct !DISubprogram(name: "from_utf16le", linkageName: "_ZN5alloc6string6String12from_utf16le17h9f465092e351096cE", scope: !178, file: !9348, line: 789, type: !13081, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13122, retainedNodes: !13123)
!13122 = !DISubprogram(name: "from_utf16le", linkageName: "_ZN5alloc6string6String12from_utf16le17h9f465092e351096cE", scope: !178, file: !9348, line: 789, type: !13081, scopeLine: 789, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13123 = !{!13124, !13125, !13127}
!13124 = !DILocalVariable(name: "v", arg: 1, scope: !13121, file: !9348, line: 789, type: !432)
!13125 = !DILocalVariable(name: "chunks", scope: !13126, file: !9348, line: 790, type: !4361, align: 32)
!13126 = distinct !DILexicalBlock(scope: !13121, file: !9348, line: 790, column: 9)
!13127 = !DILocalVariable(name: "v", scope: !13128, file: !9348, line: 794, type: !7515, align: 32)
!13128 = distinct !DILexicalBlock(scope: !13126, file: !9348, line: 794, column: 13)
!13129 = !DILocation(line: 789, column: 25, scope: !13121)
!13130 = !DILocation(line: 790, column: 30, scope: !13121)
!13131 = !DILocation(line: 790, column: 22, scope: !13121)
!13132 = !DILocation(line: 790, column: 14, scope: !13121)
!13133 = !DILocation(line: 790, column: 14, scope: !13126)
!13134 = !DILocation(line: 793, column: 59, scope: !13126)
!13135 = !DILocation(line: 793, column: 15, scope: !13126)
!13136 = !DILocation(line: 793, column: 9, scope: !13126)
!13137 = !DILocation(line: 791, column: 20, scope: !13121)
!13138 = !DILocation(line: 791, column: 13, scope: !13121)
!13139 = !DILocation(line: 795, column: 44, scope: !13126)
!13140 = !DILocation(line: 795, column: 51, scope: !13126)
!13141 = !DILocation(line: 795, column: 60, scope: !13126)
!13142 = !DILocation(line: 795, column: 18, scope: !13126)
!13143 = !DILocation(line: 796, column: 18, scope: !13126)
!13144 = !DILocation(line: 797, column: 18, scope: !13126)
!13145 = !DILocation(line: 794, column: 21, scope: !13126)
!13146 = !DILocation(line: 794, column: 28, scope: !13126)
!13147 = !DILocation(line: 794, column: 25, scope: !13126)
!13148 = !DILocation(line: 794, column: 25, scope: !13128)
!13149 = !DILocation(line: 794, column: 36, scope: !13128)
!13150 = !DILocation(line: 799, column: 6, scope: !13121)
!13151 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String12from_utf16le28_$u7b$$u7b$closure$u7d$$u7d$17h220fc65bc53b3963E", scope: !8689, file: !9348, line: 797, type: !13152, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13154)
!13152 = !DISubroutineType(types: !13153)
!13153 = !{null, !8688, !976}
!13154 = !{!13155, !13156}
!13155 = !DILocalVariable(arg: 1, scope: !13151, file: !9348, line: 797, type: !8688)
!13156 = !DILocalVariable(arg: 2, scope: !13151, file: !9348, line: 797, type: !976)
!13157 = !DILocation(line: 797, column: 26, scope: !13151)
!13158 = !DILocation(line: 797, column: 27, scope: !13151)
!13159 = !DILocation(line: 797, column: 48, scope: !13151)
!13160 = distinct !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE", scope: !178, file: !9348, line: 487, type: !13161, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13163, retainedNodes: !13164)
!13161 = !DISubroutineType(types: !13162)
!13162 = !{!178, !9}
!13163 = !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc6string6String13with_capacity17hb6a263f0504a646fE", scope: !178, file: !9348, line: 487, type: !13161, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13164 = !{!13165}
!13165 = !DILocalVariable(name: "capacity", arg: 1, scope: !13160, file: !9348, line: 487, type: !9)
!13166 = !DILocation(line: 487, column: 26, scope: !13160)
!13167 = !DILocation(line: 488, column: 23, scope: !13160)
!13168 = !DILocation(line: 488, column: 9, scope: !13160)
!13169 = !DILocation(line: 489, column: 6, scope: !13160)
!13170 = distinct !DISubprogram(name: "into_boxed_str", linkageName: "_ZN5alloc6string6String14into_boxed_str17h6e07c05869a521b2E", scope: !178, file: !9348, line: 2112, type: !12923, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13171, retainedNodes: !13172)
!13171 = !DISubprogram(name: "into_boxed_str", linkageName: "_ZN5alloc6string6String14into_boxed_str17h6e07c05869a521b2E", scope: !178, file: !9348, line: 2112, type: !12923, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13172 = !{!13173, !13174}
!13173 = !DILocalVariable(name: "self", arg: 1, scope: !13170, file: !9348, line: 2112, type: !178)
!13174 = !DILocalVariable(name: "slice", scope: !13175, file: !9348, line: 2113, type: !407, align: 32)
!13175 = distinct !DILexicalBlock(scope: !13170, file: !9348, line: 2113, column: 9)
!13176 = !DILocation(line: 2112, column: 27, scope: !13170)
!13177 = !DILocation(line: 2113, column: 21, scope: !13170)
!13178 = !DILocation(line: 2113, column: 30, scope: !13170)
!13179 = !DILocation(line: 2113, column: 13, scope: !13175)
!13180 = !DILocation(line: 2114, column: 18, scope: !13175)
!13181 = !DILocation(line: 2115, column: 6, scope: !13170)
!13182 = distinct !DISubprogram(name: "into_raw_parts", linkageName: "_ZN5alloc6string6String14into_raw_parts17hec216dfc7107a88fE", scope: !178, file: !9348, line: 945, type: !13183, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13185, retainedNodes: !13186)
!13183 = !DISubroutineType(types: !13184)
!13184 = !{!10758, !178}
!13185 = !DISubprogram(name: "into_raw_parts", linkageName: "_ZN5alloc6string6String14into_raw_parts17hec216dfc7107a88fE", scope: !178, file: !9348, line: 945, type: !13183, scopeLine: 945, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13186 = !{!13187}
!13187 = !DILocalVariable(name: "self", arg: 1, scope: !13182, file: !9348, line: 945, type: !178)
!13188 = !DILocation(line: 945, column: 27, scope: !13182)
!13189 = !DILocation(line: 946, column: 9, scope: !13182)
!13190 = !DILocation(line: 946, column: 18, scope: !13182)
!13191 = !DILocation(line: 947, column: 6, scope: !13182)
!13192 = distinct !DISubprogram(name: "from_utf8_lossy", linkageName: "_ZN5alloc6string6String15from_utf8_lossy17h322252d81ba4304aE", scope: !178, file: !9348, line: 622, type: !13193, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13195, retainedNodes: !13196)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{!3456, !432}
!13195 = !DISubprogram(name: "from_utf8_lossy", linkageName: "_ZN5alloc6string6String15from_utf8_lossy17h322252d81ba4304aE", scope: !178, file: !9348, line: 622, type: !13193, scopeLine: 622, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13196 = !{!13197, !13198, !13200, !13202, !13204, !13206, !13209, !13210, !13213, !13215, !13217}
!13197 = !DILocalVariable(name: "v", arg: 1, scope: !13192, file: !9348, line: 622, type: !432)
!13198 = !DILocalVariable(name: "iter", scope: !13199, file: !9348, line: 623, type: !12961, align: 32)
!13199 = distinct !DILexicalBlock(scope: !13192, file: !9348, line: 623, column: 9)
!13200 = !DILocalVariable(name: "first_valid", scope: !13201, file: !9348, line: 625, type: !124, align: 32)
!13201 = distinct !DILexicalBlock(scope: !13199, file: !9348, line: 625, column: 9)
!13202 = !DILocalVariable(name: "chunk", scope: !13203, file: !9348, line: 625, type: !12969, align: 32)
!13203 = distinct !DILexicalBlock(scope: !13199, file: !9348, line: 625, column: 60)
!13204 = !DILocalVariable(name: "valid", scope: !13205, file: !9348, line: 626, type: !124, align: 32)
!13205 = distinct !DILexicalBlock(scope: !13203, file: !9348, line: 626, column: 13)
!13206 = !DILocalVariable(name: "left_val", scope: !13207, file: !9348, line: 628, type: !93, align: 32)
!13207 = !DILexicalBlockFile(scope: !13208, file: !9348, discriminator: 0)
!13208 = distinct !DILexicalBlock(scope: !13205, file: !2304, line: 45, column: 13)
!13209 = !DILocalVariable(name: "right_val", scope: !13207, file: !9348, line: 628, type: !93, align: 32)
!13210 = !DILocalVariable(name: "kind", scope: !13211, file: !9348, line: 628, type: !280, align: 8)
!13211 = !DILexicalBlockFile(scope: !13212, file: !9348, discriminator: 0)
!13212 = distinct !DILexicalBlock(scope: !13208, file: !2304, line: 47, column: 21)
!13213 = !DILocalVariable(name: "res", scope: !13214, file: !9348, line: 638, type: !178, align: 32)
!13214 = distinct !DILexicalBlock(scope: !13201, file: !9348, line: 638, column: 9)
!13215 = !DILocalVariable(name: "iter", scope: !13216, file: !9348, line: 642, type: !12961, align: 32)
!13216 = distinct !DILexicalBlock(scope: !13214, file: !9348, line: 642, column: 9)
!13217 = !DILocalVariable(name: "chunk", scope: !13218, file: !9348, line: 642, type: !12969, align: 32)
!13218 = distinct !DILexicalBlock(scope: !13216, file: !9348, line: 642, column: 27)
!13219 = !DILocation(line: 622, column: 28, scope: !13192)
!13220 = !DILocation(line: 623, column: 13, scope: !13199)
!13221 = !DILocation(line: 625, column: 39, scope: !13203)
!13222 = !DILocation(line: 638, column: 13, scope: !13214)
!13223 = !DILocation(line: 642, column: 22, scope: !13216)
!13224 = !DILocation(line: 642, column: 13, scope: !13218)
!13225 = !DILocation(line: 623, column: 26, scope: !13192)
!13226 = !DILocation(line: 625, column: 53, scope: !13203)
!13227 = !DILocation(line: 625, column: 48, scope: !13203)
!13228 = !DILocation(line: 625, column: 34, scope: !13203)
!13229 = !DILocation(line: 626, column: 31, scope: !13203)
!13230 = !DILocation(line: 625, column: 13, scope: !13201)
!13231 = !DILocation(line: 626, column: 17, scope: !13205)
!13232 = !DILocation(line: 627, column: 22, scope: !13205)
!13233 = !DILocation(line: 627, column: 32, scope: !13205)
!13234 = !DILocation(line: 627, column: 16, scope: !13205)
!13235 = !DILocation(line: 633, column: 20, scope: !13199)
!13236 = !DILocation(line: 0, scope: !13237)
!13237 = !DILexicalBlockFile(scope: !13199, file: !4885, discriminator: 0)
!13238 = !DILocation(line: 638, column: 23, scope: !13201)
!13239 = !DILocation(line: 639, column: 13, scope: !13214)
!13240 = !DILocation(line: 640, column: 13, scope: !13214)
!13241 = !DILocation(line: 642, column: 22, scope: !13214)
!13242 = !DILocation(line: 642, column: 9, scope: !13216)
!13243 = !DILocation(line: 628, column: 40, scope: !13205)
!13244 = !DILocation(line: 628, column: 47, scope: !13205)
!13245 = !DILocation(line: 628, column: 17, scope: !13205)
!13246 = !DILocation(line: 628, column: 17, scope: !13207)
!13247 = !DILocation(line: 642, column: 13, scope: !13216)
!13248 = !DILocation(line: 643, column: 32, scope: !13218)
!13249 = !DILocation(line: 643, column: 17, scope: !13218)
!13250 = !DILocation(line: 644, column: 23, scope: !13218)
!13251 = !DILocation(line: 644, column: 33, scope: !13218)
!13252 = !DILocation(line: 644, column: 17, scope: !13218)
!13253 = !DILocation(line: 649, column: 20, scope: !13214)
!13254 = !DILocation(line: 649, column: 9, scope: !13214)
!13255 = !DILocation(line: 650, column: 6, scope: !13192)
!13256 = !DILocation(line: 645, column: 21, scope: !13218)
!13257 = !DILocation(line: 628, column: 17, scope: !13211)
!13258 = !DILocation(line: 629, column: 24, scope: !13205)
!13259 = distinct !DISubprogram(name: "from_utf16_lossy", linkageName: "_ZN5alloc6string6String16from_utf16_lossy17hdd4d35d260a80e39E", scope: !178, file: !9348, line: 761, type: !13260, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13262, retainedNodes: !13263)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!178, !7515}
!13262 = !DISubprogram(name: "from_utf16_lossy", linkageName: "_ZN5alloc6string6String16from_utf16_lossy17hdd4d35d260a80e39E", scope: !178, file: !9348, line: 761, type: !13260, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13263 = !{!13264}
!13264 = !DILocalVariable(name: "v", arg: 1, scope: !13259, file: !9348, line: 761, type: !7515)
!13265 = !DILocation(line: 761, column: 29, scope: !13259)
!13266 = !DILocation(line: 762, column: 30, scope: !13259)
!13267 = !DILocation(line: 762, column: 37, scope: !13259)
!13268 = !DILocation(line: 762, column: 9, scope: !13259)
!13269 = !DILocation(line: 763, column: 14, scope: !13259)
!13270 = !DILocation(line: 764, column: 14, scope: !13259)
!13271 = !DILocation(line: 765, column: 6, scope: !13259)
!13272 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String16from_utf16_lossy28_$u7b$$u7b$closure$u7d$$u7d$17ha4b1862be1a2d797E", scope: !750, file: !9348, line: 763, type: !13273, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13276)
!13273 = !DISubroutineType(types: !13274)
!13274 = !{!574, !13275, !1112}
!13275 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}", baseType: !749, size: 32, align: 32, dwarfAddressSpace: 0)
!13276 = !{!13277, !13278}
!13277 = !DILocalVariable(name: "r", arg: 2, scope: !13272, file: !9348, line: 763, type: !1112)
!13278 = !DILocalVariable(arg: 1, scope: !13272, file: !9348, line: 763, type: !13275)
!13279 = !DILocation(line: 763, column: 18, scope: !13272)
!13280 = !DILocation(line: 763, column: 19, scope: !13272)
!13281 = !DILocation(line: 763, column: 24, scope: !13272)
!13282 = !DILocation(line: 763, column: 62, scope: !13272)
!13283 = distinct !DISubprogram(name: "try_reserve_exact", linkageName: "_ZN5alloc6string6String17try_reserve_exact17hbe96913397eec3d7E", scope: !178, file: !9348, line: 1337, type: !13070, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13284, retainedNodes: !13285)
!13284 = !DISubprogram(name: "try_reserve_exact", linkageName: "_ZN5alloc6string6String17try_reserve_exact17hbe96913397eec3d7E", scope: !178, file: !9348, line: 1337, type: !13070, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13285 = !{!13286, !13287}
!13286 = !DILocalVariable(name: "self", arg: 1, scope: !13283, file: !9348, line: 1337, type: !567)
!13287 = !DILocalVariable(name: "additional", arg: 2, scope: !13283, file: !9348, line: 1337, type: !9)
!13288 = !DILocation(line: 1337, column: 30, scope: !13283)
!13289 = !DILocation(line: 1337, column: 41, scope: !13283)
!13290 = !DILocation(line: 1338, column: 18, scope: !13283)
!13291 = !DILocation(line: 1339, column: 6, scope: !13283)
!13292 = distinct !DISubprogram(name: "from_utf16be_lossy", linkageName: "_ZN5alloc6string6String18from_utf16be_lossy17had8f6065002b4c8cE", scope: !178, file: !9348, line: 903, type: !13293, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13295, retainedNodes: !13296)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{!178, !432}
!13295 = !DISubprogram(name: "from_utf16be_lossy", linkageName: "_ZN5alloc6string6String18from_utf16be_lossy17had8f6065002b4c8cE", scope: !178, file: !9348, line: 903, type: !13293, scopeLine: 903, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13296 = !{!13297, !13298, !13300, !13302, !13303, !13305, !13306}
!13297 = !DILocalVariable(name: "v", arg: 1, scope: !13292, file: !9348, line: 903, type: !432)
!13298 = !DILocalVariable(name: "v", scope: !13299, file: !9348, line: 905, type: !7515, align: 32)
!13299 = distinct !DILexicalBlock(scope: !13292, file: !9348, line: 905, column: 13)
!13300 = !DILocalVariable(name: "v", scope: !13301, file: !9348, line: 906, type: !7515, align: 32)
!13301 = distinct !DILexicalBlock(scope: !13292, file: !9348, line: 906, column: 13)
!13302 = !DILocalVariable(name: "_remainder", scope: !13301, file: !9348, line: 906, type: !244, align: 32)
!13303 = !DILocalVariable(name: "chunks", scope: !13304, file: !9348, line: 908, type: !4361, align: 32)
!13304 = distinct !DILexicalBlock(scope: !13292, file: !9348, line: 908, column: 17)
!13305 = !DILocalVariable(name: "remainder", scope: !13304, file: !9348, line: 908, type: !432, align: 32)
!13306 = !DILocalVariable(name: "string", scope: !13307, file: !9348, line: 909, type: !178, align: 32)
!13307 = distinct !DILexicalBlock(scope: !13304, file: !9348, line: 909, column: 17)
!13308 = !DILocation(line: 903, column: 31, scope: !13292)
!13309 = !DILocation(line: 909, column: 21, scope: !13307)
!13310 = !DILocation(line: 904, column: 56, scope: !13292)
!13311 = !DILocation(line: 904, column: 15, scope: !13292)
!13312 = !DILocation(line: 904, column: 9, scope: !13292)
!13313 = !DILocation(line: 908, column: 45, scope: !13292)
!13314 = !DILocation(line: 908, column: 22, scope: !13292)
!13315 = !DILocation(line: 908, column: 22, scope: !13304)
!13316 = !DILocation(line: 908, column: 30, scope: !13292)
!13317 = !DILocation(line: 908, column: 30, scope: !13304)
!13318 = !DILocation(line: 909, column: 56, scope: !13304)
!13319 = !DILocation(line: 909, column: 63, scope: !13304)
!13320 = !DILocation(line: 909, column: 72, scope: !13304)
!13321 = !DILocation(line: 909, column: 30, scope: !13304)
!13322 = !DILocation(line: 910, column: 22, scope: !13304)
!13323 = !DILocation(line: 911, column: 22, scope: !13304)
!13324 = !DILocation(line: 912, column: 30, scope: !13307)
!13325 = !DILocation(line: 912, column: 20, scope: !13307)
!13326 = !DILocation(line: 905, column: 21, scope: !13292)
!13327 = !DILocation(line: 905, column: 28, scope: !13292)
!13328 = !DILocation(line: 905, column: 25, scope: !13292)
!13329 = !DILocation(line: 905, column: 25, scope: !13299)
!13330 = !DILocation(line: 905, column: 36, scope: !13299)
!13331 = !DILocation(line: 906, column: 28, scope: !13292)
!13332 = !DILocation(line: 915, column: 6, scope: !13292)
!13333 = !DILocation(line: 906, column: 25, scope: !13292)
!13334 = !DILocation(line: 906, column: 25, scope: !13301)
!13335 = !DILocation(line: 906, column: 29, scope: !13292)
!13336 = !DILocation(line: 906, column: 29, scope: !13301)
!13337 = !DILocation(line: 906, column: 46, scope: !13301)
!13338 = !DILocation(line: 912, column: 59, scope: !13307)
!13339 = !DILocation(line: 912, column: 43, scope: !13307)
!13340 = !DILocation(line: 912, column: 17, scope: !13307)
!13341 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String18from_utf16be_lossy28_$u7b$$u7b$closure$u7d$$u7d$17h7c780542b90ad200E", scope: !549, file: !9348, line: 910, type: !13342, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13345)
!13342 = !DISubroutineType(types: !13343)
!13343 = !{!574, !13344, !1112}
!13344 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}", baseType: !548, size: 32, align: 32, dwarfAddressSpace: 0)
!13345 = !{!13346, !13347}
!13346 = !DILocalVariable(name: "r", arg: 2, scope: !13341, file: !9348, line: 910, type: !1112)
!13347 = !DILocalVariable(arg: 1, scope: !13341, file: !9348, line: 910, type: !13344)
!13348 = !DILocation(line: 910, column: 26, scope: !13341)
!13349 = !DILocation(line: 910, column: 27, scope: !13341)
!13350 = !DILocation(line: 910, column: 32, scope: !13341)
!13351 = !DILocation(line: 910, column: 70, scope: !13341)
!13352 = distinct !DISubprogram(name: "from_utf16le_lossy", linkageName: "_ZN5alloc6string6String18from_utf16le_lossy17h20cdf8f7caf297adE", scope: !178, file: !9348, line: 828, type: !13293, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13353, retainedNodes: !13354)
!13353 = !DISubprogram(name: "from_utf16le_lossy", linkageName: "_ZN5alloc6string6String18from_utf16le_lossy17h20cdf8f7caf297adE", scope: !178, file: !9348, line: 828, type: !13293, scopeLine: 828, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13354 = !{!13355, !13356, !13358, !13360, !13361, !13363, !13364}
!13355 = !DILocalVariable(name: "v", arg: 1, scope: !13352, file: !9348, line: 828, type: !432)
!13356 = !DILocalVariable(name: "v", scope: !13357, file: !9348, line: 830, type: !7515, align: 32)
!13357 = distinct !DILexicalBlock(scope: !13352, file: !9348, line: 830, column: 13)
!13358 = !DILocalVariable(name: "v", scope: !13359, file: !9348, line: 831, type: !7515, align: 32)
!13359 = distinct !DILexicalBlock(scope: !13352, file: !9348, line: 831, column: 13)
!13360 = !DILocalVariable(name: "_remainder", scope: !13359, file: !9348, line: 831, type: !244, align: 32)
!13361 = !DILocalVariable(name: "chunks", scope: !13362, file: !9348, line: 833, type: !4361, align: 32)
!13362 = distinct !DILexicalBlock(scope: !13352, file: !9348, line: 833, column: 17)
!13363 = !DILocalVariable(name: "remainder", scope: !13362, file: !9348, line: 833, type: !432, align: 32)
!13364 = !DILocalVariable(name: "string", scope: !13365, file: !9348, line: 834, type: !178, align: 32)
!13365 = distinct !DILexicalBlock(scope: !13362, file: !9348, line: 834, column: 17)
!13366 = !DILocation(line: 828, column: 31, scope: !13352)
!13367 = !DILocation(line: 834, column: 21, scope: !13365)
!13368 = !DILocation(line: 829, column: 59, scope: !13352)
!13369 = !DILocation(line: 829, column: 15, scope: !13352)
!13370 = !DILocation(line: 829, column: 9, scope: !13352)
!13371 = !DILocation(line: 833, column: 45, scope: !13352)
!13372 = !DILocation(line: 833, column: 22, scope: !13352)
!13373 = !DILocation(line: 833, column: 22, scope: !13362)
!13374 = !DILocation(line: 833, column: 30, scope: !13352)
!13375 = !DILocation(line: 833, column: 30, scope: !13362)
!13376 = !DILocation(line: 834, column: 56, scope: !13362)
!13377 = !DILocation(line: 834, column: 63, scope: !13362)
!13378 = !DILocation(line: 834, column: 72, scope: !13362)
!13379 = !DILocation(line: 834, column: 30, scope: !13362)
!13380 = !DILocation(line: 835, column: 22, scope: !13362)
!13381 = !DILocation(line: 836, column: 22, scope: !13362)
!13382 = !DILocation(line: 837, column: 30, scope: !13365)
!13383 = !DILocation(line: 837, column: 20, scope: !13365)
!13384 = !DILocation(line: 830, column: 21, scope: !13352)
!13385 = !DILocation(line: 830, column: 28, scope: !13352)
!13386 = !DILocation(line: 830, column: 25, scope: !13352)
!13387 = !DILocation(line: 830, column: 25, scope: !13357)
!13388 = !DILocation(line: 830, column: 36, scope: !13357)
!13389 = !DILocation(line: 831, column: 28, scope: !13352)
!13390 = !DILocation(line: 840, column: 6, scope: !13352)
!13391 = !DILocation(line: 831, column: 25, scope: !13352)
!13392 = !DILocation(line: 831, column: 25, scope: !13359)
!13393 = !DILocation(line: 831, column: 29, scope: !13352)
!13394 = !DILocation(line: 831, column: 29, scope: !13359)
!13395 = !DILocation(line: 831, column: 46, scope: !13359)
!13396 = !DILocation(line: 837, column: 59, scope: !13365)
!13397 = !DILocation(line: 837, column: 43, scope: !13365)
!13398 = !DILocation(line: 837, column: 17, scope: !13365)
!13399 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc6string6String18from_utf16le_lossy28_$u7b$$u7b$closure$u7d$$u7d$17hd433e831c02c510bE", scope: !694, file: !9348, line: 835, type: !13400, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13403)
!13400 = !DISubroutineType(types: !13401)
!13401 = !{!574, !13402, !1112}
!13402 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}", baseType: !693, size: 32, align: 32, dwarfAddressSpace: 0)
!13403 = !{!13404, !13405}
!13404 = !DILocalVariable(name: "r", arg: 2, scope: !13399, file: !9348, line: 835, type: !1112)
!13405 = !DILocalVariable(arg: 1, scope: !13399, file: !9348, line: 835, type: !13402)
!13406 = !DILocation(line: 835, column: 26, scope: !13399)
!13407 = !DILocation(line: 835, column: 27, scope: !13399)
!13408 = !DILocation(line: 835, column: 32, scope: !13399)
!13409 = !DILocation(line: 835, column: 70, scope: !13399)
!13410 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE", scope: !178, file: !9348, line: 1027, type: !13411, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13413, retainedNodes: !13414)
!13411 = !DISubroutineType(types: !13412)
!13412 = !{!178, !182}
!13413 = !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN5alloc6string6String19from_utf8_unchecked17h01c09d60c73fc0deE", scope: !178, file: !9348, line: 1027, type: !13411, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13414 = !{!13415}
!13415 = !DILocalVariable(name: "bytes", arg: 1, scope: !13410, file: !9348, line: 1027, type: !182)
!13416 = !DILocation(line: 1027, column: 39, scope: !13410)
!13417 = !DILocation(line: 1028, column: 9, scope: !13410)
!13418 = !DILocation(line: 1029, column: 6, scope: !13410)
!13419 = distinct !DISubprogram(name: "from_utf8_lossy_owned", linkageName: "_ZN5alloc6string6String21from_utf8_lossy_owned17ha5f0c4aa684a6a9eE", scope: !178, file: !9348, line: 689, type: !13411, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13420, retainedNodes: !13421)
!13420 = !DISubprogram(name: "from_utf8_lossy_owned", linkageName: "_ZN5alloc6string6String21from_utf8_lossy_owned17ha5f0c4aa684a6a9eE", scope: !178, file: !9348, line: 689, type: !13411, scopeLine: 689, flags: DIFlagPrototyped, spFlags: 0, templateParams: !21)
!13421 = !{!13422, !13423}
!13422 = !DILocalVariable(name: "v", arg: 1, scope: !13419, file: !9348, line: 689, type: !182)
!13423 = !DILocalVariable(name: "string", scope: !13424, file: !9348, line: 690, type: !178, align: 32)
!13424 = distinct !DILexicalBlock(scope: !13419, file: !9348, line: 690, column: 65)
!13425 = !DILocation(line: 689, column: 34, scope: !13419)
!13426 = !DILocation(line: 690, column: 27, scope: !13424)
!13427 = !DILocation(line: 690, column: 37, scope: !13424)
!13428 = !DILocation(line: 690, column: 61, scope: !13424)
!13429 = !DILocation(line: 690, column: 16, scope: !13424)
!13430 = !DILocation(line: 691, column: 13, scope: !13424)
!13431 = !DILocation(line: 690, column: 9, scope: !13419)
!13432 = !DILocation(line: 698, column: 50, scope: !13419)
!13433 = !DILocation(line: 698, column: 22, scope: !13419)
!13434 = !DILocation(line: 700, column: 5, scope: !13419)
!13435 = !DILocation(line: 700, column: 6, scope: !13419)
!13436 = !DILocation(line: 689, column: 5, scope: !13419)
!13437 = distinct !DISubprogram(name: "len", linkageName: "_ZN5alloc6string6String3len17h8f2b854020f019dbE", scope: !178, file: !9348, line: 1848, type: !13438, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13440, retainedNodes: !13441)
!13438 = !DISubroutineType(types: !13439)
!13439 = !{!9, !9373}
!13440 = !DISubprogram(name: "len", linkageName: "_ZN5alloc6string6String3len17h8f2b854020f019dbE", scope: !178, file: !9348, line: 1848, type: !13438, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13441 = !{!13442}
!13442 = !DILocalVariable(name: "self", arg: 1, scope: !13437, file: !9348, line: 1848, type: !9373)
!13443 = !DILocation(line: 1848, column: 22, scope: !13437)
!13444 = !DILocation(line: 1849, column: 18, scope: !13437)
!13445 = !DILocation(line: 1850, column: 6, scope: !13437)
!13446 = distinct !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17hf6a28998eefb1a92E", scope: !178, file: !9348, line: 444, type: !13447, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13449)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!178}
!13449 = !DISubprogram(name: "new", linkageName: "_ZN5alloc6string6String3new17hf6a28998eefb1a92E", scope: !178, file: !9348, line: 444, type: !13447, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13450 = !DILocation(line: 445, column: 23, scope: !13446)
!13451 = !DILocation(line: 445, column: 9, scope: !13446)
!13452 = !DILocation(line: 446, column: 6, scope: !13446)
!13453 = distinct !DISubprogram(name: "push", linkageName: "_ZN5alloc6string6String4push17h13549bafb64c32beE", scope: !178, file: !9348, line: 1404, type: !13454, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13456, retainedNodes: !13457)
!13454 = !DISubroutineType(types: !13455)
!13455 = !{null, !567, !574}
!13456 = !DISubprogram(name: "push", linkageName: "_ZN5alloc6string6String4push17h13549bafb64c32beE", scope: !178, file: !9348, line: 1404, type: !13454, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13457 = !{!13458, !13459, !13460, !13462}
!13458 = !DILocalVariable(name: "self", arg: 1, scope: !13453, file: !9348, line: 1404, type: !567)
!13459 = !DILocalVariable(name: "ch", arg: 2, scope: !13453, file: !9348, line: 1404, type: !574)
!13460 = !DILocalVariable(name: "len", scope: !13461, file: !9348, line: 1405, type: !9, align: 32)
!13461 = distinct !DILexicalBlock(scope: !13453, file: !9348, line: 1405, column: 9)
!13462 = !DILocalVariable(name: "ch_len", scope: !13463, file: !9348, line: 1406, type: !9, align: 32)
!13463 = distinct !DILexicalBlock(scope: !13461, file: !9348, line: 1406, column: 9)
!13464 = !DILocation(line: 1404, column: 17, scope: !13453)
!13465 = !DILocation(line: 1404, column: 28, scope: !13453)
!13466 = !DILocation(line: 1405, column: 24, scope: !13453)
!13467 = !DILocation(line: 1405, column: 13, scope: !13461)
!13468 = !DILocation(line: 1406, column: 25, scope: !13461)
!13469 = !DILocation(line: 1406, column: 13, scope: !13463)
!13470 = !DILocation(line: 1407, column: 14, scope: !13463)
!13471 = !DILocation(line: 1411, column: 71, scope: !13463)
!13472 = !DILocation(line: 1411, column: 93, scope: !13463)
!13473 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !13474)
!13474 = distinct !DILocation(line: 1411, column: 84, scope: !13463)
!13475 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !13474)
!13476 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !13474)
!13477 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !13474)
!13478 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !13474)
!13479 = !DILocation(line: 1411, column: 13, scope: !13463)
!13480 = !DILocation(line: 1412, column: 30, scope: !13463)
!13481 = !DILocation(line: 1412, column: 22, scope: !13463)
!13482 = !DILocation(line: 1414, column: 6, scope: !13453)
!13483 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string6String6as_str17ha63f9ab0907175deE", scope: !178, file: !9348, line: 1066, type: !10738, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13484, retainedNodes: !13485)
!13484 = !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string6String6as_str17ha63f9ab0907175deE", scope: !178, file: !9348, line: 1066, type: !10738, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13485 = !{!13486}
!13486 = !DILocalVariable(name: "self", arg: 1, scope: !13483, file: !9348, line: 1066, type: !9373)
!13487 = !DILocation(line: 1066, column: 25, scope: !13483)
!13488 = !DILocation(line: 1069, column: 52, scope: !13483)
!13489 = !DILocation(line: 1069, column: 18, scope: !13483)
!13490 = !DILocation(line: 1070, column: 6, scope: !13483)
!13491 = distinct !DISubprogram(name: "reserve", linkageName: "_ZN5alloc6string6String7reserve17h4fce6300662c2858E", scope: !178, file: !9348, line: 1211, type: !13492, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13494, retainedNodes: !13495)
!13492 = !DISubroutineType(types: !13493)
!13493 = !{null, !567, !9}
!13494 = !DISubprogram(name: "reserve", linkageName: "_ZN5alloc6string6String7reserve17h4fce6300662c2858E", scope: !178, file: !9348, line: 1211, type: !13492, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13495 = !{!13496, !13497}
!13496 = !DILocalVariable(name: "self", arg: 1, scope: !13491, file: !9348, line: 1211, type: !567)
!13497 = !DILocalVariable(name: "additional", arg: 2, scope: !13491, file: !9348, line: 1211, type: !9)
!13498 = !DILocation(line: 1211, column: 20, scope: !13491)
!13499 = !DILocation(line: 1211, column: 31, scope: !13491)
!13500 = !DILocation(line: 1212, column: 18, scope: !13491)
!13501 = !DILocation(line: 1213, column: 6, scope: !13491)
!13502 = distinct !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17hec64159959b61263E", scope: !178, file: !9348, line: 1111, type: !13503, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13505, retainedNodes: !13506)
!13503 = !DISubroutineType(types: !13504)
!13504 = !{null, !567, !124}
!13505 = !DISubprogram(name: "push_str", linkageName: "_ZN5alloc6string6String8push_str17hec64159959b61263E", scope: !178, file: !9348, line: 1111, type: !13503, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13506 = !{!13507, !13508}
!13507 = !DILocalVariable(name: "self", arg: 1, scope: !13502, file: !9348, line: 1111, type: !567)
!13508 = !DILocalVariable(name: "string", arg: 2, scope: !13502, file: !9348, line: 1111, type: !124)
!13509 = !DILocation(line: 1111, column: 21, scope: !13502)
!13510 = !DILocation(line: 1111, column: 32, scope: !13502)
!13511 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !13512)
!13512 = distinct !DILocation(line: 1112, column: 43, scope: !13502)
!13513 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !13512)
!13514 = !DILocation(line: 1112, column: 43, scope: !13502)
!13515 = !DILocation(line: 1112, column: 18, scope: !13502)
!13516 = !DILocation(line: 1113, column: 6, scope: !13502)
!13517 = distinct !DISubprogram(name: "from_utf8", linkageName: "_ZN5alloc6string6String9from_utf817hec1be3bb109edba9E", scope: !178, file: !9348, line: 563, type: !13518, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13520, retainedNodes: !13521)
!13518 = !DISubroutineType(types: !13519)
!13519 = !{!8602, !182}
!13520 = !DISubprogram(name: "from_utf8", linkageName: "_ZN5alloc6string6String9from_utf817hec1be3bb109edba9E", scope: !178, file: !9348, line: 563, type: !13518, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13521 = !{!13522, !13523}
!13522 = !DILocalVariable(name: "vec", arg: 1, scope: !13517, file: !9348, line: 563, type: !182)
!13523 = !DILocalVariable(name: "e", scope: !13524, file: !9348, line: 566, type: !260, align: 32)
!13524 = distinct !DILexicalBlock(scope: !13517, file: !9348, line: 566, column: 13)
!13525 = !DILocation(line: 563, column: 22, scope: !13517)
!13526 = !DILocation(line: 566, column: 17, scope: !13524)
!13527 = !DILocation(line: 564, column: 30, scope: !13517)
!13528 = !DILocation(line: 564, column: 15, scope: !13517)
!13529 = !DILocation(line: 564, column: 9, scope: !13517)
!13530 = !DILocation(line: 566, column: 17, scope: !13517)
!13531 = !DILocation(line: 566, column: 27, scope: !13524)
!13532 = !DILocation(line: 566, column: 23, scope: !13524)
!13533 = !DILocation(line: 566, column: 65, scope: !13517)
!13534 = !DILocation(line: 565, column: 26, scope: !13517)
!13535 = !DILocation(line: 565, column: 23, scope: !13517)
!13536 = !DILocation(line: 565, column: 40, scope: !13517)
!13537 = !DILocation(line: 568, column: 6, scope: !13517)
!13538 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string9IntoChars6as_str17h37b1358ae8af6d50E", scope: !13539, file: !9348, line: 3281, type: !13542, scopeLine: 3281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13545, retainedNodes: !13546)
!13539 = !DICompositeType(tag: DW_TAG_structure_type, name: "IntoChars", scope: !179, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !13540, templateParams: !21, identifier: "2560298d8a55923a7e78902a597f994d")
!13540 = !{!13541}
!13541 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !13539, file: !2, baseType: !858, size: 128, align: 32, flags: DIFlagPrivate)
!13542 = !DISubroutineType(types: !13543)
!13543 = !{!124, !13544}
!13544 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::IntoChars", baseType: !13539, size: 32, align: 32, dwarfAddressSpace: 0)
!13545 = !DISubprogram(name: "as_str", linkageName: "_ZN5alloc6string9IntoChars6as_str17h37b1358ae8af6d50E", scope: !13539, file: !9348, line: 3281, type: !13542, scopeLine: 3281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13546 = !{!13547}
!13547 = !DILocalVariable(name: "self", arg: 1, scope: !13538, file: !9348, line: 3281, type: !13544)
!13548 = !DILocation(line: 3281, column: 19, scope: !13538)
!13549 = !DILocation(line: 3283, column: 54, scope: !13538)
!13550 = !DILocation(line: 3283, column: 18, scope: !13538)
!13551 = !DILocation(line: 3284, column: 6, scope: !13538)
!13552 = distinct !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc7raw_vec11RawVecInner13with_capacity17h339203e12fa24062E", scope: !190, file: !13553, line: 145, type: !13554, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, declaration: !13556, retainedNodes: !13557)
!13553 = !DIFile(filename: "src/raw_vec/mod.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "656f0a5bb5909de3813a91cd7be10dc7")
!13554 = !DISubroutineType(types: !13555)
!13555 = !{!190, !9, !39}
!13556 = !DISubprogram(name: "with_capacity", linkageName: "_ZN5alloc7raw_vec11RawVecInner13with_capacity17h339203e12fa24062E", scope: !190, file: !13553, line: 145, type: !13554, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !21)
!13557 = !{!13558, !13559, !13560, !13562}
!13558 = !DILocalVariable(name: "capacity", arg: 1, scope: !13552, file: !13553, line: 145, type: !9)
!13559 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !13552, file: !13553, line: 145, type: !39)
!13560 = !DILocalVariable(name: "res", scope: !13561, file: !13553, line: 147, type: !190, align: 32)
!13561 = distinct !DILexicalBlock(scope: !13552, file: !13553, line: 147, column: 13)
!13562 = !DILocalVariable(name: "err", scope: !13563, file: !13553, line: 148, type: !1583, align: 32)
!13563 = distinct !DILexicalBlock(scope: !13552, file: !13553, line: 148, column: 13)
!13564 = !DILocation(line: 145, column: 22, scope: !13552)
!13565 = !DILocation(line: 145, column: 39, scope: !13552)
!13566 = !DILocation(line: 146, column: 15, scope: !13552)
!13567 = !DILocation(line: 146, column: 9, scope: !13552)
!13568 = !DILocation(line: 148, column: 17, scope: !13552)
!13569 = !DILocation(line: 148, column: 17, scope: !13563)
!13570 = !DILocation(line: 148, column: 25, scope: !13563)
!13571 = !DILocation(line: 147, column: 16, scope: !13552)
!13572 = !DILocation(line: 147, column: 16, scope: !13561)
!13573 = !DILocation(line: 150, column: 6, scope: !13552)
!13574 = distinct !DISubprogram(name: "handle_error", linkageName: "_ZN5alloc7raw_vec12handle_error17h92ee135840089c13E", scope: !187, file: !13553, line: 844, type: !13575, scopeLine: 844, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13577)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{null, !1583}
!13577 = !{!13578, !13579}
!13578 = !DILocalVariable(name: "e", arg: 1, scope: !13574, file: !13553, line: 844, type: !1583)
!13579 = !DILocalVariable(name: "layout", scope: !13580, file: !13553, line: 847, type: !39, align: 32)
!13580 = distinct !DILexicalBlock(scope: !13574, file: !13553, line: 847, column: 9)
!13581 = !DILocation(line: 844, column: 17, scope: !13574)
!13582 = !DILocation(line: 845, column: 13, scope: !13574)
!13583 = !DILocation(line: 845, column: 11, scope: !13574)
!13584 = !DILocation(line: 845, column: 5, scope: !13574)
!13585 = !DILocation(line: 847, column: 22, scope: !13574)
!13586 = !DILocation(line: 847, column: 22, scope: !13580)
!13587 = !DILocation(line: 847, column: 38, scope: !13580)
!13588 = !DILocation(line: 846, column: 29, scope: !13574)
!13589 = distinct !DISubprogram(name: "layout_array", linkageName: "_ZN5alloc7raw_vec12layout_array17ha176127582342869E", scope: !187, file: !13553, line: 852, type: !13590, scopeLine: 852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13592)
!13590 = !DISubroutineType(types: !13591)
!13591 = !{!8719, !9, !39}
!13592 = !{!13593, !13594}
!13593 = !DILocalVariable(name: "cap", arg: 1, scope: !13589, file: !13553, line: 852, type: !9)
!13594 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !13589, file: !13553, line: 852, type: !39)
!13595 = !DILocation(line: 852, column: 17, scope: !13589)
!13596 = !DILocation(line: 852, column: 29, scope: !13589)
!13597 = !DILocation(line: 853, column: 17, scope: !13589)
!13598 = !DILocation(line: 853, column: 29, scope: !13589)
!13599 = !DILocation(line: 853, column: 58, scope: !13589)
!13600 = !DILocation(line: 854, column: 2, scope: !13589)
!13601 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17h972d17445e96bc10E", scope: !8509, file: !13553, line: 853, type: !13602, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13604)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!39, !8508, !7170}
!13604 = !{!13605, !13607, !13608, !13609}
!13605 = !DILocalVariable(name: "layout", scope: !13606, file: !13553, line: 853, type: !39, align: 32)
!13606 = distinct !DILexicalBlock(scope: !13601, file: !13553, line: 853, column: 50)
!13607 = !DILocalVariable(name: "_pad", scope: !13606, file: !13553, line: 853, type: !9, align: 32)
!13608 = !DILocalVariable(arg: 1, scope: !13601, file: !13553, line: 853, type: !8508)
!13609 = !DILocalVariable(arg: 2, scope: !13601, file: !13553, line: 853, type: !7170)
!13610 = !DILocation(line: 853, column: 33, scope: !13601)
!13611 = !DILocation(line: 853, column: 34, scope: !13601)
!13612 = !DILocation(line: 853, column: 35, scope: !13601)
!13613 = !DILocation(line: 853, column: 35, scope: !13606)
!13614 = !DILocation(line: 853, column: 43, scope: !13601)
!13615 = !DILocation(line: 853, column: 43, scope: !13606)
!13616 = !DILocation(line: 853, column: 56, scope: !13601)
!13617 = distinct !DISubprogram(name: "{closure#1}", linkageName: "_ZN5alloc7raw_vec12layout_array28_$u7b$$u7b$closure$u7d$$u7d$17hf1e01f90190308e7E", scope: !8509, file: !13553, line: 853, type: !13618, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13620)
!13618 = !DISubroutineType(types: !13619)
!13619 = !{!1583, !8733, !6953}
!13620 = !{!13621, !13622}
!13621 = !DILocalVariable(arg: 1, scope: !13617, file: !13553, line: 853, type: !8733)
!13622 = !DILocalVariable(arg: 2, scope: !13617, file: !13553, line: 853, type: !6953)
!13623 = !DILocation(line: 853, column: 66, scope: !13617)
!13624 = !DILocation(line: 853, column: 67, scope: !13617)
!13625 = !DILocation(line: 853, column: 87, scope: !13617)
!13626 = !DILocation(line: 853, column: 93, scope: !13617)
!13627 = distinct !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17h4eb2f3b85fffd4ebE", scope: !186, file: !13553, line: 125, type: !13628, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !13630, retainedNodes: !13631)
!13628 = !DISubroutineType(types: !13629)
!13629 = !{!186, !9}
!13630 = !DISubprogram(name: "with_capacity<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$13with_capacity17h4eb2f3b85fffd4ebE", scope: !186, file: !13553, line: 125, type: !13628, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!13631 = !{!13632}
!13632 = !DILocalVariable(name: "capacity", arg: 1, scope: !13627, file: !13553, line: 125, type: !9)
!13633 = !DILocation(line: 125, column: 33, scope: !13627)
!13634 = !DILocation(line: 126, column: 23, scope: !13627)
!13635 = !DILocation(line: 127, column: 6, scope: !13627)
!13636 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h41a3a000cf7375baE", scope: !186, file: !13553, line: 103, type: !13637, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, declaration: !13639)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{!186}
!13639 = !DISubprogram(name: "new<u8>", linkageName: "_ZN5alloc7raw_vec15RawVec$LT$T$GT$3new17h41a3a000cf7375baE", scope: !186, file: !13553, line: 103, type: !13637, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !22)
!13640 = !DILocation(line: 104, column: 9, scope: !13636)
!13641 = !DILocation(line: 105, column: 6, scope: !13636)
!13642 = distinct !DISubprogram(name: "min_non_zero_cap", linkageName: "_ZN5alloc7raw_vec16min_non_zero_cap17hcb8644302555691eE", scope: !187, file: !13553, line: 158, type: !9781, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !13643)
!13643 = !{!13644}
!13644 = !DILocalVariable(name: "size", arg: 1, scope: !13642, file: !13553, line: 158, type: !9)
!13645 = !DILocation(line: 158, column: 27, scope: !13642)
!13646 = !DILocation(line: 159, column: 8, scope: !13642)
!13647 = !DILocation(line: 160, column: 9, scope: !13642)
!13648 = !DILocation(line: 159, column: 5, scope: !13642)
!13649 = !DILocation(line: 161, column: 15, scope: !13642)
!13650 = !DILocation(line: 166, column: 2, scope: !13642)
!13651 = !DILocation(line: 164, column: 9, scope: !13642)
!13652 = !DILocation(line: 161, column: 12, scope: !13642)
!13653 = !DILocation(line: 162, column: 9, scope: !13642)
!13654 = distinct !DISubprogram(name: "capacity_overflow", linkageName: "_ZN5alloc7raw_vec17capacity_overflow17h2a3a211178f79675E", scope: !187, file: !13553, line: 27, type: !2233, scopeLine: 27, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!13655 = !DILocation(line: 28, column: 5, scope: !13654)
!13656 = distinct !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h56ca3271bda081a1E", scope: !186, file: !13553, line: 340, type: !13657, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13660, retainedNodes: !13661)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{!1872, !13659, !9, !9}
!13659 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !186, size: 32, align: 32, dwarfAddressSpace: 0)
!13660 = !DISubprogram(name: "try_reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11try_reserve17h56ca3271bda081a1E", scope: !186, file: !13553, line: 340, type: !13657, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13661 = !{!13662, !13663, !13664}
!13662 = !DILocalVariable(name: "self", arg: 1, scope: !13656, file: !13553, line: 341, type: !13659)
!13663 = !DILocalVariable(name: "len", arg: 2, scope: !13656, file: !13553, line: 342, type: !9)
!13664 = !DILocalVariable(name: "additional", arg: 3, scope: !13656, file: !13553, line: 343, type: !9)
!13665 = !DILocation(line: 341, column: 9, scope: !13656)
!13666 = !DILocation(line: 342, column: 9, scope: !13656)
!13667 = !DILocation(line: 343, column: 9, scope: !13656)
!13668 = !DILocation(line: 346, column: 29, scope: !13656)
!13669 = !DILocation(line: 347, column: 6, scope: !13656)
!13670 = distinct !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17hbd64d136cffbc680E", scope: !186, file: !13553, line: 367, type: !13671, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13673, retainedNodes: !13674)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{null, !13659, !9, !9}
!13673 = !DISubprogram(name: "reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13reserve_exact17hbd64d136cffbc680E", scope: !186, file: !13553, line: 367, type: !13671, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13674 = !{!13675, !13676, !13677}
!13675 = !DILocalVariable(name: "self", arg: 1, scope: !13670, file: !13553, line: 367, type: !13659)
!13676 = !DILocalVariable(name: "len", arg: 2, scope: !13670, file: !13553, line: 367, type: !9)
!13677 = !DILocalVariable(name: "additional", arg: 3, scope: !13670, file: !13553, line: 367, type: !9)
!13678 = !DILocation(line: 367, column: 33, scope: !13670)
!13679 = !DILocation(line: 367, column: 44, scope: !13670)
!13680 = !DILocation(line: 367, column: 56, scope: !13670)
!13681 = !DILocation(line: 369, column: 29, scope: !13670)
!13682 = !DILocation(line: 370, column: 6, scope: !13670)
!13683 = distinct !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17h5ec911174bc48a2bE", scope: !186, file: !13553, line: 394, type: !13684, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13686, retainedNodes: !13687)
!13684 = !DISubroutineType(types: !13685)
!13685 = !{null, !13659, !9}
!13686 = !DISubprogram(name: "shrink_to_fit<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$13shrink_to_fit17h5ec911174bc48a2bE", scope: !186, file: !13553, line: 394, type: !13684, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13687 = !{!13688, !13689}
!13688 = !DILocalVariable(name: "self", arg: 1, scope: !13683, file: !13553, line: 394, type: !13659)
!13689 = !DILocalVariable(name: "cap", arg: 2, scope: !13683, file: !13553, line: 394, type: !9)
!13690 = !DILocation(line: 394, column: 33, scope: !13683)
!13691 = !DILocation(line: 394, column: 44, scope: !13683)
!13692 = !DILocation(line: 396, column: 29, scope: !13683)
!13693 = !DILocation(line: 397, column: 6, scope: !13683)
!13694 = distinct !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h1eb3d526f5c1625aE", scope: !186, file: !13553, line: 185, type: !13695, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13697, retainedNodes: !13698)
!13695 = !DISubroutineType(types: !13696)
!13696 = !{!186, !9, !212}
!13697 = !DISubprogram(name: "with_capacity_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16with_capacity_in17h1eb3d526f5c1625aE", scope: !186, file: !13553, line: 185, type: !13695, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13698 = !{!13699, !13700}
!13699 = !DILocalVariable(name: "capacity", arg: 1, scope: !13694, file: !13553, line: 185, type: !9)
!13700 = !DILocalVariable(name: "alloc", arg: 2, scope: !13694, file: !13553, line: 185, type: !212)
!13701 = !DILocation(line: 185, column: 36, scope: !13694)
!13702 = !DILocation(line: 185, column: 53, scope: !13694)
!13703 = !DILocation(line: 187, column: 20, scope: !13694)
!13704 = !DILocation(line: 190, column: 6, scope: !13694)
!13705 = distinct !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hf44c9700e0c4bc99E", scope: !186, file: !13553, line: 250, type: !13706, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13708, retainedNodes: !13709)
!13706 = !DISubroutineType(types: !13707)
!13707 = !{!186, !463, !9, !212}
!13708 = !DISubprogram(name: "from_raw_parts_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17from_raw_parts_in17hf44c9700e0c4bc99E", scope: !186, file: !13553, line: 250, type: !13706, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13709 = !{!13710, !13711, !13712, !13713, !13715}
!13710 = !DILocalVariable(name: "ptr", arg: 1, scope: !13705, file: !13553, line: 250, type: !463)
!13711 = !DILocalVariable(name: "capacity", arg: 2, scope: !13705, file: !13553, line: 250, type: !9)
!13712 = !DILocalVariable(name: "alloc", arg: 3, scope: !13705, file: !13553, line: 250, type: !212)
!13713 = !DILocalVariable(name: "ptr", scope: !13714, file: !13553, line: 253, type: !463, align: 32)
!13714 = distinct !DILexicalBlock(scope: !13705, file: !13553, line: 253, column: 13)
!13715 = !DILocalVariable(name: "capacity", scope: !13716, file: !13553, line: 254, type: !206, align: 32)
!13716 = distinct !DILexicalBlock(scope: !13714, file: !13553, line: 254, column: 13)
!13717 = !DILocation(line: 250, column: 44, scope: !13705)
!13718 = !DILocation(line: 250, column: 57, scope: !13705)
!13719 = !DILocation(line: 250, column: 74, scope: !13705)
!13720 = !DILocation(line: 31, column: 26, scope: !9866, inlinedAt: !13721)
!13721 = distinct !DILocation(line: 253, column: 27, scope: !13705)
!13722 = !DILocation(line: 253, column: 27, scope: !13705)
!13723 = !DILocation(line: 253, column: 17, scope: !13714)
!13724 = !DILocation(line: 254, column: 28, scope: !13714)
!13725 = !DILocation(line: 254, column: 17, scope: !13716)
!13726 = !DILocation(line: 256, column: 24, scope: !13716)
!13727 = !DILocation(line: 260, column: 6, scope: !13705)
!13728 = distinct !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h7aba69813c9ad828E", scope: !186, file: !13553, line: 373, type: !13657, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13729, retainedNodes: !13730)
!13729 = !DISubprogram(name: "try_reserve_exact<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$17try_reserve_exact17h7aba69813c9ad828E", scope: !186, file: !13553, line: 373, type: !13657, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13730 = !{!13731, !13732, !13733}
!13731 = !DILocalVariable(name: "self", arg: 1, scope: !13728, file: !13553, line: 374, type: !13659)
!13732 = !DILocalVariable(name: "len", arg: 2, scope: !13728, file: !13553, line: 375, type: !9)
!13733 = !DILocalVariable(name: "additional", arg: 3, scope: !13728, file: !13553, line: 376, type: !9)
!13734 = !DILocation(line: 374, column: 9, scope: !13728)
!13735 = !DILocation(line: 375, column: 9, scope: !13728)
!13736 = !DILocation(line: 376, column: 9, scope: !13728)
!13737 = !DILocation(line: 379, column: 29, scope: !13728)
!13738 = !DILocation(line: 380, column: 6, scope: !13728)
!13739 = distinct !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h270e5ed45b1e0b2eE", scope: !186, file: !13553, line: 281, type: !13740, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13743, retainedNodes: !13744)
!13740 = !DISubroutineType(types: !13741)
!13741 = !{!463, !13742}
!13742 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVec<u8, alloc::alloc::Global>", baseType: !186, size: 32, align: 32, dwarfAddressSpace: 0)
!13743 = !DISubprogram(name: "ptr<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$3ptr17h270e5ed45b1e0b2eE", scope: !186, file: !13553, line: 281, type: !13740, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13744 = !{!13745}
!13745 = !DILocalVariable(name: "self", arg: 1, scope: !13739, file: !13553, line: 281, type: !13742)
!13746 = !DILocation(line: 281, column: 29, scope: !13739)
!13747 = !DILocation(line: 282, column: 20, scope: !13739)
!13748 = !DILocation(line: 283, column: 6, scope: !13739)
!13749 = distinct !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h7566a186b4a5bb9aE", scope: !186, file: !13553, line: 175, type: !13750, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13752, retainedNodes: !13753)
!13750 = !DISubroutineType(types: !13751)
!13751 = !{!186, !212}
!13752 = !DISubprogram(name: "new_in<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$6new_in17h7566a186b4a5bb9aE", scope: !186, file: !13553, line: 175, type: !13750, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13753 = !{!13754}
!13754 = !DILocalVariable(name: "alloc", arg: 1, scope: !13749, file: !13553, line: 175, type: !212)
!13755 = !DILocation(line: 175, column: 32, scope: !13749)
!13756 = !DILocation(line: 178, column: 50, scope: !13749)
!13757 = !DILocation(line: 178, column: 23, scope: !13749)
!13758 = !DILocation(line: 179, column: 6, scope: !13749)
!13759 = distinct !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h95700aedeb7f36a4E", scope: !186, file: !13553, line: 325, type: !13671, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13760, retainedNodes: !13761)
!13760 = !DISubprogram(name: "reserve<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve17h95700aedeb7f36a4E", scope: !186, file: !13553, line: 325, type: !13671, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13761 = !{!13762, !13763, !13764}
!13762 = !DILocalVariable(name: "self", arg: 1, scope: !13759, file: !13553, line: 325, type: !13659)
!13763 = !DILocalVariable(name: "len", arg: 2, scope: !13759, file: !13553, line: 325, type: !9)
!13764 = !DILocalVariable(name: "additional", arg: 3, scope: !13759, file: !13553, line: 325, type: !9)
!13765 = !DILocation(line: 325, column: 27, scope: !13759)
!13766 = !DILocation(line: 325, column: 38, scope: !13759)
!13767 = !DILocation(line: 325, column: 50, scope: !13759)
!13768 = !DILocation(line: 327, column: 29, scope: !13759)
!13769 = !DILocation(line: 328, column: 6, scope: !13759)
!13770 = distinct !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h3b95e211ae59eadbE", scope: !186, file: !13553, line: 294, type: !13771, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13773, retainedNodes: !13774)
!13771 = !DISubroutineType(types: !13772)
!13772 = !{!9, !13742}
!13773 = !DISubprogram(name: "capacity<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8capacity17h3b95e211ae59eadbE", scope: !186, file: !13553, line: 294, type: !13771, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13774 = !{!13775}
!13775 = !DILocalVariable(name: "self", arg: 1, scope: !13770, file: !13553, line: 294, type: !13742)
!13776 = !DILocation(line: 294, column: 34, scope: !13770)
!13777 = !DILocation(line: 295, column: 20, scope: !13770)
!13778 = !DILocation(line: 296, column: 6, scope: !13770)
!13779 = distinct !DISubprogram(name: "grow_one<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hff492d12cb2c26b4E", scope: !186, file: !13553, line: 334, type: !13780, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13782, retainedNodes: !13783)
!13780 = !DISubroutineType(types: !13781)
!13781 = !{null, !13659}
!13782 = !DISubprogram(name: "grow_one<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hff492d12cb2c26b4E", scope: !186, file: !13553, line: 334, type: !13780, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13783 = !{!13784}
!13784 = !DILocalVariable(name: "self", arg: 1, scope: !13779, file: !13553, line: 334, type: !13659)
!13785 = !DILocation(line: 334, column: 28, scope: !13779)
!13786 = !DILocation(line: 336, column: 29, scope: !13779)
!13787 = !DILocation(line: 337, column: 6, scope: !13779)
!13788 = distinct !DISubprogram(name: "into_box<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17he871bc64efd70c4fE", scope: !186, file: !13553, line: 225, type: !13789, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13791, retainedNodes: !13792)
!13789 = !DISubroutineType(types: !13790)
!13790 = !{!12477, !186, !9}
!13791 = !DISubprogram(name: "into_box<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8into_box17he871bc64efd70c4fE", scope: !186, file: !13553, line: 225, type: !13789, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13792 = !{!13793, !13794, !13795, !13800}
!13793 = !DILocalVariable(name: "self", arg: 1, scope: !13788, file: !13553, line: 225, type: !186)
!13794 = !DILocalVariable(name: "len", arg: 2, scope: !13788, file: !13553, line: 225, type: !9)
!13795 = !DILocalVariable(name: "me", scope: !13796, file: !13553, line: 232, type: !13797, align: 32)
!13796 = distinct !DILexicalBlock(scope: !13788, file: !13553, line: 232, column: 9)
!13797 = !DICompositeType(tag: DW_TAG_structure_type, name: "ManuallyDrop<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", scope: !865, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !13798, templateParams: !3428, identifier: "864bf4acee377e37ef6102ce7d16aeb")
!13798 = !{!13799}
!13799 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !13797, file: !2, baseType: !186, size: 64, align: 32, flags: DIFlagPrivate)
!13800 = !DILocalVariable(name: "slice", scope: !13801, file: !13553, line: 234, type: !1329, align: 32)
!13801 = distinct !DILexicalBlock(scope: !13796, file: !13553, line: 234, column: 13)
!13802 = !DILocation(line: 225, column: 35, scope: !13788)
!13803 = !DILocation(line: 225, column: 41, scope: !13788)
!13804 = !DILocation(line: 232, column: 13, scope: !13796)
!13805 = !DILocation(line: 228, column: 25, scope: !13788)
!13806 = !DILocation(line: 228, column: 13, scope: !13788)
!13807 = !DILocation(line: 227, column: 9, scope: !13788)
!13808 = !DILocation(line: 232, column: 36, scope: !13788)
!13809 = !DILocalVariable(name: "value", arg: 1, scope: !13810, file: !9646, line: 181, type: !186)
!13810 = distinct !DISubprogram(name: "new<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h093c3d6ffdf814d4E", scope: !13797, file: !9646, line: 181, type: !13811, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3428, declaration: !13813, retainedNodes: !13814)
!13811 = !DISubroutineType(types: !13812)
!13812 = !{!13797, !186}
!13813 = !DISubprogram(name: "new<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN4core3mem13manually_drop21ManuallyDrop$LT$T$GT$3new17h093c3d6ffdf814d4E", scope: !13797, file: !9646, line: 181, type: !13811, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !3428)
!13814 = !{!13809}
!13815 = !DILocation(line: 181, column: 22, scope: !13810, inlinedAt: !13816)
!13816 = distinct !DILocation(line: 232, column: 18, scope: !13788)
!13817 = !DILocation(line: 183, column: 6, scope: !13810, inlinedAt: !13816)
!13818 = !DILocation(line: 232, column: 18, scope: !13788)
!13819 = !DILocalVariable(name: "self", arg: 1, scope: !13820, file: !9646, line: 270, type: !13823)
!13820 = distinct !DISubprogram(name: "deref<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", linkageName: "_ZN91_$LT$core..mem..manually_drop..ManuallyDrop$LT$T$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h0bf2c0069300e954E", scope: !9657, file: !9646, line: 270, type: !13821, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3428, retainedNodes: !13824)
!13821 = !DISubroutineType(types: !13822)
!13822 = !{!13742, !13823}
!13823 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::mem::manually_drop::ManuallyDrop<alloc::raw_vec::RawVec<u8, alloc::alloc::Global>>", baseType: !13797, size: 32, align: 32, dwarfAddressSpace: 0)
!13824 = !{!13819}
!13825 = !DILocation(line: 270, column: 14, scope: !13820, inlinedAt: !13826)
!13826 = distinct !DILocation(line: 234, column: 55, scope: !13796)
!13827 = !DILocation(line: 234, column: 58, scope: !13796)
!13828 = !DILocation(line: 234, column: 25, scope: !13796)
!13829 = !DILocation(line: 234, column: 17, scope: !13801)
!13830 = !DILocation(line: 270, column: 14, scope: !13820, inlinedAt: !13831)
!13831 = distinct !DILocation(line: 235, column: 48, scope: !13801)
!13832 = !DILocation(line: 235, column: 47, scope: !13801)
!13833 = !DILocation(line: 235, column: 37, scope: !13801)
!13834 = !DILocation(line: 235, column: 13, scope: !13801)
!13835 = !DILocation(line: 237, column: 6, scope: !13788)
!13836 = distinct !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h17b3fc1aaad8adddE", scope: !186, file: !13553, line: 300, type: !13837, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, declaration: !13839, retainedNodes: !13840)
!13837 = !DISubroutineType(types: !13838)
!13838 = !{!9407, !13742}
!13839 = !DISubprogram(name: "allocator<u8, alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$9allocator17h17b3fc1aaad8adddE", scope: !186, file: !13553, line: 300, type: !13837, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !217)
!13840 = !{!13841}
!13841 = !DILocalVariable(name: "self", arg: 1, scope: !13836, file: !13553, line: 300, type: !13742)
!13842 = !DILocation(line: 300, column: 29, scope: !13836)
!13843 = !DILocation(line: 301, column: 20, scope: !13836)
!13844 = !DILocation(line: 302, column: 6, scope: !13836)
!13845 = distinct !DISubprogram(name: "deallocate<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17hcb3bf6cb67a4aebeE", scope: !190, file: !13553, line: 830, type: !13846, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !13849, retainedNodes: !13850)
!13846 = !DISubroutineType(types: !13847)
!13847 = !{null, !13848, !39}
!13848 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::raw_vec::RawVecInner<alloc::alloc::Global>", baseType: !190, size: 32, align: 32, dwarfAddressSpace: 0)
!13849 = !DISubprogram(name: "deallocate<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10deallocate17hcb3bf6cb67a4aebeE", scope: !190, file: !13553, line: 830, type: !13846, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!13850 = !{!13851, !13852, !13853, !13855}
!13851 = !DILocalVariable(name: "self", arg: 1, scope: !13845, file: !13553, line: 830, type: !13848)
!13852 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !13845, file: !13553, line: 830, type: !39)
!13853 = !DILocalVariable(name: "ptr", scope: !13854, file: !13553, line: 832, type: !197, align: 32)
!13854 = distinct !DILexicalBlock(scope: !13845, file: !13553, line: 832, column: 82)
!13855 = !DILocalVariable(name: "layout", scope: !13854, file: !13553, line: 832, type: !39, align: 32)
!13856 = !DILocation(line: 830, column: 26, scope: !13845)
!13857 = !DILocation(line: 830, column: 37, scope: !13845)
!13858 = !DILocation(line: 832, column: 52, scope: !13854)
!13859 = !DILocation(line: 832, column: 38, scope: !13854)
!13860 = !DILocation(line: 832, column: 16, scope: !13854)
!13861 = !DILocation(line: 832, column: 22, scope: !13854)
!13862 = !DILocation(line: 832, column: 27, scope: !13854)
!13863 = !DILocation(line: 834, column: 17, scope: !13854)
!13864 = !DILocation(line: 834, column: 28, scope: !13854)
!13865 = !DILocation(line: 837, column: 6, scope: !13845)
!13866 = !DILocation(line: 830, column: 5, scope: !13845)
!13867 = distinct !DISubprogram(name: "grow_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hded2e673bfe1dec0E", scope: !190, file: !13553, line: 710, type: !13868, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !13870, retainedNodes: !13871)
!13868 = !DISubroutineType(types: !13869)
!13869 = !{!1872, !13848, !9, !9, !39}
!13870 = !DISubprogram(name: "grow_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$10grow_exact17hded2e673bfe1dec0E", scope: !190, file: !13553, line: 710, type: !13868, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!13871 = !{!13872, !13873, !13874, !13875, !13876, !13878, !13880, !13882, !13884, !13886}
!13872 = !DILocalVariable(name: "self", arg: 1, scope: !13867, file: !13553, line: 711, type: !13848)
!13873 = !DILocalVariable(name: "len", arg: 2, scope: !13867, file: !13553, line: 712, type: !9)
!13874 = !DILocalVariable(name: "additional", arg: 3, scope: !13867, file: !13553, line: 713, type: !9)
!13875 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !13867, file: !13553, line: 714, type: !39)
!13876 = !DILocalVariable(name: "cap", scope: !13877, file: !13553, line: 722, type: !9, align: 32)
!13877 = distinct !DILexicalBlock(scope: !13867, file: !13553, line: 722, column: 9)
!13878 = !DILocalVariable(name: "residual", scope: !13879, file: !13553, line: 722, type: !2009, align: 32)
!13879 = distinct !DILexicalBlock(scope: !13867, file: !13553, line: 722, column: 70)
!13880 = !DILocalVariable(name: "val", scope: !13881, file: !13553, line: 722, type: !9, align: 32)
!13881 = distinct !DILexicalBlock(scope: !13867, file: !13553, line: 722, column: 19)
!13882 = !DILocalVariable(name: "ptr", scope: !13883, file: !13553, line: 725, type: !1932, align: 32)
!13883 = distinct !DILexicalBlock(scope: !13877, file: !13553, line: 725, column: 9)
!13884 = !DILocalVariable(name: "residual", scope: !13885, file: !13553, line: 725, type: !1887, align: 32)
!13885 = distinct !DILexicalBlock(scope: !13877, file: !13553, line: 725, column: 62)
!13886 = !DILocalVariable(name: "val", scope: !13887, file: !13553, line: 725, type: !1932, align: 32)
!13887 = distinct !DILexicalBlock(scope: !13877, file: !13553, line: 725, column: 28)
!13888 = !DILocation(line: 711, column: 9, scope: !13867)
!13889 = !DILocation(line: 712, column: 9, scope: !13867)
!13890 = !DILocation(line: 713, column: 9, scope: !13867)
!13891 = !DILocation(line: 714, column: 9, scope: !13867)
!13892 = !DILocation(line: 716, column: 24, scope: !13867)
!13893 = !DILocation(line: 716, column: 12, scope: !13867)
!13894 = !DILocation(line: 719, column: 41, scope: !13867)
!13895 = !DILocation(line: 719, column: 20, scope: !13867)
!13896 = !DILocation(line: 0, scope: !13897)
!13897 = !DILexicalBlockFile(scope: !13867, file: !4885, discriminator: 0)
!13898 = !DILocation(line: 722, column: 23, scope: !13867)
!13899 = !DILocation(line: 722, column: 47, scope: !13867)
!13900 = !DILocation(line: 722, column: 19, scope: !13867)
!13901 = !DILocation(line: 730, column: 6, scope: !13867)
!13902 = !DILocation(line: 722, column: 70, scope: !13867)
!13903 = !DILocation(line: 722, column: 70, scope: !13879)
!13904 = !DILocation(line: 722, column: 19, scope: !13879)
!13905 = !DILocation(line: 722, column: 13, scope: !13877)
!13906 = !DILocation(line: 722, column: 19, scope: !13881)
!13907 = !DILocation(line: 725, column: 28, scope: !13877)
!13908 = !DILocation(line: 725, column: 33, scope: !13877)
!13909 = !DILocation(line: 725, column: 62, scope: !13877)
!13910 = !DILocation(line: 725, column: 62, scope: !13885)
!13911 = !DILocation(line: 725, column: 28, scope: !13885)
!13912 = !DILocation(line: 725, column: 13, scope: !13883)
!13913 = !DILocation(line: 725, column: 28, scope: !13887)
!13914 = !DILocation(line: 728, column: 23, scope: !13883)
!13915 = !DILocation(line: 729, column: 9, scope: !13883)
!13916 = distinct !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow17h8ee2162642395984E", scope: !190, file: !13553, line: 740, type: !13917, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !13920, retainedNodes: !13921)
!13917 = !DISubroutineType(types: !13918)
!13918 = !{!1924, !13919, !9, !39}
!13919 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::raw_vec::RawVecInner<alloc::alloc::Global>", baseType: !190, size: 32, align: 32, dwarfAddressSpace: 0)
!13920 = !DISubprogram(name: "finish_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow17h8ee2162642395984E", scope: !190, file: !13553, line: 740, type: !13917, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!13921 = !{!13922, !13923, !13924, !13925, !13927, !13929, !13931, !13933, !13935, !13936, !13939, !13940}
!13922 = !DILocalVariable(name: "self", arg: 1, scope: !13916, file: !13553, line: 741, type: !13919)
!13923 = !DILocalVariable(name: "cap", arg: 2, scope: !13916, file: !13553, line: 742, type: !9)
!13924 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !13916, file: !13553, line: 743, type: !39)
!13925 = !DILocalVariable(name: "new_layout", scope: !13926, file: !13553, line: 745, type: !39, align: 32)
!13926 = distinct !DILexicalBlock(scope: !13916, file: !13553, line: 745, column: 9)
!13927 = !DILocalVariable(name: "residual", scope: !13928, file: !13553, line: 745, type: !1887, align: 32)
!13928 = distinct !DILexicalBlock(scope: !13916, file: !13553, line: 745, column: 56)
!13929 = !DILocalVariable(name: "val", scope: !13930, file: !13553, line: 745, type: !39, align: 32)
!13930 = distinct !DILexicalBlock(scope: !13916, file: !13553, line: 745, column: 26)
!13931 = !DILocalVariable(name: "memory", scope: !13932, file: !13553, line: 747, type: !1959, align: 32)
!13932 = distinct !DILexicalBlock(scope: !13926, file: !13553, line: 747, column: 9)
!13933 = !DILocalVariable(name: "ptr", scope: !13934, file: !13553, line: 747, type: !197, align: 32)
!13934 = distinct !DILexicalBlock(scope: !13926, file: !13553, line: 747, column: 99)
!13935 = !DILocalVariable(name: "old_layout", scope: !13934, file: !13553, line: 747, type: !39, align: 32)
!13936 = !DILocalVariable(name: "left_val", scope: !13937, file: !13553, line: 748, type: !93, align: 32)
!13937 = !DILexicalBlockFile(scope: !13938, file: !13553, discriminator: 0)
!13938 = distinct !DILexicalBlock(scope: !13934, file: !2304, line: 45, column: 13)
!13939 = !DILocalVariable(name: "right_val", scope: !13937, file: !13553, line: 748, type: !93, align: 32)
!13940 = !DILocalVariable(name: "kind", scope: !13941, file: !13553, line: 748, type: !280, align: 8)
!13941 = !DILexicalBlockFile(scope: !13942, file: !13553, discriminator: 0)
!13942 = distinct !DILexicalBlock(scope: !13938, file: !2304, line: 47, column: 21)
!13943 = !DILocation(line: 741, column: 9, scope: !13916)
!13944 = !DILocation(line: 742, column: 9, scope: !13916)
!13945 = !DILocation(line: 743, column: 9, scope: !13916)
!13946 = !DILocation(line: 745, column: 13, scope: !13926)
!13947 = !DILocation(line: 747, column: 13, scope: !13932)
!13948 = !DILocation(line: 747, column: 40, scope: !13934)
!13949 = !DILocation(line: 745, column: 26, scope: !13916)
!13950 = !DILocation(line: 745, column: 56, scope: !13916)
!13951 = !DILocation(line: 745, column: 56, scope: !13928)
!13952 = !DILocation(line: 745, column: 26, scope: !13928)
!13953 = !DILocation(line: 745, column: 26, scope: !13930)
!13954 = !DILocation(line: 747, column: 69, scope: !13934)
!13955 = !DILocation(line: 747, column: 55, scope: !13934)
!13956 = !DILocation(line: 747, column: 29, scope: !13934)
!13957 = !DILocation(line: 747, column: 35, scope: !13934)
!13958 = !DILocation(line: 748, column: 41, scope: !13934)
!13959 = !DILocation(line: 748, column: 61, scope: !13934)
!13960 = !DILocation(line: 748, column: 13, scope: !13934)
!13961 = !DILocation(line: 748, column: 13, scope: !13937)
!13962 = !DILocation(line: 755, column: 13, scope: !13926)
!13963 = !DILocation(line: 755, column: 24, scope: !13926)
!13964 = !DILocation(line: 748, column: 13, scope: !13941)
!13965 = !DILocation(line: 751, column: 51, scope: !13934)
!13966 = !DILocation(line: 751, column: 73, scope: !13934)
!13967 = !DILocation(line: 751, column: 40, scope: !13934)
!13968 = !DILocation(line: 201, column: 38, scope: !11082, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 751, column: 17, scope: !13934)
!13970 = !DILocation(line: 77, column: 35, scope: !11087, inlinedAt: !13969)
!13971 = !DILocation(line: 78, column: 17, scope: !11087, inlinedAt: !13969)
!13972 = !DILocation(line: 752, column: 17, scope: !13934)
!13973 = !DILocation(line: 752, column: 28, scope: !13934)
!13974 = !DILocation(line: 758, column: 9, scope: !13932)
!13975 = !DILocation(line: 758, column: 16, scope: !13932)
!13976 = !DILocation(line: 759, column: 6, scope: !13916)
!13977 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17hc5279fb8e4bfc125E", scope: !8762, file: !13553, line: 758, type: !13978, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, retainedNodes: !13980)
!13978 = !DISubroutineType(types: !13979)
!13979 = !{!1583, !8761, !1969}
!13980 = !{!13981, !13982}
!13981 = !DILocalVariable(name: "new_layout", scope: !13977, file: !13553, line: 745, type: !39, align: 32)
!13982 = !DILocalVariable(arg: 2, scope: !13977, file: !13553, line: 758, type: !1969)
!13983 = !DILocation(line: 745, column: 13, scope: !13977)
!13984 = !DILocation(line: 758, column: 25, scope: !13977)
!13985 = !DILocation(line: 758, column: 49, scope: !13977)
!13986 = !DILocation(line: 758, column: 82, scope: !13977)
!13987 = !DILocation(line: 758, column: 88, scope: !13977)
!13988 = distinct !DISubprogram(name: "try_reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17h4bc472920c286ff0E", scope: !190, file: !13553, line: 586, type: !13868, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !13989, retainedNodes: !13990)
!13989 = !DISubprogram(name: "try_reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$11try_reserve17h4bc472920c286ff0E", scope: !190, file: !13553, line: 586, type: !13868, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!13990 = !{!13991, !13992, !13993, !13994, !13995, !13997}
!13991 = !DILocalVariable(name: "self", arg: 1, scope: !13988, file: !13553, line: 587, type: !13848)
!13992 = !DILocalVariable(name: "len", arg: 2, scope: !13988, file: !13553, line: 588, type: !9)
!13993 = !DILocalVariable(name: "additional", arg: 3, scope: !13988, file: !13553, line: 589, type: !9)
!13994 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !13988, file: !13553, line: 590, type: !39)
!13995 = !DILocalVariable(name: "residual", scope: !13996, file: !13553, line: 595, type: !1887, align: 32)
!13996 = distinct !DILexicalBlock(scope: !13988, file: !13553, line: 595, column: 66)
!13997 = !DILocalVariable(name: "val", scope: !13998, file: !13553, line: 595, type: !7, align: 8)
!13998 = distinct !DILexicalBlock(scope: !13988, file: !13553, line: 595, column: 17)
!13999 = !DILocation(line: 587, column: 9, scope: !13988)
!14000 = !DILocation(line: 588, column: 9, scope: !13988)
!14001 = !DILocation(line: 589, column: 9, scope: !13988)
!14002 = !DILocation(line: 590, column: 9, scope: !13988)
!14003 = !DILocation(line: 595, column: 17, scope: !13998)
!14004 = !DILocation(line: 592, column: 17, scope: !13988)
!14005 = !DILocation(line: 592, column: 12, scope: !13988)
!14006 = !DILocation(line: 600, column: 42, scope: !13988)
!14007 = !DILocation(line: 600, column: 36, scope: !13988)
!14008 = !DILocation(line: 201, column: 38, scope: !11082, inlinedAt: !14009)
!14009 = distinct !DILocation(line: 600, column: 13, scope: !13988)
!14010 = !DILocation(line: 77, column: 35, scope: !11087, inlinedAt: !14009)
!14011 = !DILocation(line: 78, column: 17, scope: !11087, inlinedAt: !14009)
!14012 = !DILocation(line: 602, column: 9, scope: !13988)
!14013 = !DILocation(line: 603, column: 6, scope: !13988)
!14014 = !DILocation(line: 595, column: 22, scope: !13988)
!14015 = !DILocation(line: 595, column: 17, scope: !13988)
!14016 = !DILocation(line: 595, column: 66, scope: !13988)
!14017 = !DILocation(line: 595, column: 66, scope: !13996)
!14018 = !DILocation(line: 595, column: 17, scope: !13996)
!14019 = distinct !DISubprogram(name: "needs_to_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E", scope: !190, file: !13553, line: 654, type: !14020, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14022, retainedNodes: !14023)
!14020 = !DISubroutineType(types: !14021)
!14021 = !{!643, !13919, !9, !9, !39}
!14022 = !DISubprogram(name: "needs_to_grow<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13needs_to_grow17h0ebf3e1a2f8f3253E", scope: !190, file: !13553, line: 654, type: !14020, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14023 = !{!14024, !14025, !14026, !14027}
!14024 = !DILocalVariable(name: "self", arg: 1, scope: !14019, file: !13553, line: 654, type: !13919)
!14025 = !DILocalVariable(name: "len", arg: 2, scope: !14019, file: !13553, line: 654, type: !9)
!14026 = !DILocalVariable(name: "additional", arg: 3, scope: !14019, file: !13553, line: 654, type: !9)
!14027 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !14019, file: !13553, line: 654, type: !39)
!14028 = !DILocation(line: 654, column: 22, scope: !14019)
!14029 = !DILocation(line: 654, column: 29, scope: !14019)
!14030 = !DILocation(line: 654, column: 41, scope: !14019)
!14031 = !DILocation(line: 654, column: 60, scope: !14019)
!14032 = !DILocation(line: 655, column: 48, scope: !14019)
!14033 = !DILocation(line: 655, column: 27, scope: !14019)
!14034 = !DILocalVariable(name: "self", arg: 1, scope: !14035, file: !2832, line: 2339, type: !9)
!14035 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17h20fcdaf2fcd71d09E", scope: !2880, file: !2832, line: 2339, type: !3039, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14036)
!14036 = !{!14034, !14037}
!14037 = !DILocalVariable(name: "rhs", arg: 2, scope: !14035, file: !2832, line: 2339, type: !9)
!14038 = !DILocation(line: 2339, column: 35, scope: !14035, inlinedAt: !14039)
!14039 = distinct !DILocation(line: 655, column: 56, scope: !14019)
!14040 = !DILocation(line: 2339, column: 41, scope: !14035, inlinedAt: !14039)
!14041 = !DILocation(line: 2340, column: 13, scope: !14035, inlinedAt: !14039)
!14042 = !DILocation(line: 655, column: 9, scope: !14019)
!14043 = !DILocation(line: 656, column: 6, scope: !14019)
!14044 = distinct !DISubprogram(name: "reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h26c2a716a323ec06E", scope: !190, file: !13553, line: 610, type: !14045, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14047, retainedNodes: !14048)
!14045 = !DISubroutineType(types: !14046)
!14046 = !{null, !13848, !9, !9, !39}
!14047 = !DISubprogram(name: "reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13reserve_exact17h26c2a716a323ec06E", scope: !190, file: !13553, line: 610, type: !14045, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14048 = !{!14049, !14050, !14051, !14052, !14053}
!14049 = !DILocalVariable(name: "self", arg: 1, scope: !14044, file: !13553, line: 610, type: !13848)
!14050 = !DILocalVariable(name: "len", arg: 2, scope: !14044, file: !13553, line: 610, type: !9)
!14051 = !DILocalVariable(name: "additional", arg: 3, scope: !14044, file: !13553, line: 610, type: !9)
!14052 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !14044, file: !13553, line: 610, type: !39)
!14053 = !DILocalVariable(name: "err", scope: !14054, file: !13553, line: 612, type: !1583, align: 32)
!14054 = distinct !DILexicalBlock(scope: !14044, file: !13553, line: 612, column: 91)
!14055 = !DILocation(line: 610, column: 29, scope: !14044)
!14056 = !DILocation(line: 610, column: 40, scope: !14044)
!14057 = !DILocation(line: 610, column: 52, scope: !14044)
!14058 = !DILocation(line: 610, column: 71, scope: !14044)
!14059 = !DILocation(line: 612, column: 41, scope: !14054)
!14060 = !DILocation(line: 612, column: 27, scope: !14054)
!14061 = !DILocation(line: 612, column: 16, scope: !14054)
!14062 = !DILocation(line: 612, column: 20, scope: !14054)
!14063 = !DILocation(line: 613, column: 13, scope: !14054)
!14064 = !DILocation(line: 615, column: 6, scope: !14044)
!14065 = !DILocation(line: 610, column: 5, scope: !14044)
!14066 = distinct !DISubprogram(name: "shrink_to_fit<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h7a10afca0f5a9322E", scope: !190, file: !13553, line: 647, type: !14067, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14069, retainedNodes: !14070)
!14067 = !DISubroutineType(types: !14068)
!14068 = !{null, !13848, !9, !39}
!14069 = !DISubprogram(name: "shrink_to_fit<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$13shrink_to_fit17h7a10afca0f5a9322E", scope: !190, file: !13553, line: 647, type: !14067, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14070 = !{!14071, !14072, !14073, !14074}
!14071 = !DILocalVariable(name: "self", arg: 1, scope: !14066, file: !13553, line: 647, type: !13848)
!14072 = !DILocalVariable(name: "cap", arg: 2, scope: !14066, file: !13553, line: 647, type: !9)
!14073 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !14066, file: !13553, line: 647, type: !39)
!14074 = !DILocalVariable(name: "err", scope: !14075, file: !13553, line: 648, type: !1583, align: 32)
!14075 = distinct !DILexicalBlock(scope: !14066, file: !13553, line: 648, column: 68)
!14076 = !DILocation(line: 647, column: 29, scope: !14066)
!14077 = !DILocation(line: 647, column: 40, scope: !14066)
!14078 = !DILocation(line: 647, column: 52, scope: !14066)
!14079 = !DILocation(line: 648, column: 41, scope: !14075)
!14080 = !DILocation(line: 648, column: 27, scope: !14075)
!14081 = !DILocation(line: 648, column: 16, scope: !14075)
!14082 = !DILocation(line: 648, column: 20, scope: !14075)
!14083 = !DILocation(line: 649, column: 13, scope: !14075)
!14084 = !DILocation(line: 651, column: 6, scope: !14066)
!14085 = !DILocation(line: 647, column: 5, scope: !14066)
!14086 = distinct !DISubprogram(name: "current_memory<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h770c0f671b856ae0E", scope: !190, file: !13553, line: 522, type: !14087, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14106, retainedNodes: !14107)
!14087 = !DISubroutineType(types: !14088)
!14088 = !{!14089, !13919, !39}
!14089 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", scope: !14, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14090, templateParams: !21, identifier: "ca1bdb1b6cdb614ad03e8085c7938cf1")
!14090 = !{!14091}
!14091 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14089, file: !2, size: 96, align: 32, elements: !14092, templateParams: !21, identifier: "b1a73eb23395c12f9acb80099add5045", discriminator: !14105)
!14092 = !{!14093, !14101}
!14093 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !14091, file: !2, baseType: !14094, size: 96, align: 32, extraData: i32 0)
!14094 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !14089, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !14095, identifier: "8bf53a45ff2976ededa810cd18dec2da")
!14095 = !{!14096}
!14096 = !DITemplateTypeParameter(name: "T", type: !14097)
!14097 = !DICompositeType(tag: DW_TAG_structure_type, name: "(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)", file: !2, size: 96, align: 32, elements: !14098, templateParams: !21, identifier: "cf6ede1697088c6a595a0170556001d2")
!14098 = !{!14099, !14100}
!14099 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14097, file: !2, baseType: !197, size: 32, align: 32)
!14100 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !14097, file: !2, baseType: !39, size: 64, align: 32, offset: 32)
!14101 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !14091, file: !2, baseType: !14102, size: 96, align: 32)
!14102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !14089, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14103, templateParams: !14095, identifier: "c732f455f1408a7fcb7f0be44eddabc5")
!14103 = !{!14104}
!14104 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14102, file: !2, baseType: !14097, size: 96, align: 32, flags: DIFlagPublic)
!14105 = !DIDerivedType(tag: DW_TAG_member, scope: !14089, file: !2, baseType: !51, size: 32, align: 32, offset: 32, flags: DIFlagArtificial)
!14106 = !DISubprogram(name: "current_memory<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14current_memory17h770c0f671b856ae0E", scope: !190, file: !13553, line: 522, type: !14087, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14107 = !{!14108, !14109, !14110, !14112}
!14108 = !DILocalVariable(name: "self", arg: 1, scope: !14086, file: !13553, line: 522, type: !13919)
!14109 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !14086, file: !13553, line: 522, type: !39)
!14110 = !DILocalVariable(name: "alloc_size", scope: !14111, file: !13553, line: 531, type: !9, align: 32)
!14111 = distinct !DILexicalBlock(scope: !14086, file: !13553, line: 531, column: 17)
!14112 = !DILocalVariable(name: "layout", scope: !14113, file: !13553, line: 532, type: !39, align: 32)
!14113 = distinct !DILexicalBlock(scope: !14111, file: !13553, line: 532, column: 17)
!14114 = !DILocation(line: 522, column: 30, scope: !14086)
!14115 = !DILocation(line: 522, column: 37, scope: !14086)
!14116 = !DILocation(line: 523, column: 24, scope: !14086)
!14117 = !DILocation(line: 523, column: 12, scope: !14086)
!14118 = !DILocation(line: 524, column: 13, scope: !14086)
!14119 = !DILocation(line: 523, column: 9, scope: !14086)
!14120 = !DILocation(line: 523, column: 39, scope: !14086)
!14121 = !DILocation(line: 523, column: 48, scope: !14086)
!14122 = !DILocation(line: 531, column: 46, scope: !14086)
!14123 = !DILocation(line: 531, column: 67, scope: !14086)
!14124 = !DILocation(line: 531, column: 76, scope: !14086)
!14125 = !DILocalVariable(name: "self", arg: 1, scope: !14126, file: !2832, line: 1093, type: !9)
!14126 = distinct !DISubprogram(name: "unchecked_mul", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_mul17hcc53a5f114d99f2cE", scope: !2880, file: !2832, line: 1093, type: !3060, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14127)
!14127 = !{!14125, !14128}
!14128 = !DILocalVariable(name: "rhs", arg: 2, scope: !14126, file: !2832, line: 1093, type: !9)
!14129 = !DILocation(line: 1093, column: 43, scope: !14126, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 531, column: 53, scope: !14086)
!14131 = !DILocation(line: 1093, column: 49, scope: !14126, inlinedAt: !14130)
!14132 = !DILocation(line: 77, column: 35, scope: !14133, inlinedAt: !14130)
!14133 = !DILexicalBlockFile(scope: !14126, file: !473, discriminator: 0)
!14134 = !DILocation(line: 78, column: 17, scope: !14133, inlinedAt: !14130)
!14135 = !DILocation(line: 1105, column: 17, scope: !14126, inlinedAt: !14130)
!14136 = !DILocation(line: 531, column: 53, scope: !14086)
!14137 = !DILocation(line: 531, column: 21, scope: !14111)
!14138 = !DILocation(line: 532, column: 88, scope: !14111)
!14139 = !DILocation(line: 532, column: 30, scope: !14111)
!14140 = !DILocation(line: 532, column: 21, scope: !14113)
!14141 = !DILocation(line: 533, column: 23, scope: !14113)
!14142 = !DILocation(line: 533, column: 32, scope: !14113)
!14143 = !DILocation(line: 533, column: 22, scope: !14113)
!14144 = !DILocation(line: 533, column: 17, scope: !14113)
!14145 = !DILocation(line: 536, column: 6, scope: !14086)
!14146 = distinct !DISubprogram(name: "grow_amortized<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17h07c1051aad931779E", scope: !190, file: !13553, line: 672, type: !13868, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14147, retainedNodes: !14148)
!14147 = !DISubprogram(name: "grow_amortized<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$14grow_amortized17h07c1051aad931779E", scope: !190, file: !13553, line: 672, type: !13868, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14148 = !{!14149, !14150, !14151, !14152, !14153, !14155, !14157, !14159, !14161, !14163, !14165, !14167}
!14149 = !DILocalVariable(name: "self", arg: 1, scope: !14146, file: !13553, line: 673, type: !13848)
!14150 = !DILocalVariable(name: "len", arg: 2, scope: !14146, file: !13553, line: 674, type: !9)
!14151 = !DILocalVariable(name: "additional", arg: 3, scope: !14146, file: !13553, line: 675, type: !9)
!14152 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !14146, file: !13553, line: 676, type: !39)
!14153 = !DILocalVariable(name: "required_cap", scope: !14154, file: !13553, line: 688, type: !9, align: 32)
!14154 = distinct !DILexicalBlock(scope: !14146, file: !13553, line: 688, column: 9)
!14155 = !DILocalVariable(name: "residual", scope: !14156, file: !13553, line: 688, type: !2009, align: 32)
!14156 = distinct !DILexicalBlock(scope: !14146, file: !13553, line: 688, column: 79)
!14157 = !DILocalVariable(name: "val", scope: !14158, file: !13553, line: 688, type: !9, align: 32)
!14158 = distinct !DILexicalBlock(scope: !14146, file: !13553, line: 688, column: 28)
!14159 = !DILocalVariable(name: "cap", scope: !14160, file: !13553, line: 692, type: !9, align: 32)
!14160 = distinct !DILexicalBlock(scope: !14154, file: !13553, line: 692, column: 9)
!14161 = !DILocalVariable(name: "cap", scope: !14162, file: !13553, line: 693, type: !9, align: 32)
!14162 = distinct !DILexicalBlock(scope: !14160, file: !13553, line: 693, column: 9)
!14163 = !DILocalVariable(name: "ptr", scope: !14164, file: !13553, line: 698, type: !1932, align: 32)
!14164 = distinct !DILexicalBlock(scope: !14162, file: !13553, line: 698, column: 9)
!14165 = !DILocalVariable(name: "residual", scope: !14166, file: !13553, line: 698, type: !1887, align: 32)
!14166 = distinct !DILexicalBlock(scope: !14162, file: !13553, line: 698, column: 62)
!14167 = !DILocalVariable(name: "val", scope: !14168, file: !13553, line: 698, type: !1932, align: 32)
!14168 = distinct !DILexicalBlock(scope: !14162, file: !13553, line: 698, column: 28)
!14169 = !DILocation(line: 673, column: 9, scope: !14146)
!14170 = !DILocation(line: 674, column: 9, scope: !14146)
!14171 = !DILocation(line: 675, column: 9, scope: !14146)
!14172 = !DILocation(line: 676, column: 9, scope: !14146)
!14173 = !DILocation(line: 679, column: 23, scope: !14146)
!14174 = !DILocation(line: 679, column: 9, scope: !14146)
!14175 = !DILocation(line: 681, column: 24, scope: !14146)
!14176 = !DILocation(line: 681, column: 12, scope: !14146)
!14177 = !DILocation(line: 684, column: 41, scope: !14146)
!14178 = !DILocation(line: 684, column: 20, scope: !14146)
!14179 = !DILocation(line: 0, scope: !14180)
!14180 = !DILexicalBlockFile(scope: !14146, file: !4885, discriminator: 0)
!14181 = !DILocation(line: 688, column: 32, scope: !14146)
!14182 = !DILocation(line: 688, column: 56, scope: !14146)
!14183 = !DILocation(line: 688, column: 28, scope: !14146)
!14184 = !DILocation(line: 703, column: 6, scope: !14146)
!14185 = !DILocation(line: 688, column: 79, scope: !14146)
!14186 = !DILocation(line: 688, column: 79, scope: !14156)
!14187 = !DILocation(line: 688, column: 28, scope: !14156)
!14188 = !DILocation(line: 688, column: 13, scope: !14154)
!14189 = !DILocation(line: 688, column: 28, scope: !14158)
!14190 = !DILocation(line: 692, column: 28, scope: !14154)
!14191 = !DILocation(line: 692, column: 37, scope: !14154)
!14192 = !DILocation(line: 692, column: 19, scope: !14154)
!14193 = !DILocation(line: 692, column: 13, scope: !14160)
!14194 = !DILocation(line: 693, column: 57, scope: !14160)
!14195 = !DILocation(line: 693, column: 28, scope: !14160)
!14196 = !DILocation(line: 693, column: 19, scope: !14160)
!14197 = !DILocation(line: 693, column: 13, scope: !14162)
!14198 = !DILocation(line: 698, column: 28, scope: !14162)
!14199 = !DILocation(line: 698, column: 33, scope: !14162)
!14200 = !DILocation(line: 698, column: 62, scope: !14162)
!14201 = !DILocation(line: 698, column: 62, scope: !14166)
!14202 = !DILocation(line: 698, column: 28, scope: !14166)
!14203 = !DILocation(line: 698, column: 13, scope: !14164)
!14204 = !DILocation(line: 698, column: 28, scope: !14168)
!14205 = !DILocation(line: 701, column: 23, scope: !14164)
!14206 = !DILocation(line: 702, column: 9, scope: !14164)
!14207 = distinct !DISubprogram(name: "set_ptr_and_cap<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h180ec53471d88e62E", scope: !190, file: !13553, line: 659, type: !14208, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14210, retainedNodes: !14211)
!14208 = !DISubroutineType(types: !14209)
!14209 = !{null, !13848, !1932, !9}
!14210 = !DISubprogram(name: "set_ptr_and_cap<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15set_ptr_and_cap17h180ec53471d88e62E", scope: !190, file: !13553, line: 659, type: !14208, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14211 = !{!14212, !14213, !14214}
!14212 = !DILocalVariable(name: "self", arg: 1, scope: !14207, file: !13553, line: 659, type: !13848)
!14213 = !DILocalVariable(name: "ptr", arg: 2, scope: !14207, file: !13553, line: 659, type: !1932)
!14214 = !DILocalVariable(name: "cap", arg: 3, scope: !14207, file: !13553, line: 659, type: !9)
!14215 = !DILocation(line: 659, column: 31, scope: !14207)
!14216 = !DILocation(line: 659, column: 42, scope: !14207)
!14217 = !DILocation(line: 659, column: 62, scope: !14207)
!14218 = !DILocation(line: 663, column: 37, scope: !14207)
!14219 = !DILocation(line: 663, column: 20, scope: !14207)
!14220 = !DILocation(line: 663, column: 9, scope: !14207)
!14221 = !DILocation(line: 664, column: 29, scope: !14207)
!14222 = !DILocation(line: 664, column: 9, scope: !14207)
!14223 = !DILocation(line: 665, column: 6, scope: !14207)
!14224 = distinct !DISubprogram(name: "try_allocate_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h2d94f36e833a0501E", scope: !190, file: !13553, line: 449, type: !14225, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14242, retainedNodes: !14243)
!14225 = !DISubroutineType(types: !14226)
!14226 = !{!14227, !9, !286, !212, !39}
!14227 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::raw_vec::RawVecInner<alloc::alloc::Global>, alloc::collections::TryReserveError>", scope: !335, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14228, templateParams: !21, identifier: "afabec0f8d3634fc79ee15c4b226d95c")
!14228 = !{!14229}
!14229 = !DICompositeType(tag: DW_TAG_variant_part, scope: !14227, file: !2, size: 96, align: 32, elements: !14230, templateParams: !21, identifier: "d7dc0ded0087f381a152de0f8fcd3ac1", discriminator: !14241)
!14230 = !{!14231, !14237}
!14231 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !14229, file: !2, baseType: !14232, size: 96, align: 32, extraData: i32 0)
!14232 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !14227, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14233, templateParams: !14235, identifier: "88636a35d3f76b5ba92245413bd78fa")
!14233 = !{!14234}
!14234 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14232, file: !2, baseType: !190, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!14235 = !{!14236, !1881}
!14236 = !DITemplateTypeParameter(name: "T", type: !190)
!14237 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !14229, file: !2, baseType: !14238, size: 96, align: 32, extraData: i32 1)
!14238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !14227, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14239, templateParams: !14235, identifier: "abb912fb31b11386c010bb6a4ab61e2d")
!14239 = !{!14240}
!14240 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14238, file: !2, baseType: !1583, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!14241 = !DIDerivedType(tag: DW_TAG_member, scope: !14227, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!14242 = !DISubprogram(name: "try_allocate_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$15try_allocate_in17h2d94f36e833a0501E", scope: !190, file: !13553, line: 449, type: !14225, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14243 = !{!14244, !14245, !14246, !14247, !14248, !14250, !14252, !14254, !14256}
!14244 = !DILocalVariable(name: "capacity", arg: 1, scope: !14224, file: !13553, line: 450, type: !9)
!14245 = !DILocalVariable(name: "init", arg: 2, scope: !14224, file: !13553, line: 451, type: !286)
!14246 = !DILocalVariable(name: "alloc", arg: 3, scope: !14224, file: !13553, line: 452, type: !212)
!14247 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !14224, file: !13553, line: 453, type: !39)
!14248 = !DILocalVariable(name: "layout", scope: !14249, file: !13553, line: 457, type: !39, align: 32)
!14249 = distinct !DILexicalBlock(scope: !14224, file: !13553, line: 457, column: 9)
!14250 = !DILocalVariable(name: "layout", scope: !14251, file: !13553, line: 458, type: !39, align: 32)
!14251 = distinct !DILexicalBlock(scope: !14224, file: !13553, line: 458, column: 13)
!14252 = !DILocalVariable(name: "result", scope: !14253, file: !13553, line: 467, type: !1959, align: 32)
!14253 = distinct !DILexicalBlock(scope: !14249, file: !13553, line: 467, column: 9)
!14254 = !DILocalVariable(name: "ptr", scope: !14255, file: !13553, line: 472, type: !1932, align: 32)
!14255 = distinct !DILexicalBlock(scope: !14253, file: !13553, line: 472, column: 9)
!14256 = !DILocalVariable(name: "ptr", scope: !14257, file: !13553, line: 473, type: !1932, align: 32)
!14257 = distinct !DILexicalBlock(scope: !14253, file: !13553, line: 473, column: 13)
!14258 = !DILocation(line: 450, column: 9, scope: !14224)
!14259 = !DILocation(line: 451, column: 9, scope: !14224)
!14260 = !DILocation(line: 452, column: 9, scope: !14224)
!14261 = !DILocation(line: 453, column: 9, scope: !14224)
!14262 = !DILocation(line: 457, column: 13, scope: !14249)
!14263 = !DILocation(line: 467, column: 13, scope: !14253)
!14264 = !DILocation(line: 457, column: 13, scope: !14224)
!14265 = !DILocation(line: 457, column: 28, scope: !14224)
!14266 = !DILocation(line: 457, column: 22, scope: !14224)
!14267 = !DILocation(line: 459, column: 51, scope: !14224)
!14268 = !DILocation(line: 459, column: 30, scope: !14224)
!14269 = !DILocation(line: 0, scope: !14270)
!14270 = !DILexicalBlockFile(scope: !14224, file: !4885, discriminator: 0)
!14271 = !DILocation(line: 458, column: 16, scope: !14224)
!14272 = !DILocation(line: 458, column: 16, scope: !14251)
!14273 = !DILocation(line: 458, column: 27, scope: !14251)
!14274 = !DILocation(line: 463, column: 19, scope: !14249)
!14275 = !DILocation(line: 463, column: 12, scope: !14249)
!14276 = !DILocation(line: 464, column: 36, scope: !14249)
!14277 = !DILocation(line: 464, column: 55, scope: !14249)
!14278 = !DILocation(line: 464, column: 23, scope: !14249)
!14279 = !DILocation(line: 464, column: 20, scope: !14249)
!14280 = !DILocation(line: 0, scope: !14281)
!14281 = !DILexicalBlockFile(scope: !14249, file: !4885, discriminator: 0)
!14282 = !DILocation(line: 467, column: 28, scope: !14249)
!14283 = !DILocation(line: 467, column: 22, scope: !14249)
!14284 = !DILocation(line: 485, column: 5, scope: !14224)
!14285 = !DILocation(line: 470, column: 34, scope: !14249)
!14286 = !DILocation(line: 470, column: 40, scope: !14249)
!14287 = !DILocation(line: 468, column: 41, scope: !14249)
!14288 = !DILocation(line: 468, column: 47, scope: !14249)
!14289 = !DILocation(line: 472, column: 25, scope: !14253)
!14290 = !DILocation(line: 472, column: 19, scope: !14253)
!14291 = !DILocation(line: 474, column: 34, scope: !14253)
!14292 = !DILocation(line: 474, column: 76, scope: !14253)
!14293 = !DILocation(line: 474, column: 30, scope: !14253)
!14294 = !DILocation(line: 473, column: 16, scope: !14253)
!14295 = !DILocation(line: 472, column: 13, scope: !14255)
!14296 = !DILocation(line: 473, column: 16, scope: !14257)
!14297 = !DILocation(line: 481, column: 35, scope: !14255)
!14298 = !DILocation(line: 481, column: 18, scope: !14255)
!14299 = !DILocation(line: 482, column: 27, scope: !14255)
!14300 = !DILocation(line: 483, column: 13, scope: !14255)
!14301 = !DILocation(line: 480, column: 9, scope: !14255)
!14302 = !DILocation(line: 485, column: 6, scope: !14224)
!14303 = distinct !DISubprogram(name: "shrink_unchecked<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17hbecc9e62544ed3edE", scope: !190, file: !13553, line: 785, type: !14304, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14306, retainedNodes: !14307)
!14304 = !DISubroutineType(types: !14305)
!14305 = !{!1872, !13848, !9, !39}
!14306 = !DISubprogram(name: "shrink_unchecked<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked17hbecc9e62544ed3edE", scope: !190, file: !13553, line: 785, type: !14304, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14307 = !{!14308, !14309, !14310, !14311, !14313, !14314, !14316, !14318, !14320, !14322, !14324}
!14308 = !DILocalVariable(name: "self", arg: 1, scope: !14303, file: !13553, line: 786, type: !13848)
!14309 = !DILocalVariable(name: "cap", arg: 2, scope: !14303, file: !13553, line: 787, type: !9)
!14310 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !14303, file: !13553, line: 788, type: !39)
!14311 = !DILocalVariable(name: "ptr", scope: !14312, file: !13553, line: 791, type: !197, align: 32)
!14312 = distinct !DILexicalBlock(scope: !14303, file: !13553, line: 791, column: 9)
!14313 = !DILocalVariable(name: "layout", scope: !14312, file: !13553, line: 791, type: !39, align: 32)
!14314 = !DILocalVariable(name: "mem", scope: !14315, file: !13553, line: 791, type: !14097, align: 32)
!14315 = distinct !DILexicalBlock(scope: !14303, file: !13553, line: 791, column: 92)
!14316 = !DILocalVariable(name: "ptr", scope: !14317, file: !13553, line: 806, type: !1932, align: 32)
!14317 = distinct !DILexicalBlock(scope: !14312, file: !13553, line: 806, column: 13)
!14318 = !DILocalVariable(name: "new_size", scope: !14319, file: !13553, line: 809, type: !9, align: 32)
!14319 = distinct !DILexicalBlock(scope: !14312, file: !13553, line: 809, column: 17)
!14320 = !DILocalVariable(name: "new_layout", scope: !14321, file: !13553, line: 810, type: !39, align: 32)
!14321 = distinct !DILexicalBlock(scope: !14319, file: !13553, line: 810, column: 17)
!14322 = !DILocalVariable(name: "residual", scope: !14323, file: !13553, line: 813, type: !2009, align: 32)
!14323 = distinct !DILexicalBlock(scope: !14321, file: !13553, line: 813, column: 88)
!14324 = !DILocalVariable(name: "val", scope: !14325, file: !13553, line: 811, type: !1932, align: 32)
!14325 = distinct !DILexicalBlock(scope: !14321, file: !13553, line: 811, column: 17)
!14326 = !DILocation(line: 786, column: 9, scope: !14303)
!14327 = !DILocation(line: 787, column: 9, scope: !14303)
!14328 = !DILocation(line: 788, column: 9, scope: !14303)
!14329 = !DILocation(line: 791, column: 19, scope: !14312)
!14330 = !DILocation(line: 791, column: 41, scope: !14315)
!14331 = !DILocation(line: 810, column: 21, scope: !14321)
!14332 = !DILocation(line: 791, column: 57, scope: !14315)
!14333 = !DILocation(line: 791, column: 62, scope: !14315)
!14334 = !DILocation(line: 791, column: 48, scope: !14315)
!14335 = !DILocation(line: 791, column: 36, scope: !14315)
!14336 = !DILocation(line: 791, column: 14, scope: !14303)
!14337 = !DILocation(line: 791, column: 14, scope: !14312)
!14338 = !DILocation(line: 791, column: 19, scope: !14303)
!14339 = !DILocation(line: 800, column: 12, scope: !14312)
!14340 = !DILocation(line: 794, column: 20, scope: !14303)
!14341 = !DILocation(line: 0, scope: !14342)
!14342 = !DILexicalBlockFile(scope: !14303, file: !4885, discriminator: 0)
!14343 = !DILocation(line: 801, column: 22, scope: !14312)
!14344 = !DILocation(line: 801, column: 33, scope: !14312)
!14345 = !DILocation(line: 803, column: 88, scope: !14312)
!14346 = !DILocation(line: 922, column: 40, scope: !4112, inlinedAt: !14347)
!14347 = distinct !DILocation(line: 803, column: 48, scope: !14312)
!14348 = !DILocation(line: 928, column: 14, scope: !4112, inlinedAt: !14347)
!14349 = !DILocation(line: 803, column: 26, scope: !14312)
!14350 = !DILocation(line: 802, column: 13, scope: !14312)
!14351 = !DILocation(line: 804, column: 13, scope: !14312)
!14352 = !DILocation(line: 800, column: 9, scope: !14312)
!14353 = !DILocation(line: 809, column: 44, scope: !14312)
!14354 = !DILocation(line: 1093, column: 43, scope: !14126, inlinedAt: !14355)
!14355 = distinct !DILocation(line: 809, column: 51, scope: !14312)
!14356 = !DILocation(line: 1093, column: 49, scope: !14126, inlinedAt: !14355)
!14357 = !DILocation(line: 77, column: 35, scope: !14133, inlinedAt: !14355)
!14358 = !DILocation(line: 78, column: 17, scope: !14133, inlinedAt: !14355)
!14359 = !DILocation(line: 1105, column: 17, scope: !14126, inlinedAt: !14355)
!14360 = !DILocation(line: 809, column: 51, scope: !14312)
!14361 = !DILocation(line: 809, column: 21, scope: !14319)
!14362 = !DILocation(line: 810, column: 85, scope: !14319)
!14363 = !DILocation(line: 810, column: 34, scope: !14319)
!14364 = !DILocation(line: 811, column: 17, scope: !14321)
!14365 = !DILocation(line: 812, column: 22, scope: !14321)
!14366 = !DILocation(line: 813, column: 22, scope: !14321)
!14367 = !DILocation(line: 820, column: 9, scope: !14312)
!14368 = !DILocation(line: 821, column: 6, scope: !14303)
!14369 = !DILocation(line: 813, column: 88, scope: !14321)
!14370 = !DILocation(line: 813, column: 88, scope: !14323)
!14371 = !DILocation(line: 811, column: 17, scope: !14323)
!14372 = !DILocation(line: 806, column: 17, scope: !14317)
!14373 = !DILocation(line: 811, column: 17, scope: !14325)
!14374 = !DILocation(line: 817, column: 22, scope: !14317)
!14375 = distinct !DISubprogram(name: "{closure#0}<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16shrink_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17hfb1d4dc77e5d9ed8E", scope: !8572, file: !13553, line: 813, type: !14376, scopeLine: 813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, retainedNodes: !14378)
!14376 = !DISubroutineType(types: !14377)
!14377 = !{!1586, !8571, !1969}
!14378 = !{!14379, !14380}
!14379 = !DILocalVariable(name: "new_layout", scope: !14375, file: !13553, line: 810, type: !39, align: 32)
!14380 = !DILocalVariable(arg: 2, scope: !14375, file: !13553, line: 813, type: !1969)
!14381 = !DILocation(line: 810, column: 21, scope: !14375)
!14382 = !DILocation(line: 813, column: 31, scope: !14375)
!14383 = !DILocation(line: 813, column: 55, scope: !14375)
!14384 = !DILocation(line: 813, column: 87, scope: !14375)
!14385 = distinct !DISubprogram(name: "with_capacity_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17hc583444d3801a3b5E", scope: !190, file: !13553, line: 418, type: !14386, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14388, retainedNodes: !14389)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{!190, !9, !212, !39}
!14388 = !DISubprogram(name: "with_capacity_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$16with_capacity_in17hc583444d3801a3b5E", scope: !190, file: !13553, line: 418, type: !14386, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14389 = !{!14390, !14391, !14392, !14393, !14395}
!14390 = !DILocalVariable(name: "capacity", arg: 1, scope: !14385, file: !13553, line: 418, type: !9)
!14391 = !DILocalVariable(name: "alloc", arg: 2, scope: !14385, file: !13553, line: 418, type: !212)
!14392 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !14385, file: !13553, line: 418, type: !39)
!14393 = !DILocalVariable(name: "this", scope: !14394, file: !13553, line: 420, type: !190, align: 32)
!14394 = distinct !DILexicalBlock(scope: !14385, file: !13553, line: 420, column: 13)
!14395 = !DILocalVariable(name: "err", scope: !14396, file: !13553, line: 427, type: !1583, align: 32)
!14396 = distinct !DILexicalBlock(scope: !14385, file: !13553, line: 427, column: 13)
!14397 = !DILocation(line: 418, column: 25, scope: !14385)
!14398 = !DILocation(line: 418, column: 42, scope: !14385)
!14399 = !DILocation(line: 418, column: 52, scope: !14385)
!14400 = !DILocation(line: 420, column: 16, scope: !14394)
!14401 = !DILocation(line: 419, column: 15, scope: !14385)
!14402 = !DILocation(line: 419, column: 9, scope: !14385)
!14403 = !DILocation(line: 427, column: 17, scope: !14385)
!14404 = !DILocation(line: 427, column: 17, scope: !14396)
!14405 = !DILocation(line: 427, column: 25, scope: !14396)
!14406 = !DILocation(line: 420, column: 16, scope: !14385)
!14407 = !DILocation(line: 423, column: 50, scope: !14394)
!14408 = !DILocation(line: 423, column: 44, scope: !14394)
!14409 = !DILocation(line: 201, column: 38, scope: !11082, inlinedAt: !14410)
!14410 = distinct !DILocation(line: 423, column: 21, scope: !14394)
!14411 = !DILocation(line: 77, column: 35, scope: !11087, inlinedAt: !14410)
!14412 = !DILocation(line: 78, column: 17, scope: !11087, inlinedAt: !14410)
!14413 = !DILocation(line: 425, column: 17, scope: !14394)
!14414 = !DILocation(line: 429, column: 6, scope: !14385)
!14415 = distinct !DISubprogram(name: "from_raw_parts_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17ha6a9c50a7c497da4E", scope: !190, file: !13553, line: 488, type: !14416, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14418, retainedNodes: !14419)
!14416 = !DISubroutineType(types: !14417)
!14417 = !{!190, !463, !206, !212}
!14418 = !DISubprogram(name: "from_raw_parts_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17from_raw_parts_in17ha6a9c50a7c497da4E", scope: !190, file: !13553, line: 488, type: !14416, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14419 = !{!14420, !14421, !14422}
!14420 = !DILocalVariable(name: "ptr", arg: 1, scope: !14415, file: !13553, line: 488, type: !463)
!14421 = !DILocalVariable(name: "cap", arg: 2, scope: !14415, file: !13553, line: 488, type: !206)
!14422 = !DILocalVariable(name: "alloc", arg: 3, scope: !14415, file: !13553, line: 488, type: !212)
!14423 = !DILocation(line: 488, column: 33, scope: !14415)
!14424 = !DILocation(line: 488, column: 47, scope: !14415)
!14425 = !DILocation(line: 488, column: 57, scope: !14415)
!14426 = !DILocation(line: 489, column: 30, scope: !14415)
!14427 = !DILocation(line: 490, column: 6, scope: !14415)
!14428 = distinct !DISubprogram(name: "try_reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17ha3936f53c8c0dd9aE", scope: !190, file: !13553, line: 621, type: !13868, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14429, retainedNodes: !14430)
!14429 = !DISubprogram(name: "try_reserve_exact<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$17try_reserve_exact17ha3936f53c8c0dd9aE", scope: !190, file: !13553, line: 621, type: !13868, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14430 = !{!14431, !14432, !14433, !14434, !14435, !14437}
!14431 = !DILocalVariable(name: "self", arg: 1, scope: !14428, file: !13553, line: 622, type: !13848)
!14432 = !DILocalVariable(name: "len", arg: 2, scope: !14428, file: !13553, line: 623, type: !9)
!14433 = !DILocalVariable(name: "additional", arg: 3, scope: !14428, file: !13553, line: 624, type: !9)
!14434 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !14428, file: !13553, line: 625, type: !39)
!14435 = !DILocalVariable(name: "residual", scope: !14436, file: !13553, line: 630, type: !1887, align: 32)
!14436 = distinct !DILexicalBlock(scope: !14428, file: !13553, line: 630, column: 62)
!14437 = !DILocalVariable(name: "val", scope: !14438, file: !13553, line: 630, type: !7, align: 8)
!14438 = distinct !DILexicalBlock(scope: !14428, file: !13553, line: 630, column: 17)
!14439 = !DILocation(line: 622, column: 9, scope: !14428)
!14440 = !DILocation(line: 623, column: 9, scope: !14428)
!14441 = !DILocation(line: 624, column: 9, scope: !14428)
!14442 = !DILocation(line: 625, column: 9, scope: !14428)
!14443 = !DILocation(line: 630, column: 17, scope: !14438)
!14444 = !DILocation(line: 627, column: 17, scope: !14428)
!14445 = !DILocation(line: 627, column: 12, scope: !14428)
!14446 = !DILocation(line: 635, column: 42, scope: !14428)
!14447 = !DILocation(line: 635, column: 36, scope: !14428)
!14448 = !DILocation(line: 201, column: 38, scope: !11082, inlinedAt: !14449)
!14449 = distinct !DILocation(line: 635, column: 13, scope: !14428)
!14450 = !DILocation(line: 77, column: 35, scope: !11087, inlinedAt: !14449)
!14451 = !DILocation(line: 78, column: 17, scope: !11087, inlinedAt: !14449)
!14452 = !DILocation(line: 637, column: 9, scope: !14428)
!14453 = !DILocation(line: 638, column: 6, scope: !14428)
!14454 = !DILocation(line: 630, column: 22, scope: !14428)
!14455 = !DILocation(line: 630, column: 17, scope: !14428)
!14456 = !DILocation(line: 630, column: 62, scope: !14428)
!14457 = !DILocation(line: 630, column: 62, scope: !14436)
!14458 = !DILocation(line: 630, column: 17, scope: !14436)
!14459 = distinct !DISubprogram(name: "ptr<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17h64753ddab8eed799E", scope: !190, file: !13553, line: 498, type: !14460, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14463, declaration: !14462, retainedNodes: !14464)
!14460 = !DISubroutineType(types: !14461)
!14461 = !{!463, !13919}
!14462 = !DISubprogram(name: "ptr<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$3ptr17h64753ddab8eed799E", scope: !190, file: !13553, line: 498, type: !14460, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14463)
!14463 = !{!215, !23}
!14464 = !{!14465}
!14465 = !DILocalVariable(name: "self", arg: 1, scope: !14459, file: !13553, line: 498, type: !13919)
!14466 = !DILocation(line: 498, column: 21, scope: !14459)
!14467 = !DILocation(line: 499, column: 14, scope: !14459)
!14468 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !14469)
!14469 = distinct !DILocation(line: 499, column: 30, scope: !14459)
!14470 = !DILocation(line: 500, column: 6, scope: !14459)
!14471 = distinct !DISubprogram(name: "new_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h838d10db299945d4E", scope: !190, file: !13553, line: 410, type: !14472, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14474, retainedNodes: !14475)
!14472 = !DISubroutineType(types: !14473)
!14473 = !{!190, !212, !45}
!14474 = !DISubprogram(name: "new_in<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6new_in17h838d10db299945d4E", scope: !190, file: !13553, line: 410, type: !14472, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14475 = !{!14476, !14477, !14478}
!14476 = !DILocalVariable(name: "alloc", arg: 1, scope: !14471, file: !13553, line: 410, type: !212)
!14477 = !DILocalVariable(name: "align", arg: 2, scope: !14471, file: !13553, line: 410, type: !45)
!14478 = !DILocalVariable(name: "ptr", scope: !14479, file: !13553, line: 411, type: !193, align: 32)
!14479 = distinct !DILexicalBlock(scope: !14471, file: !13553, line: 411, column: 9)
!14480 = !DILocation(line: 410, column: 21, scope: !14471)
!14481 = !DILocation(line: 410, column: 31, scope: !14471)
!14482 = !DILocation(line: 411, column: 75, scope: !14471)
!14483 = !DILocation(line: 411, column: 41, scope: !14471)
!14484 = !DILocation(line: 411, column: 19, scope: !14471)
!14485 = !DILocation(line: 411, column: 13, scope: !14479)
!14486 = !DILocation(line: 414, column: 6, scope: !14471)
!14487 = distinct !DISubprogram(name: "shrink<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h82e208a12709dad9E", scope: !190, file: !13553, line: 768, type: !14304, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14488, retainedNodes: !14489)
!14488 = !DISubprogram(name: "shrink<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$6shrink17h82e208a12709dad9E", scope: !190, file: !13553, line: 768, type: !14304, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14489 = !{!14490, !14491, !14492}
!14490 = !DILocalVariable(name: "self", arg: 1, scope: !14487, file: !13553, line: 768, type: !13848)
!14491 = !DILocalVariable(name: "cap", arg: 2, scope: !14487, file: !13553, line: 768, type: !9)
!14492 = !DILocalVariable(name: "elem_layout", arg: 3, scope: !14487, file: !13553, line: 768, type: !39)
!14493 = !DILocation(line: 768, column: 22, scope: !14487)
!14494 = !DILocation(line: 768, column: 33, scope: !14487)
!14495 = !DILocation(line: 768, column: 45, scope: !14487)
!14496 = !DILocation(line: 769, column: 50, scope: !14487)
!14497 = !DILocation(line: 769, column: 29, scope: !14487)
!14498 = !DILocation(line: 769, column: 17, scope: !14487)
!14499 = !DILocation(line: 769, column: 9, scope: !14487)
!14500 = !DILocation(line: 771, column: 18, scope: !14487)
!14501 = !DILocation(line: 771, column: 23, scope: !14487)
!14502 = !DILocation(line: 772, column: 6, scope: !14487)
!14503 = distinct !DISubprogram(name: "reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17h9d399b38c90da136E", scope: !190, file: !13553, line: 544, type: !14045, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14504, retainedNodes: !14505)
!14504 = !DISubprogram(name: "reserve<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve17h9d399b38c90da136E", scope: !190, file: !13553, line: 544, type: !14045, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14505 = !{!14506, !14507, !14508, !14509}
!14506 = !DILocalVariable(name: "self", arg: 1, scope: !14503, file: !13553, line: 544, type: !13848)
!14507 = !DILocalVariable(name: "len", arg: 2, scope: !14503, file: !13553, line: 544, type: !9)
!14508 = !DILocalVariable(name: "additional", arg: 3, scope: !14503, file: !13553, line: 544, type: !9)
!14509 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !14503, file: !13553, line: 544, type: !39)
!14510 = !DILocation(line: 544, column: 23, scope: !14503)
!14511 = !DILocation(line: 544, column: 34, scope: !14503)
!14512 = !DILocation(line: 544, column: 46, scope: !14503)
!14513 = !DILocation(line: 544, column: 65, scope: !14503)
!14514 = !DILocation(line: 562, column: 17, scope: !14503)
!14515 = !DILocation(line: 562, column: 12, scope: !14503)
!14516 = !DILocation(line: 567, column: 6, scope: !14503)
!14517 = !DILocation(line: 564, column: 17, scope: !14503)
!14518 = distinct !DISubprogram(name: "do_reserve_and_handle<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$7reserve21do_reserve_and_handle17h9c1f4b28d8fd7447E", scope: !14519, file: !13553, line: 550, type: !14045, scopeLine: 550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, retainedNodes: !14520)
!14519 = !DINamespace(name: "reserve", scope: !8573)
!14520 = !{!14521, !14522, !14523, !14524, !14525}
!14521 = !DILocalVariable(name: "slf", arg: 1, scope: !14518, file: !13553, line: 551, type: !13848)
!14522 = !DILocalVariable(name: "len", arg: 2, scope: !14518, file: !13553, line: 552, type: !9)
!14523 = !DILocalVariable(name: "additional", arg: 3, scope: !14518, file: !13553, line: 553, type: !9)
!14524 = !DILocalVariable(name: "elem_layout", arg: 4, scope: !14518, file: !13553, line: 554, type: !39)
!14525 = !DILocalVariable(name: "err", scope: !14526, file: !13553, line: 557, type: !1583, align: 32)
!14526 = distinct !DILexicalBlock(scope: !14518, file: !13553, line: 557, column: 91)
!14527 = !DILocation(line: 551, column: 13, scope: !14518)
!14528 = !DILocation(line: 552, column: 13, scope: !14518)
!14529 = !DILocation(line: 553, column: 13, scope: !14518)
!14530 = !DILocation(line: 554, column: 13, scope: !14518)
!14531 = !DILocation(line: 557, column: 44, scope: !14526)
!14532 = !DILocation(line: 557, column: 31, scope: !14526)
!14533 = !DILocation(line: 557, column: 20, scope: !14526)
!14534 = !DILocation(line: 557, column: 24, scope: !14526)
!14535 = !DILocation(line: 558, column: 17, scope: !14526)
!14536 = !DILocation(line: 560, column: 10, scope: !14518)
!14537 = !DILocation(line: 550, column: 9, scope: !14518)
!14538 = distinct !DISubprogram(name: "capacity<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17h20c3ff9e35767918E", scope: !190, file: !13553, line: 508, type: !14539, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14541, retainedNodes: !14542)
!14539 = !DISubroutineType(types: !14540)
!14540 = !{!9, !13919, !9}
!14541 = !DISubprogram(name: "capacity<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8capacity17h20c3ff9e35767918E", scope: !190, file: !13553, line: 508, type: !14539, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14542 = !{!14543, !14544}
!14543 = !DILocalVariable(name: "self", arg: 1, scope: !14538, file: !13553, line: 508, type: !13919)
!14544 = !DILocalVariable(name: "elem_size", arg: 2, scope: !14538, file: !13553, line: 508, type: !9)
!14545 = !DILocation(line: 508, column: 23, scope: !14538)
!14546 = !DILocation(line: 508, column: 30, scope: !14538)
!14547 = !DILocation(line: 509, column: 12, scope: !14538)
!14548 = !DILocation(line: 509, column: 29, scope: !14538)
!14549 = !DILocation(line: 509, column: 9, scope: !14538)
!14550 = !DILocation(line: 509, column: 49, scope: !14538)
!14551 = !DILocation(line: 509, column: 58, scope: !14538)
!14552 = !DILocation(line: 510, column: 6, scope: !14538)
!14553 = distinct !DISubprogram(name: "grow_one<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17h46f86bdad3c18f22E", scope: !190, file: !13553, line: 575, type: !13846, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14554, retainedNodes: !14555)
!14554 = !DISubprogram(name: "grow_one<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8grow_one17h46f86bdad3c18f22E", scope: !190, file: !13553, line: 575, type: !13846, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14555 = !{!14556, !14557, !14558}
!14556 = !DILocalVariable(name: "self", arg: 1, scope: !14553, file: !13553, line: 575, type: !13848)
!14557 = !DILocalVariable(name: "elem_layout", arg: 2, scope: !14553, file: !13553, line: 575, type: !39)
!14558 = !DILocalVariable(name: "err", scope: !14559, file: !13553, line: 577, type: !1583, align: 32)
!14559 = distinct !DILexicalBlock(scope: !14553, file: !13553, line: 577, column: 95)
!14560 = !DILocation(line: 575, column: 24, scope: !14553)
!14561 = !DILocation(line: 575, column: 35, scope: !14553)
!14562 = !DILocation(line: 577, column: 56, scope: !14559)
!14563 = !DILocation(line: 577, column: 65, scope: !14559)
!14564 = !DILocation(line: 577, column: 41, scope: !14559)
!14565 = !DILocation(line: 577, column: 27, scope: !14559)
!14566 = !DILocation(line: 577, column: 16, scope: !14559)
!14567 = !DILocation(line: 577, column: 20, scope: !14559)
!14568 = !DILocation(line: 578, column: 13, scope: !14559)
!14569 = !DILocation(line: 580, column: 6, scope: !14553)
!14570 = !DILocation(line: 575, column: 5, scope: !14553)
!14571 = distinct !DISubprogram(name: "non_null<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17h22f7235feed1ba91E", scope: !190, file: !13553, line: 503, type: !14572, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14463, declaration: !14574, retainedNodes: !14575)
!14572 = !DISubroutineType(types: !14573)
!14573 = !{!197, !13919}
!14574 = !DISubprogram(name: "non_null<alloc::alloc::Global, u8>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$8non_null17h22f7235feed1ba91E", scope: !190, file: !13553, line: 503, type: !14572, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !14463)
!14575 = !{!14576}
!14576 = !DILocalVariable(name: "self", arg: 1, scope: !14571, file: !13553, line: 503, type: !13919)
!14577 = !DILocation(line: 503, column: 26, scope: !14571)
!14578 = !DILocation(line: 504, column: 9, scope: !14571)
!14579 = !DILocation(line: 504, column: 18, scope: !14571)
!14580 = !DILocation(line: 504, column: 25, scope: !14571)
!14581 = !DILocation(line: 505, column: 6, scope: !14571)
!14582 = distinct !DISubprogram(name: "allocator<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17h72d43e87e84d887dE", scope: !190, file: !13553, line: 513, type: !14583, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !214, declaration: !14585, retainedNodes: !14586)
!14583 = !DISubroutineType(types: !14584)
!14584 = !{!9407, !13919}
!14585 = !DISubprogram(name: "allocator<alloc::alloc::Global>", linkageName: "_ZN5alloc7raw_vec20RawVecInner$LT$A$GT$9allocator17h72d43e87e84d887dE", scope: !190, file: !13553, line: 513, type: !14583, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !214)
!14586 = !{!14587}
!14587 = !DILocalVariable(name: "self", arg: 1, scope: !14582, file: !13553, line: 513, type: !13919)
!14588 = !DILocation(line: 513, column: 18, scope: !14582)
!14589 = !DILocation(line: 514, column: 9, scope: !14582)
!14590 = !DILocation(line: 515, column: 6, scope: !14582)
!14591 = distinct !DISubprogram(name: "new_cap<u8>", linkageName: "_ZN5alloc7raw_vec7new_cap17hc3d2e3f9b4ae8d28E", scope: !187, file: !13553, line: 46, type: !2731, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !14592)
!14592 = !{!14593}
!14593 = !DILocalVariable(name: "cap", arg: 1, scope: !14591, file: !13553, line: 46, type: !9)
!14594 = !DILocation(line: 46, column: 22, scope: !14591)
!14595 = !DILocation(line: 47, column: 8, scope: !14591)
!14596 = !DILocation(line: 47, column: 47, scope: !14591)
!14597 = !DILocation(line: 48, column: 2, scope: !14591)
!14598 = distinct !DISubprogram(name: "clone_from", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$10clone_from17h7bb1a6ed5ba0ecb4E", scope: !14599, file: !9348, line: 2297, type: !14600, scopeLine: 2297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14602)
!14599 = !DINamespace(name: "{impl#6}", scope: !179)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{null, !567, !9373}
!14602 = !{!14603, !14604}
!14603 = !DILocalVariable(name: "self", arg: 1, scope: !14598, file: !9348, line: 2297, type: !567)
!14604 = !DILocalVariable(name: "source", arg: 2, scope: !14598, file: !9348, line: 2297, type: !9373)
!14605 = !DILocation(line: 2297, column: 19, scope: !14598)
!14606 = !DILocation(line: 2297, column: 30, scope: !14598)
!14607 = !DILocation(line: 2298, column: 18, scope: !14598)
!14608 = !DILocation(line: 2299, column: 6, scope: !14598)
!14609 = distinct !DISubprogram(name: "clone", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..clone..Clone$GT$5clone17ha48ed470ad5ce51dE", scope: !14599, file: !9348, line: 2289, type: !14610, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14612)
!14610 = !DISubroutineType(types: !14611)
!14611 = !{!178, !9373}
!14612 = !{!14613}
!14613 = !DILocalVariable(name: "self", arg: 1, scope: !14609, file: !9348, line: 2289, type: !9373)
!14614 = !DILocation(line: 2289, column: 14, scope: !14609)
!14615 = !DILocation(line: 2290, column: 32, scope: !14609)
!14616 = !DILocation(line: 2290, column: 9, scope: !14609)
!14617 = !DILocation(line: 2291, column: 6, scope: !14609)
!14618 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17hfcd12e315e5af83bE", scope: !14619, file: !9348, line: 2603, type: !9371, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14620)
!14619 = !DINamespace(name: "{impl#23}", scope: !179)
!14620 = !{!14621, !14622}
!14621 = !DILocalVariable(name: "self", arg: 1, scope: !14618, file: !9348, line: 2603, type: !9373)
!14622 = !DILocalVariable(name: "f", arg: 2, scope: !14618, file: !9348, line: 2603, type: !351)
!14623 = !DILocation(line: 2603, column: 12, scope: !14618)
!14624 = !DILocation(line: 2603, column: 19, scope: !14618)
!14625 = !DILocation(line: 2604, column: 28, scope: !14618)
!14626 = !DILocation(line: 2604, column: 9, scope: !14618)
!14627 = !DILocation(line: 2605, column: 6, scope: !14618)
!14628 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN61_$LT$alloc..string..IntoChars$u20$as$u20$core..fmt..Debug$GT$3fmt17hc8f6da332c749a4bE", scope: !14629, file: !9348, line: 3256, type: !14630, scopeLine: 3256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14632)
!14629 = !DINamespace(name: "{impl#58}", scope: !179)
!14630 = !DISubroutineType(types: !14631)
!14631 = !{!334, !13544, !351}
!14632 = !{!14633, !14634}
!14633 = !DILocalVariable(name: "self", arg: 1, scope: !14628, file: !9348, line: 3256, type: !13544)
!14634 = !DILocalVariable(name: "f", arg: 2, scope: !14628, file: !9348, line: 3256, type: !351)
!14635 = !DILocation(line: 3256, column: 12, scope: !14628)
!14636 = !DILocation(line: 3256, column: 19, scope: !14628)
!14637 = !DILocation(line: 3257, column: 11, scope: !14628)
!14638 = !DILocation(line: 3257, column: 48, scope: !14628)
!14639 = !DILocation(line: 3257, column: 36, scope: !14628)
!14640 = !DILocation(line: 3257, column: 58, scope: !14628)
!14641 = !DILocation(line: 3258, column: 6, scope: !14628)
!14642 = distinct !DISubprogram(name: "drop", linkageName: "_ZN62_$LT$alloc..string..Drain$u20$as$u20$core..ops..drop..Drop$GT$4drop17hccfa9614dbc83b44E", scope: !14643, file: !9348, line: 3400, type: !14644, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14647)
!14643 = !DINamespace(name: "{impl#66}", scope: !179)
!14644 = !DISubroutineType(types: !14645)
!14645 = !{null, !14646}
!14646 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::Drain", baseType: !9353, size: 32, align: 32, dwarfAddressSpace: 0)
!14647 = !{!14648, !14649}
!14648 = !DILocalVariable(name: "self", arg: 1, scope: !14642, file: !9348, line: 3400, type: !14646)
!14649 = !DILocalVariable(name: "self_vec", scope: !14650, file: !9348, line: 3404, type: !1608, align: 32)
!14650 = distinct !DILexicalBlock(scope: !14642, file: !9348, line: 3404, column: 13)
!14651 = !DILocation(line: 3400, column: 13, scope: !14642)
!14652 = !DILocation(line: 3404, column: 28, scope: !14642)
!14653 = !DILocation(line: 3404, column: 43, scope: !14642)
!14654 = !DILocation(line: 3404, column: 17, scope: !14650)
!14655 = !DILocation(line: 3405, column: 16, scope: !14650)
!14656 = !DILocation(line: 3405, column: 30, scope: !14650)
!14657 = !DILocation(line: 3409, column: 6, scope: !14642)
!14658 = !DILocation(line: 3405, column: 42, scope: !14650)
!14659 = !DILocation(line: 3405, column: 63, scope: !14650)
!14660 = !DILocation(line: 3406, column: 32, scope: !14650)
!14661 = !DILocation(line: 3406, column: 44, scope: !14650)
!14662 = !DILocation(line: 3406, column: 26, scope: !14650)
!14663 = !DILocation(line: 3406, column: 53, scope: !14650)
!14664 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h2517162552d9c862E", scope: !14666, file: !14665, line: 319, type: !14668, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !545, retainedNodes: !14670)
!14665 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "06509ee86e4371045220ddb87ad17093")
!14666 = !DINamespace(name: "{impl#0}", scope: !14667)
!14667 = !DINamespace(name: "collect", scope: !559)
!14668 = !DISubroutineType(types: !14669)
!14669 = !{!496, !496}
!14670 = !{!14671}
!14671 = !DILocalVariable(name: "self", arg: 1, scope: !14664, file: !14665, line: 319, type: !496)
!14672 = !DILocation(line: 319, column: 18, scope: !14664)
!14673 = !DILocation(line: 321, column: 6, scope: !14664)
!14674 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h347b337d6ac2367bE", scope: !14666, file: !14665, line: 319, type: !14675, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14679, retainedNodes: !14677)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{!679, !679}
!14677 = !{!14678}
!14678 = !DILocalVariable(name: "self", arg: 1, scope: !14674, file: !14665, line: 319, type: !679)
!14679 = !{!14680}
!14680 = !DITemplateTypeParameter(name: "I", type: !679)
!14681 = !DILocation(line: 319, column: 18, scope: !14674)
!14682 = !DILocation(line: 320, column: 9, scope: !14674)
!14683 = !DILocation(line: 321, column: 6, scope: !14674)
!14684 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4967a440a24d431eE", scope: !14666, file: !14665, line: 319, type: !14685, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !746, retainedNodes: !14687)
!14685 = !DISubroutineType(types: !14686)
!14686 = !{!726, !726}
!14687 = !{!14688}
!14688 = !DILocalVariable(name: "self", arg: 1, scope: !14684, file: !14665, line: 319, type: !726)
!14689 = !DILocation(line: 319, column: 18, scope: !14684)
!14690 = !DILocation(line: 321, column: 6, scope: !14684)
!14691 = distinct !DISubprogram(name: "into_iter<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h59edcacceef3f6b9E", scope: !14666, file: !14665, line: 319, type: !14692, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14696, retainedNodes: !14694)
!14692 = !DISubroutineType(types: !14693)
!14693 = !{!682, !682}
!14694 = !{!14695}
!14695 = !DILocalVariable(name: "self", arg: 1, scope: !14691, file: !14665, line: 319, type: !682)
!14696 = !{!696}
!14697 = !DILocation(line: 319, column: 18, scope: !14691)
!14698 = !DILocation(line: 320, column: 9, scope: !14691)
!14699 = !DILocation(line: 321, column: 6, scope: !14691)
!14700 = distinct !DISubprogram(name: "into_iter<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h688644204d7d00a6E", scope: !14666, file: !14665, line: 319, type: !14701, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14705, retainedNodes: !14703)
!14701 = !DISubroutineType(types: !14702)
!14702 = !{!491, !491}
!14703 = !{!14704}
!14704 = !DILocalVariable(name: "self", arg: 1, scope: !14700, file: !14665, line: 319, type: !491)
!14705 = !{!552}
!14706 = !DILocation(line: 319, column: 18, scope: !14700)
!14707 = !DILocation(line: 320, column: 9, scope: !14700)
!14708 = !DILocation(line: 321, column: 6, scope: !14700)
!14709 = distinct !DISubprogram(name: "into_iter<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h79a45a5431d99095E", scope: !14666, file: !14665, line: 319, type: !14710, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14714, retainedNodes: !14712)
!14710 = !DISubroutineType(types: !14711)
!14711 = !{!723, !723}
!14712 = !{!14713}
!14713 = !DILocalVariable(name: "self", arg: 1, scope: !14709, file: !14665, line: 319, type: !723)
!14714 = !{!752}
!14715 = !DILocation(line: 319, column: 18, scope: !14709)
!14716 = !DILocation(line: 320, column: 9, scope: !14709)
!14717 = !DILocation(line: 321, column: 6, scope: !14709)
!14718 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb4cfc9f7bf489723E", scope: !14666, file: !14665, line: 319, type: !14719, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14723, retainedNodes: !14721)
!14719 = !DISubroutineType(types: !14720)
!14720 = !{!1012, !1012}
!14721 = !{!14722}
!14722 = !DILocalVariable(name: "self", arg: 1, scope: !14718, file: !14665, line: 319, type: !1012)
!14723 = !{!14724}
!14724 = !DITemplateTypeParameter(name: "I", type: !1012)
!14725 = !DILocation(line: 319, column: 18, scope: !14718)
!14726 = !DILocation(line: 320, column: 9, scope: !14718)
!14727 = !DILocation(line: 321, column: 6, scope: !14718)
!14728 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hca061dacdeddffc1E", scope: !14666, file: !14665, line: 319, type: !14729, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14733, retainedNodes: !14731)
!14729 = !DISubroutineType(types: !14730)
!14730 = !{!720, !720}
!14731 = !{!14732}
!14732 = !DILocalVariable(name: "self", arg: 1, scope: !14728, file: !14665, line: 319, type: !720)
!14733 = !{!14734}
!14734 = !DITemplateTypeParameter(name: "I", type: !720)
!14735 = !DILocation(line: 319, column: 18, scope: !14728)
!14736 = !DILocation(line: 320, column: 9, scope: !14728)
!14737 = !DILocation(line: 321, column: 6, scope: !14728)
!14738 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17he71e25bf9dbdc63bE", scope: !14666, file: !14665, line: 319, type: !14739, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !690, retainedNodes: !14741)
!14739 = !DISubroutineType(types: !14740)
!14740 = !{!685, !685}
!14741 = !{!14742}
!14742 = !DILocalVariable(name: "self", arg: 1, scope: !14738, file: !14665, line: 319, type: !685)
!14743 = !DILocation(line: 319, column: 18, scope: !14738)
!14744 = !DILocation(line: 321, column: 6, scope: !14738)
!14745 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17heaa26c5f633d5f6fE", scope: !14666, file: !14665, line: 319, type: !14746, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14750, retainedNodes: !14748)
!14746 = !DISubroutineType(types: !14747)
!14747 = !{!948, !948}
!14748 = !{!14749}
!14749 = !DILocalVariable(name: "self", arg: 1, scope: !14745, file: !14665, line: 319, type: !948)
!14750 = !{!14751}
!14751 = !DITemplateTypeParameter(name: "I", type: !948)
!14752 = !DILocation(line: 319, column: 18, scope: !14745)
!14753 = !DILocation(line: 320, column: 9, scope: !14745)
!14754 = !DILocation(line: 321, column: 6, scope: !14745)
!14755 = distinct !DISubprogram(name: "into_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf86ccca6e99e4416E", scope: !14666, file: !14665, line: 319, type: !14756, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14760, retainedNodes: !14758)
!14756 = !DISubroutineType(types: !14757)
!14757 = !{!488, !488}
!14758 = !{!14759}
!14759 = !DILocalVariable(name: "self", arg: 1, scope: !14755, file: !14665, line: 319, type: !488)
!14760 = !{!14761}
!14761 = !DITemplateTypeParameter(name: "I", type: !488)
!14762 = !DILocation(line: 319, column: 18, scope: !14755)
!14763 = !DILocation(line: 320, column: 9, scope: !14755)
!14764 = !DILocation(line: 321, column: 6, scope: !14755)
!14765 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h163864b282d01931E", scope: !14766, file: !294, line: 262, type: !14767, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14769)
!14766 = !DINamespace(name: "{impl#1}", scope: !213)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{null, !9407, !197, !39}
!14769 = !{!14770, !14771, !14772}
!14770 = !DILocalVariable(name: "self", arg: 1, scope: !14765, file: !294, line: 262, type: !9407)
!14771 = !DILocalVariable(name: "ptr", arg: 2, scope: !14765, file: !294, line: 262, type: !197)
!14772 = !DILocalVariable(name: "layout", arg: 3, scope: !14765, file: !294, line: 262, type: !39)
!14773 = !DILocation(line: 262, column: 26, scope: !14765)
!14774 = !DILocation(line: 262, column: 33, scope: !14765)
!14775 = !DILocation(line: 262, column: 51, scope: !14765)
!14776 = !DILocation(line: 263, column: 19, scope: !14765)
!14777 = !DILocation(line: 263, column: 12, scope: !14765)
!14778 = !DILocation(line: 274, column: 6, scope: !14765)
!14779 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !14780)
!14780 = distinct !DILocation(line: 272, column: 34, scope: !14765)
!14781 = !DILocation(line: 272, column: 22, scope: !14765)
!14782 = distinct !DISubprogram(name: "allocate_zeroed", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17hfbea98bcfbcec44fE", scope: !14766, file: !294, line: 256, type: !14783, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14785)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{!1959, !9407, !39}
!14785 = !{!14786, !14787}
!14786 = !DILocalVariable(name: "self", arg: 1, scope: !14782, file: !294, line: 256, type: !9407)
!14787 = !DILocalVariable(name: "layout", arg: 2, scope: !14782, file: !294, line: 256, type: !39)
!14788 = !DILocation(line: 256, column: 24, scope: !14782)
!14789 = !DILocation(line: 256, column: 31, scope: !14782)
!14790 = !DILocation(line: 257, column: 14, scope: !14782)
!14791 = !DILocation(line: 258, column: 6, scope: !14782)
!14792 = distinct !DISubprogram(name: "grow", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17he09a334fed706b5cE", scope: !14766, file: !294, line: 278, type: !14793, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14795)
!14793 = !DISubroutineType(types: !14794)
!14794 = !{!1959, !9407, !197, !39, !39}
!14795 = !{!14796, !14797, !14798, !14799}
!14796 = !DILocalVariable(name: "self", arg: 1, scope: !14792, file: !294, line: 279, type: !9407)
!14797 = !DILocalVariable(name: "ptr", arg: 2, scope: !14792, file: !294, line: 280, type: !197)
!14798 = !DILocalVariable(name: "old_layout", arg: 3, scope: !14792, file: !294, line: 281, type: !39)
!14799 = !DILocalVariable(name: "new_layout", arg: 4, scope: !14792, file: !294, line: 282, type: !39)
!14800 = !DILocation(line: 279, column: 9, scope: !14792)
!14801 = !DILocation(line: 280, column: 9, scope: !14792)
!14802 = !DILocation(line: 281, column: 9, scope: !14792)
!14803 = !DILocation(line: 282, column: 9, scope: !14792)
!14804 = !DILocation(line: 285, column: 23, scope: !14792)
!14805 = !DILocation(line: 286, column: 6, scope: !14792)
!14806 = distinct !DISubprogram(name: "shrink", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17h05dfe32dcc24d201E", scope: !14766, file: !294, line: 302, type: !14793, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14807)
!14807 = !{!14808, !14809, !14810, !14811, !14812, !14814, !14815, !14817, !14819, !14821, !14823, !14825, !14827, !14829}
!14808 = !DILocalVariable(name: "self", arg: 1, scope: !14806, file: !294, line: 303, type: !9407)
!14809 = !DILocalVariable(name: "ptr", arg: 2, scope: !14806, file: !294, line: 304, type: !197)
!14810 = !DILocalVariable(name: "old_layout", arg: 3, scope: !14806, file: !294, line: 305, type: !39)
!14811 = !DILocalVariable(name: "new_layout", arg: 4, scope: !14806, file: !294, line: 306, type: !39)
!14812 = !DILocalVariable(name: "new_size", scope: !14813, file: !294, line: 321, type: !9, align: 32)
!14813 = distinct !DILexicalBlock(scope: !14806, file: !294, line: 321, column: 13)
!14814 = !DILocalVariable(name: "new_size", scope: !14813, file: !294, line: 321, type: !93, align: 32)
!14815 = !DILocalVariable(name: "raw_ptr", scope: !14816, file: !294, line: 325, type: !463, align: 32)
!14816 = distinct !DILexicalBlock(scope: !14813, file: !294, line: 325, column: 17)
!14817 = !DILocalVariable(name: "ptr", scope: !14818, file: !294, line: 326, type: !197, align: 32)
!14818 = distinct !DILexicalBlock(scope: !14816, file: !294, line: 326, column: 17)
!14819 = !DILocalVariable(name: "residual", scope: !14820, file: !294, line: 326, type: !1975, align: 8)
!14820 = distinct !DILexicalBlock(scope: !14816, file: !294, line: 326, column: 66)
!14821 = !DILocalVariable(name: "val", scope: !14822, file: !294, line: 326, type: !197, align: 32)
!14822 = distinct !DILexicalBlock(scope: !14816, file: !294, line: 326, column: 27)
!14823 = !DILocalVariable(name: "new_size", scope: !14824, file: !294, line: 335, type: !9, align: 32)
!14824 = distinct !DILexicalBlock(scope: !14806, file: !294, line: 335, column: 13)
!14825 = !DILocalVariable(name: "new_ptr", scope: !14826, file: !294, line: 336, type: !1932, align: 32)
!14826 = distinct !DILexicalBlock(scope: !14824, file: !294, line: 336, column: 17)
!14827 = !DILocalVariable(name: "residual", scope: !14828, file: !294, line: 336, type: !1975, align: 8)
!14828 = distinct !DILexicalBlock(scope: !14824, file: !294, line: 336, column: 56)
!14829 = !DILocalVariable(name: "val", scope: !14830, file: !294, line: 336, type: !1932, align: 32)
!14830 = distinct !DILexicalBlock(scope: !14824, file: !294, line: 336, column: 31)
!14831 = !DILocation(line: 303, column: 9, scope: !14806)
!14832 = !DILocation(line: 304, column: 9, scope: !14806)
!14833 = !DILocation(line: 305, column: 9, scope: !14806)
!14834 = !DILocation(line: 306, column: 9, scope: !14806)
!14835 = !DILocation(line: 321, column: 13, scope: !14813)
!14836 = !DILocation(line: 335, column: 13, scope: !14824)
!14837 = !DILocation(line: 326, column: 66, scope: !14820)
!14838 = !DILocation(line: 336, column: 56, scope: !14828)
!14839 = !DILocation(line: 309, column: 24, scope: !14806)
!14840 = !DILocation(line: 309, column: 45, scope: !14806)
!14841 = !DILocation(line: 309, column: 13, scope: !14806)
!14842 = !DILocation(line: 308, column: 9, scope: !14806)
!14843 = !DILocation(line: 313, column: 26, scope: !14806)
!14844 = !DILocation(line: 313, column: 9, scope: !14806)
!14845 = !DILocation(line: 316, column: 17, scope: !14806)
!14846 = !DILocation(line: 316, column: 22, scope: !14806)
!14847 = !DILocation(line: 317, column: 61, scope: !14806)
!14848 = !DILocation(line: 317, column: 20, scope: !14806)
!14849 = !DILocation(line: 317, column: 17, scope: !14806)
!14850 = !DILocation(line: 317, column: 75, scope: !14806)
!14851 = !DILocation(line: 321, column: 13, scope: !14806)
!14852 = !DILocation(line: 321, column: 36, scope: !14806)
!14853 = !DILocation(line: 321, column: 58, scope: !14806)
!14854 = !DILocation(line: 321, column: 25, scope: !14806)
!14855 = !DILocation(line: 342, column: 6, scope: !14806)
!14856 = !DILocation(line: 336, column: 31, scope: !14824)
!14857 = !DILocation(line: 336, column: 36, scope: !14824)
!14858 = !DILocation(line: 323, column: 63, scope: !14813)
!14859 = !DILocation(line: 323, column: 40, scope: !14813)
!14860 = !DILocation(line: 201, column: 38, scope: !11082, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 323, column: 17, scope: !14813)
!14862 = !DILocation(line: 77, column: 35, scope: !11087, inlinedAt: !14861)
!14863 = !DILocation(line: 78, column: 17, scope: !11087, inlinedAt: !14861)
!14864 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 325, column: 43, scope: !14813)
!14866 = !DILocation(line: 325, column: 31, scope: !14813)
!14867 = !DILocation(line: 325, column: 21, scope: !14816)
!14868 = !DILocation(line: 326, column: 27, scope: !14816)
!14869 = !DILocation(line: 326, column: 49, scope: !14816)
!14870 = !DILocation(line: 336, column: 31, scope: !14828)
!14871 = !DILocation(line: 336, column: 21, scope: !14826)
!14872 = !DILocation(line: 336, column: 31, scope: !14830)
!14873 = !DILocation(line: 401, column: 25, scope: !4330, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 337, column: 46, scope: !14826)
!14875 = !DILocation(line: 337, column: 64, scope: !14826)
!14876 = !DILocation(line: 337, column: 17, scope: !14826)
!14877 = !DILocation(line: 526, column: 44, scope: !459, inlinedAt: !14878)
!14878 = distinct !DILocation(line: 337, column: 17, scope: !14826)
!14879 = !DILocation(line: 526, column: 59, scope: !459, inlinedAt: !14878)
!14880 = !DILocation(line: 526, column: 72, scope: !459, inlinedAt: !14878)
!14881 = !DILocation(line: 77, column: 35, scope: !472, inlinedAt: !14878)
!14882 = !DILocation(line: 78, column: 17, scope: !472, inlinedAt: !14878)
!14883 = !DILocation(line: 547, column: 14, scope: !459, inlinedAt: !14878)
!14884 = !DILocation(line: 338, column: 17, scope: !14826)
!14885 = !DILocation(line: 338, column: 22, scope: !14826)
!14886 = !DILocation(line: 339, column: 17, scope: !14826)
!14887 = !DILocation(line: 340, column: 13, scope: !14806)
!14888 = !DILocation(line: 326, column: 27, scope: !14820)
!14889 = !DILocation(line: 326, column: 21, scope: !14818)
!14890 = !DILocation(line: 326, column: 27, scope: !14822)
!14891 = !DILocation(line: 327, column: 20, scope: !14818)
!14892 = !DILocation(line: 327, column: 17, scope: !14818)
!14893 = !DILocation(line: 328, column: 13, scope: !14806)
!14894 = !DILocation(line: 0, scope: !14895)
!14895 = !DILexicalBlockFile(scope: !14806, file: !4885, discriminator: 0)
!14896 = distinct !DISubprogram(name: "allocate", linkageName: "_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17hcb24de044d2c3cacE", scope: !14766, file: !294, line: 250, type: !14783, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14897)
!14897 = !{!14898, !14899}
!14898 = !DILocalVariable(name: "self", arg: 1, scope: !14896, file: !294, line: 250, type: !9407)
!14899 = !DILocalVariable(name: "layout", arg: 2, scope: !14896, file: !294, line: 250, type: !39)
!14900 = !DILocation(line: 250, column: 17, scope: !14896)
!14901 = !DILocation(line: 250, column: 24, scope: !14896)
!14902 = !DILocation(line: 251, column: 14, scope: !14896)
!14903 = !DILocation(line: 252, column: 6, scope: !14896)
!14904 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN63_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..fmt..Debug$GT$3fmt17hf4abae919c751448E", scope: !14905, file: !398, line: 721, type: !14906, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14908)
!14905 = !DINamespace(name: "{impl#4}", scope: !400)
!14906 = !DISubroutineType(types: !14907)
!14907 = !{!334, !10093, !351}
!14908 = !{!14909, !14910}
!14909 = !DILocalVariable(name: "self", arg: 1, scope: !14904, file: !398, line: 721, type: !10093)
!14910 = !DILocalVariable(name: "f", arg: 2, scope: !14904, file: !398, line: 721, type: !351)
!14911 = !DILocation(line: 721, column: 12, scope: !14904)
!14912 = !DILocation(line: 721, column: 19, scope: !14904)
!14913 = !DILocation(line: 722, column: 30, scope: !14904)
!14914 = !DILocation(line: 722, column: 9, scope: !14904)
!14915 = !DILocation(line: 723, column: 6, scope: !14904)
!14916 = distinct !DISubprogram(name: "deref", linkageName: "_ZN64_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..Deref$GT$5deref17h6dbca4ec3c2cbfe5E", scope: !14917, file: !9413, line: 55, type: !12033, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14918)
!14917 = !DINamespace(name: "{impl#0}", scope: !9415)
!14918 = !{!14919}
!14919 = !DILocalVariable(name: "self", arg: 1, scope: !14916, file: !9413, line: 55, type: !9418)
!14920 = !DILocation(line: 55, column: 14, scope: !14916)
!14921 = !DILocation(line: 56, column: 14, scope: !14916)
!14922 = !DILocation(line: 57, column: 6, scope: !14916)
!14923 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$core..alloc..layout..Layout$u20$as$u20$core..fmt..Debug$GT$3fmt17hfd831f110b56f5e8E", scope: !14924, file: !6847, line: 38, type: !14925, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14927)
!14924 = !DINamespace(name: "{impl#5}", scope: !40)
!14925 = !DISubroutineType(types: !14926)
!14926 = !{!334, !38, !351}
!14927 = !{!14928, !14929}
!14928 = !DILocalVariable(name: "self", arg: 1, scope: !14923, file: !6847, line: 38, type: !38)
!14929 = !DILocalVariable(name: "f", arg: 2, scope: !14923, file: !6847, line: 38, type: !351)
!14930 = !DILocation(line: 38, column: 23, scope: !14923)
!14931 = !DILocation(line: 42, column: 5, scope: !14923)
!14932 = !DILocation(line: 51, column: 5, scope: !14923)
!14933 = !DILocation(line: 38, column: 28, scope: !14923)
!14934 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h496788f68c402926E", scope: !14935, file: !4978, line: 45, type: !14936, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14938)
!14935 = !DINamespace(name: "{impl#10}", scope: !261)
!14936 = !DISubroutineType(types: !14937)
!14937 = !{!334, !4981, !351}
!14938 = !{!14939, !14940}
!14939 = !DILocalVariable(name: "self", arg: 1, scope: !14934, file: !4978, line: 45, type: !4981)
!14940 = !DILocalVariable(name: "f", arg: 2, scope: !14934, file: !4978, line: 45, type: !351)
!14941 = !DILocation(line: 45, column: 38, scope: !14934)
!14942 = !DILocation(line: 49, column: 5, scope: !14934)
!14943 = !DILocation(line: 45, column: 43, scope: !14934)
!14944 = distinct !DISubprogram(name: "deref", linkageName: "_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h674e141af3001a2dE", scope: !14945, file: !9348, line: 2714, type: !10738, scopeLine: 2714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14946)
!14945 = !DINamespace(name: "{impl#30}", scope: !179)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "self", arg: 1, scope: !14944, file: !9348, line: 2714, type: !9373)
!14948 = !DILocation(line: 2714, column: 14, scope: !14944)
!14949 = !DILocation(line: 2715, column: 14, scope: !14944)
!14950 = !DILocation(line: 2716, column: 6, scope: !14944)
!14951 = distinct !DISubprogram(name: "default", linkageName: "_ZN66_$LT$alloc..bstr..ByteString$u20$as$u20$core..default..Default$GT$7default17hbe9cb889ada20672E", scope: !14953, file: !14952, line: 174, type: !14955, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21)
!14952 = !DIFile(filename: "src/bstr.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "d1e5feabff5b02e92cc4bf8708bda721")
!14953 = !DINamespace(name: "{impl#14}", scope: !14954)
!14954 = !DINamespace(name: "bstr", scope: !132)
!14955 = !DISubroutineType(types: !14956)
!14956 = !{!14957}
!14957 = !DICompositeType(tag: DW_TAG_structure_type, name: "ByteString", scope: !14954, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !14958, templateParams: !21, identifier: "c11092329e2800b124589e18a9a7942d")
!14958 = !{!14959}
!14959 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !14957, file: !2, baseType: !182, size: 96, align: 32, flags: DIFlagPublic)
!14960 = !DILocation(line: 175, column: 20, scope: !14951)
!14961 = !DILocation(line: 175, column: 9, scope: !14951)
!14962 = !DILocation(line: 176, column: 6, scope: !14951)
!14963 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$alloc..ffi..c_str..NulError$u20$as$u20$core..fmt..Display$GT$3fmt17h2219c55b69a2b5fbE", scope: !14964, file: !398, line: 1025, type: !14965, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14967)
!14964 = !DINamespace(name: "{impl#30}", scope: !400)
!14965 = !DISubroutineType(types: !14966)
!14966 = !{!334, !10292, !351}
!14967 = !{!14968, !14969, !14970, !14973}
!14968 = !DILocalVariable(name: "self", arg: 1, scope: !14963, file: !398, line: 1025, type: !10292)
!14969 = !DILocalVariable(name: "f", arg: 2, scope: !14963, file: !398, line: 1025, type: !351)
!14970 = !DILocalVariable(name: "args", scope: !14971, file: !398, line: 1026, type: !305, align: 32)
!14971 = !DILexicalBlockFile(scope: !14972, file: !398, discriminator: 0)
!14972 = distinct !DILexicalBlock(scope: !14963, file: !2304, line: 612, column: 24)
!14973 = !DILocalVariable(name: "args", scope: !14974, file: !398, line: 1026, type: !311, align: 32)
!14974 = !DILexicalBlockFile(scope: !14975, file: !398, discriminator: 0)
!14975 = distinct !DILexicalBlock(scope: !14972, file: !2304, line: 612, column: 24)
!14976 = !DILocation(line: 1025, column: 12, scope: !14963)
!14977 = !DILocation(line: 1025, column: 19, scope: !14963)
!14978 = !DILocation(line: 1026, column: 9, scope: !14974)
!14979 = !DILocation(line: 1026, column: 9, scope: !14963)
!14980 = !DILocation(line: 1026, column: 9, scope: !14971)
!14981 = !DILocation(line: 1027, column: 6, scope: !14963)
!14982 = distinct !DISubprogram(name: "clone", linkageName: "_ZN66_$LT$core..alloc..layout..Layout$u20$as$u20$core..clone..Clone$GT$5clone17h2387eee35ea3b63eE", scope: !14983, file: !6847, line: 38, type: !6872, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !14984)
!14983 = !DINamespace(name: "{impl#4}", scope: !40)
!14984 = !{!14985}
!14985 = !DILocalVariable(name: "self", arg: 1, scope: !14982, file: !6847, line: 38, type: !38)
!14986 = !DILocation(line: 38, column: 16, scope: !14982)
!14987 = !DILocation(line: 38, column: 21, scope: !14982)
!14988 = distinct !DISubprogram(name: "fmt<u8>", linkageName: "_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hd488c21ea98dead3E", scope: !14989, file: !1685, line: 593, type: !14990, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !14992)
!14989 = !DINamespace(name: "{impl#46}", scope: !14)
!14990 = !DISubroutineType(types: !14991)
!14991 = !{!334, !12, !351}
!14992 = !{!14993, !14994, !14995}
!14993 = !DILocalVariable(name: "self", arg: 1, scope: !14988, file: !1685, line: 593, type: !12)
!14994 = !DILocalVariable(name: "f", arg: 2, scope: !14988, file: !1685, line: 593, type: !351)
!14995 = !DILocalVariable(name: "__self_0", scope: !14996, file: !1685, line: 607, type: !244, align: 32)
!14996 = distinct !DILexicalBlock(scope: !14988, file: !1685, line: 593, column: 16)
!14997 = !DILocation(line: 593, column: 16, scope: !14988)
!14998 = !DILocation(line: 607, column: 56, scope: !14996)
!14999 = !DILocation(line: 607, column: 56, scope: !14988)
!15000 = !DILocation(line: 593, column: 16, scope: !14996)
!15001 = !DILocation(line: 593, column: 21, scope: !14988)
!15002 = distinct !DISubprogram(name: "clone", linkageName: "_ZN67_$LT$alloc..boxed..Box$LT$str$GT$$u20$as$u20$core..clone..Clone$GT$5clone17ha0604368d13917fcE", scope: !15003, file: !12381, line: 1840, type: !15004, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15006)
!15003 = !DINamespace(name: "{impl#15}", scope: !175)
!15004 = !DISubroutineType(types: !15005)
!15005 = !{!10487, !12568}
!15006 = !{!15007, !15008}
!15007 = !DILocalVariable(name: "self", arg: 1, scope: !15002, file: !12381, line: 1840, type: !12568)
!15008 = !DILocalVariable(name: "buf", scope: !15009, file: !12381, line: 1842, type: !407, align: 32)
!15009 = distinct !DILexicalBlock(scope: !15002, file: !12381, line: 1842, column: 9)
!15010 = !DILocation(line: 1840, column: 14, scope: !15002)
!15011 = !DILocation(line: 1842, column: 30, scope: !15002)
!15012 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !15013)
!15013 = distinct !DILocation(line: 1842, column: 35, scope: !15002)
!15014 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !15013)
!15015 = !DILocation(line: 1842, column: 35, scope: !15002)
!15016 = !DILocation(line: 1842, column: 46, scope: !15002)
!15017 = !DILocation(line: 1842, column: 13, scope: !15009)
!15018 = !DILocation(line: 1843, column: 18, scope: !15009)
!15019 = !DILocation(line: 1844, column: 6, scope: !15002)
!15020 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN67_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Display$GT$3fmt17hac30316efab6fd72E", scope: !15021, file: !9348, line: 2268, type: !15022, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15024)
!15021 = !DINamespace(name: "{impl#2}", scope: !179)
!15022 = !DISubroutineType(types: !15023)
!15023 = !{!334, !12942, !351}
!15024 = !{!15025, !15026}
!15025 = !DILocalVariable(name: "self", arg: 1, scope: !15020, file: !9348, line: 2268, type: !12942)
!15026 = !DILocalVariable(name: "f", arg: 2, scope: !15020, file: !9348, line: 2268, type: !351)
!15027 = !DILocation(line: 2268, column: 12, scope: !15020)
!15028 = !DILocation(line: 2268, column: 19, scope: !15020)
!15029 = !DILocation(line: 2269, column: 27, scope: !15020)
!15030 = !DILocation(line: 2269, column: 9, scope: !15020)
!15031 = !DILocation(line: 2270, column: 6, scope: !15020)
!15032 = distinct !DISubprogram(name: "clone_from<u8, alloc::alloc::Global>", linkageName: "_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$10clone_from17hada651d17ab8da4cE", scope: !15033, file: !10746, line: 3598, type: !15034, scopeLine: 3598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15036)
!15033 = !DINamespace(name: "{impl#11}", scope: !183)
!15034 = !DISubroutineType(types: !15035)
!15035 = !{null, !1608, !10796}
!15036 = !{!15037, !15038}
!15037 = !DILocalVariable(name: "self", arg: 1, scope: !15032, file: !10746, line: 3598, type: !1608)
!15038 = !DILocalVariable(name: "source", arg: 2, scope: !15032, file: !10746, line: 3598, type: !10796)
!15039 = !DILocation(line: 3598, column: 19, scope: !15032)
!15040 = !DILocation(line: 3598, column: 30, scope: !15032)
!15041 = !DILocation(line: 3599, column: 59, scope: !15032)
!15042 = !DILocation(line: 3599, column: 9, scope: !15032)
!15043 = !DILocation(line: 3600, column: 6, scope: !15032)
!15044 = distinct !DISubprogram(name: "clone<u8, alloc::alloc::Global>", linkageName: "_ZN67_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..clone..Clone$GT$5clone17h8a7ffb87d4b33583E", scope: !15033, file: !10746, line: 3571, type: !15045, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15047)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!182, !10796}
!15047 = !{!15048, !15049}
!15048 = !DILocalVariable(name: "self", arg: 1, scope: !15044, file: !10746, line: 3571, type: !10796)
!15049 = !DILocalVariable(name: "alloc", scope: !15050, file: !10746, line: 3572, type: !212, align: 8)
!15050 = distinct !DILexicalBlock(scope: !15044, file: !10746, line: 3572, column: 9)
!15051 = !DILocation(line: 3571, column: 14, scope: !15044)
!15052 = !DILocation(line: 3572, column: 13, scope: !15050)
!15053 = !DILocation(line: 3572, column: 26, scope: !15044)
!15054 = !DILocation(line: 3572, column: 38, scope: !15044)
!15055 = !DILocation(line: 3573, column: 27, scope: !15050)
!15056 = !DILocation(line: 3573, column: 9, scope: !15050)
!15057 = !DILocation(line: 3574, column: 6, scope: !15044)
!15058 = distinct !DISubprogram(name: "deref_mut", linkageName: "_ZN67_$LT$alloc..wtf8..Wtf8Buf$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17he36b4d95503fd57aE", scope: !15059, file: !9413, line: 61, type: !11935, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15060)
!15059 = !DINamespace(name: "{impl#1}", scope: !9415)
!15060 = !{!15061}
!15061 = !DILocalVariable(name: "self", arg: 1, scope: !15058, file: !9413, line: 61, type: !11670)
!15062 = !DILocation(line: 61, column: 18, scope: !15058)
!15063 = !DILocation(line: 62, column: 14, scope: !15058)
!15064 = !DILocation(line: 63, column: 6, scope: !15058)
!15065 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN68_$LT$alloc..string..FromUtf16Error$u20$as$u20$core..fmt..Display$GT$3fmt17h5ca86bbfd8a8be61E", scope: !15066, file: !9348, line: 2275, type: !15067, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15070)
!15066 = !DINamespace(name: "{impl#3}", scope: !179)
!15067 = !DISubroutineType(types: !15068)
!15068 = !{!334, !15069, !351}
!15069 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::string::FromUtf16Error", baseType: !8680, size: 32, align: 32, dwarfAddressSpace: 0)
!15070 = !{!15071, !15072}
!15071 = !DILocalVariable(name: "self", arg: 1, scope: !15065, file: !9348, line: 2275, type: !15069)
!15072 = !DILocalVariable(name: "f", arg: 2, scope: !15065, file: !9348, line: 2275, type: !351)
!15073 = !DILocation(line: 2275, column: 12, scope: !15065)
!15074 = !DILocation(line: 2275, column: 19, scope: !15065)
!15075 = !DILocation(line: 2276, column: 9, scope: !15065)
!15076 = !DILocation(line: 2277, column: 6, scope: !15065)
!15077 = distinct !DISubprogram(name: "eq", linkageName: "_ZN68_$LT$core..alloc..layout..Layout$u20$as$u20$core..cmp..PartialEq$GT$2eq17hd0e3def2e6f7d49aE", scope: !15078, file: !6847, line: 38, type: !15079, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15081)
!15078 = !DINamespace(name: "{impl#7}", scope: !40)
!15079 = !DISubroutineType(types: !15080)
!15080 = !{!643, !38, !38}
!15081 = !{!15082, !15083}
!15082 = !DILocalVariable(name: "self", arg: 1, scope: !15077, file: !6847, line: 38, type: !38)
!15083 = !DILocalVariable(name: "other", arg: 2, scope: !15077, file: !6847, line: 38, type: !38)
!15084 = !DILocation(line: 38, column: 30, scope: !15077)
!15085 = !DILocation(line: 42, column: 5, scope: !15077)
!15086 = !DILocation(line: 51, column: 5, scope: !15077)
!15087 = !DILocation(line: 38, column: 39, scope: !15077)
!15088 = distinct !DISubprogram(name: "default", linkageName: "_ZN69_$LT$$RF$core..ffi..c_str..CStr$u20$as$u20$core..default..Default$GT$7default17h1828ea215b778f2bE", scope: !15089, file: !2274, line: 181, type: !15090, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21)
!15089 = !DINamespace(name: "{impl#4}", scope: !416)
!15090 = !DISubroutineType(types: !15091)
!15091 = !{!411}
!15092 = !DILocation(line: 183, column: 6, scope: !15088)
!15093 = distinct !DISubprogram(name: "default", linkageName: "_ZN69_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..default..Default$GT$7default17h8d5d960cd7398d69E", scope: !15094, file: !398, line: 740, type: !15095, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15097)
!15094 = !DINamespace(name: "{impl#6}", scope: !400)
!15095 = !DISubroutineType(types: !15096)
!15096 = !{!404}
!15097 = !{!15098}
!15098 = !DILocalVariable(name: "a", scope: !15099, file: !398, line: 741, type: !411, align: 32)
!15099 = distinct !DILexicalBlock(scope: !15093, file: !398, line: 741, column: 9)
!15100 = !DILocation(line: 741, column: 24, scope: !15093)
!15101 = !DILocation(line: 741, column: 13, scope: !15099)
!15102 = !DILocation(line: 742, column: 11, scope: !15099)
!15103 = !DILocation(line: 743, column: 6, scope: !15093)
!15104 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9c3b9e5e8807b552E", scope: !15105, file: !10746, line: 4042, type: !10892, scopeLine: 4042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15106)
!15105 = !DINamespace(name: "{impl#25}", scope: !183)
!15106 = !{!15107}
!15107 = !DILocalVariable(name: "self", arg: 1, scope: !15104, file: !10746, line: 4042, type: !1608)
!15108 = !DILocation(line: 4042, column: 13, scope: !15104)
!15109 = !DILocation(line: 4047, column: 67, scope: !15104)
!15110 = !DILocation(line: 4047, column: 81, scope: !15104)
!15111 = !DILocation(line: 4047, column: 32, scope: !15104)
!15112 = !DILocation(line: 4050, column: 6, scope: !15104)
!15113 = distinct !DISubprogram(name: "eq<u8>", linkageName: "_ZN70_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h93b587d97881e664E", scope: !15114, file: !1685, line: 2356, type: !15115, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !15117)
!15114 = !DINamespace(name: "{impl#15}", scope: !14)
!15115 = !DISubroutineType(types: !15116)
!15116 = !{!643, !12, !12}
!15117 = !{!15118, !15119, !15120, !15122}
!15118 = !DILocalVariable(name: "self", arg: 1, scope: !15113, file: !1685, line: 2356, type: !12)
!15119 = !DILocalVariable(name: "other", arg: 2, scope: !15113, file: !1685, line: 2356, type: !12)
!15120 = !DILocalVariable(name: "l", scope: !15121, file: !1685, line: 2360, type: !244, align: 32)
!15121 = distinct !DILexicalBlock(scope: !15113, file: !1685, line: 2360, column: 13)
!15122 = !DILocalVariable(name: "r", scope: !15121, file: !1685, line: 2360, type: !244, align: 32)
!15123 = !DILocation(line: 2356, column: 11, scope: !15113)
!15124 = !DILocation(line: 2356, column: 18, scope: !15113)
!15125 = !DILocation(line: 2359, column: 15, scope: !15113)
!15126 = !DILocation(line: 2359, column: 9, scope: !15113)
!15127 = !DILocation(line: 2365, column: 6, scope: !15113)
!15128 = !DILocation(line: 2360, column: 19, scope: !15113)
!15129 = !DILocation(line: 2360, column: 19, scope: !15121)
!15130 = !DILocation(line: 2360, column: 28, scope: !15113)
!15131 = !DILocation(line: 2360, column: 28, scope: !15121)
!15132 = !DILocation(line: 2360, column: 35, scope: !15121)
!15133 = !DILocation(line: 2361, column: 32, scope: !15113)
!15134 = distinct !DISubprogram(name: "deref<str>", linkageName: "_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17ha57eaecb76d8c235E", scope: !15135, file: !12857, line: 338, type: !15136, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !3465, retainedNodes: !15139)
!15135 = !DINamespace(name: "{impl#4}", scope: !3457)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{!124, !15138}
!15138 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::borrow::Cow<str>", baseType: !3456, size: 32, align: 32, dwarfAddressSpace: 0)
!15139 = !{!15140, !15141, !15143}
!15140 = !DILocalVariable(name: "self", arg: 1, scope: !15134, file: !12857, line: 338, type: !15138)
!15141 = !DILocalVariable(name: "borrowed", scope: !15142, file: !12857, line: 340, type: !124, align: 32)
!15142 = distinct !DILexicalBlock(scope: !15134, file: !12857, line: 340, column: 13)
!15143 = !DILocalVariable(name: "owned", scope: !15144, file: !12857, line: 341, type: !9373, align: 32)
!15144 = distinct !DILexicalBlock(scope: !15134, file: !12857, line: 341, column: 13)
!15145 = !DILocation(line: 338, column: 14, scope: !15134)
!15146 = !DILocation(line: 339, column: 15, scope: !15134)
!15147 = !DILocation(line: 339, column: 9, scope: !15134)
!15148 = !DILocation(line: 341, column: 19, scope: !15134)
!15149 = !DILocation(line: 341, column: 19, scope: !15144)
!15150 = !DILocation(line: 341, column: 39, scope: !15144)
!15151 = !DILocation(line: 341, column: 33, scope: !15144)
!15152 = !DILocation(line: 341, column: 46, scope: !15134)
!15153 = !DILocation(line: 340, column: 22, scope: !15134)
!15154 = !DILocation(line: 340, column: 22, scope: !15142)
!15155 = !DILocation(line: 340, column: 35, scope: !15142)
!15156 = !DILocation(line: 340, column: 42, scope: !15134)
!15157 = !DILocation(line: 343, column: 6, scope: !15134)
!15158 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN72_$LT$$RF$str$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hb794895461dcdcc5E", scope: !15159, file: !398, line: 300, type: !15161, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15178)
!15159 = !DINamespace(name: "{impl#2}", scope: !15160)
!15160 = !DINamespace(name: "new", scope: !8640)
!15161 = !DISubroutineType(types: !15162)
!15162 = !{!15163, !124}
!15163 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<alloc::ffi::c_str::CString, alloc::ffi::c_str::NulError>", scope: !335, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !15164, templateParams: !21, identifier: "be2179c140624415f9168dac9584f4fa")
!15164 = !{!15165}
!15165 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15163, file: !2, size: 128, align: 32, elements: !15166, templateParams: !21, identifier: "2eefba2619ae6b0f8c030cb01f3b014e", discriminator: !15177)
!15166 = !{!15167, !15173}
!15167 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !15165, file: !2, baseType: !15168, size: 128, align: 32, extraData: i32 -2147483648)
!15168 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !15163, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !15169, templateParams: !15171, identifier: "eb67c4be82f9696acb6fcc690d654948")
!15169 = !{!15170}
!15170 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15168, file: !2, baseType: !404, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!15171 = !{!10076, !15172}
!15172 = !DITemplateTypeParameter(name: "E", type: !10286)
!15173 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !15165, file: !2, baseType: !15174, size: 128, align: 32)
!15174 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !15163, file: !2, size: 128, align: 32, flags: DIFlagPublic, elements: !15175, templateParams: !15171, identifier: "dc88b096e78e4baf9c1c8f62a67a694")
!15175 = !{!15176}
!15176 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15174, file: !2, baseType: !10286, size: 128, align: 32, flags: DIFlagPublic)
!15177 = !DIDerivedType(tag: DW_TAG_member, scope: !15163, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15178 = !{!15179}
!15179 = !DILocalVariable(name: "self", arg: 1, scope: !15158, file: !398, line: 300, type: !124)
!15180 = !DILocation(line: 300, column: 30, scope: !15158)
!15181 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !15182)
!15182 = distinct !DILocation(line: 301, column: 42, scope: !15158)
!15183 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !15182)
!15184 = !DILocation(line: 301, column: 42, scope: !15158)
!15185 = !DILocalVariable(name: "bytes", arg: 1, scope: !15186, file: !398, line: 273, type: !432)
!15186 = distinct !DISubprogram(name: "spec_new_impl_bytes", linkageName: "_ZN5alloc3ffi5c_str7CString3new19spec_new_impl_bytes17h59e44c714b27adb0E", scope: !15160, file: !398, line: 273, type: !15187, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15189)
!15187 = !DISubroutineType(types: !15188)
!15188 = !{!15163, !432}
!15189 = !{!15185, !15190, !15192, !15194}
!15190 = !DILocalVariable(name: "capacity", scope: !15191, file: !398, line: 278, type: !9, align: 32)
!15191 = distinct !DILexicalBlock(scope: !15186, file: !398, line: 278, column: 13)
!15192 = !DILocalVariable(name: "buffer", scope: !15193, file: !398, line: 282, type: !182, align: 32)
!15193 = distinct !DILexicalBlock(scope: !15191, file: !398, line: 282, column: 13)
!15194 = !DILocalVariable(name: "i", scope: !15195, file: !398, line: 288, type: !9, align: 32)
!15195 = distinct !DILexicalBlock(scope: !15193, file: !398, line: 288, column: 17)
!15196 = !DILocation(line: 273, column: 32, scope: !15186, inlinedAt: !15197)
!15197 = distinct !DILocation(line: 301, column: 17, scope: !15158)
!15198 = !DILocation(line: 282, column: 17, scope: !15193, inlinedAt: !15197)
!15199 = !DILocation(line: 278, column: 40, scope: !15186, inlinedAt: !15197)
!15200 = !DILocation(line: 1012, column: 25, scope: !10233, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 278, column: 55, scope: !15186, inlinedAt: !15197)
!15202 = !DILocation(line: 1013, column: 15, scope: !10233, inlinedAt: !15201)
!15203 = !DILocation(line: 1013, column: 9, scope: !10233, inlinedAt: !15201)
!15204 = !DILocation(line: 1015, column: 21, scope: !10233, inlinedAt: !15201)
!15205 = !DILocation(line: 1014, column: 18, scope: !10233, inlinedAt: !15201)
!15206 = !DILocation(line: 1014, column: 18, scope: !10239, inlinedAt: !15201)
!15207 = !DILocation(line: 278, column: 55, scope: !15186, inlinedAt: !15197)
!15208 = !DILocation(line: 278, column: 17, scope: !15191, inlinedAt: !15197)
!15209 = !DILocation(line: 282, column: 30, scope: !15191, inlinedAt: !15197)
!15210 = !DILocation(line: 283, column: 20, scope: !15193, inlinedAt: !15197)
!15211 = !DILocation(line: 287, column: 19, scope: !15193, inlinedAt: !15197)
!15212 = !DILocation(line: 287, column: 13, scope: !15193, inlinedAt: !15197)
!15213 = !DILocation(line: 288, column: 22, scope: !15193, inlinedAt: !15197)
!15214 = !DILocation(line: 288, column: 22, scope: !15195, inlinedAt: !15197)
!15215 = !DILocation(line: 288, column: 44, scope: !15195, inlinedAt: !15197)
!15216 = !DILocation(line: 288, column: 32, scope: !15195, inlinedAt: !15197)
!15217 = !DILocation(line: 288, column: 28, scope: !15195, inlinedAt: !15197)
!15218 = !DILocation(line: 288, column: 51, scope: !15193, inlinedAt: !15197)
!15219 = !DILocation(line: 289, column: 66, scope: !15193, inlinedAt: !15197)
!15220 = !DILocation(line: 289, column: 37, scope: !15193, inlinedAt: !15197)
!15221 = !DILocation(line: 289, column: 25, scope: !15193, inlinedAt: !15197)
!15222 = !DILocation(line: 289, column: 75, scope: !15193, inlinedAt: !15197)
!15223 = !DILocation(line: 302, column: 14, scope: !15158)
!15224 = distinct !DISubprogram(name: "drop<[u8], alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3a138a3c13a5f3d4E", scope: !15225, file: !12381, line: 1677, type: !15226, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15228)
!15225 = !DINamespace(name: "{impl#8}", scope: !175)
!15226 = !DISubroutineType(types: !15227)
!15227 = !{null, !2644}
!15228 = !{!15229, !15230, !15232}
!15229 = !DILocalVariable(name: "self", arg: 1, scope: !15224, file: !12381, line: 1677, type: !2644)
!15230 = !DILocalVariable(name: "ptr", scope: !15231, file: !12381, line: 1680, type: !3644, align: 32)
!15231 = distinct !DILexicalBlock(scope: !15224, file: !12381, line: 1680, column: 9)
!15232 = !DILocalVariable(name: "layout", scope: !15233, file: !12381, line: 1683, type: !39, align: 32)
!15233 = distinct !DILexicalBlock(scope: !15231, file: !12381, line: 1683, column: 13)
!15234 = !DILocation(line: 1677, column: 13, scope: !15224)
!15235 = !DILocation(line: 1683, column: 17, scope: !15233)
!15236 = !DILocation(line: 1680, column: 19, scope: !15224)
!15237 = !DILocation(line: 1680, column: 13, scope: !15231)
!15238 = !DILocation(line: 1683, column: 52, scope: !15231)
!15239 = !DILocation(line: 1683, column: 26, scope: !15231)
!15240 = !DILocation(line: 1684, column: 23, scope: !15233)
!15241 = !DILocation(line: 1684, column: 16, scope: !15233)
!15242 = !DILocation(line: 1688, column: 6, scope: !15224)
!15243 = !DILocation(line: 1685, column: 17, scope: !15233)
!15244 = !DILocation(line: 1685, column: 50, scope: !15233)
!15245 = !DILocation(line: 1685, column: 35, scope: !15233)
!15246 = !DILocation(line: 1685, column: 24, scope: !15233)
!15247 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN72_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h6f54678d7244f71aE", scope: !15248, file: !9348, line: 3433, type: !13013, scopeLine: 3433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15249)
!15248 = !DINamespace(name: "{impl#68}", scope: !179)
!15249 = !{!15250}
!15250 = !DILocalVariable(name: "self", arg: 1, scope: !15247, file: !9348, line: 3433, type: !9352)
!15251 = !DILocation(line: 3433, column: 15, scope: !15247)
!15252 = !DILocation(line: 3434, column: 14, scope: !15247)
!15253 = !DILocation(line: 3435, column: 6, scope: !15247)
!15254 = distinct !DISubprogram(name: "deref<u8, alloc::alloc::Global>", linkageName: "_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hb44486971727c0b1E", scope: !15255, file: !10746, line: 3552, type: !11224, scopeLine: 3552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15256)
!15255 = !DINamespace(name: "{impl#8}", scope: !183)
!15256 = !{!15257}
!15257 = !DILocalVariable(name: "self", arg: 1, scope: !15254, file: !10746, line: 3552, type: !10796)
!15258 = !DILocation(line: 3552, column: 14, scope: !15254)
!15259 = !DILocation(line: 3553, column: 14, scope: !15254)
!15260 = !DILocation(line: 3554, column: 6, scope: !15254)
!15261 = distinct !DISubprogram(name: "eq", linkageName: "_ZN72_$LT$core..ptr..alignment..Alignment$u20$as$u20$core..cmp..PartialEq$GT$2eq17hb62fda63794d933cE", scope: !15262, file: !4425, line: 13, type: !15263, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15265)
!15262 = !DINamespace(name: "{impl#13}", scope: !46)
!15263 = !DISubroutineType(types: !15264)
!15264 = !{!643, !235, !235}
!15265 = !{!15266, !15267}
!15266 = !DILocalVariable(name: "self", arg: 1, scope: !15261, file: !4425, line: 13, type: !235)
!15267 = !DILocalVariable(name: "other", arg: 2, scope: !15261, file: !4425, line: 13, type: !235)
!15268 = !DILocation(line: 13, column: 23, scope: !15261)
!15269 = !DILocation(line: 15, column: 22, scope: !15261)
!15270 = !DILocation(line: 13, column: 32, scope: !15261)
!15271 = distinct !DISubprogram(name: "into_searcher", linkageName: "_ZN73_$LT$$RF$alloc..string..String$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hbae47ef2e9cd09ceE", scope: !15272, file: !9348, line: 2510, type: !15273, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15275)
!15272 = !DINamespace(name: "{impl#21}", scope: !179)
!15273 = !DISubroutineType(types: !15274)
!15274 = !{!9283, !9373, !124}
!15275 = !{!15276, !15277}
!15276 = !DILocalVariable(name: "self", arg: 1, scope: !15271, file: !9348, line: 2510, type: !9373)
!15277 = !DILocalVariable(name: "haystack", arg: 2, scope: !15271, file: !9348, line: 2510, type: !124)
!15278 = !DILocation(line: 2510, column: 22, scope: !15271)
!15279 = !DILocation(line: 2510, column: 28, scope: !15271)
!15280 = !DILocation(line: 2511, column: 13, scope: !15271)
!15281 = !DILocation(line: 2511, column: 18, scope: !15271)
!15282 = !DILocation(line: 2512, column: 6, scope: !15271)
!15283 = distinct !DISubprogram(name: "source", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..error..Error$GT$6source17hb4e9baf2af8e7869E", scope: !15284, file: !398, line: 1291, type: !15285, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15287)
!15284 = !DINamespace(name: "{impl#49}", scope: !400)
!15285 = !DISubroutineType(types: !15286)
!15286 = !{!7281, !9940}
!15287 = !{!15288}
!15288 = !DILocalVariable(name: "self", arg: 1, scope: !15283, file: !398, line: 1291, type: !9940)
!15289 = !DILocation(line: 1291, column: 15, scope: !15283)
!15290 = !DILocation(line: 1292, column: 14, scope: !15283)
!15291 = !DILocation(line: 1293, column: 6, scope: !15283)
!15292 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN73_$LT$alloc..ffi..c_str..IntoStringError$u20$as$u20$core..fmt..Display$GT$3fmt17h1515f6af58074e3bE", scope: !15293, file: !398, line: 1063, type: !15294, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15296)
!15293 = !DINamespace(name: "{impl#33}", scope: !400)
!15294 = !DISubroutineType(types: !15295)
!15295 = !{!334, !9940, !351}
!15296 = !{!15297, !15298}
!15297 = !DILocalVariable(name: "self", arg: 1, scope: !15292, file: !398, line: 1063, type: !9940)
!15298 = !DILocalVariable(name: "f", arg: 2, scope: !15292, file: !398, line: 1063, type: !351)
!15299 = !DILocation(line: 1063, column: 12, scope: !15292)
!15300 = !DILocation(line: 1063, column: 19, scope: !15292)
!15301 = !DILocation(line: 1064, column: 45, scope: !15292)
!15302 = !DILocation(line: 1065, column: 6, scope: !15292)
!15303 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN74_$LT$alloc..collections..TryReserveError$u20$as$u20$core..fmt..Display$GT$3fmt17hdcfc576ce9026c7bE", scope: !15304, file: !1579, line: 154, type: !15305, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15307)
!15304 = !DINamespace(name: "{impl#3}", scope: !1356)
!15305 = !DISubroutineType(types: !15306)
!15306 = !{!334, !9442, !351}
!15307 = !{!15308, !15309, !15310, !15325, !15327}
!15308 = !DILocalVariable(name: "self", arg: 1, scope: !15303, file: !1579, line: 155, type: !9442)
!15309 = !DILocalVariable(name: "fmt", arg: 2, scope: !15303, file: !1579, line: 156, type: !351)
!15310 = !DILocalVariable(name: "residual", scope: !15311, file: !1579, line: 158, type: !15312, align: 8)
!15311 = distinct !DILexicalBlock(scope: !15303, file: !1579, line: 158, column: 50)
!15312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<core::convert::Infallible, core::fmt::Error>", scope: !335, file: !2, align: 8, flags: DIFlagPublic, elements: !15313, templateParams: !21, identifier: "5896b5b00a3a746f65fcbfc91a17bd96")
!15313 = !{!15314}
!15314 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15312, file: !2, align: 8, elements: !15315, templateParams: !21, identifier: "afebf2a40c1a304b8b74cfde7e7294e9")
!15315 = !{!15316, !15321}
!15316 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !15314, file: !2, baseType: !15317, align: 8)
!15317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !15312, file: !2, align: 8, flags: DIFlagPublic, elements: !15318, templateParams: !15320, identifier: "baf8385ab2a4a5981bf4a13c8bf5ccc4")
!15318 = !{!15319}
!15319 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15317, file: !2, baseType: !969, align: 8, flags: DIFlagPublic)
!15320 = !{!974, !344}
!15321 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !15314, file: !2, baseType: !15322, align: 8)
!15322 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !15312, file: !2, align: 8, flags: DIFlagPublic, elements: !15323, templateParams: !15320, identifier: "9caa33db57153cab1df75edd0352b22d")
!15323 = !{!15324}
!15324 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15322, file: !2, baseType: !345, align: 8, flags: DIFlagPublic)
!15325 = !DILocalVariable(name: "val", scope: !15326, file: !1579, line: 158, type: !7, align: 8)
!15326 = distinct !DILexicalBlock(scope: !15303, file: !1579, line: 158, column: 9)
!15327 = !DILocalVariable(name: "reason", scope: !15328, file: !1579, line: 159, type: !124, align: 32)
!15328 = distinct !DILexicalBlock(scope: !15303, file: !1579, line: 159, column: 9)
!15329 = !DILocation(line: 155, column: 9, scope: !15303)
!15330 = !DILocation(line: 156, column: 9, scope: !15303)
!15331 = !DILocation(line: 159, column: 13, scope: !15328)
!15332 = !DILocation(line: 158, column: 50, scope: !15311)
!15333 = !DILocation(line: 158, column: 9, scope: !15326)
!15334 = !DILocation(line: 158, column: 13, scope: !15303)
!15335 = !DILocation(line: 158, column: 9, scope: !15303)
!15336 = !DILocation(line: 158, column: 9, scope: !15311)
!15337 = !DILocation(line: 159, column: 28, scope: !15303)
!15338 = !DILocation(line: 159, column: 22, scope: !15303)
!15339 = !DILocation(line: 164, column: 17, scope: !15303)
!15340 = !DILocation(line: 165, column: 13, scope: !15303)
!15341 = !DILocation(line: 161, column: 17, scope: !15303)
!15342 = !DILocation(line: 167, column: 23, scope: !15328)
!15343 = !DILocation(line: 167, column: 13, scope: !15328)
!15344 = !DILocation(line: 168, column: 6, scope: !15303)
!15345 = !DILocation(line: 0, scope: !15346)
!15346 = !DILexicalBlockFile(scope: !15303, file: !4885, discriminator: 0)
!15347 = distinct !DISubprogram(name: "index<core::ops::range::RangeFull>", linkageName: "_ZN74_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h37c79d989a4cc233E", scope: !15348, file: !9348, line: 2693, type: !15349, scopeLine: 2693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !15354, retainedNodes: !15351)
!15348 = !DINamespace(name: "{impl#28}", scope: !179)
!15349 = !DISubroutineType(types: !15350)
!15350 = !{!124, !9373, !4994, !1241}
!15351 = !{!15352, !15353}
!15352 = !DILocalVariable(name: "self", arg: 1, scope: !15347, file: !9348, line: 2693, type: !9373)
!15353 = !DILocalVariable(name: "index", arg: 2, scope: !15347, file: !9348, line: 2693, type: !4994)
!15354 = !{!15355}
!15355 = !DITemplateTypeParameter(name: "I", type: !4994)
!15356 = !DILocation(line: 2693, column: 14, scope: !15347)
!15357 = !DILocation(line: 2693, column: 21, scope: !15347)
!15358 = !DILocation(line: 2694, column: 26, scope: !15347)
!15359 = !DILocation(line: 2694, column: 15, scope: !15347)
!15360 = !DILocation(line: 2695, column: 6, scope: !15347)
!15361 = distinct !DISubprogram(name: "spec_write_fmt<alloc::string::String>", linkageName: "_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h9a8986ae569912f1E", scope: !15362, file: !2175, line: 230, type: !2382, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !15369, retainedNodes: !15364)
!15362 = !DINamespace(name: "{impl#1}", scope: !15363)
!15363 = !DINamespace(name: "write_fmt", scope: !2381)
!15364 = !{!15365, !15366, !15367}
!15365 = !DILocalVariable(name: "self", arg: 1, scope: !15361, file: !2175, line: 230, type: !567)
!15366 = !DILocalVariable(name: "args", arg: 2, scope: !15361, file: !2175, line: 230, type: !2384)
!15367 = !DILocalVariable(name: "s", scope: !15368, file: !2175, line: 231, type: !124, align: 32)
!15368 = distinct !DILexicalBlock(scope: !15361, file: !2175, line: 231, column: 65)
!15369 = !{!15370}
!15370 = !DITemplateTypeParameter(name: "W", type: !178)
!15371 = !DILocation(line: 230, column: 31, scope: !15361)
!15372 = !DILocation(line: 230, column: 37, scope: !15361)
!15373 = !DILocation(line: 231, column: 39, scope: !15368)
!15374 = !DILocation(line: 231, column: 34, scope: !15368)
!15375 = !DILocation(line: 231, column: 24, scope: !15368)
!15376 = !DILocation(line: 231, column: 29, scope: !15368)
!15377 = !DILocation(line: 232, column: 26, scope: !15368)
!15378 = !DILocation(line: 234, column: 21, scope: !15361)
!15379 = !DILocation(line: 236, column: 14, scope: !15361)
!15380 = !DILocation(line: 230, column: 13, scope: !15361)
!15381 = distinct !DISubprogram(name: "clone_into<u8, alloc::alloc::Global>", linkageName: "_ZN75_$LT$$u5b$T$u5d$$u20$as$u20$alloc..slice..SpecCloneIntoVec$LT$T$C$A$GT$$GT$10clone_into17h0c90bb795dd72c5eE", scope: !15382, file: !12800, line: 826, type: !12841, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15383)
!15382 = !DINamespace(name: "{impl#8}", scope: !12802)
!15383 = !{!15384, !15385}
!15384 = !DILocalVariable(name: "self", arg: 1, scope: !15381, file: !12800, line: 826, type: !432)
!15385 = !DILocalVariable(name: "target", arg: 2, scope: !15381, file: !12800, line: 826, type: !1608)
!15386 = !DILocation(line: 826, column: 19, scope: !15381)
!15387 = !DILocation(line: 826, column: 26, scope: !15381)
!15388 = !DILocation(line: 827, column: 16, scope: !15381)
!15389 = !DILocation(line: 828, column: 16, scope: !15381)
!15390 = !DILocation(line: 829, column: 6, scope: !15381)
!15391 = distinct !DISubprogram(name: "deref_mut<u8, alloc::alloc::Global>", linkageName: "_ZN75_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..DerefMut$GT$9deref_mut17h5816c49960636028E", scope: !15392, file: !10746, line: 3560, type: !10869, scopeLine: 3560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15393)
!15392 = !DINamespace(name: "{impl#9}", scope: !183)
!15393 = !{!15394}
!15394 = !DILocalVariable(name: "self", arg: 1, scope: !15391, file: !10746, line: 3560, type: !1608)
!15395 = !DILocation(line: 3560, column: 18, scope: !15391)
!15396 = !DILocation(line: 3561, column: 14, scope: !15391)
!15397 = !DILocation(line: 3562, column: 6, scope: !15391)
!15398 = distinct !DISubprogram(name: "from", linkageName: "_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hae2059870cb2adf7E", scope: !15399, file: !9348, line: 3005, type: !10502, scopeLine: 3005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15400)
!15399 = !DINamespace(name: "{impl#43}", scope: !179)
!15400 = !{!15401}
!15401 = !DILocalVariable(name: "s", arg: 1, scope: !15398, file: !9348, line: 3005, type: !124)
!15402 = !DILocation(line: 3005, column: 13, scope: !15398)
!15403 = !DILocation(line: 3006, column: 11, scope: !15398)
!15404 = !DILocation(line: 3007, column: 6, scope: !15398)
!15405 = distinct !DISubprogram(name: "eq", linkageName: "_ZN76_$LT$core..ptr..alignment..AlignmentEnum$u20$as$u20$core..cmp..PartialEq$GT$2eq17h63514dc09bafced2E", scope: !15406, file: !4425, line: 269, type: !15407, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15410)
!15406 = !DINamespace(name: "{impl#18}", scope: !46)
!15407 = !DISubroutineType(types: !15408)
!15408 = !{!643, !15409, !15409}
!15409 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::alignment::AlignmentEnum", baseType: !50, size: 32, align: 32, dwarfAddressSpace: 0)
!15410 = !{!15411, !15412, !15413, !15415}
!15411 = !DILocalVariable(name: "self", arg: 1, scope: !15405, file: !4425, line: 269, type: !15409)
!15412 = !DILocalVariable(name: "other", arg: 2, scope: !15405, file: !4425, line: 269, type: !15409)
!15413 = !DILocalVariable(name: "__self_discr", scope: !15414, file: !4425, line: 269, type: !9, align: 32)
!15414 = distinct !DILexicalBlock(scope: !15405, file: !4425, line: 269, column: 23)
!15415 = !DILocalVariable(name: "__arg1_discr", scope: !15416, file: !4425, line: 269, type: !9, align: 32)
!15416 = distinct !DILexicalBlock(scope: !15414, file: !4425, line: 269, column: 23)
!15417 = !DILocation(line: 269, column: 23, scope: !15405)
!15418 = !DILocation(line: 269, column: 23, scope: !15414)
!15419 = !DILocation(line: 269, column: 23, scope: !15416)
!15420 = !DILocation(line: 269, column: 32, scope: !15405)
!15421 = distinct !DISubprogram(name: "add_assign", linkageName: "_ZN77_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$GT$10add_assign17h3381c531bf60d46bE", scope: !15422, file: !12857, line: 499, type: !15423, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15425)
!15422 = !DINamespace(name: "{impl#20}", scope: !3457)
!15423 = !DISubroutineType(types: !15424)
!15424 = !{null, !12881, !3456}
!15425 = !{!15426, !15427, !15428, !15430}
!15426 = !DILocalVariable(name: "self", arg: 1, scope: !15421, file: !12857, line: 499, type: !12881)
!15427 = !DILocalVariable(name: "rhs", arg: 2, scope: !15421, file: !12857, line: 499, type: !3456)
!15428 = !DILocalVariable(name: "lhs", scope: !15429, file: !12857, line: 503, type: !124, align: 32)
!15429 = distinct !DILexicalBlock(scope: !15421, file: !12857, line: 503, column: 47)
!15430 = !DILocalVariable(name: "s", scope: !15431, file: !12857, line: 504, type: !178, align: 32)
!15431 = distinct !DILexicalBlock(scope: !15429, file: !12857, line: 504, column: 17)
!15432 = !DILocation(line: 499, column: 19, scope: !15421)
!15433 = !DILocation(line: 499, column: 30, scope: !15421)
!15434 = !DILocation(line: 504, column: 21, scope: !15431)
!15435 = !DILocation(line: 500, column: 12, scope: !15421)
!15436 = !DILocation(line: 500, column: 17, scope: !15421)
!15437 = !DILocation(line: 502, column: 20, scope: !15421)
!15438 = !DILocation(line: 502, column: 24, scope: !15421)
!15439 = !DILocation(line: 501, column: 21, scope: !15421)
!15440 = !DILocation(line: 501, column: 13, scope: !15421)
!15441 = !DILocation(line: 500, column: 9, scope: !15421)
!15442 = !DILocation(line: 503, column: 41, scope: !15429)
!15443 = !DILocation(line: 503, column: 20, scope: !15429)
!15444 = !DILocation(line: 510, column: 5, scope: !15421)
!15445 = !DILocation(line: 508, column: 18, scope: !15421)
!15446 = !DILocation(line: 508, column: 36, scope: !15421)
!15447 = !DILocation(line: 508, column: 27, scope: !15421)
!15448 = !DILocation(line: 503, column: 34, scope: !15429)
!15449 = !DILocation(line: 504, column: 55, scope: !15429)
!15450 = !DILocation(line: 504, column: 63, scope: !15429)
!15451 = !DILocation(line: 504, column: 67, scope: !15429)
!15452 = !DILocation(line: 504, column: 51, scope: !15429)
!15453 = !DILocation(line: 504, column: 29, scope: !15429)
!15454 = !DILocation(line: 505, column: 19, scope: !15431)
!15455 = !DILocation(line: 506, column: 36, scope: !15431)
!15456 = !DILocation(line: 506, column: 25, scope: !15431)
!15457 = !DILocation(line: 506, column: 17, scope: !15431)
!15458 = !DILocation(line: 503, column: 13, scope: !15421)
!15459 = !DILocation(line: 499, column: 5, scope: !15421)
!15460 = !DILocation(line: 510, column: 6, scope: !15421)
!15461 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN77_$LT$alloc..ffi..c_str..FromVecWithNulError$u20$as$u20$core..fmt..Display$GT$3fmt17h6f0d4511115bec6cE", scope: !15462, file: !398, line: 1032, type: !15463, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15465)
!15462 = !DINamespace(name: "{impl#31}", scope: !400)
!15463 = !DISubroutineType(types: !15464)
!15464 = !{!334, !9983, !351}
!15465 = !{!15466, !15467, !15468, !15470, !15473}
!15466 = !DILocalVariable(name: "self", arg: 1, scope: !15461, file: !398, line: 1032, type: !9983)
!15467 = !DILocalVariable(name: "f", arg: 2, scope: !15461, file: !398, line: 1032, type: !351)
!15468 = !DILocalVariable(name: "pos", scope: !15469, file: !398, line: 1034, type: !9, align: 32)
!15469 = distinct !DILexicalBlock(scope: !15461, file: !398, line: 1034, column: 13)
!15470 = !DILocalVariable(name: "args", scope: !15471, file: !398, line: 1035, type: !305, align: 32)
!15471 = !DILexicalBlockFile(scope: !15472, file: !398, discriminator: 0)
!15472 = distinct !DILexicalBlock(scope: !15469, file: !2304, line: 612, column: 24)
!15473 = !DILocalVariable(name: "args", scope: !15474, file: !398, line: 1035, type: !311, align: 32)
!15474 = !DILexicalBlockFile(scope: !15475, file: !398, discriminator: 0)
!15475 = distinct !DILexicalBlock(scope: !15472, file: !2304, line: 612, column: 24)
!15476 = !DILocation(line: 1032, column: 12, scope: !15461)
!15477 = !DILocation(line: 1032, column: 19, scope: !15461)
!15478 = !DILocation(line: 1034, column: 52, scope: !15469)
!15479 = !DILocation(line: 1035, column: 17, scope: !15474)
!15480 = !DILocation(line: 1033, column: 15, scope: !15461)
!15481 = !DILocation(line: 1033, column: 9, scope: !15461)
!15482 = !DILocation(line: 1038, column: 17, scope: !15461)
!15483 = !DILocation(line: 1034, column: 52, scope: !15461)
!15484 = !DILocation(line: 1035, column: 17, scope: !15469)
!15485 = !DILocation(line: 1035, column: 17, scope: !15471)
!15486 = !DILocation(line: 1041, column: 6, scope: !15461)
!15487 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b274ca7b30f6b82E", scope: !15488, file: !13553, line: 402, type: !13780, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15489)
!15488 = !DINamespace(name: "{impl#3}", scope: !187)
!15489 = !{!15490}
!15490 = !DILocalVariable(name: "self", arg: 1, scope: !15487, file: !13553, line: 402, type: !13659)
!15491 = !DILocation(line: 402, column: 13, scope: !15487)
!15492 = !DILocation(line: 404, column: 29, scope: !15487)
!15493 = !DILocation(line: 405, column: 6, scope: !15487)
!15494 = distinct !DISubprogram(name: "clone", linkageName: "_ZN78_$LT$alloc..collections..TryReserveErrorKind$u20$as$u20$core..clone..Clone$GT$5clone17ha86a7b1c990e0e9fE", scope: !15495, file: !1579, line: 93, type: !15496, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15499)
!15495 = !DINamespace(name: "{impl#10}", scope: !1356)
!15496 = !DISubroutineType(types: !15497)
!15497 = !{!1586, !15498}
!15498 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::TryReserveErrorKind", baseType: !1586, size: 32, align: 32, dwarfAddressSpace: 0)
!15499 = !{!15500, !15501, !15503}
!15500 = !DILocalVariable(name: "self", arg: 1, scope: !15494, file: !1579, line: 93, type: !15498)
!15501 = !DILocalVariable(name: "__self_0", scope: !15502, file: !1579, line: 108, type: !38, align: 32)
!15502 = distinct !DILexicalBlock(scope: !15494, file: !1579, line: 93, column: 10)
!15503 = !DILocalVariable(name: "__self_1", scope: !15502, file: !1579, line: 119, type: !376, align: 32)
!15504 = !DILocation(line: 93, column: 10, scope: !15494)
!15505 = !DILocation(line: 108, column: 9, scope: !15494)
!15506 = !DILocation(line: 108, column: 9, scope: !15502)
!15507 = !DILocation(line: 119, column: 9, scope: !15494)
!15508 = !DILocation(line: 119, column: 9, scope: !15502)
!15509 = !DILocation(line: 93, column: 10, scope: !15502)
!15510 = !DILocation(line: 93, column: 14, scope: !15494)
!15511 = !DILocation(line: 93, column: 15, scope: !15494)
!15512 = distinct !DISubprogram(name: "add", linkageName: "_ZN78_$LT$alloc..string..String$u20$as$u20$core..ops..arith..Add$LT$$RF$str$GT$$GT$3add17h5120f132aac7d8b4E", scope: !15513, file: !9348, line: 2667, type: !15514, scopeLine: 2667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15516)
!15513 = !DINamespace(name: "{impl#26}", scope: !179)
!15514 = !DISubroutineType(types: !15515)
!15515 = !{!178, !178, !124}
!15516 = !{!15517, !15518}
!15517 = !DILocalVariable(name: "self", arg: 1, scope: !15512, file: !9348, line: 2667, type: !178)
!15518 = !DILocalVariable(name: "other", arg: 2, scope: !15512, file: !9348, line: 2667, type: !124)
!15519 = !DILocation(line: 2667, column: 12, scope: !15512)
!15520 = !DILocation(line: 2667, column: 22, scope: !15512)
!15521 = !DILocation(line: 2668, column: 14, scope: !15512)
!15522 = !DILocation(line: 2669, column: 9, scope: !15512)
!15523 = !DILocation(line: 2670, column: 6, scope: !15512)
!15524 = distinct !DISubprogram(name: "eq<[u8; 2]>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h46581e06d27f1d91E", scope: !15525, file: !1538, line: 1686, type: !15526, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !15529)
!15525 = !DINamespace(name: "{impl#15}", scope: !198)
!15526 = !DISubroutineType(types: !15527)
!15527 = !{!643, !15528, !15528}
!15528 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<[u8; 2]>", baseType: !507, size: 32, align: 32, dwarfAddressSpace: 0)
!15529 = !{!15530, !15531}
!15530 = !DILocalVariable(name: "self", arg: 1, scope: !15524, file: !1538, line: 1686, type: !15528)
!15531 = !DILocalVariable(name: "other", arg: 2, scope: !15524, file: !1538, line: 1686, type: !15528)
!15532 = !DILocation(line: 1686, column: 11, scope: !15524)
!15533 = !DILocation(line: 1686, column: 18, scope: !15524)
!15534 = !DILocation(line: 1687, column: 9, scope: !15524)
!15535 = !DILocation(line: 401, column: 25, scope: !4161, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 1687, column: 14, scope: !15524)
!15537 = !DILocation(line: 1687, column: 26, scope: !15524)
!15538 = !DILocation(line: 401, column: 25, scope: !4161, inlinedAt: !15539)
!15539 = distinct !DILocation(line: 1687, column: 32, scope: !15524)
!15540 = !DILocation(line: 1688, column: 6, scope: !15524)
!15541 = distinct !DISubprogram(name: "eq<&str>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h8bdd06735b30d90bE", scope: !15525, file: !1538, line: 1686, type: !15542, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !597, retainedNodes: !15545)
!15542 = !DISubroutineType(types: !15543)
!15543 = !{!643, !15544, !15544}
!15544 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<&str>", baseType: !593, size: 32, align: 32, dwarfAddressSpace: 0)
!15545 = !{!15546, !15547}
!15546 = !DILocalVariable(name: "self", arg: 1, scope: !15541, file: !1538, line: 1686, type: !15544)
!15547 = !DILocalVariable(name: "other", arg: 2, scope: !15541, file: !1538, line: 1686, type: !15544)
!15548 = !DILocation(line: 1686, column: 11, scope: !15541)
!15549 = !DILocation(line: 1686, column: 18, scope: !15541)
!15550 = !DILocation(line: 1687, column: 9, scope: !15541)
!15551 = !DILocalVariable(name: "self", arg: 1, scope: !15552, file: !1538, line: 401, type: !593)
!15552 = distinct !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h02640a8852619065E", scope: !593, file: !1538, line: 401, type: !15553, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !597, declaration: !15556, retainedNodes: !15557)
!15553 = !DISubroutineType(types: !15554)
!15554 = !{!15555, !593}
!15555 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &str", baseType: !124, size: 32, align: 32, dwarfAddressSpace: 0)
!15556 = !DISubprogram(name: "as_ptr<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17h02640a8852619065E", scope: !593, file: !1538, line: 401, type: !15553, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !597)
!15557 = !{!15551}
!15558 = !DILocation(line: 401, column: 25, scope: !15552, inlinedAt: !15559)
!15559 = distinct !DILocation(line: 1687, column: 14, scope: !15541)
!15560 = !DILocation(line: 1687, column: 26, scope: !15541)
!15561 = !DILocation(line: 401, column: 25, scope: !15552, inlinedAt: !15562)
!15562 = distinct !DILocation(line: 1687, column: 32, scope: !15541)
!15563 = !DILocation(line: 1688, column: 6, scope: !15541)
!15564 = distinct !DISubprogram(name: "eq<bool>", linkageName: "_ZN78_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hbe83ab615ad97cb4E", scope: !15525, file: !1538, line: 1686, type: !15565, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, retainedNodes: !15568)
!15565 = !DISubroutineType(types: !15566)
!15566 = !{!643, !15567, !15567}
!15567 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ptr::non_null::NonNull<bool>", baseType: !639, size: 32, align: 32, dwarfAddressSpace: 0)
!15568 = !{!15569, !15570}
!15569 = !DILocalVariable(name: "self", arg: 1, scope: !15564, file: !1538, line: 1686, type: !15567)
!15570 = !DILocalVariable(name: "other", arg: 2, scope: !15564, file: !1538, line: 1686, type: !15567)
!15571 = !DILocation(line: 1686, column: 11, scope: !15564)
!15572 = !DILocation(line: 1686, column: 18, scope: !15564)
!15573 = !DILocation(line: 1687, column: 9, scope: !15564)
!15574 = !DILocation(line: 401, column: 25, scope: !4182, inlinedAt: !15575)
!15575 = distinct !DILocation(line: 1687, column: 14, scope: !15564)
!15576 = !DILocation(line: 1687, column: 26, scope: !15564)
!15577 = !DILocation(line: 401, column: 25, scope: !4182, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 1687, column: 32, scope: !15564)
!15579 = !DILocation(line: 1688, column: 6, scope: !15564)
!15580 = distinct !DISubprogram(name: "default<u8>", linkageName: "_ZN79_$LT$alloc..boxed..Box$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..default..Default$GT$7default17h2b5961ec46a53765E", scope: !15581, file: !12381, line: 1719, type: !15582, scopeLine: 1719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !15584)
!15581 = !DINamespace(name: "{impl#10}", scope: !175)
!15582 = !DISubroutineType(types: !15583)
!15583 = !{!407}
!15584 = !{!15585}
!15585 = !DILocalVariable(name: "ptr", scope: !15586, file: !12381, line: 1720, type: !3644, align: 32)
!15586 = distinct !DILexicalBlock(scope: !15580, file: !12381, line: 1720, column: 9)
!15587 = !DILocation(line: 1720, column: 32, scope: !15580)
!15588 = !DILocation(line: 1720, column: 13, scope: !15586)
!15589 = !DILocation(line: 1722, column: 6, scope: !15580)
!15590 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN79_$LT$alloc..string..Drain$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hc913d4c16eb05ddfE", scope: !15591, file: !9348, line: 3454, type: !15592, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15594)
!15591 = !DINamespace(name: "{impl#70}", scope: !179)
!15592 = !DISubroutineType(types: !15593)
!15593 = !{!802, !9352}
!15594 = !{!15595}
!15595 = !DILocalVariable(name: "self", arg: 1, scope: !15590, file: !9348, line: 3454, type: !9352)
!15596 = !DILocation(line: 3454, column: 18, scope: !15590)
!15597 = !DILocation(line: 3455, column: 19, scope: !15590)
!15598 = !DILocation(line: 3456, column: 6, scope: !15590)
!15599 = distinct !DISubprogram(name: "drop<u8, alloc::alloc::Global>", linkageName: "_ZN79_$LT$alloc..vec..drain..Drain$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h680bf3e4dadaec29E", scope: !1723, file: !1720, line: 175, type: !15600, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !15602)
!15600 = !DISubroutineType(types: !15601)
!15601 = !{null, !1731}
!15602 = !{!15603, !15604, !15606, !15608, !15610, !15612, !15614, !15616, !15618, !15620, !15622}
!15603 = !DILocalVariable(name: "self", arg: 1, scope: !15599, file: !1720, line: 175, type: !1731)
!15604 = !DILocalVariable(name: "iter", scope: !15605, file: !1720, line: 198, type: !1405, align: 32)
!15605 = distinct !DILexicalBlock(scope: !15599, file: !1720, line: 198, column: 9)
!15606 = !DILocalVariable(name: "drop_len", scope: !15607, file: !1720, line: 199, type: !9, align: 32)
!15607 = distinct !DILexicalBlock(scope: !15605, file: !1720, line: 199, column: 9)
!15608 = !DILocalVariable(name: "vec", scope: !15609, file: !1720, line: 201, type: !1738, align: 32)
!15609 = distinct !DILexicalBlock(scope: !15607, file: !1720, line: 201, column: 9)
!15610 = !DILocalVariable(name: "vec", scope: !15611, file: !1720, line: 207, type: !1608, align: 32)
!15611 = distinct !DILexicalBlock(scope: !15609, file: !1720, line: 207, column: 17)
!15612 = !DILocalVariable(name: "old_len", scope: !15613, file: !1720, line: 208, type: !9, align: 32)
!15613 = distinct !DILexicalBlock(scope: !15611, file: !1720, line: 208, column: 17)
!15614 = !DILocalVariable(name: "_guard", scope: !15615, file: !1720, line: 217, type: !1728, align: 32)
!15615 = distinct !DILexicalBlock(scope: !15609, file: !1720, line: 217, column: 9)
!15616 = !DILocalVariable(name: "drop_ptr", scope: !15617, file: !1720, line: 227, type: !201, align: 32)
!15617 = distinct !DILexicalBlock(scope: !15615, file: !1720, line: 227, column: 9)
!15618 = !DILocalVariable(name: "vec_ptr", scope: !15619, file: !1720, line: 234, type: !463, align: 32)
!15619 = distinct !DILexicalBlock(scope: !15617, file: !1720, line: 234, column: 13)
!15620 = !DILocalVariable(name: "drop_offset", scope: !15621, file: !1720, line: 235, type: !9, align: 32)
!15621 = distinct !DILexicalBlock(scope: !15619, file: !1720, line: 235, column: 13)
!15622 = !DILocalVariable(name: "to_drop", scope: !15623, file: !1720, line: 236, type: !1569, align: 32)
!15623 = distinct !DILexicalBlock(scope: !15621, file: !1720, line: 236, column: 13)
!15624 = !DILocation(line: 175, column: 13, scope: !15599)
!15625 = !DILocation(line: 198, column: 13, scope: !15605)
!15626 = !DILocation(line: 201, column: 13, scope: !15609)
!15627 = !DILocation(line: 217, column: 13, scope: !15615)
!15628 = !DILocation(line: 198, column: 20, scope: !15599)
!15629 = !DILocalVariable(name: "self", arg: 1, scope: !15630, file: !15631, line: 141, type: !15635)
!15630 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN102_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..exact_size..ExactSizeIterator$GT$3len17h0b628ec7733f4352E", scope: !15632, file: !15631, line: 141, type: !15633, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !15636)
!15631 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "330935a329cc74f5254abe12d5a6c8e3")
!15632 = !DINamespace(name: "{impl#165}", scope: !504)
!15633 = !DISubroutineType(types: !15634)
!15634 = !{!9, !15635}
!15635 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u8>", baseType: !1405, size: 32, align: 32, dwarfAddressSpace: 0)
!15636 = !{!15629, !15637, !15639}
!15637 = !DILocalVariable(name: "len", scope: !15638, file: !15631, line: 29, type: !9, align: 32)
!15638 = distinct !DILexicalBlock(scope: !15630, file: !15631, line: 29, column: 13)
!15639 = !DILocalVariable(name: "end", scope: !15640, file: !15631, line: 33, type: !197, align: 32)
!15640 = distinct !DILexicalBlock(scope: !15630, file: !15631, line: 33, column: 13)
!15641 = !DILocation(line: 141, column: 20, scope: !15630, inlinedAt: !15642)
!15642 = distinct !DILocation(line: 199, column: 29, scope: !15605)
!15643 = !DILocation(line: 33, column: 72, scope: !15630, inlinedAt: !15642)
!15644 = !DILocation(line: 33, column: 33, scope: !15630, inlinedAt: !15642)
!15645 = !DILocation(line: 33, column: 17, scope: !15640, inlinedAt: !15642)
!15646 = !DILocation(line: 57, column: 51, scope: !15640, inlinedAt: !15642)
!15647 = !DILocation(line: 57, column: 30, scope: !15640, inlinedAt: !15642)
!15648 = !DILocation(line: 143, column: 14, scope: !15630, inlinedAt: !15642)
!15649 = !DILocation(line: 199, column: 29, scope: !15605)
!15650 = !DILocation(line: 199, column: 13, scope: !15607)
!15651 = !DILocation(line: 201, column: 23, scope: !15607)
!15652 = !DILocation(line: 203, column: 12, scope: !15609)
!15653 = !DILocation(line: 217, column: 22, scope: !15609)
!15654 = !DILocation(line: 219, column: 12, scope: !15615)
!15655 = !DILocation(line: 239, column: 5, scope: !15609)
!15656 = !DILocation(line: 227, column: 29, scope: !15615)
!15657 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 227, column: 40, scope: !15615)
!15659 = !DILocation(line: 227, column: 40, scope: !15615)
!15660 = !DILocation(line: 227, column: 13, scope: !15617)
!15661 = !DILocation(line: 478, column: 36, scope: !1761, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 234, column: 31, scope: !15617)
!15663 = !DILocation(line: 481, column: 24, scope: !1761, inlinedAt: !15662)
!15664 = !DILocation(line: 401, column: 25, scope: !1771, inlinedAt: !15665)
!15665 = distinct !DILocation(line: 481, column: 29, scope: !1761, inlinedAt: !15662)
!15666 = !DILocation(line: 234, column: 40, scope: !15617)
!15667 = !DILocation(line: 234, column: 17, scope: !15619)
!15668 = !DILocation(line: 235, column: 40, scope: !15619)
!15669 = !DILocation(line: 235, column: 17, scope: !15621)
!15670 = !DILocation(line: 927, column: 29, scope: !1809, inlinedAt: !15671)
!15671 = distinct !DILocation(line: 236, column: 65, scope: !15621)
!15672 = !DILocation(line: 927, column: 35, scope: !1809, inlinedAt: !15671)
!15673 = !DILocation(line: 77, column: 35, scope: !1821, inlinedAt: !15671)
!15674 = !DILocation(line: 78, column: 17, scope: !1821, inlinedAt: !15671)
!15675 = !DILocation(line: 961, column: 18, scope: !1809, inlinedAt: !15671)
!15676 = !DILocation(line: 236, column: 27, scope: !15621)
!15677 = !DILocation(line: 236, column: 17, scope: !15623)
!15678 = !DILocation(line: 239, column: 6, scope: !15599)
!15679 = distinct !DISubprogram(name: "from_output<alloc::string::String, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h5d08afea4e007749E", scope: !15680, file: !1621, line: 2162, type: !15681, scopeLine: 2162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1633, retainedNodes: !15683)
!15680 = !DINamespace(name: "{impl#27}", scope: !335)
!15681 = !DISubroutineType(types: !15682)
!15682 = !{!1625, !178}
!15683 = !{!15684}
!15684 = !DILocalVariable(name: "output", arg: 1, scope: !15679, file: !1621, line: 2162, type: !178)
!15685 = !DILocation(line: 2162, column: 20, scope: !15679)
!15686 = !DILocation(line: 2163, column: 9, scope: !15679)
!15687 = !DILocation(line: 2164, column: 6, scope: !15679)
!15688 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h067890e4fde95786E", scope: !15680, file: !1621, line: 2167, type: !15689, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1967, retainedNodes: !15707)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!15691, !1959}
!15691 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15692, templateParams: !21, identifier: "fd8e8542dc0f7737da522f2563639b5b")
!15692 = !{!15693}
!15693 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15691, file: !2, size: 64, align: 32, elements: !15694, templateParams: !21, identifier: "75e1b7877a74382ae4a706349645ab2", discriminator: !15706)
!15694 = !{!15695, !15702}
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15693, file: !2, baseType: !15696, size: 64, align: 32)
!15696 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15691, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15697, templateParams: !15699, identifier: "e3b53bfc50ee48ccd4a2342dc46802f7")
!15697 = !{!15698}
!15698 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15696, file: !2, baseType: !1932, size: 64, align: 32, flags: DIFlagPublic)
!15699 = !{!15700, !15701}
!15700 = !DITemplateTypeParameter(name: "B", type: !1975)
!15701 = !DITemplateTypeParameter(name: "C", type: !1932)
!15702 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15693, file: !2, baseType: !15703, size: 64, align: 32, extraData: i32 0)
!15703 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15691, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15704, templateParams: !15699, identifier: "e13d9110b2de27f7d856c1d11f1f48ad")
!15704 = !{!15705}
!15705 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15703, file: !2, baseType: !1975, align: 8, flags: DIFlagPublic)
!15706 = !DIDerivedType(tag: DW_TAG_member, scope: !15691, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15707 = !{!15708, !15709, !15711}
!15708 = !DILocalVariable(name: "self", arg: 1, scope: !15688, file: !1621, line: 2167, type: !1959)
!15709 = !DILocalVariable(name: "v", scope: !15710, file: !1621, line: 2169, type: !1932, align: 32)
!15710 = distinct !DILexicalBlock(scope: !15688, file: !1621, line: 2169, column: 13)
!15711 = !DILocalVariable(name: "e", scope: !15712, file: !1621, line: 2170, type: !1969, align: 8)
!15712 = distinct !DILexicalBlock(scope: !15688, file: !1621, line: 2170, column: 13)
!15713 = !DILocation(line: 2167, column: 15, scope: !15688)
!15714 = !DILocation(line: 2170, column: 17, scope: !15712)
!15715 = !DILocation(line: 2168, column: 15, scope: !15688)
!15716 = !DILocation(line: 2168, column: 9, scope: !15688)
!15717 = !DILocation(line: 2170, column: 23, scope: !15712)
!15718 = !DILocation(line: 2170, column: 48, scope: !15688)
!15719 = !DILocation(line: 2169, column: 16, scope: !15688)
!15720 = !DILocation(line: 2169, column: 16, scope: !15710)
!15721 = !DILocation(line: 2169, column: 22, scope: !15710)
!15722 = !DILocation(line: 2169, column: 45, scope: !15688)
!15723 = !DILocation(line: 2172, column: 6, scope: !15688)
!15724 = distinct !DISubprogram(name: "branch<usize, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12b00088086aa52eE", scope: !15680, file: !1621, line: 2167, type: !15725, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8197, retainedNodes: !15743)
!15725 = !DISubroutineType(types: !15726)
!15726 = !{!15727, !8189}
!15727 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", scope: !1090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15728, templateParams: !21, identifier: "90561069844ef145730e701882ba78a0")
!15728 = !{!15729}
!15729 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15727, file: !2, size: 64, align: 32, elements: !15730, templateParams: !21, identifier: "d9809249ebcac7ba9b8f41df2054a3bc", discriminator: !15742)
!15730 = !{!15731, !15738}
!15731 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15729, file: !2, baseType: !15732, size: 64, align: 32, extraData: i32 -2147483647)
!15732 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15727, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15733, templateParams: !15735, identifier: "eff3af4f03d9e9a9369728d8b4c24ef")
!15733 = !{!15734}
!15734 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15732, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!15735 = !{!15736, !15737}
!15736 = !DITemplateTypeParameter(name: "B", type: !2009)
!15737 = !DITemplateTypeParameter(name: "C", type: !9)
!15738 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15729, file: !2, baseType: !15739, size: 64, align: 32)
!15739 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15727, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15740, templateParams: !15735, identifier: "a8bc35b5720c5bf5bcd54f00774ffaa")
!15740 = !{!15741}
!15741 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15739, file: !2, baseType: !2009, size: 64, align: 32, flags: DIFlagPublic)
!15742 = !DIDerivedType(tag: DW_TAG_member, scope: !15727, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15743 = !{!15744, !15745, !15747}
!15744 = !DILocalVariable(name: "self", arg: 1, scope: !15724, file: !1621, line: 2167, type: !8189)
!15745 = !DILocalVariable(name: "v", scope: !15746, file: !1621, line: 2169, type: !9, align: 32)
!15746 = distinct !DILexicalBlock(scope: !15724, file: !1621, line: 2169, column: 13)
!15747 = !DILocalVariable(name: "e", scope: !15748, file: !1621, line: 2170, type: !1586, align: 32)
!15748 = distinct !DILexicalBlock(scope: !15724, file: !1621, line: 2170, column: 13)
!15749 = !DILocation(line: 2168, column: 15, scope: !15724)
!15750 = !DILocation(line: 2167, column: 15, scope: !15724)
!15751 = !DILocation(line: 2168, column: 9, scope: !15724)
!15752 = !DILocation(line: 2170, column: 17, scope: !15724)
!15753 = !DILocation(line: 2170, column: 17, scope: !15748)
!15754 = !DILocation(line: 2170, column: 23, scope: !15748)
!15755 = !DILocation(line: 2170, column: 48, scope: !15724)
!15756 = !DILocation(line: 2169, column: 16, scope: !15724)
!15757 = !DILocation(line: 2169, column: 16, scope: !15746)
!15758 = !DILocation(line: 2169, column: 22, scope: !15746)
!15759 = !DILocation(line: 2169, column: 45, scope: !15724)
!15760 = !DILocation(line: 2172, column: 6, scope: !15724)
!15761 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveErrorKind>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4f10bbc77f0ae91cE", scope: !15680, file: !1621, line: 2167, type: !15762, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8565, retainedNodes: !15778)
!15762 = !DISubroutineType(types: !15763)
!15763 = !{!15764, !8557}
!15764 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::ptr::non_null::NonNull<[u8]>>", scope: !1090, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15765, templateParams: !21, identifier: "d1bc355ea91a8e25acdd04c086999e2")
!15765 = !{!15766}
!15766 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15764, file: !2, size: 96, align: 32, elements: !15767, templateParams: !21, identifier: "f8e3450fc186260977309601ff59525", discriminator: !15777)
!15767 = !{!15768, !15773}
!15768 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15766, file: !2, baseType: !15769, size: 96, align: 32, extraData: i32 0)
!15769 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15764, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15770, templateParams: !15772, identifier: "b201be353ac65afe7bb8d5c09efdec38")
!15770 = !{!15771}
!15771 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15769, file: !2, baseType: !1932, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!15772 = !{!15736, !15701}
!15773 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15766, file: !2, baseType: !15774, size: 96, align: 32, extraData: i32 1)
!15774 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15764, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15775, templateParams: !15772, identifier: "938c75ff6ad6240e8c26782158344bf4")
!15775 = !{!15776}
!15776 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15774, file: !2, baseType: !2009, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!15777 = !DIDerivedType(tag: DW_TAG_member, scope: !15764, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15778 = !{!15779, !15780, !15782}
!15779 = !DILocalVariable(name: "self", arg: 1, scope: !15761, file: !1621, line: 2167, type: !8557)
!15780 = !DILocalVariable(name: "v", scope: !15781, file: !1621, line: 2169, type: !1932, align: 32)
!15781 = distinct !DILexicalBlock(scope: !15761, file: !1621, line: 2169, column: 13)
!15782 = !DILocalVariable(name: "e", scope: !15783, file: !1621, line: 2170, type: !1586, align: 32)
!15783 = distinct !DILexicalBlock(scope: !15761, file: !1621, line: 2170, column: 13)
!15784 = !DILocation(line: 2168, column: 15, scope: !15761)
!15785 = !DILocation(line: 2167, column: 15, scope: !15761)
!15786 = !DILocation(line: 2168, column: 9, scope: !15761)
!15787 = !DILocation(line: 2170, column: 17, scope: !15761)
!15788 = !DILocation(line: 2170, column: 17, scope: !15783)
!15789 = !DILocation(line: 2170, column: 23, scope: !15783)
!15790 = !DILocation(line: 2170, column: 48, scope: !15761)
!15791 = !DILocation(line: 2169, column: 16, scope: !15761)
!15792 = !DILocation(line: 2169, column: 16, scope: !15781)
!15793 = !DILocation(line: 2169, column: 22, scope: !15781)
!15794 = !DILocation(line: 2169, column: 45, scope: !15761)
!15795 = !DILocation(line: 2172, column: 6, scope: !15761)
!15796 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h52fa1c8fc41c0dbcE", scope: !15680, file: !1621, line: 2167, type: !15797, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1935, retainedNodes: !15814)
!15797 = !DISubroutineType(types: !15798)
!15798 = !{!15799, !1924}
!15799 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", scope: !1090, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15800, templateParams: !21, identifier: "95d92ad14b877fd0effddfb3c390bc8f")
!15800 = !{!15801}
!15801 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15799, file: !2, size: 96, align: 32, elements: !15802, templateParams: !21, identifier: "e09a54f6ee94f20a247cbba895d1f0df", discriminator: !15813)
!15802 = !{!15803, !15809}
!15803 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15801, file: !2, baseType: !15804, size: 96, align: 32, extraData: i32 0)
!15804 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15799, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15805, templateParams: !15807, identifier: "a720048a93dc01354d62a235d6a86794")
!15805 = !{!15806}
!15806 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15804, file: !2, baseType: !1932, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!15807 = !{!15808, !15701}
!15808 = !DITemplateTypeParameter(name: "B", type: !1887)
!15809 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15801, file: !2, baseType: !15810, size: 96, align: 32, extraData: i32 1)
!15810 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15799, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15811, templateParams: !15807, identifier: "933a4e28be84dbec640ddea32dd3c0c3")
!15811 = !{!15812}
!15812 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15810, file: !2, baseType: !1887, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!15813 = !DIDerivedType(tag: DW_TAG_member, scope: !15799, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15814 = !{!15815, !15816, !15818}
!15815 = !DILocalVariable(name: "self", arg: 1, scope: !15796, file: !1621, line: 2167, type: !1924)
!15816 = !DILocalVariable(name: "v", scope: !15817, file: !1621, line: 2169, type: !1932, align: 32)
!15817 = distinct !DILexicalBlock(scope: !15796, file: !1621, line: 2169, column: 13)
!15818 = !DILocalVariable(name: "e", scope: !15819, file: !1621, line: 2170, type: !1583, align: 32)
!15819 = distinct !DILexicalBlock(scope: !15796, file: !1621, line: 2170, column: 13)
!15820 = !DILocation(line: 2168, column: 15, scope: !15796)
!15821 = !DILocation(line: 2167, column: 15, scope: !15796)
!15822 = !DILocation(line: 2168, column: 9, scope: !15796)
!15823 = !DILocation(line: 2170, column: 17, scope: !15796)
!15824 = !DILocation(line: 2170, column: 17, scope: !15819)
!15825 = !DILocation(line: 2170, column: 23, scope: !15819)
!15826 = !DILocation(line: 2170, column: 48, scope: !15796)
!15827 = !DILocation(line: 2169, column: 16, scope: !15796)
!15828 = !DILocation(line: 2169, column: 16, scope: !15817)
!15829 = !DILocation(line: 2169, column: 22, scope: !15817)
!15830 = !DILocation(line: 2169, column: 45, scope: !15796)
!15831 = !DILocation(line: 2172, column: 6, scope: !15796)
!15832 = distinct !DISubprogram(name: "branch<(), alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h6330f699d96fc25aE", scope: !15680, file: !1621, line: 2167, type: !15833, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1880, retainedNodes: !15849)
!15833 = !DISubroutineType(types: !15834)
!15834 = !{!15835, !1872}
!15835 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, ()>", scope: !1090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15836, templateParams: !21, identifier: "2d66b3a0c5e92728aa34cc665762a80a")
!15836 = !{!15837}
!15837 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15835, file: !2, size: 64, align: 32, elements: !15838, templateParams: !21, identifier: "1cb0d8f656085cc5de67a26ffbd5d270", discriminator: !15848)
!15838 = !{!15839, !15844}
!15839 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15837, file: !2, baseType: !15840, size: 64, align: 32, extraData: i32 -2147483647)
!15840 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15835, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15841, templateParams: !15843, identifier: "38889f408fe8e84171a7ef51f3a0792b")
!15841 = !{!15842}
!15842 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15840, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!15843 = !{!15808, !1100}
!15844 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15837, file: !2, baseType: !15845, size: 64, align: 32)
!15845 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15835, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15846, templateParams: !15843, identifier: "c313e05f505e95cf3cd9b4fef320b94d")
!15846 = !{!15847}
!15847 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15845, file: !2, baseType: !1887, size: 64, align: 32, flags: DIFlagPublic)
!15848 = !DIDerivedType(tag: DW_TAG_member, scope: !15835, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15849 = !{!15850, !15851, !15853}
!15850 = !DILocalVariable(name: "self", arg: 1, scope: !15832, file: !1621, line: 2167, type: !1872)
!15851 = !DILocalVariable(name: "v", scope: !15852, file: !1621, line: 2169, type: !7, align: 8)
!15852 = distinct !DILexicalBlock(scope: !15832, file: !1621, line: 2169, column: 13)
!15853 = !DILocalVariable(name: "e", scope: !15854, file: !1621, line: 2170, type: !1583, align: 32)
!15854 = distinct !DILexicalBlock(scope: !15832, file: !1621, line: 2170, column: 13)
!15855 = !DILocation(line: 2167, column: 15, scope: !15832)
!15856 = !DILocation(line: 2169, column: 16, scope: !15852)
!15857 = !DILocation(line: 2168, column: 15, scope: !15832)
!15858 = !DILocation(line: 2168, column: 9, scope: !15832)
!15859 = !DILocation(line: 2170, column: 17, scope: !15832)
!15860 = !DILocation(line: 2170, column: 17, scope: !15854)
!15861 = !DILocation(line: 2170, column: 23, scope: !15854)
!15862 = !DILocation(line: 2170, column: 48, scope: !15832)
!15863 = !DILocation(line: 2169, column: 22, scope: !15852)
!15864 = !DILocation(line: 2169, column: 45, scope: !15832)
!15865 = !DILocation(line: 2172, column: 6, scope: !15832)
!15866 = distinct !DISubprogram(name: "branch<core::ptr::non_null::NonNull<u8>, core::alloc::AllocError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h661768b3f16f6fc8E", scope: !15680, file: !1621, line: 2167, type: !15867, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8233, retainedNodes: !15884)
!15867 = !DISubroutineType(types: !15868)
!15868 = !{!15869, !8225}
!15869 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<u8>>", scope: !1090, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !15870, templateParams: !21, identifier: "f50e0bcdcd77e9b6f35892e7d0a06472")
!15870 = !{!15871}
!15871 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15869, file: !2, size: 32, align: 32, elements: !15872, templateParams: !21, identifier: "3a6b7171e3667f6506a57aade5c0d4", discriminator: !15883)
!15872 = !{!15873, !15879}
!15873 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15871, file: !2, baseType: !15874, size: 32, align: 32)
!15874 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15869, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !15875, templateParams: !15877, identifier: "af6f21e60e17523149ab2801f5fc0261")
!15875 = !{!15876}
!15876 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15874, file: !2, baseType: !197, size: 32, align: 32, flags: DIFlagPublic)
!15877 = !{!15700, !15878}
!15878 = !DITemplateTypeParameter(name: "C", type: !197)
!15879 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15871, file: !2, baseType: !15880, size: 32, align: 32, extraData: i32 0)
!15880 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15869, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !15881, templateParams: !15877, identifier: "12b69bfcea8ee3cde8409abef062c677")
!15881 = !{!15882}
!15882 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15880, file: !2, baseType: !1975, align: 8, flags: DIFlagPublic)
!15883 = !DIDerivedType(tag: DW_TAG_member, scope: !15869, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15884 = !{!15885, !15886, !15888}
!15885 = !DILocalVariable(name: "self", arg: 1, scope: !15866, file: !1621, line: 2167, type: !8225)
!15886 = !DILocalVariable(name: "v", scope: !15887, file: !1621, line: 2169, type: !197, align: 32)
!15887 = distinct !DILexicalBlock(scope: !15866, file: !1621, line: 2169, column: 13)
!15888 = !DILocalVariable(name: "e", scope: !15889, file: !1621, line: 2170, type: !1969, align: 8)
!15889 = distinct !DILexicalBlock(scope: !15866, file: !1621, line: 2170, column: 13)
!15890 = !DILocation(line: 2167, column: 15, scope: !15866)
!15891 = !DILocation(line: 2170, column: 17, scope: !15889)
!15892 = !DILocation(line: 2168, column: 15, scope: !15866)
!15893 = !DILocation(line: 2168, column: 9, scope: !15866)
!15894 = !DILocation(line: 2170, column: 23, scope: !15889)
!15895 = !DILocation(line: 2170, column: 48, scope: !15866)
!15896 = !DILocation(line: 2169, column: 16, scope: !15866)
!15897 = !DILocation(line: 2169, column: 16, scope: !15887)
!15898 = !DILocation(line: 2169, column: 22, scope: !15887)
!15899 = !DILocation(line: 2169, column: 45, scope: !15866)
!15900 = !DILocation(line: 2172, column: 6, scope: !15866)
!15901 = distinct !DISubprogram(name: "branch<core::alloc::layout::Layout, alloc::collections::TryReserveError>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h9eacb122e555ba05E", scope: !15680, file: !1621, line: 2167, type: !15902, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !8727, retainedNodes: !15919)
!15902 = !DISubroutineType(types: !15903)
!15903 = !{!15904, !8719}
!15904 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::alloc::layout::Layout>", scope: !1090, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15905, templateParams: !21, identifier: "a36403dab1ab5a9ad4d5bede65c2feb1")
!15905 = !{!15906}
!15906 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15904, file: !2, size: 96, align: 32, elements: !15907, templateParams: !21, identifier: "405f850c2c6efb94c7ef9969f05c385b", discriminator: !15918)
!15907 = !{!15908, !15914}
!15908 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15906, file: !2, baseType: !15909, size: 96, align: 32, extraData: i32 0)
!15909 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15904, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15910, templateParams: !15912, identifier: "51b0d0ccc0c1e4e13091e047f6b5178d")
!15910 = !{!15911}
!15911 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15909, file: !2, baseType: !39, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!15912 = !{!15808, !15913}
!15913 = !DITemplateTypeParameter(name: "C", type: !39)
!15914 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15906, file: !2, baseType: !15915, size: 96, align: 32, extraData: i32 1)
!15915 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15904, file: !2, size: 96, align: 32, flags: DIFlagPublic, elements: !15916, templateParams: !15912, identifier: "ad87d37186163bb4ccbec827e4bdef4f")
!15916 = !{!15917}
!15917 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15915, file: !2, baseType: !1887, size: 64, align: 32, offset: 32, flags: DIFlagPublic)
!15918 = !DIDerivedType(tag: DW_TAG_member, scope: !15904, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!15919 = !{!15920, !15921, !15923}
!15920 = !DILocalVariable(name: "self", arg: 1, scope: !15901, file: !1621, line: 2167, type: !8719)
!15921 = !DILocalVariable(name: "v", scope: !15922, file: !1621, line: 2169, type: !39, align: 32)
!15922 = distinct !DILexicalBlock(scope: !15901, file: !1621, line: 2169, column: 13)
!15923 = !DILocalVariable(name: "e", scope: !15924, file: !1621, line: 2170, type: !1583, align: 32)
!15924 = distinct !DILexicalBlock(scope: !15901, file: !1621, line: 2170, column: 13)
!15925 = !DILocation(line: 2168, column: 15, scope: !15901)
!15926 = !DILocation(line: 2167, column: 15, scope: !15901)
!15927 = !DILocation(line: 2168, column: 9, scope: !15901)
!15928 = !DILocation(line: 2170, column: 17, scope: !15901)
!15929 = !DILocation(line: 2170, column: 17, scope: !15924)
!15930 = !DILocation(line: 2170, column: 23, scope: !15924)
!15931 = !DILocation(line: 2170, column: 48, scope: !15901)
!15932 = !DILocation(line: 2169, column: 16, scope: !15901)
!15933 = !DILocation(line: 2169, column: 16, scope: !15922)
!15934 = !DILocation(line: 2169, column: 22, scope: !15922)
!15935 = !DILocation(line: 2169, column: 45, scope: !15901)
!15936 = !DILocation(line: 2172, column: 6, scope: !15901)
!15937 = distinct !DISubprogram(name: "branch<char, core::char::decode::DecodeUtf16Error>", linkageName: "_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1271de477c4c8d0E", scope: !15680, file: !1621, line: 2167, type: !15938, scopeLine: 2167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1120, retainedNodes: !15956)
!15938 = !DISubroutineType(types: !15939)
!15939 = !{!15940, !1112}
!15940 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>, char>", scope: !1090, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15941, templateParams: !21, identifier: "db40af444972b8f34620a8c0a724c65a")
!15941 = !{!15942}
!15942 = !DICompositeType(tag: DW_TAG_variant_part, scope: !15940, file: !2, size: 64, align: 32, elements: !15943, templateParams: !21, identifier: "c9704888608278385f3e20156f7bb364", discriminator: !15955)
!15943 = !{!15944, !15951}
!15944 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !15942, file: !2, baseType: !15945, size: 64, align: 32, extraData: i16 0)
!15945 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !15940, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15946, templateParams: !15948, identifier: "411d6e05541f0a25ef63c3500627e3c3")
!15946 = !{!15947}
!15947 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15945, file: !2, baseType: !574, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!15948 = !{!15949, !15950}
!15949 = !DITemplateTypeParameter(name: "B", type: !961)
!15950 = !DITemplateTypeParameter(name: "C", type: !574)
!15951 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !15942, file: !2, baseType: !15952, size: 64, align: 32, extraData: i16 1)
!15952 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !15940, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !15953, templateParams: !15948, identifier: "1230c149ae1e74db1d1dd46b783c6791")
!15953 = !{!15954}
!15954 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !15952, file: !2, baseType: !961, size: 16, align: 16, offset: 16, flags: DIFlagPublic)
!15955 = !DIDerivedType(tag: DW_TAG_member, scope: !15940, file: !2, baseType: !359, size: 16, align: 16, flags: DIFlagArtificial)
!15956 = !{!15957, !15958, !15960}
!15957 = !DILocalVariable(name: "self", arg: 1, scope: !15937, file: !1621, line: 2167, type: !1112)
!15958 = !DILocalVariable(name: "v", scope: !15959, file: !1621, line: 2169, type: !574, align: 32)
!15959 = distinct !DILexicalBlock(scope: !15937, file: !1621, line: 2169, column: 13)
!15960 = !DILocalVariable(name: "e", scope: !15961, file: !1621, line: 2170, type: !976, align: 16)
!15961 = distinct !DILexicalBlock(scope: !15937, file: !1621, line: 2170, column: 13)
!15962 = !DILocation(line: 2168, column: 15, scope: !15937)
!15963 = !DILocation(line: 2167, column: 15, scope: !15937)
!15964 = !DILocation(line: 2168, column: 9, scope: !15937)
!15965 = !DILocation(line: 2170, column: 17, scope: !15937)
!15966 = !DILocation(line: 2170, column: 17, scope: !15961)
!15967 = !DILocation(line: 2170, column: 23, scope: !15961)
!15968 = !DILocation(line: 2170, column: 48, scope: !15937)
!15969 = !DILocation(line: 2169, column: 16, scope: !15937)
!15970 = !DILocation(line: 2169, column: 16, scope: !15959)
!15971 = !DILocation(line: 2169, column: 22, scope: !15959)
!15972 = !DILocation(line: 2169, column: 45, scope: !15937)
!15973 = !DILocation(line: 2172, column: 6, scope: !15937)
!15974 = distinct !DISubprogram(name: "from", linkageName: "_ZN80_$LT$alloc..vec..Vec$LT$u8$GT$$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17hcd9838d458752594E", scope: !15975, file: !10746, line: 4254, type: !15976, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15978)
!15975 = !DINamespace(name: "{impl#40}", scope: !183)
!15976 = !DISubroutineType(types: !15977)
!15977 = !{!182, !124}
!15978 = !{!15979}
!15979 = !DILocalVariable(name: "s", arg: 1, scope: !15974, file: !10746, line: 4254, type: !124)
!15980 = !DILocation(line: 4254, column: 13, scope: !15974)
!15981 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !15982)
!15982 = distinct !DILocation(line: 4255, column: 22, scope: !15974)
!15983 = !DILocation(line: 489, column: 6, scope: !4935, inlinedAt: !15982)
!15984 = !DILocation(line: 4255, column: 22, scope: !15974)
!15985 = !DILocation(line: 4255, column: 9, scope: !15974)
!15986 = !DILocation(line: 4256, column: 6, scope: !15974)
!15987 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN81_$LT$$RF$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17hcc5f8a57276528c6E", scope: !15988, file: !398, line: 294, type: !15187, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !15989)
!15988 = !DINamespace(name: "{impl#1}", scope: !15160)
!15989 = !{!15990}
!15990 = !DILocalVariable(name: "self", arg: 1, scope: !15987, file: !398, line: 294, type: !432)
!15991 = !DILocation(line: 294, column: 30, scope: !15987)
!15992 = !DILocation(line: 273, column: 32, scope: !15186, inlinedAt: !15993)
!15993 = distinct !DILocation(line: 295, column: 17, scope: !15987)
!15994 = !DILocation(line: 282, column: 17, scope: !15193, inlinedAt: !15993)
!15995 = !DILocation(line: 278, column: 40, scope: !15186, inlinedAt: !15993)
!15996 = !DILocation(line: 1012, column: 25, scope: !10233, inlinedAt: !15997)
!15997 = distinct !DILocation(line: 278, column: 55, scope: !15186, inlinedAt: !15993)
!15998 = !DILocation(line: 1013, column: 15, scope: !10233, inlinedAt: !15997)
!15999 = !DILocation(line: 1013, column: 9, scope: !10233, inlinedAt: !15997)
!16000 = !DILocation(line: 1015, column: 21, scope: !10233, inlinedAt: !15997)
!16001 = !DILocation(line: 1014, column: 18, scope: !10233, inlinedAt: !15997)
!16002 = !DILocation(line: 1014, column: 18, scope: !10239, inlinedAt: !15997)
!16003 = !DILocation(line: 278, column: 55, scope: !15186, inlinedAt: !15993)
!16004 = !DILocation(line: 278, column: 17, scope: !15191, inlinedAt: !15993)
!16005 = !DILocation(line: 282, column: 30, scope: !15191, inlinedAt: !15993)
!16006 = !DILocation(line: 283, column: 20, scope: !15193, inlinedAt: !15993)
!16007 = !DILocation(line: 287, column: 19, scope: !15193, inlinedAt: !15993)
!16008 = !DILocation(line: 287, column: 13, scope: !15193, inlinedAt: !15993)
!16009 = !DILocation(line: 288, column: 22, scope: !15193, inlinedAt: !15993)
!16010 = !DILocation(line: 288, column: 22, scope: !15195, inlinedAt: !15993)
!16011 = !DILocation(line: 288, column: 44, scope: !15195, inlinedAt: !15993)
!16012 = !DILocation(line: 288, column: 32, scope: !15195, inlinedAt: !15993)
!16013 = !DILocation(line: 288, column: 28, scope: !15195, inlinedAt: !15993)
!16014 = !DILocation(line: 288, column: 51, scope: !15193, inlinedAt: !15993)
!16015 = !DILocation(line: 289, column: 66, scope: !15193, inlinedAt: !15993)
!16016 = !DILocation(line: 289, column: 37, scope: !15193, inlinedAt: !15993)
!16017 = !DILocation(line: 289, column: 25, scope: !15193, inlinedAt: !15993)
!16018 = !DILocation(line: 289, column: 75, scope: !15193, inlinedAt: !15993)
!16019 = !DILocation(line: 296, column: 14, scope: !15987)
!16020 = distinct !DISubprogram(name: "as_ref", linkageName: "_ZN81_$LT$alloc..string..Drain$u20$as$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$GT$6as_ref17h2425205b53f70ab2E", scope: !16021, file: !9348, line: 3440, type: !16022, scopeLine: 3440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16024)
!16021 = !DINamespace(name: "{impl#69}", scope: !179)
!16022 = !DISubroutineType(types: !16023)
!16023 = !{!432, !9352}
!16024 = !{!16025}
!16025 = !DILocalVariable(name: "self", arg: 1, scope: !16020, file: !9348, line: 3440, type: !9352)
!16026 = !DILocation(line: 3440, column: 15, scope: !16020)
!16027 = !DILocation(line: 3441, column: 14, scope: !16020)
!16028 = !DILocation(line: 486, column: 27, scope: !4935, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 3441, column: 23, scope: !16020)
!16030 = !DILocation(line: 3441, column: 23, scope: !16020)
!16031 = !DILocation(line: 3442, column: 6, scope: !16020)
!16032 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h21b98dc1e8dac725E", scope: !16033, file: !10746, line: 3627, type: !16034, scopeLine: 3627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !16039, retainedNodes: !16036)
!16033 = !DINamespace(name: "{impl#13}", scope: !183)
!16034 = !DISubroutineType(types: !16035)
!16035 = !{!432, !10796, !4994, !1241}
!16036 = !{!16037, !16038}
!16037 = !DILocalVariable(name: "self", arg: 1, scope: !16032, file: !10746, line: 3627, type: !10796)
!16038 = !DILocalVariable(name: "index", arg: 2, scope: !16032, file: !10746, line: 3627, type: !4994)
!16039 = !{!23, !15355, !215}
!16040 = !DILocation(line: 3627, column: 14, scope: !16032)
!16041 = !DILocation(line: 3627, column: 21, scope: !16032)
!16042 = !DILocation(line: 3628, column: 23, scope: !16032)
!16043 = !DILocalVariable(name: "self", arg: 1, scope: !16044, file: !1225, line: 17, type: !432)
!16044 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFull>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h3ada84f47f59a58eE", scope: !6725, file: !1225, line: 17, type: !16045, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !16049, retainedNodes: !16047)
!16045 = !DISubroutineType(types: !16046)
!16046 = !{!432, !432, !4994, !1241}
!16047 = !{!16043, !16048}
!16048 = !DILocalVariable(name: "index", arg: 2, scope: !16044, file: !1225, line: 17, type: !4994)
!16049 = !{!23, !15355}
!16050 = !DILocation(line: 17, column: 14, scope: !16044, inlinedAt: !16051)
!16051 = distinct !DILocation(line: 3628, column: 9, scope: !16032)
!16052 = !DILocation(line: 17, column: 21, scope: !16044, inlinedAt: !16051)
!16053 = !DILocation(line: 18, column: 15, scope: !16044, inlinedAt: !16051)
!16054 = !DILocation(line: 3628, column: 9, scope: !16032)
!16055 = !DILocation(line: 3629, column: 6, scope: !16032)
!16056 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeTo<usize>, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h261936e3caf15c2cE", scope: !16033, file: !10746, line: 3627, type: !16057, scopeLine: 3627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !16062, retainedNodes: !16059)
!16057 = !DISubroutineType(types: !16058)
!16058 = !{!432, !10796, !1316, !1241}
!16059 = !{!16060, !16061}
!16060 = !DILocalVariable(name: "self", arg: 1, scope: !16056, file: !10746, line: 3627, type: !10796)
!16061 = !DILocalVariable(name: "index", arg: 2, scope: !16056, file: !10746, line: 3627, type: !1316)
!16062 = !{!23, !7401, !215}
!16063 = !DILocation(line: 3627, column: 14, scope: !16056)
!16064 = !DILocation(line: 3627, column: 21, scope: !16056)
!16065 = !DILocation(line: 3628, column: 23, scope: !16056)
!16066 = !DILocation(line: 17, column: 14, scope: !11708, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 3628, column: 9, scope: !16056)
!16068 = !DILocation(line: 17, column: 21, scope: !11708, inlinedAt: !16067)
!16069 = !DILocation(line: 523, column: 14, scope: !11715, inlinedAt: !16070)
!16070 = distinct !DILocation(line: 18, column: 15, scope: !11708, inlinedAt: !16067)
!16071 = !DILocation(line: 523, column: 20, scope: !11715, inlinedAt: !16070)
!16072 = !DILocation(line: 430, column: 14, scope: !11724, inlinedAt: !16073)
!16073 = distinct !DILocation(line: 524, column: 23, scope: !11715, inlinedAt: !16070)
!16074 = !DILocation(line: 430, column: 20, scope: !11724, inlinedAt: !16073)
!16075 = !DILocation(line: 432, column: 32, scope: !11724, inlinedAt: !16073)
!16076 = !DILocation(line: 432, column: 16, scope: !11724, inlinedAt: !16073)
!16077 = !DILocation(line: 432, column: 21, scope: !11724, inlinedAt: !16073)
!16078 = !DILocation(line: 433, column: 16, scope: !11724, inlinedAt: !16073)
!16079 = !DILocation(line: 438, column: 13, scope: !11724, inlinedAt: !16073)
!16080 = !DILocation(line: 82, column: 5, scope: !1272, inlinedAt: !16081)
!16081 = distinct !DILocation(line: 436, column: 24, scope: !11724, inlinedAt: !16073)
!16082 = !DILocation(line: 83, column: 5, scope: !1272, inlinedAt: !16081)
!16083 = !DILocation(line: 84, column: 5, scope: !1272, inlinedAt: !16081)
!16084 = !DILocation(line: 86, column: 15, scope: !1272, inlinedAt: !16081)
!16085 = !DILocation(line: 86, column: 9, scope: !1279, inlinedAt: !16081)
!16086 = !DILocation(line: 88, column: 24, scope: !1279, inlinedAt: !16081)
!16087 = !DILocation(line: 88, column: 9, scope: !1281, inlinedAt: !16081)
!16088 = !DILocation(line: 90, column: 2, scope: !1272, inlinedAt: !16081)
!16089 = !DILocation(line: 436, column: 24, scope: !11724, inlinedAt: !16073)
!16090 = !DILocation(line: 524, column: 23, scope: !11715, inlinedAt: !16070)
!16091 = !DILocation(line: 18, column: 15, scope: !11708, inlinedAt: !16067)
!16092 = !DILocation(line: 19, column: 6, scope: !11708, inlinedAt: !16067)
!16093 = !DILocation(line: 3628, column: 9, scope: !16056)
!16094 = !DILocation(line: 3629, column: 6, scope: !16056)
!16095 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>, alloc::alloc::Global>", linkageName: "_ZN81_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..Index$LT$I$GT$$GT$5index17h50aa872ae619f839E", scope: !16033, file: !10746, line: 3627, type: !16096, scopeLine: 3627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !16101, retainedNodes: !16098)
!16096 = !DISubroutineType(types: !16097)
!16097 = !{!432, !10796, !1364, !1241}
!16098 = !{!16099, !16100}
!16099 = !DILocalVariable(name: "self", arg: 1, scope: !16095, file: !10746, line: 3627, type: !10796)
!16100 = !DILocalVariable(name: "index", arg: 2, scope: !16095, file: !10746, line: 3627, type: !1364)
!16101 = !{!23, !6731, !215}
!16102 = !DILocation(line: 3627, column: 14, scope: !16095)
!16103 = !DILocation(line: 3627, column: 21, scope: !16095)
!16104 = !DILocation(line: 3628, column: 23, scope: !16095)
!16105 = !DILocation(line: 17, column: 14, scope: !6724, inlinedAt: !16106)
!16106 = distinct !DILocation(line: 3628, column: 9, scope: !16095)
!16107 = !DILocation(line: 17, column: 21, scope: !6724, inlinedAt: !16106)
!16108 = !DILocation(line: 18, column: 15, scope: !6724, inlinedAt: !16106)
!16109 = !DILocation(line: 3628, column: 9, scope: !16095)
!16110 = !DILocation(line: 3629, column: 6, scope: !16095)
!16111 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h20cd7376025b9888E", scope: !16112, file: !4966, line: 39, type: !16113, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16115)
!16112 = !DINamespace(name: "{impl#0}", scope: !1402)
!16113 = !DISubroutineType(types: !16114)
!16114 = !{!1381, !5407}
!16115 = !{!16116}
!16116 = !DILocalVariable(name: "self", arg: 1, scope: !16111, file: !4966, line: 39, type: !5407)
!16117 = !DILocation(line: 39, column: 13, scope: !16111)
!16118 = !DILocation(line: 42, column: 18, scope: !16111)
!16119 = !DILocation(line: 42, column: 50, scope: !16111)
!16120 = !DILocation(line: 43, column: 6, scope: !16111)
!16121 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h2113bc94025b18faE", scope: !16112, file: !4966, line: 100, type: !16122, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16124)
!16122 = !DISubroutineType(types: !16123)
!16123 = !{!802, !4969}
!16124 = !{!16125, !16126}
!16125 = !DILocalVariable(name: "self", arg: 1, scope: !16121, file: !4966, line: 100, type: !4969)
!16126 = !DILocalVariable(name: "len", scope: !16127, file: !4966, line: 101, type: !9, align: 32)
!16127 = distinct !DILexicalBlock(scope: !16121, file: !4966, line: 101, column: 9)
!16128 = !DILocation(line: 100, column: 18, scope: !16121)
!16129 = !DILocation(line: 141, column: 20, scope: !15630, inlinedAt: !16130)
!16130 = distinct !DILocation(line: 101, column: 29, scope: !16121)
!16131 = !DILocation(line: 33, column: 72, scope: !15630, inlinedAt: !16130)
!16132 = !DILocation(line: 33, column: 33, scope: !15630, inlinedAt: !16130)
!16133 = !DILocation(line: 33, column: 17, scope: !15640, inlinedAt: !16130)
!16134 = !DILocation(line: 57, column: 51, scope: !15640, inlinedAt: !16130)
!16135 = !DILocation(line: 57, column: 30, scope: !15640, inlinedAt: !16130)
!16136 = !DILocation(line: 143, column: 14, scope: !15630, inlinedAt: !16130)
!16137 = !DILocation(line: 101, column: 29, scope: !16121)
!16138 = !DILocation(line: 101, column: 13, scope: !16127)
!16139 = !DILocation(line: 105, column: 14, scope: !16127)
!16140 = !DILocation(line: 105, column: 9, scope: !16127)
!16141 = !DILocation(line: 106, column: 6, scope: !16121)
!16142 = distinct !DISubprogram(name: "from_slice<u8>", linkageName: "_ZN84_$LT$alloc..rc..Rc$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..rc..RcFromSlice$LT$T$GT$$GT$10from_slice17ha68fec0b87d8f077E", scope: !16143, file: !9489, line: 2230, type: !9795, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !16144)
!16143 = !DINamespace(name: "{impl#25}", scope: !2049)
!16144 = !{!16145}
!16145 = !DILocalVariable(name: "v", arg: 1, scope: !16142, file: !9489, line: 2230, type: !432)
!16146 = !DILocation(line: 2230, column: 19, scope: !16142)
!16147 = !DILocation(line: 2231, column: 18, scope: !16142)
!16148 = !DILocation(line: 2232, column: 6, scope: !16142)
!16149 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::Range<usize>, alloc::alloc::Global>", linkageName: "_ZN84_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..index..IndexMut$LT$I$GT$$GT$9index_mut17he933b014ebbd65c1E", scope: !16150, file: !10746, line: 3635, type: !16151, scopeLine: 3635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !16156, retainedNodes: !16153)
!16150 = !DINamespace(name: "{impl#14}", scope: !183)
!16151 = !DISubroutineType(types: !16152)
!16152 = !{!5130, !1608, !1234, !1241}
!16153 = !{!16154, !16155}
!16154 = !DILocalVariable(name: "self", arg: 1, scope: !16149, file: !10746, line: 3635, type: !1608)
!16155 = !DILocalVariable(name: "index", arg: 2, scope: !16149, file: !10746, line: 3635, type: !1234)
!16156 = !{!23, !11777, !215}
!16157 = !DILocation(line: 3635, column: 18, scope: !16149)
!16158 = !DILocation(line: 3635, column: 29, scope: !16149)
!16159 = !DILocation(line: 3636, column: 34, scope: !16149)
!16160 = !DILocalVariable(name: "self", arg: 1, scope: !16161, file: !1225, line: 29, type: !5130)
!16161 = distinct !DISubprogram(name: "index_mut<u8, core::ops::range::Range<usize>>", linkageName: "_ZN4core5slice5index77_$LT$impl$u20$core..ops..index..IndexMut$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$9index_mut17h569ad3cdec339121E", scope: !16162, file: !1225, line: 29, type: !16163, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !11776, retainedNodes: !16165)
!16162 = !DINamespace(name: "{impl#1}", scope: !1227)
!16163 = !DISubroutineType(types: !16164)
!16164 = !{!5130, !5130, !1234, !1241}
!16165 = !{!16160, !16166}
!16166 = !DILocalVariable(name: "index", arg: 2, scope: !16161, file: !1225, line: 29, type: !1234)
!16167 = !DILocation(line: 29, column: 18, scope: !16161, inlinedAt: !16168)
!16168 = distinct !DILocation(line: 3636, column: 9, scope: !16149)
!16169 = !DILocation(line: 29, column: 29, scope: !16161, inlinedAt: !16168)
!16170 = !DILocation(line: 30, column: 15, scope: !16161, inlinedAt: !16168)
!16171 = !DILocation(line: 3636, column: 9, scope: !16149)
!16172 = !DILocation(line: 3637, column: 6, scope: !16149)
!16173 = distinct !DISubprogram(name: "drop", linkageName: "_ZN85_$LT$alloc..string..String..retain..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2cd1c2945fd15d0cE", scope: !16174, file: !9348, line: 1643, type: !16176, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16184)
!16174 = !DINamespace(name: "{impl#0}", scope: !16175)
!16175 = !DINamespace(name: "retain", scope: !550)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{null, !16178}
!16178 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#0}::retain::SetLenOnDrop", baseType: !16179, size: 32, align: 32, dwarfAddressSpace: 0)
!16179 = !DICompositeType(tag: DW_TAG_structure_type, name: "SetLenOnDrop", scope: !16175, file: !2, size: 96, align: 32, flags: DIFlagProtected, elements: !16180, templateParams: !21, identifier: "f83c03531cd101358940829e2ec1c65c")
!16180 = !{!16181, !16182, !16183}
!16181 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !16179, file: !2, baseType: !567, size: 32, align: 32, flags: DIFlagProtected)
!16182 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !16179, file: !2, baseType: !9, size: 32, align: 32, offset: 32, flags: DIFlagProtected)
!16183 = !DIDerivedType(tag: DW_TAG_member, name: "del_bytes", scope: !16179, file: !2, baseType: !9, size: 32, align: 32, offset: 64, flags: DIFlagProtected)
!16184 = !{!16185, !16186}
!16185 = !DILocalVariable(name: "self", arg: 1, scope: !16173, file: !9348, line: 1643, type: !16178)
!16186 = !DILocalVariable(name: "new_len", scope: !16187, file: !9348, line: 1644, type: !9, align: 32)
!16187 = distinct !DILexicalBlock(scope: !16173, file: !9348, line: 1644, column: 17)
!16188 = !DILocation(line: 1643, column: 21, scope: !16173)
!16189 = !DILocation(line: 1644, column: 31, scope: !16173)
!16190 = !DILocation(line: 1644, column: 42, scope: !16173)
!16191 = !DILocation(line: 1644, column: 21, scope: !16187)
!16192 = !DILocation(line: 1645, column: 42, scope: !16187)
!16193 = !DILocation(line: 1645, column: 49, scope: !16187)
!16194 = !DILocation(line: 1645, column: 31, scope: !16187)
!16195 = !DILocation(line: 1645, column: 17, scope: !16187)
!16196 = !DILocation(line: 1646, column: 26, scope: !16187)
!16197 = !DILocation(line: 1646, column: 37, scope: !16187)
!16198 = !DILocation(line: 1647, column: 14, scope: !16173)
!16199 = distinct !DISubprogram(name: "to_vec<u8, alloc::alloc::Global>", linkageName: "_ZN87_$LT$T$u20$as$u20$alloc..slice..$LT$impl$u20$$u5b$T$u5d$$GT$..to_vec_in..ConvertVec$GT$6to_vec17h404e4d3e53fbdaa2E", scope: !16200, file: !12800, line: 444, type: !12830, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !217, retainedNodes: !16202)
!16200 = !DINamespace(name: "{impl#1}", scope: !16201)
!16201 = !DINamespace(name: "to_vec_in", scope: !12801)
!16202 = !{!16203, !16204, !16205}
!16203 = !DILocalVariable(name: "s", arg: 1, scope: !16199, file: !12800, line: 444, type: !432)
!16204 = !DILocalVariable(name: "alloc", arg: 2, scope: !16199, file: !12800, line: 444, type: !212)
!16205 = !DILocalVariable(name: "v", scope: !16206, file: !12800, line: 445, type: !182, align: 32)
!16206 = distinct !DILexicalBlock(scope: !16199, file: !12800, line: 445, column: 17)
!16207 = !DILocation(line: 444, column: 37, scope: !16199)
!16208 = !DILocation(line: 444, column: 49, scope: !16199)
!16209 = !DILocation(line: 445, column: 21, scope: !16206)
!16210 = !DILocation(line: 445, column: 29, scope: !16199)
!16211 = !DILocation(line: 724, column: 25, scope: !448, inlinedAt: !16212)
!16212 = distinct !DILocation(line: 450, column: 23, scope: !16206)
!16213 = !DILocation(line: 450, column: 57, scope: !16206)
!16214 = !DILocation(line: 450, column: 32, scope: !16206)
!16215 = !DILocation(line: 451, column: 23, scope: !16206)
!16216 = !DILocation(line: 453, column: 17, scope: !16206)
!16217 = !DILocation(line: 454, column: 14, scope: !16199)
!16218 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN87_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h808cf26663ea8475E", scope: !16219, file: !10746, line: 4109, type: !12803, scopeLine: 4109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !16220)
!16219 = !DINamespace(name: "{impl#32}", scope: !183)
!16220 = !{!16221}
!16221 = !DILocalVariable(name: "s", arg: 1, scope: !16218, file: !10746, line: 4109, type: !432)
!16222 = !DILocation(line: 4109, column: 13, scope: !16218)
!16223 = !DILocation(line: 4110, column: 11, scope: !16218)
!16224 = !DILocation(line: 4111, column: 6, scope: !16218)
!16225 = distinct !DISubprogram(name: "next", linkageName: "_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc01ba1f3a9afe6bbE", scope: !16226, file: !4966, line: 185, type: !16227, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16247)
!16226 = !DINamespace(name: "{impl#5}", scope: !1402)
!16227 = !DISubroutineType(types: !16228)
!16228 = !{!16229, !16246}
!16229 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !14, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !16230, templateParams: !21, identifier: "2a60c431e512f23a518e91c7d28dbb7c")
!16230 = !{!16231}
!16231 = !DICompositeType(tag: DW_TAG_variant_part, scope: !16229, file: !2, size: 64, align: 32, elements: !16232, templateParams: !21, identifier: "fe5d922ac8c44029f1accb5aa8bc6b7a", discriminator: !16245)
!16232 = !{!16233, !16241}
!16233 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !16231, file: !2, baseType: !16234, size: 64, align: 32, extraData: i32 1114112)
!16234 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !16229, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !16235, identifier: "d964fc557d309c02335c26811a136383")
!16235 = !{!16236}
!16236 = !DITemplateTypeParameter(name: "T", type: !16237)
!16237 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 64, align: 32, elements: !16238, templateParams: !21, identifier: "c5c06f363cf05391c7c1f3cdf0feb2c6")
!16238 = !{!16239, !16240}
!16239 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !16237, file: !2, baseType: !9, size: 32, align: 32)
!16240 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !16237, file: !2, baseType: !574, size: 32, align: 32, offset: 32)
!16241 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !16231, file: !2, baseType: !16242, size: 64, align: 32)
!16242 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !16229, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !16243, templateParams: !16235, identifier: "6e427c2853410edb28a72557408a75f")
!16243 = !{!16244}
!16244 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !16242, file: !2, baseType: !16237, size: 64, align: 32, flags: DIFlagPublic)
!16245 = !DIDerivedType(tag: DW_TAG_member, scope: !16229, file: !2, baseType: !51, size: 32, align: 32, offset: 32, flags: DIFlagArtificial)
!16246 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::str::iter::CharIndices", baseType: !4918, size: 32, align: 32, dwarfAddressSpace: 0)
!16247 = !{!16248, !16249, !16251, !16253, !16255}
!16248 = !DILocalVariable(name: "self", arg: 1, scope: !16225, file: !4966, line: 185, type: !16246)
!16249 = !DILocalVariable(name: "pre_len", scope: !16250, file: !4966, line: 186, type: !9, align: 32)
!16250 = distinct !DILexicalBlock(scope: !16225, file: !4966, line: 186, column: 9)
!16251 = !DILocalVariable(name: "ch", scope: !16252, file: !4966, line: 189, type: !574, align: 32)
!16252 = distinct !DILexicalBlock(scope: !16250, file: !4966, line: 189, column: 13)
!16253 = !DILocalVariable(name: "index", scope: !16254, file: !4966, line: 190, type: !9, align: 32)
!16254 = distinct !DILexicalBlock(scope: !16252, file: !4966, line: 190, column: 17)
!16255 = !DILocalVariable(name: "len", scope: !16256, file: !4966, line: 191, type: !9, align: 32)
!16256 = distinct !DILexicalBlock(scope: !16254, file: !4966, line: 191, column: 17)
!16257 = !DILocation(line: 185, column: 13, scope: !16225)
!16258 = !DILocation(line: 141, column: 20, scope: !15630, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 186, column: 38, scope: !16225)
!16260 = !DILocation(line: 33, column: 72, scope: !15630, inlinedAt: !16259)
!16261 = !DILocation(line: 33, column: 33, scope: !15630, inlinedAt: !16259)
!16262 = !DILocation(line: 33, column: 17, scope: !15640, inlinedAt: !16259)
!16263 = !DILocation(line: 57, column: 51, scope: !15640, inlinedAt: !16259)
!16264 = !DILocation(line: 57, column: 30, scope: !15640, inlinedAt: !16259)
!16265 = !DILocation(line: 143, column: 14, scope: !15630, inlinedAt: !16259)
!16266 = !DILocation(line: 186, column: 38, scope: !16225)
!16267 = !DILocation(line: 186, column: 13, scope: !16250)
!16268 = !DILocation(line: 187, column: 25, scope: !16250)
!16269 = !DILocation(line: 187, column: 15, scope: !16250)
!16270 = !DILocation(line: 187, column: 9, scope: !16250)
!16271 = !DILocation(line: 189, column: 18, scope: !16250)
!16272 = !DILocation(line: 189, column: 18, scope: !16252)
!16273 = !DILocation(line: 190, column: 29, scope: !16252)
!16274 = !DILocation(line: 190, column: 21, scope: !16254)
!16275 = !DILocation(line: 141, column: 20, scope: !15630, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 191, column: 42, scope: !16254)
!16277 = !DILocation(line: 33, column: 72, scope: !15630, inlinedAt: !16276)
!16278 = !DILocation(line: 33, column: 33, scope: !15630, inlinedAt: !16276)
!16279 = !DILocation(line: 33, column: 17, scope: !15640, inlinedAt: !16276)
!16280 = !DILocation(line: 57, column: 51, scope: !15640, inlinedAt: !16276)
!16281 = !DILocation(line: 57, column: 30, scope: !15640, inlinedAt: !16276)
!16282 = !DILocation(line: 143, column: 14, scope: !15630, inlinedAt: !16276)
!16283 = !DILocation(line: 191, column: 42, scope: !16254)
!16284 = !DILocation(line: 191, column: 21, scope: !16256)
!16285 = !DILocation(line: 192, column: 38, scope: !16256)
!16286 = !DILocation(line: 188, column: 21, scope: !16250)
!16287 = !DILocation(line: 196, column: 6, scope: !16225)
!16288 = !DILocation(line: 192, column: 17, scope: !16256)
!16289 = !DILocation(line: 193, column: 17, scope: !16256)
!16290 = !DILocation(line: 194, column: 13, scope: !16250)
!16291 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN88_$LT$alloc..collections..btree..map..UnorderedKeyError$u20$as$u20$core..fmt..Display$GT$3fmt17ha6b7e305872fbefcE", scope: !16293, file: !16292, line: 3534, type: !16295, scopeLine: 3534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16299)
!16292 = !DIFile(filename: "src/collections/btree/map.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "c5c274b9e893f348f61ce3e4eec29333")
!16293 = !DINamespace(name: "{impl#102}", scope: !16294)
!16294 = !DINamespace(name: "map", scope: !1355)
!16295 = !DISubroutineType(types: !16296)
!16296 = !{!334, !16297, !351}
!16297 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&alloc::collections::btree::map::UnorderedKeyError", baseType: !16298, size: 32, align: 32, dwarfAddressSpace: 0)
!16298 = !DICompositeType(tag: DW_TAG_structure_type, name: "UnorderedKeyError", scope: !16294, file: !2, align: 8, flags: DIFlagPublic, elements: !21, identifier: "1b3063562840e56de34c8c1ca021ce2b")
!16299 = !{!16300, !16301}
!16300 = !DILocalVariable(name: "self", arg: 1, scope: !16291, file: !16292, line: 3534, type: !16297)
!16301 = !DILocalVariable(name: "f", arg: 2, scope: !16291, file: !16292, line: 3534, type: !351)
!16302 = !DILocation(line: 3534, column: 12, scope: !16291)
!16303 = !DILocation(line: 3534, column: 19, scope: !16291)
!16304 = !DILocation(line: 3535, column: 9, scope: !16291)
!16305 = !DILocation(line: 3536, column: 6, scope: !16291)
!16306 = distinct !DISubprogram(name: "spec_new_impl", linkageName: "_ZN89_$LT$$RF$mut$u20$$u5b$u8$u5d$$u20$as$u20$alloc..ffi..c_str..CString..new..SpecNewImpl$GT$13spec_new_impl17h508c5a947dabec6fE", scope: !16307, file: !398, line: 306, type: !16308, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16310)
!16307 = !DINamespace(name: "{impl#3}", scope: !15160)
!16308 = !DISubroutineType(types: !16309)
!16309 = !{!15163, !5130}
!16310 = !{!16311}
!16311 = !DILocalVariable(name: "self", arg: 1, scope: !16306, file: !398, line: 306, type: !5130)
!16312 = !DILocation(line: 306, column: 30, scope: !16306)
!16313 = !DILocation(line: 273, column: 32, scope: !15186, inlinedAt: !16314)
!16314 = distinct !DILocation(line: 307, column: 17, scope: !16306)
!16315 = !DILocation(line: 282, column: 17, scope: !15193, inlinedAt: !16314)
!16316 = !DILocation(line: 278, column: 40, scope: !15186, inlinedAt: !16314)
!16317 = !DILocation(line: 1012, column: 25, scope: !10233, inlinedAt: !16318)
!16318 = distinct !DILocation(line: 278, column: 55, scope: !15186, inlinedAt: !16314)
!16319 = !DILocation(line: 1013, column: 15, scope: !10233, inlinedAt: !16318)
!16320 = !DILocation(line: 1013, column: 9, scope: !10233, inlinedAt: !16318)
!16321 = !DILocation(line: 1015, column: 21, scope: !10233, inlinedAt: !16318)
!16322 = !DILocation(line: 1014, column: 18, scope: !10233, inlinedAt: !16318)
!16323 = !DILocation(line: 1014, column: 18, scope: !10239, inlinedAt: !16318)
!16324 = !DILocation(line: 278, column: 55, scope: !15186, inlinedAt: !16314)
!16325 = !DILocation(line: 278, column: 17, scope: !15191, inlinedAt: !16314)
!16326 = !DILocation(line: 282, column: 30, scope: !15191, inlinedAt: !16314)
!16327 = !DILocation(line: 283, column: 20, scope: !15193, inlinedAt: !16314)
!16328 = !DILocation(line: 287, column: 19, scope: !15193, inlinedAt: !16314)
!16329 = !DILocation(line: 287, column: 13, scope: !15193, inlinedAt: !16314)
!16330 = !DILocation(line: 288, column: 22, scope: !15193, inlinedAt: !16314)
!16331 = !DILocation(line: 288, column: 22, scope: !15195, inlinedAt: !16314)
!16332 = !DILocation(line: 288, column: 44, scope: !15195, inlinedAt: !16314)
!16333 = !DILocation(line: 288, column: 32, scope: !15195, inlinedAt: !16314)
!16334 = !DILocation(line: 288, column: 28, scope: !15195, inlinedAt: !16314)
!16335 = !DILocation(line: 288, column: 51, scope: !15193, inlinedAt: !16314)
!16336 = !DILocation(line: 289, column: 66, scope: !15193, inlinedAt: !16314)
!16337 = !DILocation(line: 289, column: 37, scope: !15193, inlinedAt: !16314)
!16338 = !DILocation(line: 289, column: 25, scope: !15193, inlinedAt: !16314)
!16339 = !DILocation(line: 289, column: 75, scope: !15193, inlinedAt: !16314)
!16340 = !DILocation(line: 308, column: 14, scope: !16306)
!16341 = distinct !DISubprogram(name: "extend<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h6102ddacc7505c93E", scope: !564, file: !9348, line: 2384, type: !16342, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14760, retainedNodes: !16344)
!16342 = !DISubroutineType(types: !16343)
!16343 = !{null, !567, !488}
!16344 = !{!16345, !16346, !16347, !16349}
!16345 = !DILocalVariable(name: "self", arg: 1, scope: !16341, file: !9348, line: 2384, type: !567)
!16346 = !DILocalVariable(name: "iter", arg: 2, scope: !16341, file: !9348, line: 2384, type: !488)
!16347 = !DILocalVariable(name: "iterator", scope: !16348, file: !9348, line: 2385, type: !488, align: 32)
!16348 = distinct !DILexicalBlock(scope: !16341, file: !9348, line: 2385, column: 9)
!16349 = !DILocalVariable(name: "lower_bound", scope: !16350, file: !9348, line: 2386, type: !9, align: 32)
!16350 = distinct !DILexicalBlock(scope: !16348, file: !9348, line: 2386, column: 9)
!16351 = !DILocation(line: 2384, column: 45, scope: !16341)
!16352 = !DILocation(line: 2384, column: 56, scope: !16341)
!16353 = !DILocation(line: 2385, column: 13, scope: !16348)
!16354 = !DILocation(line: 2385, column: 29, scope: !16341)
!16355 = !DILocation(line: 2386, column: 41, scope: !16348)
!16356 = !DILocation(line: 2386, column: 14, scope: !16348)
!16357 = !DILocation(line: 2386, column: 14, scope: !16350)
!16358 = !DILocation(line: 2387, column: 14, scope: !16350)
!16359 = !DILocation(line: 2388, column: 9, scope: !16350)
!16360 = !DILocation(line: 2388, column: 18, scope: !16350)
!16361 = !DILocation(line: 2389, column: 6, scope: !16341)
!16362 = distinct !DISubprogram(name: "extend<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h6e7360d2b05f9b23E", scope: !564, file: !9348, line: 2384, type: !16363, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14733, retainedNodes: !16365)
!16363 = !DISubroutineType(types: !16364)
!16364 = !{null, !567, !720}
!16365 = !{!16366, !16367, !16368, !16370}
!16366 = !DILocalVariable(name: "self", arg: 1, scope: !16362, file: !9348, line: 2384, type: !567)
!16367 = !DILocalVariable(name: "iter", arg: 2, scope: !16362, file: !9348, line: 2384, type: !720)
!16368 = !DILocalVariable(name: "iterator", scope: !16369, file: !9348, line: 2385, type: !720, align: 32)
!16369 = distinct !DILexicalBlock(scope: !16362, file: !9348, line: 2385, column: 9)
!16370 = !DILocalVariable(name: "lower_bound", scope: !16371, file: !9348, line: 2386, type: !9, align: 32)
!16371 = distinct !DILexicalBlock(scope: !16369, file: !9348, line: 2386, column: 9)
!16372 = !DILocation(line: 2384, column: 45, scope: !16362)
!16373 = !DILocation(line: 2384, column: 56, scope: !16362)
!16374 = !DILocation(line: 2385, column: 13, scope: !16369)
!16375 = !DILocation(line: 2385, column: 29, scope: !16362)
!16376 = !DILocation(line: 2386, column: 41, scope: !16369)
!16377 = !DILocation(line: 2386, column: 14, scope: !16369)
!16378 = !DILocation(line: 2386, column: 14, scope: !16371)
!16379 = !DILocation(line: 2387, column: 14, scope: !16371)
!16380 = !DILocation(line: 2388, column: 9, scope: !16371)
!16381 = !DILocation(line: 2388, column: 18, scope: !16371)
!16382 = !DILocation(line: 2389, column: 6, scope: !16362)
!16383 = distinct !DISubprogram(name: "extend<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17h7d1fa55798036710E", scope: !564, file: !9348, line: 2384, type: !16384, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14679, retainedNodes: !16386)
!16384 = !DISubroutineType(types: !16385)
!16385 = !{null, !567, !679}
!16386 = !{!16387, !16388, !16389, !16391}
!16387 = !DILocalVariable(name: "self", arg: 1, scope: !16383, file: !9348, line: 2384, type: !567)
!16388 = !DILocalVariable(name: "iter", arg: 2, scope: !16383, file: !9348, line: 2384, type: !679)
!16389 = !DILocalVariable(name: "iterator", scope: !16390, file: !9348, line: 2385, type: !679, align: 32)
!16390 = distinct !DILexicalBlock(scope: !16383, file: !9348, line: 2385, column: 9)
!16391 = !DILocalVariable(name: "lower_bound", scope: !16392, file: !9348, line: 2386, type: !9, align: 32)
!16392 = distinct !DILexicalBlock(scope: !16390, file: !9348, line: 2386, column: 9)
!16393 = !DILocation(line: 2384, column: 45, scope: !16383)
!16394 = !DILocation(line: 2384, column: 56, scope: !16383)
!16395 = !DILocation(line: 2385, column: 13, scope: !16390)
!16396 = !DILocation(line: 2385, column: 29, scope: !16383)
!16397 = !DILocation(line: 2386, column: 41, scope: !16390)
!16398 = !DILocation(line: 2386, column: 14, scope: !16390)
!16399 = !DILocation(line: 2386, column: 14, scope: !16392)
!16400 = !DILocation(line: 2387, column: 14, scope: !16392)
!16401 = !DILocation(line: 2388, column: 9, scope: !16392)
!16402 = !DILocation(line: 2388, column: 18, scope: !16392)
!16403 = !DILocation(line: 2389, column: 6, scope: !16383)
!16404 = distinct !DISubprogram(name: "extend<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17ha44a538310b364d1E", scope: !564, file: !9348, line: 2384, type: !16405, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14723, retainedNodes: !16407)
!16405 = !DISubroutineType(types: !16406)
!16406 = !{null, !567, !1012}
!16407 = !{!16408, !16409, !16410, !16412}
!16408 = !DILocalVariable(name: "self", arg: 1, scope: !16404, file: !9348, line: 2384, type: !567)
!16409 = !DILocalVariable(name: "iter", arg: 2, scope: !16404, file: !9348, line: 2384, type: !1012)
!16410 = !DILocalVariable(name: "iterator", scope: !16411, file: !9348, line: 2385, type: !1012, align: 32)
!16411 = distinct !DILexicalBlock(scope: !16404, file: !9348, line: 2385, column: 9)
!16412 = !DILocalVariable(name: "lower_bound", scope: !16413, file: !9348, line: 2386, type: !9, align: 32)
!16413 = distinct !DILexicalBlock(scope: !16411, file: !9348, line: 2386, column: 9)
!16414 = !DILocation(line: 2384, column: 45, scope: !16404)
!16415 = !DILocation(line: 2384, column: 56, scope: !16404)
!16416 = !DILocation(line: 2385, column: 13, scope: !16411)
!16417 = !DILocation(line: 2385, column: 29, scope: !16404)
!16418 = !DILocation(line: 2386, column: 41, scope: !16411)
!16419 = !DILocation(line: 2386, column: 14, scope: !16411)
!16420 = !DILocation(line: 2386, column: 14, scope: !16413)
!16421 = !DILocation(line: 2387, column: 14, scope: !16413)
!16422 = !DILocation(line: 2388, column: 9, scope: !16413)
!16423 = !DILocation(line: 2388, column: 18, scope: !16413)
!16424 = !DILocation(line: 2389, column: 6, scope: !16404)
!16425 = distinct !DISubprogram(name: "extend<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hf15d89b4ce4d10d4E", scope: !564, file: !9348, line: 2384, type: !16426, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14750, retainedNodes: !16428)
!16426 = !DISubroutineType(types: !16427)
!16427 = !{null, !567, !948}
!16428 = !{!16429, !16430, !16431, !16433}
!16429 = !DILocalVariable(name: "self", arg: 1, scope: !16425, file: !9348, line: 2384, type: !567)
!16430 = !DILocalVariable(name: "iter", arg: 2, scope: !16425, file: !9348, line: 2384, type: !948)
!16431 = !DILocalVariable(name: "iterator", scope: !16432, file: !9348, line: 2385, type: !948, align: 32)
!16432 = distinct !DILexicalBlock(scope: !16425, file: !9348, line: 2385, column: 9)
!16433 = !DILocalVariable(name: "lower_bound", scope: !16434, file: !9348, line: 2386, type: !9, align: 32)
!16434 = distinct !DILexicalBlock(scope: !16432, file: !9348, line: 2386, column: 9)
!16435 = !DILocation(line: 2384, column: 45, scope: !16425)
!16436 = !DILocation(line: 2384, column: 56, scope: !16425)
!16437 = !DILocation(line: 2385, column: 13, scope: !16432)
!16438 = !DILocation(line: 2385, column: 29, scope: !16425)
!16439 = !DILocation(line: 2386, column: 41, scope: !16432)
!16440 = !DILocation(line: 2386, column: 14, scope: !16432)
!16441 = !DILocation(line: 2386, column: 14, scope: !16434)
!16442 = !DILocation(line: 2387, column: 14, scope: !16434)
!16443 = !DILocation(line: 2388, column: 9, scope: !16434)
!16444 = !DILocation(line: 2388, column: 18, scope: !16434)
!16445 = !DILocation(line: 2389, column: 6, scope: !16425)
!16446 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h001e8a55092d7a17E", scope: !563, file: !9348, line: 2388, type: !16447, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14679, retainedNodes: !16450)
!16447 = !DISubroutineType(types: !16448)
!16448 = !{null, !16449, !574}
!16449 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", baseType: !701, size: 32, align: 32, dwarfAddressSpace: 0)
!16450 = !{!16451, !16452}
!16451 = !DILocalVariable(name: "c", arg: 2, scope: !16446, file: !9348, line: 2388, type: !574)
!16452 = !DILocalVariable(name: "self", scope: !16446, file: !9348, line: 2384, type: !567, align: 32)
!16453 = !DILocation(line: 2384, column: 50, scope: !16446)
!16454 = !DILocation(line: 2388, column: 33, scope: !16446)
!16455 = !DILocation(line: 2388, column: 36, scope: !16446)
!16456 = !DILocation(line: 2388, column: 41, scope: !16446)
!16457 = !DILocation(line: 2388, column: 48, scope: !16446)
!16458 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h096d257cee374fd4E", scope: !563, file: !9348, line: 2388, type: !16459, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14750, retainedNodes: !16462)
!16459 = !DISubroutineType(types: !16460)
!16460 = !{null, !16461, !574}
!16461 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", baseType: !993, size: 32, align: 32, dwarfAddressSpace: 0)
!16462 = !{!16463, !16464}
!16463 = !DILocalVariable(name: "c", arg: 2, scope: !16458, file: !9348, line: 2388, type: !574)
!16464 = !DILocalVariable(name: "self", scope: !16458, file: !9348, line: 2384, type: !567, align: 32)
!16465 = !DILocation(line: 2384, column: 50, scope: !16458)
!16466 = !DILocation(line: 2388, column: 33, scope: !16458)
!16467 = !DILocation(line: 2388, column: 36, scope: !16458)
!16468 = !DILocation(line: 2388, column: 41, scope: !16458)
!16469 = !DILocation(line: 2388, column: 48, scope: !16458)
!16470 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h9cb8e9ebfb0dc258E", scope: !563, file: !9348, line: 2388, type: !16471, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14733, retainedNodes: !16474)
!16471 = !DISubroutineType(types: !16472)
!16472 = !{null, !16473, !574}
!16473 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", baseType: !757, size: 32, align: 32, dwarfAddressSpace: 0)
!16474 = !{!16475, !16476}
!16475 = !DILocalVariable(name: "c", arg: 2, scope: !16470, file: !9348, line: 2388, type: !574)
!16476 = !DILocalVariable(name: "self", scope: !16470, file: !9348, line: 2384, type: !567, align: 32)
!16477 = !DILocation(line: 2384, column: 50, scope: !16470)
!16478 = !DILocation(line: 2388, column: 33, scope: !16470)
!16479 = !DILocation(line: 2388, column: 36, scope: !16470)
!16480 = !DILocation(line: 2388, column: 41, scope: !16470)
!16481 = !DILocation(line: 2388, column: 48, scope: !16470)
!16482 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hd440c1bffe5902e0E", scope: !563, file: !9348, line: 2388, type: !16483, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14723, retainedNodes: !16486)
!16483 = !DISubroutineType(types: !16484)
!16484 = !{null, !16485, !574}
!16485 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", baseType: !1020, size: 32, align: 32, dwarfAddressSpace: 0)
!16486 = !{!16487, !16488}
!16487 = !DILocalVariable(name: "c", arg: 2, scope: !16482, file: !9348, line: 2388, type: !574)
!16488 = !DILocalVariable(name: "self", scope: !16482, file: !9348, line: 2384, type: !567, align: 32)
!16489 = !DILocation(line: 2384, column: 50, scope: !16482)
!16490 = !DILocation(line: 2388, column: 33, scope: !16482)
!16491 = !DILocation(line: 2388, column: 36, scope: !16482)
!16492 = !DILocation(line: 2388, column: 41, scope: !16482)
!16493 = !DILocation(line: 2388, column: 48, scope: !16482)
!16494 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17hf1595fb0301c1399E", scope: !563, file: !9348, line: 2388, type: !16495, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14760, retainedNodes: !16498)
!16495 = !DISubroutineType(types: !16496)
!16496 = !{null, !16497, !574}
!16497 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::string::{impl#13}::extend::{closure_env#0}<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", baseType: !562, size: 32, align: 32, dwarfAddressSpace: 0)
!16498 = !{!16499, !16500}
!16499 = !DILocalVariable(name: "c", arg: 2, scope: !16494, file: !9348, line: 2388, type: !574)
!16500 = !DILocalVariable(name: "self", scope: !16494, file: !9348, line: 2384, type: !567, align: 32)
!16501 = !DILocation(line: 2384, column: 50, scope: !16494)
!16502 = !DILocation(line: 2388, column: 33, scope: !16494)
!16503 = !DILocation(line: 2388, column: 36, scope: !16494)
!16504 = !DILocation(line: 2388, column: 41, scope: !16494)
!16505 = !DILocation(line: 2388, column: 48, scope: !16494)
!16506 = distinct !DISubprogram(name: "from_slice<u8>", linkageName: "_ZN90_$LT$alloc..sync..Arc$LT$$u5b$T$u5d$$GT$$u20$as$u20$alloc..sync..ArcFromSlice$LT$T$GT$$GT$10from_slice17h70f66378970928ffE", scope: !16507, file: !133, line: 2164, type: !11586, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !16508)
!16507 = !DINamespace(name: "{impl#29}", scope: !131)
!16508 = !{!16509}
!16509 = !DILocalVariable(name: "v", arg: 1, scope: !16506, file: !133, line: 2164, type: !432)
!16510 = !DILocation(line: 2164, column: 19, scope: !16506)
!16511 = !DILocation(line: 2165, column: 18, scope: !16506)
!16512 = !DILocation(line: 2166, column: 6, scope: !16506)
!16513 = distinct !DISubprogram(name: "start_bound<usize>", linkageName: "_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$11start_bound17h98a94e3505a05bb9E", scope: !16515, file: !16514, line: 1072, type: !16516, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !109, retainedNodes: !16536)
!16514 = !DIFile(filename: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/range.rs", directory: "", checksumkind: CSK_MD5, checksum: "7a147c45a76a1a2965a82865e25902fd")
!16515 = !DINamespace(name: "{impl#22}", scope: !1235)
!16516 = !DISubroutineType(types: !16517)
!16517 = !{!16518, !16535}
!16518 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bound<&usize>", scope: !1235, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !16519, templateParams: !21, identifier: "b5fdb104be7fc866223a3e01a2e9901")
!16519 = !{!16520}
!16520 = !DICompositeType(tag: DW_TAG_variant_part, scope: !16518, file: !2, size: 64, align: 32, elements: !16521, templateParams: !21, identifier: "33fe0d4e5a9d2a10eed8c8a34f306f4a", discriminator: !16534)
!16521 = !{!16522, !16528, !16532}
!16522 = !DIDerivedType(tag: DW_TAG_member, name: "Included", scope: !16520, file: !2, baseType: !16523, size: 64, align: 32, extraData: i32 0)
!16523 = !DICompositeType(tag: DW_TAG_structure_type, name: "Included", scope: !16518, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !16524, templateParams: !16526, identifier: "bc906d690d009a404bb57b08d996eb7")
!16524 = !{!16525}
!16525 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !16523, file: !2, baseType: !93, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!16526 = !{!16527}
!16527 = !DITemplateTypeParameter(name: "T", type: !93)
!16528 = !DIDerivedType(tag: DW_TAG_member, name: "Excluded", scope: !16520, file: !2, baseType: !16529, size: 64, align: 32, extraData: i32 1)
!16529 = !DICompositeType(tag: DW_TAG_structure_type, name: "Excluded", scope: !16518, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !16530, templateParams: !16526, identifier: "dfb982b00c639cba22bc9db37ed76be0")
!16530 = !{!16531}
!16531 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !16529, file: !2, baseType: !93, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!16532 = !DIDerivedType(tag: DW_TAG_member, name: "Unbounded", scope: !16520, file: !2, baseType: !16533, size: 64, align: 32, extraData: i32 2)
!16533 = !DICompositeType(tag: DW_TAG_structure_type, name: "Unbounded", scope: !16518, file: !2, size: 64, align: 32, flags: DIFlagPublic, elements: !21, templateParams: !16526, identifier: "ca0d12b23306f8bd65669cdf03c6dccf")
!16534 = !DIDerivedType(tag: DW_TAG_member, scope: !16518, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!16535 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::ops::range::Range<usize>", baseType: !1234, size: 32, align: 32, dwarfAddressSpace: 0)
!16536 = !{!16537}
!16537 = !DILocalVariable(name: "self", arg: 1, scope: !16513, file: !16514, line: 1072, type: !16535)
!16538 = !DILocation(line: 1072, column: 20, scope: !16513)
!16539 = !DILocation(line: 1074, column: 6, scope: !16513)
!16540 = distinct !DISubprogram(name: "end_bound<usize>", linkageName: "_ZN91_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..ops..range..RangeBounds$LT$T$GT$$GT$9end_bound17hdfe857fdf916721cE", scope: !16515, file: !16514, line: 1075, type: !16516, scopeLine: 1075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !109, retainedNodes: !16541)
!16541 = !{!16542}
!16542 = !DILocalVariable(name: "self", arg: 1, scope: !16540, file: !16514, line: 1075, type: !16535)
!16543 = !DILocation(line: 1075, column: 18, scope: !16540)
!16544 = !DILocation(line: 1076, column: 18, scope: !16540)
!16545 = !DILocation(line: 1077, column: 6, scope: !16540)
!16546 = distinct !DISubprogram(name: "fold<bool, u8, core::iter::adapters::map::map_fold::{closure_env#0}<&bool, u8, u8, alloc::str::convert_while_ascii::{closure_env#0}, core::iter::traits::accum::{impl#28}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<bool>, alloc::str::convert_while_ascii::{closure_env#0}>>>>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hc20c44969b923b81E", scope: !16547, file: !15631, line: 235, type: !16548, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !16568, retainedNodes: !16550)
!16547 = !DINamespace(name: "{impl#166}", scope: !504)
!16548 = !DISubroutineType(types: !16549)
!16549 = !{!24, !636, !24, !6600}
!16550 = !{!16551, !16552, !16553, !16554, !16556, !16558, !16560, !16562, !16564, !16566}
!16551 = !DILocalVariable(name: "self", arg: 1, scope: !16546, file: !15631, line: 235, type: !636)
!16552 = !DILocalVariable(name: "init", arg: 2, scope: !16546, file: !15631, line: 235, type: !24)
!16553 = !DILocalVariable(name: "f", arg: 3, scope: !16546, file: !15631, line: 235, type: !6600)
!16554 = !DILocalVariable(name: "len", scope: !16555, file: !15631, line: 29, type: !9, align: 32)
!16555 = distinct !DILexicalBlock(scope: !16546, file: !15631, line: 29, column: 13)
!16556 = !DILocalVariable(name: "end", scope: !16557, file: !15631, line: 33, type: !639, align: 32)
!16557 = distinct !DILexicalBlock(scope: !16546, file: !15631, line: 33, column: 13)
!16558 = !DILocalVariable(name: "acc", scope: !16559, file: !15631, line: 249, type: !24, align: 8)
!16559 = distinct !DILexicalBlock(scope: !16546, file: !15631, line: 249, column: 17)
!16560 = !DILocalVariable(name: "i", scope: !16561, file: !15631, line: 250, type: !9, align: 32)
!16561 = distinct !DILexicalBlock(scope: !16559, file: !15631, line: 250, column: 17)
!16562 = !DILocalVariable(name: "len", scope: !16563, file: !15631, line: 251, type: !9, align: 32)
!16563 = distinct !DILexicalBlock(scope: !16561, file: !15631, line: 251, column: 17)
!16564 = !DILocalVariable(name: "len", scope: !16565, file: !15631, line: 29, type: !9, align: 32)
!16565 = distinct !DILexicalBlock(scope: !16561, file: !15631, line: 29, column: 13)
!16566 = !DILocalVariable(name: "end", scope: !16567, file: !15631, line: 33, type: !639, align: 32)
!16567 = distinct !DILexicalBlock(scope: !16561, file: !15631, line: 33, column: 13)
!16568 = !{!645, !667, !16569}
!16569 = !DITemplateTypeParameter(name: "F", type: !6600)
!16570 = !DILocation(line: 235, column: 27, scope: !16546)
!16571 = !DILocation(line: 235, column: 33, scope: !16546)
!16572 = !DILocation(line: 235, column: 42, scope: !16546)
!16573 = !DILocation(line: 33, column: 17, scope: !16557)
!16574 = !DILocation(line: 249, column: 21, scope: !16559)
!16575 = !DILocation(line: 250, column: 21, scope: !16561)
!16576 = !DILocation(line: 251, column: 21, scope: !16563)
!16577 = !DILocation(line: 28, column: 12, scope: !16546)
!16578 = !DILocation(line: 33, column: 72, scope: !16546)
!16579 = !DILocation(line: 33, column: 33, scope: !16546)
!16580 = !DILocation(line: 44, column: 20, scope: !16557)
!16581 = !DILocation(line: 25, column: 86, scope: !16546)
!16582 = !DILocation(line: 249, column: 31, scope: !16546)
!16583 = !DILocation(line: 250, column: 29, scope: !16559)
!16584 = !DILocation(line: 28, column: 12, scope: !16561)
!16585 = !DILocation(line: 247, column: 28, scope: !16546)
!16586 = !DILocation(line: 265, column: 13, scope: !16546)
!16587 = !DILocation(line: 33, column: 72, scope: !16561)
!16588 = !DILocation(line: 33, column: 33, scope: !16561)
!16589 = !DILocation(line: 33, column: 17, scope: !16567)
!16590 = !DILocation(line: 57, column: 51, scope: !16567)
!16591 = !DILocation(line: 57, column: 30, scope: !16567)
!16592 = !DILocation(line: 255, column: 29, scope: !16563)
!16593 = !DILocation(line: 255, column: 58, scope: !16563)
!16594 = !DILocation(line: 255, column: 71, scope: !16563)
!16595 = !DILocalVariable(name: "self", arg: 1, scope: !16596, file: !1538, line: 651, type: !639)
!16596 = distinct !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h904a7d7eb4ba97eeE", scope: !639, file: !1538, line: 651, type: !16597, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !644, declaration: !16599, retainedNodes: !16600)
!16597 = !DISubroutineType(types: !16598)
!16598 = !{!639, !639, !9}
!16599 = !DISubprogram(name: "add<bool>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h904a7d7eb4ba97eeE", scope: !639, file: !1538, line: 651, type: !16597, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !644)
!16600 = !{!16595, !16601}
!16601 = !DILocalVariable(name: "count", arg: 2, scope: !16596, file: !1538, line: 651, type: !9)
!16602 = !DILocation(line: 651, column: 29, scope: !16596, inlinedAt: !16603)
!16603 = distinct !DILocation(line: 255, column: 67, scope: !16563)
!16604 = !DILocation(line: 651, column: 35, scope: !16596, inlinedAt: !16603)
!16605 = !DILocation(line: 401, column: 25, scope: !4182, inlinedAt: !16606)
!16606 = distinct !DILocation(line: 659, column: 61, scope: !16596, inlinedAt: !16603)
!16607 = !DILocation(line: 659, column: 37, scope: !16596, inlinedAt: !16603)
!16608 = !DILocation(line: 401, column: 25, scope: !4182, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 255, column: 74, scope: !16563)
!16610 = !DILocation(line: 255, column: 27, scope: !16563)
!16611 = !DILocation(line: 255, column: 21, scope: !16563)
!16612 = !DILocation(line: 259, column: 34, scope: !16563)
!16613 = !DILocalVariable(name: "self", arg: 1, scope: !16614, file: !2832, line: 705, type: !9)
!16614 = distinct !DISubprogram(name: "unchecked_add", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$13unchecked_add17h62c541b8df80382cE", scope: !2880, file: !2832, line: 705, type: !3060, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16615)
!16615 = !{!16613, !16616}
!16616 = !DILocalVariable(name: "rhs", arg: 2, scope: !16614, file: !2832, line: 705, type: !9)
!16617 = !DILocation(line: 705, column: 43, scope: !16614, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 259, column: 36, scope: !16563)
!16619 = !DILocation(line: 705, column: 49, scope: !16614, inlinedAt: !16618)
!16620 = !DILocation(line: 77, column: 35, scope: !16621, inlinedAt: !16618)
!16621 = !DILexicalBlockFile(scope: !16614, file: !473, discriminator: 0)
!16622 = !DILocation(line: 78, column: 17, scope: !16621, inlinedAt: !16618)
!16623 = !DILocation(line: 717, column: 17, scope: !16614, inlinedAt: !16618)
!16624 = !DILocation(line: 259, column: 21, scope: !16563)
!16625 = !DILocation(line: 260, column: 24, scope: !16563)
!16626 = !DILocation(line: 260, column: 29, scope: !16563)
!16627 = !DILocation(line: 264, column: 17, scope: !16563)
!16628 = !DILocation(line: 265, column: 14, scope: !16546)
!16629 = distinct !DISubprogram(name: "fold<&str, usize, core::iter::adapters::map::map_fold::{closure_env#0}<&&str, usize, usize, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>, core::fmt::{impl#4}::estimated_capacity::{closure_env#0}>>>>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hdf3ba228be50706cE", scope: !16547, file: !15631, line: 235, type: !16630, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !16650, retainedNodes: !16632)
!16630 = !DISubroutineType(types: !16631)
!16631 = !{!9, !590, !9, !6580}
!16632 = !{!16633, !16634, !16635, !16636, !16638, !16640, !16642, !16644, !16646, !16648}
!16633 = !DILocalVariable(name: "self", arg: 1, scope: !16629, file: !15631, line: 235, type: !590)
!16634 = !DILocalVariable(name: "init", arg: 2, scope: !16629, file: !15631, line: 235, type: !9)
!16635 = !DILocalVariable(name: "f", arg: 3, scope: !16629, file: !15631, line: 235, type: !6580)
!16636 = !DILocalVariable(name: "len", scope: !16637, file: !15631, line: 29, type: !9, align: 32)
!16637 = distinct !DILexicalBlock(scope: !16629, file: !15631, line: 29, column: 13)
!16638 = !DILocalVariable(name: "end", scope: !16639, file: !15631, line: 33, type: !593, align: 32)
!16639 = distinct !DILexicalBlock(scope: !16629, file: !15631, line: 33, column: 13)
!16640 = !DILocalVariable(name: "acc", scope: !16641, file: !15631, line: 249, type: !9, align: 32)
!16641 = distinct !DILexicalBlock(scope: !16629, file: !15631, line: 249, column: 17)
!16642 = !DILocalVariable(name: "i", scope: !16643, file: !15631, line: 250, type: !9, align: 32)
!16643 = distinct !DILexicalBlock(scope: !16641, file: !15631, line: 250, column: 17)
!16644 = !DILocalVariable(name: "len", scope: !16645, file: !15631, line: 251, type: !9, align: 32)
!16645 = distinct !DILexicalBlock(scope: !16643, file: !15631, line: 251, column: 17)
!16646 = !DILocalVariable(name: "len", scope: !16647, file: !15631, line: 29, type: !9, align: 32)
!16647 = distinct !DILexicalBlock(scope: !16643, file: !15631, line: 29, column: 13)
!16648 = !DILocalVariable(name: "end", scope: !16649, file: !15631, line: 33, type: !593, align: 32)
!16649 = distinct !DILexicalBlock(scope: !16643, file: !15631, line: 33, column: 13)
!16650 = !{!598, !621, !16651}
!16651 = !DITemplateTypeParameter(name: "F", type: !6580)
!16652 = !DILocation(line: 235, column: 27, scope: !16629)
!16653 = !DILocation(line: 235, column: 33, scope: !16629)
!16654 = !DILocation(line: 235, column: 42, scope: !16629)
!16655 = !DILocation(line: 33, column: 17, scope: !16639)
!16656 = !DILocation(line: 249, column: 21, scope: !16641)
!16657 = !DILocation(line: 250, column: 21, scope: !16643)
!16658 = !DILocation(line: 251, column: 21, scope: !16645)
!16659 = !DILocation(line: 28, column: 12, scope: !16629)
!16660 = !DILocation(line: 33, column: 72, scope: !16629)
!16661 = !DILocation(line: 33, column: 33, scope: !16629)
!16662 = !DILocation(line: 44, column: 20, scope: !16639)
!16663 = !DILocation(line: 25, column: 86, scope: !16629)
!16664 = !DILocation(line: 249, column: 31, scope: !16629)
!16665 = !DILocation(line: 250, column: 29, scope: !16641)
!16666 = !DILocation(line: 28, column: 12, scope: !16643)
!16667 = !DILocation(line: 247, column: 28, scope: !16629)
!16668 = !DILocation(line: 265, column: 13, scope: !16629)
!16669 = !DILocation(line: 33, column: 72, scope: !16643)
!16670 = !DILocation(line: 33, column: 33, scope: !16643)
!16671 = !DILocation(line: 33, column: 17, scope: !16649)
!16672 = !DILocation(line: 57, column: 51, scope: !16649)
!16673 = !DILocation(line: 57, column: 30, scope: !16649)
!16674 = !DILocation(line: 255, column: 29, scope: !16645)
!16675 = !DILocation(line: 255, column: 58, scope: !16645)
!16676 = !DILocation(line: 255, column: 71, scope: !16645)
!16677 = !DILocalVariable(name: "self", arg: 1, scope: !16678, file: !1538, line: 651, type: !593)
!16678 = distinct !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h0fff8dbb4d40c4d7E", scope: !593, file: !1538, line: 651, type: !16679, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !597, declaration: !16681, retainedNodes: !16682)
!16679 = !DISubroutineType(types: !16680)
!16680 = !{!593, !593, !9}
!16681 = !DISubprogram(name: "add<&str>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h0fff8dbb4d40c4d7E", scope: !593, file: !1538, line: 651, type: !16679, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !597)
!16682 = !{!16677, !16683}
!16683 = !DILocalVariable(name: "count", arg: 2, scope: !16678, file: !1538, line: 651, type: !9)
!16684 = !DILocation(line: 651, column: 29, scope: !16678, inlinedAt: !16685)
!16685 = distinct !DILocation(line: 255, column: 67, scope: !16645)
!16686 = !DILocation(line: 651, column: 35, scope: !16678, inlinedAt: !16685)
!16687 = !DILocation(line: 401, column: 25, scope: !15552, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 659, column: 61, scope: !16678, inlinedAt: !16685)
!16689 = !DILocation(line: 659, column: 37, scope: !16678, inlinedAt: !16685)
!16690 = !DILocation(line: 401, column: 25, scope: !15552, inlinedAt: !16691)
!16691 = distinct !DILocation(line: 255, column: 74, scope: !16645)
!16692 = !DILocation(line: 255, column: 27, scope: !16645)
!16693 = !DILocation(line: 255, column: 21, scope: !16645)
!16694 = !DILocation(line: 259, column: 34, scope: !16645)
!16695 = !DILocation(line: 705, column: 43, scope: !16614, inlinedAt: !16696)
!16696 = distinct !DILocation(line: 259, column: 36, scope: !16645)
!16697 = !DILocation(line: 705, column: 49, scope: !16614, inlinedAt: !16696)
!16698 = !DILocation(line: 77, column: 35, scope: !16621, inlinedAt: !16696)
!16699 = !DILocation(line: 78, column: 17, scope: !16621, inlinedAt: !16696)
!16700 = !DILocation(line: 717, column: 17, scope: !16614, inlinedAt: !16696)
!16701 = !DILocation(line: 259, column: 21, scope: !16645)
!16702 = !DILocation(line: 260, column: 24, scope: !16645)
!16703 = !DILocation(line: 260, column: 29, scope: !16645)
!16704 = !DILocation(line: 264, column: 17, scope: !16645)
!16705 = !DILocation(line: 265, column: 14, scope: !16629)
!16706 = distinct !DISubprogram(name: "next<[u8; 2]>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17haa92a93c49917941E", scope: !16547, file: !15631, line: 156, type: !16707, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !16710)
!16707 = !DISubroutineType(types: !16708)
!16708 = !{!8406, !16709}
!16709 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::slice::iter::Iter<[u8; 2]>", baseType: !503, size: 32, align: 32, dwarfAddressSpace: 0)
!16710 = !{!16711, !16712, !16714, !16716}
!16711 = !DILocalVariable(name: "self", arg: 1, scope: !16706, file: !15631, line: 156, type: !16709)
!16712 = !DILocalVariable(name: "ptr", scope: !16713, file: !15631, line: 160, type: !507, align: 32)
!16713 = distinct !DILexicalBlock(scope: !16706, file: !15631, line: 160, column: 17)
!16714 = !DILocalVariable(name: "end_or_len", scope: !16715, file: !15631, line: 161, type: !510, align: 32)
!16715 = distinct !DILexicalBlock(scope: !16713, file: !15631, line: 161, column: 17)
!16716 = !DILocalVariable(name: "len", scope: !16717, file: !15631, line: 166, type: !9, align: 32)
!16717 = distinct !DILexicalBlock(scope: !16715, file: !15631, line: 166, column: 25)
!16718 = !DILocation(line: 156, column: 21, scope: !16706)
!16719 = !DILocation(line: 160, column: 21, scope: !16713)
!16720 = !DILocation(line: 160, column: 27, scope: !16706)
!16721 = !DILocation(line: 161, column: 34, scope: !16713)
!16722 = !DILocation(line: 161, column: 21, scope: !16715)
!16723 = !DILocation(line: 165, column: 24, scope: !16715)
!16724 = !DILocation(line: 179, column: 35, scope: !16715)
!16725 = !DILocation(line: 179, column: 28, scope: !16715)
!16726 = !DILocation(line: 184, column: 36, scope: !16715)
!16727 = !DILocalVariable(name: "self", arg: 1, scope: !16728, file: !1538, line: 651, type: !507)
!16728 = distinct !DISubprogram(name: "add<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h08198037d1ec8248E", scope: !507, file: !1538, line: 651, type: !16729, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !16731, retainedNodes: !16732)
!16729 = !DISubroutineType(types: !16730)
!16730 = !{!507, !507, !9}
!16731 = !DISubprogram(name: "add<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$3add17h08198037d1ec8248E", scope: !507, file: !1538, line: 651, type: !16729, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!16732 = !{!16727, !16733}
!16733 = !DILocalVariable(name: "count", arg: 2, scope: !16728, file: !1538, line: 651, type: !9)
!16734 = !DILocation(line: 651, column: 29, scope: !16728, inlinedAt: !16735)
!16735 = distinct !DILocation(line: 184, column: 40, scope: !16715)
!16736 = !DILocation(line: 651, column: 35, scope: !16728, inlinedAt: !16735)
!16737 = !DILocation(line: 401, column: 25, scope: !4161, inlinedAt: !16738)
!16738 = distinct !DILocation(line: 659, column: 61, scope: !16728, inlinedAt: !16735)
!16739 = !DILocation(line: 659, column: 37, scope: !16728, inlinedAt: !16735)
!16740 = !DILocation(line: 184, column: 25, scope: !16715)
!16741 = !DILocation(line: 165, column: 21, scope: !16715)
!16742 = !DILocation(line: 180, column: 36, scope: !16715)
!16743 = !DILocation(line: 0, scope: !16744)
!16744 = !DILexicalBlockFile(scope: !16715, file: !4885, discriminator: 0)
!16745 = !DILocation(line: 189, column: 27, scope: !16715)
!16746 = !DILocalVariable(name: "self", arg: 1, scope: !16747, file: !1538, line: 440, type: !15528)
!16747 = distinct !DISubprogram(name: "as_ref<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h7d3d2b0795ec44d5E", scope: !507, file: !1538, line: 440, type: !16748, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, declaration: !16750, retainedNodes: !16751)
!16748 = !DISubroutineType(types: !16749)
!16749 = !{!521, !15528}
!16750 = !DISubprogram(name: "as_ref<[u8; 2]>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ref17h7d3d2b0795ec44d5E", scope: !507, file: !1538, line: 440, type: !16748, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit, templateParams: !514)
!16751 = !{!16746}
!16752 = !DILocation(line: 440, column: 36, scope: !16747, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 189, column: 32, scope: !16715)
!16754 = !DILocation(line: 444, column: 20, scope: !16747, inlinedAt: !16753)
!16755 = !DILocation(line: 401, column: 25, scope: !4161, inlinedAt: !16756)
!16756 = distinct !DILocation(line: 444, column: 25, scope: !16747, inlinedAt: !16753)
!16757 = !DILocalVariable(name: "self", arg: 1, scope: !16758, file: !1810, line: 134, type: !3735)
!16758 = distinct !DISubprogram(name: "cast_const<[u8; 2]>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$10cast_const17h3118a1cdd586f8e6E", scope: !1811, file: !1810, line: 134, type: !16759, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !16761)
!16759 = !DISubroutineType(types: !16760)
!16760 = !{!510, !3735}
!16761 = !{!16757}
!16762 = !DILocation(line: 134, column: 29, scope: !16758, inlinedAt: !16763)
!16763 = distinct !DILocation(line: 444, column: 34, scope: !16747, inlinedAt: !16753)
!16764 = !DILocation(line: 189, column: 21, scope: !16715)
!16765 = !DILocation(line: 191, column: 14, scope: !16706)
!16766 = distinct !DISubprogram(name: "size_hint<[u8; 2]>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h962f2a63bd9e5a1dE", scope: !16547, file: !15631, line: 194, type: !16767, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !514, retainedNodes: !16770)
!16767 = !DISubroutineType(types: !16768)
!16768 = !{!802, !16769}
!16769 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<[u8; 2]>", baseType: !503, size: 32, align: 32, dwarfAddressSpace: 0)
!16770 = !{!16771, !16772, !16774, !16776}
!16771 = !DILocalVariable(name: "self", arg: 1, scope: !16766, file: !15631, line: 194, type: !16769)
!16772 = !DILocalVariable(name: "exact", scope: !16773, file: !15631, line: 195, type: !9, align: 32)
!16773 = distinct !DILexicalBlock(scope: !16766, file: !15631, line: 195, column: 17)
!16774 = !DILocalVariable(name: "len", scope: !16775, file: !15631, line: 29, type: !9, align: 32)
!16775 = distinct !DILexicalBlock(scope: !16766, file: !15631, line: 29, column: 13)
!16776 = !DILocalVariable(name: "end", scope: !16777, file: !15631, line: 33, type: !507, align: 32)
!16777 = distinct !DILexicalBlock(scope: !16766, file: !15631, line: 33, column: 13)
!16778 = !DILocation(line: 194, column: 26, scope: !16766)
!16779 = !DILocation(line: 195, column: 21, scope: !16773)
!16780 = !DILocation(line: 28, column: 12, scope: !16766)
!16781 = !DILocation(line: 33, column: 72, scope: !16766)
!16782 = !DILocation(line: 33, column: 33, scope: !16766)
!16783 = !DILocation(line: 33, column: 17, scope: !16777)
!16784 = !DILocation(line: 57, column: 51, scope: !16777)
!16785 = !DILocation(line: 57, column: 30, scope: !16777)
!16786 = !DILocation(line: 196, column: 18, scope: !16773)
!16787 = !DILocation(line: 196, column: 30, scope: !16773)
!16788 = !DILocation(line: 196, column: 17, scope: !16773)
!16789 = !DILocation(line: 197, column: 14, scope: !16766)
!16790 = distinct !DISubprogram(name: "size_hint<u16>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfffe6b3678ea3e33E", scope: !16547, file: !15631, line: 194, type: !16791, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !538, retainedNodes: !16794)
!16791 = !DISubroutineType(types: !16792)
!16792 = !{!802, !16793}
!16793 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::slice::iter::Iter<u16>", baseType: !730, size: 32, align: 32, dwarfAddressSpace: 0)
!16794 = !{!16795, !16796, !16798, !16800}
!16795 = !DILocalVariable(name: "self", arg: 1, scope: !16790, file: !15631, line: 194, type: !16793)
!16796 = !DILocalVariable(name: "exact", scope: !16797, file: !15631, line: 195, type: !9, align: 32)
!16797 = distinct !DILexicalBlock(scope: !16790, file: !15631, line: 195, column: 17)
!16798 = !DILocalVariable(name: "len", scope: !16799, file: !15631, line: 29, type: !9, align: 32)
!16799 = distinct !DILexicalBlock(scope: !16790, file: !15631, line: 29, column: 13)
!16800 = !DILocalVariable(name: "end", scope: !16801, file: !15631, line: 33, type: !733, align: 32)
!16801 = distinct !DILexicalBlock(scope: !16790, file: !15631, line: 33, column: 13)
!16802 = !DILocation(line: 194, column: 26, scope: !16790)
!16803 = !DILocation(line: 195, column: 21, scope: !16797)
!16804 = !DILocation(line: 28, column: 12, scope: !16790)
!16805 = !DILocation(line: 33, column: 72, scope: !16790)
!16806 = !DILocation(line: 33, column: 33, scope: !16790)
!16807 = !DILocation(line: 33, column: 17, scope: !16801)
!16808 = !DILocation(line: 57, column: 51, scope: !16801)
!16809 = !DILocation(line: 57, column: 30, scope: !16801)
!16810 = !DILocation(line: 196, column: 18, scope: !16797)
!16811 = !DILocation(line: 196, column: 30, scope: !16797)
!16812 = !DILocation(line: 196, column: 17, scope: !16797)
!16813 = !DILocation(line: 197, column: 14, scope: !16790)
!16814 = distinct !DISubprogram(name: "add_assign", linkageName: "_ZN92_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$core..ops..arith..AddAssign$LT$$RF$str$GT$$GT$10add_assign17he42c86d256aa516bE", scope: !16815, file: !12857, line: 482, type: !16816, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16818)
!16815 = !DINamespace(name: "{impl#19}", scope: !3457)
!16816 = !DISubroutineType(types: !16817)
!16817 = !{null, !12881, !124}
!16818 = !{!16819, !16820, !16821, !16823}
!16819 = !DILocalVariable(name: "self", arg: 1, scope: !16814, file: !12857, line: 482, type: !12881)
!16820 = !DILocalVariable(name: "rhs", arg: 2, scope: !16814, file: !12857, line: 482, type: !124)
!16821 = !DILocalVariable(name: "lhs", scope: !16822, file: !12857, line: 486, type: !124, align: 32)
!16822 = distinct !DILexicalBlock(scope: !16814, file: !12857, line: 486, column: 47)
!16823 = !DILocalVariable(name: "s", scope: !16824, file: !12857, line: 487, type: !178, align: 32)
!16824 = distinct !DILexicalBlock(scope: !16822, file: !12857, line: 487, column: 17)
!16825 = !DILocation(line: 482, column: 19, scope: !16814)
!16826 = !DILocation(line: 482, column: 30, scope: !16814)
!16827 = !DILocation(line: 487, column: 21, scope: !16824)
!16828 = !DILocation(line: 483, column: 12, scope: !16814)
!16829 = !DILocation(line: 483, column: 17, scope: !16814)
!16830 = !DILocation(line: 485, column: 24, scope: !16814)
!16831 = !DILocation(line: 485, column: 20, scope: !16814)
!16832 = !DILocation(line: 484, column: 21, scope: !16814)
!16833 = !DILocation(line: 484, column: 13, scope: !16814)
!16834 = !DILocation(line: 483, column: 9, scope: !16814)
!16835 = !DILocation(line: 486, column: 41, scope: !16822)
!16836 = !DILocation(line: 486, column: 20, scope: !16822)
!16837 = !DILocation(line: 493, column: 6, scope: !16814)
!16838 = !DILocation(line: 491, column: 18, scope: !16814)
!16839 = !DILocation(line: 491, column: 27, scope: !16814)
!16840 = !DILocation(line: 486, column: 34, scope: !16822)
!16841 = !DILocation(line: 487, column: 55, scope: !16822)
!16842 = !DILocation(line: 487, column: 67, scope: !16822)
!16843 = !DILocation(line: 487, column: 51, scope: !16822)
!16844 = !DILocation(line: 487, column: 29, scope: !16822)
!16845 = !DILocation(line: 488, column: 19, scope: !16824)
!16846 = !DILocation(line: 489, column: 36, scope: !16824)
!16847 = !DILocation(line: 489, column: 25, scope: !16824)
!16848 = !DILocation(line: 489, column: 17, scope: !16824)
!16849 = !DILocation(line: 486, column: 13, scope: !16814)
!16850 = !DILocation(line: 482, column: 5, scope: !16814)
!16851 = distinct !DISubprogram(name: "drop", linkageName: "_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h12162e260678d207E", scope: !16853, file: !16852, line: 21, type: !16856, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !16860)
!16852 = !DIFile(filename: "src/collections/btree/mem.rs", directory: "/Users/namse/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc", checksumkind: CSK_MD5, checksum: "cbbb453e921be15b68c5af700a463b89")
!16853 = !DINamespace(name: "{impl#0}", scope: !16854)
!16854 = !DINamespace(name: "replace", scope: !16855)
!16855 = !DINamespace(name: "mem", scope: !1355)
!16856 = !DISubroutineType(types: !16857)
!16857 = !{null, !16858}
!16858 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut alloc::collections::btree::mem::replace::PanicGuard", baseType: !16859, size: 32, align: 32, dwarfAddressSpace: 0)
!16859 = !DICompositeType(tag: DW_TAG_structure_type, name: "PanicGuard", scope: !16854, file: !2, align: 8, flags: DIFlagProtected, elements: !21, identifier: "53f7313bbcd9ae0d4ffa924529a99d19")
!16860 = !{!16861}
!16861 = !DILocalVariable(name: "self", arg: 1, scope: !16851, file: !16852, line: 21, type: !16858)
!16862 = !DILocation(line: 21, column: 17, scope: !16851)
!16863 = !DILocation(line: 22, column: 13, scope: !16851)
!16864 = distinct !DISubprogram(name: "from_output<()>", linkageName: "_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h275adc288524ea21E", scope: !16865, file: !2077, line: 414, type: !16866, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !328, retainedNodes: !16868)
!16865 = !DINamespace(name: "{impl#1}", scope: !1043)
!16866 = !DISubroutineType(types: !16867)
!16867 = !{null, !7}
!16868 = !{!16869}
!16869 = !DILocalVariable(name: "x", arg: 1, scope: !16864, file: !2077, line: 414, type: !7)
!16870 = !DILocation(line: 414, column: 20, scope: !16864)
!16871 = !DILocation(line: 416, column: 6, scope: !16864)
!16872 = distinct !DISubprogram(name: "branch<()>", linkageName: "_ZN94_$LT$core..ops..try_trait..NeverShortCircuit$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8695537a035660e5E", scope: !16865, file: !2077, line: 409, type: !16873, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !328, retainedNodes: !16875)
!16873 = !DISubroutineType(types: !16874)
!16874 = !{null, !1055}
!16875 = !{!16876}
!16876 = !DILocalVariable(name: "self", arg: 1, scope: !16872, file: !2077, line: 409, type: !1055)
!16877 = !DILocation(line: 409, column: 15, scope: !16872)
!16878 = !DILocation(line: 411, column: 6, scope: !16872)
!16879 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN95_$LT$alloc..rc..Rc$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h29358df697d12a9dE", scope: !16880, file: !9489, line: 2694, type: !9795, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !16881)
!16880 = !DINamespace(name: "{impl#53}", scope: !2049)
!16881 = !{!16882}
!16882 = !DILocalVariable(name: "v", arg: 1, scope: !16879, file: !9489, line: 2694, type: !432)
!16883 = !DILocation(line: 2694, column: 13, scope: !16879)
!16884 = !DILocation(line: 2695, column: 9, scope: !16879)
!16885 = !DILocation(line: 2696, column: 6, scope: !16879)
!16886 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16be_lossy::{closure_env#0}>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h2e98aaf956810971E", scope: !16887, file: !9348, line: 2305, type: !5779, scopeLine: 2305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14760, retainedNodes: !16888)
!16887 = !DINamespace(name: "{impl#7}", scope: !179)
!16888 = !{!16889, !16890}
!16889 = !DILocalVariable(name: "iter", arg: 1, scope: !16886, file: !9348, line: 2305, type: !488)
!16890 = !DILocalVariable(name: "buf", scope: !16891, file: !9348, line: 2306, type: !178, align: 32)
!16891 = distinct !DILexicalBlock(scope: !16886, file: !9348, line: 2306, column: 9)
!16892 = !DILocation(line: 2305, column: 48, scope: !16886)
!16893 = !DILocation(line: 2306, column: 13, scope: !16891)
!16894 = !DILocation(line: 2306, column: 23, scope: !16886)
!16895 = !DILocation(line: 2307, column: 13, scope: !16891)
!16896 = !DILocation(line: 2308, column: 9, scope: !16891)
!16897 = !DILocation(line: 2309, column: 6, scope: !16886)
!16898 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h352c46a264a5aa0eE", scope: !16887, file: !9348, line: 2305, type: !5911, scopeLine: 2305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14723, retainedNodes: !16899)
!16899 = !{!16900, !16901}
!16900 = !DILocalVariable(name: "iter", arg: 1, scope: !16898, file: !9348, line: 2305, type: !1012)
!16901 = !DILocalVariable(name: "buf", scope: !16902, file: !9348, line: 2306, type: !178, align: 32)
!16902 = distinct !DILexicalBlock(scope: !16898, file: !9348, line: 2306, column: 9)
!16903 = !DILocation(line: 2305, column: 48, scope: !16898)
!16904 = !DILocation(line: 2306, column: 13, scope: !16902)
!16905 = !DILocation(line: 2306, column: 23, scope: !16898)
!16906 = !DILocation(line: 2307, column: 13, scope: !16902)
!16907 = !DILocation(line: 2308, column: 9, scope: !16902)
!16908 = !DILocation(line: 2309, column: 6, scope: !16898)
!16909 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>, alloc::string::{impl#0}::from_utf16_lossy::{closure_env#0}>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h88e8826910049821E", scope: !16887, file: !9348, line: 2305, type: !5861, scopeLine: 2305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14733, retainedNodes: !16910)
!16910 = !{!16911, !16912}
!16911 = !DILocalVariable(name: "iter", arg: 1, scope: !16909, file: !9348, line: 2305, type: !720)
!16912 = !DILocalVariable(name: "buf", scope: !16913, file: !9348, line: 2306, type: !178, align: 32)
!16913 = distinct !DILexicalBlock(scope: !16909, file: !9348, line: 2306, column: 9)
!16914 = !DILocation(line: 2305, column: 48, scope: !16909)
!16915 = !DILocation(line: 2306, column: 13, scope: !16913)
!16916 = !DILocation(line: 2306, column: 23, scope: !16909)
!16917 = !DILocation(line: 2307, column: 13, scope: !16913)
!16918 = !DILocation(line: 2308, column: 9, scope: !16913)
!16919 = !DILocation(line: 2309, column: 6, scope: !16909)
!16920 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::map::Map<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, alloc::string::{impl#0}::from_utf16le_lossy::{closure_env#0}>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hfc63545a9e21dd59E", scope: !16887, file: !9348, line: 2305, type: !5835, scopeLine: 2305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14679, retainedNodes: !16921)
!16921 = !{!16922, !16923}
!16922 = !DILocalVariable(name: "iter", arg: 1, scope: !16920, file: !9348, line: 2305, type: !679)
!16923 = !DILocalVariable(name: "buf", scope: !16924, file: !9348, line: 2306, type: !178, align: 32)
!16924 = distinct !DILexicalBlock(scope: !16920, file: !9348, line: 2306, column: 9)
!16925 = !DILocation(line: 2305, column: 48, scope: !16920)
!16926 = !DILocation(line: 2306, column: 13, scope: !16924)
!16927 = !DILocation(line: 2306, column: 23, scope: !16920)
!16928 = !DILocation(line: 2307, column: 13, scope: !16924)
!16929 = !DILocation(line: 2308, column: 9, scope: !16924)
!16930 = !DILocation(line: 2309, column: 6, scope: !16920)
!16931 = distinct !DISubprogram(name: "from_iter<core::iter::adapters::GenericShunt<core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>, core::result::Result<core::convert::Infallible, core::char::decode::DecodeUtf16Error>>>", linkageName: "_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17hfdeb9e7846f4cf91E", scope: !16887, file: !9348, line: 2305, type: !5809, scopeLine: 2305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !14750, retainedNodes: !16932)
!16932 = !{!16933, !16934}
!16933 = !DILocalVariable(name: "iter", arg: 1, scope: !16931, file: !9348, line: 2305, type: !948)
!16934 = !DILocalVariable(name: "buf", scope: !16935, file: !9348, line: 2306, type: !178, align: 32)
!16935 = distinct !DILexicalBlock(scope: !16931, file: !9348, line: 2306, column: 9)
!16936 = !DILocation(line: 2305, column: 48, scope: !16931)
!16937 = !DILocation(line: 2306, column: 13, scope: !16935)
!16938 = !DILocation(line: 2306, column: 23, scope: !16931)
!16939 = !DILocation(line: 2307, column: 13, scope: !16935)
!16940 = !DILocation(line: 2308, column: 9, scope: !16935)
!16941 = !DILocation(line: 2309, column: 6, scope: !16931)
!16942 = distinct !DISubprogram(name: "from_output<char, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h1a7b489c338cc154E", scope: !16943, file: !2090, line: 109, type: !16944, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2126, retainedNodes: !16946)
!16943 = !DINamespace(name: "{impl#0}", scope: !1090)
!16944 = !DISubroutineType(types: !16945)
!16945 = !{!2118, !7}
!16946 = !{!16947}
!16947 = !DILocalVariable(name: "output", arg: 1, scope: !16942, file: !2090, line: 109, type: !7)
!16948 = !DILocation(line: 109, column: 20, scope: !16942)
!16949 = !DILocation(line: 111, column: 6, scope: !16942)
!16950 = distinct !DISubprogram(name: "from_output<core::ops::try_trait::NeverShortCircuit<()>, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h6cc3c0a370de7acfE", scope: !16943, file: !2090, line: 109, type: !16951, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1098, retainedNodes: !16953)
!16951 = !DISubroutineType(types: !16952)
!16952 = !{!1089, !7}
!16953 = !{!16954}
!16954 = !DILocalVariable(name: "output", arg: 1, scope: !16950, file: !2090, line: 109, type: !7)
!16955 = !DILocation(line: 109, column: 20, scope: !16950)
!16956 = !DILocation(line: 111, column: 6, scope: !16950)
!16957 = distinct !DISubprogram(name: "branch<char, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h12ce1bf600ceac79E", scope: !16943, file: !2090, line: 114, type: !16958, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !2126, retainedNodes: !16975)
!16958 = !DISubroutineType(types: !16959)
!16959 = !{!16960, !2118}
!16960 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<char, core::convert::Infallible>, ()>", scope: !1090, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !16961, templateParams: !21, identifier: "5251030f03f8bf119e0f9f0731bb0cd2")
!16961 = !{!16962}
!16962 = !DICompositeType(tag: DW_TAG_variant_part, scope: !16960, file: !2, size: 32, align: 32, elements: !16963, templateParams: !21, identifier: "d9405197b3193b62ec0f9a9c40c979fb", discriminator: !16974)
!16963 = !{!16964, !16970}
!16964 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !16962, file: !2, baseType: !16965, size: 32, align: 32, extraData: i32 1114112)
!16965 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !16960, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !16966, templateParams: !16968, identifier: "866e647c8c8aa83e94e0d39eae74202a")
!16966 = !{!16967}
!16967 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !16965, file: !2, baseType: !7, align: 8, flags: DIFlagPublic)
!16968 = !{!16969, !1100}
!16969 = !DITemplateTypeParameter(name: "B", type: !2132)
!16970 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !16962, file: !2, baseType: !16971, size: 32, align: 32)
!16971 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !16960, file: !2, size: 32, align: 32, flags: DIFlagPublic, elements: !16972, templateParams: !16968, identifier: "4d7bb92cdf4dcedf30c2b33b88c97e33")
!16972 = !{!16973}
!16973 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !16971, file: !2, baseType: !2132, size: 32, align: 32, flags: DIFlagPublic)
!16974 = !DIDerivedType(tag: DW_TAG_member, scope: !16960, file: !2, baseType: !51, size: 32, align: 32, flags: DIFlagArtificial)
!16975 = !{!16976, !16977, !16979}
!16976 = !DILocalVariable(name: "self", arg: 1, scope: !16957, file: !2090, line: 114, type: !2118)
!16977 = !DILocalVariable(name: "c", scope: !16978, file: !2090, line: 116, type: !7, align: 8)
!16978 = distinct !DILexicalBlock(scope: !16957, file: !2090, line: 116, column: 13)
!16979 = !DILocalVariable(name: "b", scope: !16980, file: !2090, line: 117, type: !574, align: 32)
!16980 = distinct !DILexicalBlock(scope: !16957, file: !2090, line: 117, column: 13)
!16981 = !DILocation(line: 114, column: 15, scope: !16957)
!16982 = !DILocation(line: 116, column: 35, scope: !16978)
!16983 = !DILocation(line: 115, column: 15, scope: !16957)
!16984 = !DILocation(line: 115, column: 9, scope: !16957)
!16985 = !DILocation(line: 117, column: 32, scope: !16957)
!16986 = !DILocation(line: 117, column: 32, scope: !16980)
!16987 = !DILocation(line: 117, column: 38, scope: !16980)
!16988 = !DILocation(line: 117, column: 78, scope: !16957)
!16989 = !DILocation(line: 116, column: 41, scope: !16978)
!16990 = !DILocation(line: 116, column: 64, scope: !16957)
!16991 = !DILocation(line: 119, column: 6, scope: !16957)
!16992 = distinct !DISubprogram(name: "branch<core::ops::try_trait::NeverShortCircuit<()>, ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc728983dae19b88dE", scope: !16943, file: !2090, line: 114, type: !16993, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1098, retainedNodes: !17010)
!16993 = !DISubroutineType(types: !16994)
!16994 = !{!16995, !1089}
!16995 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::ops::control_flow::ControlFlow<core::ops::try_trait::NeverShortCircuit<()>, core::convert::Infallible>, ()>", scope: !1090, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !16996, templateParams: !21, identifier: "c6d2f2d4efbe06e95afc7c07e8f132f")
!16996 = !{!16997}
!16997 = !DICompositeType(tag: DW_TAG_variant_part, scope: !16995, file: !2, size: 8, align: 8, elements: !16998, templateParams: !21, identifier: "4c2fd619c5d58376a254439bf0291f85", discriminator: !17009)
!16998 = !{!16999, !17005}
!16999 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !16997, file: !2, baseType: !17000, size: 8, align: 8, extraData: i8 0)
!17000 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !16995, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !17001, templateParams: !17003, identifier: "3f9ca36796b11f47e961b9f4f8472323")
!17001 = !{!17002}
!17002 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !17000, file: !2, baseType: !7, align: 8, offset: 8, flags: DIFlagPublic)
!17003 = !{!17004, !1100}
!17004 = !DITemplateTypeParameter(name: "B", type: !2094)
!17005 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !16997, file: !2, baseType: !17006, size: 8, align: 8, extraData: i8 1)
!17006 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !16995, file: !2, size: 8, align: 8, flags: DIFlagPublic, elements: !17007, templateParams: !17003, identifier: "a11880c9d4dfff516d93edf2364aae62")
!17007 = !{!17008}
!17008 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !17006, file: !2, baseType: !2094, align: 8, offset: 8, flags: DIFlagPublic)
!17009 = !DIDerivedType(tag: DW_TAG_member, scope: !16995, file: !2, baseType: !24, size: 8, align: 8, flags: DIFlagArtificial)
!17010 = !{!17011, !17012, !17014}
!17011 = !DILocalVariable(name: "self", arg: 1, scope: !16992, file: !2090, line: 114, type: !1089)
!17012 = !DILocalVariable(name: "c", scope: !17013, file: !2090, line: 116, type: !7, align: 8)
!17013 = distinct !DILexicalBlock(scope: !16992, file: !2090, line: 116, column: 13)
!17014 = !DILocalVariable(name: "b", scope: !17015, file: !2090, line: 117, type: !1055, align: 8)
!17015 = distinct !DILexicalBlock(scope: !16992, file: !2090, line: 117, column: 13)
!17016 = !DILocation(line: 114, column: 15, scope: !16992)
!17017 = !DILocation(line: 116, column: 35, scope: !17013)
!17018 = !DILocation(line: 117, column: 32, scope: !17015)
!17019 = !DILocation(line: 115, column: 15, scope: !16992)
!17020 = !DILocation(line: 115, column: 9, scope: !16992)
!17021 = !DILocation(line: 117, column: 38, scope: !17015)
!17022 = !DILocation(line: 117, column: 78, scope: !16992)
!17023 = !DILocation(line: 116, column: 41, scope: !17013)
!17024 = !DILocation(line: 116, column: 64, scope: !16992)
!17025 = !DILocation(line: 119, column: 6, scope: !16992)
!17026 = distinct !DISubprogram(name: "next_back", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h8a4af8a65e0bc216E", scope: !8113, file: !4966, line: 128, type: !16113, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !17027)
!17027 = !{!17028}
!17028 = !DILocalVariable(name: "self", arg: 1, scope: !17026, file: !4966, line: 128, type: !5407)
!17029 = !DILocation(line: 128, column: 18, scope: !17026)
!17030 = !DILocation(line: 131, column: 18, scope: !17026)
!17031 = !DILocation(line: 131, column: 58, scope: !17026)
!17032 = !DILocation(line: 132, column: 6, scope: !17026)
!17033 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN96_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back28_$u7b$$u7b$closure$u7d$$u7d$17hffcce9777e67d4f7E", scope: !8112, file: !4966, line: 131, type: !17034, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !17036)
!17034 = !DISubroutineType(types: !17035)
!17035 = !{!574, !8111, !51}
!17036 = !{!17037, !17038}
!17037 = !DILocalVariable(name: "ch", arg: 2, scope: !17033, file: !4966, line: 131, type: !51)
!17038 = !DILocalVariable(arg: 1, scope: !17033, file: !4966, line: 131, type: !8111)
!17039 = !DILocation(line: 131, column: 62, scope: !17033)
!17040 = !DILocation(line: 131, column: 63, scope: !17033)
!17041 = !DILocation(line: 131, column: 67, scope: !17033)
!17042 = !DILocation(line: 131, column: 95, scope: !17033)
!17043 = distinct !DISubprogram(name: "from", linkageName: "_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..boxed..Box$LT$str$GT$$GT$$GT$4from17hb79050dc234ba1f0E", scope: !17044, file: !9348, line: 3049, type: !10485, scopeLine: 3049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !17045)
!17044 = !DINamespace(name: "{impl#46}", scope: !179)
!17045 = !{!17046}
!17046 = !DILocalVariable(name: "s", arg: 1, scope: !17043, file: !9348, line: 3049, type: !10487)
!17047 = !DILocation(line: 3049, column: 13, scope: !17043)
!17048 = !DILocation(line: 3050, column: 11, scope: !17043)
!17049 = !DILocation(line: 3051, column: 6, scope: !17043)
!17050 = distinct !DISubprogram(name: "try_from", linkageName: "_ZN97_$LT$alloc..string..String$u20$as$u20$core..convert..TryFrom$LT$alloc..vec..Vec$LT$u8$GT$$GT$$GT$8try_from17h6e81cd67d4f97c63E", scope: !17051, file: !9348, line: 3219, type: !13518, scopeLine: 3219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !17052)
!17051 = !DINamespace(name: "{impl#56}", scope: !179)
!17052 = !{!17053}
!17053 = !DILocalVariable(name: "bytes", arg: 1, scope: !17050, file: !9348, line: 3219, type: !182)
!17054 = !DILocation(line: 3219, column: 17, scope: !17050)
!17055 = !DILocation(line: 3220, column: 9, scope: !17050)
!17056 = !DILocation(line: 3221, column: 6, scope: !17050)
!17057 = distinct !DISubprogram(name: "extend<u8, alloc::alloc::Global, &[u8]>", linkageName: "_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$RF$T$GT$$GT$6extend17hc90c6dbd8aa43470E", scope: !17058, file: !10746, line: 3989, type: !10981, scopeLine: 3989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !17062, retainedNodes: !17059)
!17058 = !DINamespace(name: "{impl#21}", scope: !183)
!17059 = !{!17060, !17061}
!17060 = !DILocalVariable(name: "self", arg: 1, scope: !17057, file: !10746, line: 3989, type: !1608)
!17061 = !DILocalVariable(name: "iter", arg: 2, scope: !17057, file: !10746, line: 3989, type: !432)
!17062 = !{!23, !215, !17063}
!17063 = !DITemplateTypeParameter(name: "I", type: !432)
!17064 = !DILocation(line: 3989, column: 46, scope: !17057)
!17065 = !DILocation(line: 3989, column: 57, scope: !17057)
!17066 = !DILocation(line: 3990, column: 31, scope: !17057)
!17067 = !DILocation(line: 3990, column: 14, scope: !17057)
!17068 = !DILocation(line: 3991, column: 6, scope: !17057)
!17069 = distinct !DISubprogram(name: "from", linkageName: "_ZN98_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$alloc..borrow..Cow$LT$str$GT$$GT$$GT$4from17h81ac7640eae102aaE", scope: !17070, file: !9348, line: 3092, type: !12858, scopeLine: 3092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !277, templateParams: !21, retainedNodes: !17071)
!17070 = !DINamespace(name: "{impl#48}", scope: !179)
!17071 = !{!17072}
!17072 = !DILocalVariable(name: "s", arg: 1, scope: !17069, file: !9348, line: 3092, type: !3456)
!17073 = !DILocation(line: 3092, column: 13, scope: !17069)
!17074 = !DILocation(line: 3093, column: 11, scope: !17069)
!17075 = !DILocation(line: 3094, column: 6, scope: !17069)
!17076 = distinct !DISubprogram(name: "from<u8>", linkageName: "_ZN98_$LT$alloc..sync..Arc$LT$$u5b$T$u5d$$GT$$u20$as$u20$core..convert..From$LT$$RF$$u5b$T$u5d$$GT$$GT$4from17h9a4bdf719c65c157E", scope: !17077, file: !133, line: 3725, type: !11586, scopeLine: 3725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !22, retainedNodes: !17078)
!17077 = !DINamespace(name: "{impl#68}", scope: !131)
!17078 = !{!17079}
!17079 = !DILocalVariable(name: "v", arg: 1, scope: !17076, file: !133, line: 3725, type: !432)
!17080 = !DILocation(line: 3725, column: 13, scope: !17076)
!17081 = !DILocation(line: 3726, column: 9, scope: !17076)
!17082 = !DILocation(line: 3727, column: 6, scope: !17076)
!17083 = distinct !DISubprogram(name: "find<core::str::iter::Chars, core::iter::adapters::skip_while::{impl#2}::next::check::{closure_env#0}<char, alloc::str::{impl#5}::to_lowercase::case_ignorable_then_cased::{closure_env#0}<core::iter::adapters::rev::Rev<core::str::iter::Chars>>>>", linkageName: "_ZN98_$LT$core..iter..adapters..rev..Rev$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17h3346057b77c2c2f8E", scope: !17084, file: !6633, line: 87, type: !17085, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !17091, retainedNodes: !17088)
!17084 = !DINamespace(name: "{impl#1}", scope: !1398)
!17085 = !DISubroutineType(types: !17086)
!17086 = !{!1381, !17087, !1488}
!17087 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::iter::adapters::rev::Rev<core::str::iter::Chars>", baseType: !1397, size: 32, align: 32, dwarfAddressSpace: 0)
!17088 = !{!17089, !17090}
!17089 = !DILocalVariable(name: "self", arg: 1, scope: !17083, file: !6633, line: 87, type: !17087)
!17090 = !DILocalVariable(name: "predicate", arg: 2, scope: !17083, file: !6633, line: 87, type: !1488)
!17091 = !{!1451, !5413}
!17092 = !DILocation(line: 87, column: 16, scope: !17083)
!17093 = !DILocation(line: 87, column: 27, scope: !17083)
!17094 = !DILocation(line: 91, column: 19, scope: !17083)
!17095 = !DILocation(line: 92, column: 6, scope: !17083)
!17096 = distinct !DISubprogram(name: "from<alloc::vec::Vec<u8, alloc::alloc::Global>>", linkageName: "_ZN98_$LT$core..ptr..non_null..NonNull$LT$T$GT$$u20$as$u20$core..convert..From$LT$$RF$mut$u20$T$GT$$GT$4from17h7acb551dcbbe105aE", scope: !17097, file: !1538, line: 1733, type: !4351, scopeLine: 1733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !1742, retainedNodes: !17098)
!17097 = !DINamespace(name: "{impl#20}", scope: !198)
!17098 = !{!17099}
!17099 = !DILocalVariable(name: "r", arg: 1, scope: !17096, file: !1538, line: 1733, type: !1608)
!17100 = !DILocation(line: 1733, column: 13, scope: !17096)
!17101 = !DILocation(line: 1734, column: 9, scope: !17096)
!17102 = !DILocation(line: 1735, column: 6, scope: !17096)
!17103 = distinct !DISubprogram(name: "next<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4a098f8c0f59bfb3E", scope: !8295, file: !5029, line: 43, type: !17104, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !746, retainedNodes: !17107)
!17104 = !DISubroutineType(types: !17105)
!17105 = !{!1689, !17106}
!17106 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", baseType: !723, size: 32, align: 32, dwarfAddressSpace: 0)
!17107 = !{!17108, !17109, !17111, !17113, !17115, !17117, !17119, !17121}
!17108 = !DILocalVariable(name: "self", arg: 1, scope: !17103, file: !5029, line: 43, type: !17106)
!17109 = !DILocalVariable(name: "u", scope: !17110, file: !5029, line: 44, type: !359, align: 16)
!17110 = distinct !DILexicalBlock(scope: !17103, file: !5029, line: 44, column: 9)
!17111 = !DILocalVariable(name: "buf", scope: !17112, file: !5029, line: 45, type: !359, align: 16)
!17112 = distinct !DILexicalBlock(scope: !17103, file: !5029, line: 45, column: 13)
!17113 = !DILocalVariable(name: "residual", scope: !17114, file: !5029, line: 46, type: !1702, align: 8)
!17114 = distinct !DILexicalBlock(scope: !17103, file: !5029, line: 46, column: 37)
!17115 = !DILocalVariable(name: "val", scope: !17116, file: !5029, line: 46, type: !359, align: 16)
!17116 = distinct !DILexicalBlock(scope: !17103, file: !5029, line: 46, column: 21)
!17117 = !DILocalVariable(name: "u2", scope: !17118, file: !5029, line: 56, type: !359, align: 16)
!17118 = distinct !DILexicalBlock(scope: !17110, file: !5029, line: 56, column: 13)
!17119 = !DILocalVariable(name: "u2", scope: !17120, file: !5029, line: 57, type: !359, align: 16)
!17120 = distinct !DILexicalBlock(scope: !17110, file: !5029, line: 57, column: 17)
!17121 = !DILocalVariable(name: "c", scope: !17122, file: !5029, line: 69, type: !51, align: 32)
!17122 = distinct !DILexicalBlock(scope: !17118, file: !5029, line: 69, column: 13)
!17123 = !DILocation(line: 43, column: 13, scope: !17103)
!17124 = !DILocation(line: 44, column: 13, scope: !17110)
!17125 = !DILocation(line: 46, column: 37, scope: !17114)
!17126 = !DILocation(line: 44, column: 32, scope: !17103)
!17127 = !DILocation(line: 44, column: 23, scope: !17103)
!17128 = !DILocation(line: 44, column: 17, scope: !17103)
!17129 = !DILocation(line: 45, column: 18, scope: !17103)
!17130 = !DILocation(line: 45, column: 18, scope: !17112)
!17131 = !DILocation(line: 45, column: 26, scope: !17112)
!17132 = !DILocation(line: 45, column: 28, scope: !17103)
!17133 = !DILocation(line: 46, column: 21, scope: !17103)
!17134 = !DILocation(line: 46, column: 31, scope: !17103)
!17135 = !DILocation(line: 46, column: 21, scope: !17114)
!17136 = !DILocation(line: 46, column: 21, scope: !17116)
!17137 = !DILocation(line: 46, column: 37, scope: !17103)
!17138 = !DILocation(line: 49, column: 13, scope: !17110)
!17139 = !DILocation(line: 49, column: 15, scope: !17110)
!17140 = !DILocation(line: 73, column: 6, scope: !17103)
!17141 = !DILocation(line: 51, column: 55, scope: !17110)
!17142 = !DILocation(line: 51, column: 30, scope: !17110)
!17143 = !DILocation(line: 51, column: 18, scope: !17110)
!17144 = !DILocation(line: 51, column: 13, scope: !17110)
!17145 = !DILocation(line: 49, column: 9, scope: !17110)
!17146 = !DILocation(line: 52, column: 19, scope: !17110)
!17147 = !DILocation(line: 56, column: 28, scope: !17110)
!17148 = !DILocation(line: 56, column: 38, scope: !17110)
!17149 = !DILocation(line: 56, column: 22, scope: !17110)
!17150 = !DILocation(line: 54, column: 47, scope: !17110)
!17151 = !DILocation(line: 54, column: 18, scope: !17110)
!17152 = !DILocation(line: 54, column: 13, scope: !17110)
!17153 = !DILocation(line: 52, column: 16, scope: !17110)
!17154 = !DILocation(line: 57, column: 22, scope: !17110)
!17155 = !DILocation(line: 56, column: 17, scope: !17118)
!17156 = !DILocation(line: 57, column: 22, scope: !17120)
!17157 = !DILocation(line: 61, column: 16, scope: !17118)
!17158 = !DILocation(line: 59, column: 66, scope: !17110)
!17159 = !DILocation(line: 59, column: 37, scope: !17110)
!17160 = !DILocation(line: 59, column: 32, scope: !17110)
!17161 = !DILocation(line: 0, scope: !17162)
!17162 = !DILexicalBlockFile(scope: !17110, file: !4885, discriminator: 0)
!17163 = !DILocation(line: 61, column: 31, scope: !17118)
!17164 = !DILocation(line: 64, column: 17, scope: !17118)
!17165 = !DILocation(line: 65, column: 58, scope: !17118)
!17166 = !DILocation(line: 65, column: 29, scope: !17118)
!17167 = !DILocation(line: 65, column: 24, scope: !17118)
!17168 = !DILocation(line: 0, scope: !17169)
!17169 = !DILexicalBlockFile(scope: !17118, file: !4885, discriminator: 0)
!17170 = !DILocation(line: 69, column: 24, scope: !17118)
!17171 = !DILocation(line: 69, column: 23, scope: !17118)
!17172 = !DILocation(line: 69, column: 22, scope: !17118)
!17173 = !DILocation(line: 69, column: 51, scope: !17118)
!17174 = !DILocation(line: 69, column: 21, scope: !17118)
!17175 = !DILocation(line: 69, column: 17, scope: !17122)
!17176 = !DILocation(line: 71, column: 30, scope: !17122)
!17177 = !DILocation(line: 71, column: 18, scope: !17122)
!17178 = !DILocation(line: 71, column: 13, scope: !17122)
!17179 = !DILocation(line: 0, scope: !17180)
!17180 = !DILexicalBlockFile(scope: !17103, file: !4885, discriminator: 0)
!17181 = distinct !DISubprogram(name: "next<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc74a8ff9f3d47627E", scope: !8295, file: !5029, line: 43, type: !17182, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !545, retainedNodes: !17184)
!17182 = !DISubroutineType(types: !17183)
!17183 = !{!1689, !6236}
!17184 = !{!17185, !17186, !17188, !17190, !17192, !17194, !17196, !17198}
!17185 = !DILocalVariable(name: "self", arg: 1, scope: !17181, file: !5029, line: 43, type: !6236)
!17186 = !DILocalVariable(name: "u", scope: !17187, file: !5029, line: 44, type: !359, align: 16)
!17187 = distinct !DILexicalBlock(scope: !17181, file: !5029, line: 44, column: 9)
!17188 = !DILocalVariable(name: "buf", scope: !17189, file: !5029, line: 45, type: !359, align: 16)
!17189 = distinct !DILexicalBlock(scope: !17181, file: !5029, line: 45, column: 13)
!17190 = !DILocalVariable(name: "residual", scope: !17191, file: !5029, line: 46, type: !1702, align: 8)
!17191 = distinct !DILexicalBlock(scope: !17181, file: !5029, line: 46, column: 37)
!17192 = !DILocalVariable(name: "val", scope: !17193, file: !5029, line: 46, type: !359, align: 16)
!17193 = distinct !DILexicalBlock(scope: !17181, file: !5029, line: 46, column: 21)
!17194 = !DILocalVariable(name: "u2", scope: !17195, file: !5029, line: 56, type: !359, align: 16)
!17195 = distinct !DILexicalBlock(scope: !17187, file: !5029, line: 56, column: 13)
!17196 = !DILocalVariable(name: "u2", scope: !17197, file: !5029, line: 57, type: !359, align: 16)
!17197 = distinct !DILexicalBlock(scope: !17187, file: !5029, line: 57, column: 17)
!17198 = !DILocalVariable(name: "c", scope: !17199, file: !5029, line: 69, type: !51, align: 32)
!17199 = distinct !DILexicalBlock(scope: !17195, file: !5029, line: 69, column: 13)
!17200 = !DILocation(line: 43, column: 13, scope: !17181)
!17201 = !DILocation(line: 44, column: 13, scope: !17187)
!17202 = !DILocation(line: 46, column: 37, scope: !17191)
!17203 = !DILocation(line: 44, column: 32, scope: !17181)
!17204 = !DILocation(line: 44, column: 23, scope: !17181)
!17205 = !DILocation(line: 44, column: 17, scope: !17181)
!17206 = !DILocation(line: 45, column: 18, scope: !17181)
!17207 = !DILocation(line: 45, column: 18, scope: !17189)
!17208 = !DILocation(line: 45, column: 26, scope: !17189)
!17209 = !DILocation(line: 45, column: 28, scope: !17181)
!17210 = !DILocation(line: 46, column: 21, scope: !17181)
!17211 = !DILocation(line: 46, column: 31, scope: !17181)
!17212 = !DILocation(line: 46, column: 21, scope: !17191)
!17213 = !DILocation(line: 46, column: 21, scope: !17193)
!17214 = !DILocation(line: 46, column: 37, scope: !17181)
!17215 = !DILocation(line: 49, column: 13, scope: !17187)
!17216 = !DILocation(line: 49, column: 15, scope: !17187)
!17217 = !DILocation(line: 73, column: 6, scope: !17181)
!17218 = !DILocation(line: 51, column: 55, scope: !17187)
!17219 = !DILocation(line: 51, column: 30, scope: !17187)
!17220 = !DILocation(line: 51, column: 18, scope: !17187)
!17221 = !DILocation(line: 51, column: 13, scope: !17187)
!17222 = !DILocation(line: 49, column: 9, scope: !17187)
!17223 = !DILocation(line: 52, column: 19, scope: !17187)
!17224 = !DILocation(line: 56, column: 28, scope: !17187)
!17225 = !DILocation(line: 56, column: 38, scope: !17187)
!17226 = !DILocation(line: 56, column: 22, scope: !17187)
!17227 = !DILocation(line: 54, column: 47, scope: !17187)
!17228 = !DILocation(line: 54, column: 18, scope: !17187)
!17229 = !DILocation(line: 54, column: 13, scope: !17187)
!17230 = !DILocation(line: 52, column: 16, scope: !17187)
!17231 = !DILocation(line: 57, column: 22, scope: !17187)
!17232 = !DILocation(line: 56, column: 17, scope: !17195)
!17233 = !DILocation(line: 57, column: 22, scope: !17197)
!17234 = !DILocation(line: 61, column: 16, scope: !17195)
!17235 = !DILocation(line: 59, column: 66, scope: !17187)
!17236 = !DILocation(line: 59, column: 37, scope: !17187)
!17237 = !DILocation(line: 59, column: 32, scope: !17187)
!17238 = !DILocation(line: 0, scope: !17239)
!17239 = !DILexicalBlockFile(scope: !17187, file: !4885, discriminator: 0)
!17240 = !DILocation(line: 61, column: 31, scope: !17195)
!17241 = !DILocation(line: 64, column: 17, scope: !17195)
!17242 = !DILocation(line: 65, column: 58, scope: !17195)
!17243 = !DILocation(line: 65, column: 29, scope: !17195)
!17244 = !DILocation(line: 65, column: 24, scope: !17195)
!17245 = !DILocation(line: 0, scope: !17246)
!17246 = !DILexicalBlockFile(scope: !17195, file: !4885, discriminator: 0)
!17247 = !DILocation(line: 69, column: 24, scope: !17195)
!17248 = !DILocation(line: 69, column: 23, scope: !17195)
!17249 = !DILocation(line: 69, column: 22, scope: !17195)
!17250 = !DILocation(line: 69, column: 51, scope: !17195)
!17251 = !DILocation(line: 69, column: 21, scope: !17195)
!17252 = !DILocation(line: 69, column: 17, scope: !17199)
!17253 = !DILocation(line: 71, column: 30, scope: !17199)
!17254 = !DILocation(line: 71, column: 18, scope: !17199)
!17255 = !DILocation(line: 71, column: 13, scope: !17199)
!17256 = !DILocation(line: 0, scope: !17257)
!17257 = !DILexicalBlockFile(scope: !17181, file: !4885, discriminator: 0)
!17258 = distinct !DISubprogram(name: "next<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hee4e173d22a50904E", scope: !8295, file: !5029, line: 43, type: !17259, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !690, retainedNodes: !17261)
!17259 = !DISubroutineType(types: !17260)
!17260 = !{!1689, !6271}
!17261 = !{!17262, !17263, !17265, !17267, !17269, !17271, !17273, !17275}
!17262 = !DILocalVariable(name: "self", arg: 1, scope: !17258, file: !5029, line: 43, type: !6271)
!17263 = !DILocalVariable(name: "u", scope: !17264, file: !5029, line: 44, type: !359, align: 16)
!17264 = distinct !DILexicalBlock(scope: !17258, file: !5029, line: 44, column: 9)
!17265 = !DILocalVariable(name: "buf", scope: !17266, file: !5029, line: 45, type: !359, align: 16)
!17266 = distinct !DILexicalBlock(scope: !17258, file: !5029, line: 45, column: 13)
!17267 = !DILocalVariable(name: "residual", scope: !17268, file: !5029, line: 46, type: !1702, align: 8)
!17268 = distinct !DILexicalBlock(scope: !17258, file: !5029, line: 46, column: 37)
!17269 = !DILocalVariable(name: "val", scope: !17270, file: !5029, line: 46, type: !359, align: 16)
!17270 = distinct !DILexicalBlock(scope: !17258, file: !5029, line: 46, column: 21)
!17271 = !DILocalVariable(name: "u2", scope: !17272, file: !5029, line: 56, type: !359, align: 16)
!17272 = distinct !DILexicalBlock(scope: !17264, file: !5029, line: 56, column: 13)
!17273 = !DILocalVariable(name: "u2", scope: !17274, file: !5029, line: 57, type: !359, align: 16)
!17274 = distinct !DILexicalBlock(scope: !17264, file: !5029, line: 57, column: 17)
!17275 = !DILocalVariable(name: "c", scope: !17276, file: !5029, line: 69, type: !51, align: 32)
!17276 = distinct !DILexicalBlock(scope: !17272, file: !5029, line: 69, column: 13)
!17277 = !DILocation(line: 43, column: 13, scope: !17258)
!17278 = !DILocation(line: 44, column: 13, scope: !17264)
!17279 = !DILocation(line: 46, column: 37, scope: !17268)
!17280 = !DILocation(line: 44, column: 32, scope: !17258)
!17281 = !DILocation(line: 44, column: 23, scope: !17258)
!17282 = !DILocation(line: 44, column: 17, scope: !17258)
!17283 = !DILocation(line: 45, column: 18, scope: !17258)
!17284 = !DILocation(line: 45, column: 18, scope: !17266)
!17285 = !DILocation(line: 45, column: 26, scope: !17266)
!17286 = !DILocation(line: 45, column: 28, scope: !17258)
!17287 = !DILocation(line: 46, column: 21, scope: !17258)
!17288 = !DILocation(line: 46, column: 31, scope: !17258)
!17289 = !DILocation(line: 46, column: 21, scope: !17268)
!17290 = !DILocation(line: 46, column: 21, scope: !17270)
!17291 = !DILocation(line: 46, column: 37, scope: !17258)
!17292 = !DILocation(line: 49, column: 13, scope: !17264)
!17293 = !DILocation(line: 49, column: 15, scope: !17264)
!17294 = !DILocation(line: 73, column: 6, scope: !17258)
!17295 = !DILocation(line: 51, column: 55, scope: !17264)
!17296 = !DILocation(line: 51, column: 30, scope: !17264)
!17297 = !DILocation(line: 51, column: 18, scope: !17264)
!17298 = !DILocation(line: 51, column: 13, scope: !17264)
!17299 = !DILocation(line: 49, column: 9, scope: !17264)
!17300 = !DILocation(line: 52, column: 19, scope: !17264)
!17301 = !DILocation(line: 56, column: 28, scope: !17264)
!17302 = !DILocation(line: 56, column: 38, scope: !17264)
!17303 = !DILocation(line: 56, column: 22, scope: !17264)
!17304 = !DILocation(line: 54, column: 47, scope: !17264)
!17305 = !DILocation(line: 54, column: 18, scope: !17264)
!17306 = !DILocation(line: 54, column: 13, scope: !17264)
!17307 = !DILocation(line: 52, column: 16, scope: !17264)
!17308 = !DILocation(line: 57, column: 22, scope: !17264)
!17309 = !DILocation(line: 56, column: 17, scope: !17272)
!17310 = !DILocation(line: 57, column: 22, scope: !17274)
!17311 = !DILocation(line: 61, column: 16, scope: !17272)
!17312 = !DILocation(line: 59, column: 66, scope: !17264)
!17313 = !DILocation(line: 59, column: 37, scope: !17264)
!17314 = !DILocation(line: 59, column: 32, scope: !17264)
!17315 = !DILocation(line: 0, scope: !17316)
!17316 = !DILexicalBlockFile(scope: !17264, file: !4885, discriminator: 0)
!17317 = !DILocation(line: 61, column: 31, scope: !17272)
!17318 = !DILocation(line: 64, column: 17, scope: !17272)
!17319 = !DILocation(line: 65, column: 58, scope: !17272)
!17320 = !DILocation(line: 65, column: 29, scope: !17272)
!17321 = !DILocation(line: 65, column: 24, scope: !17272)
!17322 = !DILocation(line: 0, scope: !17323)
!17323 = !DILexicalBlockFile(scope: !17272, file: !4885, discriminator: 0)
!17324 = !DILocation(line: 69, column: 24, scope: !17272)
!17325 = !DILocation(line: 69, column: 23, scope: !17272)
!17326 = !DILocation(line: 69, column: 22, scope: !17272)
!17327 = !DILocation(line: 69, column: 51, scope: !17272)
!17328 = !DILocation(line: 69, column: 21, scope: !17272)
!17329 = !DILocation(line: 69, column: 17, scope: !17276)
!17330 = !DILocation(line: 71, column: 30, scope: !17276)
!17331 = !DILocation(line: 71, column: 18, scope: !17276)
!17332 = !DILocation(line: 71, column: 13, scope: !17276)
!17333 = !DILocation(line: 0, scope: !17334)
!17334 = !DILexicalBlockFile(scope: !17258, file: !4885, discriminator: 0)
!17335 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha770b931b3c13a9dE", scope: !8295, file: !5029, line: 76, type: !17336, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !545, retainedNodes: !17339)
!17336 = !DISubroutineType(types: !17337)
!17337 = !{!802, !17338}
!17338 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", baseType: !491, size: 32, align: 32, dwarfAddressSpace: 0)
!17339 = !{!17340, !17341, !17343, !17344, !17346, !17347, !17349, !17350, !17352, !17353, !17355, !17357}
!17340 = !DILocalVariable(name: "self", arg: 1, scope: !17335, file: !5029, line: 76, type: !17338)
!17341 = !DILocalVariable(name: "low", scope: !17342, file: !5029, line: 77, type: !9, align: 32)
!17342 = distinct !DILexicalBlock(scope: !17335, file: !5029, line: 77, column: 9)
!17343 = !DILocalVariable(name: "high", scope: !17342, file: !5029, line: 77, type: !103, align: 32)
!17344 = !DILocalVariable(name: "low_buf", scope: !17345, file: !5029, line: 79, type: !9, align: 32)
!17345 = distinct !DILexicalBlock(scope: !17342, file: !5029, line: 79, column: 9)
!17346 = !DILocalVariable(name: "high_buf", scope: !17345, file: !5029, line: 79, type: !9, align: 32)
!17347 = !DILocalVariable(name: "u", scope: !17348, file: !5029, line: 83, type: !359, align: 16)
!17348 = distinct !DILexicalBlock(scope: !17342, file: !5029, line: 83, column: 13)
!17349 = !DILocalVariable(name: "u", scope: !17348, file: !5029, line: 83, type: !742, align: 32)
!17350 = !DILocalVariable(name: "_u", scope: !17351, file: !5029, line: 89, type: !359, align: 16)
!17351 = distinct !DILexicalBlock(scope: !17342, file: !5029, line: 89, column: 13)
!17352 = !DILocalVariable(name: "_u", scope: !17351, file: !5029, line: 89, type: !742, align: 32)
!17353 = !DILocalVariable(name: "_u", scope: !17354, file: !5029, line: 94, type: !359, align: 16)
!17354 = distinct !DILexicalBlock(scope: !17342, file: !5029, line: 94, column: 13)
!17355 = !DILocalVariable(name: "low", scope: !17356, file: !5029, line: 102, type: !9, align: 32)
!17356 = distinct !DILexicalBlock(scope: !17345, file: !5029, line: 102, column: 9)
!17357 = !DILocalVariable(name: "high", scope: !17358, file: !5029, line: 103, type: !103, align: 32)
!17358 = distinct !DILexicalBlock(scope: !17356, file: !5029, line: 103, column: 9)
!17359 = !DILocation(line: 76, column: 18, scope: !17335)
!17360 = !DILocation(line: 77, column: 19, scope: !17342)
!17361 = !DILocation(line: 79, column: 23, scope: !17345)
!17362 = !DILocation(line: 77, column: 27, scope: !17335)
!17363 = !DILocation(line: 77, column: 37, scope: !17335)
!17364 = !DILocation(line: 77, column: 14, scope: !17335)
!17365 = !DILocation(line: 77, column: 14, scope: !17342)
!17366 = !DILocation(line: 77, column: 19, scope: !17335)
!17367 = !DILocation(line: 79, column: 41, scope: !17342)
!17368 = !DILocation(line: 79, column: 35, scope: !17342)
!17369 = !DILocation(line: 83, column: 18, scope: !17342)
!17370 = !DILocation(line: 83, column: 18, scope: !17348)
!17371 = !DILocation(line: 83, column: 25, scope: !17342)
!17372 = !DILocation(line: 83, column: 27, scope: !17342)
!17373 = !DILocation(line: 81, column: 21, scope: !17342)
!17374 = !DILocation(line: 79, column: 14, scope: !17342)
!17375 = !DILocation(line: 79, column: 14, scope: !17345)
!17376 = !DILocation(line: 79, column: 23, scope: !17342)
!17377 = !DILocation(line: 102, column: 23, scope: !17345)
!17378 = !DILocation(line: 102, column: 19, scope: !17345)
!17379 = !DILocation(line: 83, column: 51, scope: !17348)
!17380 = !DILocation(line: 83, column: 56, scope: !17342)
!17381 = !DILocation(line: 89, column: 18, scope: !17342)
!17382 = !DILocation(line: 89, column: 18, scope: !17351)
!17383 = !DILocation(line: 89, column: 25, scope: !17342)
!17384 = !DILocation(line: 94, column: 18, scope: !17342)
!17385 = !DILocation(line: 94, column: 18, scope: !17354)
!17386 = !DILocation(line: 94, column: 25, scope: !17354)
!17387 = !DILocation(line: 94, column: 30, scope: !17342)
!17388 = !DILocation(line: 89, column: 44, scope: !17351)
!17389 = !DILocation(line: 89, column: 49, scope: !17342)
!17390 = !DILocation(line: 102, column: 13, scope: !17356)
!17391 = !DILocation(line: 103, column: 20, scope: !17356)
!17392 = !DILocation(line: 103, column: 25, scope: !17356)
!17393 = !DILocation(line: 103, column: 13, scope: !17358)
!17394 = !DILocation(line: 105, column: 9, scope: !17358)
!17395 = !DILocation(line: 106, column: 6, scope: !17335)
!17396 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he0c58d9d11f37d70E", scope: !8295, file: !5029, line: 76, type: !17397, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !746, retainedNodes: !17400)
!17397 = !DISubroutineType(types: !17398)
!17398 = !{!802, !17399}
!17399 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", baseType: !723, size: 32, align: 32, dwarfAddressSpace: 0)
!17400 = !{!17401, !17402, !17404, !17405, !17407, !17408, !17410, !17411, !17413, !17414, !17416, !17418}
!17401 = !DILocalVariable(name: "self", arg: 1, scope: !17396, file: !5029, line: 76, type: !17399)
!17402 = !DILocalVariable(name: "low", scope: !17403, file: !5029, line: 77, type: !9, align: 32)
!17403 = distinct !DILexicalBlock(scope: !17396, file: !5029, line: 77, column: 9)
!17404 = !DILocalVariable(name: "high", scope: !17403, file: !5029, line: 77, type: !103, align: 32)
!17405 = !DILocalVariable(name: "low_buf", scope: !17406, file: !5029, line: 79, type: !9, align: 32)
!17406 = distinct !DILexicalBlock(scope: !17403, file: !5029, line: 79, column: 9)
!17407 = !DILocalVariable(name: "high_buf", scope: !17406, file: !5029, line: 79, type: !9, align: 32)
!17408 = !DILocalVariable(name: "u", scope: !17409, file: !5029, line: 83, type: !359, align: 16)
!17409 = distinct !DILexicalBlock(scope: !17403, file: !5029, line: 83, column: 13)
!17410 = !DILocalVariable(name: "u", scope: !17409, file: !5029, line: 83, type: !742, align: 32)
!17411 = !DILocalVariable(name: "_u", scope: !17412, file: !5029, line: 89, type: !359, align: 16)
!17412 = distinct !DILexicalBlock(scope: !17403, file: !5029, line: 89, column: 13)
!17413 = !DILocalVariable(name: "_u", scope: !17412, file: !5029, line: 89, type: !742, align: 32)
!17414 = !DILocalVariable(name: "_u", scope: !17415, file: !5029, line: 94, type: !359, align: 16)
!17415 = distinct !DILexicalBlock(scope: !17403, file: !5029, line: 94, column: 13)
!17416 = !DILocalVariable(name: "low", scope: !17417, file: !5029, line: 102, type: !9, align: 32)
!17417 = distinct !DILexicalBlock(scope: !17406, file: !5029, line: 102, column: 9)
!17418 = !DILocalVariable(name: "high", scope: !17419, file: !5029, line: 103, type: !103, align: 32)
!17419 = distinct !DILexicalBlock(scope: !17417, file: !5029, line: 103, column: 9)
!17420 = !DILocation(line: 76, column: 18, scope: !17396)
!17421 = !DILocation(line: 77, column: 19, scope: !17403)
!17422 = !DILocation(line: 79, column: 23, scope: !17406)
!17423 = !DILocation(line: 77, column: 27, scope: !17396)
!17424 = !DILocation(line: 77, column: 37, scope: !17396)
!17425 = !DILocation(line: 77, column: 14, scope: !17396)
!17426 = !DILocation(line: 77, column: 14, scope: !17403)
!17427 = !DILocation(line: 77, column: 19, scope: !17396)
!17428 = !DILocation(line: 79, column: 41, scope: !17403)
!17429 = !DILocation(line: 79, column: 35, scope: !17403)
!17430 = !DILocation(line: 83, column: 18, scope: !17403)
!17431 = !DILocation(line: 83, column: 18, scope: !17409)
!17432 = !DILocation(line: 83, column: 25, scope: !17403)
!17433 = !DILocation(line: 83, column: 27, scope: !17403)
!17434 = !DILocation(line: 81, column: 21, scope: !17403)
!17435 = !DILocation(line: 79, column: 14, scope: !17403)
!17436 = !DILocation(line: 79, column: 14, scope: !17406)
!17437 = !DILocation(line: 79, column: 23, scope: !17403)
!17438 = !DILocation(line: 102, column: 23, scope: !17406)
!17439 = !DILocation(line: 102, column: 19, scope: !17406)
!17440 = !DILocation(line: 83, column: 51, scope: !17409)
!17441 = !DILocation(line: 83, column: 56, scope: !17403)
!17442 = !DILocation(line: 89, column: 18, scope: !17403)
!17443 = !DILocation(line: 89, column: 18, scope: !17412)
!17444 = !DILocation(line: 89, column: 25, scope: !17403)
!17445 = !DILocation(line: 94, column: 18, scope: !17403)
!17446 = !DILocation(line: 94, column: 18, scope: !17415)
!17447 = !DILocation(line: 94, column: 25, scope: !17415)
!17448 = !DILocation(line: 94, column: 30, scope: !17403)
!17449 = !DILocation(line: 89, column: 44, scope: !17412)
!17450 = !DILocation(line: 89, column: 49, scope: !17403)
!17451 = !DILocation(line: 102, column: 13, scope: !17417)
!17452 = !DILocation(line: 103, column: 20, scope: !17417)
!17453 = !DILocation(line: 103, column: 25, scope: !17417)
!17454 = !DILocation(line: 103, column: 13, scope: !17419)
!17455 = !DILocation(line: 105, column: 9, scope: !17419)
!17456 = !DILocation(line: 106, column: 6, scope: !17396)
!17457 = distinct !DISubprogram(name: "size_hint<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hfc3844d32c81b82fE", scope: !8295, file: !5029, line: 76, type: !17458, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !690, retainedNodes: !17461)
!17458 = !DISubroutineType(types: !17459)
!17459 = !{!802, !17460}
!17460 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&core::char::decode::DecodeUtf16<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", baseType: !682, size: 32, align: 32, dwarfAddressSpace: 0)
!17461 = !{!17462, !17463, !17465, !17466, !17468, !17469, !17471, !17472, !17474, !17475, !17477, !17479}
!17462 = !DILocalVariable(name: "self", arg: 1, scope: !17457, file: !5029, line: 76, type: !17460)
!17463 = !DILocalVariable(name: "low", scope: !17464, file: !5029, line: 77, type: !9, align: 32)
!17464 = distinct !DILexicalBlock(scope: !17457, file: !5029, line: 77, column: 9)
!17465 = !DILocalVariable(name: "high", scope: !17464, file: !5029, line: 77, type: !103, align: 32)
!17466 = !DILocalVariable(name: "low_buf", scope: !17467, file: !5029, line: 79, type: !9, align: 32)
!17467 = distinct !DILexicalBlock(scope: !17464, file: !5029, line: 79, column: 9)
!17468 = !DILocalVariable(name: "high_buf", scope: !17467, file: !5029, line: 79, type: !9, align: 32)
!17469 = !DILocalVariable(name: "u", scope: !17470, file: !5029, line: 83, type: !359, align: 16)
!17470 = distinct !DILexicalBlock(scope: !17464, file: !5029, line: 83, column: 13)
!17471 = !DILocalVariable(name: "u", scope: !17470, file: !5029, line: 83, type: !742, align: 32)
!17472 = !DILocalVariable(name: "_u", scope: !17473, file: !5029, line: 89, type: !359, align: 16)
!17473 = distinct !DILexicalBlock(scope: !17464, file: !5029, line: 89, column: 13)
!17474 = !DILocalVariable(name: "_u", scope: !17473, file: !5029, line: 89, type: !742, align: 32)
!17475 = !DILocalVariable(name: "_u", scope: !17476, file: !5029, line: 94, type: !359, align: 16)
!17476 = distinct !DILexicalBlock(scope: !17464, file: !5029, line: 94, column: 13)
!17477 = !DILocalVariable(name: "low", scope: !17478, file: !5029, line: 102, type: !9, align: 32)
!17478 = distinct !DILexicalBlock(scope: !17467, file: !5029, line: 102, column: 9)
!17479 = !DILocalVariable(name: "high", scope: !17480, file: !5029, line: 103, type: !103, align: 32)
!17480 = distinct !DILexicalBlock(scope: !17478, file: !5029, line: 103, column: 9)
!17481 = !DILocation(line: 76, column: 18, scope: !17457)
!17482 = !DILocation(line: 77, column: 19, scope: !17464)
!17483 = !DILocation(line: 79, column: 23, scope: !17467)
!17484 = !DILocation(line: 77, column: 27, scope: !17457)
!17485 = !DILocation(line: 77, column: 37, scope: !17457)
!17486 = !DILocation(line: 77, column: 14, scope: !17457)
!17487 = !DILocation(line: 77, column: 14, scope: !17464)
!17488 = !DILocation(line: 77, column: 19, scope: !17457)
!17489 = !DILocation(line: 79, column: 41, scope: !17464)
!17490 = !DILocation(line: 79, column: 35, scope: !17464)
!17491 = !DILocation(line: 83, column: 18, scope: !17464)
!17492 = !DILocation(line: 83, column: 18, scope: !17470)
!17493 = !DILocation(line: 83, column: 25, scope: !17464)
!17494 = !DILocation(line: 83, column: 27, scope: !17464)
!17495 = !DILocation(line: 81, column: 21, scope: !17464)
!17496 = !DILocation(line: 79, column: 14, scope: !17464)
!17497 = !DILocation(line: 79, column: 14, scope: !17467)
!17498 = !DILocation(line: 79, column: 23, scope: !17464)
!17499 = !DILocation(line: 102, column: 23, scope: !17467)
!17500 = !DILocation(line: 102, column: 19, scope: !17467)
!17501 = !DILocation(line: 83, column: 51, scope: !17470)
!17502 = !DILocation(line: 83, column: 56, scope: !17464)
!17503 = !DILocation(line: 89, column: 18, scope: !17464)
!17504 = !DILocation(line: 89, column: 18, scope: !17473)
!17505 = !DILocation(line: 89, column: 25, scope: !17464)
!17506 = !DILocation(line: 94, column: 18, scope: !17464)
!17507 = !DILocation(line: 94, column: 18, scope: !17476)
!17508 = !DILocation(line: 94, column: 25, scope: !17476)
!17509 = !DILocation(line: 94, column: 30, scope: !17464)
!17510 = !DILocation(line: 89, column: 44, scope: !17473)
!17511 = !DILocation(line: 89, column: 49, scope: !17464)
!17512 = !DILocation(line: 102, column: 13, scope: !17478)
!17513 = !DILocation(line: 103, column: 20, scope: !17478)
!17514 = !DILocation(line: 103, column: 25, scope: !17478)
!17515 = !DILocation(line: 103, column: 13, scope: !17480)
!17516 = !DILocation(line: 105, column: 9, scope: !17480)
!17517 = !DILocation(line: 106, column: 6, scope: !17457)
!17518 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h0245b0971940b5c2E", scope: !8294, file: !5029, line: 103, type: !17519, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !690, retainedNodes: !17521)
!17519 = !DISubroutineType(types: !17520)
!17520 = !{!103, !8320, !9}
!17521 = !{!17522, !17523}
!17522 = !DILocalVariable(name: "h", arg: 2, scope: !17518, file: !5029, line: 103, type: !9)
!17523 = !DILocalVariable(name: "high_buf", scope: !17518, file: !5029, line: 79, type: !9, align: 32)
!17524 = !DILocation(line: 79, column: 23, scope: !17518)
!17525 = !DILocation(line: 103, column: 35, scope: !17518)
!17526 = !DILocation(line: 103, column: 52, scope: !17518)
!17527 = !DILocation(line: 103, column: 40, scope: !17518)
!17528 = !DILocation(line: 103, column: 61, scope: !17518)
!17529 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<u16>>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h05bb2c1aa7da1326E", scope: !8294, file: !5029, line: 103, type: !17530, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !746, retainedNodes: !17532)
!17530 = !DISubroutineType(types: !17531)
!17531 = !{!103, !8344, !9}
!17532 = !{!17533, !17534}
!17533 = !DILocalVariable(name: "h", arg: 2, scope: !17529, file: !5029, line: 103, type: !9)
!17534 = !DILocalVariable(name: "high_buf", scope: !17529, file: !5029, line: 79, type: !9, align: 32)
!17535 = !DILocation(line: 79, column: 23, scope: !17529)
!17536 = !DILocation(line: 103, column: 35, scope: !17529)
!17537 = !DILocation(line: 103, column: 52, scope: !17529)
!17538 = !DILocation(line: 103, column: 40, scope: !17529)
!17539 = !DILocation(line: 103, column: 61, scope: !17529)
!17540 = distinct !DISubprogram(name: "{closure#0}<core::iter::adapters::map::Map<core::iter::adapters::copied::Copied<core::slice::iter::Iter<[u8; 2]>>, fn([u8; 2]) -> u16>>", linkageName: "_ZN99_$LT$core..char..decode..DecodeUtf16$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint28_$u7b$$u7b$closure$u7d$$u7d$17h5feeae50c5f1488fE", scope: !8294, file: !5029, line: 103, type: !17541, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !277, templateParams: !545, retainedNodes: !17543)
!17541 = !DISubroutineType(types: !17542)
!17542 = !{!103, !8293, !9}
!17543 = !{!17544, !17545}
!17544 = !DILocalVariable(name: "h", arg: 2, scope: !17540, file: !5029, line: 103, type: !9)
!17545 = !DILocalVariable(name: "high_buf", scope: !17540, file: !5029, line: 79, type: !9, align: 32)
!17546 = !DILocation(line: 79, column: 23, scope: !17540)
!17547 = !DILocation(line: 103, column: 35, scope: !17540)
!17548 = !DILocation(line: 103, column: 52, scope: !17540)
!17549 = !DILocation(line: 103, column: 40, scope: !17540)
!17550 = !DILocation(line: 103, column: 61, scope: !17540)
