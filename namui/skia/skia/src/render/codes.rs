// NOTE : Reference 1 - https://www.w3.org/TR/uievents-code/
// NOTE : Reference 2 - https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values
// NOTE : YOU MUST NOT CHANGE ENUM NAMES!
use std::str::FromStr;
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum Code {
    Escape,
    Digit1,
    Digit2,
    Digit3,
    Digit4,
    Digit5,
    Digit6,
    Digit7,
    Digit8,
    Digit9,
    Digit0,
    Minus,
    Equal,
    Backspace,
    Tab,
    KeyQ,
    KeyW,
    KeyE,
    KeyR,
    KeyT,
    KeyY,
    KeyU,
    KeyI,
    KeyO,
    KeyP,
    BracketLeft,
    BracketRight,
    Enter,
    ControlLeft,
    KeyA,
    KeyS,
    KeyD,
    KeyF,
    KeyG,
    KeyH,
    KeyJ,
    KeyK,
    KeyL,
    Semicolon,
    Quote,
    Backquote,
    ShiftLeft,
    Backslash,
    KeyZ,
    KeyX,
    KeyC,
    KeyV,
    KeyB,
    KeyN,
    KeyM,
    Comma,
    Period,
    Slash,
    ShiftRight,
    AltLeft,
    Space,
    CapsLock,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    Pause,
    ScrollLock,
    IntlBackslash,
    F11,
    F12,
    ControlRight,
    PrintScreen,
    AltRight,
    NumLock,
    Home,
    ArrowUp,
    PageUp,
    ArrowLeft,
    ArrowRight,
    End,
    ArrowDown,
    PageDown,
    Insert,
    Delete,
    ContextMenu,
    // Below are from winit::keyboard::KeyCode
    IntlRo,
    IntlYen,
    SuperLeft,
    SuperRight,
    Convert,
    KanaMode,
    Lang1,
    Lang2,
    Lang3,
    Lang4,
    Lang5,
    NonConvert,
    Help,
    Numpad0,
    Numpad1,
    Numpad2,
    Numpad3,
    Numpad4,
    Numpad5,
    Numpad6,
    Numpad7,
    Numpad8,
    Numpad9,
    NumpadAdd,
    NumpadBackspace,
    NumpadClear,
    NumpadClearEntry,
    NumpadComma,
    NumpadDecimal,
    NumpadDivide,
    NumpadEnter,
    NumpadEqual,
    NumpadHash,
    NumpadMemoryAdd,
    NumpadMemoryClear,
    NumpadMemoryRecall,
    NumpadMemoryStore,
    NumpadMemorySubtract,
    NumpadMultiply,
    NumpadParenLeft,
    NumpadParenRight,
    NumpadStar,
    NumpadSubtract,
    Fn,
    FnLock,
    BrowserBack,
    BrowserFavorites,
    BrowserForward,
    BrowserHome,
    BrowserRefresh,
    BrowserSearch,
    BrowserStop,
    Eject,
    LaunchApp1,
    LaunchApp2,
    LaunchMail,
    MediaPlayPause,
    MediaSelect,
    MediaStop,
    MediaTrackNext,
    MediaTrackPrevious,
    Power,
    Sleep,
    AudioVolumeDown,
    AudioVolumeMute,
    AudioVolumeUp,
    WakeUp,
    Meta,
    Hyper,
    Turbo,
    Abort,
    Resume,
    Suspend,
    Again,
    Copy,
    Cut,
    Find,
    Open,
    Paste,
    Props,
    Select,
    Undo,
    Hiragana,
    Katakana,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F20,
    F21,
    F22,
    F23,
    F24,
    F25,
    F26,
    F27,
    F28,
    F29,
    F30,
    F31,
    F32,
    F33,
    F34,
    F35,
}

#[cfg(feature = "winit")]
impl Code {
    pub fn from_winit_key(key: &winit::keyboard::PhysicalKey) -> Option<Self> {
        match key {
            winit::keyboard::PhysicalKey::Code(code) => match code {
                winit::keyboard::KeyCode::Backquote => Some(Code::Backquote),
                winit::keyboard::KeyCode::Backslash => Some(Code::Backslash),
                winit::keyboard::KeyCode::BracketLeft => Some(Code::BracketLeft),
                winit::keyboard::KeyCode::BracketRight => Some(Code::BracketRight),
                winit::keyboard::KeyCode::Comma => Some(Code::Comma),
                winit::keyboard::KeyCode::Digit0 => Some(Code::Digit0),
                winit::keyboard::KeyCode::Digit1 => Some(Code::Digit1),
                winit::keyboard::KeyCode::Digit2 => Some(Code::Digit2),
                winit::keyboard::KeyCode::Digit3 => Some(Code::Digit3),
                winit::keyboard::KeyCode::Digit4 => Some(Code::Digit4),
                winit::keyboard::KeyCode::Digit5 => Some(Code::Digit5),
                winit::keyboard::KeyCode::Digit6 => Some(Code::Digit6),
                winit::keyboard::KeyCode::Digit7 => Some(Code::Digit7),
                winit::keyboard::KeyCode::Digit8 => Some(Code::Digit8),
                winit::keyboard::KeyCode::Digit9 => Some(Code::Digit9),
                winit::keyboard::KeyCode::Equal => Some(Code::Equal),
                winit::keyboard::KeyCode::IntlBackslash => Some(Code::IntlBackslash),
                winit::keyboard::KeyCode::IntlRo => Some(Code::IntlRo),
                winit::keyboard::KeyCode::IntlYen => Some(Code::IntlYen),
                winit::keyboard::KeyCode::KeyA => Some(Code::KeyA),
                winit::keyboard::KeyCode::KeyB => Some(Code::KeyB),
                winit::keyboard::KeyCode::KeyC => Some(Code::KeyC),
                winit::keyboard::KeyCode::KeyD => Some(Code::KeyD),
                winit::keyboard::KeyCode::KeyE => Some(Code::KeyE),
                winit::keyboard::KeyCode::KeyF => Some(Code::KeyF),
                winit::keyboard::KeyCode::KeyG => Some(Code::KeyG),
                winit::keyboard::KeyCode::KeyH => Some(Code::KeyH),
                winit::keyboard::KeyCode::KeyI => Some(Code::KeyI),
                winit::keyboard::KeyCode::KeyJ => Some(Code::KeyJ),
                winit::keyboard::KeyCode::KeyK => Some(Code::KeyK),
                winit::keyboard::KeyCode::KeyL => Some(Code::KeyL),
                winit::keyboard::KeyCode::KeyM => Some(Code::KeyM),
                winit::keyboard::KeyCode::KeyN => Some(Code::KeyN),
                winit::keyboard::KeyCode::KeyO => Some(Code::KeyO),
                winit::keyboard::KeyCode::KeyP => Some(Code::KeyP),
                winit::keyboard::KeyCode::KeyQ => Some(Code::KeyQ),
                winit::keyboard::KeyCode::KeyR => Some(Code::KeyR),
                winit::keyboard::KeyCode::KeyS => Some(Code::KeyS),
                winit::keyboard::KeyCode::KeyT => Some(Code::KeyT),
                winit::keyboard::KeyCode::KeyU => Some(Code::KeyU),
                winit::keyboard::KeyCode::KeyV => Some(Code::KeyV),
                winit::keyboard::KeyCode::KeyW => Some(Code::KeyW),
                winit::keyboard::KeyCode::KeyX => Some(Code::KeyX),
                winit::keyboard::KeyCode::KeyY => Some(Code::KeyY),
                winit::keyboard::KeyCode::KeyZ => Some(Code::KeyZ),
                winit::keyboard::KeyCode::Minus => Some(Code::Minus),
                winit::keyboard::KeyCode::Period => Some(Code::Period),
                winit::keyboard::KeyCode::Quote => Some(Code::Quote),
                winit::keyboard::KeyCode::Semicolon => Some(Code::Semicolon),
                winit::keyboard::KeyCode::Slash => Some(Code::Slash),
                winit::keyboard::KeyCode::AltLeft => Some(Code::AltLeft),
                winit::keyboard::KeyCode::AltRight => Some(Code::AltRight),
                winit::keyboard::KeyCode::Backspace => Some(Code::Backspace),
                winit::keyboard::KeyCode::CapsLock => Some(Code::CapsLock),
                winit::keyboard::KeyCode::ContextMenu => Some(Code::ContextMenu),
                winit::keyboard::KeyCode::ControlLeft => Some(Code::ControlLeft),
                winit::keyboard::KeyCode::ControlRight => Some(Code::ControlRight),
                winit::keyboard::KeyCode::Enter => Some(Code::Enter),
                winit::keyboard::KeyCode::SuperLeft => None,
                winit::keyboard::KeyCode::SuperRight => None,
                winit::keyboard::KeyCode::ShiftLeft => Some(Code::ShiftLeft),
                winit::keyboard::KeyCode::ShiftRight => Some(Code::ShiftRight),
                winit::keyboard::KeyCode::Space => Some(Code::Space),
                winit::keyboard::KeyCode::Tab => Some(Code::Tab),
                winit::keyboard::KeyCode::Convert => None,
                winit::keyboard::KeyCode::KanaMode => None,
                winit::keyboard::KeyCode::Lang1 => None,
                winit::keyboard::KeyCode::Lang2 => None,
                winit::keyboard::KeyCode::Lang3 => None,
                winit::keyboard::KeyCode::Lang4 => None,
                winit::keyboard::KeyCode::Lang5 => None,
                winit::keyboard::KeyCode::NonConvert => None,
                winit::keyboard::KeyCode::Delete => Some(Code::Delete),
                winit::keyboard::KeyCode::End => Some(Code::End),
                winit::keyboard::KeyCode::Help => None,
                winit::keyboard::KeyCode::Home => Some(Code::Home),
                winit::keyboard::KeyCode::Insert => Some(Code::Insert),
                winit::keyboard::KeyCode::PageDown => Some(Code::PageDown),
                winit::keyboard::KeyCode::PageUp => Some(Code::PageUp),
                winit::keyboard::KeyCode::ArrowDown => Some(Code::ArrowDown),
                winit::keyboard::KeyCode::ArrowLeft => Some(Code::ArrowLeft),
                winit::keyboard::KeyCode::ArrowRight => Some(Code::ArrowRight),
                winit::keyboard::KeyCode::ArrowUp => Some(Code::ArrowUp),
                winit::keyboard::KeyCode::NumLock => Some(Code::NumLock),
                winit::keyboard::KeyCode::Numpad0 => Some(Code::Digit0),
                winit::keyboard::KeyCode::Numpad1 => Some(Code::Numpad1),
                winit::keyboard::KeyCode::Numpad2 => Some(Code::Numpad2),
                winit::keyboard::KeyCode::Numpad3 => Some(Code::Numpad3),
                winit::keyboard::KeyCode::Numpad4 => Some(Code::Numpad4),
                winit::keyboard::KeyCode::Numpad5 => Some(Code::Numpad5),
                winit::keyboard::KeyCode::Numpad6 => Some(Code::Numpad6),
                winit::keyboard::KeyCode::Numpad7 => Some(Code::Numpad7),
                winit::keyboard::KeyCode::Numpad8 => Some(Code::Numpad8),
                winit::keyboard::KeyCode::Numpad9 => Some(Code::Numpad9),
                winit::keyboard::KeyCode::NumpadAdd => Some(Code::NumpadAdd),
                winit::keyboard::KeyCode::NumpadBackspace => Some(Code::NumpadBackspace),
                winit::keyboard::KeyCode::NumpadClear => Some(Code::NumpadClear),
                winit::keyboard::KeyCode::NumpadClearEntry => Some(Code::NumpadClearEntry),
                winit::keyboard::KeyCode::NumpadComma => Some(Code::NumpadComma),
                winit::keyboard::KeyCode::NumpadDecimal => Some(Code::NumpadDecimal),
                winit::keyboard::KeyCode::NumpadDivide => Some(Code::NumpadDivide),
                winit::keyboard::KeyCode::NumpadEnter => Some(Code::NumpadEnter),
                winit::keyboard::KeyCode::NumpadEqual => Some(Code::NumpadEqual),
                winit::keyboard::KeyCode::NumpadHash => Some(Code::NumpadHash),
                winit::keyboard::KeyCode::NumpadMemoryAdd => Some(Code::NumpadMemoryAdd),
                winit::keyboard::KeyCode::NumpadMemoryClear => Some(Code::NumpadMemoryClear),
                winit::keyboard::KeyCode::NumpadMemoryRecall => Some(Code::NumpadMemoryRecall),
                winit::keyboard::KeyCode::NumpadMemoryStore => Some(Code::NumpadMemoryStore),
                winit::keyboard::KeyCode::NumpadMemorySubtract => Some(Code::NumpadMemorySubtract),
                winit::keyboard::KeyCode::NumpadMultiply => Some(Code::NumpadMultiply),
                winit::keyboard::KeyCode::NumpadParenLeft => Some(Code::NumpadParenLeft),
                winit::keyboard::KeyCode::NumpadParenRight => Some(Code::NumpadParenRight),
                winit::keyboard::KeyCode::NumpadStar => Some(Code::NumpadStar),
                winit::keyboard::KeyCode::NumpadSubtract => Some(Code::NumpadSubtract),
                winit::keyboard::KeyCode::Escape => Some(Code::Escape),
                winit::keyboard::KeyCode::Fn => Some(Code::Fn),
                winit::keyboard::KeyCode::FnLock => Some(Code::FnLock),
                winit::keyboard::KeyCode::PrintScreen => Some(Code::PrintScreen),
                winit::keyboard::KeyCode::ScrollLock => Some(Code::ScrollLock),
                winit::keyboard::KeyCode::Pause => Some(Code::Pause),
                winit::keyboard::KeyCode::BrowserBack => Some(Code::BrowserBack),
                winit::keyboard::KeyCode::BrowserFavorites => Some(Code::BrowserFavorites),
                winit::keyboard::KeyCode::BrowserForward => Some(Code::BrowserForward),
                winit::keyboard::KeyCode::BrowserHome => Some(Code::BrowserHome),
                winit::keyboard::KeyCode::BrowserRefresh => Some(Code::BrowserRefresh),
                winit::keyboard::KeyCode::BrowserSearch => Some(Code::BrowserSearch),
                winit::keyboard::KeyCode::BrowserStop => Some(Code::BrowserStop),
                winit::keyboard::KeyCode::Eject => Some(Code::Eject),
                winit::keyboard::KeyCode::LaunchApp1 => Some(Code::LaunchApp1),
                winit::keyboard::KeyCode::LaunchApp2 => Some(Code::LaunchApp2),
                winit::keyboard::KeyCode::LaunchMail => Some(Code::LaunchMail),
                winit::keyboard::KeyCode::MediaPlayPause => Some(Code::MediaPlayPause),
                winit::keyboard::KeyCode::MediaSelect => Some(Code::MediaSelect),
                winit::keyboard::KeyCode::MediaStop => Some(Code::MediaStop),
                winit::keyboard::KeyCode::MediaTrackNext => Some(Code::MediaTrackNext),
                winit::keyboard::KeyCode::MediaTrackPrevious => Some(Code::MediaTrackPrevious),
                winit::keyboard::KeyCode::Power => Some(Code::Power),
                winit::keyboard::KeyCode::Sleep => Some(Code::Sleep),
                winit::keyboard::KeyCode::AudioVolumeDown => Some(Code::AudioVolumeDown),
                winit::keyboard::KeyCode::AudioVolumeMute => Some(Code::AudioVolumeMute),
                winit::keyboard::KeyCode::AudioVolumeUp => Some(Code::AudioVolumeUp),
                winit::keyboard::KeyCode::WakeUp => Some(Code::WakeUp),
                winit::keyboard::KeyCode::Meta => Some(Code::Meta),
                winit::keyboard::KeyCode::Hyper => Some(Code::Hyper),
                winit::keyboard::KeyCode::Turbo => Some(Code::Turbo),
                winit::keyboard::KeyCode::Abort => Some(Code::Abort),
                winit::keyboard::KeyCode::Resume => Some(Code::Resume),
                winit::keyboard::KeyCode::Suspend => Some(Code::Suspend),
                winit::keyboard::KeyCode::Again => Some(Code::Again),
                winit::keyboard::KeyCode::Copy => Some(Code::Copy),
                winit::keyboard::KeyCode::Cut => Some(Code::Cut),
                winit::keyboard::KeyCode::Find => Some(Code::Find),
                winit::keyboard::KeyCode::Open => Some(Code::Open),
                winit::keyboard::KeyCode::Paste => Some(Code::Paste),
                winit::keyboard::KeyCode::Props => Some(Code::Props),
                winit::keyboard::KeyCode::Select => Some(Code::Select),
                winit::keyboard::KeyCode::Undo => Some(Code::Undo),
                winit::keyboard::KeyCode::Hiragana => Some(Code::Hiragana),
                winit::keyboard::KeyCode::Katakana => Some(Code::Katakana),
                winit::keyboard::KeyCode::F1 => Some(Code::F1),
                winit::keyboard::KeyCode::F2 => Some(Code::F2),
                winit::keyboard::KeyCode::F3 => Some(Code::F3),
                winit::keyboard::KeyCode::F4 => Some(Code::F4),
                winit::keyboard::KeyCode::F5 => Some(Code::F5),
                winit::keyboard::KeyCode::F6 => Some(Code::F6),
                winit::keyboard::KeyCode::F7 => Some(Code::F7),
                winit::keyboard::KeyCode::F8 => Some(Code::F8),
                winit::keyboard::KeyCode::F9 => Some(Code::F9),
                winit::keyboard::KeyCode::F10 => Some(Code::F10),
                winit::keyboard::KeyCode::F11 => Some(Code::F11),
                winit::keyboard::KeyCode::F12 => Some(Code::F12),
                winit::keyboard::KeyCode::F13 => Some(Code::F13),
                winit::keyboard::KeyCode::F14 => Some(Code::F14),
                winit::keyboard::KeyCode::F15 => Some(Code::F15),
                winit::keyboard::KeyCode::F16 => Some(Code::F16),
                winit::keyboard::KeyCode::F17 => Some(Code::F17),
                winit::keyboard::KeyCode::F18 => Some(Code::F18),
                winit::keyboard::KeyCode::F19 => Some(Code::F19),
                winit::keyboard::KeyCode::F20 => Some(Code::F20),
                winit::keyboard::KeyCode::F21 => Some(Code::F21),
                winit::keyboard::KeyCode::F22 => Some(Code::F22),
                winit::keyboard::KeyCode::F23 => Some(Code::F23),
                winit::keyboard::KeyCode::F24 => Some(Code::F24),
                winit::keyboard::KeyCode::F25 => Some(Code::F25),
                winit::keyboard::KeyCode::F26 => Some(Code::F26),
                winit::keyboard::KeyCode::F27 => Some(Code::F27),
                winit::keyboard::KeyCode::F28 => Some(Code::F28),
                winit::keyboard::KeyCode::F29 => Some(Code::F29),
                winit::keyboard::KeyCode::F30 => Some(Code::F30),
                winit::keyboard::KeyCode::F31 => Some(Code::F31),
                winit::keyboard::KeyCode::F32 => Some(Code::F32),
                winit::keyboard::KeyCode::F33 => Some(Code::F33),
                winit::keyboard::KeyCode::F34 => Some(Code::F34),
                winit::keyboard::KeyCode::F35 => Some(Code::F35),
                _ => None,
            },
            winit::keyboard::PhysicalKey::Unidentified(_) => None,
        }
    }
}

impl FromStr for Code {
    type Err = String;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Escape" => Ok(Code::Escape),
            "Digit1" => Ok(Code::Digit1),
            "Digit2" => Ok(Code::Digit2),
            "Digit3" => Ok(Code::Digit3),
            "Digit4" => Ok(Code::Digit4),
            "Digit5" => Ok(Code::Digit5),
            "Digit6" => Ok(Code::Digit6),
            "Digit7" => Ok(Code::Digit7),
            "Digit8" => Ok(Code::Digit8),
            "Digit9" => Ok(Code::Digit9),
            "Digit0" => Ok(Code::Digit0),
            "Minus" => Ok(Code::Minus),
            "Equal" => Ok(Code::Equal),
            "Backspace" => Ok(Code::Backspace),
            "Tab" => Ok(Code::Tab),
            "KeyQ" => Ok(Code::KeyQ),
            "KeyW" => Ok(Code::KeyW),
            "KeyE" => Ok(Code::KeyE),
            "KeyR" => Ok(Code::KeyR),
            "KeyT" => Ok(Code::KeyT),
            "KeyY" => Ok(Code::KeyY),
            "KeyU" => Ok(Code::KeyU),
            "KeyI" => Ok(Code::KeyI),
            "KeyO" => Ok(Code::KeyO),
            "KeyP" => Ok(Code::KeyP),
            "BracketLeft" => Ok(Code::BracketLeft),
            "BracketRight" => Ok(Code::BracketRight),
            "Enter" => Ok(Code::Enter),
            "ControlLeft" => Ok(Code::ControlLeft),
            "KeyA" => Ok(Code::KeyA),
            "KeyS" => Ok(Code::KeyS),
            "KeyD" => Ok(Code::KeyD),
            "KeyF" => Ok(Code::KeyF),
            "KeyG" => Ok(Code::KeyG),
            "KeyH" => Ok(Code::KeyH),
            "KeyJ" => Ok(Code::KeyJ),
            "KeyK" => Ok(Code::KeyK),
            "KeyL" => Ok(Code::KeyL),
            "Semicolon" => Ok(Code::Semicolon),
            "Quote" => Ok(Code::Quote),
            "Backquote" => Ok(Code::Backquote),
            "ShiftLeft" => Ok(Code::ShiftLeft),
            "Backslash" => Ok(Code::Backslash),
            "KeyZ" => Ok(Code::KeyZ),
            "KeyX" => Ok(Code::KeyX),
            "KeyC" => Ok(Code::KeyC),
            "KeyV" => Ok(Code::KeyV),
            "KeyB" => Ok(Code::KeyB),
            "KeyN" => Ok(Code::KeyN),
            "KeyM" => Ok(Code::KeyM),
            "Comma" => Ok(Code::Comma),
            "Period" => Ok(Code::Period),
            "Slash" => Ok(Code::Slash),
            "ShiftRight" => Ok(Code::ShiftRight),
            "AltLeft" => Ok(Code::AltLeft),
            "Space" => Ok(Code::Space),
            "CapsLock" => Ok(Code::CapsLock),
            "F1" => Ok(Code::F1),
            "F2" => Ok(Code::F2),
            "F3" => Ok(Code::F3),
            "F4" => Ok(Code::F4),
            "F5" => Ok(Code::F5),
            "F6" => Ok(Code::F6),
            "F7" => Ok(Code::F7),
            "F8" => Ok(Code::F8),
            "F9" => Ok(Code::F9),
            "F10" => Ok(Code::F10),
            "Pause" => Ok(Code::Pause),
            "ScrollLock" => Ok(Code::ScrollLock),
            "IntlBackslash" => Ok(Code::IntlBackslash),
            "F11" => Ok(Code::F11),
            "F12" => Ok(Code::F12),
            "ControlRight" => Ok(Code::ControlRight),
            "PrintScreen" => Ok(Code::PrintScreen),
            "AltRight" => Ok(Code::AltRight),
            "NumLock" => Ok(Code::NumLock),
            "Home" => Ok(Code::Home),
            "ArrowUp" => Ok(Code::ArrowUp),
            "PageUp" => Ok(Code::PageUp),
            "ArrowLeft" => Ok(Code::ArrowLeft),
            "ArrowRight" => Ok(Code::ArrowRight),
            "End" => Ok(Code::End),
            "ArrowDown" => Ok(Code::ArrowDown),
            "PageDown" => Ok(Code::PageDown),
            "Insert" => Ok(Code::Insert),
            "Delete" => Ok(Code::Delete),
            "ContextMenu" => Ok(Code::ContextMenu),
            _ => Err(format!("Unknown code: {}", s)),
        }
    }
}

impl ToString for Code {
    fn to_string(&self) -> String {
        match self {
            Code::Escape => "Escape".to_string(),
            Code::Digit1 => "Digit1".to_string(),
            Code::Digit2 => "Digit2".to_string(),
            Code::Digit3 => "Digit3".to_string(),
            Code::Digit4 => "Digit4".to_string(),
            Code::Digit5 => "Digit5".to_string(),
            Code::Digit6 => "Digit6".to_string(),
            Code::Digit7 => "Digit7".to_string(),
            Code::Digit8 => "Digit8".to_string(),
            Code::Digit9 => "Digit9".to_string(),
            Code::Digit0 => "Digit0".to_string(),
            Code::Minus => "Minus".to_string(),
            Code::Equal => "Equal".to_string(),
            Code::Backspace => "Backspace".to_string(),
            Code::Tab => "Tab".to_string(),
            Code::KeyQ => "KeyQ".to_string(),
            Code::KeyW => "KeyW".to_string(),
            Code::KeyE => "KeyE".to_string(),
            Code::KeyR => "KeyR".to_string(),
            Code::KeyT => "KeyT".to_string(),
            Code::KeyY => "KeyY".to_string(),
            Code::KeyU => "KeyU".to_string(),
            Code::KeyI => "KeyI".to_string(),
            Code::KeyO => "KeyO".to_string(),
            Code::KeyP => "KeyP".to_string(),
            Code::BracketLeft => "BracketLeft".to_string(),
            Code::BracketRight => "BracketRight".to_string(),
            Code::Enter => "Enter".to_string(),
            Code::ControlLeft => "ControlLeft".to_string(),
            Code::KeyA => "KeyA".to_string(),
            Code::KeyS => "KeyS".to_string(),
            Code::KeyD => "KeyD".to_string(),
            Code::KeyF => "KeyF".to_string(),
            Code::KeyG => "KeyG".to_string(),
            Code::KeyH => "KeyH".to_string(),
            Code::KeyJ => "KeyJ".to_string(),
            Code::KeyK => "KeyK".to_string(),
            Code::KeyL => "KeyL".to_string(),
            Code::Semicolon => "Semicolon".to_string(),
            Code::Quote => "Quote".to_string(),
            Code::Backquote => "Backquote".to_string(),
            Code::ShiftLeft => "ShiftLeft".to_string(),
            Code::Backslash => "Backslash".to_string(),
            Code::KeyZ => "KeyZ".to_string(),
            Code::KeyX => "KeyX".to_string(),
            Code::KeyC => "KeyC".to_string(),
            Code::KeyV => "KeyV".to_string(),
            Code::KeyB => "KeyB".to_string(),
            Code::KeyN => "KeyN".to_string(),
            Code::KeyM => "KeyM".to_string(),
            Code::Comma => "Comma".to_string(),
            Code::Period => "Period".to_string(),
            Code::Slash => "Slash".to_string(),
            Code::ShiftRight => "ShiftRight".to_string(),
            Code::AltLeft => "AltLeft".to_string(),
            Code::Space => "Space".to_string(),
            Code::CapsLock => "CapsLock".to_string(),
            Code::F1 => "F1".to_string(),
            Code::F2 => "F2".to_string(),
            Code::F3 => "F3".to_string(),
            Code::F4 => "F4".to_string(),
            Code::F5 => "F5".to_string(),
            Code::F6 => "F6".to_string(),
            Code::F7 => "F7".to_string(),
            Code::F8 => "F8".to_string(),
            Code::F9 => "F9".to_string(),
            Code::F10 => "F10".to_string(),
            Code::Pause => "Pause".to_string(),
            Code::ScrollLock => "ScrollLock".to_string(),
            Code::IntlBackslash => "IntlBackslash".to_string(),
            Code::F11 => "F11".to_string(),
            Code::F12 => "F12".to_string(),
            Code::ControlRight => "ControlRight".to_string(),
            Code::PrintScreen => "PrintScreen".to_string(),
            Code::AltRight => "AltRight".to_string(),
            Code::NumLock => "NumLock".to_string(),
            Code::Home => "Home".to_string(),
            Code::ArrowUp => "ArrowUp".to_string(),
            Code::PageUp => "PageUp".to_string(),
            Code::ArrowLeft => "ArrowLeft".to_string(),
            Code::ArrowRight => "ArrowRight".to_string(),
            Code::End => "End".to_string(),
            Code::ArrowDown => "ArrowDown".to_string(),
            Code::PageDown => "PageDown".to_string(),
            Code::Insert => "Insert".to_string(),
            Code::Delete => "Delete".to_string(),
            Code::ContextMenu => "ContextMenu".to_string(),
            Code::IntlRo => "IntlRo".to_string(),
            Code::IntlYen => "IntlYen".to_string(),
            Code::SuperLeft => "SuperLeft".to_string(),
            Code::SuperRight => "SuperRight".to_string(),
            Code::Convert => "Convert".to_string(),
            Code::KanaMode => "KanaMode".to_string(),
            Code::Lang1 => "Lang1".to_string(),
            Code::Lang2 => "Lang2".to_string(),
            Code::Lang3 => "Lang3".to_string(),
            Code::Lang4 => "Lang4".to_string(),
            Code::Lang5 => "Lang5".to_string(),
            Code::NonConvert => "NonConvert".to_string(),
            Code::Help => "Help".to_string(),
            Code::Numpad0 => "Numpad0".to_string(),
            Code::Numpad1 => "Numpad1".to_string(),
            Code::Numpad2 => "Numpad2".to_string(),
            Code::Numpad3 => "Numpad3".to_string(),
            Code::Numpad4 => "Numpad4".to_string(),
            Code::Numpad5 => "Numpad5".to_string(),
            Code::Numpad6 => "Numpad6".to_string(),
            Code::Numpad7 => "Numpad7".to_string(),
            Code::Numpad8 => "Numpad8".to_string(),
            Code::Numpad9 => "Numpad9".to_string(),
            Code::NumpadAdd => "NumpadAdd".to_string(),
            Code::NumpadBackspace => "NumpadBackspace".to_string(),
            Code::NumpadClear => "NumpadClear".to_string(),
            Code::NumpadClearEntry => "NumpadClearEntry".to_string(),
            Code::NumpadComma => "NumpadComma".to_string(),
            Code::NumpadDecimal => "NumpadDecimal".to_string(),
            Code::NumpadDivide => "NumpadDivide".to_string(),
            Code::NumpadEnter => "NumpadEnter".to_string(),
            Code::NumpadEqual => "NumpadEqual".to_string(),
            Code::NumpadHash => "NumpadHash".to_string(),
            Code::NumpadMemoryAdd => "NumpadMemoryAdd".to_string(),
            Code::NumpadMemoryClear => "NumpadMemoryClear".to_string(),
            Code::NumpadMemoryRecall => "NumpadMemoryRecall".to_string(),
            Code::NumpadMemoryStore => "NumpadMemoryStore".to_string(),
            Code::NumpadMemorySubtract => "NumpadMemorySubtract".to_string(),
            Code::NumpadMultiply => "NumpadMultiply".to_string(),
            Code::NumpadParenLeft => "NumpadParenLeft".to_string(),
            Code::NumpadParenRight => "NumpadParenRight".to_string(),
            Code::NumpadStar => "NumpadStar".to_string(),
            Code::NumpadSubtract => "NumpadSubtract".to_string(),
            Code::Fn => "Fn".to_string(),
            Code::FnLock => "FnLock".to_string(),
            Code::BrowserBack => "BrowserBack".to_string(),
            Code::BrowserFavorites => "BrowserFavorites".to_string(),
            Code::BrowserForward => "BrowserForward".to_string(),
            Code::BrowserHome => "BrowserHome".to_string(),
            Code::BrowserRefresh => "BrowserRefresh".to_string(),
            Code::BrowserSearch => "BrowserSearch".to_string(),
            Code::BrowserStop => "BrowserStop".to_string(),
            Code::Eject => "Eject".to_string(),
            Code::LaunchApp1 => "LaunchApp1".to_string(),
            Code::LaunchApp2 => "LaunchApp2".to_string(),
            Code::LaunchMail => "LaunchMail".to_string(),
            Code::MediaPlayPause => "MediaPlayPause".to_string(),
            Code::MediaSelect => "MediaSelect".to_string(),
            Code::MediaStop => "MediaStop".to_string(),
            Code::MediaTrackNext => "MediaTrackNext".to_string(),
            Code::MediaTrackPrevious => "MediaTrackPrevious".to_string(),
            Code::Power => "Power".to_string(),
            Code::Sleep => "Sleep".to_string(),
            Code::AudioVolumeDown => "AudioVolumeDown".to_string(),
            Code::AudioVolumeMute => "AudioVolumeMute".to_string(),
            Code::AudioVolumeUp => "AudioVolumeUp".to_string(),
            Code::WakeUp => "WakeUp".to_string(),
            Code::Meta => "Meta".to_string(),
            Code::Hyper => "Hyper".to_string(),
            Code::Turbo => "Turbo".to_string(),
            Code::Abort => "Abort".to_string(),
            Code::Resume => "Resume".to_string(),
            Code::Suspend => "Suspend".to_string(),
            Code::Again => "Again".to_string(),
            Code::Copy => "Copy".to_string(),
            Code::Cut => "Cut".to_string(),
            Code::Find => "Find".to_string(),
            Code::Open => "Open".to_string(),
            Code::Paste => "Paste".to_string(),
            Code::Props => "Props".to_string(),
            Code::Select => "Select".to_string(),
            Code::Undo => "Undo".to_string(),
            Code::Hiragana => "Hiragana".to_string(),
            Code::Katakana => "Katakana".to_string(),
            Code::F13 => "F13".to_string(),
            Code::F14 => "F14".to_string(),
            Code::F15 => "F15".to_string(),
            Code::F16 => "F16".to_string(),
            Code::F17 => "F17".to_string(),
            Code::F18 => "F18".to_string(),
            Code::F19 => "F19".to_string(),
            Code::F20 => "F20".to_string(),
            Code::F21 => "F21".to_string(),
            Code::F22 => "F22".to_string(),
            Code::F23 => "F23".to_string(),
            Code::F24 => "F24".to_string(),
            Code::F25 => "F25".to_string(),
            Code::F26 => "F26".to_string(),
            Code::F27 => "F27".to_string(),
            Code::F28 => "F28".to_string(),
            Code::F29 => "F29".to_string(),
            Code::F30 => "F30".to_string(),
            Code::F31 => "F31".to_string(),
            Code::F32 => "F32".to_string(),
            Code::F33 => "F33".to_string(),
            Code::F34 => "F34".to_string(),
            Code::F35 => "F35".to_string(),
        }
    }
}
