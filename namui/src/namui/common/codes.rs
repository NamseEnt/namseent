// NOTE : Reference 1 - https://www.w3.org/TR/uievents-code/
// NOTE : Reference 2 - https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values
// NOTE : YOU MUST NOT CHANGE ENUM NAMES!
use std::str::FromStr;
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum Code {
    Escape,
    Digit1,
    Digit2,
    Digit3,
    Digit4,
    Digit5,
    Digit6,
    Digit7,
    Digit8,
    Digit9,
    Digit0,
    Minus,
    Equal,
    Backspace,
    Tab,
    KeyQ,
    KeyW,
    KeyE,
    KeyR,
    KeyT,
    KeyY,
    KeyU,
    KeyI,
    KeyO,
    KeyP,
    BracketLeft,
    BracketRight,
    Enter,
    ControlLeft,
    KeyA,
    KeyS,
    KeyD,
    KeyF,
    KeyG,
    KeyH,
    KeyJ,
    KeyK,
    KeyL,
    Semicolon,
    Quote,
    Backquote,
    ShiftLeft,
    Backslash,
    KeyZ,
    KeyX,
    KeyC,
    KeyV,
    KeyB,
    KeyN,
    KeyM,
    Comma,
    Period,
    Slash,
    ShiftRight,
    AltLeft,
    Space,
    CapsLock,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    Pause,
    ScrollLock,
    IntlBackslash,
    F11,
    F12,
    ControlRight,
    PrintScreen,
    AltRight,
    NumLock,
    Home,
    ArrowUp,
    PageUp,
    ArrowLeft,
    ArrowRight,
    End,
    ArrowDown,
    PageDown,
    Insert,
    Delete,
    ContextMenu,
}

impl FromStr for Code {
    type Err = String;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Escape" => Ok(Code::Escape),
            "Digit1" => Ok(Code::Digit1),
            "Digit2" => Ok(Code::Digit2),
            "Digit3" => Ok(Code::Digit3),
            "Digit4" => Ok(Code::Digit4),
            "Digit5" => Ok(Code::Digit5),
            "Digit6" => Ok(Code::Digit6),
            "Digit7" => Ok(Code::Digit7),
            "Digit8" => Ok(Code::Digit8),
            "Digit9" => Ok(Code::Digit9),
            "Digit0" => Ok(Code::Digit0),
            "Minus" => Ok(Code::Minus),
            "Equal" => Ok(Code::Equal),
            "Backspace" => Ok(Code::Backspace),
            "Tab" => Ok(Code::Tab),
            "KeyQ" => Ok(Code::KeyQ),
            "KeyW" => Ok(Code::KeyW),
            "KeyE" => Ok(Code::KeyE),
            "KeyR" => Ok(Code::KeyR),
            "KeyT" => Ok(Code::KeyT),
            "KeyY" => Ok(Code::KeyY),
            "KeyU" => Ok(Code::KeyU),
            "KeyI" => Ok(Code::KeyI),
            "KeyO" => Ok(Code::KeyO),
            "KeyP" => Ok(Code::KeyP),
            "BracketLeft" => Ok(Code::BracketLeft),
            "BracketRight" => Ok(Code::BracketRight),
            "Enter" => Ok(Code::Enter),
            "ControlLeft" => Ok(Code::ControlLeft),
            "KeyA" => Ok(Code::KeyA),
            "KeyS" => Ok(Code::KeyS),
            "KeyD" => Ok(Code::KeyD),
            "KeyF" => Ok(Code::KeyF),
            "KeyG" => Ok(Code::KeyG),
            "KeyH" => Ok(Code::KeyH),
            "KeyJ" => Ok(Code::KeyJ),
            "KeyK" => Ok(Code::KeyK),
            "KeyL" => Ok(Code::KeyL),
            "Semicolon" => Ok(Code::Semicolon),
            "Quote" => Ok(Code::Quote),
            "Backquote" => Ok(Code::Backquote),
            "ShiftLeft" => Ok(Code::ShiftLeft),
            "Backslash" => Ok(Code::Backslash),
            "KeyZ" => Ok(Code::KeyZ),
            "KeyX" => Ok(Code::KeyX),
            "KeyC" => Ok(Code::KeyC),
            "KeyV" => Ok(Code::KeyV),
            "KeyB" => Ok(Code::KeyB),
            "KeyN" => Ok(Code::KeyN),
            "KeyM" => Ok(Code::KeyM),
            "Comma" => Ok(Code::Comma),
            "Period" => Ok(Code::Period),
            "Slash" => Ok(Code::Slash),
            "ShiftRight" => Ok(Code::ShiftRight),
            "AltLeft" => Ok(Code::AltLeft),
            "Space" => Ok(Code::Space),
            "CapsLock" => Ok(Code::CapsLock),
            "F1" => Ok(Code::F1),
            "F2" => Ok(Code::F2),
            "F3" => Ok(Code::F3),
            "F4" => Ok(Code::F4),
            "F5" => Ok(Code::F5),
            "F6" => Ok(Code::F6),
            "F7" => Ok(Code::F7),
            "F8" => Ok(Code::F8),
            "F9" => Ok(Code::F9),
            "F10" => Ok(Code::F10),
            "Pause" => Ok(Code::Pause),
            "ScrollLock" => Ok(Code::ScrollLock),
            "IntlBackslash" => Ok(Code::IntlBackslash),
            "F11" => Ok(Code::F11),
            "F12" => Ok(Code::F12),
            "ControlRight" => Ok(Code::ControlRight),
            "PrintScreen" => Ok(Code::PrintScreen),
            "AltRight" => Ok(Code::AltRight),
            "NumLock" => Ok(Code::NumLock),
            "Home" => Ok(Code::Home),
            "ArrowUp" => Ok(Code::ArrowUp),
            "PageUp" => Ok(Code::PageUp),
            "ArrowLeft" => Ok(Code::ArrowLeft),
            "ArrowRight" => Ok(Code::ArrowRight),
            "End" => Ok(Code::End),
            "ArrowDown" => Ok(Code::ArrowDown),
            "PageDown" => Ok(Code::PageDown),
            "Insert" => Ok(Code::Insert),
            "Delete" => Ok(Code::Delete),
            "ContextMenu" => Ok(Code::ContextMenu),
            _ => Err(format!("Unknown code: {}", s)),
        }
    }
}

impl ToString for Code {
    fn to_string(&self) -> String {
        match self {
            Code::Escape => "Escape".to_string(),
            Code::Digit1 => "Digit1".to_string(),
            Code::Digit2 => "Digit2".to_string(),
            Code::Digit3 => "Digit3".to_string(),
            Code::Digit4 => "Digit4".to_string(),
            Code::Digit5 => "Digit5".to_string(),
            Code::Digit6 => "Digit6".to_string(),
            Code::Digit7 => "Digit7".to_string(),
            Code::Digit8 => "Digit8".to_string(),
            Code::Digit9 => "Digit9".to_string(),
            Code::Digit0 => "Digit0".to_string(),
            Code::Minus => "Minus".to_string(),
            Code::Equal => "Equal".to_string(),
            Code::Backspace => "Backspace".to_string(),
            Code::Tab => "Tab".to_string(),
            Code::KeyQ => "KeyQ".to_string(),
            Code::KeyW => "KeyW".to_string(),
            Code::KeyE => "KeyE".to_string(),
            Code::KeyR => "KeyR".to_string(),
            Code::KeyT => "KeyT".to_string(),
            Code::KeyY => "KeyY".to_string(),
            Code::KeyU => "KeyU".to_string(),
            Code::KeyI => "KeyI".to_string(),
            Code::KeyO => "KeyO".to_string(),
            Code::KeyP => "KeyP".to_string(),
            Code::BracketLeft => "BracketLeft".to_string(),
            Code::BracketRight => "BracketRight".to_string(),
            Code::Enter => "Enter".to_string(),
            Code::ControlLeft => "ControlLeft".to_string(),
            Code::KeyA => "KeyA".to_string(),
            Code::KeyS => "KeyS".to_string(),
            Code::KeyD => "KeyD".to_string(),
            Code::KeyF => "KeyF".to_string(),
            Code::KeyG => "KeyG".to_string(),
            Code::KeyH => "KeyH".to_string(),
            Code::KeyJ => "KeyJ".to_string(),
            Code::KeyK => "KeyK".to_string(),
            Code::KeyL => "KeyL".to_string(),
            Code::Semicolon => "Semicolon".to_string(),
            Code::Quote => "Quote".to_string(),
            Code::Backquote => "Backquote".to_string(),
            Code::ShiftLeft => "ShiftLeft".to_string(),
            Code::Backslash => "Backslash".to_string(),
            Code::KeyZ => "KeyZ".to_string(),
            Code::KeyX => "KeyX".to_string(),
            Code::KeyC => "KeyC".to_string(),
            Code::KeyV => "KeyV".to_string(),
            Code::KeyB => "KeyB".to_string(),
            Code::KeyN => "KeyN".to_string(),
            Code::KeyM => "KeyM".to_string(),
            Code::Comma => "Comma".to_string(),
            Code::Period => "Period".to_string(),
            Code::Slash => "Slash".to_string(),
            Code::ShiftRight => "ShiftRight".to_string(),
            Code::AltLeft => "AltLeft".to_string(),
            Code::Space => "Space".to_string(),
            Code::CapsLock => "CapsLock".to_string(),
            Code::F1 => "F1".to_string(),
            Code::F2 => "F2".to_string(),
            Code::F3 => "F3".to_string(),
            Code::F4 => "F4".to_string(),
            Code::F5 => "F5".to_string(),
            Code::F6 => "F6".to_string(),
            Code::F7 => "F7".to_string(),
            Code::F8 => "F8".to_string(),
            Code::F9 => "F9".to_string(),
            Code::F10 => "F10".to_string(),
            Code::Pause => "Pause".to_string(),
            Code::ScrollLock => "ScrollLock".to_string(),
            Code::IntlBackslash => "IntlBackslash".to_string(),
            Code::F11 => "F11".to_string(),
            Code::F12 => "F12".to_string(),
            Code::ControlRight => "ControlRight".to_string(),
            Code::PrintScreen => "PrintScreen".to_string(),
            Code::AltRight => "AltRight".to_string(),
            Code::NumLock => "NumLock".to_string(),
            Code::Home => "Home".to_string(),
            Code::ArrowUp => "ArrowUp".to_string(),
            Code::PageUp => "PageUp".to_string(),
            Code::ArrowLeft => "ArrowLeft".to_string(),
            Code::ArrowRight => "ArrowRight".to_string(),
            Code::End => "End".to_string(),
            Code::ArrowDown => "ArrowDown".to_string(),
            Code::PageDown => "PageDown".to_string(),
            Code::Insert => "Insert".to_string(),
            Code::Delete => "Delete".to_string(),
            Code::ContextMenu => "ContextMenu".to_string(),
            _ => unreachable!("Unknown code: {:?}", self),
        }
    }
}
