---
import { getSession } from "auth-astro/server";
import { db, TicketUsageHistory, Funding, eq } from "astro:db";
import "../styles/global.css";
import UsedTicketsList from "../components/used-tickets/UsedTicketsList.tsx";
import { checkAdmin } from "../utils/auth.ts";

export const prerender = false;

const session = await getSession(Astro.request);

// 로그인 체크
if (!session) {
  return Astro.redirect("/");
}

// 세션에서 사용자 ID 가져오기 (이제 실제 구글 ID 사용)
const userId = session.user?.id || "unknown";
const isAdmin = checkAdmin(session);
console.log("사용할 사용자 ID:", userId);
console.log("Admin 권한:", isAdmin);

// 사용자의 티켓 사용 내역을 날짜 역순으로 가져오기
const usageHistoryWithFunding = await db
  .select({
    id: TicketUsageHistory.id,
    ticketsUsed: TicketUsageHistory.ticketsUsed,
    usedAt: TicketUsageHistory.usedAt,
    fundingId: TicketUsageHistory.fundingId,
    fundingTitle: Funding.title,
    fundingThumbnail: Funding.thumbnail,
  })
  .from(TicketUsageHistory)
  .innerJoin(Funding, eq(TicketUsageHistory.fundingId, Funding.id))
  .where(eq(TicketUsageHistory.userId, userId))
  .orderBy(TicketUsageHistory.usedAt);

// 최신순으로 정렬
const usageHistory = usageHistoryWithFunding.reverse();
---

<html lang="ko">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>사용한 티켓 내역 - 하연이에게 저녁을</title>
  </head>
  <body>
    <UsedTicketsList
      session={session}
      usageHistory={usageHistory}
      client:load
    />
  </body>
</html>
