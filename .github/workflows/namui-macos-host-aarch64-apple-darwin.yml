name: namui-macos-host-aarch64-apple-darwin
on:
  pull_request:

permissions:
  contents: write

concurrency:
  group: ${{ github.ref }}-namui-macos-host-aarch64-apple-darwin
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -D warnings

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PAT_CARGO_LOCK_UPDATE }}
          persist-credentials: false

      - name: Set up cargo
        run: |
          rustup update
          rustup target add ${{ matrix.target }}

      - name: namui-cli cache
        if: matrix.target == 'wasm32-wasip1-threads'
        uses: actions/cache@v4
        with:
          path: |
            namui/namui-cli/binaryen
            namui/namui-cli/emscripten
            namui/namui-cli/target
            namui/namui-cli/wasi-sdk
          key: ${{ matrix.os }}-namui-cli

      - name: Install wasi-sdk
        if: matrix.target == 'wasm32-wasip1-threads'
        working-directory: namui/namui-cli
        run: |
          cargo build

      - name: Workspace cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix: ${{ matrix.os }}-${{ matrix.target }}

      - name: Run commands
        run: |
          cargo test

  code-validation:
    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: wasm32-wasip1-threads
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      # 첫번째 작업하는 애는 checkout 해서 코드 가져오고
      # 작업 다 하고 upload-artifact 로 target 제외하고 올려.
      # 그것을 모든 애들에 대해 반복하고
      # 변경사항 있으면 커밋하고 푸시해.
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PAT_CARGO_LOCK_UPDATE }}
          persist-credentials: false

      - name: Set up cargo
        run: |
          rustup update
          rustup target add ${{ matrix.target }}

      - name: namui-cli cache
        if: matrix.target == 'wasm32-wasip1-threads'
        uses: actions/cache@v4
        with:
          path: |
            namui/namui-cli/binaryen
            namui/namui-cli/emscripten
            namui/namui-cli/target
            namui/namui-cli/wasi-sdk
          key: ${{ matrix.os }}-namui-cli

      - name: Install wasi-sdk
        if: matrix.target == 'wasm32-wasip1-threads'
        working-directory: namui/namui-cli
        run: |
          cargo build

      - name: Workspace cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix: ${{ matrix.os }}-${{ matrix.target }}

      - name: Run commands
        run: |
          cargo test
