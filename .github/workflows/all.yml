name: all
on:
  push:
    # branches: master
  pull_request:

concurrency:
  group: ${{ github.ref }}-all
  cancel-in-progress: true

jobs:
  list-projects:
    runs-on: ubuntu-latest
    outputs:
      project-dirs: ${{ steps.project-dirs.outputs.stdout }}
    steps:
      - uses: actions/checkout@v3

      - run: |
          rustup update
          CARGO_VERSION=$(cargo --version | cut -d ' ' -f 2) && echo "CARGO_VERSION=$CARGO_VERSION" >> $GITHUB_ENV

      - uses: SebRollen/toml-action@v1.0.2
        id: for-all-projects-cargo-toml
        with:
          file: for-all-projects/Cargo.toml
          field: package.version

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/for-all-projects
          key: ${{ runner.os }}-for-all-projects-${{ steps.for-all-projects-cargo-toml.outputs.value }}

      - uses: katyo/publish-crates@v2
        with:
          path: "for-all-projects"
          registry-token: ${{ secrets.CARGO_API_TOKEN }}

      - name: Install for-all-projects
        run: if [ ! -f ~/.cargo/bin/for-all-projects ]; then cargo install for-all-projects; fi

      - name: Output list of project directories
        id: project-dirs
        run: for-all-projects list | jq -c -s -R 'split("\n")[:-1]'

  run-commands:
    runs-on: ubuntu-latest
    needs:
      - list-projects
    strategy:
      matrix:
        dir: ${{ fromJSON(needs.list-projects.outputs.project-dirs) }}
    steps:
      - name: Matrix => (${{ matrix.dir }}
        run: echo "Running in ${{ matrix.dir }}"
