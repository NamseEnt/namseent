name: test-and-fmt-clippy
on:
  pull_request:

permissions:
  contents: write

concurrency:
  group: ${{ github.ref }}-test-and-fmt-clippy
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -D warnings

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            namui_target: x86_64-unknown-linux-gnu
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            namui_target: aarch64-apple-darwin
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            namui_target: x86_64-pc-windows-msvc
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Fast parallel submodule checkout
        run: |
          git submodule update --init --recursive --jobs 16 --depth 1

      - name: Set up cargo
        run: |
          rustup update
          rustup target add ${{ matrix.rust_target }}

      - name: Dependency - x86_64-unknown-linux-gnu
        if: matrix.namui_target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libfontconfig-dev

      - name: workspace-maker cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust_target }}-workspace-maker
          workspaces: "./github-actions-tools/workspace-maker"

      - name: Create workspace Cargo.toml
        run: |
          cargo run --manifest-path github-actions-tools/workspace-maker/Cargo.toml ${{ matrix.namui_target }}

      - name: Workspace cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.namui_target }}

      - name: Run commands
        run: |
          cargo test

  post-test:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - run: |
          echo ${{ join(needs.*.result, ',') }}
          any_test_failed=${{ contains(join(needs.*.result, ','), 'failure') }}
          echo $any_test_failed
          if [[ $any_test_failed == "true" ]]; then
              echo "::error::There are failed job"
              exit 1
          else
              echo "Good. No test failed"
          fi

  fmt-clippy:
    needs:
      - post-test
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            namui_target: x86_64-unknown-linux-gnu
            rust_target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            namui_target: wasm32-wasi-web
            rust_target: wasm32-wasip1-threads
          - os: macos-latest
            namui_target: aarch64-apple-darwin
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            namui_target: x86_64-pc-windows-msvc
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      actions: read
    steps:
      - name: Check if code artifact exists
        id: check-code
        uses: softwareforgood/check-artifact-v4-existence@v0
        with:
          name: code-${{ github.run_id }}

      - name: Download code if exists
        if: steps.check-code.outputs.exists == 'true'
        uses: actions/download-artifact@v4
        with:
          name: code-${{ github.run_id }}
          path: .

      - name: Checkout if first job
        if: steps.check-code.outputs.exists == 'false'
        uses: actions/checkout@v4

      - name: Fast parallel submodule checkout
        if: steps.check-code.outputs.exists == 'false'
        run: |
          git submodule update --init --recursive --jobs 16 --depth 1

      - name: Set up cargo
        run: |
          rustup update
          rustup target add ${{ matrix.rust_target }}

      - name: Dependency - x86_64-unknown-linux-gnu
        if: matrix.namui_target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libfontconfig-dev

      - name: namui-cli cache
        if: matrix.namui_target == 'wasm32-wasi-web'
        uses: actions/cache@v4
        with:
          path: |
            namui/namui-cli/binaryen
            namui/namui-cli/emscripten
            namui/namui-cli/target
            namui/namui-cli/wasi-sdk
          key: ${{ matrix.os }}-namui-cli

      - name: Install wasi-sdk
        if: matrix.namui_target == 'wasm32-wasi-web'
        working-directory: namui/namui-cli
        run: |
          cargo build

      - name: workspace-maker cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust_target }}-workspace-maker
          workspaces: "./github-actions-tools/workspace-maker"

      - name: Create workspace Cargo.toml
        run: |
          cargo run --manifest-path github-actions-tools/workspace-maker/Cargo.toml ${{ matrix.namui_target }}

      - name: Workspace cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.namui_target }}

      - run: cargo fmt --all

      - run: cargo clippy --target ${{ matrix.rust_target }} --tests --fix --allow-dirty

      - name: Upload code for next job
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-${{ github.run_id }}
          path: |
            .
            !target
          overwrite: true

  post-test-and-fmt-clippy:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - test
      - fmt-clippy
    steps:
      - run: |
          echo ${{ join(needs.*.result, ',') }}
          any_test_failed=${{ contains(join(needs.*.result, ','), 'failure') }}
          echo $any_test_failed
          if [[ $any_test_failed == "true" ]]; then
              echo "::error::There are failed job"
              exit 1
          else
              echo "Good. No test failed"
          fi
