// NOTE : Reference 1 - https://www.w3.org/TR/uievents-code/
// NOTE : Reference 2 - https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values
// NOTE : YOU MUST NOT CHANGE ENUM NAMES!
use std::str::FromStr;
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum Code {
    Escape,        // = "Escape",
    Digit1,        // = "Digit1",
    Digit2,        // = "Digit2",
    Digit3,        // = "Digit3",
    Digit4,        // = "Digit4",
    Digit5,        // = "Digit5",
    Digit6,        // = "Digit6",
    Digit7,        // = "Digit7",
    Digit8,        // = "Digit8",
    Digit9,        // = "Digit9",
    Digit0,        // = "Digit0",
    Minus,         // = "Minus",
    Equal,         // = "Equal",
    Backspace,     // = "Backspace",
    Tab,           // = "Tab",
    KeyQ,          // = "KeyQ",
    KeyW,          // = "KeyW",
    KeyE,          // = "KeyE",
    KeyR,          // = "KeyR",
    KeyT,          // = "KeyT",
    KeyY,          // = "KeyY",
    KeyU,          // = "KeyU",
    KeyI,          // = "KeyI",
    KeyO,          // = "KeyO",
    KeyP,          // = "KeyP",
    BracketLeft,   // = "BracketLeft",
    BracketRight,  // = "BracketRight",
    Enter,         // = "Enter",
    ControlLeft,   // = "ControlLeft",
    KeyA,          // = "KeyA",
    KeyS,          // = "KeyS",
    KeyD,          // = "KeyD",
    KeyF,          // = "KeyF",
    KeyG,          // = "KeyG",
    KeyH,          // = "KeyH",
    KeyJ,          // = "KeyJ",
    KeyK,          // = "KeyK",
    KeyL,          // = "KeyL",
    Semicolon,     // = "Semicolon",
    Quote,         // = "Quote",
    Backquote,     // = "Backquote",
    ShiftLeft,     // = "ShiftLeft",
    Backslash,     // = "Backslash",
    KeyZ,          // = "KeyZ",
    KeyX,          // = "KeyX",
    KeyC,          // = "KeyC",
    KeyV,          // = "KeyV",
    KeyB,          // = "KeyB",
    KeyN,          // = "KeyN",
    KeyM,          // = "KeyM",
    Comma,         // = "Comma",
    Period,        // = "Period",
    Slash,         // = "Slash",
    ShiftRight,    // = "ShiftRight",
    AltLeft,       // = "AltLeft",
    Space,         // = "Space",
    CapsLock,      // = "CapsLock",
    F1,            // = "F1",
    F2,            // = "F2",
    F3,            // = "F3",
    F4,            // = "F4",
    F5,            // = "F5",
    F6,            // = "F6",
    F7,            // = "F7",
    F8,            // = "F8",
    F9,            // = "F9",
    F10,           // = "F10",
    Pause,         // = "Pause",
    ScrollLock,    // = "ScrollLock",
    IntlBackslash, // = "IntlBackslash",
    F11,           // = "F11",
    F12,           // = "F12",
    ControlRight,  // = "ControlRight",
    PrintScreen,   // = "PrintScreen",
    AltRight,      // = "AltRight",
    NumLock,       // = "NumLock",
    Home,          // = "Home",
    ArrowUp,       // = "ArrowUp",
    PageUp,        // = "PageUp",
    ArrowLeft,     // = "ArrowLeft",
    ArrowRight,    // = "ArrowRight",
    End,           // = "End",
    ArrowDown,     // = "ArrowDown",
    PageDown,      // = "PageDown",
    Insert,        // = "Insert",
    Delete,        // = "Delete",
    ContextMenu,   // = "ContextMenu",
}

impl FromStr for Code {
    type Err = String;
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Escape" => Ok(Code::Escape),
            "Digit1" => Ok(Code::Digit1),
            "Digit2" => Ok(Code::Digit2),
            "Digit3" => Ok(Code::Digit3),
            "Digit4" => Ok(Code::Digit4),
            "Digit5" => Ok(Code::Digit5),
            "Digit6" => Ok(Code::Digit6),
            "Digit7" => Ok(Code::Digit7),
            "Digit8" => Ok(Code::Digit8),
            "Digit9" => Ok(Code::Digit9),
            "Digit0" => Ok(Code::Digit0),
            "Minus" => Ok(Code::Minus),
            "Equal" => Ok(Code::Equal),
            "Backspace" => Ok(Code::Backspace),
            "Tab" => Ok(Code::Tab),
            "KeyQ" => Ok(Code::KeyQ),
            "KeyW" => Ok(Code::KeyW),
            "KeyE" => Ok(Code::KeyE),
            "KeyR" => Ok(Code::KeyR),
            "KeyT" => Ok(Code::KeyT),
            "KeyY" => Ok(Code::KeyY),
            "KeyU" => Ok(Code::KeyU),
            "KeyI" => Ok(Code::KeyI),
            "KeyO" => Ok(Code::KeyO),
            "KeyP" => Ok(Code::KeyP),
            "BracketLeft" => Ok(Code::BracketLeft),
            "BracketRight" => Ok(Code::BracketRight),
            "Enter" => Ok(Code::Enter),
            "ControlLeft" => Ok(Code::ControlLeft),
            "KeyA" => Ok(Code::KeyA),
            "KeyS" => Ok(Code::KeyS),
            "KeyD" => Ok(Code::KeyD),
            "KeyF" => Ok(Code::KeyF),
            "KeyG" => Ok(Code::KeyG),
            "KeyH" => Ok(Code::KeyH),
            "KeyJ" => Ok(Code::KeyJ),
            "KeyK" => Ok(Code::KeyK),
            "KeyL" => Ok(Code::KeyL),
            "Semicolon" => Ok(Code::Semicolon),
            "Quote" => Ok(Code::Quote),
            "Backquote" => Ok(Code::Backquote),
            "ShiftLeft" => Ok(Code::ShiftLeft),
            "Backslash" => Ok(Code::Backslash),
            "KeyZ" => Ok(Code::KeyZ),
            "KeyX" => Ok(Code::KeyX),
            "KeyC" => Ok(Code::KeyC),
            "KeyV" => Ok(Code::KeyV),
            "KeyB" => Ok(Code::KeyB),
            "KeyN" => Ok(Code::KeyN),
            "KeyM" => Ok(Code::KeyM),
            "Comma" => Ok(Code::Comma),
            "Period" => Ok(Code::Period),
            "Slash" => Ok(Code::Slash),
            "ShiftRight" => Ok(Code::ShiftRight),
            "AltLeft" => Ok(Code::AltLeft),
            "Space" => Ok(Code::Space),
            "CapsLock" => Ok(Code::CapsLock),
            "F1" => Ok(Code::F1),
            "F2" => Ok(Code::F2),
            "F3" => Ok(Code::F3),
            "F4" => Ok(Code::F4),
            "F5" => Ok(Code::F5),
            "F6" => Ok(Code::F6),
            "F7" => Ok(Code::F7),
            "F8" => Ok(Code::F8),
            "F9" => Ok(Code::F9),
            "F10" => Ok(Code::F10),
            "Pause" => Ok(Code::Pause),
            "ScrollLock" => Ok(Code::ScrollLock),
            "IntlBackslash" => Ok(Code::IntlBackslash),
            "F11" => Ok(Code::F11),
            "F12" => Ok(Code::F12),
            "ControlRight" => Ok(Code::ControlRight),
            "PrintScreen" => Ok(Code::PrintScreen),
            "AltRight" => Ok(Code::AltRight),
            "NumLock" => Ok(Code::NumLock),
            "Home" => Ok(Code::Home),
            "ArrowUp" => Ok(Code::ArrowUp),
            "PageUp" => Ok(Code::PageUp),
            "ArrowLeft" => Ok(Code::ArrowLeft),
            "ArrowRight" => Ok(Code::ArrowRight),
            "End" => Ok(Code::End),
            "ArrowDown" => Ok(Code::ArrowDown),
            "PageDown" => Ok(Code::PageDown),
            "Insert" => Ok(Code::Insert),
            "Delete" => Ok(Code::Delete),
            "ContextMenu" => Ok(Code::ContextMenu),
            _ => Err(format!("Unknown code: {}", s)),
        }
    }
}
